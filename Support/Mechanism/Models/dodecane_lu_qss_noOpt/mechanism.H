#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  C
1  H
2  O
3  N
*/

// Species
#define NC12H26_ID 0
#define H_ID 1
#define O_ID 2
#define OH_ID 3
#define HO2_ID 4
#define H2_ID 5
#define H2O_ID 6
#define H2O2_ID 7
#define O2_ID 8
#define CH3_ID 9
#define CH4_ID 10
#define CH2O_ID 11
#define CO_ID 12
#define CO2_ID 13
#define C2H2_ID 14
#define C2H4_ID 15
#define C2H6_ID 16
#define CH2CHO_ID 17
#define aC3H5_ID 18
#define C3H6_ID 19
#define C2H3CHO_ID 20
#define C4H7_ID 21
#define C4H81_ID 22
#define C5H9_ID 23
#define C5H10_ID 24
#define C6H12_ID 25
#define C7H14_ID 26
#define C8H16_ID 27
#define C9H18_ID 28
#define PXC9H19_ID 29
#define C10H20_ID 30
#define C12H24_ID 31
#define C12H25O2_ID 32
#define OC12H23OOH_ID 33
#define N2_ID 34

#define NUM_ELEMENTS 4
#define NUM_SPECIES 35
#define NUM_IONS 0
#define NUM_REACTIONS 268

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(const int i, int& nspec, int* ki, int* nu);
void CKKFKR(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int& mm, int& kk, int& ii, int& nfit)
{
  mm = 4;
  kk = 35;
  ii = 268;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_imw[35] = {
  0.0058706117177410, // NC12H26
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0587993179279120, // OH
  0.0302975216627280, // HO2
  0.4960317460317460, // H2
  0.0555092978073827, // H2O
  0.0293996589639560, // H2O2
  0.0312519532470779, // O2
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0333044694598015, // CH2O
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0384054074813734, // C2H2
  0.0356455407428531, // C2H4
  0.0332557366145660, // C2H6
  0.0232315019165989, // CH2CHO
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0178367579908676, // C2H3CHO
  0.0181488203266788, // C4H7
  0.0178227703714265, // C4H81
  0.0144661275623128, // C5H9
  0.0142582162971412, // C5H10
  0.0118818469142844, // C6H12
  0.0101844402122437, // C7H14
  0.0089113851857133, // C8H16
  0.0079212312761896, // C9H18
  0.0078584844126962, // PXC9H19
  0.0071291081485706, // C10H20
  0.0059409234571422, // C12H24
  0.0049669696518154, // C12H25O2
  0.0046227596950828, // OC12H23OOH
  0.0356964374955379, // N2
};
const amrex::Real h_global_imw[35] = {
  0.0058706117177410, // NC12H26
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0587993179279120, // OH
  0.0302975216627280, // HO2
  0.4960317460317460, // H2
  0.0555092978073827, // H2O
  0.0293996589639560, // H2O2
  0.0312519532470779, // O2
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0333044694598015, // CH2O
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0384054074813734, // C2H2
  0.0356455407428531, // C2H4
  0.0332557366145660, // C2H6
  0.0232315019165989, // CH2CHO
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0178367579908676, // C2H3CHO
  0.0181488203266788, // C4H7
  0.0178227703714265, // C4H81
  0.0144661275623128, // C5H9
  0.0142582162971412, // C5H10
  0.0118818469142844, // C6H12
  0.0101844402122437, // C7H14
  0.0089113851857133, // C8H16
  0.0079212312761896, // C9H18
  0.0078584844126962, // PXC9H19
  0.0071291081485706, // C10H20
  0.0059409234571422, // C12H24
  0.0049669696518154, // C12H25O2
  0.0046227596950828, // OC12H23OOH
  0.0356964374955379, // N2
};

//  molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_mw[35] = {
  170.340000, // NC12H26
  1.008000,   // H
  15.999000,  // O
  17.007000,  // OH
  33.006000,  // HO2
  2.016000,   // H2
  18.015000,  // H2O
  34.014000,  // H2O2
  31.998000,  // O2
  15.035000,  // CH3
  16.043000,  // CH4
  30.026000,  // CH2O
  28.010000,  // CO
  44.009000,  // CO2
  26.038000,  // C2H2
  28.054000,  // C2H4
  30.070000,  // C2H6
  43.045000,  // CH2CHO
  41.073000,  // aC3H5
  42.081000,  // C3H6
  56.064000,  // C2H3CHO
  55.100000,  // C4H7
  56.108000,  // C4H81
  69.127000,  // C5H9
  70.135000,  // C5H10
  84.162000,  // C6H12
  98.189000,  // C7H14
  112.216000, // C8H16
  126.243000, // C9H18
  127.251000, // PXC9H19
  140.270000, // C10H20
  168.324000, // C12H24
  201.330000, // C12H25O2
  216.321000, // OC12H23OOH
  28.014000,  // N2
};
const amrex::Real h_global_mw[35] = {
  170.340000, // NC12H26
  1.008000,   // H
  15.999000,  // O
  17.007000,  // OH
  33.006000,  // HO2
  2.016000,   // H2
  18.015000,  // H2O
  34.014000,  // H2O2
  31.998000,  // O2
  15.035000,  // CH3
  16.043000,  // CH4
  30.026000,  // CH2O
  28.010000,  // CO
  44.009000,  // CO2
  26.038000,  // C2H2
  28.054000,  // C2H4
  30.070000,  // C2H6
  43.045000,  // CH2CHO
  41.073000,  // aC3H5
  42.081000,  // C3H6
  56.064000,  // C2H3CHO
  55.100000,  // C4H7
  56.108000,  // C4H81
  69.127000,  // C5H9
  70.135000,  // C5H10
  84.162000,  // C6H12
  98.189000,  // C7H14
  112.216000, // C8H16
  126.243000, // C9H18
  127.251000, // PXC9H19
  140.270000, // C10H20
  168.324000, // C12H24
  201.330000, // C12H25O2
  216.321000, // OC12H23OOH
  28.014000,  // N2
};

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 0.0058706117177410;  // NC12H26
  imw_new[1] = 0.9920634920634921;  // H
  imw_new[2] = 0.0625039064941559;  // O
  imw_new[3] = 0.0587993179279120;  // OH
  imw_new[4] = 0.0302975216627280;  // HO2
  imw_new[5] = 0.4960317460317460;  // H2
  imw_new[6] = 0.0555092978073827;  // H2O
  imw_new[7] = 0.0293996589639560;  // H2O2
  imw_new[8] = 0.0312519532470779;  // O2
  imw_new[9] = 0.0665114732291320;  // CH3
  imw_new[10] = 0.0623324814560868; // CH4
  imw_new[11] = 0.0333044694598015; // CH2O
  imw_new[12] = 0.0357015351660121; // CO
  imw_new[13] = 0.0227226249176305; // CO2
  imw_new[14] = 0.0384054074813734; // C2H2
  imw_new[15] = 0.0356455407428531; // C2H4
  imw_new[16] = 0.0332557366145660; // C2H6
  imw_new[17] = 0.0232315019165989; // CH2CHO
  imw_new[18] = 0.0243468945535997; // aC3H5
  imw_new[19] = 0.0237636938285687; // C3H6
  imw_new[20] = 0.0178367579908676; // C2H3CHO
  imw_new[21] = 0.0181488203266788; // C4H7
  imw_new[22] = 0.0178227703714265; // C4H81
  imw_new[23] = 0.0144661275623128; // C5H9
  imw_new[24] = 0.0142582162971412; // C5H10
  imw_new[25] = 0.0118818469142844; // C6H12
  imw_new[26] = 0.0101844402122437; // C7H14
  imw_new[27] = 0.0089113851857133; // C8H16
  imw_new[28] = 0.0079212312761896; // C9H18
  imw_new[29] = 0.0078584844126962; // PXC9H19
  imw_new[30] = 0.0071291081485706; // C10H20
  imw_new[31] = 0.0059409234571422; // C12H24
  imw_new[32] = 0.0049669696518154; // C12H25O2
  imw_new[33] = 0.0046227596950828; // OC12H23OOH
  imw_new[34] = 0.0356964374955379; // N2
}

//  inverse molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
imw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_imw[n];
#else
  return h_global_imw[n];
#endif
}
//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 170.340000;  // NC12H26
  mw_new[1] = 1.008000;    // H
  mw_new[2] = 15.999000;   // O
  mw_new[3] = 17.007000;   // OH
  mw_new[4] = 33.006000;   // HO2
  mw_new[5] = 2.016000;    // H2
  mw_new[6] = 18.015000;   // H2O
  mw_new[7] = 34.014000;   // H2O2
  mw_new[8] = 31.998000;   // O2
  mw_new[9] = 15.035000;   // CH3
  mw_new[10] = 16.043000;  // CH4
  mw_new[11] = 30.026000;  // CH2O
  mw_new[12] = 28.010000;  // CO
  mw_new[13] = 44.009000;  // CO2
  mw_new[14] = 26.038000;  // C2H2
  mw_new[15] = 28.054000;  // C2H4
  mw_new[16] = 30.070000;  // C2H6
  mw_new[17] = 43.045000;  // CH2CHO
  mw_new[18] = 41.073000;  // aC3H5
  mw_new[19] = 42.081000;  // C3H6
  mw_new[20] = 56.064000;  // C2H3CHO
  mw_new[21] = 55.100000;  // C4H7
  mw_new[22] = 56.108000;  // C4H81
  mw_new[23] = 69.127000;  // C5H9
  mw_new[24] = 70.135000;  // C5H10
  mw_new[25] = 84.162000;  // C6H12
  mw_new[26] = 98.189000;  // C7H14
  mw_new[27] = 112.216000; // C8H16
  mw_new[28] = 126.243000; // C9H18
  mw_new[29] = 127.251000; // PXC9H19
  mw_new[30] = 140.270000; // C10H20
  mw_new[31] = 168.324000; // C12H24
  mw_new[32] = 201.330000; // C12H25O2
  mw_new[33] = 216.321000; // OC12H23OOH
  mw_new[34] = 28.014000;  // N2
}

//  molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
mw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_mw[n];
#else
  return h_global_mw[n];
#endif
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real& ru, amrex::Real& ruc, amrex::Real& pa)
{
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -3.62181594e+00 + 1.47237711e-01 * tc[1] -
                 9.43970271e-05 * tc[2] + 3.07441268e-08 * tc[3] -
                 4.03602230e-12 * tc[4];
    // species 31: C12H24
    species[31] = -3.96342681e+00 + 1.43992360e-01 * tc[1] -
                  9.61384015e-05 * tc[2] + 3.30174473e-08 * tc[3] -
                  4.62398190e-12 * tc[4];
  } else {
    // species 0: NC12H26
    species[0] = +3.75095037e+01 + 5.63550048e-02 * tc[1] -
                 1.91493200e-05 * tc[2] + 2.96024862e-09 * tc[3] -
                 1.71244150e-13 * tc[4];
    // species 31: C12H24
    species[31] = +3.64002111e+01 + 5.26230753e-02 * tc[1] -
                  1.78624319e-05 * tc[2] + 2.75949863e-09 * tc[3] -
                  1.59562499e-13 * tc[4];
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +1.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 2: O
    species[2] = +2.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 3: OH
    species[3] = +3.12530561e+00 - 3.22544939e-03 * tc[1] +
                 6.52764691e-06 * tc[2] - 5.79853643e-09 * tc[3] +
                 2.06237379e-12 * tc[4];
    // species 4: HO2
    species[4] = +3.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 5: H2
    species[5] = +1.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 6: H2O
    species[6] = +3.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 8: O2
    species[8] = +2.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 9: CH3
    species[9] = +2.67359040e+00 + 2.01095175e-03 * tc[1] +
                 5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                 2.54385734e-12 * tc[4];
    // species 10: CH4
    species[10] = +4.14987613e+00 - 1.36709788e-02 * tc[1] +
                  4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                  1.66693956e-11 * tc[4];
    // species 11: CH2O
    species[11] = +3.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 12: CO
    species[12] = +2.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 13: CO2
    species[13] = +1.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 14: C2H2
    species[14] = -1.91318906e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 15: C2H4
    species[15] = +2.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 16: C2H6
    species[16] = +3.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 17: CH2CHO
    species[17] = +2.40906240e+00 + 1.07385740e-02 * tc[1] +
                  1.89149250e-06 * tc[2] - 7.15858310e-09 * tc[3] +
                  2.86738510e-12 * tc[4];
    // species 18: aC3H5
    species[18] = +3.63183500e-01 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 19: C3H6
    species[19] = +4.93307000e-01 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 20: C2H3CHO
    species[20] = +2.71349800e-01 + 2.62310540e-02 * tc[1] -
                  9.29123050e-06 * tc[2] - 4.78372720e-09 * tc[3] +
                  3.34805430e-12 * tc[4];
    // species 21: C4H7
    species[21] = -2.55505680e-01 + 3.96788570e-02 * tc[1] -
                  2.28980860e-05 * tc[2] + 2.13529730e-09 * tc[3] +
                  2.30963750e-12 * tc[4];
    // species 22: C4H81
    species[22] = +1.81138000e-01 + 3.08533800e-02 * tc[1] +
                  5.08652470e-06 * tc[2] - 2.46548880e-08 * tc[3] +
                  1.11101930e-11 * tc[4];
    // species 23: C5H9
    species[23] = -3.41901110e+00 + 4.04303890e-02 * tc[1] +
                  6.78023390e-06 * tc[2] - 3.37247420e-08 * tc[3] +
                  1.51167130e-11 * tc[4];
    // species 32: C12H25O2
    species[32] = +4.31404000e+00 + 8.93873000e-02 * tc[1] +
                  1.45351000e-05 * tc[2] - 7.49250000e-08 * tc[3] +
                  3.35325000e-11 * tc[4];
    // species 33: OC12H23OOH
    species[33] = +7.80733000e+00 + 6.50623000e-02 * tc[1] +
                  6.95058000e-05 * tc[2] - 1.26905000e-07 * tc[3] +
                  5.10991000e-11 * tc[4];
    // species 34: N2
    species[34] = +2.29867700e+00 + 1.40824040e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485400e-12 * tc[4];
  } else {
    // species 1: H
    species[1] = +1.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 2: O
    species[2] = +1.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 3: OH
    species[3] = +1.86472886e+00 + 1.05650448e-03 * tc[1] -
                 2.59082758e-07 * tc[2] + 3.05218674e-11 * tc[3] -
                 1.33195876e-15 * tc[4];
    // species 4: HO2
    species[4] = +3.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 5: H2
    species[5] = +2.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 6: H2O
    species[6] = +2.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 8: O2
    species[8] = +2.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 9: CH3
    species[9] = +1.28571772e+00 + 7.23990037e-03 * tc[1] -
                 2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                 4.67154394e-14 * tc[4];
    // species 10: CH4
    species[10] = -9.25148505e-01 + 1.33909467e-02 * tc[1] -
                  5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                  1.01815230e-13 * tc[4];
    // species 11: CH2O
    species[11] = +7.60690080e-01 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 12: CO
    species[12] = +1.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 13: CO2
    species[13] = +2.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 14: C2H2
    species[14] = +3.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 15: C2H4
    species[15] = +1.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 16: C2H6
    species[16] = +7.18815000e-02 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 17: CH2CHO
    species[17] = +4.97566990e+00 + 8.13059140e-03 * tc[1] -
                  2.74362450e-06 * tc[2] + 4.07030410e-10 * tc[3] -
                  2.17601710e-14 * tc[4];
    // species 18: aC3H5
    species[18] = +5.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 19: C3H6
    species[19] = +5.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 20: C2H3CHO
    species[20] = +4.81118680e+00 + 1.71142560e-02 * tc[1] -
                  7.48341610e-06 * tc[2] + 1.42522490e-09 * tc[3] -
                  9.17468410e-14 * tc[4];
    // species 21: C4H7
    species[21] = +6.01348350e+00 + 2.26345580e-02 * tc[1] -
                  9.25454700e-06 * tc[2] + 1.68079270e-09 * tc[3] -
                  1.04086170e-13 * tc[4];
    // species 22: C4H81
    species[22] = +1.05358410e+00 + 3.43505070e-02 * tc[1] -
                  1.58831970e-05 * tc[2] + 3.30896620e-09 * tc[3] -
                  2.53610450e-13 * tc[4];
    // species 23: C5H9
    species[23] = +9.13864000e+00 + 2.27141380e-02 * tc[1] -
                  7.79104630e-06 * tc[2] + 1.18765220e-09 * tc[3] -
                  6.59324480e-14 * tc[4];
    // species 32: C12H25O2
    species[32] = +2.74782000e+01 + 5.37539000e-02 * tc[1] -
                  1.68186000e-05 * tc[2] + 2.51367000e-09 * tc[3] -
                  1.47208000e-13 * tc[4];
    // species 33: OC12H23OOH
    species[33] = +2.26731000e+01 + 6.16392000e-02 * tc[1] -
                  2.09836000e-05 * tc[2] + 3.33166000e-09 * tc[3] -
                  2.03590000e-13 * tc[4];
    // species 34: N2
    species[34] = +1.92664000e+00 + 1.48797680e-03 * tc[1] -
                  5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 24: C5H10
    species[24] = -2.06223481e+00 + 5.74218294e-02 * tc[1] -
                  3.74486890e-05 * tc[2] + 1.27364989e-08 * tc[3] -
                  1.79609789e-12 * tc[4];
    // species 25: C6H12
    species[25] = -2.35275205e+00 + 6.98655426e-02 * tc[1] -
                  4.59408022e-05 * tc[2] + 1.56967343e-08 * tc[3] -
                  2.21296175e-12 * tc[4];
    // species 26: C7H14
    species[26] = -2.67720549e+00 + 8.24611601e-02 * tc[1] -
                  5.46504108e-05 * tc[2] + 1.87862303e-08 * tc[3] -
                  2.65737983e-12 * tc[4];
    // species 27: C8H16
    species[27] = -2.89226915e+00 + 9.46066357e-02 * tc[1] -
                  6.27385521e-05 * tc[2] + 2.15158309e-08 * tc[3] -
                  3.02718683e-12 * tc[4];
    // species 28: C9H18
    species[28] = -3.16108263e+00 + 1.06958297e-01 * tc[1] -
                  7.10973244e-05 * tc[2] + 2.43971077e-08 * tc[3] -
                  3.42771547e-12 * tc[4];
    // species 30: C10H20
    species[30] = -3.42901688e+00 + 1.19305598e-01 * tc[1] -
                  7.94489025e-05 * tc[2] + 2.72736596e-08 * tc[3] -
                  3.82718373e-12 * tc[4];
  } else {
    // species 24: C5H10
    species[24] = +1.35851539e+01 + 2.24072471e-02 * tc[1] -
                  7.63348025e-06 * tc[2] + 1.18188966e-09 * tc[3] -
                  6.84385139e-14 * tc[4];
    // species 25: C6H12
    species[25] = +1.68337529e+01 + 2.67377658e-02 * tc[1] -
                  9.10036773e-06 * tc[2] + 1.40819768e-09 * tc[3] -
                  8.15124244e-14 * tc[4];
    // species 26: C7H14
    species[26] = +2.00898039e+01 + 3.10607878e-02 * tc[1] -
                  1.05644793e-05 * tc[2] + 1.63405780e-09 * tc[3] -
                  9.45598219e-14 * tc[4];
    // species 27: C8H16
    species[27] = +2.33540125e+01 + 3.53666462e-02 * tc[1] -
                  1.20208388e-05 * tc[2] + 1.85855053e-09 * tc[3] -
                  1.07522262e-13 * tc[4];
    // species 28: C9H18
    species[28] = +2.66142176e+01 + 3.96825287e-02 * tc[1] -
                  1.34819446e-05 * tc[2] + 2.08390452e-09 * tc[3] -
                  1.20539294e-13 * tc[4];
    // species 30: C10H20
    species[30] = +2.98753903e+01 + 4.39971526e-02 * tc[1] -
                  1.49425530e-05 * tc[2] + 2.30917678e-09 * tc[3] -
                  1.33551477e-13 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 29: PXC9H19
    species[29] = -2.04387292e+00 + 1.05617283e-01 * tc[1] -
                  6.68199971e-05 * tc[2] + 2.14486166e-08 * tc[3] -
                  2.77404275e-12 * tc[4];
  } else {
    // species 29: PXC9H19
    species[29] = +2.73097514e+01 + 4.12657344e-02 * tc[1] -
                  1.40383289e-05 * tc[2] + 2.17174871e-09 * tc[3] -
                  1.25692307e-13 * tc[4];
  }
}

// compute Cp/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -2.62181594e+00 + 1.47237711e-01 * tc[1] -
                 9.43970271e-05 * tc[2] + 3.07441268e-08 * tc[3] -
                 4.03602230e-12 * tc[4];
    // species 31: C12H24
    species[31] = -2.96342681e+00 + 1.43992360e-01 * tc[1] -
                  9.61384015e-05 * tc[2] + 3.30174473e-08 * tc[3] -
                  4.62398190e-12 * tc[4];
  } else {
    // species 0: NC12H26
    species[0] = +3.85095037e+01 + 5.63550048e-02 * tc[1] -
                 1.91493200e-05 * tc[2] + 2.96024862e-09 * tc[3] -
                 1.71244150e-13 * tc[4];
    // species 31: C12H24
    species[31] = +3.74002111e+01 + 5.26230753e-02 * tc[1] -
                  1.78624319e-05 * tc[2] + 2.75949863e-09 * tc[3] -
                  1.59562499e-13 * tc[4];
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +2.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 2: O
    species[2] = +3.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 3: OH
    species[3] = +4.12530561e+00 - 3.22544939e-03 * tc[1] +
                 6.52764691e-06 * tc[2] - 5.79853643e-09 * tc[3] +
                 2.06237379e-12 * tc[4];
    // species 4: HO2
    species[4] = +4.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 5: H2
    species[5] = +2.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 6: H2O
    species[6] = +4.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 8: O2
    species[8] = +3.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 9: CH3
    species[9] = +3.67359040e+00 + 2.01095175e-03 * tc[1] +
                 5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                 2.54385734e-12 * tc[4];
    // species 10: CH4
    species[10] = +5.14987613e+00 - 1.36709788e-02 * tc[1] +
                  4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                  1.66693956e-11 * tc[4];
    // species 11: CH2O
    species[11] = +4.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 12: CO
    species[12] = +3.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 13: CO2
    species[13] = +2.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 14: C2H2
    species[14] = +8.08681094e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 15: C2H4
    species[15] = +3.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 16: C2H6
    species[16] = +4.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 17: CH2CHO
    species[17] = +3.40906240e+00 + 1.07385740e-02 * tc[1] +
                  1.89149250e-06 * tc[2] - 7.15858310e-09 * tc[3] +
                  2.86738510e-12 * tc[4];
    // species 18: aC3H5
    species[18] = +1.36318350e+00 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 19: C3H6
    species[19] = +1.49330700e+00 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 20: C2H3CHO
    species[20] = +1.27134980e+00 + 2.62310540e-02 * tc[1] -
                  9.29123050e-06 * tc[2] - 4.78372720e-09 * tc[3] +
                  3.34805430e-12 * tc[4];
    // species 21: C4H7
    species[21] = +7.44494320e-01 + 3.96788570e-02 * tc[1] -
                  2.28980860e-05 * tc[2] + 2.13529730e-09 * tc[3] +
                  2.30963750e-12 * tc[4];
    // species 22: C4H81
    species[22] = +1.18113800e+00 + 3.08533800e-02 * tc[1] +
                  5.08652470e-06 * tc[2] - 2.46548880e-08 * tc[3] +
                  1.11101930e-11 * tc[4];
    // species 23: C5H9
    species[23] = -2.41901110e+00 + 4.04303890e-02 * tc[1] +
                  6.78023390e-06 * tc[2] - 3.37247420e-08 * tc[3] +
                  1.51167130e-11 * tc[4];
    // species 32: C12H25O2
    species[32] = +5.31404000e+00 + 8.93873000e-02 * tc[1] +
                  1.45351000e-05 * tc[2] - 7.49250000e-08 * tc[3] +
                  3.35325000e-11 * tc[4];
    // species 33: OC12H23OOH
    species[33] = +8.80733000e+00 + 6.50623000e-02 * tc[1] +
                  6.95058000e-05 * tc[2] - 1.26905000e-07 * tc[3] +
                  5.10991000e-11 * tc[4];
    // species 34: N2
    species[34] = +3.29867700e+00 + 1.40824040e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485400e-12 * tc[4];
  } else {
    // species 1: H
    species[1] = +2.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 2: O
    species[2] = +2.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 3: OH
    species[3] = +2.86472886e+00 + 1.05650448e-03 * tc[1] -
                 2.59082758e-07 * tc[2] + 3.05218674e-11 * tc[3] -
                 1.33195876e-15 * tc[4];
    // species 4: HO2
    species[4] = +4.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 5: H2
    species[5] = +3.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 6: H2O
    species[6] = +3.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 8: O2
    species[8] = +3.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 9: CH3
    species[9] = +2.28571772e+00 + 7.23990037e-03 * tc[1] -
                 2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                 4.67154394e-14 * tc[4];
    // species 10: CH4
    species[10] = +7.48514950e-02 + 1.33909467e-02 * tc[1] -
                  5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                  1.01815230e-13 * tc[4];
    // species 11: CH2O
    species[11] = +1.76069008e+00 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 12: CO
    species[12] = +2.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 13: CO2
    species[13] = +3.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 14: C2H2
    species[14] = +4.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 15: C2H4
    species[15] = +2.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 16: C2H6
    species[16] = +1.07188150e+00 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 17: CH2CHO
    species[17] = +5.97566990e+00 + 8.13059140e-03 * tc[1] -
                  2.74362450e-06 * tc[2] + 4.07030410e-10 * tc[3] -
                  2.17601710e-14 * tc[4];
    // species 18: aC3H5
    species[18] = +6.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 19: C3H6
    species[19] = +6.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 20: C2H3CHO
    species[20] = +5.81118680e+00 + 1.71142560e-02 * tc[1] -
                  7.48341610e-06 * tc[2] + 1.42522490e-09 * tc[3] -
                  9.17468410e-14 * tc[4];
    // species 21: C4H7
    species[21] = +7.01348350e+00 + 2.26345580e-02 * tc[1] -
                  9.25454700e-06 * tc[2] + 1.68079270e-09 * tc[3] -
                  1.04086170e-13 * tc[4];
    // species 22: C4H81
    species[22] = +2.05358410e+00 + 3.43505070e-02 * tc[1] -
                  1.58831970e-05 * tc[2] + 3.30896620e-09 * tc[3] -
                  2.53610450e-13 * tc[4];
    // species 23: C5H9
    species[23] = +1.01386400e+01 + 2.27141380e-02 * tc[1] -
                  7.79104630e-06 * tc[2] + 1.18765220e-09 * tc[3] -
                  6.59324480e-14 * tc[4];
    // species 32: C12H25O2
    species[32] = +2.84782000e+01 + 5.37539000e-02 * tc[1] -
                  1.68186000e-05 * tc[2] + 2.51367000e-09 * tc[3] -
                  1.47208000e-13 * tc[4];
    // species 33: OC12H23OOH
    species[33] = +2.36731000e+01 + 6.16392000e-02 * tc[1] -
                  2.09836000e-05 * tc[2] + 3.33166000e-09 * tc[3] -
                  2.03590000e-13 * tc[4];
    // species 34: N2
    species[34] = +2.92664000e+00 + 1.48797680e-03 * tc[1] -
                  5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 24: C5H10
    species[24] = -1.06223481e+00 + 5.74218294e-02 * tc[1] -
                  3.74486890e-05 * tc[2] + 1.27364989e-08 * tc[3] -
                  1.79609789e-12 * tc[4];
    // species 25: C6H12
    species[25] = -1.35275205e+00 + 6.98655426e-02 * tc[1] -
                  4.59408022e-05 * tc[2] + 1.56967343e-08 * tc[3] -
                  2.21296175e-12 * tc[4];
    // species 26: C7H14
    species[26] = -1.67720549e+00 + 8.24611601e-02 * tc[1] -
                  5.46504108e-05 * tc[2] + 1.87862303e-08 * tc[3] -
                  2.65737983e-12 * tc[4];
    // species 27: C8H16
    species[27] = -1.89226915e+00 + 9.46066357e-02 * tc[1] -
                  6.27385521e-05 * tc[2] + 2.15158309e-08 * tc[3] -
                  3.02718683e-12 * tc[4];
    // species 28: C9H18
    species[28] = -2.16108263e+00 + 1.06958297e-01 * tc[1] -
                  7.10973244e-05 * tc[2] + 2.43971077e-08 * tc[3] -
                  3.42771547e-12 * tc[4];
    // species 30: C10H20
    species[30] = -2.42901688e+00 + 1.19305598e-01 * tc[1] -
                  7.94489025e-05 * tc[2] + 2.72736596e-08 * tc[3] -
                  3.82718373e-12 * tc[4];
  } else {
    // species 24: C5H10
    species[24] = +1.45851539e+01 + 2.24072471e-02 * tc[1] -
                  7.63348025e-06 * tc[2] + 1.18188966e-09 * tc[3] -
                  6.84385139e-14 * tc[4];
    // species 25: C6H12
    species[25] = +1.78337529e+01 + 2.67377658e-02 * tc[1] -
                  9.10036773e-06 * tc[2] + 1.40819768e-09 * tc[3] -
                  8.15124244e-14 * tc[4];
    // species 26: C7H14
    species[26] = +2.10898039e+01 + 3.10607878e-02 * tc[1] -
                  1.05644793e-05 * tc[2] + 1.63405780e-09 * tc[3] -
                  9.45598219e-14 * tc[4];
    // species 27: C8H16
    species[27] = +2.43540125e+01 + 3.53666462e-02 * tc[1] -
                  1.20208388e-05 * tc[2] + 1.85855053e-09 * tc[3] -
                  1.07522262e-13 * tc[4];
    // species 28: C9H18
    species[28] = +2.76142176e+01 + 3.96825287e-02 * tc[1] -
                  1.34819446e-05 * tc[2] + 2.08390452e-09 * tc[3] -
                  1.20539294e-13 * tc[4];
    // species 30: C10H20
    species[30] = +3.08753903e+01 + 4.39971526e-02 * tc[1] -
                  1.49425530e-05 * tc[2] + 2.30917678e-09 * tc[3] -
                  1.33551477e-13 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 29: PXC9H19
    species[29] = -1.04387292e+00 + 1.05617283e-01 * tc[1] -
                  6.68199971e-05 * tc[2] + 2.14486166e-08 * tc[3] -
                  2.77404275e-12 * tc[4];
  } else {
    // species 29: PXC9H19
    species[29] = +2.83097514e+01 + 4.12657344e-02 * tc[1] -
                  1.40383289e-05 * tc[2] + 2.17174871e-09 * tc[3] -
                  1.25692307e-13 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -4.006542530000000e+04 * invT - 5.272127854000000e+01 +
                 2.621815940000000e+00 * tc[0] - 7.361885550000000e-02 * tc[1] +
                 1.573283785000000e-05 * tc[2] - 2.562010566666667e-09 * tc[3] +
                 2.018011150000000e-13 * tc[4];
    // species 31: C12H24
    species[31] = -2.463452990000000e+04 * invT - 5.587931381000000e+01 +
                  2.963426810000000e+00 * tc[0] -
                  7.199618000000001e-02 * tc[1] +
                  1.602306691666667e-05 * tc[2] -
                  2.751453941666667e-09 * tc[3] + 2.311990950000000e-13 * tc[4];
  } else {
    // species 0: NC12H26
    species[0] = -5.488434650000000e+04 * invT + 2.111804257000000e+02 -
                 3.850950370000000e+01 * tc[0] - 2.817750240000000e-02 * tc[1] +
                 3.191553333333333e-06 * tc[2] - 2.466873850000000e-10 * tc[3] +
                 8.562207500000000e-15 * tc[4];
    // species 31: C12H24
    species[31] = -3.894059620000000e+04 * invT + 2.022928741000000e+02 -
                  3.740021110000000e+01 * tc[0] -
                  2.631153765000000e-02 * tc[1] +
                  2.977071983333333e-06 * tc[2] -
                  2.299582191666667e-10 * tc[3] + 7.978124949999999e-15 * tc[4];
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682853000000e+00 -
                 2.500000000000000e+00 * tc[0] - 3.526664095000000e-13 * tc[1] +
                 3.326532733333333e-16 * tc[2] - 1.917346933333333e-19 * tc[3] +
                 4.638661660000000e-23 * tc[4];
    // species 2: O
    species[2] = +2.912225920000000e+04 * invT + 1.116333640000000e+00 -
                 3.168267100000000e+00 * tc[0] + 1.639659420000000e-03 * tc[1] -
                 1.107177326666667e-06 * tc[2] + 5.106721866666666e-10 * tc[3] -
                 1.056329855000000e-13 * tc[4];
    // species 3: OH
    species[3] = +3.381538120000000e+03 * invT + 4.815738570000000e+00 -
                 4.125305610000000e+00 * tc[0] + 1.612724695000000e-03 * tc[1] -
                 1.087941151666667e-06 * tc[2] + 4.832113691666666e-10 * tc[3] -
                 1.031186895000000e-13 * tc[4];
    // species 4: HO2
    species[4] = +2.948080400000000e+02 * invT + 5.851355599999999e-01 -
                 4.301798010000000e+00 * tc[0] + 2.374560255000000e-03 * tc[1] -
                 3.526381516666666e-06 * tc[2] + 2.023032450000000e-09 * tc[3] -
                 4.646125620000001e-13 * tc[4];
    // species 5: H2
    species[5] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                 2.344331120000000e+00 * tc[0] - 3.990260375000000e-03 * tc[1] +
                 3.246358500000000e-06 * tc[2] - 1.679767450000000e-09 * tc[3] +
                 3.688058805000000e-13 * tc[4];
    // species 6: H2O
    species[6] = -3.029372670000000e+04 * invT + 5.047672768000000e+00 -
                 4.198640560000000e+00 * tc[0] + 1.018217050000000e-03 * tc[1] -
                 1.086733685000000e-06 * tc[2] + 4.573308850000000e-10 * tc[3] -
                 8.859890850000000e-14 * tc[4];
    // species 7: H2O2
    species[7] = -1.770258210000000e+04 * invT + 8.410619499999998e-01 -
                 4.276112690000000e+00 * tc[0] + 2.714112085000000e-04 * tc[1] -
                 2.788928350000000e-06 * tc[2] + 1.798090108333333e-09 * tc[3] -
                 4.312271815000000e-13 * tc[4];
    // species 8: O2
    species[8] = -1.063943560000000e+03 * invT + 1.247806300000001e-01 -
                 3.782456360000000e+00 * tc[0] + 1.498367080000000e-03 * tc[1] -
                 1.641217001666667e-06 * tc[2] + 8.067745908333334e-10 * tc[3] -
                 1.621864185000000e-13 * tc[4];
    // species 9: CH3
    species[9] = +1.644499880000000e+04 * invT + 2.069026070000000e+00 -
                 3.673590400000000e+00 * tc[0] - 1.005475875000000e-03 * tc[1] -
                 9.550364266666668e-07 * tc[2] + 5.725978541666666e-10 * tc[3] -
                 1.271928670000000e-13 * tc[4];
    // species 10: CH4
    species[10] = -1.024664760000000e+04 * invT + 9.791179889999999e+00 -
                  5.149876130000000e+00 * tc[0] +
                  6.835489400000000e-03 * tc[1] -
                  8.196676650000000e-06 * tc[2] +
                  4.039525216666667e-09 * tc[3] - 8.334697800000000e-13 * tc[4];
    // species 11: CH2O
    species[11] = -1.430895670000000e+04 * invT + 4.190910250000000e+00 -
                  4.793723150000000e+00 * tc[0] +
                  4.954166845000000e-03 * tc[1] -
                  6.220333466666666e-06 * tc[2] +
                  3.160710508333333e-09 * tc[3] - 6.588632600000000e-13 * tc[4];
    // species 12: CO
    species[12] = -1.434408600000000e+04 * invT + 7.112418999999992e-02 -
                  3.579533470000000e+00 * tc[0] +
                  3.051768400000000e-04 * tc[1] -
                  1.694690550000000e-07 * tc[2] -
                  7.558382366666667e-11 * tc[3] + 4.522122495000000e-14 * tc[4];
    // species 13: CO2
    species[13] = -4.837196970000000e+04 * invT - 7.544278700000000e+00 -
                  2.356773520000000e+00 * tc[0] -
                  4.492298385000000e-03 * tc[1] +
                  1.187260448333333e-06 * tc[2] -
                  2.049325183333333e-10 * tc[3] + 7.184977399999999e-15 * tc[4];
    // species 14: C2H2
    species[14] = +2.642898070000000e+04 * invT - 1.313102400600000e+01 -
                  8.086810940000000e-01 * tc[0] -
                  1.168078145000000e-02 * tc[1] +
                  5.919530250000000e-06 * tc[2] -
                  2.334603641666667e-09 * tc[3] + 4.250364870000000e-13 * tc[4];
    // species 15: C2H4
    species[15] = +5.089775930000000e+03 * invT - 1.381294799999999e-01 -
                  3.959201480000000e+00 * tc[0] +
                  3.785261235000000e-03 * tc[1] -
                  9.516504866666667e-06 * tc[2] +
                  5.763239608333333e-09 * tc[3] - 1.349421865000000e-12 * tc[4];
    // species 16: C2H6
    species[16] = -1.152220550000000e+04 * invT + 1.624601760000000e+00 -
                  4.291424920000000e+00 * tc[0] +
                  2.750771350000000e-03 * tc[1] -
                  9.990638133333334e-06 * tc[2] +
                  5.903885708333334e-09 * tc[3] - 1.343428855000000e-12 * tc[4];
    // species 17: CH2CHO
    species[17] = +6.200000000000000e+01 * invT - 6.162391100000001e+00 -
                  3.409062400000000e+00 * tc[0] -
                  5.369287000000000e-03 * tc[1] -
                  3.152487500000000e-07 * tc[2] +
                  5.965485916666667e-10 * tc[3] - 1.433692550000000e-13 * tc[4];
    // species 18: aC3H5
    species[18] = +1.924562900000000e+04 * invT - 1.581003050000000e+01 -
                  1.363183500000000e+00 * tc[0] -
                  9.906910499999999e-03 * tc[1] -
                  2.082843333333333e-06 * tc[2] +
                  2.779629583333333e-09 * tc[3] - 7.923285500000000e-13 * tc[4];
    // species 19: C3H6
    species[19] = +1.074826000000000e+03 * invT - 1.465203300000000e+01 -
                  1.493307000000000e+00 * tc[0] -
                  1.046259000000000e-02 * tc[1] -
                  7.477990000000000e-07 * tc[2] +
                  1.390760000000000e-09 * tc[3] - 3.579073000000000e-13 * tc[4];
    // species 20: C2H3CHO
    species[20] = -9.335734399999999e+03 * invT - 1.822672720000000e+01 -
                  1.271349800000000e+00 * tc[0] -
                  1.311552700000000e-02 * tc[1] +
                  1.548538416666667e-06 * tc[2] +
                  3.986439333333333e-10 * tc[3] - 1.674027150000000e-13 * tc[4];
    // species 21: C4H7
    species[21] = +2.265332800000000e+04 * invT - 2.269338368000000e+01 -
                  7.444943200000000e-01 * tc[0] -
                  1.983942850000000e-02 * tc[1] +
                  3.816347666666667e-06 * tc[2] -
                  1.779414416666667e-10 * tc[3] - 1.154818750000000e-13 * tc[4];
    // species 22: C4H81
    species[22] = -1.790400400000000e+03 * invT - 1.988133100000000e+01 -
                  1.181138000000000e+00 * tc[0] -
                  1.542669000000000e-02 * tc[1] -
                  8.477541166666667e-07 * tc[2] +
                  2.054574000000000e-09 * tc[3] - 5.555096499999999e-13 * tc[4];
    // species 23: C5H9
    species[23] = +2.812188700000000e+03 * invT - 3.887825510000000e+01 +
                  2.419011100000000e+00 * tc[0] -
                  2.021519450000000e-02 * tc[1] -
                  1.130038983333333e-06 * tc[2] +
                  2.810395166666667e-09 * tc[3] - 7.558356500000001e-13 * tc[4];
    // species 32: C12H25O2
    species[32] = -2.989180000000000e+04 * invT - 1.166006000000000e+01 -
                  5.314040000000000e+00 * tc[0] -
                  4.469365000000000e-02 * tc[1] -
                  2.422516666666667e-06 * tc[2] +
                  6.243750000000000e-09 * tc[3] - 1.676625000000000e-12 * tc[4];
    // species 33: OC12H23OOH
    species[33] = -6.653610000000001e+04 * invT + 1.965780000000001e+00 -
                  8.807330000000000e+00 * tc[0] -
                  3.253115000000000e-02 * tc[1] -
                  1.158430000000000e-05 * tc[2] +
                  1.057541666666667e-08 * tc[3] - 2.554955000000000e-12 * tc[4];
    // species 34: N2
    species[34] = -1.020899900000000e+03 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * tc[0] -
                  7.041202000000000e-04 * tc[1] +
                  6.605369999999999e-07 * tc[2] -
                  4.701262500000001e-10 * tc[3] + 1.222427000000000e-13 * tc[4];
  } else {
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682924000000e+00 -
                 2.500000010000000e+00 * tc[0] + 1.154214865000000e-11 * tc[1] -
                 2.692699133333334e-15 * tc[2] + 3.945960291666667e-19 * tc[3] -
                 2.490986785000000e-23 * tc[4];
    // species 2: O
    species[2] = +2.921757910000000e+04 * invT - 2.214917859999999e+00 -
                 2.569420780000000e+00 * tc[0] + 4.298705685000000e-05 * tc[1] -
                 6.991409816666667e-09 * tc[2] + 8.348149916666666e-13 * tc[3] -
                 6.141684549999999e-17 * tc[4];
    // species 3: OH
    species[3] = +3.718857740000000e+03 * invT - 2.836911870000000e+00 -
                 2.864728860000000e+00 * tc[0] - 5.282522400000000e-04 * tc[1] +
                 4.318045966666667e-08 * tc[2] - 2.543488950000000e-12 * tc[3] +
                 6.659793800000000e-17 * tc[4];
    // species 4: HO2
    species[4] = +1.118567130000000e+02 * invT + 2.321087500000001e-01 -
                 4.017210900000000e+00 * tc[0] - 1.119910065000000e-03 * tc[1] +
                 1.056096916666667e-07 * tc[2] - 9.520530833333334e-12 * tc[3] +
                 5.395426750000000e-16 * tc[4];
    // species 5: H2
    species[5] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                 3.337279200000000e+00 * tc[0] + 2.470123655000000e-05 * tc[1] -
                 8.324279633333333e-08 * tc[2] + 1.496386616666667e-11 * tc[3] -
                 1.001276880000000e-15 * tc[4];
    // species 6: H2O
    species[6] = -3.000429710000000e+04 * invT - 1.932777610000000e+00 -
                 3.033992490000000e+00 * tc[0] - 1.088459020000000e-03 * tc[1] +
                 2.734541966666666e-08 * tc[2] + 8.086832250000000e-12 * tc[3] -
                 8.410049600000000e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.786178770000000e+04 * invT + 1.248846229999999e+00 -
                 4.165002850000000e+00 * tc[0] - 2.454158470000000e-03 * tc[1] +
                 3.168987083333333e-07 * tc[2] - 3.093216550000000e-11 * tc[3] +
                 1.439541525000000e-15 * tc[4];
    // species 8: O2
    species[8] = -1.088457720000000e+03 * invT - 2.170693450000000e+00 -
                 3.282537840000000e+00 * tc[0] - 7.415437700000000e-04 * tc[1] +
                 1.263277781666667e-07 * tc[2] - 1.745587958333333e-11 * tc[3] +
                 1.083588970000000e-15 * tc[4];
    // species 9: CH3
    species[9] = +1.677558430000000e+04 * invT - 6.194354070000000e+00 -
                 2.285717720000000e+00 * tc[0] - 3.619950185000000e-03 * tc[1] +
                 4.978572466666667e-07 * tc[2] - 4.964038700000000e-11 * tc[3] +
                 2.335771970000000e-15 * tc[4];
    // species 10: CH4
    species[10] = -9.468344590000001e+03 * invT - 1.836246650500000e+01 -
                  7.485149500000000e-02 * tc[0] -
                  6.695473350000000e-03 * tc[1] +
                  9.554763483333333e-07 * tc[2] -
                  1.019104458333333e-10 * tc[3] + 5.090761500000000e-15 * tc[4];
    // species 11: CH2O
    species[11] = -1.399583230000000e+04 * invT - 1.189563292000000e+01 -
                  1.760690080000000e+00 * tc[0] -
                  4.600000410000000e-03 * tc[1] +
                  7.370980216666666e-07 * tc[2] -
                  8.386767666666666e-11 * tc[3] + 4.419278200000001e-15 * tc[4];
    // species 12: CO
    species[12] = -1.415187240000000e+04 * invT - 5.103502110000000e+00 -
                  2.715185610000000e+00 * tc[0] -
                  1.031263715000000e-03 * tc[1] +
                  1.664709618333334e-07 * tc[2] -
                  1.917108400000000e-11 * tc[3] + 1.018238580000000e-15 * tc[4];
    // species 13: CO2
    species[13] = -4.875916600000000e+04 * invT + 1.585822230000000e+00 -
                  3.857460290000000e+00 * tc[0] -
                  2.207185130000000e-03 * tc[1] +
                  3.691356733333334e-07 * tc[2] -
                  4.362418233333334e-11 * tc[3] + 2.360420820000000e-15 * tc[4];
    // species 14: C2H2
    species[14] = +2.593599920000000e+04 * invT + 5.377850850000001e+00 -
                  4.147569640000000e+00 * tc[0] -
                  2.980833320000000e-03 * tc[1] +
                  3.954914200000000e-07 * tc[2] -
                  3.895101425000000e-11 * tc[3] + 1.806176065000000e-15 * tc[4];
    // species 15: C2H4
    species[15] = +4.939886140000000e+03 * invT - 8.269258140000002e+00 -
                  2.036111160000000e+00 * tc[0] -
                  7.322707550000000e-03 * tc[1] +
                  1.118463191666667e-06 * tc[2] -
                  1.226857691666667e-10 * tc[3] + 6.285303050000000e-15 * tc[4];
    // species 16: C2H6
    species[16] = -1.142639320000000e+04 * invT - 1.404372920000000e+01 -
                  1.071881500000000e+00 * tc[0] -
                  1.084263385000000e-02 * tc[1] +
                  1.670934450000000e-06 * tc[2] -
                  1.845100008333333e-10 * tc[3] + 9.500144500000000e-15 * tc[4];
    // species 17: CH2CHO
    species[17] = -9.695000000000000e+02 * invT + 1.100775780000000e+01 -
                  5.975669900000000e+00 * tc[0] -
                  4.065295700000000e-03 * tc[1] +
                  4.572707500000000e-07 * tc[2] -
                  3.391920083333333e-11 * tc[3] + 1.088008550000000e-15 * tc[4];
    // species 18: aC3H5
    species[18] = +1.748244900000000e+04 * invT + 1.774383770000000e+01 -
                  6.500787700000000e+00 * tc[0] -
                  7.162365500000000e-03 * tc[1] +
                  9.463605333333332e-07 * tc[2] -
                  9.234000833333333e-11 * tc[3] + 4.518194349999999e-15 * tc[4];
    // species 19: C3H6
    species[19] = -9.235703000000000e+02 * invT + 2.004560700000000e+01 -
                  6.732257000000000e+00 * tc[0] -
                  7.454170000000000e-03 * tc[1] +
                  8.249831666666666e-07 * tc[2] -
                  6.010018333333334e-11 * tc[3] + 1.883102000000000e-15 * tc[4];
    // species 20: C2H3CHO
    species[20] = -1.078405400000000e+04 * invT + 1.066998720000000e+01 -
                  5.811186800000000e+00 * tc[0] -
                  8.557128000000001e-03 * tc[1] +
                  1.247236016666667e-06 * tc[2] -
                  1.187687416666667e-10 * tc[3] + 4.587342050000000e-15 * tc[4];
    // species 21: C4H7
    species[21] = +2.095500800000000e+04 * invT + 1.590279150000000e+01 -
                  7.013483500000000e+00 * tc[0] -
                  1.131727900000000e-02 * tc[1] +
                  1.542424500000000e-06 * tc[2] -
                  1.400660583333333e-10 * tc[3] + 5.204308500000000e-15 * tc[4];
    // species 22: C4H81
    species[22] = -2.139723100000000e+03 * invT - 1.348961690000000e+01 -
                  2.053584100000000e+00 * tc[0] -
                  1.717525350000000e-02 * tc[1] +
                  2.647199500000000e-06 * tc[2] -
                  2.757471833333334e-10 * tc[3] + 1.268052250000000e-14 * tc[4];
    // species 23: C5H9
    species[23] = -1.721835900000000e+03 * invT + 4.326452500000000e+01 -
                  1.013864000000000e+01 * tc[0] -
                  1.135706900000000e-02 * tc[1] +
                  1.298507716666667e-06 * tc[2] -
                  9.897101666666667e-11 * tc[3] + 3.296622400000000e-15 * tc[4];
    // species 32: C12H25O2
    species[32] = -3.741180000000000e+04 * invT + 1.375992000000000e+02 -
                  2.847820000000000e+01 * tc[0] -
                  2.687695000000000e-02 * tc[1] +
                  2.803100000000000e-06 * tc[2] -
                  2.094725000000000e-10 * tc[3] + 7.360400000000000e-15 * tc[4];
    // species 33: OC12H23OOH
    species[33] = -7.182580000000000e+04 * invT + 1.014393000000000e+02 -
                  2.367310000000000e+01 * tc[0] -
                  3.081960000000000e-02 * tc[1] +
                  3.497266666666667e-06 * tc[2] -
                  2.776383333333333e-10 * tc[3] + 1.017950000000000e-14 * tc[4];
    // species 34: N2
    species[34] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * tc[0] -
                  7.439884000000000e-04 * tc[1] +
                  9.474600000000001e-08 * tc[2] -
                  8.414198333333333e-12 * tc[3] + 3.376675500000000e-16 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 24: C5H10
    species[24] = -4.465466660000000e+03 * invT - 3.333621381000000e+01 +
                  1.062234810000000e+00 * tc[0] -
                  2.871091470000000e-02 * tc[1] +
                  6.241448166666667e-06 * tc[2] -
                  1.061374908333333e-09 * tc[3] + 8.980489449999999e-14 * tc[4];
    // species 25: C6H12
    species[25] = -7.343686170000000e+03 * invT - 3.666482115000000e+01 +
                  1.352752050000000e+00 * tc[0] -
                  3.493277130000000e-02 * tc[1] +
                  7.656800366666667e-06 * tc[2] -
                  1.308061191666667e-09 * tc[3] + 1.106480875000000e-13 * tc[4];
    // species 26: C7H14
    species[26] = -1.021686010000000e+04 * invT - 4.018400869000000e+01 +
                  1.677205490000000e+00 * tc[0] -
                  4.123058005000000e-02 * tc[1] +
                  9.108401800000000e-06 * tc[2] -
                  1.565519191666667e-09 * tc[3] + 1.328689915000000e-13 * tc[4];
    // species 27: C8H16
    species[27] = -1.310745590000000e+04 * invT - 4.308016725000000e+01 +
                  1.892269150000000e+00 * tc[0] -
                  4.730331785000000e-02 * tc[1] +
                  1.045642535000000e-05 * tc[2] -
                  1.792985908333333e-09 * tc[3] + 1.513593415000000e-13 * tc[4];
    // species 28: C9H18
    species[28] = -1.598908470000000e+04 * invT - 4.628559543000000e+01 +
                  2.161082630000000e+00 * tc[0] -
                  5.347914850000000e-02 * tc[1] +
                  1.184955406666667e-05 * tc[2] -
                  2.033092308333333e-09 * tc[3] + 1.713857735000000e-13 * tc[4];
    // species 30: C10H20
    species[30] = -1.887083650000000e+04 * invT - 4.948615518000000e+01 +
                  2.429016880000000e+00 * tc[0] -
                  5.965279900000000e-02 * tc[1] +
                  1.324148375000000e-05 * tc[2] -
                  2.272804966666667e-09 * tc[3] + 1.913591865000000e-13 * tc[4];
  } else {
    // species 24: C5H10
    species[24] = -1.008982050000000e+04 * invT + 6.695354750000000e+01 -
                  1.458515390000000e+01 * tc[0] -
                  1.120362355000000e-02 * tc[1] +
                  1.272246708333333e-06 * tc[2] -
                  9.849080500000001e-11 * tc[3] + 3.421925695000000e-15 * tc[4];
    // species 25: C6H12
    species[25] = -1.420628600000000e+04 * invT + 8.621563800000001e+01 -
                  1.783375290000000e+01 * tc[0] -
                  1.336888290000000e-02 * tc[1] +
                  1.516727955000000e-06 * tc[2] -
                  1.173498066666667e-10 * tc[3] + 4.075621220000000e-15 * tc[4];
    // species 26: C7H14
    species[26] = -1.832600650000000e+04 * invT + 1.055289147000000e+02 -
                  2.108980390000000e+01 * tc[0] -
                  1.553039390000000e-02 * tc[1] +
                  1.760746550000000e-06 * tc[2] -
                  1.361714833333333e-10 * tc[3] + 4.727991095000000e-15 * tc[4];
    // species 27: C8H16
    species[27] = -2.244856740000000e+04 * invT + 1.248917285000000e+02 -
                  2.435401250000000e+01 * tc[0] -
                  1.768332310000000e-02 * tc[1] +
                  2.003473133333334e-06 * tc[2] -
                  1.548792108333333e-10 * tc[3] + 5.376113100000000e-15 * tc[4];
    // species 28: C9H18
    species[28] = -2.657090610000000e+04 * invT + 1.442328406000000e+02 -
                  2.761421760000000e+01 * tc[0] -
                  1.984126435000000e-02 * tc[1] +
                  2.246990766666667e-06 * tc[2] -
                  1.736587100000000e-10 * tc[3] + 6.026964700000000e-15 * tc[4];
    // species 30: C10H20
    species[30] = -3.069373070000000e+04 * invT + 1.635805623000000e+02 -
                  3.087539030000000e+01 * tc[0] -
                  2.199857630000000e-02 * tc[1] +
                  2.490425500000000e-06 * tc[2] -
                  1.924313983333333e-10 * tc[3] + 6.677573850000000e-15 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 29: PXC9H19
    species[29] = -6.808185120000000e+03 * invT - 4.339577212000000e+01 +
                  1.043872920000000e+00 * tc[0] -
                  5.280864150000000e-02 * tc[1] +
                  1.113666618333333e-05 * tc[2] -
                  1.787384716666667e-09 * tc[3] + 1.387021375000000e-13 * tc[4];
  } else {
    // species 29: PXC9H19
    species[29] = -1.745160300000000e+04 * invT + 1.451476484000000e+02 -
                  2.830975140000000e+01 * tc[0] -
                  2.063286720000000e-02 * tc[1] +
                  2.339721483333333e-06 * tc[2] -
                  1.809790591666667e-10 * tc[3] + 6.284615349999999e-15 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: CH2
    species[0] = +4.600404010000000e+04 * invT + 2.200146820000000e+00 -
                 3.762678670000000e+00 * tc[0] - 4.844360715000000e-04 * tc[1] -
                 4.658164016666667e-07 * tc[2] + 3.209092941666667e-10 * tc[3] -
                 8.437085950000000e-14 * tc[4];
    // species 1: CH2*
    species[1] = +5.049681630000000e+04 * invT + 4.967723077000000e+00 -
                 4.198604110000000e+00 * tc[0] + 1.183307095000000e-03 * tc[1] -
                 1.372160366666667e-06 * tc[2] + 5.573466508333334e-10 * tc[3] -
                 9.715736850000000e-14 * tc[4];
    // species 2: HCO
    species[2] = +3.839564960000000e+03 * invT + 8.268134100000002e-01 -
                 4.221185840000000e+00 * tc[0] + 1.621962660000000e-03 * tc[1] -
                 2.296657433333333e-06 * tc[2] + 1.109534108333333e-09 * tc[3] -
                 2.168844325000000e-13 * tc[4];
    // species 3: CH3O
    species[3] = +1.295697600000000e+03 * invT - 2.860603620000000e+00 -
                 3.711805020000000e+00 * tc[0] + 1.402316530000000e-03 * tc[1] -
                 6.275849516666667e-06 * tc[2] + 3.942267408333333e-09 * tc[3] -
                 9.329421000000001e-13 * tc[4];
    // species 4: C2H3
    species[4] = +3.485984680000000e+04 * invT - 5.298073800000000e+00 -
                 3.212466450000000e+00 * tc[0] - 7.573958100000000e-04 * tc[1] -
                 4.320156866666666e-06 * tc[2] + 2.980482058333333e-09 * tc[3] -
                 7.357543650000000e-13 * tc[4];
    // species 5: C2H5
    species[5] = +1.284162650000000e+04 * invT - 4.007435600000004e-01 -
                 4.306465680000000e+00 * tc[0] + 2.093294460000000e-03 * tc[1] -
                 8.285713450000000e-06 * tc[2] + 4.992721716666666e-09 * tc[3] -
                 1.152545020000000e-12 * tc[4];
    // species 6: nC3H7
    species[6] = +1.031234600000000e+04 * invT - 2.008691670000000e+01 -
                 1.049117300000000e+00 * tc[0] - 1.300448650000000e-02 * tc[1] -
                 3.923752666666667e-07 * tc[2] + 1.632927666666667e-09 * tc[3] -
                 4.686010350000000e-13 * tc[4];
    // species 7: pC4H9
    species[7] = +7.322104000000000e+03 * invT - 2.096056380000000e+01 -
                 1.208704200000000e+00 * tc[0] - 1.914874850000000e-02 * tc[1] +
                 1.211008483333333e-06 * tc[2] + 1.285712250000000e-09 * tc[3] -
                 4.342971750000000e-13 * tc[4];
    // species 16: C12OOH
    species[16] = -2.383800000000000e+04 * invT - 1.420029000000000e+01 -
                  5.152310000000000e+00 * tc[0] -
                  4.989565000000000e-02 * tc[1] +
                  3.010583333333333e-06 * tc[2] +
                  3.486958333333333e-09 * tc[3] - 1.113930000000000e-12 * tc[4];
    // species 17: O2C12H24OOH
    species[17] = -4.168750000000000e+04 * invT - 4.086092800000000e+01 -
                  4.819720000000000e-01 * tc[0] -
                  7.251000000000001e-02 * tc[1] +
                  1.665513333333333e-05 * tc[2] -
                  2.170183333333333e-09 * tc[3] - 5.967900000000001e-14 * tc[4];
  } else {
    // species 0: CH2
    species[0] = +4.626360400000000e+04 * invT - 3.297092110000000e+00 -
                 2.874101130000000e+00 * tc[0] - 1.828196460000000e-03 * tc[1] +
                 2.348243283333333e-07 * tc[2] - 2.168162908333333e-11 * tc[3] +
                 9.386378350000000e-16 * tc[4];
    // species 1: CH2*
    species[1] = +5.092599970000000e+04 * invT - 6.334463270000000e+00 -
                 2.292038420000000e+00 * tc[0] - 2.327943185000000e-03 * tc[1] +
                 3.353199116666667e-07 * tc[2] - 3.482550000000000e-11 * tc[3] +
                 1.698581825000000e-15 * tc[4];
    // species 2: HCO
    species[2] = +4.011918150000000e+03 * invT - 7.026170540000000e+00 -
                 2.772174380000000e+00 * tc[0] - 2.478477630000000e-03 * tc[1] +
                 4.140760216666667e-07 * tc[2] - 4.909681483333334e-11 * tc[3] +
                 2.667543555000000e-15 * tc[4];
    // species 3: CH3O
    species[3] = +3.781119400000000e+02 * invT + 6.724592660000000e+00 -
                 4.757792380000000e+00 * tc[0] - 3.720712370000000e-03 * tc[1] +
                 4.495086266666666e-07 * tc[2] - 3.650754200000000e-11 * tc[3] +
                 1.317685490000000e-15 * tc[4];
    // species 4: C2H3
    species[4] = +3.461287390000000e+04 * invT - 4.770599780000000e+00 -
                 3.016724000000000e+00 * tc[0] - 5.165114600000000e-03 * tc[1] +
                 7.801372483333333e-07 * tc[2] - 8.480274000000000e-11 * tc[3] +
                 4.313035205000000e-15 * tc[4];
    // species 5: C2H5
    species[5] = +1.285752000000000e+04 * invT - 1.150777788000000e+01 -
                 1.954656420000000e+00 * tc[0] - 8.698636100000001e-03 * tc[1] +
                 1.330344446666667e-06 * tc[2] - 1.460147408333333e-10 * tc[3] +
                 7.482078800000000e-15 * tc[4];
    // species 6: nC3H7
    species[6] = +7.976223600000000e+03 * invT + 2.322504490000000e+01 -
                 7.709747900000000e+00 * tc[0] - 8.015742500000001e-03 * tc[1] +
                 8.786706333333332e-07 * tc[2] - 6.324029333333334e-11 * tc[3] +
                 1.943135950000000e-15 * tc[4];
    // species 7: pC4H9
    species[7] = +4.964405800000000e+03 * invT + 2.657398650000000e+01 -
                 8.682239500000000e+00 * tc[0] - 1.184553550000000e-02 * tc[1] +
                 1.265814416666667e-06 * tc[2] - 5.535594666666666e-11 * tc[3] -
                 2.742256800000000e-15 * tc[4];
    // species 16: C12OOH
    species[16] = -3.111920000000000e+04 * invT + 1.380569000000000e+02 -
                  2.920190000000000e+01 * tc[0] -
                  2.579585000000000e-02 * tc[1] +
                  2.622116666666667e-06 * tc[2] -
                  1.919216666666667e-10 * tc[3] + 6.632000000000000e-15 * tc[4];
    // species 17: O2C12H24OOH
    species[17] = -5.126750000000000e+04 * invT + 1.728407000000000e+02 -
                  3.509070000000000e+01 * tc[0] -
                  2.552950000000000e-02 * tc[1] +
                  2.572416666666666e-06 * tc[2] -
                  1.871891666666667e-10 * tc[3] + 6.445050000000000e-15 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 8: PXC5H11
    species[8] = +4.716114600000000e+03 * invT - 2.867142819190000e+01 -
                 5.243840810000000e-02 * tc[0] - 2.803984790000000e-02 * tc[1] +
                 5.525763383333334e-06 * tc[2] - 8.146114841666667e-10 * tc[3] +
                 5.700483000000000e-14 * tc[4];
    // species 9: PXC6H13
    species[9] = +1.832803930000000e+03 * invT - 3.181238076500000e+01 +
                 2.048714650000000e-01 * tc[0] - 3.419006360000000e-02 * tc[1] +
                 6.907465199999999e-06 * tc[2] - 1.051298350000000e-09 * tc[3] +
                 7.656002899999999e-14 * tc[4];
    // species 10: PXC7H15
    species[10] = -1.045902230000000e+03 * invT - 3.515597150599999e+01 +
                  4.995704060000000e-01 * tc[0] -
                  4.044132335000000e-02 * tc[1] +
                  8.342212566666667e-06 * tc[2] -
                  1.304577566666667e-09 * tc[3] + 9.830811350000000e-14 * tc[4];
    // species 11: PXC8H17
    species[11] = -3.926895110000000e+03 * invT - 3.838582253800000e+01 +
                  7.727594380000000e-01 * tc[0] -
                  4.662748525000000e-02 * tc[1] +
                  9.740787416666667e-06 * tc[2] -
                  1.546418450000000e-09 * tc[3] + 1.185637415000000e-13 * tc[4];
    // species 12: PXC10H21
    species[12] = -9.689675499999999e+03 * invT - 4.481462868000000e+01 +
                  1.313583480000000e+00 * tc[0] -
                  5.898640650000000e-02 * tc[1] +
                  1.253071798333333e-05 * tc[2] -
                  2.027759216666667e-09 * tc[3] + 1.587614260000000e-13 * tc[4];
    // species 13: PXC12H25
    species[13] = -1.545304350000000e+04 * invT - 5.122052951000000e+01 +
                  1.850287410000000e+00 * tc[0] -
                  7.133535400000000e-02 * tc[1] +
                  1.531527591666667e-05 * tc[2] -
                  2.507361600000000e-09 * tc[3] + 1.987271500000000e-13 * tc[4];
  } else {
    // species 8: PXC5H11
    species[8] = -9.807123070000000e+02 * invT + 6.978067390000000e+01 -
                 1.529774460000000e+01 * tc[0] - 1.198676550000000e-02 * tc[1] +
                 1.363988246666667e-06 * tc[2] - 1.057358966666667e-10 * tc[3] +
                 3.677045275000000e-15 * tc[4];
    // species 9: PXC6H13
    species[9] = -5.092990410000000e+03 * invT + 8.898764130000001e+01 -
                 1.853854700000000e+01 * tc[0] - 1.415539810000000e-02 * tc[1] +
                 1.608845410000000e-06 * tc[2] - 1.246229875000000e-10 * tc[3] +
                 4.331680320000000e-15 * tc[4];
    // species 10: PXC7H15
    species[10] = -9.209382210000000e+03 * invT + 1.082895020000000e+02 -
                  2.179407090000000e+01 * tc[0] -
                  1.631401215000000e-02 * tc[1] +
                  1.852304066666667e-06 * tc[2] -
                  1.433892900000000e-10 * tc[3] + 4.981834995000000e-15 * tc[4];
    // species 11: PXC8H17
    species[11] = -1.333005350000000e+04 * invT + 1.276084196000000e+02 -
                  2.505103560000000e+01 * tc[0] -
                  1.847400810000000e-02 * tc[1] +
                  2.096087733333333e-06 * tc[2] -
                  1.621903408333333e-10 * tc[3] + 5.633444900000000e-15 * tc[4];
    // species 12: PXC10H21
    species[12] = -2.157378320000000e+04 * invT + 1.662787020000000e+02 -
                  3.156971600000000e+01 * tc[0] -
                  2.279092015000000e-02 * tc[1] +
                  2.583249416666667e-06 * tc[2] -
                  1.997591108333333e-10 * tc[3] + 6.935477950000000e-15 * tc[4];
    // species 13: PXC12H25
    species[13] = -2.981943750000000e+04 * invT + 2.049749225000000e+02 -
                  3.809218850000000e+01 * tc[0] -
                  2.710539240000000e-02 * tc[1] +
                  3.070091950000000e-06 * tc[2] -
                  2.373018108333333e-10 * tc[3] + 8.236587400000000e-15 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 14: SXC12H25
    species[14] = -1.676605390000000e+04 * invT - 4.972006039000000e+01 +
                  1.367870890000000e+00 * tc[0] -
                  6.867767399999999e-02 * tc[1] +
                  1.373460263333333e-05 * tc[2] -
                  1.970179683333333e-09 * tc[3] + 1.237179660000000e-13 * tc[4];
    // species 15: S3XC12H25
    species[15] = -1.676605390000000e+04 * invT - 4.972006039000000e+01 +
                  1.367870890000000e+00 * tc[0] -
                  6.867767399999999e-02 * tc[1] +
                  1.373460263333333e-05 * tc[2] -
                  1.970179683333333e-09 * tc[3] + 1.237179660000000e-13 * tc[4];
  } else {
    // species 14: SXC12H25
    species[14] = -3.121449880000000e+04 * invT + 2.037747598000000e+02 -
                  3.796882680000000e+01 * tc[0] -
                  2.693597320000000e-02 * tc[1] +
                  3.036187716666667e-06 * tc[2] -
                  2.339787525000000e-10 * tc[3] + 8.105421000000000e-15 * tc[4];
    // species 15: S3XC12H25
    species[15] = -3.121449880000000e+04 * invT + 2.037747598000000e+02 -
                  3.796882680000000e+01 * tc[0] -
                  2.693597320000000e-02 * tc[1] +
                  3.036187716666667e-06 * tc[2] -
                  2.339787525000000e-10 * tc[3] + 8.105421000000000e-15 * tc[4];
  }
}

// compute the a/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -4.00654253e+04 * invT - 5.37212785e+01 +
                 2.62181594e+00 * tc[0] - 7.36188555e-02 * tc[1] +
                 1.57328378e-05 * tc[2] - 2.56201057e-09 * tc[3] +
                 2.01801115e-13 * tc[4];
    // species 31: C12H24
    species[31] = -2.46345299e+04 * invT - 5.68793138e+01 +
                  2.96342681e+00 * tc[0] - 7.19961800e-02 * tc[1] +
                  1.60230669e-05 * tc[2] - 2.75145394e-09 * tc[3] +
                  2.31199095e-13 * tc[4];
  } else {
    // species 0: NC12H26
    species[0] = -5.48843465e+04 * invT + 2.10180426e+02 -
                 3.85095037e+01 * tc[0] - 2.81775024e-02 * tc[1] +
                 3.19155333e-06 * tc[2] - 2.46687385e-10 * tc[3] +
                 8.56220750e-15 * tc[4];
    // species 31: C12H24
    species[31] = -3.89405962e+04 * invT + 2.01292874e+02 -
                  3.74002111e+01 * tc[0] - 2.63115377e-02 * tc[1] +
                  2.97707198e-06 * tc[2] - 2.29958219e-10 * tc[3] +
                  7.97812495e-15 * tc[4];
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668285e+00 -
                 2.50000000e+00 * tc[0] - 3.52666409e-13 * tc[1] +
                 3.32653273e-16 * tc[2] - 1.91734693e-19 * tc[3] +
                 4.63866166e-23 * tc[4];
    // species 2: O
    species[2] = +2.91222592e+04 * invT + 1.16333640e-01 -
                 3.16826710e+00 * tc[0] + 1.63965942e-03 * tc[1] -
                 1.10717733e-06 * tc[2] + 5.10672187e-10 * tc[3] -
                 1.05632985e-13 * tc[4];
    // species 3: OH
    species[3] = +3.38153812e+03 * invT + 3.81573857e+00 -
                 4.12530561e+00 * tc[0] + 1.61272470e-03 * tc[1] -
                 1.08794115e-06 * tc[2] + 4.83211369e-10 * tc[3] -
                 1.03118689e-13 * tc[4];
    // species 4: HO2
    species[4] = +2.94808040e+02 * invT - 4.14864440e-01 -
                 4.30179801e+00 * tc[0] + 2.37456025e-03 * tc[1] -
                 3.52638152e-06 * tc[2] + 2.02303245e-09 * tc[3] -
                 4.64612562e-13 * tc[4];
    // species 5: H2
    species[5] = -9.17935173e+02 * invT + 6.61320882e-01 -
                 2.34433112e+00 * tc[0] - 3.99026037e-03 * tc[1] +
                 3.24635850e-06 * tc[2] - 1.67976745e-09 * tc[3] +
                 3.68805881e-13 * tc[4];
    // species 6: H2O
    species[6] = -3.02937267e+04 * invT + 4.04767277e+00 -
                 4.19864056e+00 * tc[0] + 1.01821705e-03 * tc[1] -
                 1.08673369e-06 * tc[2] + 4.57330885e-10 * tc[3] -
                 8.85989085e-14 * tc[4];
    // species 7: H2O2
    species[7] = -1.77025821e+04 * invT - 1.58938050e-01 -
                 4.27611269e+00 * tc[0] + 2.71411208e-04 * tc[1] -
                 2.78892835e-06 * tc[2] + 1.79809011e-09 * tc[3] -
                 4.31227182e-13 * tc[4];
    // species 8: O2
    species[8] = -1.06394356e+03 * invT - 8.75219370e-01 -
                 3.78245636e+00 * tc[0] + 1.49836708e-03 * tc[1] -
                 1.64121700e-06 * tc[2] + 8.06774591e-10 * tc[3] -
                 1.62186418e-13 * tc[4];
    // species 9: CH3
    species[9] = +1.64449988e+04 * invT + 1.06902607e+00 -
                 3.67359040e+00 * tc[0] - 1.00547588e-03 * tc[1] -
                 9.55036427e-07 * tc[2] + 5.72597854e-10 * tc[3] -
                 1.27192867e-13 * tc[4];
    // species 10: CH4
    species[10] = -1.02466476e+04 * invT + 8.79117989e+00 -
                  5.14987613e+00 * tc[0] + 6.83548940e-03 * tc[1] -
                  8.19667665e-06 * tc[2] + 4.03952522e-09 * tc[3] -
                  8.33469780e-13 * tc[4];
    // species 11: CH2O
    species[11] = -1.43089567e+04 * invT + 3.19091025e+00 -
                  4.79372315e+00 * tc[0] + 4.95416684e-03 * tc[1] -
                  6.22033347e-06 * tc[2] + 3.16071051e-09 * tc[3] -
                  6.58863260e-13 * tc[4];
    // species 12: CO
    species[12] = -1.43440860e+04 * invT - 9.28875810e-01 -
                  3.57953347e+00 * tc[0] + 3.05176840e-04 * tc[1] -
                  1.69469055e-07 * tc[2] - 7.55838237e-11 * tc[3] +
                  4.52212249e-14 * tc[4];
    // species 13: CO2
    species[13] = -4.83719697e+04 * invT - 8.54427870e+00 -
                  2.35677352e+00 * tc[0] - 4.49229839e-03 * tc[1] +
                  1.18726045e-06 * tc[2] - 2.04932518e-10 * tc[3] +
                  7.18497740e-15 * tc[4];
    // species 14: C2H2
    species[14] = +2.64289807e+04 * invT - 1.41310240e+01 -
                  8.08681094e-01 * tc[0] - 1.16807815e-02 * tc[1] +
                  5.91953025e-06 * tc[2] - 2.33460364e-09 * tc[3] +
                  4.25036487e-13 * tc[4];
    // species 15: C2H4
    species[15] = +5.08977593e+03 * invT - 1.13812948e+00 -
                  3.95920148e+00 * tc[0] + 3.78526124e-03 * tc[1] -
                  9.51650487e-06 * tc[2] + 5.76323961e-09 * tc[3] -
                  1.34942187e-12 * tc[4];
    // species 16: C2H6
    species[16] = -1.15222055e+04 * invT + 6.24601760e-01 -
                  4.29142492e+00 * tc[0] + 2.75077135e-03 * tc[1] -
                  9.99063813e-06 * tc[2] + 5.90388571e-09 * tc[3] -
                  1.34342886e-12 * tc[4];
    // species 17: CH2CHO
    species[17] = +6.20000000e+01 * invT - 7.16239110e+00 -
                  3.40906240e+00 * tc[0] - 5.36928700e-03 * tc[1] -
                  3.15248750e-07 * tc[2] + 5.96548592e-10 * tc[3] -
                  1.43369255e-13 * tc[4];
    // species 18: aC3H5
    species[18] = +1.92456290e+04 * invT - 1.68100305e+01 -
                  1.36318350e+00 * tc[0] - 9.90691050e-03 * tc[1] -
                  2.08284333e-06 * tc[2] + 2.77962958e-09 * tc[3] -
                  7.92328550e-13 * tc[4];
    // species 19: C3H6
    species[19] = +1.07482600e+03 * invT - 1.56520330e+01 -
                  1.49330700e+00 * tc[0] - 1.04625900e-02 * tc[1] -
                  7.47799000e-07 * tc[2] + 1.39076000e-09 * tc[3] -
                  3.57907300e-13 * tc[4];
    // species 20: C2H3CHO
    species[20] = -9.33573440e+03 * invT - 1.92267272e+01 -
                  1.27134980e+00 * tc[0] - 1.31155270e-02 * tc[1] +
                  1.54853842e-06 * tc[2] + 3.98643933e-10 * tc[3] -
                  1.67402715e-13 * tc[4];
    // species 21: C4H7
    species[21] = +2.26533280e+04 * invT - 2.36933837e+01 -
                  7.44494320e-01 * tc[0] - 1.98394285e-02 * tc[1] +
                  3.81634767e-06 * tc[2] - 1.77941442e-10 * tc[3] -
                  1.15481875e-13 * tc[4];
    // species 22: C4H81
    species[22] = -1.79040040e+03 * invT - 2.08813310e+01 -
                  1.18113800e+00 * tc[0] - 1.54266900e-02 * tc[1] -
                  8.47754117e-07 * tc[2] + 2.05457400e-09 * tc[3] -
                  5.55509650e-13 * tc[4];
    // species 23: C5H9
    species[23] = +2.81218870e+03 * invT - 3.98782551e+01 +
                  2.41901110e+00 * tc[0] - 2.02151945e-02 * tc[1] -
                  1.13003898e-06 * tc[2] + 2.81039517e-09 * tc[3] -
                  7.55835650e-13 * tc[4];
    // species 32: C12H25O2
    species[32] = -2.98918000e+04 * invT - 1.26600600e+01 -
                  5.31404000e+00 * tc[0] - 4.46936500e-02 * tc[1] -
                  2.42251667e-06 * tc[2] + 6.24375000e-09 * tc[3] -
                  1.67662500e-12 * tc[4];
    // species 33: OC12H23OOH
    species[33] = -6.65361000e+04 * invT + 9.65780000e-01 -
                  8.80733000e+00 * tc[0] - 3.25311500e-02 * tc[1] -
                  1.15843000e-05 * tc[2] + 1.05754167e-08 * tc[3] -
                  2.55495500e-12 * tc[4];
    // species 34: N2
    species[34] = -1.02089990e+03 * invT - 1.65169500e+00 -
                  3.29867700e+00 * tc[0] - 7.04120200e-04 * tc[1] +
                  6.60537000e-07 * tc[2] - 4.70126250e-10 * tc[3] +
                  1.22242700e-13 * tc[4];
  } else {
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668292e+00 -
                 2.50000001e+00 * tc[0] + 1.15421486e-11 * tc[1] -
                 2.69269913e-15 * tc[2] + 3.94596029e-19 * tc[3] -
                 2.49098679e-23 * tc[4];
    // species 2: O
    species[2] = +2.92175791e+04 * invT - 3.21491786e+00 -
                 2.56942078e+00 * tc[0] + 4.29870569e-05 * tc[1] -
                 6.99140982e-09 * tc[2] + 8.34814992e-13 * tc[3] -
                 6.14168455e-17 * tc[4];
    // species 3: OH
    species[3] = +3.71885774e+03 * invT - 3.83691187e+00 -
                 2.86472886e+00 * tc[0] - 5.28252240e-04 * tc[1] +
                 4.31804597e-08 * tc[2] - 2.54348895e-12 * tc[3] +
                 6.65979380e-17 * tc[4];
    // species 4: HO2
    species[4] = +1.11856713e+02 * invT - 7.67891250e-01 -
                 4.01721090e+00 * tc[0] - 1.11991006e-03 * tc[1] +
                 1.05609692e-07 * tc[2] - 9.52053083e-12 * tc[3] +
                 5.39542675e-16 * tc[4];
    // species 5: H2
    species[5] = -9.50158922e+02 * invT + 5.54230251e+00 -
                 3.33727920e+00 * tc[0] + 2.47012365e-05 * tc[1] -
                 8.32427963e-08 * tc[2] + 1.49638662e-11 * tc[3] -
                 1.00127688e-15 * tc[4];
    // species 6: H2O
    species[6] = -3.00042971e+04 * invT - 2.93277761e+00 -
                 3.03399249e+00 * tc[0] - 1.08845902e-03 * tc[1] +
                 2.73454197e-08 * tc[2] + 8.08683225e-12 * tc[3] -
                 8.41004960e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.78617877e+04 * invT + 2.48846230e-01 -
                 4.16500285e+00 * tc[0] - 2.45415847e-03 * tc[1] +
                 3.16898708e-07 * tc[2] - 3.09321655e-11 * tc[3] +
                 1.43954153e-15 * tc[4];
    // species 8: O2
    species[8] = -1.08845772e+03 * invT - 3.17069345e+00 -
                 3.28253784e+00 * tc[0] - 7.41543770e-04 * tc[1] +
                 1.26327778e-07 * tc[2] - 1.74558796e-11 * tc[3] +
                 1.08358897e-15 * tc[4];
    // species 9: CH3
    species[9] = +1.67755843e+04 * invT - 7.19435407e+00 -
                 2.28571772e+00 * tc[0] - 3.61995018e-03 * tc[1] +
                 4.97857247e-07 * tc[2] - 4.96403870e-11 * tc[3] +
                 2.33577197e-15 * tc[4];
    // species 10: CH4
    species[10] = -9.46834459e+03 * invT - 1.93624665e+01 -
                  7.48514950e-02 * tc[0] - 6.69547335e-03 * tc[1] +
                  9.55476348e-07 * tc[2] - 1.01910446e-10 * tc[3] +
                  5.09076150e-15 * tc[4];
    // species 11: CH2O
    species[11] = -1.39958323e+04 * invT - 1.28956329e+01 -
                  1.76069008e+00 * tc[0] - 4.60000041e-03 * tc[1] +
                  7.37098022e-07 * tc[2] - 8.38676767e-11 * tc[3] +
                  4.41927820e-15 * tc[4];
    // species 12: CO
    species[12] = -1.41518724e+04 * invT - 6.10350211e+00 -
                  2.71518561e+00 * tc[0] - 1.03126372e-03 * tc[1] +
                  1.66470962e-07 * tc[2] - 1.91710840e-11 * tc[3] +
                  1.01823858e-15 * tc[4];
    // species 13: CO2
    species[13] = -4.87591660e+04 * invT + 5.85822230e-01 -
                  3.85746029e+00 * tc[0] - 2.20718513e-03 * tc[1] +
                  3.69135673e-07 * tc[2] - 4.36241823e-11 * tc[3] +
                  2.36042082e-15 * tc[4];
    // species 14: C2H2
    species[14] = +2.59359992e+04 * invT + 4.37785085e+00 -
                  4.14756964e+00 * tc[0] - 2.98083332e-03 * tc[1] +
                  3.95491420e-07 * tc[2] - 3.89510143e-11 * tc[3] +
                  1.80617607e-15 * tc[4];
    // species 15: C2H4
    species[15] = +4.93988614e+03 * invT - 9.26925814e+00 -
                  2.03611116e+00 * tc[0] - 7.32270755e-03 * tc[1] +
                  1.11846319e-06 * tc[2] - 1.22685769e-10 * tc[3] +
                  6.28530305e-15 * tc[4];
    // species 16: C2H6
    species[16] = -1.14263932e+04 * invT - 1.50437292e+01 -
                  1.07188150e+00 * tc[0] - 1.08426339e-02 * tc[1] +
                  1.67093445e-06 * tc[2] - 1.84510001e-10 * tc[3] +
                  9.50014450e-15 * tc[4];
    // species 17: CH2CHO
    species[17] = -9.69500000e+02 * invT + 1.00077578e+01 -
                  5.97566990e+00 * tc[0] - 4.06529570e-03 * tc[1] +
                  4.57270750e-07 * tc[2] - 3.39192008e-11 * tc[3] +
                  1.08800855e-15 * tc[4];
    // species 18: aC3H5
    species[18] = +1.74824490e+04 * invT + 1.67438377e+01 -
                  6.50078770e+00 * tc[0] - 7.16236550e-03 * tc[1] +
                  9.46360533e-07 * tc[2] - 9.23400083e-11 * tc[3] +
                  4.51819435e-15 * tc[4];
    // species 19: C3H6
    species[19] = -9.23570300e+02 * invT + 1.90456070e+01 -
                  6.73225700e+00 * tc[0] - 7.45417000e-03 * tc[1] +
                  8.24983167e-07 * tc[2] - 6.01001833e-11 * tc[3] +
                  1.88310200e-15 * tc[4];
    // species 20: C2H3CHO
    species[20] = -1.07840540e+04 * invT + 9.66998720e+00 -
                  5.81118680e+00 * tc[0] - 8.55712800e-03 * tc[1] +
                  1.24723602e-06 * tc[2] - 1.18768742e-10 * tc[3] +
                  4.58734205e-15 * tc[4];
    // species 21: C4H7
    species[21] = +2.09550080e+04 * invT + 1.49027915e+01 -
                  7.01348350e+00 * tc[0] - 1.13172790e-02 * tc[1] +
                  1.54242450e-06 * tc[2] - 1.40066058e-10 * tc[3] +
                  5.20430850e-15 * tc[4];
    // species 22: C4H81
    species[22] = -2.13972310e+03 * invT - 1.44896169e+01 -
                  2.05358410e+00 * tc[0] - 1.71752535e-02 * tc[1] +
                  2.64719950e-06 * tc[2] - 2.75747183e-10 * tc[3] +
                  1.26805225e-14 * tc[4];
    // species 23: C5H9
    species[23] = -1.72183590e+03 * invT + 4.22645250e+01 -
                  1.01386400e+01 * tc[0] - 1.13570690e-02 * tc[1] +
                  1.29850772e-06 * tc[2] - 9.89710167e-11 * tc[3] +
                  3.29662240e-15 * tc[4];
    // species 32: C12H25O2
    species[32] = -3.74118000e+04 * invT + 1.36599200e+02 -
                  2.84782000e+01 * tc[0] - 2.68769500e-02 * tc[1] +
                  2.80310000e-06 * tc[2] - 2.09472500e-10 * tc[3] +
                  7.36040000e-15 * tc[4];
    // species 33: OC12H23OOH
    species[33] = -7.18258000e+04 * invT + 1.00439300e+02 -
                  2.36731000e+01 * tc[0] - 3.08196000e-02 * tc[1] +
                  3.49726667e-06 * tc[2] - 2.77638333e-10 * tc[3] +
                  1.01795000e-14 * tc[4];
    // species 34: N2
    species[34] = -9.22797700e+02 * invT - 4.05388800e+00 -
                  2.92664000e+00 * tc[0] - 7.43988400e-04 * tc[1] +
                  9.47460000e-08 * tc[2] - 8.41419833e-12 * tc[3] +
                  3.37667550e-16 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 24: C5H10
    species[24] = -4.46546666e+03 * invT - 3.43362138e+01 +
                  1.06223481e+00 * tc[0] - 2.87109147e-02 * tc[1] +
                  6.24144817e-06 * tc[2] - 1.06137491e-09 * tc[3] +
                  8.98048945e-14 * tc[4];
    // species 25: C6H12
    species[25] = -7.34368617e+03 * invT - 3.76648212e+01 +
                  1.35275205e+00 * tc[0] - 3.49327713e-02 * tc[1] +
                  7.65680037e-06 * tc[2] - 1.30806119e-09 * tc[3] +
                  1.10648088e-13 * tc[4];
    // species 26: C7H14
    species[26] = -1.02168601e+04 * invT - 4.11840087e+01 +
                  1.67720549e+00 * tc[0] - 4.12305800e-02 * tc[1] +
                  9.10840180e-06 * tc[2] - 1.56551919e-09 * tc[3] +
                  1.32868991e-13 * tc[4];
    // species 27: C8H16
    species[27] = -1.31074559e+04 * invT - 4.40801672e+01 +
                  1.89226915e+00 * tc[0] - 4.73033178e-02 * tc[1] +
                  1.04564254e-05 * tc[2] - 1.79298591e-09 * tc[3] +
                  1.51359342e-13 * tc[4];
    // species 28: C9H18
    species[28] = -1.59890847e+04 * invT - 4.72855954e+01 +
                  2.16108263e+00 * tc[0] - 5.34791485e-02 * tc[1] +
                  1.18495541e-05 * tc[2] - 2.03309231e-09 * tc[3] +
                  1.71385773e-13 * tc[4];
    // species 30: C10H20
    species[30] = -1.88708365e+04 * invT - 5.04861552e+01 +
                  2.42901688e+00 * tc[0] - 5.96527990e-02 * tc[1] +
                  1.32414838e-05 * tc[2] - 2.27280497e-09 * tc[3] +
                  1.91359186e-13 * tc[4];
  } else {
    // species 24: C5H10
    species[24] = -1.00898205e+04 * invT + 6.59535475e+01 -
                  1.45851539e+01 * tc[0] - 1.12036235e-02 * tc[1] +
                  1.27224671e-06 * tc[2] - 9.84908050e-11 * tc[3] +
                  3.42192569e-15 * tc[4];
    // species 25: C6H12
    species[25] = -1.42062860e+04 * invT + 8.52156380e+01 -
                  1.78337529e+01 * tc[0] - 1.33688829e-02 * tc[1] +
                  1.51672796e-06 * tc[2] - 1.17349807e-10 * tc[3] +
                  4.07562122e-15 * tc[4];
    // species 26: C7H14
    species[26] = -1.83260065e+04 * invT + 1.04528915e+02 -
                  2.10898039e+01 * tc[0] - 1.55303939e-02 * tc[1] +
                  1.76074655e-06 * tc[2] - 1.36171483e-10 * tc[3] +
                  4.72799110e-15 * tc[4];
    // species 27: C8H16
    species[27] = -2.24485674e+04 * invT + 1.23891728e+02 -
                  2.43540125e+01 * tc[0] - 1.76833231e-02 * tc[1] +
                  2.00347313e-06 * tc[2] - 1.54879211e-10 * tc[3] +
                  5.37611310e-15 * tc[4];
    // species 28: C9H18
    species[28] = -2.65709061e+04 * invT + 1.43232841e+02 -
                  2.76142176e+01 * tc[0] - 1.98412643e-02 * tc[1] +
                  2.24699077e-06 * tc[2] - 1.73658710e-10 * tc[3] +
                  6.02696470e-15 * tc[4];
    // species 30: C10H20
    species[30] = -3.06937307e+04 * invT + 1.62580562e+02 -
                  3.08753903e+01 * tc[0] - 2.19985763e-02 * tc[1] +
                  2.49042550e-06 * tc[2] - 1.92431398e-10 * tc[3] +
                  6.67757385e-15 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 29: PXC9H19
    species[29] = -6.80818512e+03 * invT - 4.43957721e+01 +
                  1.04387292e+00 * tc[0] - 5.28086415e-02 * tc[1] +
                  1.11366662e-05 * tc[2] - 1.78738472e-09 * tc[3] +
                  1.38702138e-13 * tc[4];
  } else {
    // species 29: PXC9H19
    species[29] = -1.74516030e+04 * invT + 1.44147648e+02 -
                  2.83097514e+01 * tc[0] - 2.06328672e-02 * tc[1] +
                  2.33972148e-06 * tc[2] - 1.80979059e-10 * tc[3] +
                  6.28461535e-15 * tc[4];
  }
}

// compute the e/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -3.62181594e+00 + 7.36188555e-02 * tc[1] -
                 3.14656757e-05 * tc[2] + 7.68603170e-09 * tc[3] -
                 8.07204460e-13 * tc[4] - 4.00654253e+04 * invT;
    // species 31: C12H24
    species[31] = -3.96342681e+00 + 7.19961800e-02 * tc[1] -
                  3.20461338e-05 * tc[2] + 8.25436183e-09 * tc[3] -
                  9.24796380e-13 * tc[4] - 2.46345299e+04 * invT;
  } else {
    // species 0: NC12H26
    species[0] = +3.75095037e+01 + 2.81775024e-02 * tc[1] -
                 6.38310667e-06 * tc[2] + 7.40062155e-10 * tc[3] -
                 3.42488300e-14 * tc[4] - 5.48843465e+04 * invT;
    // species 31: C12H24
    species[31] = +3.64002111e+01 + 2.63115377e-02 * tc[1] -
                  5.95414397e-06 * tc[2] + 6.89874658e-10 * tc[3] -
                  3.19124998e-14 * tc[4] - 3.89405962e+04 * invT;
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +1.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 3: OH
    species[3] = +3.12530561e+00 - 1.61272470e-03 * tc[1] +
                 2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
                 4.12474758e-13 * tc[4] + 3.38153812e+03 * invT;
    // species 4: HO2
    species[4] = +3.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 5: H2
    species[5] = +1.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 6: H2O
    species[6] = +3.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 8: O2
    species[8] = +2.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 9: CH3
    species[9] = +2.67359040e+00 + 1.00547588e-03 * tc[1] +
                 1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                 5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 10: CH4
    species[10] = +4.14987613e+00 - 6.83548940e-03 * tc[1] +
                  1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                  3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 11: CH2O
    species[11] = +3.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 12: CO
    species[12] = +2.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 13: CO2
    species[13] = +1.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 14: C2H2
    species[14] = -1.91318906e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 15: C2H4
    species[15] = +2.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 16: C2H6
    species[16] = +3.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 17: CH2CHO
    species[17] = +2.40906240e+00 + 5.36928700e-03 * tc[1] +
                  6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
                  5.73477020e-13 * tc[4] + 6.20000000e+01 * invT;
    // species 18: aC3H5
    species[18] = +3.63183500e-01 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 19: C3H6
    species[19] = +4.93307000e-01 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 20: C2H3CHO
    species[20] = +2.71349800e-01 + 1.31155270e-02 * tc[1] -
                  3.09707683e-06 * tc[2] - 1.19593180e-09 * tc[3] +
                  6.69610860e-13 * tc[4] - 9.33573440e+03 * invT;
    // species 21: C4H7
    species[21] = -2.55505680e-01 + 1.98394285e-02 * tc[1] -
                  7.63269533e-06 * tc[2] + 5.33824325e-10 * tc[3] +
                  4.61927500e-13 * tc[4] + 2.26533280e+04 * invT;
    // species 22: C4H81
    species[22] = +1.81138000e-01 + 1.54266900e-02 * tc[1] +
                  1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
                  2.22203860e-12 * tc[4] - 1.79040040e+03 * invT;
    // species 23: C5H9
    species[23] = -3.41901110e+00 + 2.02151945e-02 * tc[1] +
                  2.26007797e-06 * tc[2] - 8.43118550e-09 * tc[3] +
                  3.02334260e-12 * tc[4] + 2.81218870e+03 * invT;
    // species 32: C12H25O2
    species[32] = +4.31404000e+00 + 4.46936500e-02 * tc[1] +
                  4.84503333e-06 * tc[2] - 1.87312500e-08 * tc[3] +
                  6.70650000e-12 * tc[4] - 2.98918000e+04 * invT;
    // species 33: OC12H23OOH
    species[33] = +7.80733000e+00 + 3.25311500e-02 * tc[1] +
                  2.31686000e-05 * tc[2] - 3.17262500e-08 * tc[3] +
                  1.02198200e-11 * tc[4] - 6.65361000e+04 * invT;
    // species 34: N2
    species[34] = +2.29867700e+00 + 7.04120200e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
  } else {
    // species 1: H
    species[1] = +1.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +1.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 3: OH
    species[3] = +1.86472886e+00 + 5.28252240e-04 * tc[1] -
                 8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
                 2.66391752e-16 * tc[4] + 3.71885774e+03 * invT;
    // species 4: HO2
    species[4] = +3.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 5: H2
    species[5] = +2.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 6: H2O
    species[6] = +2.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 8: O2
    species[8] = +2.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 9: CH3
    species[9] = +1.28571772e+00 + 3.61995018e-03 * tc[1] -
                 9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                 9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 10: CH4
    species[10] = -9.25148505e-01 + 6.69547335e-03 * tc[1] -
                  1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                  2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 11: CH2O
    species[11] = +7.60690080e-01 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 12: CO
    species[12] = +1.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 13: CO2
    species[13] = +2.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 14: C2H2
    species[14] = +3.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 15: C2H4
    species[15] = +1.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 16: C2H6
    species[16] = +7.18815000e-02 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 17: CH2CHO
    species[17] = +4.97566990e+00 + 4.06529570e-03 * tc[1] -
                  9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
                  4.35203420e-15 * tc[4] - 9.69500000e+02 * invT;
    // species 18: aC3H5
    species[18] = +5.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 19: C3H6
    species[19] = +5.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 20: C2H3CHO
    species[20] = +4.81118680e+00 + 8.55712800e-03 * tc[1] -
                  2.49447203e-06 * tc[2] + 3.56306225e-10 * tc[3] -
                  1.83493682e-14 * tc[4] - 1.07840540e+04 * invT;
    // species 21: C4H7
    species[21] = +6.01348350e+00 + 1.13172790e-02 * tc[1] -
                  3.08484900e-06 * tc[2] + 4.20198175e-10 * tc[3] -
                  2.08172340e-14 * tc[4] + 2.09550080e+04 * invT;
    // species 22: C4H81
    species[22] = +1.05358410e+00 + 1.71752535e-02 * tc[1] -
                  5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
                  5.07220900e-14 * tc[4] - 2.13972310e+03 * invT;
    // species 23: C5H9
    species[23] = +9.13864000e+00 + 1.13570690e-02 * tc[1] -
                  2.59701543e-06 * tc[2] + 2.96913050e-10 * tc[3] -
                  1.31864896e-14 * tc[4] - 1.72183590e+03 * invT;
    // species 32: C12H25O2
    species[32] = +2.74782000e+01 + 2.68769500e-02 * tc[1] -
                  5.60620000e-06 * tc[2] + 6.28417500e-10 * tc[3] -
                  2.94416000e-14 * tc[4] - 3.74118000e+04 * invT;
    // species 33: OC12H23OOH
    species[33] = +2.26731000e+01 + 3.08196000e-02 * tc[1] -
                  6.99453333e-06 * tc[2] + 8.32915000e-10 * tc[3] -
                  4.07180000e-14 * tc[4] - 7.18258000e+04 * invT;
    // species 34: N2
    species[34] = +1.92664000e+00 + 7.43988400e-04 * tc[1] -
                  1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 24: C5H10
    species[24] = -2.06223481e+00 + 2.87109147e-02 * tc[1] -
                  1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
                  3.59219578e-13 * tc[4] - 4.46546666e+03 * invT;
    // species 25: C6H12
    species[25] = -2.35275205e+00 + 3.49327713e-02 * tc[1] -
                  1.53136007e-05 * tc[2] + 3.92418358e-09 * tc[3] -
                  4.42592350e-13 * tc[4] - 7.34368617e+03 * invT;
    // species 26: C7H14
    species[26] = -2.67720549e+00 + 4.12305800e-02 * tc[1] -
                  1.82168036e-05 * tc[2] + 4.69655757e-09 * tc[3] -
                  5.31475966e-13 * tc[4] - 1.02168601e+04 * invT;
    // species 27: C8H16
    species[27] = -2.89226915e+00 + 4.73033178e-02 * tc[1] -
                  2.09128507e-05 * tc[2] + 5.37895772e-09 * tc[3] -
                  6.05437366e-13 * tc[4] - 1.31074559e+04 * invT;
    // species 28: C9H18
    species[28] = -3.16108263e+00 + 5.34791485e-02 * tc[1] -
                  2.36991081e-05 * tc[2] + 6.09927692e-09 * tc[3] -
                  6.85543094e-13 * tc[4] - 1.59890847e+04 * invT;
    // species 30: C10H20
    species[30] = -3.42901688e+00 + 5.96527990e-02 * tc[1] -
                  2.64829675e-05 * tc[2] + 6.81841490e-09 * tc[3] -
                  7.65436746e-13 * tc[4] - 1.88708365e+04 * invT;
  } else {
    // species 24: C5H10
    species[24] = +1.35851539e+01 + 1.12036235e-02 * tc[1] -
                  2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
                  1.36877028e-14 * tc[4] - 1.00898205e+04 * invT;
    // species 25: C6H12
    species[25] = +1.68337529e+01 + 1.33688829e-02 * tc[1] -
                  3.03345591e-06 * tc[2] + 3.52049420e-10 * tc[3] -
                  1.63024849e-14 * tc[4] - 1.42062860e+04 * invT;
    // species 26: C7H14
    species[26] = +2.00898039e+01 + 1.55303939e-02 * tc[1] -
                  3.52149310e-06 * tc[2] + 4.08514450e-10 * tc[3] -
                  1.89119644e-14 * tc[4] - 1.83260065e+04 * invT;
    // species 27: C8H16
    species[27] = +2.33540125e+01 + 1.76833231e-02 * tc[1] -
                  4.00694627e-06 * tc[2] + 4.64637633e-10 * tc[3] -
                  2.15044524e-14 * tc[4] - 2.24485674e+04 * invT;
    // species 28: C9H18
    species[28] = +2.66142176e+01 + 1.98412643e-02 * tc[1] -
                  4.49398153e-06 * tc[2] + 5.20976130e-10 * tc[3] -
                  2.41078588e-14 * tc[4] - 2.65709061e+04 * invT;
    // species 30: C10H20
    species[30] = +2.98753903e+01 + 2.19985763e-02 * tc[1] -
                  4.98085100e-06 * tc[2] + 5.77294195e-10 * tc[3] -
                  2.67102954e-14 * tc[4] - 3.06937307e+04 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 29: PXC9H19
    species[29] = -2.04387292e+00 + 5.28086415e-02 * tc[1] -
                  2.22733324e-05 * tc[2] + 5.36215415e-09 * tc[3] -
                  5.54808550e-13 * tc[4] - 6.80818512e+03 * invT;
  } else {
    // species 29: PXC9H19
    species[29] = +2.73097514e+01 + 2.06328672e-02 * tc[1] -
                  4.67944297e-06 * tc[2] + 5.42937177e-10 * tc[3] -
                  2.51384614e-14 * tc[4] - 1.74516030e+04 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -2.62181594e+00 + 7.36188555e-02 * tc[1] -
                 3.14656757e-05 * tc[2] + 7.68603170e-09 * tc[3] -
                 8.07204460e-13 * tc[4] - 4.00654253e+04 * invT;
    // species 31: C12H24
    species[31] = -2.96342681e+00 + 7.19961800e-02 * tc[1] -
                  3.20461338e-05 * tc[2] + 8.25436183e-09 * tc[3] -
                  9.24796380e-13 * tc[4] - 2.46345299e+04 * invT;
  } else {
    // species 0: NC12H26
    species[0] = +3.85095037e+01 + 2.81775024e-02 * tc[1] -
                 6.38310667e-06 * tc[2] + 7.40062155e-10 * tc[3] -
                 3.42488300e-14 * tc[4] - 5.48843465e+04 * invT;
    // species 31: C12H24
    species[31] = +3.74002111e+01 + 2.63115377e-02 * tc[1] -
                  5.95414397e-06 * tc[2] + 6.89874658e-10 * tc[3] -
                  3.19124998e-14 * tc[4] - 3.89405962e+04 * invT;
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +2.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +3.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 3: OH
    species[3] = +4.12530561e+00 - 1.61272470e-03 * tc[1] +
                 2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
                 4.12474758e-13 * tc[4] + 3.38153812e+03 * invT;
    // species 4: HO2
    species[4] = +4.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 5: H2
    species[5] = +2.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 6: H2O
    species[6] = +4.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 8: O2
    species[8] = +3.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 9: CH3
    species[9] = +3.67359040e+00 + 1.00547588e-03 * tc[1] +
                 1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                 5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 10: CH4
    species[10] = +5.14987613e+00 - 6.83548940e-03 * tc[1] +
                  1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                  3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 11: CH2O
    species[11] = +4.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 12: CO
    species[12] = +3.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 13: CO2
    species[13] = +2.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 14: C2H2
    species[14] = +8.08681094e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 15: C2H4
    species[15] = +3.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 16: C2H6
    species[16] = +4.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 17: CH2CHO
    species[17] = +3.40906240e+00 + 5.36928700e-03 * tc[1] +
                  6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
                  5.73477020e-13 * tc[4] + 6.20000000e+01 * invT;
    // species 18: aC3H5
    species[18] = +1.36318350e+00 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 19: C3H6
    species[19] = +1.49330700e+00 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 20: C2H3CHO
    species[20] = +1.27134980e+00 + 1.31155270e-02 * tc[1] -
                  3.09707683e-06 * tc[2] - 1.19593180e-09 * tc[3] +
                  6.69610860e-13 * tc[4] - 9.33573440e+03 * invT;
    // species 21: C4H7
    species[21] = +7.44494320e-01 + 1.98394285e-02 * tc[1] -
                  7.63269533e-06 * tc[2] + 5.33824325e-10 * tc[3] +
                  4.61927500e-13 * tc[4] + 2.26533280e+04 * invT;
    // species 22: C4H81
    species[22] = +1.18113800e+00 + 1.54266900e-02 * tc[1] +
                  1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
                  2.22203860e-12 * tc[4] - 1.79040040e+03 * invT;
    // species 23: C5H9
    species[23] = -2.41901110e+00 + 2.02151945e-02 * tc[1] +
                  2.26007797e-06 * tc[2] - 8.43118550e-09 * tc[3] +
                  3.02334260e-12 * tc[4] + 2.81218870e+03 * invT;
    // species 32: C12H25O2
    species[32] = +5.31404000e+00 + 4.46936500e-02 * tc[1] +
                  4.84503333e-06 * tc[2] - 1.87312500e-08 * tc[3] +
                  6.70650000e-12 * tc[4] - 2.98918000e+04 * invT;
    // species 33: OC12H23OOH
    species[33] = +8.80733000e+00 + 3.25311500e-02 * tc[1] +
                  2.31686000e-05 * tc[2] - 3.17262500e-08 * tc[3] +
                  1.02198200e-11 * tc[4] - 6.65361000e+04 * invT;
    // species 34: N2
    species[34] = +3.29867700e+00 + 7.04120200e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
  } else {
    // species 1: H
    species[1] = +2.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 3: OH
    species[3] = +2.86472886e+00 + 5.28252240e-04 * tc[1] -
                 8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
                 2.66391752e-16 * tc[4] + 3.71885774e+03 * invT;
    // species 4: HO2
    species[4] = +4.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 5: H2
    species[5] = +3.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 6: H2O
    species[6] = +3.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 8: O2
    species[8] = +3.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 9: CH3
    species[9] = +2.28571772e+00 + 3.61995018e-03 * tc[1] -
                 9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                 9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 10: CH4
    species[10] = +7.48514950e-02 + 6.69547335e-03 * tc[1] -
                  1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                  2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 11: CH2O
    species[11] = +1.76069008e+00 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 12: CO
    species[12] = +2.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 13: CO2
    species[13] = +3.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 14: C2H2
    species[14] = +4.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 15: C2H4
    species[15] = +2.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 16: C2H6
    species[16] = +1.07188150e+00 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 17: CH2CHO
    species[17] = +5.97566990e+00 + 4.06529570e-03 * tc[1] -
                  9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
                  4.35203420e-15 * tc[4] - 9.69500000e+02 * invT;
    // species 18: aC3H5
    species[18] = +6.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 19: C3H6
    species[19] = +6.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 20: C2H3CHO
    species[20] = +5.81118680e+00 + 8.55712800e-03 * tc[1] -
                  2.49447203e-06 * tc[2] + 3.56306225e-10 * tc[3] -
                  1.83493682e-14 * tc[4] - 1.07840540e+04 * invT;
    // species 21: C4H7
    species[21] = +7.01348350e+00 + 1.13172790e-02 * tc[1] -
                  3.08484900e-06 * tc[2] + 4.20198175e-10 * tc[3] -
                  2.08172340e-14 * tc[4] + 2.09550080e+04 * invT;
    // species 22: C4H81
    species[22] = +2.05358410e+00 + 1.71752535e-02 * tc[1] -
                  5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
                  5.07220900e-14 * tc[4] - 2.13972310e+03 * invT;
    // species 23: C5H9
    species[23] = +1.01386400e+01 + 1.13570690e-02 * tc[1] -
                  2.59701543e-06 * tc[2] + 2.96913050e-10 * tc[3] -
                  1.31864896e-14 * tc[4] - 1.72183590e+03 * invT;
    // species 32: C12H25O2
    species[32] = +2.84782000e+01 + 2.68769500e-02 * tc[1] -
                  5.60620000e-06 * tc[2] + 6.28417500e-10 * tc[3] -
                  2.94416000e-14 * tc[4] - 3.74118000e+04 * invT;
    // species 33: OC12H23OOH
    species[33] = +2.36731000e+01 + 3.08196000e-02 * tc[1] -
                  6.99453333e-06 * tc[2] + 8.32915000e-10 * tc[3] -
                  4.07180000e-14 * tc[4] - 7.18258000e+04 * invT;
    // species 34: N2
    species[34] = +2.92664000e+00 + 7.43988400e-04 * tc[1] -
                  1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 24: C5H10
    species[24] = -1.06223481e+00 + 2.87109147e-02 * tc[1] -
                  1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
                  3.59219578e-13 * tc[4] - 4.46546666e+03 * invT;
    // species 25: C6H12
    species[25] = -1.35275205e+00 + 3.49327713e-02 * tc[1] -
                  1.53136007e-05 * tc[2] + 3.92418358e-09 * tc[3] -
                  4.42592350e-13 * tc[4] - 7.34368617e+03 * invT;
    // species 26: C7H14
    species[26] = -1.67720549e+00 + 4.12305800e-02 * tc[1] -
                  1.82168036e-05 * tc[2] + 4.69655757e-09 * tc[3] -
                  5.31475966e-13 * tc[4] - 1.02168601e+04 * invT;
    // species 27: C8H16
    species[27] = -1.89226915e+00 + 4.73033178e-02 * tc[1] -
                  2.09128507e-05 * tc[2] + 5.37895772e-09 * tc[3] -
                  6.05437366e-13 * tc[4] - 1.31074559e+04 * invT;
    // species 28: C9H18
    species[28] = -2.16108263e+00 + 5.34791485e-02 * tc[1] -
                  2.36991081e-05 * tc[2] + 6.09927692e-09 * tc[3] -
                  6.85543094e-13 * tc[4] - 1.59890847e+04 * invT;
    // species 30: C10H20
    species[30] = -2.42901688e+00 + 5.96527990e-02 * tc[1] -
                  2.64829675e-05 * tc[2] + 6.81841490e-09 * tc[3] -
                  7.65436746e-13 * tc[4] - 1.88708365e+04 * invT;
  } else {
    // species 24: C5H10
    species[24] = +1.45851539e+01 + 1.12036235e-02 * tc[1] -
                  2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
                  1.36877028e-14 * tc[4] - 1.00898205e+04 * invT;
    // species 25: C6H12
    species[25] = +1.78337529e+01 + 1.33688829e-02 * tc[1] -
                  3.03345591e-06 * tc[2] + 3.52049420e-10 * tc[3] -
                  1.63024849e-14 * tc[4] - 1.42062860e+04 * invT;
    // species 26: C7H14
    species[26] = +2.10898039e+01 + 1.55303939e-02 * tc[1] -
                  3.52149310e-06 * tc[2] + 4.08514450e-10 * tc[3] -
                  1.89119644e-14 * tc[4] - 1.83260065e+04 * invT;
    // species 27: C8H16
    species[27] = +2.43540125e+01 + 1.76833231e-02 * tc[1] -
                  4.00694627e-06 * tc[2] + 4.64637633e-10 * tc[3] -
                  2.15044524e-14 * tc[4] - 2.24485674e+04 * invT;
    // species 28: C9H18
    species[28] = +2.76142176e+01 + 1.98412643e-02 * tc[1] -
                  4.49398153e-06 * tc[2] + 5.20976130e-10 * tc[3] -
                  2.41078588e-14 * tc[4] - 2.65709061e+04 * invT;
    // species 30: C10H20
    species[30] = +3.08753903e+01 + 2.19985763e-02 * tc[1] -
                  4.98085100e-06 * tc[2] + 5.77294195e-10 * tc[3] -
                  2.67102954e-14 * tc[4] - 3.06937307e+04 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 29: PXC9H19
    species[29] = -1.04387292e+00 + 5.28086415e-02 * tc[1] -
                  2.22733324e-05 * tc[2] + 5.36215415e-09 * tc[3] -
                  5.54808550e-13 * tc[4] - 6.80818512e+03 * invT;
  } else {
    // species 29: PXC9H19
    species[29] = +2.83097514e+01 + 2.06328672e-02 * tc[1] -
                  4.67944297e-06 * tc[2] + 5.42937177e-10 * tc[3] -
                  2.51384614e-14 * tc[4] - 1.74516030e+04 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: CH2
    species[0] = +3.76267867e+00 + 4.84436072e-04 * tc[1] +
                 9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
                 3.37483438e-13 * tc[4] + 4.60040401e+04 * invT;
    // species 1: CH2*
    species[1] = +4.19860411e+00 - 1.18330710e-03 * tc[1] +
                 2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
                 3.88629474e-13 * tc[4] + 5.04968163e+04 * invT;
    // species 2: HCO
    species[2] = +4.22118584e+00 - 1.62196266e-03 * tc[1] +
                 4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
                 8.67537730e-13 * tc[4] + 3.83956496e+03 * invT;
    // species 3: CH3O
    species[3] = +3.71180502e+00 - 1.40231653e-03 * tc[1] +
                 1.25516990e-05 * tc[2] - 1.18268022e-08 * tc[3] +
                 3.73176840e-12 * tc[4] + 1.29569760e+03 * invT;
    // species 4: C2H3
    species[4] = +3.21246645e+00 + 7.57395810e-04 * tc[1] +
                 8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
                 2.94301746e-12 * tc[4] + 3.48598468e+04 * invT;
    // species 5: C2H5
    species[5] = +4.30646568e+00 - 2.09329446e-03 * tc[1] +
                 1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
                 4.61018008e-12 * tc[4] + 1.28416265e+04 * invT;
    // species 6: nC3H7
    species[6] = +1.04911730e+00 + 1.30044865e-02 * tc[1] +
                 7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
                 1.87440414e-12 * tc[4] + 1.03123460e+04 * invT;
    // species 7: pC4H9
    species[7] = +1.20870420e+00 + 1.91487485e-02 * tc[1] -
                 2.42201697e-06 * tc[2] - 3.85713675e-09 * tc[3] +
                 1.73718870e-12 * tc[4] + 7.32210400e+03 * invT;
    // species 16: C12OOH
    species[16] = +5.15231000e+00 + 4.98956500e-02 * tc[1] -
                  6.02116667e-06 * tc[2] - 1.04608750e-08 * tc[3] +
                  4.45572000e-12 * tc[4] - 2.38380000e+04 * invT;
    // species 17: O2C12H24OOH
    species[17] = +4.81972000e-01 + 7.25100000e-02 * tc[1] -
                  3.33102667e-05 * tc[2] + 6.51055000e-09 * tc[3] +
                  2.38716000e-13 * tc[4] - 4.16875000e+04 * invT;
  } else {
    // species 0: CH2
    species[0] = +2.87410113e+00 + 1.82819646e-03 * tc[1] -
                 4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
                 3.75455134e-15 * tc[4] + 4.62636040e+04 * invT;
    // species 1: CH2*
    species[1] = +2.29203842e+00 + 2.32794318e-03 * tc[1] -
                 6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
                 6.79432730e-15 * tc[4] + 5.09259997e+04 * invT;
    // species 2: HCO
    species[2] = +2.77217438e+00 + 2.47847763e-03 * tc[1] -
                 8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
                 1.06701742e-14 * tc[4] + 4.01191815e+03 * invT;
    // species 3: CH3O
    species[3] = +4.75779238e+00 + 3.72071237e-03 * tc[1] -
                 8.99017253e-07 * tc[2] + 1.09522626e-10 * tc[3] -
                 5.27074196e-15 * tc[4] + 3.78111940e+02 * invT;
    // species 4: C2H3
    species[4] = +3.01672400e+00 + 5.16511460e-03 * tc[1] -
                 1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
                 1.72521408e-14 * tc[4] + 3.46128739e+04 * invT;
    // species 5: C2H5
    species[5] = +1.95465642e+00 + 8.69863610e-03 * tc[1] -
                 2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
                 2.99283152e-14 * tc[4] + 1.28575200e+04 * invT;
    // species 6: nC3H7
    species[6] = +7.70974790e+00 + 8.01574250e-03 * tc[1] -
                 1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
                 7.77254380e-15 * tc[4] + 7.97622360e+03 * invT;
    // species 7: pC4H9
    species[7] = +8.68223950e+00 + 1.18455355e-02 * tc[1] -
                 2.53162883e-06 * tc[2] + 1.66067840e-10 * tc[3] +
                 1.09690272e-14 * tc[4] + 4.96440580e+03 * invT;
    // species 16: C12OOH
    species[16] = +2.92019000e+01 + 2.57958500e-02 * tc[1] -
                  5.24423333e-06 * tc[2] + 5.75765000e-10 * tc[3] -
                  2.65280000e-14 * tc[4] - 3.11192000e+04 * invT;
    // species 17: O2C12H24OOH
    species[17] = +3.50907000e+01 + 2.55295000e-02 * tc[1] -
                  5.14483333e-06 * tc[2] + 5.61567500e-10 * tc[3] -
                  2.57802000e-14 * tc[4] - 5.12675000e+04 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 8: PXC5H11
    species[8] = +5.24384081e-02 + 2.80398479e-02 * tc[1] -
                 1.10515268e-05 * tc[2] + 2.44383445e-09 * tc[3] -
                 2.28019320e-13 * tc[4] + 4.71611460e+03 * invT;
    // species 9: PXC6H13
    species[9] = -2.04871465e-01 + 3.41900636e-02 * tc[1] -
                 1.38149304e-05 * tc[2] + 3.15389505e-09 * tc[3] -
                 3.06240116e-13 * tc[4] + 1.83280393e+03 * invT;
    // species 10: PXC7H15
    species[10] = -4.99570406e-01 + 4.04413234e-02 * tc[1] -
                  1.66844251e-05 * tc[2] + 3.91373270e-09 * tc[3] -
                  3.93232454e-13 * tc[4] - 1.04590223e+03 * invT;
    // species 11: PXC8H17
    species[11] = -7.72759438e-01 + 4.66274853e-02 * tc[1] -
                  1.94815748e-05 * tc[2] + 4.63925535e-09 * tc[3] -
                  4.74254966e-13 * tc[4] - 3.92689511e+03 * invT;
    // species 12: PXC10H21
    species[12] = -1.31358348e+00 + 5.89864065e-02 * tc[1] -
                  2.50614360e-05 * tc[2] + 6.08327765e-09 * tc[3] -
                  6.35045704e-13 * tc[4] - 9.68967550e+03 * invT;
    // species 13: PXC12H25
    species[13] = -1.85028741e+00 + 7.13353540e-02 * tc[1] -
                  3.06305518e-05 * tc[2] + 7.52208480e-09 * tc[3] -
                  7.94908600e-13 * tc[4] - 1.54530435e+04 * invT;
  } else {
    // species 8: PXC5H11
    species[8] = +1.52977446e+01 + 1.19867655e-02 * tc[1] -
                 2.72797649e-06 * tc[2] + 3.17207690e-10 * tc[3] -
                 1.47081811e-14 * tc[4] - 9.80712307e+02 * invT;
    // species 9: PXC6H13
    species[9] = +1.85385470e+01 + 1.41553981e-02 * tc[1] -
                 3.21769082e-06 * tc[2] + 3.73868963e-10 * tc[3] -
                 1.73267213e-14 * tc[4] - 5.09299041e+03 * invT;
    // species 10: PXC7H15
    species[10] = +2.17940709e+01 + 1.63140122e-02 * tc[1] -
                  3.70460813e-06 * tc[2] + 4.30167870e-10 * tc[3] -
                  1.99273400e-14 * tc[4] - 9.20938221e+03 * invT;
    // species 11: PXC8H17
    species[11] = +2.50510356e+01 + 1.84740081e-02 * tc[1] -
                  4.19217547e-06 * tc[2] + 4.86571022e-10 * tc[3] -
                  2.25337796e-14 * tc[4] - 1.33300535e+04 * invT;
    // species 12: PXC10H21
    species[12] = +3.15697160e+01 + 2.27909202e-02 * tc[1] -
                  5.16649883e-06 * tc[2] + 5.99277332e-10 * tc[3] -
                  2.77419118e-14 * tc[4] - 2.15737832e+04 * invT;
    // species 13: PXC12H25
    species[13] = +3.80921885e+01 + 2.71053924e-02 * tc[1] -
                  6.14018390e-06 * tc[2] + 7.11905433e-10 * tc[3] -
                  3.29463496e-14 * tc[4] - 2.98194375e+04 * invT;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 14: SXC12H25
    species[14] = -1.36787089e+00 + 6.86776740e-02 * tc[1] -
                  2.74692053e-05 * tc[2] + 5.91053905e-09 * tc[3] -
                  4.94871864e-13 * tc[4] - 1.67660539e+04 * invT;
    // species 15: S3XC12H25
    species[15] = -1.36787089e+00 + 6.86776740e-02 * tc[1] -
                  2.74692053e-05 * tc[2] + 5.91053905e-09 * tc[3] -
                  4.94871864e-13 * tc[4] - 1.67660539e+04 * invT;
  } else {
    // species 14: SXC12H25
    species[14] = +3.79688268e+01 + 2.69359732e-02 * tc[1] -
                  6.07237543e-06 * tc[2] + 7.01936257e-10 * tc[3] -
                  3.24216840e-14 * tc[4] - 3.12144988e+04 * invT;
    // species 15: S3XC12H25
    species[15] = +3.79688268e+01 + 2.69359732e-02 * tc[1] -
                  6.07237543e-06 * tc[2] + 7.01936257e-10 * tc[3] -
                  3.24216840e-14 * tc[4] - 3.12144988e+04 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = -2.62181594e+00 * tc[0] + 1.47237711e-01 * tc[1] -
                 4.71985136e-05 * tc[2] + 1.02480423e-08 * tc[3] -
                 1.00900558e-12 * tc[4] + 5.00994626e+01;
    // species 31: C12H24
    species[31] = -2.96342681e+00 * tc[0] + 1.43992360e-01 * tc[1] -
                  4.80692008e-05 * tc[2] + 1.10058158e-08 * tc[3] -
                  1.15599547e-12 * tc[4] + 5.29158870e+01;
  } else {
    // species 0: NC12H26
    species[0] = +3.85095037e+01 * tc[0] + 5.63550048e-02 * tc[1] -
                 9.57466000e-06 * tc[2] + 9.86749540e-10 * tc[3] -
                 4.28110375e-14 * tc[4] - 1.72670922e+02;
    // species 31: C12H24
    species[31] = +3.74002111e+01 * tc[0] + 5.26230753e-02 * tc[1] -
                  8.93121595e-06 * tc[2] + 9.19832877e-10 * tc[3] -
                  3.98906247e-14 * tc[4] - 1.64892663e+02;
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +2.50000000e+00 * tc[0] + 7.05332819e-13 * tc[1] -
                 9.97959820e-16 * tc[2] + 7.66938773e-19 * tc[3] -
                 2.31933083e-22 * tc[4] - 4.46682853e-01;
    // species 2: O
    species[2] = +3.16826710e+00 * tc[0] - 3.27931884e-03 * tc[1] +
                 3.32153198e-06 * tc[2] - 2.04268875e-09 * tc[3] +
                 5.28164927e-13 * tc[4] + 2.05193346e+00;
    // species 3: OH
    species[3] = +4.12530561e+00 * tc[0] - 3.22544939e-03 * tc[1] +
                 3.26382346e-06 * tc[2] - 1.93284548e-09 * tc[3] +
                 5.15593447e-13 * tc[4] - 6.90432960e-01;
    // species 4: HO2
    species[4] = +4.30179801e+00 * tc[0] - 4.74912051e-03 * tc[1] +
                 1.05791445e-05 * tc[2] - 8.09212980e-09 * tc[3] +
                 2.32306281e-12 * tc[4] + 3.71666245e+00;
    // species 5: H2
    species[5] = +2.34433112e+00 * tc[0] + 7.98052075e-03 * tc[1] -
                 9.73907550e-06 * tc[2] + 6.71906980e-09 * tc[3] -
                 1.84402940e-12 * tc[4] + 6.83010238e-01;
    // species 6: H2O
    species[6] = +4.19864056e+00 * tc[0] - 2.03643410e-03 * tc[1] +
                 3.26020105e-06 * tc[2] - 1.82932354e-09 * tc[3] +
                 4.42994543e-13 * tc[4] - 8.49032208e-01;
    // species 7: H2O2
    species[7] = +4.27611269e+00 * tc[0] - 5.42822417e-04 * tc[1] +
                 8.36678505e-06 * tc[2] - 7.19236043e-09 * tc[3] +
                 2.15613591e-12 * tc[4] + 3.43505074e+00;
    // species 8: O2
    species[8] = +3.78245636e+00 * tc[0] - 2.99673416e-03 * tc[1] +
                 4.92365101e-06 * tc[2] - 3.22709836e-09 * tc[3] +
                 8.10932092e-13 * tc[4] + 3.65767573e+00;
    // species 9: CH3
    species[9] = +3.67359040e+00 * tc[0] + 2.01095175e-03 * tc[1] +
                 2.86510928e-06 * tc[2] - 2.29039142e-09 * tc[3] +
                 6.35964335e-13 * tc[4] + 1.60456433e+00;
    // species 10: CH4
    species[10] = +5.14987613e+00 * tc[0] - 1.36709788e-02 * tc[1] +
                  2.45900299e-05 * tc[2] - 1.61581009e-08 * tc[3] +
                  4.16734890e-12 * tc[4] - 4.64130376e+00;
    // species 11: CH2O
    species[11] = +4.79372315e+00 * tc[0] - 9.90833369e-03 * tc[1] +
                  1.86610004e-05 * tc[2] - 1.26428420e-08 * tc[3] +
                  3.29431630e-12 * tc[4] + 6.02812900e-01;
    // species 12: CO
    species[12] = +3.57953347e+00 * tc[0] - 6.10353680e-04 * tc[1] +
                  5.08407165e-07 * tc[2] + 3.02335295e-10 * tc[3] -
                  2.26106125e-13 * tc[4] + 3.50840928e+00;
    // species 13: CO2
    species[13] = +2.35677352e+00 * tc[0] + 8.98459677e-03 * tc[1] -
                  3.56178134e-06 * tc[2] + 8.19730073e-10 * tc[3] -
                  3.59248870e-14 * tc[4] + 9.90105222e+00;
    // species 14: C2H2
    species[14] = +8.08681094e-01 * tc[0] + 2.33615629e-02 * tc[1] -
                  1.77585907e-05 * tc[2] + 9.33841457e-09 * tc[3] -
                  2.12518243e-12 * tc[4] + 1.39397051e+01;
    // species 15: C2H4
    species[15] = +3.95920148e+00 * tc[0] - 7.57052247e-03 * tc[1] +
                  2.85495146e-05 * tc[2] - 2.30529584e-08 * tc[3] +
                  6.74710933e-12 * tc[4] + 4.09733096e+00;
    // species 16: C2H6
    species[16] = +4.29142492e+00 * tc[0] - 5.50154270e-03 * tc[1] +
                  2.99719144e-05 * tc[2] - 2.36155428e-08 * tc[3] +
                  6.71714427e-12 * tc[4] + 2.66682316e+00;
    // species 17: CH2CHO
    species[17] = +3.40906240e+00 * tc[0] + 1.07385740e-02 * tc[1] +
                  9.45746250e-07 * tc[2] - 2.38619437e-09 * tc[3] +
                  7.16846275e-13 * tc[4] + 9.57145350e+00;
    // species 18: aC3H5
    species[18] = +1.36318350e+00 * tc[0] + 1.98138210e-02 * tc[1] +
                  6.24853000e-06 * tc[2] - 1.11185183e-08 * tc[3] +
                  3.96164275e-12 * tc[4] + 1.71732140e+01;
    // species 19: C3H6
    species[19] = +1.49330700e+00 * tc[0] + 2.09251800e-02 * tc[1] +
                  2.24339700e-06 * tc[2] - 5.56304000e-09 * tc[3] +
                  1.78953650e-12 * tc[4] + 1.61453400e+01;
    // species 20: C2H3CHO
    species[20] = +1.27134980e+00 * tc[0] + 2.62310540e-02 * tc[1] -
                  4.64561525e-06 * tc[2] - 1.59457573e-09 * tc[3] +
                  8.37013575e-13 * tc[4] + 1.94980770e+01;
    // species 21: C4H7
    species[21] = +7.44494320e-01 * tc[0] + 3.96788570e-02 * tc[1] -
                  1.14490430e-05 * tc[2] + 7.11765767e-10 * tc[3] +
                  5.77409375e-13 * tc[4] + 2.34378780e+01;
    // species 22: C4H81
    species[22] = +1.18113800e+00 * tc[0] + 3.08533800e-02 * tc[1] +
                  2.54326235e-06 * tc[2] - 8.21829600e-09 * tc[3] +
                  2.77754825e-12 * tc[4] + 2.10624690e+01;
    // species 23: C5H9
    species[23] = -2.41901110e+00 * tc[0] + 4.04303890e-02 * tc[1] +
                  3.39011695e-06 * tc[2] - 1.12415807e-08 * tc[3] +
                  3.77917825e-12 * tc[4] + 3.64592440e+01;
    // species 32: C12H25O2
    species[32] = +5.31404000e+00 * tc[0] + 8.93873000e-02 * tc[1] +
                  7.26755000e-06 * tc[2] - 2.49750000e-08 * tc[3] +
                  8.38312500e-12 * tc[4] + 1.69741000e+01;
    // species 33: OC12H23OOH
    species[33] = +8.80733000e+00 * tc[0] + 6.50623000e-02 * tc[1] +
                  3.47529000e-05 * tc[2] - 4.23016667e-08 * tc[3] +
                  1.27747750e-11 * tc[4] + 6.84155000e+00;
    // species 34: N2
    species[34] = +3.29867700e+00 * tc[0] + 1.40824040e-03 * tc[1] -
                  1.98161100e-06 * tc[2] + 1.88050500e-09 * tc[3] -
                  6.11213500e-13 * tc[4] + 3.95037200e+00;
  } else {
    // species 1: H
    species[1] = +2.50000001e+00 * tc[0] - 2.30842973e-11 * tc[1] +
                 8.07809740e-15 * tc[2] - 1.57838412e-18 * tc[3] +
                 1.24549339e-22 * tc[4] - 4.46682914e-01;
    // species 2: O
    species[2] = +2.56942078e+00 * tc[0] - 8.59741137e-05 * tc[1] +
                 2.09742295e-08 * tc[2] - 3.33925997e-12 * tc[3] +
                 3.07084227e-16 * tc[4] + 4.78433864e+00;
    // species 3: OH
    species[3] = +2.86472886e+00 * tc[0] + 1.05650448e-03 * tc[1] -
                 1.29541379e-07 * tc[2] + 1.01739558e-11 * tc[3] -
                 3.32989690e-16 * tc[4] + 5.70164073e+00;
    // species 4: HO2
    species[4] = +4.01721090e+00 * tc[0] + 2.23982013e-03 * tc[1] -
                 3.16829075e-07 * tc[2] + 3.80821233e-11 * tc[3] -
                 2.69771337e-15 * tc[4] + 3.78510215e+00;
    // species 5: H2
    species[5] = +3.33727920e+00 * tc[0] - 4.94024731e-05 * tc[1] +
                 2.49728389e-07 * tc[2] - 5.98554647e-11 * tc[3] +
                 5.00638440e-15 * tc[4] - 3.20502331e+00;
    // species 6: H2O
    species[6] = +3.03399249e+00 * tc[0] + 2.17691804e-03 * tc[1] -
                 8.20362590e-08 * tc[2] - 3.23473290e-11 * tc[3] +
                 4.20502480e-15 * tc[4] + 4.96677010e+00;
    // species 7: H2O2
    species[7] = +4.16500285e+00 * tc[0] + 4.90831694e-03 * tc[1] -
                 9.50696125e-07 * tc[2] + 1.23728662e-10 * tc[3] -
                 7.19770763e-15 * tc[4] + 2.91615662e+00;
    // species 8: O2
    species[8] = +3.28253784e+00 * tc[0] + 1.48308754e-03 * tc[1] -
                 3.78983334e-07 * tc[2] + 6.98235183e-11 * tc[3] -
                 5.41794485e-15 * tc[4] + 5.45323129e+00;
    // species 9: CH3
    species[9] = +2.28571772e+00 * tc[0] + 7.23990037e-03 * tc[1] -
                 1.49357174e-06 * tc[2] + 1.98561548e-10 * tc[3] -
                 1.16788599e-14 * tc[4] + 8.48007179e+00;
    // species 10: CH4
    species[10] = +7.48514950e-02 * tc[0] + 1.33909467e-02 * tc[1] -
                  2.86642905e-06 * tc[2] + 4.07641783e-10 * tc[3] -
                  2.54538075e-14 * tc[4] + 1.84373180e+01;
    // species 11: CH2O
    species[11] = +1.76069008e+00 * tc[0] + 9.20000082e-03 * tc[1] -
                  2.21129406e-06 * tc[2] + 3.35470707e-10 * tc[3] -
                  2.20963910e-14 * tc[4] + 1.36563230e+01;
    // species 12: CO
    species[12] = +2.71518561e+00 * tc[0] + 2.06252743e-03 * tc[1] -
                  4.99412886e-07 * tc[2] + 7.66843360e-11 * tc[3] -
                  5.09119290e-15 * tc[4] + 7.81868772e+00;
    // species 13: CO2
    species[13] = +3.85746029e+00 * tc[0] + 4.41437026e-03 * tc[1] -
                  1.10740702e-06 * tc[2] + 1.74496729e-10 * tc[3] -
                  1.18021041e-14 * tc[4] + 2.27163806e+00;
    // species 14: C2H2
    species[14] = +4.14756964e+00 * tc[0] + 5.96166664e-03 * tc[1] -
                  1.18647426e-06 * tc[2] + 1.55804057e-10 * tc[3] -
                  9.03088033e-15 * tc[4] - 1.23028121e+00;
    // species 15: C2H4
    species[15] = +2.03611116e+00 * tc[0] + 1.46454151e-02 * tc[1] -
                  3.35538958e-06 * tc[2] + 4.90743077e-10 * tc[3] -
                  3.14265152e-14 * tc[4] + 1.03053693e+01;
    // species 16: C2H6
    species[16] = +1.07188150e+00 * tc[0] + 2.16852677e-02 * tc[1] -
                  5.01280335e-06 * tc[2] + 7.38040003e-10 * tc[3] -
                  4.75007225e-14 * tc[4] + 1.51156107e+01;
    // species 17: CH2CHO
    species[17] = +5.97566990e+00 * tc[0] + 8.13059140e-03 * tc[1] -
                  1.37181225e-06 * tc[2] + 1.35676803e-10 * tc[3] -
                  5.44004275e-15 * tc[4] - 5.03208790e+00;
    // species 18: aC3H5
    species[18] = +6.50078770e+00 * tc[0] + 1.43247310e-02 * tc[1] -
                  2.83908160e-06 * tc[2] + 3.69360033e-10 * tc[3] -
                  2.25909717e-14 * tc[4] - 1.12430500e+01;
    // species 19: C3H6
    species[19] = +6.73225700e+00 * tc[0] + 1.49083400e-02 * tc[1] -
                  2.47494950e-06 * tc[2] + 2.40400733e-10 * tc[3] -
                  9.41551000e-15 * tc[4] - 1.33133500e+01;
    // species 20: C2H3CHO
    species[20] = +5.81118680e+00 * tc[0] + 1.71142560e-02 * tc[1] -
                  3.74170805e-06 * tc[2] + 4.75074967e-10 * tc[3] -
                  2.29367102e-14 * tc[4] - 4.85880040e+00;
    // species 21: C4H7
    species[21] = +7.01348350e+00 * tc[0] + 2.26345580e-02 * tc[1] -
                  4.62727350e-06 * tc[2] + 5.60264233e-10 * tc[3] -
                  2.60215425e-14 * tc[4] - 8.88930800e+00;
    // species 22: C4H81
    species[22] = +2.05358410e+00 * tc[0] + 3.43505070e-02 * tc[1] -
                  7.94159850e-06 * tc[2] + 1.10298873e-09 * tc[3] -
                  6.34026125e-14 * tc[4] + 1.55432010e+01;
    // species 23: C5H9
    species[23] = +1.01386400e+01 * tc[0] + 2.27141380e-02 * tc[1] -
                  3.89552315e-06 * tc[2] + 3.95884067e-10 * tc[3] -
                  1.64831120e-14 * tc[4] - 3.31258850e+01;
    // species 32: C12H25O2
    species[32] = +2.84782000e+01 * tc[0] + 5.37539000e-02 * tc[1] -
                  8.40930000e-06 * tc[2] + 8.37890000e-10 * tc[3] -
                  3.68020000e-14 * tc[4] - 1.09121000e+02;
    // species 33: OC12H23OOH
    species[33] = +2.36731000e+01 * tc[0] + 6.16392000e-02 * tc[1] -
                  1.04918000e-05 * tc[2] + 1.11055333e-09 * tc[3] -
                  5.08975000e-14 * tc[4] - 7.77662000e+01;
    // species 34: N2
    species[34] = +2.92664000e+00 * tc[0] + 1.48797680e-03 * tc[1] -
                  2.84238000e-07 * tc[2] + 3.36567933e-11 * tc[3] -
                  1.68833775e-15 * tc[4] + 5.98052800e+00;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 24: C5H10
    species[24] = -1.06223481e+00 * tc[0] + 5.74218294e-02 * tc[1] -
                  1.87243445e-05 * tc[2] + 4.24549963e-09 * tc[3] -
                  4.49024472e-13 * tc[4] + 3.22739790e+01;
    // species 25: C6H12
    species[25] = -1.35275205e+00 * tc[0] + 6.98655426e-02 * tc[1] -
                  2.29704011e-05 * tc[2] + 5.23224477e-09 * tc[3] -
                  5.53240438e-13 * tc[4] + 3.53120691e+01;
    // species 26: C7H14
    species[26] = -1.67720549e+00 * tc[0] + 8.24611601e-02 * tc[1] -
                  2.73252054e-05 * tc[2] + 6.26207677e-09 * tc[3] -
                  6.64344957e-13 * tc[4] + 3.85068032e+01;
    // species 27: C8H16
    species[27] = -1.89226915e+00 * tc[0] + 9.46066357e-02 * tc[1] -
                  3.13692761e-05 * tc[2] + 7.17194363e-09 * tc[3] -
                  7.56796708e-13 * tc[4] + 4.11878981e+01;
    // species 28: C9H18
    species[28] = -2.16108263e+00 * tc[0] + 1.06958297e-01 * tc[1] -
                  3.55486622e-05 * tc[2] + 8.13236923e-09 * tc[3] -
                  8.56928867e-13 * tc[4] + 4.41245128e+01;
    // species 30: C10H20
    species[30] = -2.42901688e+00 * tc[0] + 1.19305598e-01 * tc[1] -
                  3.97244513e-05 * tc[2] + 9.09121987e-09 * tc[3] -
                  9.56795932e-13 * tc[4] + 4.70571383e+01;
  } else {
    // species 24: C5H10
    species[24] = +1.45851539e+01 * tc[0] + 2.24072471e-02 * tc[1] -
                  3.81674012e-06 * tc[2] + 3.93963220e-10 * tc[3] -
                  1.71096285e-14 * tc[4] - 5.23683936e+01;
    // species 25: C6H12
    species[25] = +1.78337529e+01 * tc[0] + 2.67377658e-02 * tc[1] -
                  4.55018387e-06 * tc[2] + 4.69399227e-10 * tc[3] -
                  2.03781061e-14 * tc[4] - 6.83818851e+01;
    // species 26: C7H14
    species[26] = +2.10898039e+01 * tc[0] + 3.10607878e-02 * tc[1] -
                  5.28223965e-06 * tc[2] + 5.44685933e-10 * tc[3] -
                  2.36399555e-14 * tc[4] - 8.44391108e+01;
    // species 27: C8H16
    species[27] = +2.43540125e+01 * tc[0] + 3.53666462e-02 * tc[1] -
                  6.01041940e-06 * tc[2] + 6.19516843e-10 * tc[3] -
                  2.68805655e-14 * tc[4] - 1.00537716e+02;
    // species 28: C9H18
    species[28] = +2.76142176e+01 * tc[0] + 3.96825287e-02 * tc[1] -
                  6.74097230e-06 * tc[2] + 6.94634840e-10 * tc[3] -
                  3.01348235e-14 * tc[4] - 1.16618623e+02;
    // species 30: C10H20
    species[30] = +3.08753903e+01 * tc[0] + 4.39971526e-02 * tc[1] -
                  7.47127650e-06 * tc[2] + 7.69725593e-10 * tc[3] -
                  3.33878693e-14 * tc[4] - 1.32705172e+02;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 29: PXC9H19
    species[29] = -1.04387292e+00 * tc[0] + 1.05617283e-01 * tc[1] -
                  3.34099986e-05 * tc[2] + 7.14953887e-09 * tc[3] -
                  6.93510688e-13 * tc[4] + 4.23518992e+01;
  } else {
    // species 29: PXC9H19
    species[29] = +2.83097514e+01 * tc[0] + 4.12657344e-02 * tc[1] -
                  7.01916445e-06 * tc[2] + 7.23916237e-10 * tc[3] -
                  3.14230767e-14 * tc[4] - 1.16837897e+02;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cpbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cpor[35];                               //  temporary storage
  cp_R(cpor, tc);

  // perform dot product
  for (int id = 0; id < 35; ++id) {
    result += x[id] * cpor[id];
  }

  cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cpbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache

  // compute Cp/R at the given temperature

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 0: NC12H26
    result +=
      y[0] *
      (-2.62181594e+00 + 1.47237711e-01 * tc[1] - 9.43970271e-05 * tc[2] +
       3.07441268e-08 * tc[3] - 4.03602230e-12 * tc[4]) *
      0.0058706117177410;
    // species 31: C12H24
    result +=
      y[31] *
      (-2.96342681e+00 + 1.43992360e-01 * tc[1] - 9.61384015e-05 * tc[2] +
       3.30174473e-08 * tc[3] - 4.62398190e-12 * tc[4]) *
      0.0059409234571422;
  } else {
    // species 0: NC12H26
    result +=
      y[0] *
      (+3.85095037e+01 + 5.63550048e-02 * tc[1] - 1.91493200e-05 * tc[2] +
       2.96024862e-09 * tc[3] - 1.71244150e-13 * tc[4]) *
      0.0058706117177410;
    // species 31: C12H24
    result +=
      y[31] *
      (+3.74002111e+01 + 5.26230753e-02 * tc[1] - 1.78624319e-05 * tc[2] +
       2.75949863e-09 * tc[3] - 1.59562499e-13 * tc[4]) *
      0.0059409234571422;
  }

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: H
    result +=
      y[1] *
      (+2.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+3.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 3: OH
    result +=
      y[3] *
      (+4.12530561e+00 - 3.22544939e-03 * tc[1] + 6.52764691e-06 * tc[2] -
       5.79853643e-09 * tc[3] + 2.06237379e-12 * tc[4]) *
      0.0587993179279120;
    // species 4: HO2
    result +=
      y[4] *
      (+4.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 5: H2
    result +=
      y[5] *
      (+2.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 6: H2O
    result +=
      y[6] *
      (+4.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+4.27611269e+00 - 5.42822417e-04 * tc[1] + 1.67335701e-05 * tc[2] -
       2.15770813e-08 * tc[3] + 8.62454363e-12 * tc[4]) *
      0.0293996589639560;
    // species 8: O2
    result +=
      y[8] *
      (+3.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 9: CH3
    result +=
      y[9] *
      (+3.67359040e+00 + 2.01095175e-03 * tc[1] + 5.73021856e-06 * tc[2] -
       6.87117425e-09 * tc[3] + 2.54385734e-12 * tc[4]) *
      0.0665114732291320;
    // species 10: CH4
    result +=
      y[10] *
      (+5.14987613e+00 - 1.36709788e-02 * tc[1] + 4.91800599e-05 * tc[2] -
       4.84743026e-08 * tc[3] + 1.66693956e-11 * tc[4]) *
      0.0623324814560868;
    // species 11: CH2O
    result +=
      y[11] *
      (+4.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 12: CO
    result +=
      y[12] *
      (+3.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 13: CO2
    result +=
      y[13] *
      (+2.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 14: C2H2
    result +=
      y[14] *
      (+8.08681094e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 15: C2H4
    result +=
      y[15] *
      (+3.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 16: C2H6
    result +=
      y[16] *
      (+4.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 17: CH2CHO
    result +=
      y[17] *
      (+3.40906240e+00 + 1.07385740e-02 * tc[1] + 1.89149250e-06 * tc[2] -
       7.15858310e-09 * tc[3] + 2.86738510e-12 * tc[4]) *
      0.0232315019165989;
    // species 18: aC3H5
    result +=
      y[18] *
      (+1.36318350e+00 + 1.98138210e-02 * tc[1] + 1.24970600e-05 * tc[2] -
       3.33555550e-08 * tc[3] + 1.58465710e-11 * tc[4]) *
      0.0243468945535997;
    // species 19: C3H6
    result +=
      y[19] *
      (+1.49330700e+00 + 2.09251800e-02 * tc[1] + 4.48679400e-06 * tc[2] -
       1.66891200e-08 * tc[3] + 7.15814600e-12 * tc[4]) *
      0.0237636938285687;
    // species 20: C2H3CHO
    result +=
      y[20] *
      (+1.27134980e+00 + 2.62310540e-02 * tc[1] - 9.29123050e-06 * tc[2] -
       4.78372720e-09 * tc[3] + 3.34805430e-12 * tc[4]) *
      0.0178367579908676;
    // species 21: C4H7
    result +=
      y[21] *
      (+7.44494320e-01 + 3.96788570e-02 * tc[1] - 2.28980860e-05 * tc[2] +
       2.13529730e-09 * tc[3] + 2.30963750e-12 * tc[4]) *
      0.0181488203266788;
    // species 22: C4H81
    result +=
      y[22] *
      (+1.18113800e+00 + 3.08533800e-02 * tc[1] + 5.08652470e-06 * tc[2] -
       2.46548880e-08 * tc[3] + 1.11101930e-11 * tc[4]) *
      0.0178227703714265;
    // species 23: C5H9
    result +=
      y[23] *
      (-2.41901110e+00 + 4.04303890e-02 * tc[1] + 6.78023390e-06 * tc[2] -
       3.37247420e-08 * tc[3] + 1.51167130e-11 * tc[4]) *
      0.0144661275623128;
    // species 32: C12H25O2
    result +=
      y[32] *
      (+5.31404000e+00 + 8.93873000e-02 * tc[1] + 1.45351000e-05 * tc[2] -
       7.49250000e-08 * tc[3] + 3.35325000e-11 * tc[4]) *
      0.0049669696518154;
    // species 33: OC12H23OOH
    result +=
      y[33] *
      (+8.80733000e+00 + 6.50623000e-02 * tc[1] + 6.95058000e-05 * tc[2] -
       1.26905000e-07 * tc[3] + 5.10991000e-11 * tc[4]) *
      0.0046227596950828;
    // species 34: N2
    result +=
      y[34] *
      (+3.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
  } else {
    // species 1: H
    result +=
      y[1] *
      (+2.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+2.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 3: OH
    result +=
      y[3] *
      (+2.86472886e+00 + 1.05650448e-03 * tc[1] - 2.59082758e-07 * tc[2] +
       3.05218674e-11 * tc[3] - 1.33195876e-15 * tc[4]) *
      0.0587993179279120;
    // species 4: HO2
    result +=
      y[4] *
      (+4.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 5: H2
    result +=
      y[5] *
      (+3.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 6: H2O
    result +=
      y[6] *
      (+3.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+4.16500285e+00 + 4.90831694e-03 * tc[1] - 1.90139225e-06 * tc[2] +
       3.71185986e-10 * tc[3] - 2.87908305e-14 * tc[4]) *
      0.0293996589639560;
    // species 8: O2
    result +=
      y[8] *
      (+3.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 9: CH3
    result +=
      y[9] *
      (+2.28571772e+00 + 7.23990037e-03 * tc[1] - 2.98714348e-06 * tc[2] +
       5.95684644e-10 * tc[3] - 4.67154394e-14 * tc[4]) *
      0.0665114732291320;
    // species 10: CH4
    result +=
      y[10] *
      (+7.48514950e-02 + 1.33909467e-02 * tc[1] - 5.73285809e-06 * tc[2] +
       1.22292535e-09 * tc[3] - 1.01815230e-13 * tc[4]) *
      0.0623324814560868;
    // species 11: CH2O
    result +=
      y[11] *
      (+1.76069008e+00 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 12: CO
    result +=
      y[12] *
      (+2.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 13: CO2
    result +=
      y[13] *
      (+3.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 14: C2H2
    result +=
      y[14] *
      (+4.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 15: C2H4
    result +=
      y[15] *
      (+2.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 16: C2H6
    result +=
      y[16] *
      (+1.07188150e+00 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 17: CH2CHO
    result +=
      y[17] *
      (+5.97566990e+00 + 8.13059140e-03 * tc[1] - 2.74362450e-06 * tc[2] +
       4.07030410e-10 * tc[3] - 2.17601710e-14 * tc[4]) *
      0.0232315019165989;
    // species 18: aC3H5
    result +=
      y[18] *
      (+6.50078770e+00 + 1.43247310e-02 * tc[1] - 5.67816320e-06 * tc[2] +
       1.10808010e-09 * tc[3] - 9.03638870e-14 * tc[4]) *
      0.0243468945535997;
    // species 19: C3H6
    result +=
      y[19] *
      (+6.73225700e+00 + 1.49083400e-02 * tc[1] - 4.94989900e-06 * tc[2] +
       7.21202200e-10 * tc[3] - 3.76620400e-14 * tc[4]) *
      0.0237636938285687;
    // species 20: C2H3CHO
    result +=
      y[20] *
      (+5.81118680e+00 + 1.71142560e-02 * tc[1] - 7.48341610e-06 * tc[2] +
       1.42522490e-09 * tc[3] - 9.17468410e-14 * tc[4]) *
      0.0178367579908676;
    // species 21: C4H7
    result +=
      y[21] *
      (+7.01348350e+00 + 2.26345580e-02 * tc[1] - 9.25454700e-06 * tc[2] +
       1.68079270e-09 * tc[3] - 1.04086170e-13 * tc[4]) *
      0.0181488203266788;
    // species 22: C4H81
    result +=
      y[22] *
      (+2.05358410e+00 + 3.43505070e-02 * tc[1] - 1.58831970e-05 * tc[2] +
       3.30896620e-09 * tc[3] - 2.53610450e-13 * tc[4]) *
      0.0178227703714265;
    // species 23: C5H9
    result +=
      y[23] *
      (+1.01386400e+01 + 2.27141380e-02 * tc[1] - 7.79104630e-06 * tc[2] +
       1.18765220e-09 * tc[3] - 6.59324480e-14 * tc[4]) *
      0.0144661275623128;
    // species 32: C12H25O2
    result +=
      y[32] *
      (+2.84782000e+01 + 5.37539000e-02 * tc[1] - 1.68186000e-05 * tc[2] +
       2.51367000e-09 * tc[3] - 1.47208000e-13 * tc[4]) *
      0.0049669696518154;
    // species 33: OC12H23OOH
    result +=
      y[33] *
      (+2.36731000e+01 + 6.16392000e-02 * tc[1] - 2.09836000e-05 * tc[2] +
       3.33166000e-09 * tc[3] - 2.03590000e-13 * tc[4]) *
      0.0046227596950828;
    // species 34: N2
    result +=
      y[34] *
      (+2.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 24: C5H10
    result +=
      y[24] *
      (-1.06223481e+00 + 5.74218294e-02 * tc[1] - 3.74486890e-05 * tc[2] +
       1.27364989e-08 * tc[3] - 1.79609789e-12 * tc[4]) *
      0.0142582162971412;
    // species 25: C6H12
    result +=
      y[25] *
      (-1.35275205e+00 + 6.98655426e-02 * tc[1] - 4.59408022e-05 * tc[2] +
       1.56967343e-08 * tc[3] - 2.21296175e-12 * tc[4]) *
      0.0118818469142844;
    // species 26: C7H14
    result +=
      y[26] *
      (-1.67720549e+00 + 8.24611601e-02 * tc[1] - 5.46504108e-05 * tc[2] +
       1.87862303e-08 * tc[3] - 2.65737983e-12 * tc[4]) *
      0.0101844402122437;
    // species 27: C8H16
    result +=
      y[27] *
      (-1.89226915e+00 + 9.46066357e-02 * tc[1] - 6.27385521e-05 * tc[2] +
       2.15158309e-08 * tc[3] - 3.02718683e-12 * tc[4]) *
      0.0089113851857133;
    // species 28: C9H18
    result +=
      y[28] *
      (-2.16108263e+00 + 1.06958297e-01 * tc[1] - 7.10973244e-05 * tc[2] +
       2.43971077e-08 * tc[3] - 3.42771547e-12 * tc[4]) *
      0.0079212312761896;
    // species 30: C10H20
    result +=
      y[30] *
      (-2.42901688e+00 + 1.19305598e-01 * tc[1] - 7.94489025e-05 * tc[2] +
       2.72736596e-08 * tc[3] - 3.82718373e-12 * tc[4]) *
      0.0071291081485706;
  } else {
    // species 24: C5H10
    result +=
      y[24] *
      (+1.45851539e+01 + 2.24072471e-02 * tc[1] - 7.63348025e-06 * tc[2] +
       1.18188966e-09 * tc[3] - 6.84385139e-14 * tc[4]) *
      0.0142582162971412;
    // species 25: C6H12
    result +=
      y[25] *
      (+1.78337529e+01 + 2.67377658e-02 * tc[1] - 9.10036773e-06 * tc[2] +
       1.40819768e-09 * tc[3] - 8.15124244e-14 * tc[4]) *
      0.0118818469142844;
    // species 26: C7H14
    result +=
      y[26] *
      (+2.10898039e+01 + 3.10607878e-02 * tc[1] - 1.05644793e-05 * tc[2] +
       1.63405780e-09 * tc[3] - 9.45598219e-14 * tc[4]) *
      0.0101844402122437;
    // species 27: C8H16
    result +=
      y[27] *
      (+2.43540125e+01 + 3.53666462e-02 * tc[1] - 1.20208388e-05 * tc[2] +
       1.85855053e-09 * tc[3] - 1.07522262e-13 * tc[4]) *
      0.0089113851857133;
    // species 28: C9H18
    result +=
      y[28] *
      (+2.76142176e+01 + 3.96825287e-02 * tc[1] - 1.34819446e-05 * tc[2] +
       2.08390452e-09 * tc[3] - 1.20539294e-13 * tc[4]) *
      0.0079212312761896;
    // species 30: C10H20
    result +=
      y[30] *
      (+3.08753903e+01 + 4.39971526e-02 * tc[1] - 1.49425530e-05 * tc[2] +
       2.30917678e-09 * tc[3] - 1.33551477e-13 * tc[4]) *
      0.0071291081485706;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 29: PXC9H19
    result +=
      y[29] *
      (-1.04387292e+00 + 1.05617283e-01 * tc[1] - 6.68199971e-05 * tc[2] +
       2.14486166e-08 * tc[3] - 2.77404275e-12 * tc[4]) *
      0.0078584844126962;
  } else {
    // species 29: PXC9H19
    result +=
      y[29] *
      (+2.83097514e+01 + 4.12657344e-02 * tc[1] - 1.40383289e-05 * tc[2] +
       2.17174871e-09 * tc[3] - 1.25692307e-13 * tc[4]) *
      0.0078584844126962;
  }

  cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cvbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cvor[35];                               //  temporary storage
  cv_R(cvor, tc);

  // perform dot product
  for (int id = 0; id < 35; ++id) {
    result += x[id] * cvor[id];
  }

  cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cvbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  // compute Cv/R at the given temperature

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 0: NC12H26
    result +=
      y[0] *
      (-3.62181594e+00 + 1.47237711e-01 * tc[1] - 9.43970271e-05 * tc[2] +
       3.07441268e-08 * tc[3] - 4.03602230e-12 * tc[4]) *
      0.0058706117177410;
    // species 31: C12H24
    result +=
      y[31] *
      (-3.96342681e+00 + 1.43992360e-01 * tc[1] - 9.61384015e-05 * tc[2] +
       3.30174473e-08 * tc[3] - 4.62398190e-12 * tc[4]) *
      0.0059409234571422;
  } else {
    // species 0: NC12H26
    result +=
      y[0] *
      (+3.75095037e+01 + 5.63550048e-02 * tc[1] - 1.91493200e-05 * tc[2] +
       2.96024862e-09 * tc[3] - 1.71244150e-13 * tc[4]) *
      0.0058706117177410;
    // species 31: C12H24
    result +=
      y[31] *
      (+3.64002111e+01 + 5.26230753e-02 * tc[1] - 1.78624319e-05 * tc[2] +
       2.75949863e-09 * tc[3] - 1.59562499e-13 * tc[4]) *
      0.0059409234571422;
  }

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: H
    result +=
      y[1] *
      (+1.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+2.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 3: OH
    result +=
      y[3] *
      (+3.12530561e+00 - 3.22544939e-03 * tc[1] + 6.52764691e-06 * tc[2] -
       5.79853643e-09 * tc[3] + 2.06237379e-12 * tc[4]) *
      0.0587993179279120;
    // species 4: HO2
    result +=
      y[4] *
      (+3.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 5: H2
    result +=
      y[5] *
      (+1.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 6: H2O
    result +=
      y[6] *
      (+3.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.27611269e+00 - 5.42822417e-04 * tc[1] + 1.67335701e-05 * tc[2] -
       2.15770813e-08 * tc[3] + 8.62454363e-12 * tc[4]) *
      0.0293996589639560;
    // species 8: O2
    result +=
      y[8] *
      (+2.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 9: CH3
    result +=
      y[9] *
      (+2.67359040e+00 + 2.01095175e-03 * tc[1] + 5.73021856e-06 * tc[2] -
       6.87117425e-09 * tc[3] + 2.54385734e-12 * tc[4]) *
      0.0665114732291320;
    // species 10: CH4
    result +=
      y[10] *
      (+4.14987613e+00 - 1.36709788e-02 * tc[1] + 4.91800599e-05 * tc[2] -
       4.84743026e-08 * tc[3] + 1.66693956e-11 * tc[4]) *
      0.0623324814560868;
    // species 11: CH2O
    result +=
      y[11] *
      (+3.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 12: CO
    result +=
      y[12] *
      (+2.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 13: CO2
    result +=
      y[13] *
      (+1.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 14: C2H2
    result +=
      y[14] *
      (-1.91318906e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 15: C2H4
    result +=
      y[15] *
      (+2.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 16: C2H6
    result +=
      y[16] *
      (+3.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 17: CH2CHO
    result +=
      y[17] *
      (+2.40906240e+00 + 1.07385740e-02 * tc[1] + 1.89149250e-06 * tc[2] -
       7.15858310e-09 * tc[3] + 2.86738510e-12 * tc[4]) *
      0.0232315019165989;
    // species 18: aC3H5
    result +=
      y[18] *
      (+3.63183500e-01 + 1.98138210e-02 * tc[1] + 1.24970600e-05 * tc[2] -
       3.33555550e-08 * tc[3] + 1.58465710e-11 * tc[4]) *
      0.0243468945535997;
    // species 19: C3H6
    result +=
      y[19] *
      (+4.93307000e-01 + 2.09251800e-02 * tc[1] + 4.48679400e-06 * tc[2] -
       1.66891200e-08 * tc[3] + 7.15814600e-12 * tc[4]) *
      0.0237636938285687;
    // species 20: C2H3CHO
    result +=
      y[20] *
      (+2.71349800e-01 + 2.62310540e-02 * tc[1] - 9.29123050e-06 * tc[2] -
       4.78372720e-09 * tc[3] + 3.34805430e-12 * tc[4]) *
      0.0178367579908676;
    // species 21: C4H7
    result +=
      y[21] *
      (-2.55505680e-01 + 3.96788570e-02 * tc[1] - 2.28980860e-05 * tc[2] +
       2.13529730e-09 * tc[3] + 2.30963750e-12 * tc[4]) *
      0.0181488203266788;
    // species 22: C4H81
    result +=
      y[22] *
      (+1.81138000e-01 + 3.08533800e-02 * tc[1] + 5.08652470e-06 * tc[2] -
       2.46548880e-08 * tc[3] + 1.11101930e-11 * tc[4]) *
      0.0178227703714265;
    // species 23: C5H9
    result +=
      y[23] *
      (-3.41901110e+00 + 4.04303890e-02 * tc[1] + 6.78023390e-06 * tc[2] -
       3.37247420e-08 * tc[3] + 1.51167130e-11 * tc[4]) *
      0.0144661275623128;
    // species 32: C12H25O2
    result +=
      y[32] *
      (+4.31404000e+00 + 8.93873000e-02 * tc[1] + 1.45351000e-05 * tc[2] -
       7.49250000e-08 * tc[3] + 3.35325000e-11 * tc[4]) *
      0.0049669696518154;
    // species 33: OC12H23OOH
    result +=
      y[33] *
      (+7.80733000e+00 + 6.50623000e-02 * tc[1] + 6.95058000e-05 * tc[2] -
       1.26905000e-07 * tc[3] + 5.10991000e-11 * tc[4]) *
      0.0046227596950828;
    // species 34: N2
    result +=
      y[34] *
      (+2.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
  } else {
    // species 1: H
    result +=
      y[1] *
      (+1.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+1.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 3: OH
    result +=
      y[3] *
      (+1.86472886e+00 + 1.05650448e-03 * tc[1] - 2.59082758e-07 * tc[2] +
       3.05218674e-11 * tc[3] - 1.33195876e-15 * tc[4]) *
      0.0587993179279120;
    // species 4: HO2
    result +=
      y[4] *
      (+3.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 5: H2
    result +=
      y[5] *
      (+2.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 6: H2O
    result +=
      y[6] *
      (+2.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.16500285e+00 + 4.90831694e-03 * tc[1] - 1.90139225e-06 * tc[2] +
       3.71185986e-10 * tc[3] - 2.87908305e-14 * tc[4]) *
      0.0293996589639560;
    // species 8: O2
    result +=
      y[8] *
      (+2.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 9: CH3
    result +=
      y[9] *
      (+1.28571772e+00 + 7.23990037e-03 * tc[1] - 2.98714348e-06 * tc[2] +
       5.95684644e-10 * tc[3] - 4.67154394e-14 * tc[4]) *
      0.0665114732291320;
    // species 10: CH4
    result +=
      y[10] *
      (-9.25148505e-01 + 1.33909467e-02 * tc[1] - 5.73285809e-06 * tc[2] +
       1.22292535e-09 * tc[3] - 1.01815230e-13 * tc[4]) *
      0.0623324814560868;
    // species 11: CH2O
    result +=
      y[11] *
      (+7.60690080e-01 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 12: CO
    result +=
      y[12] *
      (+1.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 13: CO2
    result +=
      y[13] *
      (+2.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 14: C2H2
    result +=
      y[14] *
      (+3.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 15: C2H4
    result +=
      y[15] *
      (+1.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 16: C2H6
    result +=
      y[16] *
      (+7.18815000e-02 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 17: CH2CHO
    result +=
      y[17] *
      (+4.97566990e+00 + 8.13059140e-03 * tc[1] - 2.74362450e-06 * tc[2] +
       4.07030410e-10 * tc[3] - 2.17601710e-14 * tc[4]) *
      0.0232315019165989;
    // species 18: aC3H5
    result +=
      y[18] *
      (+5.50078770e+00 + 1.43247310e-02 * tc[1] - 5.67816320e-06 * tc[2] +
       1.10808010e-09 * tc[3] - 9.03638870e-14 * tc[4]) *
      0.0243468945535997;
    // species 19: C3H6
    result +=
      y[19] *
      (+5.73225700e+00 + 1.49083400e-02 * tc[1] - 4.94989900e-06 * tc[2] +
       7.21202200e-10 * tc[3] - 3.76620400e-14 * tc[4]) *
      0.0237636938285687;
    // species 20: C2H3CHO
    result +=
      y[20] *
      (+4.81118680e+00 + 1.71142560e-02 * tc[1] - 7.48341610e-06 * tc[2] +
       1.42522490e-09 * tc[3] - 9.17468410e-14 * tc[4]) *
      0.0178367579908676;
    // species 21: C4H7
    result +=
      y[21] *
      (+6.01348350e+00 + 2.26345580e-02 * tc[1] - 9.25454700e-06 * tc[2] +
       1.68079270e-09 * tc[3] - 1.04086170e-13 * tc[4]) *
      0.0181488203266788;
    // species 22: C4H81
    result +=
      y[22] *
      (+1.05358410e+00 + 3.43505070e-02 * tc[1] - 1.58831970e-05 * tc[2] +
       3.30896620e-09 * tc[3] - 2.53610450e-13 * tc[4]) *
      0.0178227703714265;
    // species 23: C5H9
    result +=
      y[23] *
      (+9.13864000e+00 + 2.27141380e-02 * tc[1] - 7.79104630e-06 * tc[2] +
       1.18765220e-09 * tc[3] - 6.59324480e-14 * tc[4]) *
      0.0144661275623128;
    // species 32: C12H25O2
    result +=
      y[32] *
      (+2.74782000e+01 + 5.37539000e-02 * tc[1] - 1.68186000e-05 * tc[2] +
       2.51367000e-09 * tc[3] - 1.47208000e-13 * tc[4]) *
      0.0049669696518154;
    // species 33: OC12H23OOH
    result +=
      y[33] *
      (+2.26731000e+01 + 6.16392000e-02 * tc[1] - 2.09836000e-05 * tc[2] +
       3.33166000e-09 * tc[3] - 2.03590000e-13 * tc[4]) *
      0.0046227596950828;
    // species 34: N2
    result +=
      y[34] *
      (+1.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 24: C5H10
    result +=
      y[24] *
      (-2.06223481e+00 + 5.74218294e-02 * tc[1] - 3.74486890e-05 * tc[2] +
       1.27364989e-08 * tc[3] - 1.79609789e-12 * tc[4]) *
      0.0142582162971412;
    // species 25: C6H12
    result +=
      y[25] *
      (-2.35275205e+00 + 6.98655426e-02 * tc[1] - 4.59408022e-05 * tc[2] +
       1.56967343e-08 * tc[3] - 2.21296175e-12 * tc[4]) *
      0.0118818469142844;
    // species 26: C7H14
    result +=
      y[26] *
      (-2.67720549e+00 + 8.24611601e-02 * tc[1] - 5.46504108e-05 * tc[2] +
       1.87862303e-08 * tc[3] - 2.65737983e-12 * tc[4]) *
      0.0101844402122437;
    // species 27: C8H16
    result +=
      y[27] *
      (-2.89226915e+00 + 9.46066357e-02 * tc[1] - 6.27385521e-05 * tc[2] +
       2.15158309e-08 * tc[3] - 3.02718683e-12 * tc[4]) *
      0.0089113851857133;
    // species 28: C9H18
    result +=
      y[28] *
      (-3.16108263e+00 + 1.06958297e-01 * tc[1] - 7.10973244e-05 * tc[2] +
       2.43971077e-08 * tc[3] - 3.42771547e-12 * tc[4]) *
      0.0079212312761896;
    // species 30: C10H20
    result +=
      y[30] *
      (-3.42901688e+00 + 1.19305598e-01 * tc[1] - 7.94489025e-05 * tc[2] +
       2.72736596e-08 * tc[3] - 3.82718373e-12 * tc[4]) *
      0.0071291081485706;
  } else {
    // species 24: C5H10
    result +=
      y[24] *
      (+1.35851539e+01 + 2.24072471e-02 * tc[1] - 7.63348025e-06 * tc[2] +
       1.18188966e-09 * tc[3] - 6.84385139e-14 * tc[4]) *
      0.0142582162971412;
    // species 25: C6H12
    result +=
      y[25] *
      (+1.68337529e+01 + 2.67377658e-02 * tc[1] - 9.10036773e-06 * tc[2] +
       1.40819768e-09 * tc[3] - 8.15124244e-14 * tc[4]) *
      0.0118818469142844;
    // species 26: C7H14
    result +=
      y[26] *
      (+2.00898039e+01 + 3.10607878e-02 * tc[1] - 1.05644793e-05 * tc[2] +
       1.63405780e-09 * tc[3] - 9.45598219e-14 * tc[4]) *
      0.0101844402122437;
    // species 27: C8H16
    result +=
      y[27] *
      (+2.33540125e+01 + 3.53666462e-02 * tc[1] - 1.20208388e-05 * tc[2] +
       1.85855053e-09 * tc[3] - 1.07522262e-13 * tc[4]) *
      0.0089113851857133;
    // species 28: C9H18
    result +=
      y[28] *
      (+2.66142176e+01 + 3.96825287e-02 * tc[1] - 1.34819446e-05 * tc[2] +
       2.08390452e-09 * tc[3] - 1.20539294e-13 * tc[4]) *
      0.0079212312761896;
    // species 30: C10H20
    result +=
      y[30] *
      (+2.98753903e+01 + 4.39971526e-02 * tc[1] - 1.49425530e-05 * tc[2] +
       2.30917678e-09 * tc[3] - 1.33551477e-13 * tc[4]) *
      0.0071291081485706;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 29: PXC9H19
    result +=
      y[29] *
      (-2.04387292e+00 + 1.05617283e-01 * tc[1] - 6.68199971e-05 * tc[2] +
       2.14486166e-08 * tc[3] - 2.77404275e-12 * tc[4]) *
      0.0078584844126962;
  } else {
    // species 29: PXC9H19
    result +=
      y[29] *
      (+2.73097514e+01 + 4.12657344e-02 * tc[1] - 1.40383289e-05 * tc[2] +
       2.17174871e-09 * tc[3] - 1.25692307e-13 * tc[4]) *
      0.0078584844126962;
  }

  cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real T, const amrex::Real x[], amrex::Real& hbml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real hml[35];                                //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // perform dot product
  for (int id = 0; id < 35; ++id) {
    result += x[id] * hml[id];
  }

  hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& hbms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 0: NC12H26
    result += y[0] *
              (-2.62181594e+00 + 7.36188555e-02 * tc[1] -
               3.14656757e-05 * tc[2] + 7.68603170e-09 * tc[3] -
               8.07204460e-13 * tc[4] - 4.00654253e+04 * invT) *
              0.0058706117177410;
    // species 31: C12H24
    result += y[31] *
              (-2.96342681e+00 + 7.19961800e-02 * tc[1] -
               3.20461338e-05 * tc[2] + 8.25436183e-09 * tc[3] -
               9.24796380e-13 * tc[4] - 2.46345299e+04 * invT) *
              0.0059409234571422;
  } else {
    // species 0: NC12H26
    result += y[0] *
              (+3.85095037e+01 + 2.81775024e-02 * tc[1] -
               6.38310667e-06 * tc[2] + 7.40062155e-10 * tc[3] -
               3.42488300e-14 * tc[4] - 5.48843465e+04 * invT) *
              0.0058706117177410;
    // species 31: C12H24
    result += y[31] *
              (+3.74002111e+01 + 2.63115377e-02 * tc[1] -
               5.95414397e-06 * tc[2] + 6.89874658e-10 * tc[3] -
               3.19124998e-14 * tc[4] - 3.89405962e+04 * invT) *
              0.0059409234571422;
  }

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: H
    result += y[1] *
              (+2.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+3.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 3: OH
    result += y[3] *
              (+4.12530561e+00 - 1.61272470e-03 * tc[1] +
               2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
               4.12474758e-13 * tc[4] + 3.38153812e+03 * invT) *
              0.0587993179279120;
    // species 4: HO2
    result += y[4] *
              (+4.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 5: H2
    result += y[5] *
              (+2.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 6: H2O
    result += y[6] *
              (+4.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+4.27611269e+00 - 2.71411208e-04 * tc[1] +
               5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
               1.72490873e-12 * tc[4] - 1.77025821e+04 * invT) *
              0.0293996589639560;
    // species 8: O2
    result += y[8] *
              (+3.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 9: CH3
    result += y[9] *
              (+3.67359040e+00 + 1.00547588e-03 * tc[1] +
               1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
               5.08771468e-13 * tc[4] + 1.64449988e+04 * invT) *
              0.0665114732291320;
    // species 10: CH4
    result += y[10] *
              (+5.14987613e+00 - 6.83548940e-03 * tc[1] +
               1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
               3.33387912e-12 * tc[4] - 1.02466476e+04 * invT) *
              0.0623324814560868;
    // species 11: CH2O
    result += y[11] *
              (+4.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 12: CO
    result += y[12] *
              (+3.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 13: CO2
    result += y[13] *
              (+2.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 14: C2H2
    result += y[14] *
              (+8.08681094e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 15: C2H4
    result += y[15] *
              (+3.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 16: C2H6
    result += y[16] *
              (+4.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 17: CH2CHO
    result += y[17] *
              (+3.40906240e+00 + 5.36928700e-03 * tc[1] +
               6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
               5.73477020e-13 * tc[4] + 6.20000000e+01 * invT) *
              0.0232315019165989;
    // species 18: aC3H5
    result += y[18] *
              (+1.36318350e+00 + 9.90691050e-03 * tc[1] +
               4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
               3.16931420e-12 * tc[4] + 1.92456290e+04 * invT) *
              0.0243468945535997;
    // species 19: C3H6
    result += y[19] *
              (+1.49330700e+00 + 1.04625900e-02 * tc[1] +
               1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
               1.43162920e-12 * tc[4] + 1.07482600e+03 * invT) *
              0.0237636938285687;
    // species 20: C2H3CHO
    result += y[20] *
              (+1.27134980e+00 + 1.31155270e-02 * tc[1] -
               3.09707683e-06 * tc[2] - 1.19593180e-09 * tc[3] +
               6.69610860e-13 * tc[4] - 9.33573440e+03 * invT) *
              0.0178367579908676;
    // species 21: C4H7
    result += y[21] *
              (+7.44494320e-01 + 1.98394285e-02 * tc[1] -
               7.63269533e-06 * tc[2] + 5.33824325e-10 * tc[3] +
               4.61927500e-13 * tc[4] + 2.26533280e+04 * invT) *
              0.0181488203266788;
    // species 22: C4H81
    result += y[22] *
              (+1.18113800e+00 + 1.54266900e-02 * tc[1] +
               1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
               2.22203860e-12 * tc[4] - 1.79040040e+03 * invT) *
              0.0178227703714265;
    // species 23: C5H9
    result += y[23] *
              (-2.41901110e+00 + 2.02151945e-02 * tc[1] +
               2.26007797e-06 * tc[2] - 8.43118550e-09 * tc[3] +
               3.02334260e-12 * tc[4] + 2.81218870e+03 * invT) *
              0.0144661275623128;
    // species 32: C12H25O2
    result += y[32] *
              (+5.31404000e+00 + 4.46936500e-02 * tc[1] +
               4.84503333e-06 * tc[2] - 1.87312500e-08 * tc[3] +
               6.70650000e-12 * tc[4] - 2.98918000e+04 * invT) *
              0.0049669696518154;
    // species 33: OC12H23OOH
    result += y[33] *
              (+8.80733000e+00 + 3.25311500e-02 * tc[1] +
               2.31686000e-05 * tc[2] - 3.17262500e-08 * tc[3] +
               1.02198200e-11 * tc[4] - 6.65361000e+04 * invT) *
              0.0046227596950828;
    // species 34: N2
    result += y[34] *
              (+3.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
  } else {
    // species 1: H
    result += y[1] *
              (+2.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+2.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 3: OH
    result += y[3] *
              (+2.86472886e+00 + 5.28252240e-04 * tc[1] -
               8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
               2.66391752e-16 * tc[4] + 3.71885774e+03 * invT) *
              0.0587993179279120;
    // species 4: HO2
    result += y[4] *
              (+4.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 5: H2
    result += y[5] *
              (+3.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 6: H2O
    result += y[6] *
              (+3.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+4.16500285e+00 + 2.45415847e-03 * tc[1] -
               6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
               5.75816610e-15 * tc[4] - 1.78617877e+04 * invT) *
              0.0293996589639560;
    // species 8: O2
    result += y[8] *
              (+3.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 9: CH3
    result += y[9] *
              (+2.28571772e+00 + 3.61995018e-03 * tc[1] -
               9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
               9.34308788e-15 * tc[4] + 1.67755843e+04 * invT) *
              0.0665114732291320;
    // species 10: CH4
    result += y[10] *
              (+7.48514950e-02 + 6.69547335e-03 * tc[1] -
               1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
               2.03630460e-14 * tc[4] - 9.46834459e+03 * invT) *
              0.0623324814560868;
    // species 11: CH2O
    result += y[11] *
              (+1.76069008e+00 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 12: CO
    result += y[12] *
              (+2.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 13: CO2
    result += y[13] *
              (+3.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 14: C2H2
    result += y[14] *
              (+4.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 15: C2H4
    result += y[15] *
              (+2.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 16: C2H6
    result += y[16] *
              (+1.07188150e+00 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 17: CH2CHO
    result += y[17] *
              (+5.97566990e+00 + 4.06529570e-03 * tc[1] -
               9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
               4.35203420e-15 * tc[4] - 9.69500000e+02 * invT) *
              0.0232315019165989;
    // species 18: aC3H5
    result += y[18] *
              (+6.50078770e+00 + 7.16236550e-03 * tc[1] -
               1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
               1.80727774e-14 * tc[4] + 1.74824490e+04 * invT) *
              0.0243468945535997;
    // species 19: C3H6
    result += y[19] *
              (+6.73225700e+00 + 7.45417000e-03 * tc[1] -
               1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
               7.53240800e-15 * tc[4] - 9.23570300e+02 * invT) *
              0.0237636938285687;
    // species 20: C2H3CHO
    result += y[20] *
              (+5.81118680e+00 + 8.55712800e-03 * tc[1] -
               2.49447203e-06 * tc[2] + 3.56306225e-10 * tc[3] -
               1.83493682e-14 * tc[4] - 1.07840540e+04 * invT) *
              0.0178367579908676;
    // species 21: C4H7
    result += y[21] *
              (+7.01348350e+00 + 1.13172790e-02 * tc[1] -
               3.08484900e-06 * tc[2] + 4.20198175e-10 * tc[3] -
               2.08172340e-14 * tc[4] + 2.09550080e+04 * invT) *
              0.0181488203266788;
    // species 22: C4H81
    result += y[22] *
              (+2.05358410e+00 + 1.71752535e-02 * tc[1] -
               5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
               5.07220900e-14 * tc[4] - 2.13972310e+03 * invT) *
              0.0178227703714265;
    // species 23: C5H9
    result += y[23] *
              (+1.01386400e+01 + 1.13570690e-02 * tc[1] -
               2.59701543e-06 * tc[2] + 2.96913050e-10 * tc[3] -
               1.31864896e-14 * tc[4] - 1.72183590e+03 * invT) *
              0.0144661275623128;
    // species 32: C12H25O2
    result += y[32] *
              (+2.84782000e+01 + 2.68769500e-02 * tc[1] -
               5.60620000e-06 * tc[2] + 6.28417500e-10 * tc[3] -
               2.94416000e-14 * tc[4] - 3.74118000e+04 * invT) *
              0.0049669696518154;
    // species 33: OC12H23OOH
    result += y[33] *
              (+2.36731000e+01 + 3.08196000e-02 * tc[1] -
               6.99453333e-06 * tc[2] + 8.32915000e-10 * tc[3] -
               4.07180000e-14 * tc[4] - 7.18258000e+04 * invT) *
              0.0046227596950828;
    // species 34: N2
    result += y[34] *
              (+2.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 24: C5H10
    result += y[24] *
              (-1.06223481e+00 + 2.87109147e-02 * tc[1] -
               1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
               3.59219578e-13 * tc[4] - 4.46546666e+03 * invT) *
              0.0142582162971412;
    // species 25: C6H12
    result += y[25] *
              (-1.35275205e+00 + 3.49327713e-02 * tc[1] -
               1.53136007e-05 * tc[2] + 3.92418358e-09 * tc[3] -
               4.42592350e-13 * tc[4] - 7.34368617e+03 * invT) *
              0.0118818469142844;
    // species 26: C7H14
    result += y[26] *
              (-1.67720549e+00 + 4.12305800e-02 * tc[1] -
               1.82168036e-05 * tc[2] + 4.69655757e-09 * tc[3] -
               5.31475966e-13 * tc[4] - 1.02168601e+04 * invT) *
              0.0101844402122437;
    // species 27: C8H16
    result += y[27] *
              (-1.89226915e+00 + 4.73033178e-02 * tc[1] -
               2.09128507e-05 * tc[2] + 5.37895772e-09 * tc[3] -
               6.05437366e-13 * tc[4] - 1.31074559e+04 * invT) *
              0.0089113851857133;
    // species 28: C9H18
    result += y[28] *
              (-2.16108263e+00 + 5.34791485e-02 * tc[1] -
               2.36991081e-05 * tc[2] + 6.09927692e-09 * tc[3] -
               6.85543094e-13 * tc[4] - 1.59890847e+04 * invT) *
              0.0079212312761896;
    // species 30: C10H20
    result += y[30] *
              (-2.42901688e+00 + 5.96527990e-02 * tc[1] -
               2.64829675e-05 * tc[2] + 6.81841490e-09 * tc[3] -
               7.65436746e-13 * tc[4] - 1.88708365e+04 * invT) *
              0.0071291081485706;
  } else {
    // species 24: C5H10
    result += y[24] *
              (+1.45851539e+01 + 1.12036235e-02 * tc[1] -
               2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
               1.36877028e-14 * tc[4] - 1.00898205e+04 * invT) *
              0.0142582162971412;
    // species 25: C6H12
    result += y[25] *
              (+1.78337529e+01 + 1.33688829e-02 * tc[1] -
               3.03345591e-06 * tc[2] + 3.52049420e-10 * tc[3] -
               1.63024849e-14 * tc[4] - 1.42062860e+04 * invT) *
              0.0118818469142844;
    // species 26: C7H14
    result += y[26] *
              (+2.10898039e+01 + 1.55303939e-02 * tc[1] -
               3.52149310e-06 * tc[2] + 4.08514450e-10 * tc[3] -
               1.89119644e-14 * tc[4] - 1.83260065e+04 * invT) *
              0.0101844402122437;
    // species 27: C8H16
    result += y[27] *
              (+2.43540125e+01 + 1.76833231e-02 * tc[1] -
               4.00694627e-06 * tc[2] + 4.64637633e-10 * tc[3] -
               2.15044524e-14 * tc[4] - 2.24485674e+04 * invT) *
              0.0089113851857133;
    // species 28: C9H18
    result += y[28] *
              (+2.76142176e+01 + 1.98412643e-02 * tc[1] -
               4.49398153e-06 * tc[2] + 5.20976130e-10 * tc[3] -
               2.41078588e-14 * tc[4] - 2.65709061e+04 * invT) *
              0.0079212312761896;
    // species 30: C10H20
    result += y[30] *
              (+3.08753903e+01 + 2.19985763e-02 * tc[1] -
               4.98085100e-06 * tc[2] + 5.77294195e-10 * tc[3] -
               2.67102954e-14 * tc[4] - 3.06937307e+04 * invT) *
              0.0071291081485706;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 29: PXC9H19
    result += y[29] *
              (-1.04387292e+00 + 5.28086415e-02 * tc[1] -
               2.22733324e-05 * tc[2] + 5.36215415e-09 * tc[3] -
               5.54808550e-13 * tc[4] - 6.80818512e+03 * invT) *
              0.0078584844126962;
  } else {
    // species 29: PXC9H19
    result += y[29] *
              (+2.83097514e+01 + 2.06328672e-02 * tc[1] -
               4.67944297e-06 * tc[2] + 5.42937177e-10 * tc[3] -
               2.51384614e-14 * tc[4] - 1.74516030e+04 * invT) *
              0.0078584844126962;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real T, const amrex::Real x[], amrex::Real& ubml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real uml[35];                                //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // perform dot product
  for (int id = 0; id < 35; ++id) {
    result += x[id] * uml[id];
  }

  ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& ubms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 0: NC12H26
    result += y[0] *
              (-3.62181594e+00 + 7.36188555e-02 * tc[1] -
               3.14656757e-05 * tc[2] + 7.68603170e-09 * tc[3] -
               8.07204460e-13 * tc[4] - 4.00654253e+04 * invT) *
              0.0058706117177410;
    // species 31: C12H24
    result += y[31] *
              (-3.96342681e+00 + 7.19961800e-02 * tc[1] -
               3.20461338e-05 * tc[2] + 8.25436183e-09 * tc[3] -
               9.24796380e-13 * tc[4] - 2.46345299e+04 * invT) *
              0.0059409234571422;
  } else {
    // species 0: NC12H26
    result += y[0] *
              (+3.75095037e+01 + 2.81775024e-02 * tc[1] -
               6.38310667e-06 * tc[2] + 7.40062155e-10 * tc[3] -
               3.42488300e-14 * tc[4] - 5.48843465e+04 * invT) *
              0.0058706117177410;
    // species 31: C12H24
    result += y[31] *
              (+3.64002111e+01 + 2.63115377e-02 * tc[1] -
               5.95414397e-06 * tc[2] + 6.89874658e-10 * tc[3] -
               3.19124998e-14 * tc[4] - 3.89405962e+04 * invT) *
              0.0059409234571422;
  }

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 1: H
    result += y[1] *
              (+1.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+2.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 3: OH
    result += y[3] *
              (+3.12530561e+00 - 1.61272470e-03 * tc[1] +
               2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
               4.12474758e-13 * tc[4] + 3.38153812e+03 * invT) *
              0.0587993179279120;
    // species 4: HO2
    result += y[4] *
              (+3.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 5: H2
    result += y[5] *
              (+1.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 6: H2O
    result += y[6] *
              (+3.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+3.27611269e+00 - 2.71411208e-04 * tc[1] +
               5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
               1.72490873e-12 * tc[4] - 1.77025821e+04 * invT) *
              0.0293996589639560;
    // species 8: O2
    result += y[8] *
              (+2.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 9: CH3
    result += y[9] *
              (+2.67359040e+00 + 1.00547588e-03 * tc[1] +
               1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
               5.08771468e-13 * tc[4] + 1.64449988e+04 * invT) *
              0.0665114732291320;
    // species 10: CH4
    result += y[10] *
              (+4.14987613e+00 - 6.83548940e-03 * tc[1] +
               1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
               3.33387912e-12 * tc[4] - 1.02466476e+04 * invT) *
              0.0623324814560868;
    // species 11: CH2O
    result += y[11] *
              (+3.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 12: CO
    result += y[12] *
              (+2.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 13: CO2
    result += y[13] *
              (+1.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 14: C2H2
    result += y[14] *
              (-1.91318906e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 15: C2H4
    result += y[15] *
              (+2.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 16: C2H6
    result += y[16] *
              (+3.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 17: CH2CHO
    result += y[17] *
              (+2.40906240e+00 + 5.36928700e-03 * tc[1] +
               6.30497500e-07 * tc[2] - 1.78964578e-09 * tc[3] +
               5.73477020e-13 * tc[4] + 6.20000000e+01 * invT) *
              0.0232315019165989;
    // species 18: aC3H5
    result += y[18] *
              (+3.63183500e-01 + 9.90691050e-03 * tc[1] +
               4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
               3.16931420e-12 * tc[4] + 1.92456290e+04 * invT) *
              0.0243468945535997;
    // species 19: C3H6
    result += y[19] *
              (+4.93307000e-01 + 1.04625900e-02 * tc[1] +
               1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
               1.43162920e-12 * tc[4] + 1.07482600e+03 * invT) *
              0.0237636938285687;
    // species 20: C2H3CHO
    result += y[20] *
              (+2.71349800e-01 + 1.31155270e-02 * tc[1] -
               3.09707683e-06 * tc[2] - 1.19593180e-09 * tc[3] +
               6.69610860e-13 * tc[4] - 9.33573440e+03 * invT) *
              0.0178367579908676;
    // species 21: C4H7
    result += y[21] *
              (-2.55505680e-01 + 1.98394285e-02 * tc[1] -
               7.63269533e-06 * tc[2] + 5.33824325e-10 * tc[3] +
               4.61927500e-13 * tc[4] + 2.26533280e+04 * invT) *
              0.0181488203266788;
    // species 22: C4H81
    result += y[22] *
              (+1.81138000e-01 + 1.54266900e-02 * tc[1] +
               1.69550823e-06 * tc[2] - 6.16372200e-09 * tc[3] +
               2.22203860e-12 * tc[4] - 1.79040040e+03 * invT) *
              0.0178227703714265;
    // species 23: C5H9
    result += y[23] *
              (-3.41901110e+00 + 2.02151945e-02 * tc[1] +
               2.26007797e-06 * tc[2] - 8.43118550e-09 * tc[3] +
               3.02334260e-12 * tc[4] + 2.81218870e+03 * invT) *
              0.0144661275623128;
    // species 32: C12H25O2
    result += y[32] *
              (+4.31404000e+00 + 4.46936500e-02 * tc[1] +
               4.84503333e-06 * tc[2] - 1.87312500e-08 * tc[3] +
               6.70650000e-12 * tc[4] - 2.98918000e+04 * invT) *
              0.0049669696518154;
    // species 33: OC12H23OOH
    result += y[33] *
              (+7.80733000e+00 + 3.25311500e-02 * tc[1] +
               2.31686000e-05 * tc[2] - 3.17262500e-08 * tc[3] +
               1.02198200e-11 * tc[4] - 6.65361000e+04 * invT) *
              0.0046227596950828;
    // species 34: N2
    result += y[34] *
              (+2.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
  } else {
    // species 1: H
    result += y[1] *
              (+1.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+1.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 3: OH
    result += y[3] *
              (+1.86472886e+00 + 5.28252240e-04 * tc[1] -
               8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
               2.66391752e-16 * tc[4] + 3.71885774e+03 * invT) *
              0.0587993179279120;
    // species 4: HO2
    result += y[4] *
              (+3.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 5: H2
    result += y[5] *
              (+2.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 6: H2O
    result += y[6] *
              (+2.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 7: H2O2
    result += y[7] *
              (+3.16500285e+00 + 2.45415847e-03 * tc[1] -
               6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
               5.75816610e-15 * tc[4] - 1.78617877e+04 * invT) *
              0.0293996589639560;
    // species 8: O2
    result += y[8] *
              (+2.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 9: CH3
    result += y[9] *
              (+1.28571772e+00 + 3.61995018e-03 * tc[1] -
               9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
               9.34308788e-15 * tc[4] + 1.67755843e+04 * invT) *
              0.0665114732291320;
    // species 10: CH4
    result += y[10] *
              (-9.25148505e-01 + 6.69547335e-03 * tc[1] -
               1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
               2.03630460e-14 * tc[4] - 9.46834459e+03 * invT) *
              0.0623324814560868;
    // species 11: CH2O
    result += y[11] *
              (+7.60690080e-01 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 12: CO
    result += y[12] *
              (+1.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 13: CO2
    result += y[13] *
              (+2.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 14: C2H2
    result += y[14] *
              (+3.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 15: C2H4
    result += y[15] *
              (+1.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 16: C2H6
    result += y[16] *
              (+7.18815000e-02 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 17: CH2CHO
    result += y[17] *
              (+4.97566990e+00 + 4.06529570e-03 * tc[1] -
               9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
               4.35203420e-15 * tc[4] - 9.69500000e+02 * invT) *
              0.0232315019165989;
    // species 18: aC3H5
    result += y[18] *
              (+5.50078770e+00 + 7.16236550e-03 * tc[1] -
               1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
               1.80727774e-14 * tc[4] + 1.74824490e+04 * invT) *
              0.0243468945535997;
    // species 19: C3H6
    result += y[19] *
              (+5.73225700e+00 + 7.45417000e-03 * tc[1] -
               1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
               7.53240800e-15 * tc[4] - 9.23570300e+02 * invT) *
              0.0237636938285687;
    // species 20: C2H3CHO
    result += y[20] *
              (+4.81118680e+00 + 8.55712800e-03 * tc[1] -
               2.49447203e-06 * tc[2] + 3.56306225e-10 * tc[3] -
               1.83493682e-14 * tc[4] - 1.07840540e+04 * invT) *
              0.0178367579908676;
    // species 21: C4H7
    result += y[21] *
              (+6.01348350e+00 + 1.13172790e-02 * tc[1] -
               3.08484900e-06 * tc[2] + 4.20198175e-10 * tc[3] -
               2.08172340e-14 * tc[4] + 2.09550080e+04 * invT) *
              0.0181488203266788;
    // species 22: C4H81
    result += y[22] *
              (+1.05358410e+00 + 1.71752535e-02 * tc[1] -
               5.29439900e-06 * tc[2] + 8.27241550e-10 * tc[3] -
               5.07220900e-14 * tc[4] - 2.13972310e+03 * invT) *
              0.0178227703714265;
    // species 23: C5H9
    result += y[23] *
              (+9.13864000e+00 + 1.13570690e-02 * tc[1] -
               2.59701543e-06 * tc[2] + 2.96913050e-10 * tc[3] -
               1.31864896e-14 * tc[4] - 1.72183590e+03 * invT) *
              0.0144661275623128;
    // species 32: C12H25O2
    result += y[32] *
              (+2.74782000e+01 + 2.68769500e-02 * tc[1] -
               5.60620000e-06 * tc[2] + 6.28417500e-10 * tc[3] -
               2.94416000e-14 * tc[4] - 3.74118000e+04 * invT) *
              0.0049669696518154;
    // species 33: OC12H23OOH
    result += y[33] *
              (+2.26731000e+01 + 3.08196000e-02 * tc[1] -
               6.99453333e-06 * tc[2] + 8.32915000e-10 * tc[3] -
               4.07180000e-14 * tc[4] - 7.18258000e+04 * invT) *
              0.0046227596950828;
    // species 34: N2
    result += y[34] *
              (+1.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 24: C5H10
    result += y[24] *
              (-2.06223481e+00 + 2.87109147e-02 * tc[1] -
               1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
               3.59219578e-13 * tc[4] - 4.46546666e+03 * invT) *
              0.0142582162971412;
    // species 25: C6H12
    result += y[25] *
              (-2.35275205e+00 + 3.49327713e-02 * tc[1] -
               1.53136007e-05 * tc[2] + 3.92418358e-09 * tc[3] -
               4.42592350e-13 * tc[4] - 7.34368617e+03 * invT) *
              0.0118818469142844;
    // species 26: C7H14
    result += y[26] *
              (-2.67720549e+00 + 4.12305800e-02 * tc[1] -
               1.82168036e-05 * tc[2] + 4.69655757e-09 * tc[3] -
               5.31475966e-13 * tc[4] - 1.02168601e+04 * invT) *
              0.0101844402122437;
    // species 27: C8H16
    result += y[27] *
              (-2.89226915e+00 + 4.73033178e-02 * tc[1] -
               2.09128507e-05 * tc[2] + 5.37895772e-09 * tc[3] -
               6.05437366e-13 * tc[4] - 1.31074559e+04 * invT) *
              0.0089113851857133;
    // species 28: C9H18
    result += y[28] *
              (-3.16108263e+00 + 5.34791485e-02 * tc[1] -
               2.36991081e-05 * tc[2] + 6.09927692e-09 * tc[3] -
               6.85543094e-13 * tc[4] - 1.59890847e+04 * invT) *
              0.0079212312761896;
    // species 30: C10H20
    result += y[30] *
              (-3.42901688e+00 + 5.96527990e-02 * tc[1] -
               2.64829675e-05 * tc[2] + 6.81841490e-09 * tc[3] -
               7.65436746e-13 * tc[4] - 1.88708365e+04 * invT) *
              0.0071291081485706;
  } else {
    // species 24: C5H10
    result += y[24] *
              (+1.35851539e+01 + 1.12036235e-02 * tc[1] -
               2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
               1.36877028e-14 * tc[4] - 1.00898205e+04 * invT) *
              0.0142582162971412;
    // species 25: C6H12
    result += y[25] *
              (+1.68337529e+01 + 1.33688829e-02 * tc[1] -
               3.03345591e-06 * tc[2] + 3.52049420e-10 * tc[3] -
               1.63024849e-14 * tc[4] - 1.42062860e+04 * invT) *
              0.0118818469142844;
    // species 26: C7H14
    result += y[26] *
              (+2.00898039e+01 + 1.55303939e-02 * tc[1] -
               3.52149310e-06 * tc[2] + 4.08514450e-10 * tc[3] -
               1.89119644e-14 * tc[4] - 1.83260065e+04 * invT) *
              0.0101844402122437;
    // species 27: C8H16
    result += y[27] *
              (+2.33540125e+01 + 1.76833231e-02 * tc[1] -
               4.00694627e-06 * tc[2] + 4.64637633e-10 * tc[3] -
               2.15044524e-14 * tc[4] - 2.24485674e+04 * invT) *
              0.0089113851857133;
    // species 28: C9H18
    result += y[28] *
              (+2.66142176e+01 + 1.98412643e-02 * tc[1] -
               4.49398153e-06 * tc[2] + 5.20976130e-10 * tc[3] -
               2.41078588e-14 * tc[4] - 2.65709061e+04 * invT) *
              0.0079212312761896;
    // species 30: C10H20
    result += y[30] *
              (+2.98753903e+01 + 2.19985763e-02 * tc[1] -
               4.98085100e-06 * tc[2] + 5.77294195e-10 * tc[3] -
               2.67102954e-14 * tc[4] - 3.06937307e+04 * invT) *
              0.0071291081485706;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 29: PXC9H19
    result += y[29] *
              (-2.04387292e+00 + 5.28086415e-02 * tc[1] -
               2.22733324e-05 * tc[2] + 5.36215415e-09 * tc[3] -
               5.54808550e-13 * tc[4] - 6.80818512e+03 * invT) *
              0.0078584844126962;
  } else {
    // species 29: PXC9H19
    result += y[29] *
              (+2.73097514e+01 + 2.06328672e-02 * tc[1] -
               4.67944297e-06 * tc[2] + 5.42937177e-10 * tc[3] -
               2.51384614e-14 * tc[4] - 1.74516030e+04 * invT) *
              0.0078584844126962;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& sbml)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[35]; //  temporary storage
  speciesEntropy(sor, tc);

  // Compute Eq 42
  for (int id = 0; id < 35; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[35]; //  temporary storage
  amrex::Real x[35];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 35; i++) {
    YOW += y[i] * imw(i);
  }
  // Now compute y to x conversion
  x[0] = y[0] / (170.340000 * YOW);
  x[1] = y[1] / (1.008000 * YOW);
  x[2] = y[2] / (15.999000 * YOW);
  x[3] = y[3] / (17.007000 * YOW);
  x[4] = y[4] / (33.006000 * YOW);
  x[5] = y[5] / (2.016000 * YOW);
  x[6] = y[6] / (18.015000 * YOW);
  x[7] = y[7] / (34.014000 * YOW);
  x[8] = y[8] / (31.998000 * YOW);
  x[9] = y[9] / (15.035000 * YOW);
  x[10] = y[10] / (16.043000 * YOW);
  x[11] = y[11] / (30.026000 * YOW);
  x[12] = y[12] / (28.010000 * YOW);
  x[13] = y[13] / (44.009000 * YOW);
  x[14] = y[14] / (26.038000 * YOW);
  x[15] = y[15] / (28.054000 * YOW);
  x[16] = y[16] / (30.070000 * YOW);
  x[17] = y[17] / (43.045000 * YOW);
  x[18] = y[18] / (41.073000 * YOW);
  x[19] = y[19] / (42.081000 * YOW);
  x[20] = y[20] / (56.064000 * YOW);
  x[21] = y[21] / (55.100000 * YOW);
  x[22] = y[22] / (56.108000 * YOW);
  x[23] = y[23] / (69.127000 * YOW);
  x[24] = y[24] / (70.135000 * YOW);
  x[25] = y[25] / (84.162000 * YOW);
  x[26] = y[26] / (98.189000 * YOW);
  x[27] = y[27] / (112.216000 * YOW);
  x[28] = y[28] / (126.243000 * YOW);
  x[29] = y[29] / (127.251000 * YOW);
  x[30] = y[30] / (140.270000 * YOW);
  x[31] = y[31] / (168.324000 * YOW);
  x[32] = y[32] / (201.330000 * YOW);
  x[33] = y[33] / (216.321000 * YOW);
  x[34] = y[34] / (28.014000 * YOW);
  speciesEntropy(sor, tc);
  // Perform computation in Eq 42 and 43
  for (int i = 0; i < 35; i++) {
    result += x[i] * (sor[i] - log((x[i] + 1e-100)) - logPratio);
  }
  // Scale by R/W
  sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real e, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  CKUBMS(tmin, y, emin);
  CKUBMS(tmax, y, emax);
  if (e < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(tmin, y, cv);
    t = tmin - (emin - e) / cv;
    ierr = 1;
    return;
  }
  if (e > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(tmax, y, cv);
    t = tmax - (emax - e) / cv;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (e - emin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKUBMS(t1, y, e1);
    CKCVBS(t1, y, cv);
    dt = (e - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real h, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  CKHBMS(tmin, y, hmin);
  CKHBMS(tmax, y, hmax);
  if (h < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(tmin, y, cp);
    t = tmin - (hmin - h) / cp;
    ierr = 1;
    return;
  }
  if (h > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(tmax, y, cp);
    t = tmax - (hmax - h) / cp;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (h - hmin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKHBMS(t1, y, h1);
    CKCPBS(t1, y, cp);
    dt = (h - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& P)
{
  amrex::Real XW = 0;                      //  To hold mean molecular wt
  XW += x[0] * 170.340000;                 // NC12H26
  XW += x[1] * 1.008000;                   // H
  XW += x[2] * 15.999000;                  // O
  XW += x[3] * 17.007000;                  // OH
  XW += x[4] * 33.006000;                  // HO2
  XW += x[5] * 2.016000;                   // H2
  XW += x[6] * 18.015000;                  // H2O
  XW += x[7] * 34.014000;                  // H2O2
  XW += x[8] * 31.998000;                  // O2
  XW += x[9] * 15.035000;                  // CH3
  XW += x[10] * 16.043000;                 // CH4
  XW += x[11] * 30.026000;                 // CH2O
  XW += x[12] * 28.010000;                 // CO
  XW += x[13] * 44.009000;                 // CO2
  XW += x[14] * 26.038000;                 // C2H2
  XW += x[15] * 28.054000;                 // C2H4
  XW += x[16] * 30.070000;                 // C2H6
  XW += x[17] * 43.045000;                 // CH2CHO
  XW += x[18] * 41.073000;                 // aC3H5
  XW += x[19] * 42.081000;                 // C3H6
  XW += x[20] * 56.064000;                 // C2H3CHO
  XW += x[21] * 55.100000;                 // C4H7
  XW += x[22] * 56.108000;                 // C4H81
  XW += x[23] * 69.127000;                 // C5H9
  XW += x[24] * 70.135000;                 // C5H10
  XW += x[25] * 84.162000;                 // C6H12
  XW += x[26] * 98.189000;                 // C7H14
  XW += x[27] * 112.216000;                // C8H16
  XW += x[28] * 126.243000;                // C9H18
  XW += x[29] * 127.251000;                // PXC9H19
  XW += x[30] * 140.270000;                // C10H20
  XW += x[31] * 168.324000;                // C12H24
  XW += x[32] * 201.330000;                // C12H25O2
  XW += x[33] * 216.321000;                // OC12H23OOH
  XW += x[34] * 28.014000;                 // N2
  P = rho * 8.31446261815324e+07 * T / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& P)
{
  amrex::Real YOW = 0; //  for computing mean MW

  for (int i = 0; i < 35; i++) {
    YOW += y[i] * imw(i);
  }
  P = rho * 8.31446261815324e+07 * T * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& P)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 170.340000;  // NC12H26
  W += c[1] * 1.008000;    // H
  W += c[2] * 15.999000;   // O
  W += c[3] * 17.007000;   // OH
  W += c[4] * 33.006000;   // HO2
  W += c[5] * 2.016000;    // H2
  W += c[6] * 18.015000;   // H2O
  W += c[7] * 34.014000;   // H2O2
  W += c[8] * 31.998000;   // O2
  W += c[9] * 15.035000;   // CH3
  W += c[10] * 16.043000;  // CH4
  W += c[11] * 30.026000;  // CH2O
  W += c[12] * 28.010000;  // CO
  W += c[13] * 44.009000;  // CO2
  W += c[14] * 26.038000;  // C2H2
  W += c[15] * 28.054000;  // C2H4
  W += c[16] * 30.070000;  // C2H6
  W += c[17] * 43.045000;  // CH2CHO
  W += c[18] * 41.073000;  // aC3H5
  W += c[19] * 42.081000;  // C3H6
  W += c[20] * 56.064000;  // C2H3CHO
  W += c[21] * 55.100000;  // C4H7
  W += c[22] * 56.108000;  // C4H81
  W += c[23] * 69.127000;  // C5H9
  W += c[24] * 70.135000;  // C5H10
  W += c[25] * 84.162000;  // C6H12
  W += c[26] * 98.189000;  // C7H14
  W += c[27] * 112.216000; // C8H16
  W += c[28] * 126.243000; // C9H18
  W += c[29] * 127.251000; // PXC9H19
  W += c[30] * 140.270000; // C10H20
  W += c[31] * 168.324000; // C12H24
  W += c[32] * 201.330000; // C12H25O2
  W += c[33] * 216.321000; // OC12H23OOH
  W += c[34] * 28.014000;  // N2

  for (int id = 0; id < 35; ++id) {
    sumC += c[id];
  }
  P = rho * 8.31446261815324e+07 * T * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& rho)
{
  amrex::Real XW = 0;                        //  To hold mean molecular wt
  XW += x[0] * 170.340000;                   // NC12H26
  XW += x[1] * 1.008000;                     // H
  XW += x[2] * 15.999000;                    // O
  XW += x[3] * 17.007000;                    // OH
  XW += x[4] * 33.006000;                    // HO2
  XW += x[5] * 2.016000;                     // H2
  XW += x[6] * 18.015000;                    // H2O
  XW += x[7] * 34.014000;                    // H2O2
  XW += x[8] * 31.998000;                    // O2
  XW += x[9] * 15.035000;                    // CH3
  XW += x[10] * 16.043000;                   // CH4
  XW += x[11] * 30.026000;                   // CH2O
  XW += x[12] * 28.010000;                   // CO
  XW += x[13] * 44.009000;                   // CO2
  XW += x[14] * 26.038000;                   // C2H2
  XW += x[15] * 28.054000;                   // C2H4
  XW += x[16] * 30.070000;                   // C2H6
  XW += x[17] * 43.045000;                   // CH2CHO
  XW += x[18] * 41.073000;                   // aC3H5
  XW += x[19] * 42.081000;                   // C3H6
  XW += x[20] * 56.064000;                   // C2H3CHO
  XW += x[21] * 55.100000;                   // C4H7
  XW += x[22] * 56.108000;                   // C4H81
  XW += x[23] * 69.127000;                   // C5H9
  XW += x[24] * 70.135000;                   // C5H10
  XW += x[25] * 84.162000;                   // C6H12
  XW += x[26] * 98.189000;                   // C7H14
  XW += x[27] * 112.216000;                  // C8H16
  XW += x[28] * 126.243000;                  // C9H18
  XW += x[29] * 127.251000;                  // PXC9H19
  XW += x[30] * 140.270000;                  // C10H20
  XW += x[31] * 168.324000;                  // C12H24
  XW += x[32] * 201.330000;                  // C12H25O2
  XW += x[33] * 216.321000;                  // OC12H23OOH
  XW += x[34] * 28.014000;                   // N2
  rho = P * XW / (8.31446261815324e+07 * T); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& rho)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 35; i++) {
    YOW += y[i] * imw(i);
  }

  rho = P / (8.31446261815324e+07 * T * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& rho)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 170.340000;  // NC12H26
  W += c[1] * 1.008000;    // H
  W += c[2] * 15.999000;   // O
  W += c[3] * 17.007000;   // OH
  W += c[4] * 33.006000;   // HO2
  W += c[5] * 2.016000;    // H2
  W += c[6] * 18.015000;   // H2O
  W += c[7] * 34.014000;   // H2O2
  W += c[8] * 31.998000;   // O2
  W += c[9] * 15.035000;   // CH3
  W += c[10] * 16.043000;  // CH4
  W += c[11] * 30.026000;  // CH2O
  W += c[12] * 28.010000;  // CO
  W += c[13] * 44.009000;  // CO2
  W += c[14] * 26.038000;  // C2H2
  W += c[15] * 28.054000;  // C2H4
  W += c[16] * 30.070000;  // C2H6
  W += c[17] * 43.045000;  // CH2CHO
  W += c[18] * 41.073000;  // aC3H5
  W += c[19] * 42.081000;  // C3H6
  W += c[20] * 56.064000;  // C2H3CHO
  W += c[21] * 55.100000;  // C4H7
  W += c[22] * 56.108000;  // C4H81
  W += c[23] * 69.127000;  // C5H9
  W += c[24] * 70.135000;  // C5H10
  W += c[25] * 84.162000;  // C6H12
  W += c[26] * 98.189000;  // C7H14
  W += c[27] * 112.216000; // C8H16
  W += c[28] * 126.243000; // C9H18
  W += c[29] * 127.251000; // PXC9H19
  W += c[30] * 140.270000; // C10H20
  W += c[31] * 168.324000; // C12H24
  W += c[32] * 201.330000; // C12H25O2
  W += c[33] * 216.321000; // OC12H23OOH
  W += c[34] * 28.014000;  // N2

  for (int id = 0; id < 35; ++id) {
    sumC += c[id];
  }
  rho = P * W / (sumC * T * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real wt[])
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real y[], amrex::Real& wtm)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 35; i++) {
    YOW += y[i] * imw(i);
  }

  wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real x[], amrex::Real& wtm)
{
  amrex::Real XW = 0;       //  see Eq 4 in CK Manual
  XW += x[0] * 170.340000;  // NC12H26
  XW += x[1] * 1.008000;    // H
  XW += x[2] * 15.999000;   // O
  XW += x[3] * 17.007000;   // OH
  XW += x[4] * 33.006000;   // HO2
  XW += x[5] * 2.016000;    // H2
  XW += x[6] * 18.015000;   // H2O
  XW += x[7] * 34.014000;   // H2O2
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 15.035000;   // CH3
  XW += x[10] * 16.043000;  // CH4
  XW += x[11] * 30.026000;  // CH2O
  XW += x[12] * 28.010000;  // CO
  XW += x[13] * 44.009000;  // CO2
  XW += x[14] * 26.038000;  // C2H2
  XW += x[15] * 28.054000;  // C2H4
  XW += x[16] * 30.070000;  // C2H6
  XW += x[17] * 43.045000;  // CH2CHO
  XW += x[18] * 41.073000;  // aC3H5
  XW += x[19] * 42.081000;  // C3H6
  XW += x[20] * 56.064000;  // C2H3CHO
  XW += x[21] * 55.100000;  // C4H7
  XW += x[22] * 56.108000;  // C4H81
  XW += x[23] * 69.127000;  // C5H9
  XW += x[24] * 70.135000;  // C5H10
  XW += x[25] * 84.162000;  // C6H12
  XW += x[26] * 98.189000;  // C7H14
  XW += x[27] * 112.216000; // C8H16
  XW += x[28] * 126.243000; // C9H18
  XW += x[29] * 127.251000; // PXC9H19
  XW += x[30] * 140.270000; // C10H20
  XW += x[31] * 168.324000; // C12H24
  XW += x[32] * 201.330000; // C12H25O2
  XW += x[33] * 216.321000; // OC12H23OOH
  XW += x[34] * 28.014000;  // N2
  wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real c[], amrex::Real& wtm)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 170.340000;  // NC12H26
  W += c[1] * 1.008000;    // H
  W += c[2] * 15.999000;   // O
  W += c[3] * 17.007000;   // OH
  W += c[4] * 33.006000;   // HO2
  W += c[5] * 2.016000;    // H2
  W += c[6] * 18.015000;   // H2O
  W += c[7] * 34.014000;   // H2O2
  W += c[8] * 31.998000;   // O2
  W += c[9] * 15.035000;   // CH3
  W += c[10] * 16.043000;  // CH4
  W += c[11] * 30.026000;  // CH2O
  W += c[12] * 28.010000;  // CO
  W += c[13] * 44.009000;  // CO2
  W += c[14] * 26.038000;  // C2H2
  W += c[15] * 28.054000;  // C2H4
  W += c[16] * 30.070000;  // C2H6
  W += c[17] * 43.045000;  // CH2CHO
  W += c[18] * 41.073000;  // aC3H5
  W += c[19] * 42.081000;  // C3H6
  W += c[20] * 56.064000;  // C2H3CHO
  W += c[21] * 55.100000;  // C4H7
  W += c[22] * 56.108000;  // C4H81
  W += c[23] * 69.127000;  // C5H9
  W += c[24] * 70.135000;  // C5H10
  W += c[25] * 84.162000;  // C6H12
  W += c[26] * 98.189000;  // C7H14
  W += c[27] * 112.216000; // C8H16
  W += c[28] * 126.243000; // C9H18
  W += c[29] * 127.251000; // PXC9H19
  W += c[30] * 140.270000; // C10H20
  W += c[31] * 168.324000; // C12H24
  W += c[32] * 201.330000; // C12H25O2
  W += c[33] * 216.321000; // OC12H23OOH
  W += c[34] * 28.014000;  // N2

  for (int id = 0; id < 35; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against divison by zero
  wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real T, amrex::Real cpor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpor, tc);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real T, amrex::Real hort[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEnthalpy(hort, tc);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real T, amrex::Real sor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sor, tc);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real y[], amrex::Real x[])
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 35; i++) {
    YOW += y[i] * imw(i);
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 35; i++) {
    x[i] = y[i] * imw(i) * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real c[])
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 35; i++) {
    c[i] = y[i] * imw(i);
  }
  for (int i = 0; i < 35; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // Now compute conversion

  for (int i = 0; i < 35; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real rho,
  amrex::Real /*T*/,
  const amrex::Real y[],
  amrex::Real c[])
{

  for (int i = 0; i < 35; i++) {
    c[i] = rho * y[i] * imw(i);
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real x[], amrex::Real y[])
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 170.340000;  // NC12H26
  XW += x[1] * 1.008000;    // H
  XW += x[2] * 15.999000;   // O
  XW += x[3] * 17.007000;   // OH
  XW += x[4] * 33.006000;   // HO2
  XW += x[5] * 2.016000;    // H2
  XW += x[6] * 18.015000;   // H2O
  XW += x[7] * 34.014000;   // H2O2
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 15.035000;   // CH3
  XW += x[10] * 16.043000;  // CH4
  XW += x[11] * 30.026000;  // CH2O
  XW += x[12] * 28.010000;  // CO
  XW += x[13] * 44.009000;  // CO2
  XW += x[14] * 26.038000;  // C2H2
  XW += x[15] * 28.054000;  // C2H4
  XW += x[16] * 30.070000;  // C2H6
  XW += x[17] * 43.045000;  // CH2CHO
  XW += x[18] * 41.073000;  // aC3H5
  XW += x[19] * 42.081000;  // C3H6
  XW += x[20] * 56.064000;  // C2H3CHO
  XW += x[21] * 55.100000;  // C4H7
  XW += x[22] * 56.108000;  // C4H81
  XW += x[23] * 69.127000;  // C5H9
  XW += x[24] * 70.135000;  // C5H10
  XW += x[25] * 84.162000;  // C6H12
  XW += x[26] * 98.189000;  // C7H14
  XW += x[27] * 112.216000; // C8H16
  XW += x[28] * 126.243000; // C9H18
  XW += x[29] * 127.251000; // PXC9H19
  XW += x[30] * 140.270000; // C10H20
  XW += x[31] * 168.324000; // C12H24
  XW += x[32] * 201.330000; // C12H25O2
  XW += x[33] * 216.321000; // OC12H23OOH
  XW += x[34] * 28.014000;  // N2
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 170.340000 * XWinv;
  y[1] = x[1] * 1.008000 * XWinv;
  y[2] = x[2] * 15.999000 * XWinv;
  y[3] = x[3] * 17.007000 * XWinv;
  y[4] = x[4] * 33.006000 * XWinv;
  y[5] = x[5] * 2.016000 * XWinv;
  y[6] = x[6] * 18.015000 * XWinv;
  y[7] = x[7] * 34.014000 * XWinv;
  y[8] = x[8] * 31.998000 * XWinv;
  y[9] = x[9] * 15.035000 * XWinv;
  y[10] = x[10] * 16.043000 * XWinv;
  y[11] = x[11] * 30.026000 * XWinv;
  y[12] = x[12] * 28.010000 * XWinv;
  y[13] = x[13] * 44.009000 * XWinv;
  y[14] = x[14] * 26.038000 * XWinv;
  y[15] = x[15] * 28.054000 * XWinv;
  y[16] = x[16] * 30.070000 * XWinv;
  y[17] = x[17] * 43.045000 * XWinv;
  y[18] = x[18] * 41.073000 * XWinv;
  y[19] = x[19] * 42.081000 * XWinv;
  y[20] = x[20] * 56.064000 * XWinv;
  y[21] = x[21] * 55.100000 * XWinv;
  y[22] = x[22] * 56.108000 * XWinv;
  y[23] = x[23] * 69.127000 * XWinv;
  y[24] = x[24] * 70.135000 * XWinv;
  y[25] = x[25] * 84.162000 * XWinv;
  y[26] = x[26] * 98.189000 * XWinv;
  y[27] = x[27] * 112.216000 * XWinv;
  y[28] = x[28] * 126.243000 * XWinv;
  y[29] = x[29] * 127.251000 * XWinv;
  y[30] = x[30] * 140.270000 * XWinv;
  y[31] = x[31] * 168.324000 * XWinv;
  y[32] = x[32] * 201.330000 * XWinv;
  y[33] = x[33] * 216.321000 * XWinv;
  y[34] = x[34] * 28.014000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real PORT = P / (8.31446261815324e+07 * T); // P/RT

  // Compute conversion, see Eq 10
  for (int id = 0; id < 35; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real rho,
  const amrex::Real /*T*/,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 170.340000;  // NC12H26
  XW += x[1] * 1.008000;    // H
  XW += x[2] * 15.999000;   // O
  XW += x[3] * 17.007000;   // OH
  XW += x[4] * 33.006000;   // HO2
  XW += x[5] * 2.016000;    // H2
  XW += x[6] * 18.015000;   // H2O
  XW += x[7] * 34.014000;   // H2O2
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 15.035000;   // CH3
  XW += x[10] * 16.043000;  // CH4
  XW += x[11] * 30.026000;  // CH2O
  XW += x[12] * 28.010000;  // CO
  XW += x[13] * 44.009000;  // CO2
  XW += x[14] * 26.038000;  // C2H2
  XW += x[15] * 28.054000;  // C2H4
  XW += x[16] * 30.070000;  // C2H6
  XW += x[17] * 43.045000;  // CH2CHO
  XW += x[18] * 41.073000;  // aC3H5
  XW += x[19] * 42.081000;  // C3H6
  XW += x[20] * 56.064000;  // C2H3CHO
  XW += x[21] * 55.100000;  // C4H7
  XW += x[22] * 56.108000;  // C4H81
  XW += x[23] * 69.127000;  // C5H9
  XW += x[24] * 70.135000;  // C5H10
  XW += x[25] * 84.162000;  // C6H12
  XW += x[26] * 98.189000;  // C7H14
  XW += x[27] * 112.216000; // C8H16
  XW += x[28] * 126.243000; // C9H18
  XW += x[29] * 127.251000; // PXC9H19
  XW += x[30] * 140.270000; // C10H20
  XW += x[31] * 168.324000; // C12H24
  XW += x[32] * 201.330000; // C12H25O2
  XW += x[33] * 216.321000; // OC12H23OOH
  XW += x[34] * 28.014000;  // N2
  ROW = rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 35; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real c[], amrex::Real x[])
{
  amrex::Real sumC = 0;

  // compute sum of c
  for (int id = 0; id < 35; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (int id = 0; id < 35; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real c[], amrex::Real y[])
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 170.340000;  // NC12H26
  CW += c[1] * 1.008000;    // H
  CW += c[2] * 15.999000;   // O
  CW += c[3] * 17.007000;   // OH
  CW += c[4] * 33.006000;   // HO2
  CW += c[5] * 2.016000;    // H2
  CW += c[6] * 18.015000;   // H2O
  CW += c[7] * 34.014000;   // H2O2
  CW += c[8] * 31.998000;   // O2
  CW += c[9] * 15.035000;   // CH3
  CW += c[10] * 16.043000;  // CH4
  CW += c[11] * 30.026000;  // CH2O
  CW += c[12] * 28.010000;  // CO
  CW += c[13] * 44.009000;  // CO2
  CW += c[14] * 26.038000;  // C2H2
  CW += c[15] * 28.054000;  // C2H4
  CW += c[16] * 30.070000;  // C2H6
  CW += c[17] * 43.045000;  // CH2CHO
  CW += c[18] * 41.073000;  // aC3H5
  CW += c[19] * 42.081000;  // C3H6
  CW += c[20] * 56.064000;  // C2H3CHO
  CW += c[21] * 55.100000;  // C4H7
  CW += c[22] * 56.108000;  // C4H81
  CW += c[23] * 69.127000;  // C5H9
  CW += c[24] * 70.135000;  // C5H10
  CW += c[25] * 84.162000;  // C6H12
  CW += c[26] * 98.189000;  // C7H14
  CW += c[27] * 112.216000; // C8H16
  CW += c[28] * 126.243000; // C9H18
  CW += c[29] * 127.251000; // PXC9H19
  CW += c[30] * 140.270000; // C10H20
  CW += c[31] * 168.324000; // C12H24
  CW += c[32] * 201.330000; // C12H25O2
  CW += c[33] * 216.321000; // OC12H23OOH
  CW += c[34] * 28.014000;  // N2
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 170.340000 * CWinv;
  y[1] = c[1] * 1.008000 * CWinv;
  y[2] = c[2] * 15.999000 * CWinv;
  y[3] = c[3] * 17.007000 * CWinv;
  y[4] = c[4] * 33.006000 * CWinv;
  y[5] = c[5] * 2.016000 * CWinv;
  y[6] = c[6] * 18.015000 * CWinv;
  y[7] = c[7] * 34.014000 * CWinv;
  y[8] = c[8] * 31.998000 * CWinv;
  y[9] = c[9] * 15.035000 * CWinv;
  y[10] = c[10] * 16.043000 * CWinv;
  y[11] = c[11] * 30.026000 * CWinv;
  y[12] = c[12] * 28.010000 * CWinv;
  y[13] = c[13] * 44.009000 * CWinv;
  y[14] = c[14] * 26.038000 * CWinv;
  y[15] = c[15] * 28.054000 * CWinv;
  y[16] = c[16] * 30.070000 * CWinv;
  y[17] = c[17] * 43.045000 * CWinv;
  y[18] = c[18] * 41.073000 * CWinv;
  y[19] = c[19] * 42.081000 * CWinv;
  y[20] = c[20] * 56.064000 * CWinv;
  y[21] = c[21] * 55.100000 * CWinv;
  y[22] = c[22] * 56.108000 * CWinv;
  y[23] = c[23] * 69.127000 * CWinv;
  y[24] = c[24] * 70.135000 * CWinv;
  y[25] = c[25] * 84.162000 * CWinv;
  y[26] = c[26] * 98.189000 * CWinv;
  y[27] = c[27] * 112.216000 * CWinv;
  y[28] = c[28] * 126.243000 * CWinv;
  y[29] = c[29] * 127.251000 * CWinv;
  y[30] = c[30] * 140.270000 * CWinv;
  y[31] = c[31] * 168.324000 * CWinv;
  y[32] = c[32] * 201.330000 * CWinv;
  y[33] = c[33] * 216.321000 * CWinv;
  y[34] = c[34] * 28.014000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real T, amrex::Real cvml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvml, tc);

  // convert to chemkin units
  for (int id = 0; id < 35; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real T, amrex::Real cpml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpml, tc);

  // convert to chemkin units
  for (int id = 0; id < 35; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real T, amrex::Real uml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // convert to chemkin units
  for (int id = 0; id < 35; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real T, amrex::Real hml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // convert to chemkin units
  for (int id = 0; id < 35; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real T, amrex::Real sml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sml, tc);

  // convert to chemkin units
  for (int id = 0; id < 35; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real T, amrex::Real cvms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvms, tc);
  // multiply by R/molecularweight
  cvms[0] *= 4.881098167284983e+05;  // NC12H26
  cvms[1] *= 8.248474819596468e+07;  // H
  cvms[2] *= 5.196863940342046e+06;  // O
  cvms[3] *= 4.888847308845322e+06;  // OH
  cvms[4] *= 2.519076112874398e+06;  // HO2
  cvms[5] *= 4.124237409798234e+07;  // H2
  cvms[6] *= 4.615299815794193e+06;  // H2O
  cvms[7] *= 2.444423654422661e+06;  // H2O2
  cvms[8] *= 2.598431970171023e+06;  // O2
  cvms[9] *= 5.530071578419182e+06;  // CH3
  cvms[10] *= 5.182610869633635e+06; // CH4
  cvms[11] *= 2.769087663409458e+06; // CH2O
  cvms[12] *= 2.968390795484913e+06; // CO
  cvms[13] *= 1.889264154639560e+06; // CO2
  cvms[14] *= 3.193203248388218e+06; // C2H2
  cvms[15] *= 2.963735160103101e+06; // C2H4
  cvms[16] *= 2.765035789209591e+06; // C2H6
  cvms[17] *= 1.931574542491170e+06; // CH2CHO
  cvms[18] *= 2.024313446340233e+06; // aC3H5
  cvms[19] *= 1.975823440068734e+06; // C3H6
  cvms[20] *= 1.483030575441146e+06; // C2H3CHO
  cvms[21] *= 1.508976881697503e+06; // C4H7
  cvms[22] *= 1.481867580051551e+06; // C4H81
  cvms[23] *= 1.202780768462864e+06; // C5H9
  cvms[24] *= 1.185494064041241e+06; // C5H10
  cvms[25] *= 9.879117200343669e+05; // C6H12
  cvms[26] *= 8.467814743151718e+05; // C7H14
  cvms[27] *= 7.409337900257753e+05; // C8H16
  cvms[28] *= 6.586078133562447e+05; // C9H18
  cvms[29] *= 6.533907488470221e+05; // PXC9H19
  cvms[30] *= 5.927470320206203e+05; // C10H20
  cvms[31] *= 4.939558600171835e+05; // C12H24
  cvms[32] *= 4.129768349552099e+05; // C12H25O2
  cvms[33] *= 3.843576267747116e+05; // OC12H23OOH
  cvms[34] *= 2.967966951578939e+06; // N2
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real T, amrex::Real cpms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpms, tc);
  // multiply by R/molecularweight
  cpms[0] *= 4.881098167284983e+05;  // NC12H26
  cpms[1] *= 8.248474819596468e+07;  // H
  cpms[2] *= 5.196863940342046e+06;  // O
  cpms[3] *= 4.888847308845322e+06;  // OH
  cpms[4] *= 2.519076112874398e+06;  // HO2
  cpms[5] *= 4.124237409798234e+07;  // H2
  cpms[6] *= 4.615299815794193e+06;  // H2O
  cpms[7] *= 2.444423654422661e+06;  // H2O2
  cpms[8] *= 2.598431970171023e+06;  // O2
  cpms[9] *= 5.530071578419182e+06;  // CH3
  cpms[10] *= 5.182610869633635e+06; // CH4
  cpms[11] *= 2.769087663409458e+06; // CH2O
  cpms[12] *= 2.968390795484913e+06; // CO
  cpms[13] *= 1.889264154639560e+06; // CO2
  cpms[14] *= 3.193203248388218e+06; // C2H2
  cpms[15] *= 2.963735160103101e+06; // C2H4
  cpms[16] *= 2.765035789209591e+06; // C2H6
  cpms[17] *= 1.931574542491170e+06; // CH2CHO
  cpms[18] *= 2.024313446340233e+06; // aC3H5
  cpms[19] *= 1.975823440068734e+06; // C3H6
  cpms[20] *= 1.483030575441146e+06; // C2H3CHO
  cpms[21] *= 1.508976881697503e+06; // C4H7
  cpms[22] *= 1.481867580051551e+06; // C4H81
  cpms[23] *= 1.202780768462864e+06; // C5H9
  cpms[24] *= 1.185494064041241e+06; // C5H10
  cpms[25] *= 9.879117200343669e+05; // C6H12
  cpms[26] *= 8.467814743151718e+05; // C7H14
  cpms[27] *= 7.409337900257753e+05; // C8H16
  cpms[28] *= 6.586078133562447e+05; // C9H18
  cpms[29] *= 6.533907488470221e+05; // PXC9H19
  cpms[30] *= 5.927470320206203e+05; // C10H20
  cpms[31] *= 4.939558600171835e+05; // C12H24
  cpms[32] *= 4.129768349552099e+05; // C12H25O2
  cpms[33] *= 3.843576267747116e+05; // OC12H23OOH
  cpms[34] *= 2.967966951578939e+06; // N2
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real T, amrex::Real ums[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesInternalEnergy(ums, tc);

  for (int i = 0; i < 35; i++) {
    ums[i] *= RT * imw(i);
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real T, amrex::Real hms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesEnthalpy(hms, tc);

  for (int i = 0; i < 35; i++) {
    hms[i] *= RT * imw(i);
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real T, amrex::Real sms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sms, tc);
  // multiply by R/molecularweight
  sms[0] *= 4.881098167284983e+05;  // NC12H26
  sms[1] *= 8.248474819596468e+07;  // H
  sms[2] *= 5.196863940342046e+06;  // O
  sms[3] *= 4.888847308845322e+06;  // OH
  sms[4] *= 2.519076112874398e+06;  // HO2
  sms[5] *= 4.124237409798234e+07;  // H2
  sms[6] *= 4.615299815794193e+06;  // H2O
  sms[7] *= 2.444423654422661e+06;  // H2O2
  sms[8] *= 2.598431970171023e+06;  // O2
  sms[9] *= 5.530071578419182e+06;  // CH3
  sms[10] *= 5.182610869633635e+06; // CH4
  sms[11] *= 2.769087663409458e+06; // CH2O
  sms[12] *= 2.968390795484913e+06; // CO
  sms[13] *= 1.889264154639560e+06; // CO2
  sms[14] *= 3.193203248388218e+06; // C2H2
  sms[15] *= 2.963735160103101e+06; // C2H4
  sms[16] *= 2.765035789209591e+06; // C2H6
  sms[17] *= 1.931574542491170e+06; // CH2CHO
  sms[18] *= 2.024313446340233e+06; // aC3H5
  sms[19] *= 1.975823440068734e+06; // C3H6
  sms[20] *= 1.483030575441146e+06; // C2H3CHO
  sms[21] *= 1.508976881697503e+06; // C4H7
  sms[22] *= 1.481867580051551e+06; // C4H81
  sms[23] *= 1.202780768462864e+06; // C5H9
  sms[24] *= 1.185494064041241e+06; // C5H10
  sms[25] *= 9.879117200343669e+05; // C6H12
  sms[26] *= 8.467814743151718e+05; // C7H14
  sms[27] *= 7.409337900257753e+05; // C8H16
  sms[28] *= 6.586078133562447e+05; // C9H18
  sms[29] *= 6.533907488470221e+05; // PXC9H19
  sms[30] *= 5.927470320206203e+05; // C10H20
  sms[31] *= 4.939558600171835e+05; // C12H24
  sms[32] *= 4.129768349552099e+05; // C12H25O2
  sms[33] *= 3.843576267747116e+05; // OC12H23OOH
  sms[34] *= 2.967966951578939e+06; // N2
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qss_coeff(
  amrex::Real* k_f,
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* tc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss)
{
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1. / refC;
  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 35; ++i) {
    mixture += sc[i];
  }

  {
    // reaction 3: H + HCO (+M) <=> CH2O (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP = Corr / k_f[0] * 1350000000000 *
                             exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[0] = Corr * k_f[0] * (sc[1]);
    qr[0] = Corr * k_f[0] * exp(-(g_RT[1] - g_RT[11] + g_RT_qss[2])) * (refC) *
            (sc[11]);
  }

  {
    // reaction 4: CH2 + H (+M) <=> CH3 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[1] * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[1] = Corr * k_f[1] * (sc[1]);
    qr[1] = Corr * k_f[1] * exp(-(g_RT[1] - g_RT[9] + g_RT_qss[0])) * (refC) *
            (sc[9]);
  }

  {
    // reaction 5: CH2O + H (+M) <=> CH3O (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[2] * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[2] = Corr * k_f[2] * (sc[1] * sc[11]);
    qr[2] =
      Corr * k_f[2] * exp(-(g_RT[1] + g_RT[11] - g_RT_qss[3])) * (refC) * (1.0);
  }

  {
    // reaction 8: C2H3 (+M) <=> C2H2 + H (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[14] +
                       (3 - 1) * sc[15] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[3] * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[3] = Corr * k_f[3] * (1.0);
    qr[3] = Corr * k_f[3] * exp(-(-g_RT[1] - g_RT[14] + g_RT_qss[4])) *
            (refCinv) * (sc[1] * sc[14]);
  }

  {
    // reaction 9: C2H3 + H (+M) <=> C2H4 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[14] +
                       (3 - 1) * sc[15] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[4] * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[4] = Corr * k_f[4] * (sc[1]);
    qr[4] = Corr * k_f[4] * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[4])) * (refC) *
            (sc[15]);
  }

  {
    // reaction 10: C2H3 + CH3 (+M) <=> C3H6 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[14] +
                       (3 - 1) * sc[15] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[5] * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[5] = Corr * k_f[5] * (sc[9]);
    qr[5] = Corr * k_f[5] * exp(-(g_RT[9] - g_RT[19] + g_RT_qss[4])) * (refC) *
            (sc[19]);
  }

  {
    // reaction 11: C2H4 + H (+M) <=> C2H5 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[6] * 4715000 * exp(0 * tc[0] - 380.059419015673 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.24 * exp(-tc[1] * 0.025) + 0.76 * exp(-tc[1] * 0.000975609756097561) +
      0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[6] = Corr * k_f[6] * (sc[1] * sc[15]);
    qr[6] =
      Corr * k_f[6] * exp(-(g_RT[1] + g_RT[15] - g_RT_qss[5])) * (refC) * (1.0);
  }

  {
    // reaction 12: C2H5 + H (+M) <=> C2H6 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[7] * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[7] = Corr * k_f[7] * (sc[1]);
    qr[7] = Corr * k_f[7] * exp(-(g_RT[1] - g_RT[16] + g_RT_qss[5])) * (refC) *
            (sc[16]);
  }

  {
    // reaction 13: C2H3 + C2H5 (+M) <=> C4H81 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[8] * 1.55e+44 * exp(-11.79 * tc[0] - 4521.1501339225 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.802 * exp(-tc[1] * 0.000439000834101585) +
      0.198 * exp(-tc[1] * 1.66666666666667e-05) + exp(-5723.2 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    // Remove forward reaction
    // qf[8]  = Corr * k_f[8] * (1.0);
    qf[8] = 0.0;
    qr[8] = Corr * k_f[8] * exp(-(-g_RT[22] + g_RT_qss[4] + g_RT_qss[5])) *
            (refC) * (sc[22]);
  }

  {
    // reaction 16: C3H6 + H (+M) <=> nC3H7 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[9] * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[9] = Corr * k_f[9] * (sc[1] * sc[19]);
    qr[9] =
      Corr * k_f[9] * exp(-(g_RT[1] + g_RT[19] - g_RT_qss[6])) * (refC) * (1.0);
  }

  {
    // reaction 18: C4H81 + H (+M) <=> pC4H9 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[10] * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[10] = Corr * k_f[10] * (sc[1] * sc[22]);
    qr[10] = Corr * k_f[10] * exp(-(g_RT[1] + g_RT[22] - g_RT_qss[7])) *
             (refC) * (1.0);
  }

  {
    // reaction 19: C5H10 + H (+M) <=> PXC5H11 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[11] * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[11] = Corr * k_f[11] * (sc[1] * sc[24]);
    qr[11] = Corr * k_f[11] * exp(-(g_RT[1] + g_RT[24] - g_RT_qss[8])) *
             (refC) * (1.0);
  }

  {
    // reaction 20: C6H12 + H (+M) <=> PXC6H13 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[12] * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[12] = Corr * k_f[12] * (sc[1] * sc[25]);
    qr[12] = Corr * k_f[12] * exp(-(g_RT[1] + g_RT[25] - g_RT_qss[9])) *
             (refC) * (1.0);
  }

  {
    // reaction 21: C7H14 + H (+M) <=> PXC7H15 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[13] * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[13] = Corr * k_f[13] * (sc[1] * sc[26]);
    qr[13] = Corr * k_f[13] * exp(-(g_RT[1] + g_RT[26] - g_RT_qss[10])) *
             (refC) * (1.0);
  }

  {
    // reaction 22: C8H16 + H (+M) <=> PXC8H17 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[14] * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[14] = Corr * k_f[14] * (sc[1] * sc[27]);
    qr[14] = Corr * k_f[14] * exp(-(g_RT[1] + g_RT[27] - g_RT_qss[11])) *
             (refC) * (1.0);
  }

  {
    // reaction 24: C10H20 + H (+M) <=> PXC10H21 (+M)
    amrex::Real Corr = mixture + sc[5] + (6 - 1) * sc[6] + sc[10] +
                       (1.5 - 1) * sc[12] + sc[13] + (3 - 1) * sc[16];
    const amrex::Real redP =
      Corr / k_f[15] * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[15] = Corr * k_f[15] * (sc[1] * sc[30]);
    qr[15] = Corr * k_f[15] * exp(-(g_RT[1] + g_RT[30] - g_RT_qss[12])) *
             (refC) * (1.0);
  }

  {
    // reaction 33: HCO + M <=> CO + H + M
    const amrex::Real Corr = mixture + sc[5] + (0 - 1) * sc[6] +
                             (1.75 - 1) * sc[12] + (3.6 - 1) * sc[13];
    qf[16] = Corr * k_f[16] * (1.0);
    qr[16] = Corr * k_f[16] * exp(-(-g_RT[1] - g_RT[12] + g_RT_qss[2])) *
             (refCinv) * (sc[1] * sc[12]);
  }

  {
    // reaction 34: HCO + H2O <=> CO + H + H2O
    qf[17] = k_f[17] * (sc[6]);
    qr[17] = k_f[17] * exp(-(-g_RT[1] - g_RT[12] + g_RT_qss[2])) * (refCinv) *
             (sc[1] * sc[6] * sc[12]);
  }

  {
    // reaction 55: H + HCO <=> CO + H2
    qf[18] = k_f[18] * (sc[1]);
    qr[18] = k_f[18] * exp(-(g_RT[1] - g_RT[5] - g_RT[12] + g_RT_qss[2])) *
             (sc[5] * sc[12]);
  }

  {
    // reaction 56: HCO + O <=> CO + OH
    qf[19] = k_f[19] * (sc[2]);
    qr[19] = k_f[19] * exp(-(g_RT[2] - g_RT[3] - g_RT[12] + g_RT_qss[2])) *
             (sc[3] * sc[12]);
  }

  {
    // reaction 57: HCO + O <=> CO2 + H
    qf[20] = k_f[20] * (sc[2]);
    qr[20] = k_f[20] * exp(-(-g_RT[1] + g_RT[2] - g_RT[13] + g_RT_qss[2])) *
             (sc[1] * sc[13]);
  }

  {
    // reaction 58: HCO + OH <=> CO + H2O
    qf[21] = k_f[21] * (sc[3]);
    qr[21] = k_f[21] * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[2])) *
             (sc[6] * sc[12]);
  }

  {
    // reaction 59: HCO + O2 <=> CO + HO2
    qf[22] = k_f[22] * (sc[8]);
    qr[22] = k_f[22] * exp(-(-g_RT[4] + g_RT[8] - g_RT[12] + g_RT_qss[2])) *
             (sc[4] * sc[12]);
  }

  {
    // reaction 60: CH2 + O <=> H + HCO
    qf[23] = k_f[23] * (sc[2]);
    qr[23] = k_f[23] * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[0] - g_RT_qss[2])) *
             (sc[1]);
  }

  {
    // reaction 61: CH2 + OH <=> CH2O + H
    qf[24] = k_f[24] * (sc[3]);
    qr[24] = k_f[24] * exp(-(-g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[0])) *
             (sc[1] * sc[11]);
  }

  {
    // reaction 62: CH2 + H2 <=> CH3 + H
    qf[25] = k_f[25] * (sc[5]);
    qr[25] = k_f[25] * exp(-(-g_RT[1] + g_RT[5] - g_RT[9] + g_RT_qss[0])) *
             (sc[1] * sc[9]);
  }

  {
    // reaction 63: CH2 + O2 <=> HCO + OH
    qf[26] = k_f[26] * (sc[8]);
    qr[26] = k_f[26] * exp(-(-g_RT[3] + g_RT[8] + g_RT_qss[0] - g_RT_qss[2])) *
             (sc[3]);
  }

  {
    // reaction 64: CH2 + O2 <=> CO2 + 2 H
    qf[27] = k_f[27] * (sc[8]);
    qr[27] = k_f[27] *
             exp(-(-2.000000 * g_RT[1] + g_RT[8] - g_RT[13] + g_RT_qss[0])) *
             (refCinv) * (sc[1] * sc[1] * sc[13]);
  }

  {
    // reaction 65: CH2 + HO2 <=> CH2O + OH
    qf[28] = k_f[28] * (sc[4]);
    qr[28] = k_f[28] * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] + g_RT_qss[0])) *
             (sc[3] * sc[11]);
  }

  {
    // reaction 66: 2 CH2 <=> C2H2 + H2
    // Remove forward reaction
    // qf[29] = k_f[29] * (1.0);
    qf[29] = 0.0;
    qr[29] = k_f[29] * exp(-(-g_RT[5] - g_RT[14] + 2.000000 * g_RT_qss[0])) *
             (sc[5] * sc[14]);
  }

  {
    // reaction 67: CH2* + N2 <=> CH2 + N2
    qf[30] = k_f[30] * (sc[34]);
    qr[30] = k_f[30] * exp(-(g_RT[34] - g_RT[34] - g_RT_qss[0] + g_RT_qss[1])) *
             (sc[34]);
  }

  {
    // reaction 68: CH2* + O <=> CO + H2
    qf[31] = k_f[31] * (sc[2]);
    qr[31] = k_f[31] * exp(-(g_RT[2] - g_RT[5] - g_RT[12] + g_RT_qss[1])) *
             (sc[5] * sc[12]);
  }

  {
    // reaction 69: CH2* + O <=> H + HCO
    qf[32] = k_f[32] * (sc[2]);
    qr[32] = k_f[32] * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[2])) *
             (sc[1]);
  }

  {
    // reaction 70: CH2* + OH <=> CH2O + H
    qf[33] = k_f[33] * (sc[3]);
    qr[33] = k_f[33] * exp(-(-g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
             (sc[1] * sc[11]);
  }

  {
    // reaction 71: CH2* + H2 <=> CH3 + H
    qf[34] = k_f[34] * (sc[5]);
    qr[34] = k_f[34] * exp(-(-g_RT[1] + g_RT[5] - g_RT[9] + g_RT_qss[1])) *
             (sc[1] * sc[9]);
  }

  {
    // reaction 72: CH2* + O2 <=> CO + H + OH
    qf[35] = k_f[35] * (sc[8]);
    qr[35] = k_f[35] *
             exp(-(-g_RT[1] - g_RT[3] + g_RT[8] - g_RT[12] + g_RT_qss[1])) *
             (refCinv) * (sc[1] * sc[3] * sc[12]);
  }

  {
    // reaction 73: CH2* + O2 <=> CO + H2O
    qf[36] = k_f[36] * (sc[8]);
    qr[36] = k_f[36] * exp(-(-g_RT[6] + g_RT[8] - g_RT[12] + g_RT_qss[1])) *
             (sc[6] * sc[12]);
  }

  {
    // reaction 74: CH2* + H2O <=> CH2 + H2O
    qf[37] = k_f[37] * (sc[6]);
    qr[37] =
      k_f[37] * exp(-(g_RT[6] - g_RT[6] - g_RT_qss[0] + g_RT_qss[1])) * (sc[6]);
  }

  {
    // reaction 75: CH2* + CO <=> CH2 + CO
    qf[38] = k_f[38] * (sc[12]);
    qr[38] = k_f[38] * exp(-(g_RT[12] - g_RT[12] - g_RT_qss[0] + g_RT_qss[1])) *
             (sc[12]);
  }

  {
    // reaction 76: CH2* + CO2 <=> CH2 + CO2
    qf[39] = k_f[39] * (sc[13]);
    qr[39] = k_f[39] * exp(-(g_RT[13] - g_RT[13] - g_RT_qss[0] + g_RT_qss[1])) *
             (sc[13]);
  }

  {
    // reaction 77: CH2* + CO2 <=> CH2O + CO
    qf[40] = k_f[40] * (sc[13]);
    qr[40] = k_f[40] * exp(-(-g_RT[11] - g_RT[12] + g_RT[13] + g_RT_qss[1])) *
             (sc[11] * sc[12]);
  }

  {
    // reaction 78: CH2O + H <=> H2 + HCO
    qf[41] = k_f[41] * (sc[1] * sc[11]);
    qr[41] =
      k_f[41] * exp(-(g_RT[1] - g_RT[5] + g_RT[11] - g_RT_qss[2])) * (sc[5]);
  }

  {
    // reaction 79: CH2O + O <=> HCO + OH
    qf[42] = k_f[42] * (sc[2] * sc[11]);
    qr[42] =
      k_f[42] * exp(-(g_RT[2] - g_RT[3] + g_RT[11] - g_RT_qss[2])) * (sc[3]);
  }

  {
    // reaction 80: CH2O + OH <=> H2O + HCO
    qf[43] = k_f[43] * (sc[3] * sc[11]);
    qr[43] =
      k_f[43] * exp(-(g_RT[3] - g_RT[6] + g_RT[11] - g_RT_qss[2])) * (sc[6]);
  }

  {
    // reaction 81: CH2O + O2 <=> HCO + HO2
    qf[44] = k_f[44] * (sc[8] * sc[11]);
    qr[44] =
      k_f[44] * exp(-(-g_RT[4] + g_RT[8] + g_RT[11] - g_RT_qss[2])) * (sc[4]);
  }

  {
    // reaction 82: CH2O + HO2 <=> H2O2 + HCO
    qf[45] = k_f[45] * (sc[4] * sc[11]);
    qr[45] =
      k_f[45] * exp(-(g_RT[4] - g_RT[7] + g_RT[11] - g_RT_qss[2])) * (sc[7]);
  }

  {
    // reaction 84: CH3 + OH <=> CH2 + H2O
    qf[46] = k_f[46] * (sc[3] * sc[9]);
    qr[46] =
      k_f[46] * exp(-(g_RT[3] - g_RT[6] + g_RT[9] - g_RT_qss[0])) * (sc[6]);
  }

  {
    // reaction 85: CH3 + OH <=> CH2* + H2O
    qf[47] = k_f[47] * (sc[3] * sc[9]);
    qr[47] =
      k_f[47] * exp(-(g_RT[3] - g_RT[6] + g_RT[9] - g_RT_qss[1])) * (sc[6]);
  }

  {
    // reaction 86: CH3 + O2 <=> CH3O + O
    qf[48] = k_f[48] * (sc[8] * sc[9]);
    qr[48] =
      k_f[48] * exp(-(-g_RT[2] + g_RT[8] + g_RT[9] - g_RT_qss[3])) * (sc[2]);
  }

  {
    // reaction 89: CH3 + HO2 <=> CH3O + OH
    qf[49] = k_f[49] * (sc[4] * sc[9]);
    qr[49] =
      k_f[49] * exp(-(-g_RT[3] + g_RT[4] + g_RT[9] - g_RT_qss[3])) * (sc[3]);
  }

  {
    // reaction 91: CH3 + HCO <=> CH4 + CO
    qf[50] = k_f[50] * (sc[9]);
    qr[50] = k_f[50] * exp(-(g_RT[9] - g_RT[10] - g_RT[12] + g_RT_qss[2])) *
             (sc[10] * sc[12]);
  }

  {
    // reaction 92: CH2O + CH3 <=> CH4 + HCO
    qf[51] = k_f[51] * (sc[9] * sc[11]);
    qr[51] =
      k_f[51] * exp(-(g_RT[9] - g_RT[10] + g_RT[11] - g_RT_qss[2])) * (sc[10]);
  }

  {
    // reaction 93: CH2 + CH3 <=> C2H4 + H
    qf[52] = k_f[52] * (sc[9]);
    qr[52] = k_f[52] * exp(-(-g_RT[1] + g_RT[9] - g_RT[15] + g_RT_qss[0])) *
             (sc[1] * sc[15]);
  }

  {
    // reaction 94: CH2* + CH3 <=> C2H4 + H
    qf[53] = k_f[53] * (sc[9]);
    qr[53] = k_f[53] * exp(-(-g_RT[1] + g_RT[9] - g_RT[15] + g_RT_qss[1])) *
             (sc[1] * sc[15]);
  }

  {
    // reaction 95: 2 CH3 <=> C2H5 + H
    qf[54] = k_f[54] * (sc[9] * sc[9]);
    qr[54] =
      k_f[54] * exp(-(-g_RT[1] + 2.000000 * g_RT[9] - g_RT_qss[5])) * (sc[1]);
  }

  {
    // reaction 96: CH3O + H <=> CH2O + H2
    qf[55] = k_f[55] * (sc[1]);
    qr[55] = k_f[55] * exp(-(g_RT[1] - g_RT[5] - g_RT[11] + g_RT_qss[3])) *
             (sc[5] * sc[11]);
  }

  {
    // reaction 97: CH3O + H <=> CH3 + OH
    qf[56] = k_f[56] * (sc[1]);
    qr[56] = k_f[56] * exp(-(g_RT[1] - g_RT[3] - g_RT[9] + g_RT_qss[3])) *
             (sc[3] * sc[9]);
  }

  {
    // reaction 98: CH3O + H <=> CH2* + H2O
    qf[57] = k_f[57] * (sc[1]);
    qr[57] =
      k_f[57] * exp(-(g_RT[1] - g_RT[6] - g_RT_qss[1] + g_RT_qss[3])) * (sc[6]);
  }

  {
    // reaction 99: CH3O + O <=> CH2O + OH
    qf[58] = k_f[58] * (sc[2]);
    qr[58] = k_f[58] * exp(-(g_RT[2] - g_RT[3] - g_RT[11] + g_RT_qss[3])) *
             (sc[3] * sc[11]);
  }

  {
    // reaction 100: CH3O + OH <=> CH2O + H2O
    qf[59] = k_f[59] * (sc[3]);
    qr[59] = k_f[59] * exp(-(g_RT[3] - g_RT[6] - g_RT[11] + g_RT_qss[3])) *
             (sc[6] * sc[11]);
  }

  {
    // reaction 101: CH3O + O2 <=> CH2O + HO2
    qf[60] = k_f[60] * (sc[8]);
    qr[60] = k_f[60] * exp(-(-g_RT[4] + g_RT[8] - g_RT[11] + g_RT_qss[3])) *
             (sc[4] * sc[11]);
  }

  {
    // reaction 105: CH2 + CH4 <=> 2 CH3
    qf[61] = k_f[61] * (sc[10]);
    qr[61] = k_f[61] * exp(-(-2.000000 * g_RT[9] + g_RT[10] + g_RT_qss[0])) *
             (sc[9] * sc[9]);
  }

  {
    // reaction 106: CH2* + CH4 <=> 2 CH3
    qf[62] = k_f[62] * (sc[10]);
    qr[62] = k_f[62] * exp(-(-2.000000 * g_RT[9] + g_RT[10] + g_RT_qss[1])) *
             (sc[9] * sc[9]);
  }

  {
    // reaction 107: C2H2 + O <=> CH2 + CO
    qf[63] = k_f[63] * (sc[2] * sc[14]);
    qr[63] =
      k_f[63] * exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[0])) * (sc[12]);
  }

  {
    // reaction 109: C2H2 + HCO <=> C2H3 + CO
    qf[64] = k_f[64] * (sc[14]);
    qr[64] = k_f[64] *
             exp(-(-g_RT[12] + g_RT[14] + g_RT_qss[2] - g_RT_qss[4])) *
             (sc[12]);
  }

  {
    // reaction 111: C2H3 + H <=> C2H2 + H2
    qf[65] = k_f[65] * (sc[1]);
    qr[65] = k_f[65] * exp(-(g_RT[1] - g_RT[5] - g_RT[14] + g_RT_qss[4])) *
             (sc[5] * sc[14]);
  }

  {
    // reaction 112: C2H3 + O <=> CH3 + CO
    qf[66] = k_f[66] * (sc[2]);
    qr[66] = k_f[66] * exp(-(g_RT[2] - g_RT[9] - g_RT[12] + g_RT_qss[4])) *
             (sc[9] * sc[12]);
  }

  {
    // reaction 113: C2H3 + OH <=> C2H2 + H2O
    qf[67] = k_f[67] * (sc[3]);
    qr[67] = k_f[67] * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[4])) *
             (sc[6] * sc[14]);
  }

  {
    // reaction 114: C2H3 + O2 <=> C2H2 + HO2
    qf[68] = k_f[68] * (sc[8]);
    qr[68] = k_f[68] * exp(-(-g_RT[4] + g_RT[8] - g_RT[14] + g_RT_qss[4])) *
             (sc[4] * sc[14]);
  }

  {
    // reaction 115: C2H3 + O2 <=> CH2CHO + O
    qf[69] = k_f[69] * (sc[8]);
    qr[69] = k_f[69] * exp(-(-g_RT[2] + g_RT[8] - g_RT[17] + g_RT_qss[4])) *
             (sc[2] * sc[17]);
  }

  {
    // reaction 116: C2H3 + O2 <=> CH2O + HCO
    qf[70] = k_f[70] * (sc[8]);
    qr[70] = k_f[70] * exp(-(g_RT[8] - g_RT[11] - g_RT_qss[2] + g_RT_qss[4])) *
             (sc[11]);
  }

  {
    // reaction 117: C2H3 + HO2 <=> CH2CHO + OH
    qf[71] = k_f[71] * (sc[4]);
    qr[71] = k_f[71] * exp(-(-g_RT[3] + g_RT[4] - g_RT[17] + g_RT_qss[4])) *
             (sc[3] * sc[17]);
  }

  {
    // reaction 118: C2H3 + H2O2 <=> C2H4 + HO2
    qf[72] = k_f[72] * (sc[7]);
    qr[72] = k_f[72] * exp(-(-g_RT[4] + g_RT[7] - g_RT[15] + g_RT_qss[4])) *
             (sc[4] * sc[15]);
  }

  {
    // reaction 119: C2H3 + HCO <=> C2H4 + CO
    // Remove forward reaction
    // qf[73] = k_f[73] * (1.0);
    qf[73] = 0.0;
    qr[73] = k_f[73] *
             exp(-(-g_RT[12] - g_RT[15] + g_RT_qss[2] + g_RT_qss[4])) *
             (sc[12] * sc[15]);
  }

  {
    // reaction 120: C2H3 + HCO <=> C2H3CHO
    // Remove forward reaction
    // qf[74] = k_f[74] * (1.0);
    qf[74] = 0.0;
    qr[74] = k_f[74] * exp(-(-g_RT[20] + g_RT_qss[2] + g_RT_qss[4])) * (refC) *
             (sc[20]);
  }

  {
    // reaction 121: C2H3 + CH3 <=> C2H2 + CH4
    qf[75] = k_f[75] * (sc[9]);
    qr[75] = k_f[75] * exp(-(g_RT[9] - g_RT[10] - g_RT[14] + g_RT_qss[4])) *
             (sc[10] * sc[14]);
  }

  {
    // reaction 122: C2H3 + CH3 <=> H + aC3H5
    qf[76] = k_f[76] * (sc[9]);
    qr[76] = k_f[76] * exp(-(-g_RT[1] + g_RT[9] - g_RT[18] + g_RT_qss[4])) *
             (sc[1] * sc[18]);
  }

  {
    // reaction 123: 2 C2H3 <=> C2H2 + C2H4
    // Remove forward reaction
    // qf[77] = k_f[77] * (1.0);
    qf[77] = 0.0;
    qr[77] = k_f[77] * exp(-(-g_RT[14] - g_RT[15] + 2.000000 * g_RT_qss[4])) *
             (sc[14] * sc[15]);
  }

  {
    // reaction 125: CH2CHO + H <=> CH3 + HCO
    qf[78] = k_f[78] * (sc[1] * sc[17]);
    qr[78] =
      k_f[78] * exp(-(g_RT[1] - g_RT[9] + g_RT[17] - g_RT_qss[2])) * (sc[9]);
  }

  {
    // reaction 127: C2H4 + H <=> C2H3 + H2
    qf[79] = k_f[79] * (sc[1] * sc[15]);
    qr[79] =
      k_f[79] * exp(-(g_RT[1] - g_RT[5] + g_RT[15] - g_RT_qss[4])) * (sc[5]);
  }

  {
    // reaction 128: C2H4 + O <=> C2H3 + OH
    qf[80] = k_f[80] * (sc[2] * sc[15]);
    qr[80] =
      k_f[80] * exp(-(g_RT[2] - g_RT[3] + g_RT[15] - g_RT_qss[4])) * (sc[3]);
  }

  {
    // reaction 129: C2H4 + O <=> CH3 + HCO
    qf[81] = k_f[81] * (sc[2] * sc[15]);
    qr[81] =
      k_f[81] * exp(-(g_RT[2] - g_RT[9] + g_RT[15] - g_RT_qss[2])) * (sc[9]);
  }

  {
    // reaction 130: C2H4 + O <=> CH2 + CH2O
    qf[82] = k_f[82] * (sc[2] * sc[15]);
    qr[82] =
      k_f[82] * exp(-(g_RT[2] - g_RT[11] + g_RT[15] - g_RT_qss[0])) * (sc[11]);
  }

  {
    // reaction 131: C2H4 + OH <=> C2H3 + H2O
    qf[83] = k_f[83] * (sc[3] * sc[15]);
    qr[83] =
      k_f[83] * exp(-(g_RT[3] - g_RT[6] + g_RT[15] - g_RT_qss[4])) * (sc[6]);
  }

  {
    // reaction 132: C2H4 + HCO <=> C2H5 + CO
    qf[84] = k_f[84] * (sc[15]);
    qr[84] = k_f[84] *
             exp(-(-g_RT[12] + g_RT[15] + g_RT_qss[2] - g_RT_qss[5])) *
             (sc[12]);
  }

  {
    // reaction 133: C2H4 + CH2 <=> H + aC3H5
    qf[85] = k_f[85] * (sc[15]);
    qr[85] = k_f[85] * exp(-(-g_RT[1] + g_RT[15] - g_RT[18] + g_RT_qss[0])) *
             (sc[1] * sc[18]);
  }

  {
    // reaction 134: C2H4 + CH2* <=> H + aC3H5
    qf[86] = k_f[86] * (sc[15]);
    qr[86] = k_f[86] * exp(-(-g_RT[1] + g_RT[15] - g_RT[18] + g_RT_qss[1])) *
             (sc[1] * sc[18]);
  }

  {
    // reaction 135: C2H4 + CH3 <=> C2H3 + CH4
    qf[87] = k_f[87] * (sc[9] * sc[15]);
    qr[87] =
      k_f[87] * exp(-(g_RT[9] - g_RT[10] + g_RT[15] - g_RT_qss[4])) * (sc[10]);
  }

  {
    // reaction 136: nC3H7 <=> C2H4 + CH3
    qf[88] = k_f[88] * (1.0);
    qr[88] = k_f[88] * exp(-(-g_RT[9] - g_RT[15] + g_RT_qss[6])) * (refCinv) *
             (sc[9] * sc[15]);
  }

  {
    // reaction 137: C2H4 + O2 <=> C2H3 + HO2
    qf[89] = k_f[89] * (sc[8] * sc[15]);
    qr[89] =
      k_f[89] * exp(-(-g_RT[4] + g_RT[8] + g_RT[15] - g_RT_qss[4])) * (sc[4]);
  }

  {
    // reaction 138: C2H3 + C2H4 <=> C4H7
    qf[90] = k_f[90] * (sc[15]);
    qr[90] =
      k_f[90] * exp(-(g_RT[15] - g_RT[21] + g_RT_qss[4])) * (refC) * (sc[21]);
  }

  {
    // reaction 139: C2H5 + H <=> C2H4 + H2
    qf[91] = k_f[91] * (sc[1]);
    qr[91] = k_f[91] * exp(-(g_RT[1] - g_RT[5] - g_RT[15] + g_RT_qss[5])) *
             (sc[5] * sc[15]);
  }

  {
    // reaction 140: C2H5 + O <=> CH2O + CH3
    qf[92] = k_f[92] * (sc[2]);
    qr[92] = k_f[92] * exp(-(g_RT[2] - g_RT[9] - g_RT[11] + g_RT_qss[5])) *
             (sc[9] * sc[11]);
  }

  {
    // reaction 141: C2H5 + O2 <=> C2H4 + HO2
    qf[93] = k_f[93] * (sc[8]);
    qr[93] = k_f[93] * exp(-(-g_RT[4] + g_RT[8] - g_RT[15] + g_RT_qss[5])) *
             (sc[4] * sc[15]);
  }

  {
    // reaction 142: C2H5 + HO2 <=> C2H6 + O2
    qf[94] = k_f[94] * (sc[4]);
    qr[94] = k_f[94] * exp(-(g_RT[4] - g_RT[8] - g_RT[16] + g_RT_qss[5])) *
             (sc[8] * sc[16]);
  }

  {
    // reaction 143: C2H5 + HO2 <=> C2H4 + H2O2
    qf[95] = k_f[95] * (sc[4]);
    qr[95] = k_f[95] * exp(-(g_RT[4] - g_RT[7] - g_RT[15] + g_RT_qss[5])) *
             (sc[7] * sc[15]);
  }

  {
    // reaction 144: C2H5 + HO2 <=> CH2O + CH3 + OH
    qf[96] = k_f[96] * (sc[4]);
    qr[96] = k_f[96] *
             exp(-(-g_RT[3] + g_RT[4] - g_RT[9] - g_RT[11] + g_RT_qss[5])) *
             (refCinv) * (sc[3] * sc[9] * sc[11]);
  }

  {
    // reaction 145: C2H5 + H2O2 <=> C2H6 + HO2
    qf[97] = k_f[97] * (sc[7]);
    qr[97] = k_f[97] * exp(-(-g_RT[4] + g_RT[7] - g_RT[16] + g_RT_qss[5])) *
             (sc[4] * sc[16]);
  }

  {
    // reaction 146: C2H3 + C2H5 <=> CH3 + aC3H5
    // Remove forward reaction
    // qf[98] = k_f[98] * (1.0);
    qf[98] = 0.0;
    qr[98] = k_f[98] * exp(-(-g_RT[9] - g_RT[18] + g_RT_qss[4] + g_RT_qss[5])) *
             (sc[9] * sc[18]);
  }

  {
    // reaction 147: C2H6 + H <=> C2H5 + H2
    qf[99] = k_f[99] * (sc[1] * sc[16]);
    qr[99] =
      k_f[99] * exp(-(g_RT[1] - g_RT[5] + g_RT[16] - g_RT_qss[5])) * (sc[5]);
  }

  {
    // reaction 148: C2H6 + O <=> C2H5 + OH
    qf[100] = k_f[100] * (sc[2] * sc[16]);
    qr[100] =
      k_f[100] * exp(-(g_RT[2] - g_RT[3] + g_RT[16] - g_RT_qss[5])) * (sc[3]);
  }

  {
    // reaction 149: C2H6 + OH <=> C2H5 + H2O
    qf[101] = k_f[101] * (sc[3] * sc[16]);
    qr[101] =
      k_f[101] * exp(-(g_RT[3] - g_RT[6] + g_RT[16] - g_RT_qss[5])) * (sc[6]);
  }

  {
    // reaction 150: C2H6 + CH2* <=> C2H5 + CH3
    qf[102] = k_f[102] * (sc[16]);
    qr[102] = k_f[102] *
              exp(-(-g_RT[9] + g_RT[16] + g_RT_qss[1] - g_RT_qss[5])) * (sc[9]);
  }

  {
    // reaction 151: C2H6 + CH3 <=> C2H5 + CH4
    qf[103] = k_f[103] * (sc[9] * sc[16]);
    qr[103] =
      k_f[103] * exp(-(g_RT[9] - g_RT[10] + g_RT[16] - g_RT_qss[5])) * (sc[10]);
  }

  {
    // reaction 156: HO2 + aC3H5 <=> C2H3 + CH2O + OH
    qf[104] = k_f[104] * (sc[4] * sc[18]);
    qr[104] = k_f[104] *
              exp(-(-g_RT[3] + g_RT[4] - g_RT[11] + g_RT[18] - g_RT_qss[4])) *
              (refCinv) * (sc[3] * sc[11]);
  }

  {
    // reaction 157: HCO + aC3H5 <=> C3H6 + CO
    qf[105] = k_f[105] * (sc[18]);
    qr[105] = k_f[105] * exp(-(-g_RT[12] + g_RT[18] - g_RT[19] + g_RT_qss[2])) *
              (sc[12] * sc[19]);
  }

  {
    // reaction 161: C3H6 + O => C2H5 + HCO
    qf[106] = k_f[106] * (sc[2] * sc[19]);
    qr[106] = 0.0;
  }

  {
    // reaction 166: C2H3CHO + H <=> C2H4 + HCO
    qf[107] = k_f[107] * (sc[1] * sc[20]);
    qr[107] =
      k_f[107] * exp(-(g_RT[1] - g_RT[15] + g_RT[20] - g_RT_qss[2])) * (sc[15]);
  }

  {
    // reaction 167: C2H3CHO + O <=> C2H3 + CO + OH
    qf[108] = k_f[108] * (sc[2] * sc[20]);
    qr[108] = k_f[108] *
              exp(-(g_RT[2] - g_RT[3] - g_RT[12] + g_RT[20] - g_RT_qss[4])) *
              (refCinv) * (sc[3] * sc[12]);
  }

  {
    // reaction 168: C2H3CHO + OH <=> C2H3 + CO + H2O
    qf[109] = k_f[109] * (sc[3] * sc[20]);
    qr[109] = k_f[109] *
              exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT[20] - g_RT_qss[4])) *
              (refCinv) * (sc[6] * sc[12]);
  }

  {
    // reaction 169: H + nC3H7 <=> C2H5 + CH3
    qf[110] = k_f[110] * (sc[1]);
    qr[110] = k_f[110] * exp(-(g_RT[1] - g_RT[9] - g_RT_qss[5] + g_RT_qss[6])) *
              (sc[9]);
  }

  {
    // reaction 170: H + nC3H7 <=> C3H6 + H2
    qf[111] = k_f[111] * (sc[1]);
    qr[111] = k_f[111] * exp(-(g_RT[1] - g_RT[5] - g_RT[19] + g_RT_qss[6])) *
              (sc[5] * sc[19]);
  }

  {
    // reaction 171: O + nC3H7 <=> C2H5 + CH2O
    qf[112] = k_f[112] * (sc[2]);
    qr[112] = k_f[112] *
              exp(-(g_RT[2] - g_RT[11] - g_RT_qss[5] + g_RT_qss[6])) * (sc[11]);
  }

  {
    // reaction 172: OH + nC3H7 <=> C3H6 + H2O
    qf[113] = k_f[113] * (sc[3]);
    qr[113] = k_f[113] * exp(-(g_RT[3] - g_RT[6] - g_RT[19] + g_RT_qss[6])) *
              (sc[6] * sc[19]);
  }

  {
    // reaction 173: O2 + nC3H7 <=> C3H6 + HO2
    qf[114] = k_f[114] * (sc[8]);
    qr[114] = k_f[114] * exp(-(-g_RT[4] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
              (sc[4] * sc[19]);
  }

  {
    // reaction 174: HO2 + nC3H7 <=> C2H5 + CH2O + OH
    qf[115] = k_f[115] * (sc[4]);
    qr[115] =
      k_f[115] *
      exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT_qss[5] + g_RT_qss[6])) *
      (refCinv) * (sc[3] * sc[11]);
  }

  {
    // reaction 175: CH3 + nC3H7 <=> C3H6 + CH4
    qf[116] = k_f[116] * (sc[9]);
    qr[116] = k_f[116] * exp(-(g_RT[9] - g_RT[10] - g_RT[19] + g_RT_qss[6])) *
              (sc[10] * sc[19]);
  }

  {
    // reaction 178: C4H7 + HCO <=> C4H81 + CO
    qf[117] = k_f[117] * (sc[21]);
    qr[117] = k_f[117] * exp(-(-g_RT[12] + g_RT[21] - g_RT[22] + g_RT_qss[2])) *
              (sc[12] * sc[22]);
  }

  {
    // reaction 179: C4H81 + H <=> C2H4 + C2H5
    qf[118] = k_f[118] * (sc[1] * sc[22]);
    qr[118] =
      k_f[118] * exp(-(g_RT[1] - g_RT[15] + g_RT[22] - g_RT_qss[5])) * (sc[15]);
  }

  {
    // reaction 182: C4H81 + O => HCO + nC3H7
    qf[119] = k_f[119] * (sc[2] * sc[22]);
    qr[119] = 0.0;
  }

  {
    // reaction 189: H + pC4H9 => 2 C2H5
    qf[120] = k_f[120] * (sc[1]);
    qr[120] = 0.0;
  }

  {
    // reaction 190: H + pC4H9 <=> C4H81 + H2
    qf[121] = k_f[121] * (sc[1]);
    qr[121] = k_f[121] * exp(-(g_RT[1] - g_RT[5] - g_RT[22] + g_RT_qss[7])) *
              (sc[5] * sc[22]);
  }

  {
    // reaction 191: O + pC4H9 <=> CH2O + nC3H7
    qf[122] = k_f[122] * (sc[2]);
    qr[122] = k_f[122] *
              exp(-(g_RT[2] - g_RT[11] - g_RT_qss[6] + g_RT_qss[7])) * (sc[11]);
  }

  {
    // reaction 192: OH + pC4H9 <=> C4H81 + H2O
    qf[123] = k_f[123] * (sc[3]);
    qr[123] = k_f[123] * exp(-(g_RT[3] - g_RT[6] - g_RT[22] + g_RT_qss[7])) *
              (sc[6] * sc[22]);
  }

  {
    // reaction 193: O2 + pC4H9 <=> C4H81 + HO2
    qf[124] = k_f[124] * (sc[8]);
    qr[124] = k_f[124] * exp(-(-g_RT[4] + g_RT[8] - g_RT[22] + g_RT_qss[7])) *
              (sc[4] * sc[22]);
  }

  {
    // reaction 194: HO2 + pC4H9 <=> CH2O + OH + nC3H7
    qf[125] = k_f[125] * (sc[4]);
    qr[125] =
      k_f[125] *
      exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT_qss[6] + g_RT_qss[7])) *
      (refCinv) * (sc[3] * sc[11]);
  }

  {
    // reaction 195: CH3 + pC4H9 <=> C4H81 + CH4
    qf[126] = k_f[126] * (sc[9]);
    qr[126] = k_f[126] * exp(-(g_RT[9] - g_RT[10] - g_RT[22] + g_RT_qss[7])) *
              (sc[10] * sc[22]);
  }

  {
    // reaction 197: C5H9 => C2H3 + C3H6
    qf[127] = k_f[127] * (sc[23]);
    qr[127] = 0.0;
  }

  {
    // reaction 198: C5H10 + H <=> C2H4 + nC3H7
    qf[128] = k_f[128] * (sc[1] * sc[24]);
    qr[128] =
      k_f[128] * exp(-(g_RT[1] - g_RT[15] + g_RT[24] - g_RT_qss[6])) * (sc[15]);
  }

  {
    // reaction 199: C5H10 + H <=> C2H5 + C3H6
    qf[129] = k_f[129] * (sc[1] * sc[24]);
    qr[129] =
      k_f[129] * exp(-(g_RT[1] - g_RT[19] + g_RT[24] - g_RT_qss[5])) * (sc[19]);
  }

  {
    // reaction 200: C2H4 + nC3H7 <=> PXC5H11
    qf[130] = k_f[130] * (sc[15]);
    qr[130] =
      k_f[130] * exp(-(g_RT[15] + g_RT_qss[6] - g_RT_qss[8])) * (refC) * (1.0);
  }

  {
    // reaction 201: C6H12 + H <=> C2H4 + pC4H9
    qf[131] = k_f[131] * (sc[1] * sc[25]);
    qr[131] =
      k_f[131] * exp(-(g_RT[1] - g_RT[15] + g_RT[25] - g_RT_qss[7])) * (sc[15]);
  }

  {
    // reaction 202: C6H12 + H <=> C3H6 + nC3H7
    qf[132] = k_f[132] * (sc[1] * sc[25]);
    qr[132] =
      k_f[132] * exp(-(g_RT[1] - g_RT[19] + g_RT[25] - g_RT_qss[6])) * (sc[19]);
  }

  {
    // reaction 203: C2H4 + pC4H9 <=> PXC6H13
    qf[133] = k_f[133] * (sc[15]);
    qr[133] =
      k_f[133] * exp(-(g_RT[15] + g_RT_qss[7] - g_RT_qss[9])) * (refC) * (1.0);
  }

  {
    // reaction 204: C7H14 + H <=> C2H4 + PXC5H11
    qf[134] = k_f[134] * (sc[1] * sc[26]);
    qr[134] =
      k_f[134] * exp(-(g_RT[1] - g_RT[15] + g_RT[26] - g_RT_qss[8])) * (sc[15]);
  }

  {
    // reaction 205: C7H14 + H <=> C3H6 + pC4H9
    qf[135] = k_f[135] * (sc[1] * sc[26]);
    qr[135] =
      k_f[135] * exp(-(g_RT[1] - g_RT[19] + g_RT[26] - g_RT_qss[7])) * (sc[19]);
  }

  {
    // reaction 206: C2H4 + PXC5H11 <=> PXC7H15
    qf[136] = k_f[136] * (sc[15]);
    qr[136] =
      k_f[136] * exp(-(g_RT[15] + g_RT_qss[8] - g_RT_qss[10])) * (refC) * (1.0);
  }

  {
    // reaction 207: C8H16 + H <=> C2H4 + PXC6H13
    qf[137] = k_f[137] * (sc[1] * sc[27]);
    qr[137] =
      k_f[137] * exp(-(g_RT[1] - g_RT[15] + g_RT[27] - g_RT_qss[9])) * (sc[15]);
  }

  {
    // reaction 208: C8H16 + H <=> C3H6 + PXC5H11
    qf[138] = k_f[138] * (sc[1] * sc[27]);
    qr[138] =
      k_f[138] * exp(-(g_RT[1] - g_RT[19] + g_RT[27] - g_RT_qss[8])) * (sc[19]);
  }

  {
    // reaction 209: C2H4 + PXC6H13 <=> PXC8H17
    qf[139] = k_f[139] * (sc[15]);
    qr[139] =
      k_f[139] * exp(-(g_RT[15] + g_RT_qss[9] - g_RT_qss[11])) * (refC) * (1.0);
  }

  {
    // reaction 210: C9H18 + H <=> C2H4 + PXC7H15
    qf[140] = k_f[140] * (sc[1] * sc[28]);
    qr[140] = k_f[140] * exp(-(g_RT[1] - g_RT[15] + g_RT[28] - g_RT_qss[10])) *
              (sc[15]);
  }

  {
    // reaction 211: C9H18 + H <=> C3H6 + PXC6H13
    qf[141] = k_f[141] * (sc[1] * sc[28]);
    qr[141] =
      k_f[141] * exp(-(g_RT[1] - g_RT[19] + g_RT[28] - g_RT_qss[9])) * (sc[19]);
  }

  {
    // reaction 212: C2H4 + PXC7H15 <=> PXC9H19
    qf[142] = k_f[142] * (sc[15]);
    qr[142] =
      k_f[142] * exp(-(g_RT[15] - g_RT[29] + g_RT_qss[10])) * (refC) * (sc[29]);
  }

  {
    // reaction 213: C10H20 + H <=> C2H4 + PXC8H17
    qf[143] = k_f[143] * (sc[1] * sc[30]);
    qr[143] = k_f[143] * exp(-(g_RT[1] - g_RT[15] + g_RT[30] - g_RT_qss[11])) *
              (sc[15]);
  }

  {
    // reaction 214: C10H20 + H <=> C3H6 + PXC7H15
    qf[144] = k_f[144] * (sc[1] * sc[30]);
    qr[144] = k_f[144] * exp(-(g_RT[1] - g_RT[19] + g_RT[30] - g_RT_qss[10])) *
              (sc[19]);
  }

  {
    // reaction 215: C2H4 + PXC8H17 <=> PXC10H21
    qf[145] = k_f[145] * (sc[15]);
    qr[145] = k_f[145] * exp(-(g_RT[15] + g_RT_qss[11] - g_RT_qss[12])) *
              (refC) * (1.0);
  }

  {
    // reaction 216: C12H24 <=> C5H9 + PXC7H15
    qf[146] = k_f[146] * (sc[31]);
    qr[146] = k_f[146] * exp(-(-g_RT[23] + g_RT[31] - g_RT_qss[10])) *
              (refCinv) * (sc[23]);
  }

  {
    // reaction 217: C2H4 + PXC10H21 <=> PXC12H25
    qf[147] = k_f[147] * (sc[15]);
    qr[147] = k_f[147] * exp(-(g_RT[15] + g_RT_qss[12] - g_RT_qss[13])) *
              (refC) * (1.0);
  }

  {
    // reaction 218: PXC12H25 <=> S3XC12H25
    qf[148] = k_f[148] * (1.0);
    qr[148] = k_f[148] * exp(-(g_RT_qss[13] - g_RT_qss[15])) * (1.0);
  }

  {
    // reaction 219: C3H6 + PXC9H19 <=> SXC12H25
    qf[149] = k_f[149] * (sc[19] * sc[29]);
    qr[149] =
      k_f[149] * exp(-(g_RT[19] + g_RT[29] - g_RT_qss[14])) * (refC) * (1.0);
  }

  {
    // reaction 220: C4H81 + PXC8H17 <=> SXC12H25
    qf[150] = k_f[150] * (sc[22]);
    qr[150] = k_f[150] * exp(-(g_RT[22] + g_RT_qss[11] - g_RT_qss[14])) *
              (refC) * (1.0);
  }

  {
    // reaction 221: C5H10 + PXC7H15 <=> S3XC12H25
    qf[151] = k_f[151] * (sc[24]);
    qr[151] = k_f[151] * exp(-(g_RT[24] + g_RT_qss[10] - g_RT_qss[15])) *
              (refC) * (1.0);
  }

  {
    // reaction 222: C10H20 + C2H5 <=> S3XC12H25
    qf[152] = k_f[152] * (sc[30]);
    qr[152] =
      k_f[152] * exp(-(g_RT[30] + g_RT_qss[5] - g_RT_qss[15])) * (refC) * (1.0);
  }

  {
    // reaction 223: C6H12 + PXC6H13 <=> S3XC12H25
    qf[153] = k_f[153] * (sc[25]);
    qr[153] =
      k_f[153] * exp(-(g_RT[25] + g_RT_qss[9] - g_RT_qss[15])) * (refC) * (1.0);
  }

  {
    // reaction 224: C9H18 + nC3H7 <=> S3XC12H25
    qf[154] = k_f[154] * (sc[28]);
    qr[154] =
      k_f[154] * exp(-(g_RT[28] + g_RT_qss[6] - g_RT_qss[15])) * (refC) * (1.0);
  }

  {
    // reaction 225: C7H14 + PXC5H11 <=> S3XC12H25
    qf[155] = k_f[155] * (sc[26]);
    qr[155] =
      k_f[155] * exp(-(g_RT[26] + g_RT_qss[8] - g_RT_qss[15])) * (refC) * (1.0);
  }

  {
    // reaction 226: C8H16 + pC4H9 <=> S3XC12H25
    qf[156] = k_f[156] * (sc[27]);
    qr[156] =
      k_f[156] * exp(-(g_RT[27] + g_RT_qss[7] - g_RT_qss[15])) * (refC) * (1.0);
  }

  {
    // reaction 227: C2H5 + PXC10H21 <=> NC12H26
    // Remove forward reaction
    // qf[157] = k_f[157] * (1.0);
    qf[157] = 0.0;
    qr[157] = k_f[157] * exp(-(-g_RT[0] + g_RT_qss[5] + g_RT_qss[12])) *
              (refC) * (sc[0]);
  }

  {
    // reaction 228: PXC9H19 + nC3H7 <=> NC12H26
    qf[158] = k_f[158] * (sc[29]);
    qr[158] =
      k_f[158] * exp(-(-g_RT[0] + g_RT[29] + g_RT_qss[6])) * (refC) * (sc[0]);
  }

  {
    // reaction 229: PXC8H17 + pC4H9 <=> NC12H26
    // Remove forward reaction
    // qf[159] = k_f[159] * (1.0);
    qf[159] = 0.0;
    qr[159] = k_f[159] * exp(-(-g_RT[0] + g_RT_qss[7] + g_RT_qss[11])) *
              (refC) * (sc[0]);
  }

  {
    // reaction 230: PXC5H11 + PXC7H15 <=> NC12H26
    // Remove forward reaction
    // qf[160] = k_f[160] * (1.0);
    qf[160] = 0.0;
    qr[160] = k_f[160] * exp(-(-g_RT[0] + g_RT_qss[8] + g_RT_qss[10])) *
              (refC) * (sc[0]);
  }

  {
    // reaction 231: 2 PXC6H13 <=> NC12H26
    // Remove forward reaction
    // qf[161] = k_f[161] * (1.0);
    qf[161] = 0.0;
    qr[161] =
      k_f[161] * exp(-(-g_RT[0] + 2.000000 * g_RT_qss[9])) * (refC) * (sc[0]);
  }

  {
    // reaction 232: H + NC12H26 <=> H2 + PXC12H25
    qf[162] = k_f[162] * (sc[0] * sc[1]);
    qr[162] =
      k_f[162] * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[13])) * (sc[5]);
  }

  {
    // reaction 233: H + NC12H26 <=> H2 + SXC12H25
    qf[163] = k_f[163] * (sc[0] * sc[1]);
    qr[163] =
      k_f[163] * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[14])) * (sc[5]);
  }

  {
    // reaction 234: H + NC12H26 <=> H2 + S3XC12H25
    qf[164] = k_f[164] * (sc[0] * sc[1]);
    qr[164] =
      k_f[164] * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[15])) * (sc[5]);
  }

  {
    // reaction 235: NC12H26 + O <=> OH + PXC12H25
    qf[165] = k_f[165] * (sc[0] * sc[2]);
    qr[165] =
      k_f[165] * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[13])) * (sc[3]);
  }

  {
    // reaction 236: NC12H26 + O <=> OH + SXC12H25
    qf[166] = k_f[166] * (sc[0] * sc[2]);
    qr[166] =
      k_f[166] * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[14])) * (sc[3]);
  }

  {
    // reaction 237: NC12H26 + O <=> OH + S3XC12H25
    qf[167] = k_f[167] * (sc[0] * sc[2]);
    qr[167] =
      k_f[167] * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[15])) * (sc[3]);
  }

  {
    // reaction 238: NC12H26 + OH <=> H2O + PXC12H25
    qf[168] = k_f[168] * (sc[0] * sc[3]);
    qr[168] =
      k_f[168] * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[13])) * (sc[6]);
  }

  {
    // reaction 239: NC12H26 + OH <=> H2O + SXC12H25
    qf[169] = k_f[169] * (sc[0] * sc[3]);
    qr[169] =
      k_f[169] * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[14])) * (sc[6]);
  }

  {
    // reaction 240: NC12H26 + OH <=> H2O + S3XC12H25
    qf[170] = k_f[170] * (sc[0] * sc[3]);
    qr[170] =
      k_f[170] * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[15])) * (sc[6]);
  }

  {
    // reaction 241: NC12H26 + O2 <=> HO2 + PXC12H25
    qf[171] = k_f[171] * (sc[0] * sc[8]);
    qr[171] =
      k_f[171] * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[13])) * (sc[4]);
  }

  {
    // reaction 242: NC12H26 + O2 <=> HO2 + SXC12H25
    qf[172] = k_f[172] * (sc[0] * sc[8]);
    qr[172] =
      k_f[172] * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[14])) * (sc[4]);
  }

  {
    // reaction 243: NC12H26 + O2 <=> HO2 + S3XC12H25
    qf[173] = k_f[173] * (sc[0] * sc[8]);
    qr[173] =
      k_f[173] * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[15])) * (sc[4]);
  }

  {
    // reaction 244: HO2 + NC12H26 <=> H2O2 + PXC12H25
    qf[174] = k_f[174] * (sc[0] * sc[4]);
    qr[174] =
      k_f[174] * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[13])) * (sc[7]);
  }

  {
    // reaction 245: HO2 + NC12H26 <=> H2O2 + SXC12H25
    qf[175] = k_f[175] * (sc[0] * sc[4]);
    qr[175] =
      k_f[175] * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[14])) * (sc[7]);
  }

  {
    // reaction 246: HO2 + NC12H26 <=> H2O2 + S3XC12H25
    qf[176] = k_f[176] * (sc[0] * sc[4]);
    qr[176] =
      k_f[176] * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[15])) * (sc[7]);
  }

  {
    // reaction 247: CH3 + NC12H26 <=> CH4 + PXC12H25
    qf[177] = k_f[177] * (sc[0] * sc[9]);
    qr[177] =
      k_f[177] * exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[13])) * (sc[10]);
  }

  {
    // reaction 248: CH3 + NC12H26 <=> CH4 + SXC12H25
    qf[178] = k_f[178] * (sc[0] * sc[9]);
    qr[178] =
      k_f[178] * exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[14])) * (sc[10]);
  }

  {
    // reaction 249: CH3 + NC12H26 <=> CH4 + S3XC12H25
    qf[179] = k_f[179] * (sc[0] * sc[9]);
    qr[179] =
      k_f[179] * exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[15])) * (sc[10]);
  }

  {
    // reaction 250: O2 + PXC12H25 => C12H25O2
    qf[180] = k_f[180] * (sc[8]);
    qr[180] = 0.0;
  }

  {
    // reaction 251: C12H25O2 => O2 + PXC12H25
    qf[181] = k_f[181] * (sc[32]);
    qr[181] = 0.0;
  }

  {
    // reaction 252: O2 + SXC12H25 => C12H25O2
    qf[182] = k_f[182] * (sc[8]);
    qr[182] = 0.0;
  }

  {
    // reaction 253: C12H25O2 => O2 + SXC12H25
    qf[183] = k_f[183] * (sc[32]);
    qr[183] = 0.0;
  }

  {
    // reaction 254: O2 + S3XC12H25 => C12H25O2
    qf[184] = k_f[184] * (sc[8]);
    qr[184] = 0.0;
  }

  {
    // reaction 255: C12H25O2 => O2 + S3XC12H25
    qf[185] = k_f[185] * (sc[32]);
    qr[185] = 0.0;
  }

  {
    // reaction 256: C12H25O2 => C12OOH
    qf[186] = k_f[186] * (sc[32]);
    qr[186] = 0.0;
  }

  {
    // reaction 257: C12OOH => C12H25O2
    qf[187] = k_f[187] * (1.0);
    qr[187] = 0.0;
  }

  {
    // reaction 258: O2 + PXC12H25 => C12H24 + HO2
    qf[188] = k_f[188] * (sc[8]);
    qr[188] = 0.0;
  }

  {
    // reaction 259: C12H24 + HO2 => O2 + PXC12H25
    qf[189] = k_f[189] * (sc[4] * sc[31]);
    qr[189] = 0.0;
  }

  {
    // reaction 260: O2 + SXC12H25 => C12H24 + HO2
    qf[190] = k_f[190] * (sc[8]);
    qr[190] = 0.0;
  }

  {
    // reaction 261: C12H24 + HO2 => O2 + SXC12H25
    qf[191] = k_f[191] * (sc[4] * sc[31]);
    qr[191] = 0.0;
  }

  {
    // reaction 262: O2 + S3XC12H25 => C12H24 + HO2
    qf[192] = k_f[192] * (sc[8]);
    qr[192] = 0.0;
  }

  {
    // reaction 263: C12H24 + HO2 => O2 + S3XC12H25
    qf[193] = k_f[193] * (sc[4] * sc[31]);
    qr[193] = 0.0;
  }

  {
    // reaction 264: C12OOH + O2 => O2C12H24OOH
    qf[194] = k_f[194] * (sc[8]);
    qr[194] = 0.0;
  }

  {
    // reaction 265: O2C12H24OOH => C12OOH + O2
    qf[195] = k_f[195] * (1.0);
    qr[195] = 0.0;
  }

  {
    // reaction 266: O2C12H24OOH <=> OC12H23OOH + OH
    qf[196] = k_f[196] * (1.0);
    qr[196] = k_f[196] * exp(-(-g_RT[3] - g_RT[33] + g_RT_qss[17])) *
              (refCinv) * (sc[3] * sc[33]);
  }

  {
    // reaction 267: OC12H23OOH => 3 C2H4 + C2H5 + 2 CH2CHO + OH
    qf[197] = k_f[197] * (sc[33]);
    qr[197] = 0.0;
  }

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_k_f_qss(const amrex::Real* tc, amrex::Real invT, amrex::Real* k_f)
{
  // reaction 3: H + HCO (+M) <=> CH2O (+M)
  k_f[0] = 1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
  // reaction 4: CH2 + H (+M) <=> CH3 (+M)
  k_f[1] = 25000000000 * exp((-0.8) * tc[0]);
  // reaction 5: CH2O + H (+M) <=> CH3O (+M)
  k_f[2] = 540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
  // reaction 8: C2H3 (+M) <=> C2H2 + H (+M)
  k_f[3] = 38600000 * exp((1.62) * tc[0] - (18643.2716780664) * invT);
  // reaction 9: C2H3 + H (+M) <=> C2H4 (+M)
  k_f[4] = 6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
  // reaction 10: C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f[5] = 25000000;
  // reaction 11: C2H4 + H (+M) <=> C2H5 (+M)
  k_f[6] = 3975 * exp((1.28) * tc[0] - (649.466525387545) * invT);
  // reaction 12: C2H5 + H (+M) <=> C2H6 (+M)
  k_f[7] = 521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
  // reaction 13: C2H3 + C2H5 (+M) <=> C4H81 (+M)
  k_f[8] = 15000000;
  // reaction 16: C3H6 + H (+M) <=> nC3H7 (+M)
  k_f[9] = 13300000 * exp(-(1640.83858218945) * invT);
  // reaction 18: C4H81 + H (+M) <=> pC4H9 (+M)
  k_f[10] = 13300000 * exp(-(1640.83858218945) * invT);
  // reaction 19: C5H10 + H (+M) <=> PXC5H11 (+M)
  k_f[11] = 13300000 * exp(-(1640.83858218945) * invT);
  // reaction 20: C6H12 + H (+M) <=> PXC6H13 (+M)
  k_f[12] = 13300000 * exp(-(1640.83858218945) * invT);
  // reaction 21: C7H14 + H (+M) <=> PXC7H15 (+M)
  k_f[13] = 13300000 * exp(-(1640.83858218945) * invT);
  // reaction 22: C8H16 + H (+M) <=> PXC8H17 (+M)
  k_f[14] = 13300000 * exp(-(1640.83858218945) * invT);
  // reaction 24: C10H20 + H (+M) <=> PXC10H21 (+M)
  k_f[15] = 13300000 * exp(-(1640.83858218945) * invT);
  // reaction 33: HCO + M <=> CO + H + M
  k_f[16] = 187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  // reaction 34: HCO + H2O <=> CO + H + H2O
  k_f[17] = 2244000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  // reaction 55: H + HCO <=> CO + H2
  k_f[18] = 120000000;
  // reaction 56: HCO + O <=> CO + OH
  k_f[19] = 30000000;
  // reaction 57: HCO + O <=> CO2 + H
  k_f[20] = 30000000;
  // reaction 58: HCO + OH <=> CO + H2O
  k_f[21] = 30200000;
  // reaction 59: HCO + O2 <=> CO + HO2
  k_f[22] = 12040 * exp((0.807) * tc[0] - (-365.838516040031) * invT);
  // reaction 60: CH2 + O <=> H + HCO
  k_f[23] = 80000000;
  // reaction 61: CH2 + OH <=> CH2O + H
  k_f[24] = 20000000;
  // reaction 62: CH2 + H2 <=> CH3 + H
  k_f[25] = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
  // reaction 63: CH2 + O2 <=> HCO + OH
  k_f[26] = 10600000 * exp(-(754.82499870708) * invT);
  // reaction 64: CH2 + O2 <=> CO2 + 2 H
  k_f[27] = 2640000 * exp(-(754.82499870708) * invT);
  // reaction 65: CH2 + HO2 <=> CH2O + OH
  k_f[28] = 20000000;
  // reaction 66: 2 CH2 <=> C2H2 + H2
  k_f[29] = 32000000;
  // reaction 67: CH2* + N2 <=> CH2 + N2
  k_f[30] = 15000000 * exp(-(301.929999482832) * invT);
  // reaction 68: CH2* + O <=> CO + H2
  k_f[31] = 15000000;
  // reaction 69: CH2* + O <=> H + HCO
  k_f[32] = 15000000;
  // reaction 70: CH2* + OH <=> CH2O + H
  k_f[33] = 30000000;
  // reaction 71: CH2* + H2 <=> CH3 + H
  k_f[34] = 70000000;
  // reaction 72: CH2* + O2 <=> CO + H + OH
  k_f[35] = 28000000;
  // reaction 73: CH2* + O2 <=> CO + H2O
  k_f[36] = 12000000;
  // reaction 74: CH2* + H2O <=> CH2 + H2O
  k_f[37] = 30000000;
  // reaction 75: CH2* + CO <=> CH2 + CO
  k_f[38] = 9000000;
  // reaction 76: CH2* + CO2 <=> CH2 + CO2
  k_f[39] = 7000000;
  // reaction 77: CH2* + CO2 <=> CH2O + CO
  k_f[40] = 14000000;
  // reaction 78: CH2O + H <=> H2 + HCO
  k_f[41] = 23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
  // reaction 79: CH2O + O <=> HCO + OH
  k_f[42] = 39000000 * exp(-(1781.38699694871) * invT);
  // reaction 80: CH2O + OH <=> H2O + HCO
  k_f[43] = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  // reaction 81: CH2O + O2 <=> HCO + HO2
  k_f[44] = 100000000 * exp(-(20128.6666321888) * invT);
  // reaction 82: CH2O + HO2 <=> H2O2 + HCO
  k_f[45] = 1000000 * exp(-(4025.73332643776) * invT);
  // reaction 84: CH3 + OH <=> CH2 + H2O
  k_f[46] = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
  // reaction 85: CH3 + OH <=> CH2* + H2O
  k_f[47] = 25010000;
  // reaction 86: CH3 + O2 <=> CH3O + O
  k_f[48] = 30830000 * exp(-(14492.6399751759) * invT);
  // reaction 89: CH3 + HO2 <=> CH3O + OH
  k_f[49] = 13400000;
  // reaction 91: CH3 + HCO <=> CH4 + CO
  k_f[50] = 8480000;
  // reaction 92: CH2O + CH3 <=> CH4 + HCO
  k_f[51] = 0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
  // reaction 93: CH2 + CH3 <=> C2H4 + H
  k_f[52] = 40000000;
  // reaction 94: CH2* + CH3 <=> C2H4 + H
  k_f[53] = 12000000 * exp(-(-286.83349950869) * invT);
  // reaction 95: 2 CH3 <=> C2H5 + H
  k_f[54] = 4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
  // reaction 96: CH3O + H <=> CH2O + H2
  k_f[55] = 20000000;
  // reaction 97: CH3O + H <=> CH3 + OH
  k_f[56] = 32000000;
  // reaction 98: CH3O + H <=> CH2* + H2O
  k_f[57] = 16000000;
  // reaction 99: CH3O + O <=> CH2O + OH
  k_f[58] = 10000000;
  // reaction 100: CH3O + OH <=> CH2O + H2O
  k_f[59] = 5000000;
  // reaction 101: CH3O + O2 <=> CH2O + HO2
  k_f[60] = 4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
  // reaction 105: CH2 + CH4 <=> 2 CH3
  k_f[61] = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
  // reaction 106: CH2* + CH4 <=> 2 CH3
  k_f[62] = 16000000 * exp(-(-286.83349950869) * invT);
  // reaction 107: C2H2 + O <=> CH2 + CO
  k_f[63] = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
  // reaction 109: C2H2 + HCO <=> C2H3 + CO
  k_f[64] = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
  // reaction 111: C2H3 + H <=> C2H2 + H2
  k_f[65] = 90000000;
  // reaction 112: C2H3 + O <=> CH3 + CO
  k_f[66] = 48000000;
  // reaction 113: C2H3 + OH <=> C2H2 + H2O
  k_f[67] = 30110000;
  // reaction 114: C2H3 + O2 <=> C2H2 + HO2
  k_f[68] = 1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
  // reaction 115: C2H3 + O2 <=> CH2CHO + O
  k_f[69] = 300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
  // reaction 116: C2H3 + O2 <=> CH2O + HCO
  k_f[70] = 46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
  // reaction 117: C2H3 + HO2 <=> CH2CHO + OH
  k_f[71] = 10000000;
  // reaction 118: C2H3 + H2O2 <=> C2H4 + HO2
  k_f[72] = 12100 * exp(-(-299.917132819613) * invT);
  // reaction 119: C2H3 + HCO <=> C2H4 + CO
  k_f[73] = 90330000;
  // reaction 120: C2H3 + HCO <=> C2H3CHO
  k_f[74] = 18000000;
  // reaction 121: C2H3 + CH3 <=> C2H2 + CH4
  k_f[75] = 392000;
  // reaction 122: C2H3 + CH3 <=> H + aC3H5
  k_f[76] = 1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
  // reaction 123: 2 C2H3 <=> C2H2 + C2H4
  k_f[77] = 960000;
  // reaction 125: CH2CHO + H <=> CH3 + HCO
  k_f[78] = 90000000;
  // reaction 127: C2H4 + H <=> C2H3 + H2
  k_f[79] = 50.7 * exp((1.9) * tc[0] - (6516.65582217112) * invT);
  // reaction 128: C2H4 + O <=> C2H3 + OH
  k_f[80] = 15.1 * exp((1.9) * tc[0] - (1882.03033010965) * invT);
  // reaction 129: C2H4 + O <=> CH3 + HCO
  k_f[81] = 19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  // reaction 130: C2H4 + O <=> CH2 + CH2O
  k_f[82] = 0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  // reaction 131: C2H4 + OH <=> C2H3 + H2O
  k_f[83] = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
  // reaction 132: C2H4 + HCO <=> C2H5 + CO
  k_f[84] = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
  // reaction 133: C2H4 + CH2 <=> H + aC3H5
  k_f[85] = 20000000 * exp(-(3019.29999482832) * invT);
  // reaction 134: C2H4 + CH2* <=> H + aC3H5
  k_f[86] = 50000000;
  // reaction 135: C2H4 + CH3 <=> C2H3 + CH4
  k_f[87] = 0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
  // reaction 136: nC3H7 <=> C2H4 + CH3
  k_f[88] = 96000000000000 * exp(-(15611.2604302599) * invT);
  // reaction 137: C2H4 + O2 <=> C2H3 + HO2
  k_f[89] = 42200000 * exp(-(30595.573280927) * invT);
  // reaction 138: C2H3 + C2H4 <=> C4H7
  k_f[90] = 7.93e+32 * exp((-8.47) * tc[0] - (7155.74098774311) * invT);
  // reaction 139: C2H5 + H <=> C2H4 + H2
  k_f[91] = 2000000;
  // reaction 140: C2H5 + O <=> CH2O + CH3
  k_f[92] = 16040000;
  // reaction 141: C2H5 + O2 <=> C2H4 + HO2
  k_f[93] = 20000;
  // reaction 142: C2H5 + HO2 <=> C2H6 + O2
  k_f[94] = 300000;
  // reaction 143: C2H5 + HO2 <=> C2H4 + H2O2
  k_f[95] = 300000;
  // reaction 144: C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f[96] = 24000000;
  // reaction 145: C2H5 + H2O2 <=> C2H6 + HO2
  k_f[97] = 8700 * exp(-(490.133032493797) * invT);
  // reaction 146: C2H3 + C2H5 <=> CH3 + aC3H5
  k_f[98] = 3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
  // reaction 147: C2H6 + H <=> C2H5 + H2
  k_f[99] = 115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
  // reaction 148: C2H6 + O <=> C2H5 + OH
  k_f[100] = 89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
  // reaction 149: C2H6 + OH <=> C2H5 + H2O
  k_f[101] = 3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
  // reaction 150: C2H6 + CH2* <=> C2H5 + CH3
  k_f[102] = 40000000 * exp(-(-276.769166192596) * invT);
  // reaction 151: C2H6 + CH3 <=> C2H5 + CH4
  k_f[103] = 6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
  // reaction 156: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f[104] = 6600000;
  // reaction 157: HCO + aC3H5 <=> C3H6 + CO
  k_f[105] = 60000000;
  // reaction 161: C3H6 + O => C2H5 + HCO
  k_f[106] = 35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
  // reaction 166: C2H3CHO + H <=> C2H4 + HCO
  k_f[107] = 108000 * exp((0.454) * tc[0] - (2928.72099498347) * invT);
  // reaction 167: C2H3CHO + O <=> C2H3 + CO + OH
  k_f[108] = 30000000 * exp(-(1781.38699694871) * invT);
  // reaction 168: C2H3CHO + OH <=> C2H3 + CO + H2O
  k_f[109] = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  // reaction 169: H + nC3H7 <=> C2H5 + CH3
  k_f[110] = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  // reaction 170: H + nC3H7 <=> C3H6 + H2
  k_f[111] = 1800000;
  // reaction 171: O + nC3H7 <=> C2H5 + CH2O
  k_f[112] = 96000000;
  // reaction 172: OH + nC3H7 <=> C3H6 + H2O
  k_f[113] = 24000000;
  // reaction 173: O2 + nC3H7 <=> C3H6 + HO2
  k_f[114] = 90000;
  // reaction 174: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f[115] = 24000000;
  // reaction 175: CH3 + nC3H7 <=> C3H6 + CH4
  k_f[116] = 11000000;
  // reaction 178: C4H7 + HCO <=> C4H81 + CO
  k_f[117] = 60000000;
  // reaction 179: C4H81 + H <=> C2H4 + C2H5
  k_f[118] = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 182: C4H81 + O => HCO + nC3H7
  k_f[119] = 330 * exp((1.45) * tc[0] - (-202.293099653497) * invT);
  // reaction 189: H + pC4H9 => 2 C2H5
  k_f[120] = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  // reaction 190: H + pC4H9 <=> C4H81 + H2
  k_f[121] = 1800000;
  // reaction 191: O + pC4H9 <=> CH2O + nC3H7
  k_f[122] = 96000000;
  // reaction 192: OH + pC4H9 <=> C4H81 + H2O
  k_f[123] = 24000000;
  // reaction 193: O2 + pC4H9 <=> C4H81 + HO2
  k_f[124] = 270000;
  // reaction 194: HO2 + pC4H9 <=> CH2O + OH + nC3H7
  k_f[125] = 24000000;
  // reaction 195: CH3 + pC4H9 <=> C4H81 + CH4
  k_f[126] = 11000000;
  // reaction 197: C5H9 => C2H3 + C3H6
  k_f[127] = 25000000000000 * exp(-(15106.1214767918) * invT);
  // reaction 198: C5H10 + H <=> C2H4 + nC3H7
  k_f[128] = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 199: C5H10 + H <=> C2H5 + C3H6
  k_f[129] = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 200: C2H4 + nC3H7 <=> PXC5H11
  k_f[130] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 201: C6H12 + H <=> C2H4 + pC4H9
  k_f[131] = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 202: C6H12 + H <=> C3H6 + nC3H7
  k_f[132] = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 203: C2H4 + pC4H9 <=> PXC6H13
  k_f[133] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 204: C7H14 + H <=> C2H4 + PXC5H11
  k_f[134] = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 205: C7H14 + H <=> C3H6 + pC4H9
  k_f[135] = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 206: C2H4 + PXC5H11 <=> PXC7H15
  k_f[136] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 207: C8H16 + H <=> C2H4 + PXC6H13
  k_f[137] = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 208: C8H16 + H <=> C3H6 + PXC5H11
  k_f[138] = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 209: C2H4 + PXC6H13 <=> PXC8H17
  k_f[139] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 210: C9H18 + H <=> C2H4 + PXC7H15
  k_f[140] = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 211: C9H18 + H <=> C3H6 + PXC6H13
  k_f[141] = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 212: C2H4 + PXC7H15 <=> PXC9H19
  k_f[142] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 213: C10H20 + H <=> C2H4 + PXC8H17
  k_f[143] = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 214: C10H20 + H <=> C3H6 + PXC7H15
  k_f[144] = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  // reaction 215: C2H4 + PXC8H17 <=> PXC10H21
  k_f[145] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 216: C12H24 <=> C5H9 + PXC7H15
  k_f[146] = 3.5e+16 * exp(-(35696.6303005228) * invT);
  // reaction 217: C2H4 + PXC10H21 <=> PXC12H25
  k_f[147] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 218: PXC12H25 <=> S3XC12H25
  k_f[148] = 3670000000000 * exp((-0.6) * tc[0] - (7246.31998758796) * invT);
  // reaction 219: C3H6 + PXC9H19 <=> SXC12H25
  k_f[149] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 220: C4H81 + PXC8H17 <=> SXC12H25
  k_f[150] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 221: C5H10 + PXC7H15 <=> S3XC12H25
  k_f[151] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 222: C10H20 + C2H5 <=> S3XC12H25
  k_f[152] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 223: C6H12 + PXC6H13 <=> S3XC12H25
  k_f[153] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 224: C9H18 + nC3H7 <=> S3XC12H25
  k_f[154] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 225: C7H14 + PXC5H11 <=> S3XC12H25
  k_f[155] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 226: C8H16 + pC4H9 <=> S3XC12H25
  k_f[156] = 300000 * exp(-(3673.48166037445) * invT);
  // reaction 227: C2H5 + PXC10H21 <=> NC12H26
  k_f[157] = 188000000 * exp((-0.5) * tc[0]);
  // reaction 228: PXC9H19 + nC3H7 <=> NC12H26
  k_f[158] = 188000000 * exp((-0.5) * tc[0]);
  // reaction 229: PXC8H17 + pC4H9 <=> NC12H26
  k_f[159] = 188000000 * exp((-0.5) * tc[0]);
  // reaction 230: PXC5H11 + PXC7H15 <=> NC12H26
  k_f[160] = 188000000 * exp((-0.5) * tc[0]);
  // reaction 231: 2 PXC6H13 <=> NC12H26
  k_f[161] = 188000000 * exp((-0.5) * tc[0]);
  // reaction 232: H + NC12H26 <=> H2 + PXC12H25
  k_f[162] = 1.3 * exp((2.54) * tc[0] - (3399.73179417669) * invT);
  // reaction 233: H + NC12H26 <=> H2 + SXC12H25
  k_f[163] = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  // reaction 234: H + NC12H26 <=> H2 + S3XC12H25
  k_f[164] = 3.9 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  // reaction 235: NC12H26 + O <=> OH + PXC12H25
  k_f[165] = 0.19 * exp((2.68) * tc[0] - (1869.95313013034) * invT);
  // reaction 236: NC12H26 + O <=> OH + SXC12H25
  k_f[166] = 0.0952 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  // reaction 237: NC12H26 + O <=> OH + S3XC12H25
  k_f[167] = 0.1428 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  // reaction 238: NC12H26 + OH <=> H2O + PXC12H25
  k_f[168] = 0.0034 * exp((2.66) * tc[0] - (265.195182879087) * invT);
  // reaction 239: NC12H26 + OH <=> H2O + SXC12H25
  k_f[169] = 0.074 * exp((2.39) * tc[0] - (197.764149661255) * invT);
  // reaction 240: NC12H26 + OH <=> H2O + S3XC12H25
  k_f[170] = 0.101 * exp((2.39) * tc[0] - (197.764149661255) * invT);
  // reaction 241: NC12H26 + O2 <=> HO2 + PXC12H25
  k_f[171] = 40000000 * exp(-(25628.8247894344) * invT);
  // reaction 242: NC12H26 + O2 <=> HO2 + SXC12H25
  k_f[172] = 80000000 * exp(-(23948.0811256466) * invT);
  // reaction 243: NC12H26 + O2 <=> HO2 + S3XC12H25
  k_f[173] = 120000000 * exp(-(23948.0811256466) * invT);
  // reaction 244: HO2 + NC12H26 <=> H2O2 + PXC12H25
  k_f[174] = 0.0676 * exp((2.55) * tc[0] - (8298.04281911983) * invT);
  // reaction 245: HO2 + NC12H26 <=> H2O2 + SXC12H25
  k_f[175] = 0.089 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  // reaction 246: HO2 + NC12H26 <=> H2O2 + S3XC12H25
  k_f[176] = 0.0885 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  // reaction 247: CH3 + NC12H26 <=> CH4 + PXC12H25
  k_f[177] = 1.81e-06 * exp((3.65) * tc[0] - (3599.50881050116) * invT);
  // reaction 248: CH3 + NC12H26 <=> CH4 + SXC12H25
  k_f[178] = 6e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
  // reaction 249: CH3 + NC12H26 <=> CH4 + S3XC12H25
  k_f[179] = 9e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
  // reaction 250: O2 + PXC12H25 => C12H25O2
  k_f[180] = 50000000;
  // reaction 251: C12H25O2 => O2 + PXC12H25
  k_f[181] = 27500000000000 * exp(-(13788.1366430493) * invT);
  // reaction 252: O2 + SXC12H25 => C12H25O2
  k_f[182] = 50000000;
  // reaction 253: C12H25O2 => O2 + SXC12H25
  k_f[183] = 27500000000000 * exp(-(13788.1366430493) * invT);
  // reaction 254: O2 + S3XC12H25 => C12H25O2
  k_f[184] = 50000000;
  // reaction 255: C12H25O2 => O2 + S3XC12H25
  k_f[185] = 27500000000000 * exp(-(13788.1366430493) * invT);
  // reaction 256: C12H25O2 => C12OOH
  k_f[186] = 1510000000000 * exp(-(9561.11665028967) * invT);
  // reaction 257: C12OOH => C12H25O2
  k_f[187] = 100000000000 * exp(-(5786.99165675428) * invT);
  // reaction 258: O2 + PXC12H25 => C12H24 + HO2
  k_f[188] = 350000 * exp(-(3019.29999482832) * invT);
  // reaction 259: C12H24 + HO2 => O2 + PXC12H25
  k_f[189] = 316000 * exp(-(9812.72498319203) * invT);
  // reaction 260: O2 + SXC12H25 => C12H24 + HO2
  k_f[190] = 350000 * exp(-(3019.29999482832) * invT);
  // reaction 261: C12H24 + HO2 => O2 + SXC12H25
  k_f[191] = 316000 * exp(-(9812.72498319203) * invT);
  // reaction 262: O2 + S3XC12H25 => C12H24 + HO2
  k_f[192] = 350000 * exp(-(3019.29999482832) * invT);
  // reaction 263: C12H24 + HO2 => O2 + S3XC12H25
  k_f[193] = 316000 * exp(-(9812.72498319203) * invT);
  // reaction 264: C12OOH + O2 => O2C12H24OOH
  k_f[194] = 46000;
  // reaction 265: O2C12H24OOH => C12OOH + O2
  k_f[195] = 25100000000000 * exp(-(13788.1366430493) * invT);
  // reaction 266: O2C12H24OOH <=> OC12H23OOH + OH
  k_f[196] = 89000000000 * exp(-(8554.68331868023) * invT);
  // reaction 267: OC12H23OOH => 3 C2H4 + C2H5 + 2 CH2CHO + OH
  k_f[197] = 1.8e+15 * exp(-(21167.8090470755) * invT);

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_sc_qss(amrex::Real* sc_qss, amrex::Real* qf_co, amrex::Real* qr_co)
{
  amrex::Real epsilon = 1e-12;

  // QSSA coupling between CH3O  SXC12H25  PXC7H15  PXC5H11  S3XC12H25  PXC12H25
  // PXC10H21  PXC8H17  PXC6H13  pC4H9  nC3H7  C2H5  C2H3  HCO  CH2*  CH2 QSSA
  // species 3: CH3O

  amrex::Real CH3O_num = epsilon + 1.0 * qf_co[2] + 1.0 * qf_co[48] +
                         1.0 * qf_co[49] + 1.0 * qr_co[55] + 1.0 * qr_co[56] +
                         1.0 * qr_co[58] + 1.0 * qr_co[59] + 1.0 * qr_co[60];
  amrex::Real CH3O_denom = epsilon - qr_co[2] - qr_co[48] - qr_co[49] -
                           qf_co[55] - qf_co[56] - qf_co[57] - qf_co[58] -
                           qf_co[59] - qf_co[60];
  amrex::Real CH3O_rhs = -CH3O_num / CH3O_denom;

  amrex::Real CH3O_CH2D = (epsilon + 1.0 * qr_co[57]) / CH3O_denom;

  // QSSA species 14: SXC12H25

  amrex::Real SXC12H25_num =
    epsilon + 1.0 * qf_co[149] + 1.0 * qf_co[163] + 1.0 * qf_co[166] +
    1.0 * qf_co[169] + 1.0 * qf_co[172] + 1.0 * qf_co[175] + 1.0 * qf_co[178] +
    1.0 * qf_co[183] + 1.0 * qf_co[191];
  amrex::Real SXC12H25_denom =
    epsilon - qr_co[149] - qr_co[150] - qr_co[163] - qr_co[166] - qr_co[169] -
    qr_co[172] - qr_co[175] - qr_co[178] - qf_co[182] - qf_co[190];
  amrex::Real SXC12H25_rhs = -SXC12H25_num / SXC12H25_denom;

  amrex::Real SXC12H25_PXC8H17 = (epsilon + 1.0 * qf_co[150]) / SXC12H25_denom;

  // QSSA species 10: PXC7H15

  amrex::Real PXC7H15_num = epsilon + 1.0 * qf_co[13] + 1.0 * qf_co[140] +
                            1.0 * qr_co[142] + 1.0 * qf_co[144] +
                            1.0 * qf_co[146] + 1.0 * qr_co[160];
  amrex::Real PXC7H15_denom = epsilon - qr_co[13] - qr_co[136] - qr_co[140] -
                              qf_co[142] - qr_co[144] - qr_co[146] - qf_co[151];
  amrex::Real PXC7H15_rhs = -PXC7H15_num / PXC7H15_denom;

  amrex::Real PXC7H15_PXC5H11 = (epsilon + 1.0 * qf_co[136]) / PXC7H15_denom;
  amrex::Real PXC7H15_S3XC12H25 = (epsilon + 1.0 * qr_co[151]) / PXC7H15_denom;

  // QSSA species 8: PXC5H11

  amrex::Real PXC5H11_num = epsilon + 1.0 * qf_co[11] + 1.0 * qf_co[134] +
                            1.0 * qf_co[138] + 1.0 * qr_co[160];
  amrex::Real PXC5H11_denom = epsilon - qr_co[11] - qr_co[130] - qr_co[134] -
                              qf_co[136] - qr_co[138] - qf_co[155];
  amrex::Real PXC5H11_rhs = -PXC5H11_num / PXC5H11_denom;

  amrex::Real PXC5H11_PXC7H15 = (epsilon + 1.0 * qr_co[136]) / PXC5H11_denom;
  amrex::Real PXC5H11_S3XC12H25 = (epsilon + 1.0 * qr_co[155]) / PXC5H11_denom;
  amrex::Real PXC5H11_nC3H7 = (epsilon + 1.0 * qf_co[130]) / PXC5H11_denom;

  // QSSA species 15: S3XC12H25

  amrex::Real S3XC12H25_num = epsilon + 1.0 * qf_co[164] + 1.0 * qf_co[167] +
                              1.0 * qf_co[170] + 1.0 * qf_co[173] +
                              1.0 * qf_co[176] + 1.0 * qf_co[179] +
                              1.0 * qf_co[185] + 1.0 * qf_co[193];
  amrex::Real S3XC12H25_denom =
    epsilon - qr_co[148] - qr_co[151] - qr_co[152] - qr_co[153] - qr_co[154] -
    qr_co[155] - qr_co[156] - qr_co[164] - qr_co[167] - qr_co[170] -
    qr_co[173] - qr_co[176] - qr_co[179] - qf_co[184] - qf_co[192];
  amrex::Real S3XC12H25_rhs = -S3XC12H25_num / S3XC12H25_denom;

  amrex::Real S3XC12H25_PXC7H15 =
    (epsilon + 1.0 * qf_co[151]) / S3XC12H25_denom;
  amrex::Real S3XC12H25_PXC5H11 =
    (epsilon + 1.0 * qf_co[155]) / S3XC12H25_denom;
  amrex::Real S3XC12H25_PXC12H25 =
    (epsilon + 1.0 * qf_co[148]) / S3XC12H25_denom;
  amrex::Real S3XC12H25_PXC6H13 =
    (epsilon + 1.0 * qf_co[153]) / S3XC12H25_denom;
  amrex::Real S3XC12H25_pC4H9 = (epsilon + 1.0 * qf_co[156]) / S3XC12H25_denom;
  amrex::Real S3XC12H25_nC3H7 = (epsilon + 1.0 * qf_co[154]) / S3XC12H25_denom;
  amrex::Real S3XC12H25_C2H5 = (epsilon + 1.0 * qf_co[152]) / S3XC12H25_denom;

  // QSSA species 13: PXC12H25

  amrex::Real PXC12H25_num = epsilon + 1.0 * qf_co[162] + 1.0 * qf_co[165] +
                             1.0 * qf_co[168] + 1.0 * qf_co[171] +
                             1.0 * qf_co[174] + 1.0 * qf_co[177] +
                             1.0 * qf_co[181] + 1.0 * qf_co[189];
  amrex::Real PXC12H25_denom =
    epsilon - qr_co[147] - qf_co[148] - qr_co[162] - qr_co[165] - qr_co[168] -
    qr_co[171] - qr_co[174] - qr_co[177] - qf_co[180] - qf_co[188];
  amrex::Real PXC12H25_rhs = -PXC12H25_num / PXC12H25_denom;

  amrex::Real PXC12H25_S3XC12H25 =
    (epsilon + 1.0 * qr_co[148]) / PXC12H25_denom;
  amrex::Real PXC12H25_PXC10H21 = (epsilon + 1.0 * qf_co[147]) / PXC12H25_denom;

  // QSSA species 12: PXC10H21

  amrex::Real PXC10H21_num = epsilon + 1.0 * qf_co[15] + 1.0 * qr_co[157];
  amrex::Real PXC10H21_denom = epsilon - qr_co[15] - qr_co[145] - qf_co[147];
  amrex::Real PXC10H21_rhs = -PXC10H21_num / PXC10H21_denom;

  amrex::Real PXC10H21_PXC12H25 = (epsilon + 1.0 * qr_co[147]) / PXC10H21_denom;
  amrex::Real PXC10H21_PXC8H17 = (epsilon + 1.0 * qf_co[145]) / PXC10H21_denom;

  // QSSA species 11: PXC8H17

  amrex::Real PXC8H17_num =
    epsilon + 1.0 * qf_co[14] + 1.0 * qf_co[143] + 1.0 * qr_co[159];
  amrex::Real PXC8H17_denom =
    epsilon - qr_co[14] - qr_co[139] - qr_co[143] - qf_co[145] - qf_co[150];
  amrex::Real PXC8H17_rhs = -PXC8H17_num / PXC8H17_denom;

  amrex::Real PXC8H17_SXC12H25 = (epsilon + 1.0 * qr_co[150]) / PXC8H17_denom;
  amrex::Real PXC8H17_PXC10H21 = (epsilon + 1.0 * qr_co[145]) / PXC8H17_denom;
  amrex::Real PXC8H17_PXC6H13 = (epsilon + 1.0 * qf_co[139]) / PXC8H17_denom;

  // QSSA species 9: PXC6H13

  amrex::Real PXC6H13_num = epsilon + 1.0 * qf_co[12] + 1.0 * qf_co[137] +
                            1.0 * qf_co[141] + 2.0 * qr_co[161];
  amrex::Real PXC6H13_denom = epsilon - qr_co[12] - qr_co[133] - qr_co[137] -
                              qf_co[139] - qr_co[141] - qf_co[153] - qf_co[161];
  amrex::Real PXC6H13_rhs = -PXC6H13_num / PXC6H13_denom;

  amrex::Real PXC6H13_S3XC12H25 = (epsilon + 1.0 * qr_co[153]) / PXC6H13_denom;
  amrex::Real PXC6H13_PXC8H17 = (epsilon + 1.0 * qr_co[139]) / PXC6H13_denom;
  amrex::Real PXC6H13_pC4H9 = (epsilon + 1.0 * qf_co[133]) / PXC6H13_denom;

  // QSSA species 7: pC4H9

  amrex::Real pC4H9_num = epsilon + 1.0 * qf_co[10] + 1.0 * qr_co[121] +
                          1.0 * qr_co[123] + 1.0 * qr_co[124] +
                          1.0 * qr_co[126] + 1.0 * qf_co[131] +
                          1.0 * qf_co[135] + 1.0 * qr_co[159];
  amrex::Real pC4H9_denom = epsilon - qr_co[10] - qf_co[120] - qf_co[121] -
                            qf_co[122] - qf_co[123] - qf_co[124] - qf_co[125] -
                            qf_co[126] - qr_co[131] - qf_co[133] - qr_co[135] -
                            qf_co[156];
  amrex::Real pC4H9_rhs = -pC4H9_num / pC4H9_denom;

  amrex::Real pC4H9_S3XC12H25 = (epsilon + 1.0 * qr_co[156]) / pC4H9_denom;
  amrex::Real pC4H9_PXC6H13 = (epsilon + 1.0 * qr_co[133]) / pC4H9_denom;
  amrex::Real pC4H9_nC3H7 =
    (epsilon + 1.0 * qr_co[122] + 1.0 * qr_co[125]) / pC4H9_denom;

  // QSSA species 6: nC3H7

  amrex::Real nC3H7_num =
    epsilon + 1.0 * qf_co[9] + 1.0 * qr_co[88] + 1.0 * qr_co[111] +
    1.0 * qr_co[113] + 1.0 * qr_co[114] + 1.0 * qr_co[116] + 1.0 * qf_co[128] +
    1.0 * qf_co[132] + 1.0 * qr_co[158];
  amrex::Real nC3H7_denom =
    epsilon - qr_co[9] - qf_co[88] - qf_co[110] - qf_co[111] - qf_co[112] -
    qf_co[113] - qf_co[114] - qf_co[115] - qf_co[116] - qr_co[122] -
    qr_co[125] - qr_co[128] - qf_co[130] - qr_co[132] - qf_co[154] - qf_co[158];
  amrex::Real nC3H7_rhs = -nC3H7_num / nC3H7_denom;

  amrex::Real nC3H7_PXC5H11 = (epsilon + 1.0 * qr_co[130]) / nC3H7_denom;
  amrex::Real nC3H7_S3XC12H25 = (epsilon + 1.0 * qr_co[154]) / nC3H7_denom;
  amrex::Real nC3H7_pC4H9 =
    (epsilon + 1.0 * qf_co[122] + 1.0 * qf_co[125]) / nC3H7_denom;
  amrex::Real nC3H7_C2H5 =
    (epsilon + 1.0 * qr_co[110] + 1.0 * qr_co[112] + 1.0 * qr_co[115]) /
    nC3H7_denom;

  // QSSA species 5: C2H5

  amrex::Real C2H5_num =
    epsilon + 1.0 * qf_co[6] + 1.0 * qr_co[7] + 1.0 * qr_co[8] +
    1.0 * qf_co[54] + 1.0 * qr_co[91] + 1.0 * qr_co[92] + 1.0 * qr_co[93] +
    1.0 * qr_co[94] + 1.0 * qr_co[95] + 1.0 * qr_co[96] + 1.0 * qr_co[97] +
    1.0 * qr_co[98] + 1.0 * qf_co[99] + 1.0 * qf_co[100] + 1.0 * qf_co[101] +
    1.0 * qf_co[103] + 1.0 * qf_co[118] + 1.0 * qf_co[129] + 1.0 * qr_co[157] +
    1.0 * qf_co[197];
  amrex::Real C2H5_denom =
    epsilon - qr_co[6] - qf_co[7] - qr_co[54] - qr_co[84] - qf_co[91] -
    qf_co[92] - qf_co[93] - qf_co[94] - qf_co[95] - qf_co[96] - qf_co[97] -
    qr_co[99] - qr_co[100] - qr_co[101] - qr_co[102] - qr_co[103] - qr_co[110] -
    qr_co[112] - qr_co[115] - qr_co[118] - qr_co[129] - qf_co[152];
  amrex::Real C2H5_rhs = -C2H5_num / C2H5_denom;

  amrex::Real C2H5_S3XC12H25 = (epsilon + 1.0 * qr_co[152]) / C2H5_denom;
  amrex::Real C2H5_pC4H9 = (epsilon + 2.0 * qf_co[120]) / C2H5_denom;
  amrex::Real C2H5_nC3H7 =
    (epsilon + 1.0 * qf_co[110] + 1.0 * qf_co[112] + 1.0 * qf_co[115]) /
    C2H5_denom;
  amrex::Real C2H5_HCO = (epsilon + 1.0 * qf_co[84]) / C2H5_denom;
  amrex::Real C2H5_CH2D = (epsilon + 1.0 * qf_co[102]) / C2H5_denom;

  // QSSA species 4: C2H3

  amrex::Real C2H3_num =
    epsilon + 1.0 * qr_co[3] + 1.0 * qr_co[4] + 1.0 * qr_co[5] +
    1.0 * qr_co[8] + 1.0 * qr_co[65] + 1.0 * qr_co[66] + 1.0 * qr_co[67] +
    1.0 * qr_co[68] + 1.0 * qr_co[69] + 1.0 * qr_co[71] + 1.0 * qr_co[72] +
    1.0 * qr_co[73] + 1.0 * qr_co[74] + 1.0 * qr_co[75] + 1.0 * qr_co[76] +
    2.0 * qr_co[77] + 1.0 * qf_co[79] + 1.0 * qf_co[80] + 1.0 * qf_co[83] +
    1.0 * qf_co[87] + 1.0 * qf_co[89] + 1.0 * qr_co[90] + 1.0 * qr_co[98] +
    1.0 * qf_co[104] + 1.0 * qf_co[108] + 1.0 * qf_co[109] + 1.0 * qf_co[127];
  amrex::Real C2H3_denom =
    epsilon - qf_co[3] - qf_co[4] - qf_co[5] - qr_co[64] - qf_co[65] -
    qf_co[66] - qf_co[67] - qf_co[68] - qf_co[69] - qf_co[70] - qf_co[71] -
    qf_co[72] - qf_co[75] - qf_co[76] - qf_co[77] - qr_co[79] - qr_co[80] -
    qr_co[83] - qr_co[87] - qr_co[89] - qf_co[90] - qr_co[104] - qr_co[108] -
    qr_co[109];
  amrex::Real C2H3_rhs = -C2H3_num / C2H3_denom;

  amrex::Real C2H3_HCO =
    (epsilon + 1.0 * qf_co[64] + 1.0 * qr_co[70]) / C2H3_denom;

  // QSSA species 2: HCO

  amrex::Real HCO_num =
    epsilon + 1.0 * qr_co[0] + 1.0 * qr_co[16] + 1.0 * qr_co[17] +
    1.0 * qr_co[18] + 1.0 * qr_co[19] + 1.0 * qr_co[20] + 1.0 * qr_co[21] +
    1.0 * qr_co[22] + 1.0 * qf_co[41] + 1.0 * qf_co[42] + 1.0 * qf_co[43] +
    1.0 * qf_co[44] + 1.0 * qf_co[45] + 1.0 * qr_co[50] + 1.0 * qf_co[51] +
    1.0 * qr_co[73] + 1.0 * qr_co[74] + 1.0 * qf_co[78] + 1.0 * qf_co[81] +
    1.0 * qr_co[105] + 1.0 * qf_co[107] + 1.0 * qr_co[117];
  amrex::Real HCO_denom =
    epsilon - qf_co[0] - qf_co[16] - qf_co[17] - qf_co[18] - qf_co[19] -
    qf_co[20] - qf_co[21] - qf_co[22] - qr_co[23] - qr_co[26] - qr_co[32] -
    qr_co[41] - qr_co[42] - qr_co[43] - qr_co[44] - qr_co[45] - qf_co[50] -
    qr_co[51] - qf_co[64] - qr_co[70] - qr_co[78] - qr_co[81] - qf_co[84] -
    qf_co[105] - qr_co[107] - qf_co[117];
  amrex::Real HCO_rhs = -HCO_num / HCO_denom;

  amrex::Real HCO_C2H5 = (epsilon + 1.0 * qr_co[84]) / HCO_denom;
  amrex::Real HCO_C2H3 =
    (epsilon + 1.0 * qr_co[64] + 1.0 * qf_co[70]) / HCO_denom;
  amrex::Real HCO_CH2D = (epsilon + 1.0 * qf_co[32]) / HCO_denom;
  amrex::Real HCO_CH2 =
    (epsilon + 1.0 * qf_co[23] + 1.0 * qf_co[26]) / HCO_denom;

  // QSSA species 1: CH2*

  amrex::Real CH2D_num = epsilon + 1.0 * qr_co[31] + 1.0 * qr_co[33] +
                         1.0 * qr_co[34] + 1.0 * qr_co[35] + 1.0 * qr_co[36] +
                         1.0 * qr_co[40] + 1.0 * qf_co[47] + 1.0 * qr_co[53] +
                         1.0 * qr_co[62] + 1.0 * qr_co[86];
  amrex::Real CH2D_denom =
    epsilon - qf_co[30] - qf_co[31] - qf_co[32] - qf_co[33] - qf_co[34] -
    qf_co[35] - qf_co[36] - qf_co[37] - qf_co[38] - qf_co[39] - qf_co[40] -
    qr_co[47] - qf_co[53] - qr_co[57] - qf_co[62] - qf_co[86] - qf_co[102];
  amrex::Real CH2D_rhs = -CH2D_num / CH2D_denom;

  amrex::Real CH2D_CH3O = (epsilon + 1.0 * qf_co[57]) / CH2D_denom;
  amrex::Real CH2D_C2H5 = (epsilon + 1.0 * qr_co[102]) / CH2D_denom;
  amrex::Real CH2D_HCO = (epsilon + 1.0 * qr_co[32]) / CH2D_denom;
  amrex::Real CH2D_CH2 = (epsilon + 1.0 * qr_co[30] + 1.0 * qr_co[37] +
                          1.0 * qr_co[38] + 1.0 * qr_co[39]) /
                         CH2D_denom;

  // QSSA species 0: CH2

  amrex::Real CH2_num = epsilon + 1.0 * qr_co[1] + 1.0 * qr_co[24] +
                        1.0 * qr_co[25] + 1.0 * qr_co[27] + 1.0 * qr_co[28] +
                        2.0 * qr_co[29] + 1.0 * qf_co[46] + 1.0 * qr_co[52] +
                        1.0 * qr_co[61] + 1.0 * qf_co[63] + 1.0 * qf_co[82] +
                        1.0 * qr_co[85];
  amrex::Real CH2_denom = epsilon - qf_co[1] - qf_co[23] - qf_co[24] -
                          qf_co[25] - qf_co[26] - qf_co[27] - qf_co[28] -
                          qf_co[29] - qr_co[30] - qr_co[37] - qr_co[38] -
                          qr_co[39] - qr_co[46] - qf_co[52] - qf_co[61] -
                          qr_co[63] - qr_co[82] - qf_co[85];
  amrex::Real CH2_rhs = -CH2_num / CH2_denom;

  amrex::Real CH2_HCO =
    (epsilon + 1.0 * qr_co[23] + 1.0 * qr_co[26]) / CH2_denom;
  amrex::Real CH2_CH2D = (epsilon + 1.0 * qf_co[30] + 1.0 * qf_co[37] +
                          1.0 * qf_co[38] + 1.0 * qf_co[39]) /
                         CH2_denom;

  // Putting it all together
  amrex::Real H_0 = CH2D_CH3O;
  amrex::Real H_1 = PXC8H17_SXC12H25;
  amrex::Real H_2 = PXC5H11_PXC7H15;
  amrex::Real H_3 = S3XC12H25_PXC7H15;
  amrex::Real H_4 =
    (S3XC12H25_PXC5H11 - PXC7H15_PXC5H11 * H_3) / (1 - PXC7H15_PXC5H11 * H_2);
  amrex::Real H_5 = nC3H7_PXC5H11 / (1 - PXC7H15_PXC5H11 * H_2);
  amrex::Real H_6 =
    PXC12H25_S3XC12H25 / ((1 - PXC7H15_S3XC12H25 * H_3) -
                          (PXC5H11_S3XC12H25 - PXC7H15_S3XC12H25 * H_2) * H_4);
  amrex::Real H_7 =
    PXC6H13_S3XC12H25 / ((1 - PXC7H15_S3XC12H25 * H_3) -
                         (PXC5H11_S3XC12H25 - PXC7H15_S3XC12H25 * H_2) * H_4);
  amrex::Real H_8 =
    pC4H9_S3XC12H25 / ((1 - PXC7H15_S3XC12H25 * H_3) -
                       (PXC5H11_S3XC12H25 - PXC7H15_S3XC12H25 * H_2) * H_4);
  amrex::Real H_9 =
    (nC3H7_S3XC12H25 - (PXC5H11_S3XC12H25 - PXC7H15_S3XC12H25 * H_2) * H_5) /
    ((1 - PXC7H15_S3XC12H25 * H_3) -
     (PXC5H11_S3XC12H25 - PXC7H15_S3XC12H25 * H_2) * H_4);
  amrex::Real H_10 =
    C2H5_S3XC12H25 / ((1 - PXC7H15_S3XC12H25 * H_3) -
                      (PXC5H11_S3XC12H25 - PXC7H15_S3XC12H25 * H_2) * H_4);
  amrex::Real H_11 = PXC10H21_PXC12H25 / (1 - S3XC12H25_PXC12H25 * H_6);
  amrex::Real H_12 = PXC8H17_PXC10H21 / (1 - PXC12H25_PXC10H21 * H_11);
  amrex::Real H_13 =
    PXC6H13_PXC8H17 / ((1 - SXC12H25_PXC8H17 * H_1) - PXC10H21_PXC8H17 * H_12);
  amrex::Real H_14 = (pC4H9_PXC6H13 - S3XC12H25_PXC6H13 * H_8) /
                     ((1 - S3XC12H25_PXC6H13 * H_7) - PXC8H17_PXC6H13 * H_13);
  amrex::Real H_15 = (nC3H7_pC4H9 - S3XC12H25_pC4H9 * H_9) /
                     ((1 - S3XC12H25_pC4H9 * H_8) -
                      (PXC6H13_pC4H9 - S3XC12H25_pC4H9 * H_7) * H_14);
  amrex::Real H_16 = (C2H5_pC4H9 - S3XC12H25_pC4H9 * H_10) /
                     ((1 - S3XC12H25_pC4H9 * H_8) -
                      (PXC6H13_pC4H9 - S3XC12H25_pC4H9 * H_7) * H_14);
  amrex::Real H_17 =
    ((C2H5_nC3H7 - (S3XC12H25_nC3H7 - PXC5H11_nC3H7 * H_4) * H_10) -
     (pC4H9_nC3H7 - (S3XC12H25_nC3H7 - PXC5H11_nC3H7 * H_4) * H_8) * H_16) /
    (((1 - PXC5H11_nC3H7 * H_5) -
      (S3XC12H25_nC3H7 - PXC5H11_nC3H7 * H_4) * H_9) -
     (pC4H9_nC3H7 - (S3XC12H25_nC3H7 - PXC5H11_nC3H7 * H_4) * H_8) * H_15);
  amrex::Real H_18 = HCO_C2H5 / ((1 - S3XC12H25_C2H5 * H_10) -
                                 (nC3H7_C2H5 - S3XC12H25_C2H5 * H_9) * H_17);
  amrex::Real H_19 = CH2D_C2H5 / ((1 - S3XC12H25_C2H5 * H_10) -
                                  (nC3H7_C2H5 - S3XC12H25_C2H5 * H_9) * H_17);
  amrex::Real H_20 = HCO_C2H3;
  amrex::Real H_21 =
    (CH2D_HCO - C2H5_HCO * H_19) / ((1 - C2H5_HCO * H_18) - C2H3_HCO * H_20);
  amrex::Real H_22 = CH2_HCO / ((1 - C2H5_HCO * H_18) - C2H3_HCO * H_20);
  amrex::Real H_23 = (CH2_CH2D - (HCO_CH2D - C2H5_CH2D * H_18) * H_22) /
                     (((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_19) -
                      (HCO_CH2D - C2H5_CH2D * H_18) * H_21);
  sc_qss[0] =
    ((CH2_rhs -
      ((HCO_rhs -
        (((C2H5_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                       (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                        H_10) -
          ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                         (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                          H_8) -
           ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                            (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                             H_7) -
            ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
             (PXC10H21_rhs -
              (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                               (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                H_6) *
                H_11) *
               H_12) *
              H_13) *
             H_14) *
            H_16) -
         (((nC3H7_rhs - (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_5) -
           ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
            (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
             H_9) -
          ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                         (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                          H_8) -
           ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                            (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                             H_7) -
            ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
             (PXC10H21_rhs -
              (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                               (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                H_6) *
                H_11) *
               H_12) *
              H_13) *
             H_14) *
            H_15) *
           H_17) *
          H_18) -
       C2H3_rhs * H_20) *
        H_22) -
     (((CH2D_rhs - CH3O_rhs * H_0) -
       (((C2H5_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                      (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                       H_10) -
         ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                        (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                         H_8) -
          ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                           (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                            H_7) -
           ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
            (PXC10H21_rhs -
             (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                              (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                               H_6) *
               H_11) *
              H_12) *
             H_13) *
            H_14) *
           H_16) -
        (((nC3H7_rhs - (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_5) -
          ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
           (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
            H_9) -
         ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                        (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                         H_8) -
          ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                           (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                            H_7) -
           ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
            (PXC10H21_rhs -
             (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                              (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                               H_6) *
               H_11) *
              H_12) *
             H_13) *
            H_14) *
           H_15) *
          H_17) *
         H_19) -
      ((HCO_rhs -
        (((C2H5_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                       (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                        H_10) -
          ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                         (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                          H_8) -
           ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                            (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                             H_7) -
            ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
             (PXC10H21_rhs -
              (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                               (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                H_6) *
                H_11) *
               H_12) *
              H_13) *
             H_14) *
            H_16) -
         (((nC3H7_rhs - (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_5) -
           ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
            (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
             H_9) -
          ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                         (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                          H_8) -
           ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                            (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                             H_7) -
            ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
             (PXC10H21_rhs -
              (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                               (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                H_6) *
                H_11) *
               H_12) *
              H_13) *
             H_14) *
            H_15) *
           H_17) *
          H_18) -
       C2H3_rhs * H_20) *
        H_21) *
       H_23) /
    ((1 - HCO_CH2 * H_22) - (CH2D_CH2 - HCO_CH2 * H_21) * H_23);

  sc_qss[1] =
    ((((CH2D_rhs - CH3O_rhs * H_0) -
       (((C2H5_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                      (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                       H_10) -
         ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                        (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                         H_8) -
          ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                           (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                            H_7) -
           ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
            (PXC10H21_rhs -
             (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                              (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                               H_6) *
               H_11) *
              H_12) *
             H_13) *
            H_14) *
           H_16) -
        (((nC3H7_rhs - (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_5) -
          ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
           (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
            H_9) -
         ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                        (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                         H_8) -
          ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                           (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                            H_7) -
           ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
            (PXC10H21_rhs -
             (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                              (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                               H_6) *
               H_11) *
              H_12) *
             H_13) *
            H_14) *
           H_15) *
          H_17) *
         H_19) -
      ((HCO_rhs -
        (((C2H5_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                       (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                        H_10) -
          ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                         (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                          H_8) -
           ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                            (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                             H_7) -
            ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
             (PXC10H21_rhs -
              (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                               (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                H_6) *
                H_11) *
               H_12) *
              H_13) *
             H_14) *
            H_16) -
         (((nC3H7_rhs - (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_5) -
           ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
            (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
             H_9) -
          ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                         (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                          H_8) -
           ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                            (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                             H_7) -
            ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
             (PXC10H21_rhs -
              (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                               (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                H_6) *
                H_11) *
               H_12) *
              H_13) *
             H_14) *
            H_15) *
           H_17) *
          H_18) -
       C2H3_rhs * H_20) *
        H_21) -
     ((CH2D_CH2 - HCO_CH2 * H_21) * sc_qss[0])) /
    (((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_19) -
     (HCO_CH2D - C2H5_CH2D * H_18) * H_21);

  sc_qss[2] =
    (((HCO_rhs -
       (((C2H5_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                      (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                       H_10) -
         ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                        (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                         H_8) -
          ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                           (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                            H_7) -
           ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
            (PXC10H21_rhs -
             (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                              (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                               H_6) *
               H_11) *
              H_12) *
             H_13) *
            H_14) *
           H_16) -
        (((nC3H7_rhs - (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_5) -
          ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
           (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
            H_9) -
         ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                        (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                         H_8) -
          ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                           (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                            H_7) -
           ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
            (PXC10H21_rhs -
             (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                              (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                               H_6) *
               H_11) *
              H_12) *
             H_13) *
            H_14) *
           H_15) *
          H_17) *
         H_18) -
      C2H3_rhs * H_20) -
     (HCO_CH2 * sc_qss[0] + (HCO_CH2D - C2H5_CH2D * H_18) * sc_qss[1])) /
    ((1 - C2H5_HCO * H_18) - C2H3_HCO * H_20);

  sc_qss[4] = C2H3_rhs - (+C2H3_HCO * sc_qss[2]);

  sc_qss[5] =
    ((((C2H5_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                    (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                     H_10) -
       ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                      (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                       H_8) -
        ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                         (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                          H_7) -
         ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
          (PXC10H21_rhs -
           (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                            (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                             H_6) *
             H_11) *
            H_12) *
           H_13) *
          H_14) *
         H_16) -
      (((nC3H7_rhs - (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_5) -
        ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
         (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
          H_9) -
       ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                      (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                       H_8) -
        ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                         (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                          H_7) -
         ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
          (PXC10H21_rhs -
           (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                            (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                             H_6) *
             H_11) *
            H_12) *
           H_13) *
          H_14) *
         H_15) *
        H_17) -
     (+C2H5_CH2D * sc_qss[1] + C2H5_HCO * sc_qss[2])) /
    ((1 - S3XC12H25_C2H5 * H_10) - (nC3H7_C2H5 - S3XC12H25_C2H5 * H_9) * H_17);

  sc_qss[6] =
    ((((nC3H7_rhs - (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_5) -
       ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
        (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
         H_9) -
      ((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                     (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                      H_8) -
       ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                        (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                         H_7) -
        ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
         (PXC10H21_rhs -
          (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                           (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                            H_6) *
            H_11) *
           H_12) *
          H_13) *
         H_14) *
        H_15) -
     (+(nC3H7_C2H5 - S3XC12H25_C2H5 * H_9) * sc_qss[5])) /
    (((1 - PXC5H11_nC3H7 * H_5) -
      (S3XC12H25_nC3H7 - PXC5H11_nC3H7 * H_4) * H_9) -
     (pC4H9_nC3H7 - (S3XC12H25_nC3H7 - PXC5H11_nC3H7 * H_4) * H_8) * H_15);

  sc_qss[7] = (((pC4H9_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                              (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                               H_8) -
                ((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                                 (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                  H_7) -
                 ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
                  (PXC10H21_rhs -
                   (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                                    (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                     H_6) *
                     H_11) *
                    H_12) *
                   H_13) *
                  H_14) -
               (+(pC4H9_nC3H7 - (S3XC12H25_nC3H7 - PXC5H11_nC3H7 * H_4) * H_8) *
                sc_qss[6])) /
              ((1 - S3XC12H25_pC4H9 * H_8) -
               (PXC6H13_pC4H9 - S3XC12H25_pC4H9 * H_7) * H_14);

  sc_qss[9] = (((PXC6H13_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                                (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                 H_7) -
                ((PXC8H17_rhs - SXC12H25_rhs * H_1) -
                 (PXC10H21_rhs -
                  (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                                   (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                    H_6) *
                    H_11) *
                   H_12) *
                  H_13) -
               (+(PXC6H13_pC4H9 - S3XC12H25_pC4H9 * H_7) * sc_qss[7])) /
              ((1 - S3XC12H25_PXC6H13 * H_7) - PXC8H17_PXC6H13 * H_13);

  sc_qss[11] = (((PXC8H17_rhs - SXC12H25_rhs * H_1) -
                 (PXC10H21_rhs -
                  (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                                   (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                    H_6) *
                    H_11) *
                   H_12) -
                (+PXC8H17_PXC6H13 * sc_qss[9])) /
               ((1 - SXC12H25_PXC8H17 * H_1) - PXC10H21_PXC8H17 * H_12);

  sc_qss[12] =
    ((PXC10H21_rhs - (PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                                      (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                       H_6) *
                       H_11) -
     (+PXC10H21_PXC8H17 * sc_qss[11])) /
    (1 - PXC12H25_PXC10H21 * H_11);

  sc_qss[13] = ((PXC12H25_rhs - ((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                                 (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) *
                                  H_6) -
                (+PXC12H25_PXC10H21 * sc_qss[12])) /
               (1 - S3XC12H25_PXC12H25 * H_6);

  sc_qss[15] = (((S3XC12H25_rhs - PXC7H15_rhs * H_3) -
                 (PXC5H11_rhs - PXC7H15_rhs * H_2) * H_4) -
                (+S3XC12H25_C2H5 * sc_qss[5] +
                 (S3XC12H25_nC3H7 - PXC5H11_nC3H7 * H_4) * sc_qss[6] +
                 S3XC12H25_pC4H9 * sc_qss[7] + S3XC12H25_PXC6H13 * sc_qss[9] +
                 S3XC12H25_PXC12H25 * sc_qss[13])) /
               ((1 - PXC7H15_S3XC12H25 * H_3) -
                (PXC5H11_S3XC12H25 - PXC7H15_S3XC12H25 * H_2) * H_4);

  sc_qss[8] = ((PXC5H11_rhs - PXC7H15_rhs * H_2) -
               (+PXC5H11_nC3H7 * sc_qss[6] +
                (PXC5H11_S3XC12H25 - PXC7H15_S3XC12H25 * H_2) * sc_qss[15])) /
              (1 - PXC7H15_PXC5H11 * H_2);

  sc_qss[10] = PXC7H15_rhs -
               (+PXC7H15_S3XC12H25 * sc_qss[15] + PXC7H15_PXC5H11 * sc_qss[8]);

  sc_qss[14] = SXC12H25_rhs - (+SXC12H25_PXC8H17 * sc_qss[11]);

  sc_qss[3] = CH3O_rhs - (+CH3O_CH2D * sc_qss[1]);

  // QSSA coupling between O2C12H24OOH  C12OOH
  // QSSA species 17: O2C12H24OOH

  amrex::Real O2C12H24OOH_num = epsilon + 1.0 * qr_co[196];
  amrex::Real O2C12H24OOH_denom = epsilon - qf_co[195] - qf_co[196];
  amrex::Real O2C12H24OOH_rhs = -O2C12H24OOH_num / O2C12H24OOH_denom;

  amrex::Real O2C12H24OOH_C12OOH =
    (epsilon + 1.0 * qf_co[194]) / O2C12H24OOH_denom;

  // QSSA species 16: C12OOH

  amrex::Real C12OOH_num = epsilon + 1.0 * qf_co[186];
  amrex::Real C12OOH_denom = epsilon - qf_co[187] - qf_co[194];
  amrex::Real C12OOH_rhs = -C12OOH_num / C12OOH_denom;

  amrex::Real C12OOH_O2C12H24OOH = (epsilon + 1.0 * qf_co[195]) / C12OOH_denom;

  // Putting it all together
  H_0 = C12OOH_O2C12H24OOH;
  sc_qss[16] =
    (C12OOH_rhs - O2C12H24OOH_rhs * H_0) / (1 - O2C12H24OOH_C12OOH * H_0);

  sc_qss[17] = O2C12H24OOH_rhs - (O2C12H24OOH_C12OOH * sc_qss[16]);

  return;
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* sc_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{

  // reaction 0: H + O2 (+M) <=> HO2 (+M)
  qf[0] = sc[1] * sc[8];
  qr[0] = sc[4];

  // reaction 1: 2 OH (+M) <=> H2O2 (+M)
  qf[1] = (sc[3] * sc[3]);
  qr[1] = sc[7];

  // reaction 2: CO + H2 (+M) <=> CH2O (+M)
  qf[2] = sc[5] * sc[12];
  qr[2] = sc[11];

  // reaction 3: H + HCO (+M) <=> CH2O (+M)
  qf[3] = sc[1] * sc_qss[2];
  qr[3] = sc[11];

  // reaction 4: CH2 + H (+M) <=> CH3 (+M)
  qf[4] = sc[1] * sc_qss[0];
  qr[4] = sc[9];

  // reaction 5: CH2O + H (+M) <=> CH3O (+M)
  qf[5] = sc[1] * sc[11];
  qr[5] = sc_qss[3];

  // reaction 6: CH3 + H (+M) <=> CH4 (+M)
  qf[6] = sc[1] * sc[9];
  qr[6] = sc[10];

  // reaction 7: 2 CH3 (+M) <=> C2H6 (+M)
  qf[7] = (sc[9] * sc[9]);
  qr[7] = sc[16];

  // reaction 8: C2H3 (+M) <=> C2H2 + H (+M)
  qf[8] = sc_qss[4];
  qr[8] = sc[1] * sc[14];

  // reaction 9: C2H3 + H (+M) <=> C2H4 (+M)
  qf[9] = sc[1] * sc_qss[4];
  qr[9] = sc[15];

  // reaction 10: C2H3 + CH3 (+M) <=> C3H6 (+M)
  qf[10] = sc[9] * sc_qss[4];
  qr[10] = sc[19];

  // reaction 11: C2H4 + H (+M) <=> C2H5 (+M)
  qf[11] = sc[1] * sc[15];
  qr[11] = sc_qss[5];

  // reaction 12: C2H5 + H (+M) <=> C2H6 (+M)
  qf[12] = sc[1] * sc_qss[5];
  qr[12] = sc[16];

  // reaction 13: C2H3 + C2H5 (+M) <=> C4H81 (+M)
  qf[13] = sc_qss[4] * sc_qss[5];
  qr[13] = sc[22];

  // reaction 14: H + aC3H5 (+M) <=> C3H6 (+M)
  qf[14] = sc[1] * sc[18];
  qr[14] = sc[19];

  // reaction 15: CH3 + aC3H5 (+M) <=> C4H81 (+M)
  qf[15] = sc[9] * sc[18];
  qr[15] = sc[22];

  // reaction 16: C3H6 + H (+M) <=> nC3H7 (+M)
  qf[16] = sc[1] * sc[19];
  qr[16] = sc_qss[6];

  // reaction 17: C4H7 + H (+M) <=> C4H81 (+M)
  qf[17] = sc[1] * sc[21];
  qr[17] = sc[22];

  // reaction 18: C4H81 + H (+M) <=> pC4H9 (+M)
  qf[18] = sc[1] * sc[22];
  qr[18] = sc_qss[7];

  // reaction 19: C5H10 + H (+M) <=> PXC5H11 (+M)
  qf[19] = sc[1] * sc[24];
  qr[19] = sc_qss[8];

  // reaction 20: C6H12 + H (+M) <=> PXC6H13 (+M)
  qf[20] = sc[1] * sc[25];
  qr[20] = sc_qss[9];

  // reaction 21: C7H14 + H (+M) <=> PXC7H15 (+M)
  qf[21] = sc[1] * sc[26];
  qr[21] = sc_qss[10];

  // reaction 22: C8H16 + H (+M) <=> PXC8H17 (+M)
  qf[22] = sc[1] * sc[27];
  qr[22] = sc_qss[11];

  // reaction 23: C9H18 + H (+M) <=> PXC9H19 (+M)
  qf[23] = sc[1] * sc[28];
  qr[23] = sc[29];

  // reaction 24: C10H20 + H (+M) <=> PXC10H21 (+M)
  qf[24] = sc[1] * sc[30];
  qr[24] = sc_qss[12];

  // reaction 25: CO + O (+M) <=> CO2 (+M)
  qf[25] = sc[2] * sc[12];
  qr[25] = sc[13];

  // reaction 26: 2 H + M <=> H2 + M
  qf[26] = (sc[1] * sc[1]);
  qr[26] = sc[5];

  // reaction 27: H + OH + M <=> H2O + M
  qf[27] = sc[1] * sc[3];
  qr[27] = sc[6];

  // reaction 28: 2 O + M <=> O2 + M
  qf[28] = (sc[2] * sc[2]);
  qr[28] = sc[8];

  // reaction 29: 2 H + H2 <=> H2 + H2
  qf[29] = (sc[1] * sc[1]) * sc[5];
  qr[29] = (sc[5] * sc[5]);

  // reaction 30: 2 H + H2O <=> H2 + H2O
  qf[30] = (sc[1] * sc[1]) * sc[6];
  qr[30] = sc[5] * sc[6];

  // reaction 31: 2 H + CO2 <=> H2 + CO2
  qf[31] = (sc[1] * sc[1]) * sc[13];
  qr[31] = sc[5] * sc[13];

  // reaction 32: H + O + M <=> OH + M
  qf[32] = sc[1] * sc[2];
  qr[32] = sc[3];

  // reaction 33: HCO + M <=> CO + H + M
  qf[33] = sc_qss[2];
  qr[33] = sc[1] * sc[12];

  // reaction 34: HCO + H2O <=> CO + H + H2O
  qf[34] = sc[6] * sc_qss[2];
  qr[34] = sc[1] * sc[6] * sc[12];

  // reaction 35: H + O2 <=> O + OH
  qf[35] = sc[1] * sc[8];
  qr[35] = sc[2] * sc[3];

  // reaction 36: H2 + O <=> H + OH
  qf[36] = sc[2] * sc[5];
  qr[36] = sc[1] * sc[3];

  // reaction 37: H2 + OH <=> H + H2O
  qf[37] = sc[3] * sc[5];
  qr[37] = sc[1] * sc[6];

  // reaction 38: 2 OH <=> H2O + O
  qf[38] = (sc[3] * sc[3]);
  qr[38] = sc[2] * sc[6];

  // reaction 39: H + HO2 <=> 2 OH
  qf[39] = sc[1] * sc[4];
  qr[39] = (sc[3] * sc[3]);

  // reaction 40: H2 + O2 <=> H + HO2
  qf[40] = sc[5] * sc[8];
  qr[40] = sc[1] * sc[4];

  // reaction 41: HO2 + OH <=> H2O + O2
  qf[41] = sc[3] * sc[4];
  qr[41] = sc[6] * sc[8];

  // reaction 42: H + HO2 <=> H2O + O
  qf[42] = sc[1] * sc[4];
  qr[42] = sc[2] * sc[6];

  // reaction 43: HO2 + O <=> O2 + OH
  qf[43] = sc[2] * sc[4];
  qr[43] = sc[3] * sc[8];

  // reaction 44: 2 HO2 <=> H2O2 + O2
  qf[44] = (sc[4] * sc[4]);
  qr[44] = sc[7] * sc[8];

  // reaction 45: 2 HO2 <=> H2O2 + O2
  qf[45] = (sc[4] * sc[4]);
  qr[45] = sc[7] * sc[8];

  // reaction 46: H + H2O2 <=> H2O + OH
  qf[46] = sc[1] * sc[7];
  qr[46] = sc[3] * sc[6];

  // reaction 47: H + H2O2 <=> H2 + HO2
  qf[47] = sc[1] * sc[7];
  qr[47] = sc[4] * sc[5];

  // reaction 48: H2O2 + O <=> HO2 + OH
  qf[48] = sc[2] * sc[7];
  qr[48] = sc[3] * sc[4];

  // reaction 49: H2O2 + OH <=> H2O + HO2
  qf[49] = sc[3] * sc[7];
  qr[49] = sc[4] * sc[6];

  // reaction 50: H2O2 + OH <=> H2O + HO2
  qf[50] = sc[3] * sc[7];
  qr[50] = sc[4] * sc[6];

  // reaction 51: CO + OH <=> CO2 + H
  qf[51] = sc[3] * sc[12];
  qr[51] = sc[1] * sc[13];

  // reaction 52: CO + OH <=> CO2 + H
  qf[52] = sc[3] * sc[12];
  qr[52] = sc[1] * sc[13];

  // reaction 53: CO + HO2 <=> CO2 + OH
  qf[53] = sc[4] * sc[12];
  qr[53] = sc[3] * sc[13];

  // reaction 54: CO + O2 <=> CO2 + O
  qf[54] = sc[8] * sc[12];
  qr[54] = sc[2] * sc[13];

  // reaction 55: H + HCO <=> CO + H2
  qf[55] = sc[1] * sc_qss[2];
  qr[55] = sc[5] * sc[12];

  // reaction 56: HCO + O <=> CO + OH
  qf[56] = sc[2] * sc_qss[2];
  qr[56] = sc[3] * sc[12];

  // reaction 57: HCO + O <=> CO2 + H
  qf[57] = sc[2] * sc_qss[2];
  qr[57] = sc[1] * sc[13];

  // reaction 58: HCO + OH <=> CO + H2O
  qf[58] = sc[3] * sc_qss[2];
  qr[58] = sc[6] * sc[12];

  // reaction 59: HCO + O2 <=> CO + HO2
  qf[59] = sc[8] * sc_qss[2];
  qr[59] = sc[4] * sc[12];

  // reaction 60: CH2 + O <=> H + HCO
  qf[60] = sc[2] * sc_qss[0];
  qr[60] = sc[1] * sc_qss[2];

  // reaction 61: CH2 + OH <=> CH2O + H
  qf[61] = sc[3] * sc_qss[0];
  qr[61] = sc[1] * sc[11];

  // reaction 62: CH2 + H2 <=> CH3 + H
  qf[62] = sc[5] * sc_qss[0];
  qr[62] = sc[1] * sc[9];

  // reaction 63: CH2 + O2 <=> HCO + OH
  qf[63] = sc[8] * sc_qss[0];
  qr[63] = sc[3] * sc_qss[2];

  // reaction 64: CH2 + O2 <=> CO2 + 2 H
  qf[64] = sc[8] * sc_qss[0];
  qr[64] = (sc[1] * sc[1]) * sc[13];

  // reaction 65: CH2 + HO2 <=> CH2O + OH
  qf[65] = sc[4] * sc_qss[0];
  qr[65] = sc[3] * sc[11];

  // reaction 66: 2 CH2 <=> C2H2 + H2
  qf[66] = sc_qss[0] * sc_qss[0];
  qr[66] = sc[5] * sc[14];

  // reaction 67: CH2* + N2 <=> CH2 + N2
  qf[67] = sc[34] * sc_qss[1];
  qr[67] = sc[34] * sc_qss[0];

  // reaction 68: CH2* + O <=> CO + H2
  qf[68] = sc[2] * sc_qss[1];
  qr[68] = sc[5] * sc[12];

  // reaction 69: CH2* + O <=> H + HCO
  qf[69] = sc[2] * sc_qss[1];
  qr[69] = sc[1] * sc_qss[2];

  // reaction 70: CH2* + OH <=> CH2O + H
  qf[70] = sc[3] * sc_qss[1];
  qr[70] = sc[1] * sc[11];

  // reaction 71: CH2* + H2 <=> CH3 + H
  qf[71] = sc[5] * sc_qss[1];
  qr[71] = sc[1] * sc[9];

  // reaction 72: CH2* + O2 <=> CO + H + OH
  qf[72] = sc[8] * sc_qss[1];
  qr[72] = sc[1] * sc[3] * sc[12];

  // reaction 73: CH2* + O2 <=> CO + H2O
  qf[73] = sc[8] * sc_qss[1];
  qr[73] = sc[6] * sc[12];

  // reaction 74: CH2* + H2O <=> CH2 + H2O
  qf[74] = sc[6] * sc_qss[1];
  qr[74] = sc[6] * sc_qss[0];

  // reaction 75: CH2* + CO <=> CH2 + CO
  qf[75] = sc[12] * sc_qss[1];
  qr[75] = sc[12] * sc_qss[0];

  // reaction 76: CH2* + CO2 <=> CH2 + CO2
  qf[76] = sc[13] * sc_qss[1];
  qr[76] = sc[13] * sc_qss[0];

  // reaction 77: CH2* + CO2 <=> CH2O + CO
  qf[77] = sc[13] * sc_qss[1];
  qr[77] = sc[11] * sc[12];

  // reaction 78: CH2O + H <=> H2 + HCO
  qf[78] = sc[1] * sc[11];
  qr[78] = sc[5] * sc_qss[2];

  // reaction 79: CH2O + O <=> HCO + OH
  qf[79] = sc[2] * sc[11];
  qr[79] = sc[3] * sc_qss[2];

  // reaction 80: CH2O + OH <=> H2O + HCO
  qf[80] = sc[3] * sc[11];
  qr[80] = sc[6] * sc_qss[2];

  // reaction 81: CH2O + O2 <=> HCO + HO2
  qf[81] = sc[8] * sc[11];
  qr[81] = sc[4] * sc_qss[2];

  // reaction 82: CH2O + HO2 <=> H2O2 + HCO
  qf[82] = sc[4] * sc[11];
  qr[82] = sc[7] * sc_qss[2];

  // reaction 83: CH3 + O <=> CH2O + H
  qf[83] = sc[2] * sc[9];
  qr[83] = sc[1] * sc[11];

  // reaction 84: CH3 + OH <=> CH2 + H2O
  qf[84] = sc[3] * sc[9];
  qr[84] = sc[6] * sc_qss[0];

  // reaction 85: CH3 + OH <=> CH2* + H2O
  qf[85] = sc[3] * sc[9];
  qr[85] = sc[6] * sc_qss[1];

  // reaction 86: CH3 + O2 <=> CH3O + O
  qf[86] = sc[8] * sc[9];
  qr[86] = sc[2] * sc_qss[3];

  // reaction 87: CH3 + O2 <=> CH2O + OH
  qf[87] = sc[8] * sc[9];
  qr[87] = sc[3] * sc[11];

  // reaction 88: CH3 + HO2 <=> CH4 + O2
  qf[88] = sc[4] * sc[9];
  qr[88] = sc[8] * sc[10];

  // reaction 89: CH3 + HO2 <=> CH3O + OH
  qf[89] = sc[4] * sc[9];
  qr[89] = sc[3] * sc_qss[3];

  // reaction 90: CH3 + H2O2 <=> CH4 + HO2
  qf[90] = sc[7] * sc[9];
  qr[90] = sc[4] * sc[10];

  // reaction 91: CH3 + HCO <=> CH4 + CO
  qf[91] = sc[9] * sc_qss[2];
  qr[91] = sc[10] * sc[12];

  // reaction 92: CH2O + CH3 <=> CH4 + HCO
  qf[92] = sc[9] * sc[11];
  qr[92] = sc[10] * sc_qss[2];

  // reaction 93: CH2 + CH3 <=> C2H4 + H
  qf[93] = sc[9] * sc_qss[0];
  qr[93] = sc[1] * sc[15];

  // reaction 94: CH2* + CH3 <=> C2H4 + H
  qf[94] = sc[9] * sc_qss[1];
  qr[94] = sc[1] * sc[15];

  // reaction 95: 2 CH3 <=> C2H5 + H
  qf[95] = (sc[9] * sc[9]);
  qr[95] = sc[1] * sc_qss[5];

  // reaction 96: CH3O + H <=> CH2O + H2
  qf[96] = sc[1] * sc_qss[3];
  qr[96] = sc[5] * sc[11];

  // reaction 97: CH3O + H <=> CH3 + OH
  qf[97] = sc[1] * sc_qss[3];
  qr[97] = sc[3] * sc[9];

  // reaction 98: CH3O + H <=> CH2* + H2O
  qf[98] = sc[1] * sc_qss[3];
  qr[98] = sc[6] * sc_qss[1];

  // reaction 99: CH3O + O <=> CH2O + OH
  qf[99] = sc[2] * sc_qss[3];
  qr[99] = sc[3] * sc[11];

  // reaction 100: CH3O + OH <=> CH2O + H2O
  qf[100] = sc[3] * sc_qss[3];
  qr[100] = sc[6] * sc[11];

  // reaction 101: CH3O + O2 <=> CH2O + HO2
  qf[101] = sc[8] * sc_qss[3];
  qr[101] = sc[4] * sc[11];

  // reaction 102: CH4 + H <=> CH3 + H2
  qf[102] = sc[1] * sc[10];
  qr[102] = sc[5] * sc[9];

  // reaction 103: CH4 + O <=> CH3 + OH
  qf[103] = sc[2] * sc[10];
  qr[103] = sc[3] * sc[9];

  // reaction 104: CH4 + OH <=> CH3 + H2O
  qf[104] = sc[3] * sc[10];
  qr[104] = sc[6] * sc[9];

  // reaction 105: CH2 + CH4 <=> 2 CH3
  qf[105] = sc[10] * sc_qss[0];
  qr[105] = (sc[9] * sc[9]);

  // reaction 106: CH2* + CH4 <=> 2 CH3
  qf[106] = sc[10] * sc_qss[1];
  qr[106] = (sc[9] * sc[9]);

  // reaction 107: C2H2 + O <=> CH2 + CO
  qf[107] = sc[2] * sc[14];
  qr[107] = sc[12] * sc_qss[0];

  // reaction 108: C2H2 + OH <=> CH3 + CO
  qf[108] = sc[3] * sc[14];
  qr[108] = sc[9] * sc[12];

  // reaction 109: C2H2 + HCO <=> C2H3 + CO
  qf[109] = sc[14] * sc_qss[2];
  qr[109] = sc[12] * sc_qss[4];

  // reaction 110: C2H2 + CH3 <=> aC3H5
  qf[110] = sc[9] * sc[14];
  qr[110] = sc[18];

  // reaction 111: C2H3 + H <=> C2H2 + H2
  qf[111] = sc[1] * sc_qss[4];
  qr[111] = sc[5] * sc[14];

  // reaction 112: C2H3 + O <=> CH3 + CO
  qf[112] = sc[2] * sc_qss[4];
  qr[112] = sc[9] * sc[12];

  // reaction 113: C2H3 + OH <=> C2H2 + H2O
  qf[113] = sc[3] * sc_qss[4];
  qr[113] = sc[6] * sc[14];

  // reaction 114: C2H3 + O2 <=> C2H2 + HO2
  qf[114] = sc[8] * sc_qss[4];
  qr[114] = sc[4] * sc[14];

  // reaction 115: C2H3 + O2 <=> CH2CHO + O
  qf[115] = sc[8] * sc_qss[4];
  qr[115] = sc[2] * sc[17];

  // reaction 116: C2H3 + O2 <=> CH2O + HCO
  qf[116] = sc[8] * sc_qss[4];
  qr[116] = sc[11] * sc_qss[2];

  // reaction 117: C2H3 + HO2 <=> CH2CHO + OH
  qf[117] = sc[4] * sc_qss[4];
  qr[117] = sc[3] * sc[17];

  // reaction 118: C2H3 + H2O2 <=> C2H4 + HO2
  qf[118] = sc[7] * sc_qss[4];
  qr[118] = sc[4] * sc[15];

  // reaction 119: C2H3 + HCO <=> C2H4 + CO
  qf[119] = sc_qss[2] * sc_qss[4];
  qr[119] = sc[12] * sc[15];

  // reaction 120: C2H3 + HCO <=> C2H3CHO
  qf[120] = sc_qss[2] * sc_qss[4];
  qr[120] = sc[20];

  // reaction 121: C2H3 + CH3 <=> C2H2 + CH4
  qf[121] = sc[9] * sc_qss[4];
  qr[121] = sc[10] * sc[14];

  // reaction 122: C2H3 + CH3 <=> H + aC3H5
  qf[122] = sc[9] * sc_qss[4];
  qr[122] = sc[1] * sc[18];

  // reaction 123: 2 C2H3 <=> C2H2 + C2H4
  qf[123] = sc_qss[4] * sc_qss[4];
  qr[123] = sc[14] * sc[15];

  // reaction 124: CH2CHO <=> CH3 + CO
  qf[124] = sc[17];
  qr[124] = sc[9] * sc[12];

  // reaction 125: CH2CHO + H <=> CH3 + HCO
  qf[125] = sc[1] * sc[17];
  qr[125] = sc[9] * sc_qss[2];

  // reaction 126: CH2CHO + O2 <=> CH2O + CO + OH
  qf[126] = sc[8] * sc[17];
  qr[126] = sc[3] * sc[11] * sc[12];

  // reaction 127: C2H4 + H <=> C2H3 + H2
  qf[127] = sc[1] * sc[15];
  qr[127] = sc[5] * sc_qss[4];

  // reaction 128: C2H4 + O <=> C2H3 + OH
  qf[128] = sc[2] * sc[15];
  qr[128] = sc[3] * sc_qss[4];

  // reaction 129: C2H4 + O <=> CH3 + HCO
  qf[129] = sc[2] * sc[15];
  qr[129] = sc[9] * sc_qss[2];

  // reaction 130: C2H4 + O <=> CH2 + CH2O
  qf[130] = sc[2] * sc[15];
  qr[130] = sc[11] * sc_qss[0];

  // reaction 131: C2H4 + OH <=> C2H3 + H2O
  qf[131] = sc[3] * sc[15];
  qr[131] = sc[6] * sc_qss[4];

  // reaction 132: C2H4 + HCO <=> C2H5 + CO
  qf[132] = sc[15] * sc_qss[2];
  qr[132] = sc[12] * sc_qss[5];

  // reaction 133: C2H4 + CH2 <=> H + aC3H5
  qf[133] = sc[15] * sc_qss[0];
  qr[133] = sc[1] * sc[18];

  // reaction 134: C2H4 + CH2* <=> H + aC3H5
  qf[134] = sc[15] * sc_qss[1];
  qr[134] = sc[1] * sc[18];

  // reaction 135: C2H4 + CH3 <=> C2H3 + CH4
  qf[135] = sc[9] * sc[15];
  qr[135] = sc[10] * sc_qss[4];

  // reaction 136: nC3H7 <=> C2H4 + CH3
  qf[136] = sc_qss[6];
  qr[136] = sc[9] * sc[15];

  // reaction 137: C2H4 + O2 <=> C2H3 + HO2
  qf[137] = sc[8] * sc[15];
  qr[137] = sc[4] * sc_qss[4];

  // reaction 138: C2H3 + C2H4 <=> C4H7
  qf[138] = sc[15] * sc_qss[4];
  qr[138] = sc[21];

  // reaction 139: C2H5 + H <=> C2H4 + H2
  qf[139] = sc[1] * sc_qss[5];
  qr[139] = sc[5] * sc[15];

  // reaction 140: C2H5 + O <=> CH2O + CH3
  qf[140] = sc[2] * sc_qss[5];
  qr[140] = sc[9] * sc[11];

  // reaction 141: C2H5 + O2 <=> C2H4 + HO2
  qf[141] = sc[8] * sc_qss[5];
  qr[141] = sc[4] * sc[15];

  // reaction 142: C2H5 + HO2 <=> C2H6 + O2
  qf[142] = sc[4] * sc_qss[5];
  qr[142] = sc[8] * sc[16];

  // reaction 143: C2H5 + HO2 <=> C2H4 + H2O2
  qf[143] = sc[4] * sc_qss[5];
  qr[143] = sc[7] * sc[15];

  // reaction 144: C2H5 + HO2 <=> CH2O + CH3 + OH
  qf[144] = sc[4] * sc_qss[5];
  qr[144] = sc[3] * sc[9] * sc[11];

  // reaction 145: C2H5 + H2O2 <=> C2H6 + HO2
  qf[145] = sc[7] * sc_qss[5];
  qr[145] = sc[4] * sc[16];

  // reaction 146: C2H3 + C2H5 <=> CH3 + aC3H5
  qf[146] = sc_qss[4] * sc_qss[5];
  qr[146] = sc[9] * sc[18];

  // reaction 147: C2H6 + H <=> C2H5 + H2
  qf[147] = sc[1] * sc[16];
  qr[147] = sc[5] * sc_qss[5];

  // reaction 148: C2H6 + O <=> C2H5 + OH
  qf[148] = sc[2] * sc[16];
  qr[148] = sc[3] * sc_qss[5];

  // reaction 149: C2H6 + OH <=> C2H5 + H2O
  qf[149] = sc[3] * sc[16];
  qr[149] = sc[6] * sc_qss[5];

  // reaction 150: C2H6 + CH2* <=> C2H5 + CH3
  qf[150] = sc[16] * sc_qss[1];
  qr[150] = sc[9] * sc_qss[5];

  // reaction 151: C2H6 + CH3 <=> C2H5 + CH4
  qf[151] = sc[9] * sc[16];
  qr[151] = sc[10] * sc_qss[5];

  // reaction 152: O + aC3H5 <=> C2H3CHO + H
  qf[152] = sc[2] * sc[18];
  qr[152] = sc[1] * sc[20];

  // reaction 153: OH + aC3H5 <=> C2H3CHO + 2 H
  qf[153] = sc[3] * sc[18];
  qr[153] = (sc[1] * sc[1]) * sc[20];

  // reaction 154: O2 + aC3H5 <=> C2H3CHO + OH
  qf[154] = sc[8] * sc[18];
  qr[154] = sc[3] * sc[20];

  // reaction 155: HO2 + aC3H5 <=> C3H6 + O2
  qf[155] = sc[4] * sc[18];
  qr[155] = sc[8] * sc[19];

  // reaction 156: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  qf[156] = sc[4] * sc[18];
  qr[156] = sc[3] * sc[11] * sc_qss[4];

  // reaction 157: HCO + aC3H5 <=> C3H6 + CO
  qf[157] = sc[18] * sc_qss[2];
  qr[157] = sc[12] * sc[19];

  // reaction 158: C3H6 + H <=> C2H4 + CH3
  qf[158] = sc[1] * sc[19];
  qr[158] = sc[9] * sc[15];

  // reaction 159: C3H6 + H <=> H2 + aC3H5
  qf[159] = sc[1] * sc[19];
  qr[159] = sc[5] * sc[18];

  // reaction 160: C3H6 + O <=> C2H3CHO + 2 H
  qf[160] = sc[2] * sc[19];
  qr[160] = (sc[1] * sc[1]) * sc[20];

  // reaction 161: C3H6 + O => C2H5 + HCO
  qf[161] = sc[2] * sc[19];
  qr[161] = 0.0;

  // reaction 162: C3H6 + O <=> OH + aC3H5
  qf[162] = sc[2] * sc[19];
  qr[162] = sc[3] * sc[18];

  // reaction 163: C3H6 + OH <=> H2O + aC3H5
  qf[163] = sc[3] * sc[19];
  qr[163] = sc[6] * sc[18];

  // reaction 164: C3H6 + HO2 <=> H2O2 + aC3H5
  qf[164] = sc[4] * sc[19];
  qr[164] = sc[7] * sc[18];

  // reaction 165: C3H6 + CH3 <=> CH4 + aC3H5
  qf[165] = sc[9] * sc[19];
  qr[165] = sc[10] * sc[18];

  // reaction 166: C2H3CHO + H <=> C2H4 + HCO
  qf[166] = sc[1] * sc[20];
  qr[166] = sc[15] * sc_qss[2];

  // reaction 167: C2H3CHO + O <=> C2H3 + CO + OH
  qf[167] = sc[2] * sc[20];
  qr[167] = sc[3] * sc[12] * sc_qss[4];

  // reaction 168: C2H3CHO + OH <=> C2H3 + CO + H2O
  qf[168] = sc[3] * sc[20];
  qr[168] = sc[6] * sc[12] * sc_qss[4];

  // reaction 169: H + nC3H7 <=> C2H5 + CH3
  qf[169] = sc[1] * sc_qss[6];
  qr[169] = sc[9] * sc_qss[5];

  // reaction 170: H + nC3H7 <=> C3H6 + H2
  qf[170] = sc[1] * sc_qss[6];
  qr[170] = sc[5] * sc[19];

  // reaction 171: O + nC3H7 <=> C2H5 + CH2O
  qf[171] = sc[2] * sc_qss[6];
  qr[171] = sc[11] * sc_qss[5];

  // reaction 172: OH + nC3H7 <=> C3H6 + H2O
  qf[172] = sc[3] * sc_qss[6];
  qr[172] = sc[6] * sc[19];

  // reaction 173: O2 + nC3H7 <=> C3H6 + HO2
  qf[173] = sc[8] * sc_qss[6];
  qr[173] = sc[4] * sc[19];

  // reaction 174: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  qf[174] = sc[4] * sc_qss[6];
  qr[174] = sc[3] * sc[11] * sc_qss[5];

  // reaction 175: CH3 + nC3H7 <=> C3H6 + CH4
  qf[175] = sc[9] * sc_qss[6];
  qr[175] = sc[10] * sc[19];

  // reaction 176: C4H7 + H <=> CH3 + aC3H5
  qf[176] = sc[1] * sc[21];
  qr[176] = sc[9] * sc[18];

  // reaction 177: C4H7 + HO2 <=> CH2O + OH + aC3H5
  qf[177] = sc[4] * sc[21];
  qr[177] = sc[3] * sc[11] * sc[18];

  // reaction 178: C4H7 + HCO <=> C4H81 + CO
  qf[178] = sc[21] * sc_qss[2];
  qr[178] = sc[12] * sc[22];

  // reaction 179: C4H81 + H <=> C2H4 + C2H5
  qf[179] = sc[1] * sc[22];
  qr[179] = sc[15] * sc_qss[5];

  // reaction 180: C4H81 + H <=> C3H6 + CH3
  qf[180] = sc[1] * sc[22];
  qr[180] = sc[9] * sc[19];

  // reaction 181: C4H81 + H <=> C4H7 + H2
  qf[181] = sc[1] * sc[22];
  qr[181] = sc[5] * sc[21];

  // reaction 182: C4H81 + O => HCO + nC3H7
  qf[182] = sc[2] * sc[22];
  qr[182] = 0.0;

  // reaction 183: C4H81 + O <=> C4H7 + OH
  qf[183] = sc[2] * sc[22];
  qr[183] = sc[3] * sc[21];

  // reaction 184: C4H81 + O <=> C4H7 + OH
  qf[184] = sc[2] * sc[22];
  qr[184] = sc[3] * sc[21];

  // reaction 185: C4H81 + OH <=> C4H7 + H2O
  qf[185] = sc[3] * sc[22];
  qr[185] = sc[6] * sc[21];

  // reaction 186: C4H81 + O2 <=> C4H7 + HO2
  qf[186] = sc[8] * sc[22];
  qr[186] = sc[4] * sc[21];

  // reaction 187: C4H81 + HO2 <=> C4H7 + H2O2
  qf[187] = sc[4] * sc[22];
  qr[187] = sc[7] * sc[21];

  // reaction 188: C4H81 + CH3 <=> C4H7 + CH4
  qf[188] = sc[9] * sc[22];
  qr[188] = sc[10] * sc[21];

  // reaction 189: H + pC4H9 => 2 C2H5
  qf[189] = sc[1] * sc_qss[7];
  qr[189] = 0.0;

  // reaction 190: H + pC4H9 <=> C4H81 + H2
  qf[190] = sc[1] * sc_qss[7];
  qr[190] = sc[5] * sc[22];

  // reaction 191: O + pC4H9 <=> CH2O + nC3H7
  qf[191] = sc[2] * sc_qss[7];
  qr[191] = sc[11] * sc_qss[6];

  // reaction 192: OH + pC4H9 <=> C4H81 + H2O
  qf[192] = sc[3] * sc_qss[7];
  qr[192] = sc[6] * sc[22];

  // reaction 193: O2 + pC4H9 <=> C4H81 + HO2
  qf[193] = sc[8] * sc_qss[7];
  qr[193] = sc[4] * sc[22];

  // reaction 194: HO2 + pC4H9 <=> CH2O + OH + nC3H7
  qf[194] = sc[4] * sc_qss[7];
  qr[194] = sc[3] * sc[11] * sc_qss[6];

  // reaction 195: CH3 + pC4H9 <=> C4H81 + CH4
  qf[195] = sc[9] * sc_qss[7];
  qr[195] = sc[10] * sc[22];

  // reaction 196: C5H9 => C2H4 + aC3H5
  qf[196] = sc[23];
  qr[196] = 0.0;

  // reaction 197: C5H9 => C2H3 + C3H6
  qf[197] = sc[23];
  qr[197] = 0.0;

  // reaction 198: C5H10 + H <=> C2H4 + nC3H7
  qf[198] = sc[1] * sc[24];
  qr[198] = sc[15] * sc_qss[6];

  // reaction 199: C5H10 + H <=> C2H5 + C3H6
  qf[199] = sc[1] * sc[24];
  qr[199] = sc[19] * sc_qss[5];

  // reaction 200: C2H4 + nC3H7 <=> PXC5H11
  qf[200] = sc[15] * sc_qss[6];
  qr[200] = sc_qss[8];

  // reaction 201: C6H12 + H <=> C2H4 + pC4H9
  qf[201] = sc[1] * sc[25];
  qr[201] = sc[15] * sc_qss[7];

  // reaction 202: C6H12 + H <=> C3H6 + nC3H7
  qf[202] = sc[1] * sc[25];
  qr[202] = sc[19] * sc_qss[6];

  // reaction 203: C2H4 + pC4H9 <=> PXC6H13
  qf[203] = sc[15] * sc_qss[7];
  qr[203] = sc_qss[9];

  // reaction 204: C7H14 + H <=> C2H4 + PXC5H11
  qf[204] = sc[1] * sc[26];
  qr[204] = sc[15] * sc_qss[8];

  // reaction 205: C7H14 + H <=> C3H6 + pC4H9
  qf[205] = sc[1] * sc[26];
  qr[205] = sc[19] * sc_qss[7];

  // reaction 206: C2H4 + PXC5H11 <=> PXC7H15
  qf[206] = sc[15] * sc_qss[8];
  qr[206] = sc_qss[10];

  // reaction 207: C8H16 + H <=> C2H4 + PXC6H13
  qf[207] = sc[1] * sc[27];
  qr[207] = sc[15] * sc_qss[9];

  // reaction 208: C8H16 + H <=> C3H6 + PXC5H11
  qf[208] = sc[1] * sc[27];
  qr[208] = sc[19] * sc_qss[8];

  // reaction 209: C2H4 + PXC6H13 <=> PXC8H17
  qf[209] = sc[15] * sc_qss[9];
  qr[209] = sc_qss[11];

  // reaction 210: C9H18 + H <=> C2H4 + PXC7H15
  qf[210] = sc[1] * sc[28];
  qr[210] = sc[15] * sc_qss[10];

  // reaction 211: C9H18 + H <=> C3H6 + PXC6H13
  qf[211] = sc[1] * sc[28];
  qr[211] = sc[19] * sc_qss[9];

  // reaction 212: C2H4 + PXC7H15 <=> PXC9H19
  qf[212] = sc[15] * sc_qss[10];
  qr[212] = sc[29];

  // reaction 213: C10H20 + H <=> C2H4 + PXC8H17
  qf[213] = sc[1] * sc[30];
  qr[213] = sc[15] * sc_qss[11];

  // reaction 214: C10H20 + H <=> C3H6 + PXC7H15
  qf[214] = sc[1] * sc[30];
  qr[214] = sc[19] * sc_qss[10];

  // reaction 215: C2H4 + PXC8H17 <=> PXC10H21
  qf[215] = sc[15] * sc_qss[11];
  qr[215] = sc_qss[12];

  // reaction 216: C12H24 <=> C5H9 + PXC7H15
  qf[216] = sc[31];
  qr[216] = sc[23] * sc_qss[10];

  // reaction 217: C2H4 + PXC10H21 <=> PXC12H25
  qf[217] = sc[15] * sc_qss[12];
  qr[217] = sc_qss[13];

  // reaction 218: PXC12H25 <=> S3XC12H25
  qf[218] = sc_qss[13];
  qr[218] = sc_qss[15];

  // reaction 219: C3H6 + PXC9H19 <=> SXC12H25
  qf[219] = sc[19] * sc[29];
  qr[219] = sc_qss[14];

  // reaction 220: C4H81 + PXC8H17 <=> SXC12H25
  qf[220] = sc[22] * sc_qss[11];
  qr[220] = sc_qss[14];

  // reaction 221: C5H10 + PXC7H15 <=> S3XC12H25
  qf[221] = sc[24] * sc_qss[10];
  qr[221] = sc_qss[15];

  // reaction 222: C10H20 + C2H5 <=> S3XC12H25
  qf[222] = sc[30] * sc_qss[5];
  qr[222] = sc_qss[15];

  // reaction 223: C6H12 + PXC6H13 <=> S3XC12H25
  qf[223] = sc[25] * sc_qss[9];
  qr[223] = sc_qss[15];

  // reaction 224: C9H18 + nC3H7 <=> S3XC12H25
  qf[224] = sc[28] * sc_qss[6];
  qr[224] = sc_qss[15];

  // reaction 225: C7H14 + PXC5H11 <=> S3XC12H25
  qf[225] = sc[26] * sc_qss[8];
  qr[225] = sc_qss[15];

  // reaction 226: C8H16 + pC4H9 <=> S3XC12H25
  qf[226] = sc[27] * sc_qss[7];
  qr[226] = sc_qss[15];

  // reaction 227: C2H5 + PXC10H21 <=> NC12H26
  qf[227] = sc_qss[5] * sc_qss[12];
  qr[227] = sc[0];

  // reaction 228: PXC9H19 + nC3H7 <=> NC12H26
  qf[228] = sc[29] * sc_qss[6];
  qr[228] = sc[0];

  // reaction 229: PXC8H17 + pC4H9 <=> NC12H26
  qf[229] = sc_qss[7] * sc_qss[11];
  qr[229] = sc[0];

  // reaction 230: PXC5H11 + PXC7H15 <=> NC12H26
  qf[230] = sc_qss[8] * sc_qss[10];
  qr[230] = sc[0];

  // reaction 231: 2 PXC6H13 <=> NC12H26
  qf[231] = sc_qss[9] * sc_qss[9];
  qr[231] = sc[0];

  // reaction 232: H + NC12H26 <=> H2 + PXC12H25
  qf[232] = sc[0] * sc[1];
  qr[232] = sc[5] * sc_qss[13];

  // reaction 233: H + NC12H26 <=> H2 + SXC12H25
  qf[233] = sc[0] * sc[1];
  qr[233] = sc[5] * sc_qss[14];

  // reaction 234: H + NC12H26 <=> H2 + S3XC12H25
  qf[234] = sc[0] * sc[1];
  qr[234] = sc[5] * sc_qss[15];

  // reaction 235: NC12H26 + O <=> OH + PXC12H25
  qf[235] = sc[0] * sc[2];
  qr[235] = sc[3] * sc_qss[13];

  // reaction 236: NC12H26 + O <=> OH + SXC12H25
  qf[236] = sc[0] * sc[2];
  qr[236] = sc[3] * sc_qss[14];

  // reaction 237: NC12H26 + O <=> OH + S3XC12H25
  qf[237] = sc[0] * sc[2];
  qr[237] = sc[3] * sc_qss[15];

  // reaction 238: NC12H26 + OH <=> H2O + PXC12H25
  qf[238] = sc[0] * sc[3];
  qr[238] = sc[6] * sc_qss[13];

  // reaction 239: NC12H26 + OH <=> H2O + SXC12H25
  qf[239] = sc[0] * sc[3];
  qr[239] = sc[6] * sc_qss[14];

  // reaction 240: NC12H26 + OH <=> H2O + S3XC12H25
  qf[240] = sc[0] * sc[3];
  qr[240] = sc[6] * sc_qss[15];

  // reaction 241: NC12H26 + O2 <=> HO2 + PXC12H25
  qf[241] = sc[0] * sc[8];
  qr[241] = sc[4] * sc_qss[13];

  // reaction 242: NC12H26 + O2 <=> HO2 + SXC12H25
  qf[242] = sc[0] * sc[8];
  qr[242] = sc[4] * sc_qss[14];

  // reaction 243: NC12H26 + O2 <=> HO2 + S3XC12H25
  qf[243] = sc[0] * sc[8];
  qr[243] = sc[4] * sc_qss[15];

  // reaction 244: HO2 + NC12H26 <=> H2O2 + PXC12H25
  qf[244] = sc[0] * sc[4];
  qr[244] = sc[7] * sc_qss[13];

  // reaction 245: HO2 + NC12H26 <=> H2O2 + SXC12H25
  qf[245] = sc[0] * sc[4];
  qr[245] = sc[7] * sc_qss[14];

  // reaction 246: HO2 + NC12H26 <=> H2O2 + S3XC12H25
  qf[246] = sc[0] * sc[4];
  qr[246] = sc[7] * sc_qss[15];

  // reaction 247: CH3 + NC12H26 <=> CH4 + PXC12H25
  qf[247] = sc[0] * sc[9];
  qr[247] = sc[10] * sc_qss[13];

  // reaction 248: CH3 + NC12H26 <=> CH4 + SXC12H25
  qf[248] = sc[0] * sc[9];
  qr[248] = sc[10] * sc_qss[14];

  // reaction 249: CH3 + NC12H26 <=> CH4 + S3XC12H25
  qf[249] = sc[0] * sc[9];
  qr[249] = sc[10] * sc_qss[15];

  // reaction 250: O2 + PXC12H25 => C12H25O2
  qf[250] = sc[8] * sc_qss[13];
  qr[250] = 0.0;

  // reaction 251: C12H25O2 => O2 + PXC12H25
  qf[251] = sc[32];
  qr[251] = 0.0;

  // reaction 252: O2 + SXC12H25 => C12H25O2
  qf[252] = sc[8] * sc_qss[14];
  qr[252] = 0.0;

  // reaction 253: C12H25O2 => O2 + SXC12H25
  qf[253] = sc[32];
  qr[253] = 0.0;

  // reaction 254: O2 + S3XC12H25 => C12H25O2
  qf[254] = sc[8] * sc_qss[15];
  qr[254] = 0.0;

  // reaction 255: C12H25O2 => O2 + S3XC12H25
  qf[255] = sc[32];
  qr[255] = 0.0;

  // reaction 256: C12H25O2 => C12OOH
  qf[256] = sc[32];
  qr[256] = 0.0;

  // reaction 257: C12OOH => C12H25O2
  qf[257] = sc_qss[16];
  qr[257] = 0.0;

  // reaction 258: O2 + PXC12H25 => C12H24 + HO2
  qf[258] = sc[8] * sc_qss[13];
  qr[258] = 0.0;

  // reaction 259: C12H24 + HO2 => O2 + PXC12H25
  qf[259] = sc[4] * sc[31];
  qr[259] = 0.0;

  // reaction 260: O2 + SXC12H25 => C12H24 + HO2
  qf[260] = sc[8] * sc_qss[14];
  qr[260] = 0.0;

  // reaction 261: C12H24 + HO2 => O2 + SXC12H25
  qf[261] = sc[4] * sc[31];
  qr[261] = 0.0;

  // reaction 262: O2 + S3XC12H25 => C12H24 + HO2
  qf[262] = sc[8] * sc_qss[15];
  qr[262] = 0.0;

  // reaction 263: C12H24 + HO2 => O2 + S3XC12H25
  qf[263] = sc[4] * sc[31];
  qr[263] = 0.0;

  // reaction 264: C12OOH + O2 => O2C12H24OOH
  qf[264] = sc[8] * sc_qss[16];
  qr[264] = 0.0;

  // reaction 265: O2C12H24OOH => C12OOH + O2
  qf[265] = sc_qss[17];
  qr[265] = 0.0;

  // reaction 266: O2C12H24OOH <=> OC12H23OOH + OH
  qf[266] = sc_qss[17];
  qr[266] = sc[3] * sc[33];

  // reaction 267: OC12H23OOH => 3 C2H4 + C2H5 + 2 CH2CHO + OH
  qf[267] = sc[33];
  qr[267] = 0.0;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 35; ++i) {
    mixture += sc[i];
  }

  for (int i = 0; i < 18; ++i) {
    mixture += sc_qss[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[35];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[18];
  gibbs_qss(g_RT_qss, tc);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  H + O2 (+M) <=> HO2 (+M)
  k_f = 5116000 * exp((0.44) * tc[0]);
  Corr = mixture + (10.89) * sc[6] + (-0.15) * sc[8] +
         (0.0900000000000001) * sc[12] + (1.18) * sc[13];
  redP = Corr / k_f * 63280000 * exp(-1.4 * tc[0]);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent =
    log10((0.5) * exp(-tc[1] * 1e+30) + 0.5 * exp(-tc[1] * 1e-30) + 0.0);
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(g_RT[1] - g_RT[4] + g_RT[8])) * (refC);
  // reaction 1:  2 OH (+M) <=> H2O2 (+M)
  k_f = 111000000 * exp((-0.37) * tc[0]);
  Corr = mixture + sc[5] + (5) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
  redP = Corr / k_f * 201000 * exp(-0.584 * tc[0] - (-1153.87581469022) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2654) * exp(-tc[1] * 0.0106382978723404) +
    0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(2.000000 * g_RT[3] - g_RT[7])) * (refC);
  // reaction 2:  CO + H2 (+M) <=> CH2O (+M)
  k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - (42446.3257606281) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0679999999999999) * exp(-tc[1] * 0.0050761421319797) +
    0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(g_RT[5] - g_RT[11] + g_RT[12])) * (refC);
  // reaction 3:  H + HCO (+M) <=> CH2O (+M)
  k_f = 1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP =
    Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - (717.083748771726) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2176) * exp(-tc[1] * 0.003690036900369) +
    0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(g_RT[1] - g_RT[11] + g_RT_qss[2])) * (refC);
  // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
  k_f = 25000000000 * exp((-0.8) * tc[0]);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - (618.956498939805) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.32) * exp(-tc[1] * 0.0128205128205128) +
    0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(g_RT[1] - g_RT[9] + g_RT_qss[0])) * (refC);
  // reaction 5:  CH2O + H (+M) <=> CH3O (+M)
  k_f = 540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - (2797.88466187424) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.242) * exp(-tc[1] * 0.0106382978723404) +
    0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(g_RT[1] + g_RT[11] - g_RT_qss[3])) * (refC);
  // reaction 6:  CH3 + H (+M) <=> CH4 (+M)
  k_f = 12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP =
    Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - (1227.84866456352) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.217) * exp(-tc[1] * 0.0135135135135135) +
    0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(g_RT[1] + g_RT[9] - g_RT[10])) * (refC);
  // reaction 7:  2 CH3 (+M) <=> C2H6 (+M)
  k_f = 21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - (3130.00766130536) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4675) * exp(-tc[1] * 0.00662251655629139) +
    0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(2.000000 * g_RT[9] - g_RT[16])) * (refC);
  // reaction 8:  C2H3 (+M) <=> C2H2 + H (+M)
  k_f = 38600000 * exp((1.62) * tc[0] - (18643.2716780664) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[14] + (2) * sc[15] + (2) * sc[16];
  redP = Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - (18014.5125184767) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (-0.9816) * exp(-tc[1] * 0.000185745862510913) +
    1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[14] + g_RT_qss[4])) * (refCinv);
  // reaction 9:  C2H3 + H (+M) <=> C2H4 (+M)
  k_f = 6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[14] + (2) * sc[15] + (2) * sc[16];
  redP = Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - (1670.67933047167) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.218) * exp(-tc[1] * 0.00481927710843374) +
    0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[4])) * (refC);
  // reaction 10:  C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f = 25000000;
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[14] + (2) * sc[15] + (2) * sc[16];
  redP =
    Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - (4916.32618157895) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.825) * exp(-tc[1] * 0.000745934656124124) +
    0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(g_RT[9] - g_RT[19] + g_RT_qss[4])) * (refC);
  // reaction 11:  C2H4 + H (+M) <=> C2H5 (+M)
  k_f = 3975 * exp((1.28) * tc[0] - (649.466525387545) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 4715000 * exp(-(380.059419015673) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.24) * exp(-tc[1] * 0.025) + 0.76 * exp(-tc[1] * 0.000975609756097561) +
    0.0);
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(g_RT[1] + g_RT[15] - g_RT_qss[5])) * (refC);
  // reaction 12:  C2H5 + H (+M) <=> C2H6 (+M)
  k_f = 521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - (3364.00341090455) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.1578) * exp(-tc[1] * 0.008) +
    0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(g_RT[1] - g_RT[16] + g_RT_qss[5])) * (refC);
  // reaction 13:  C2H3 + C2H5 (+M) <=> C4H81 (+M)
  k_f = 15000000;
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 1.55e+44 * exp(-11.79 * tc[0] - (4521.1501339225) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.802) * exp(-tc[1] * 0.000439000834101585) +
    0.198 * exp(-tc[1] * 1.66666666666667e-05) + exp(-5723.2 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(-g_RT[22] + g_RT_qss[4] + g_RT_qss[5])) * (refC);
  // reaction 14:  H + aC3H5 (+M) <=> C3H6 (+M)
  k_f = 200000000;
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - (3003.09641818941) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.98) * exp(-tc[1] * 0.000911909538573774) +
    0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(g_RT[1] + g_RT[18] - g_RT[19])) * (refC);
  // reaction 15:  CH3 + aC3H5 (+M) <=> C4H81 (+M)
  k_f = 100000000 * exp((-0.32) * tc[0] - (-131.993731440578) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 3.91e+48 * exp(-12.81 * tc[0] - (3145.1041612795) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.896) * exp(-tc[1] * 0.00062266500622665) +
    0.104 * exp(-tc[1] * 1.66666666666667e-05) + exp(-6118.4 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(g_RT[9] + g_RT[18] - g_RT[22])) * (refC);
  // reaction 16:  C3H6 + H (+M) <=> nC3H7 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[16] *= Corr * k_f;
  qr[16] *= Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT_qss[6])) * (refC);
  // reaction 17:  C4H7 + H (+M) <=> C4H81 (+M)
  k_f = 36000000;
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 3.01e+36 * exp(-9.32 * tc[0] - (2935.56474163841) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.502) * exp(-tc[1] * 0.00076103500761035) +
    0.498 * exp(-tc[1] * 0.00076103500761035) + exp(-50000 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[17] *= Corr * k_f;
  qr[17] *= Corr * k_f * exp(-(g_RT[1] + g_RT[21] - g_RT[22])) * (refC);
  // reaction 18:  C4H81 + H (+M) <=> pC4H9 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[18] *= Corr * k_f;
  qr[18] *= Corr * k_f * exp(-(g_RT[1] + g_RT[22] - g_RT_qss[7])) * (refC);
  // reaction 19:  C5H10 + H (+M) <=> PXC5H11 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[19] *= Corr * k_f;
  qr[19] *= Corr * k_f * exp(-(g_RT[1] + g_RT[24] - g_RT_qss[8])) * (refC);
  // reaction 20:  C6H12 + H (+M) <=> PXC6H13 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[20] *= Corr * k_f;
  qr[20] *= Corr * k_f * exp(-(g_RT[1] + g_RT[25] - g_RT_qss[9])) * (refC);
  // reaction 21:  C7H14 + H (+M) <=> PXC7H15 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[21] *= Corr * k_f;
  qr[21] *= Corr * k_f * exp(-(g_RT[1] + g_RT[26] - g_RT_qss[10])) * (refC);
  // reaction 22:  C8H16 + H (+M) <=> PXC8H17 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[22] *= Corr * k_f;
  qr[22] *= Corr * k_f * exp(-(g_RT[1] + g_RT[27] - g_RT_qss[11])) * (refC);
  // reaction 23:  C9H18 + H (+M) <=> PXC9H19 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[23] *= Corr * k_f;
  qr[23] *= Corr * k_f * exp(-(g_RT[1] + g_RT[28] - g_RT[29])) * (refC);
  // reaction 24:  C10H20 + H (+M) <=> PXC10H21 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] + sc[13] +
         (2) * sc[16];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[24] *= Corr * k_f;
  qr[24] *= Corr * k_f * exp(-(g_RT[1] + g_RT[30] - g_RT_qss[12])) * (refC);
  // reaction 25:  CO + O (+M) <=> CO2 (+M)
  k_f = 13620 * exp(-(1199.66853127845) * invT);
  Corr = mixture + sc[5] + (11) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
  redP =
    Corr / k_f * 1173000000000 * exp(-2.79 * tc[0] - (2108.98104638758) * invT);
  Corr = redP / (1. + redP);
  qf[25] *= Corr * k_f;
  qr[25] *= Corr * k_f * exp(-(g_RT[2] + g_RT[12] - g_RT[13])) * (refC);
  // reaction 26:  2 H + M <=> H2 + M
  k_f = 1780000 * exp((-1) * tc[0]);
  Corr = mixture + (-1) * sc[5] + (-1) * sc[6] + (-1) * sc[13];
  qf[26] *= Corr * k_f;
  qr[26] *= Corr * k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC);
  // reaction 27:  H + OH + M <=> H2O + M
  k_f = 44000000000 * exp((-2) * tc[0]);
  Corr = mixture + sc[5] + (5.3) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
  qf[27] *= Corr * k_f;
  qr[27] *= Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 28:  2 O + M <=> O2 + M
  k_f = 120000 * exp((-1) * tc[0]);
  Corr =
    mixture + (1.4) * sc[5] + (14.4) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
  qf[28] *= Corr * k_f;
  qr[28] *= Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[8])) * (refC);
  // reaction 29:  2 H + H2 <=> H2 + H2
  k_f = 90000 * exp((-0.6) * tc[0]);
  qf[29] *= k_f;
  qr[29] *= k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC);
  // reaction 30:  2 H + H2O <=> H2 + H2O
  k_f = 56240000 * exp((-1.25) * tc[0]);
  qf[30] *= k_f;
  qr[30] *= k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC);
  // reaction 31:  2 H + CO2 <=> H2 + CO2
  k_f = 550000000 * exp((-2) * tc[0]);
  qf[31] *= k_f;
  qr[31] *= k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC);
  // reaction 32:  H + O + M <=> OH + M
  k_f = 9428000 * exp((-1) * tc[0]);
  Corr = mixture + sc[5] + (11) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
  qf[32] *= Corr * k_f;
  qr[32] *= Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[3])) * (refC);
  // reaction 33:  HCO + M <=> CO + H + M
  k_f = 187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  Corr = mixture + sc[5] + (-1) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
  qf[33] *= Corr * k_f;
  qr[33] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[12] + g_RT_qss[2])) * (refCinv);
  // reaction 34:  HCO + H2O <=> CO + H + H2O
  k_f = 2244000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  qf[34] *= k_f;
  qr[34] *= k_f * exp(-(-g_RT[1] - g_RT[12] + g_RT_qss[2])) * (refCinv);
  // reaction 35:  H + O2 <=> O + OH
  k_f = 97560000 * exp(-(7468.87259020676) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[3] + g_RT[8]));
  // reaction 36:  H2 + O <=> H + OH
  k_f = 0.04589 * exp((2.7) * tc[0] - (3150.13632793755) * invT);
  qf[36] *= k_f;
  qr[36] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[3] + g_RT[5]));
  // reaction 37:  H2 + OH <=> H + H2O
  k_f = 102.4 * exp((1.6) * tc[0] - (1659.74946449039) * invT);
  qf[37] *= k_f;
  qr[37] *= k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[5] - g_RT[6]));
  // reaction 38:  2 OH <=> H2O + O
  k_f = 0.03973 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[3] - g_RT[6]));
  // reaction 39:  H + HO2 <=> 2 OH
  k_f = 74850000 * exp(-(148.448916412392) * invT);
  qf[39] *= k_f;
  qr[39] *= k_f * exp(-(g_RT[1] - 2.000000 * g_RT[3] + g_RT[4]));
  // reaction 40:  H2 + O2 <=> H + HO2
  k_f = 0.5916 * exp((2.433) * tc[0] - (26923.0980538841) * invT);
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(-g_RT[1] - g_RT[4] + g_RT[5] + g_RT[8]));
  // reaction 41:  HO2 + OH <=> H2O + O2
  k_f = 28910000 * exp(-(-252.569476734047) * invT);
  qf[41] *= k_f;
  qr[41] *= k_f * exp(-(g_RT[3] + g_RT[4] - g_RT[6] - g_RT[8]));
  // reaction 42:  H + HO2 <=> H2O + O
  k_f = 3970000 * exp(-(337.658382754967) * invT);
  qf[42] *= k_f;
  qr[42] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[4] - g_RT[6]));
  // reaction 43:  HO2 + O <=> O2 + OH
  k_f = 40000000;
  qf[43] *= k_f;
  qr[43] *= k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[4] - g_RT[8]));
  // reaction 44:  2 HO2 <=> H2O2 + O2
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(2.000000 * g_RT[4] - g_RT[7] - g_RT[8]));
  // reaction 45:  2 HO2 <=> H2O2 + O2
  k_f = 365800000 * exp(-(6038.59998965664) * invT);
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(2.000000 * g_RT[4] - g_RT[7] - g_RT[8]));
  // reaction 46:  H + H2O2 <=> H2O + OH
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  qf[46] *= k_f;
  qr[46] *= k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[6] + g_RT[7]));
  // reaction 47:  H + H2O2 <=> H2 + HO2
  k_f = 6.05 * exp((2) * tc[0] - (2616.72666218454) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7]));
  // reaction 48:  H2O2 + O <=> HO2 + OH
  k_f = 9.63 * exp((2) * tc[0] - (1997.77016324474) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[7]));
  // reaction 49:  H2O2 + OH <=> H2O + HO2
  k_f = 2000000 * exp(-(214.873516298615) * invT);
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7]));
  // reaction 50:  H2O2 + OH <=> H2O + HO2
  k_f = 2.67e+35 * exp((-7) * tc[0] - (18920.9466342575) * invT);
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7]));
  // reaction 51:  CO + OH <=> CO2 + H
  k_f = 0.07046 * exp((2.053) * tc[0] - (-178.979071526765) * invT);
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[12] - g_RT[13]));
  // reaction 52:  CO + OH <=> CO2 + H
  k_f = 5757000 * exp((-0.664) * tc[0] - (166.98238621398) * invT);
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[12] - g_RT[13]));
  // reaction 53:  CO + HO2 <=> CO2 + OH
  k_f = 0.157 * exp((2.18) * tc[0] - (9029.02038003442) * invT);
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[12] - g_RT[13]));
  // reaction 54:  CO + O2 <=> CO2 + O
  k_f = 1119000 * exp(-(24003.4349588851) * invT);
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(-g_RT[2] + g_RT[8] + g_RT[12] - g_RT[13]));
  // reaction 55:  H + HCO <=> CO + H2
  k_f = 120000000;
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[12] + g_RT_qss[2]));
  // reaction 56:  HCO + O <=> CO + OH
  k_f = 30000000;
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[12] + g_RT_qss[2]));
  // reaction 57:  HCO + O <=> CO2 + H
  k_f = 30000000;
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[13] + g_RT_qss[2]));
  // reaction 58:  HCO + OH <=> CO + H2O
  k_f = 30200000;
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[2]));
  // reaction 59:  HCO + O2 <=> CO + HO2
  k_f = 12040 * exp((0.807) * tc[0] - (-365.838516040031) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[12] + g_RT_qss[2]));
  // reaction 60:  CH2 + O <=> H + HCO
  k_f = 80000000;
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[0] - g_RT_qss[2]));
  // reaction 61:  CH2 + OH <=> CH2O + H
  k_f = 20000000;
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[0]));
  // reaction 62:  CH2 + H2 <=> CH3 + H
  k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(-g_RT[1] + g_RT[5] - g_RT[9] + g_RT_qss[0]));
  // reaction 63:  CH2 + O2 <=> HCO + OH
  k_f = 10600000 * exp(-(754.82499870708) * invT);
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT_qss[0] - g_RT_qss[2]));
  // reaction 64:  CH2 + O2 <=> CO2 + 2 H
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  qf[64] *= k_f;
  qr[64] *= k_f *
            exp(-(-2.000000 * g_RT[1] + g_RT[8] - g_RT[13] + g_RT_qss[0])) *
            (refCinv);
  // reaction 65:  CH2 + HO2 <=> CH2O + OH
  k_f = 20000000;
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] + g_RT_qss[0]));
  // reaction 66:  2 CH2 <=> C2H2 + H2
  k_f = 32000000;
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(-g_RT[5] - g_RT[14] + 2.000000 * g_RT_qss[0]));
  // reaction 67:  CH2* + N2 <=> CH2 + N2
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(g_RT[34] - g_RT[34] - g_RT_qss[0] + g_RT_qss[1]));
  // reaction 68:  CH2* + O <=> CO + H2
  k_f = 15000000;
  qf[68] *= k_f;
  qr[68] *= k_f * exp(-(g_RT[2] - g_RT[5] - g_RT[12] + g_RT_qss[1]));
  // reaction 69:  CH2* + O <=> H + HCO
  k_f = 15000000;
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[2]));
  // reaction 70:  CH2* + OH <=> CH2O + H
  k_f = 30000000;
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1]));
  // reaction 71:  CH2* + H2 <=> CH3 + H
  k_f = 70000000;
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(-g_RT[1] + g_RT[5] - g_RT[9] + g_RT_qss[1]));
  // reaction 72:  CH2* + O2 <=> CO + H + OH
  k_f = 28000000;
  qf[72] *= k_f;
  qr[72] *= k_f *
            exp(-(-g_RT[1] - g_RT[3] + g_RT[8] - g_RT[12] + g_RT_qss[1])) *
            (refCinv);
  // reaction 73:  CH2* + O2 <=> CO + H2O
  k_f = 12000000;
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(-g_RT[6] + g_RT[8] - g_RT[12] + g_RT_qss[1]));
  // reaction 74:  CH2* + H2O <=> CH2 + H2O
  k_f = 30000000;
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(g_RT[6] - g_RT[6] - g_RT_qss[0] + g_RT_qss[1]));
  // reaction 75:  CH2* + CO <=> CH2 + CO
  k_f = 9000000;
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(g_RT[12] - g_RT[12] - g_RT_qss[0] + g_RT_qss[1]));
  // reaction 76:  CH2* + CO2 <=> CH2 + CO2
  k_f = 7000000;
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(g_RT[13] - g_RT[13] - g_RT_qss[0] + g_RT_qss[1]));
  // reaction 77:  CH2* + CO2 <=> CH2O + CO
  k_f = 14000000;
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(-g_RT[11] - g_RT[12] + g_RT[13] + g_RT_qss[1]));
  // reaction 78:  CH2O + H <=> H2 + HCO
  k_f = 23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(g_RT[1] - g_RT[5] + g_RT[11] - g_RT_qss[2]));
  // reaction 79:  CH2O + O <=> HCO + OH
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[11] - g_RT_qss[2]));
  // reaction 80:  CH2O + OH <=> H2O + HCO
  k_f = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  qf[80] *= k_f;
  qr[80] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[11] - g_RT_qss[2]));
  // reaction 81:  CH2O + O2 <=> HCO + HO2
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  qf[81] *= k_f;
  qr[81] *= k_f * exp(-(-g_RT[4] + g_RT[8] + g_RT[11] - g_RT_qss[2]));
  // reaction 82:  CH2O + HO2 <=> H2O2 + HCO
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(g_RT[4] - g_RT[7] + g_RT[11] - g_RT_qss[2]));
  // reaction 83:  CH3 + O <=> CH2O + H
  k_f = 84300000;
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[9] - g_RT[11]));
  // reaction 84:  CH3 + OH <=> CH2 + H2O
  k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[9] - g_RT_qss[0]));
  // reaction 85:  CH3 + OH <=> CH2* + H2O
  k_f = 25010000;
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[9] - g_RT_qss[1]));
  // reaction 86:  CH3 + O2 <=> CH3O + O
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(-g_RT[2] + g_RT[8] + g_RT[9] - g_RT_qss[3]));
  // reaction 87:  CH3 + O2 <=> CH2O + OH
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[9] - g_RT[11]));
  // reaction 88:  CH3 + HO2 <=> CH4 + O2
  k_f = 1000000;
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[9] - g_RT[10]));
  // reaction 89:  CH3 + HO2 <=> CH3O + OH
  k_f = 13400000;
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[9] - g_RT_qss[3]));
  // reaction 90:  CH3 + H2O2 <=> CH4 + HO2
  k_f = 0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(-g_RT[4] + g_RT[7] + g_RT[9] - g_RT[10]));
  // reaction 91:  CH3 + HCO <=> CH4 + CO
  k_f = 8480000;
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[12] + g_RT_qss[2]));
  // reaction 92:  CH2O + CH3 <=> CH4 + HCO
  k_f = 0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
  qf[92] *= k_f;
  qr[92] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[11] - g_RT_qss[2]));
  // reaction 93:  CH2 + CH3 <=> C2H4 + H
  k_f = 40000000;
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(-g_RT[1] + g_RT[9] - g_RT[15] + g_RT_qss[0]));
  // reaction 94:  CH2* + CH3 <=> C2H4 + H
  k_f = 12000000 * exp(-(-286.83349950869) * invT);
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(-g_RT[1] + g_RT[9] - g_RT[15] + g_RT_qss[1]));
  // reaction 95:  2 CH3 <=> C2H5 + H
  k_f = 4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(-g_RT[1] + 2.000000 * g_RT[9] - g_RT_qss[5]));
  // reaction 96:  CH3O + H <=> CH2O + H2
  k_f = 20000000;
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[11] + g_RT_qss[3]));
  // reaction 97:  CH3O + H <=> CH3 + OH
  k_f = 32000000;
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[9] + g_RT_qss[3]));
  // reaction 98:  CH3O + H <=> CH2* + H2O
  k_f = 16000000;
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(g_RT[1] - g_RT[6] - g_RT_qss[1] + g_RT_qss[3]));
  // reaction 99:  CH3O + O <=> CH2O + OH
  k_f = 10000000;
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[11] + g_RT_qss[3]));
  // reaction 100:  CH3O + OH <=> CH2O + H2O
  k_f = 5000000;
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[11] + g_RT_qss[3]));
  // reaction 101:  CH3O + O2 <=> CH2O + HO2
  k_f = 4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[11] + g_RT_qss[3]));
  // reaction 102:  CH4 + H <=> CH3 + H2
  k_f = 660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[9] + g_RT[10]));
  // reaction 103:  CH4 + O <=> CH3 + OH
  k_f = 1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
  qf[103] *= k_f;
  qr[103] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[9] + g_RT[10]));
  // reaction 104:  CH4 + OH <=> CH3 + H2O
  k_f = 100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
  qf[104] *= k_f;
  qr[104] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[9] + g_RT[10]));
  // reaction 105:  CH2 + CH4 <=> 2 CH3
  k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(-2.000000 * g_RT[9] + g_RT[10] + g_RT_qss[0]));
  // reaction 106:  CH2* + CH4 <=> 2 CH3
  k_f = 16000000 * exp(-(-286.83349950869) * invT);
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(-2.000000 * g_RT[9] + g_RT[10] + g_RT_qss[1]));
  // reaction 107:  C2H2 + O <=> CH2 + CO
  k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[0]));
  // reaction 108:  C2H2 + OH <=> CH3 + CO
  k_f = 4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(g_RT[3] - g_RT[9] - g_RT[12] + g_RT[14]));
  // reaction 109:  C2H2 + HCO <=> C2H3 + CO
  k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(-g_RT[12] + g_RT[14] + g_RT_qss[2] - g_RT_qss[4]));
  // reaction 110:  C2H2 + CH3 <=> aC3H5
  k_f = 2.68e+47 * exp((-12.82) * tc[0] - (17979.9314692026) * invT);
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(g_RT[9] + g_RT[14] - g_RT[18])) * (refC);
  // reaction 111:  C2H3 + H <=> C2H2 + H2
  k_f = 90000000;
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[14] + g_RT_qss[4]));
  // reaction 112:  C2H3 + O <=> CH3 + CO
  k_f = 48000000;
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(g_RT[2] - g_RT[9] - g_RT[12] + g_RT_qss[4]));
  // reaction 113:  C2H3 + OH <=> C2H2 + H2O
  k_f = 30110000;
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[4]));
  // reaction 114:  C2H3 + O2 <=> C2H2 + HO2
  k_f = 1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[14] + g_RT_qss[4]));
  // reaction 115:  C2H3 + O2 <=> CH2CHO + O
  k_f = 300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(-g_RT[2] + g_RT[8] - g_RT[17] + g_RT_qss[4]));
  // reaction 116:  C2H3 + O2 <=> CH2O + HCO
  k_f = 46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(g_RT[8] - g_RT[11] - g_RT_qss[2] + g_RT_qss[4]));
  // reaction 117:  C2H3 + HO2 <=> CH2CHO + OH
  k_f = 10000000;
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[17] + g_RT_qss[4]));
  // reaction 118:  C2H3 + H2O2 <=> C2H4 + HO2
  k_f = 12100 * exp(-(-299.917132819613) * invT);
  qf[118] *= k_f;
  qr[118] *= k_f * exp(-(-g_RT[4] + g_RT[7] - g_RT[15] + g_RT_qss[4]));
  // reaction 119:  C2H3 + HCO <=> C2H4 + CO
  k_f = 90330000;
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(-g_RT[12] - g_RT[15] + g_RT_qss[2] + g_RT_qss[4]));
  // reaction 120:  C2H3 + HCO <=> C2H3CHO
  k_f = 18000000;
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(-g_RT[20] + g_RT_qss[2] + g_RT_qss[4])) * (refC);
  // reaction 121:  C2H3 + CH3 <=> C2H2 + CH4
  k_f = 392000;
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[14] + g_RT_qss[4]));
  // reaction 122:  C2H3 + CH3 <=> H + aC3H5
  k_f = 1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(-g_RT[1] + g_RT[9] - g_RT[18] + g_RT_qss[4]));
  // reaction 123:  2 C2H3 <=> C2H2 + C2H4
  k_f = 960000;
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(-g_RT[14] - g_RT[15] + 2.000000 * g_RT_qss[4]));
  // reaction 124:  CH2CHO <=> CH3 + CO
  k_f = 7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
  qf[124] *= k_f;
  qr[124] *= k_f * exp(-(-g_RT[9] - g_RT[12] + g_RT[17])) * (refCinv);
  // reaction 125:  CH2CHO + H <=> CH3 + HCO
  k_f = 90000000;
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(g_RT[1] - g_RT[9] + g_RT[17] - g_RT_qss[2]));
  // reaction 126:  CH2CHO + O2 <=> CH2O + CO + OH
  k_f = 18000;
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[11] - g_RT[12] + g_RT[17])) *
             (refCinv);
  // reaction 127:  C2H4 + H <=> C2H3 + H2
  k_f = 50.7 * exp((1.9) * tc[0] - (6516.65582217112) * invT);
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(g_RT[1] - g_RT[5] + g_RT[15] - g_RT_qss[4]));
  // reaction 128:  C2H4 + O <=> C2H3 + OH
  k_f = 15.1 * exp((1.9) * tc[0] - (1882.03033010965) * invT);
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[15] - g_RT_qss[4]));
  // reaction 129:  C2H4 + O <=> CH3 + HCO
  k_f = 19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(g_RT[2] - g_RT[9] + g_RT[15] - g_RT_qss[2]));
  // reaction 130:  C2H4 + O <=> CH2 + CH2O
  k_f = 0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(g_RT[2] - g_RT[11] + g_RT[15] - g_RT_qss[0]));
  // reaction 131:  C2H4 + OH <=> C2H3 + H2O
  k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[15] - g_RT_qss[4]));
  // reaction 132:  C2H4 + HCO <=> C2H5 + CO
  k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(-g_RT[12] + g_RT[15] + g_RT_qss[2] - g_RT_qss[5]));
  // reaction 133:  C2H4 + CH2 <=> H + aC3H5
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(-g_RT[1] + g_RT[15] - g_RT[18] + g_RT_qss[0]));
  // reaction 134:  C2H4 + CH2* <=> H + aC3H5
  k_f = 50000000;
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(-g_RT[1] + g_RT[15] - g_RT[18] + g_RT_qss[1]));
  // reaction 135:  C2H4 + CH3 <=> C2H3 + CH4
  k_f = 0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[15] - g_RT_qss[4]));
  // reaction 136:  nC3H7 <=> C2H4 + CH3
  k_f = 96000000000000 * exp(-(15611.2604302599) * invT);
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(-g_RT[9] - g_RT[15] + g_RT_qss[6])) * (refCinv);
  // reaction 137:  C2H4 + O2 <=> C2H3 + HO2
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(-g_RT[4] + g_RT[8] + g_RT[15] - g_RT_qss[4]));
  // reaction 138:  C2H3 + C2H4 <=> C4H7
  k_f = 7.93e+32 * exp((-8.47) * tc[0] - (7155.74098774311) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(g_RT[15] - g_RT[21] + g_RT_qss[4])) * (refC);
  // reaction 139:  C2H5 + H <=> C2H4 + H2
  k_f = 2000000;
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[15] + g_RT_qss[5]));
  // reaction 140:  C2H5 + O <=> CH2O + CH3
  k_f = 16040000;
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(g_RT[2] - g_RT[9] - g_RT[11] + g_RT_qss[5]));
  // reaction 141:  C2H5 + O2 <=> C2H4 + HO2
  k_f = 20000;
  qf[141] *= k_f;
  qr[141] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[15] + g_RT_qss[5]));
  // reaction 142:  C2H5 + HO2 <=> C2H6 + O2
  k_f = 300000;
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[16] + g_RT_qss[5]));
  // reaction 143:  C2H5 + HO2 <=> C2H4 + H2O2
  k_f = 300000;
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[15] + g_RT_qss[5]));
  // reaction 144:  C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f = 24000000;
  qf[144] *= k_f;
  qr[144] *= k_f *
             exp(-(-g_RT[3] + g_RT[4] - g_RT[9] - g_RT[11] + g_RT_qss[5])) *
             (refCinv);
  // reaction 145:  C2H5 + H2O2 <=> C2H6 + HO2
  k_f = 8700 * exp(-(490.133032493797) * invT);
  qf[145] *= k_f;
  qr[145] *= k_f * exp(-(-g_RT[4] + g_RT[7] - g_RT[16] + g_RT_qss[5]));
  // reaction 146:  C2H3 + C2H5 <=> CH3 + aC3H5
  k_f = 3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(-g_RT[9] - g_RT[18] + g_RT_qss[4] + g_RT_qss[5]));
  // reaction 147:  C2H6 + H <=> C2H5 + H2
  k_f = 115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(g_RT[1] - g_RT[5] + g_RT[16] - g_RT_qss[5]));
  // reaction 148:  C2H6 + O <=> C2H5 + OH
  k_f = 89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[16] - g_RT_qss[5]));
  // reaction 149:  C2H6 + OH <=> C2H5 + H2O
  k_f = 3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
  qf[149] *= k_f;
  qr[149] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[16] - g_RT_qss[5]));
  // reaction 150:  C2H6 + CH2* <=> C2H5 + CH3
  k_f = 40000000 * exp(-(-276.769166192596) * invT);
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(-g_RT[9] + g_RT[16] + g_RT_qss[1] - g_RT_qss[5]));
  // reaction 151:  C2H6 + CH3 <=> C2H5 + CH4
  k_f = 6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
  qf[151] *= k_f;
  qr[151] *= k_f * exp(-(g_RT[9] - g_RT[10] + g_RT[16] - g_RT_qss[5]));
  // reaction 152:  O + aC3H5 <=> C2H3CHO + H
  k_f = 60000000;
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[18] - g_RT[20]));
  // reaction 153:  OH + aC3H5 <=> C2H3CHO + 2 H
  k_f = 4.2e+26 * exp((-5.16) * tc[0] - (15159.905274033) * invT);
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] + g_RT[18] - g_RT[20])) *
             (refCinv);
  // reaction 154:  O2 + aC3H5 <=> C2H3CHO + OH
  k_f = 18200000 * exp((-0.41) * tc[0] - (11503.0297636301) * invT);
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[18] - g_RT[20]));
  // reaction 155:  HO2 + aC3H5 <=> C3H6 + O2
  k_f = 2660000;
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[18] - g_RT[19]));
  // reaction 156:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f = 6600000;
  qf[156] *= k_f;
  qr[156] *= k_f *
             exp(-(-g_RT[3] + g_RT[4] - g_RT[11] + g_RT[18] - g_RT_qss[4])) *
             (refCinv);
  // reaction 157:  HCO + aC3H5 <=> C3H6 + CO
  k_f = 60000000;
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(-g_RT[12] + g_RT[18] - g_RT[19] + g_RT_qss[2]));
  // reaction 158:  C3H6 + H <=> C2H4 + CH3
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[158] *= k_f;
  qr[158] *= k_f * exp(-(g_RT[1] - g_RT[9] - g_RT[15] + g_RT[19]));
  // reaction 159:  C3H6 + H <=> H2 + aC3H5
  k_f = 0.173 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[18] + g_RT[19]));
  // reaction 160:  C3H6 + O <=> C2H3CHO + 2 H
  k_f = 40 * exp((1.65) * tc[0] - (164.551849718143) * invT);
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(-2.000000 * g_RT[1] + g_RT[2] + g_RT[19] - g_RT[20])) *
             (refCinv);
  // reaction 161:  C3H6 + O => C2H5 + HCO
  k_f = 35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(g_RT[2] + g_RT[19] - g_RT_qss[2] - g_RT_qss[5]));
  // reaction 162:  C3H6 + O <=> OH + aC3H5
  k_f = 180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
  qf[162] *= k_f;
  qr[162] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[18] + g_RT[19]));
  // reaction 163:  C3H6 + OH <=> H2O + aC3H5
  k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[18] + g_RT[19]));
  // reaction 164:  C3H6 + HO2 <=> H2O2 + aC3H5
  k_f = 0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  qf[164] *= k_f;
  qr[164] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[18] + g_RT[19]));
  // reaction 165:  C3H6 + CH3 <=> CH4 + aC3H5
  k_f = 2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
  qf[165] *= k_f;
  qr[165] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[18] + g_RT[19]));
  // reaction 166:  C2H3CHO + H <=> C2H4 + HCO
  k_f = 108000 * exp((0.454) * tc[0] - (2928.72099498347) * invT);
  qf[166] *= k_f;
  qr[166] *= k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[20] - g_RT_qss[2]));
  // reaction 167:  C2H3CHO + O <=> C2H3 + CO + OH
  k_f = 30000000 * exp(-(1781.38699694871) * invT);
  qf[167] *= k_f;
  qr[167] *= k_f *
             exp(-(g_RT[2] - g_RT[3] - g_RT[12] + g_RT[20] - g_RT_qss[4])) *
             (refCinv);
  // reaction 168:  C2H3CHO + OH <=> C2H3 + CO + H2O
  k_f = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  qf[168] *= k_f;
  qr[168] *= k_f *
             exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT[20] - g_RT_qss[4])) *
             (refCinv);
  // reaction 169:  H + nC3H7 <=> C2H5 + CH3
  k_f = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  qf[169] *= k_f;
  qr[169] *= k_f * exp(-(g_RT[1] - g_RT[9] - g_RT_qss[5] + g_RT_qss[6]));
  // reaction 170:  H + nC3H7 <=> C3H6 + H2
  k_f = 1800000;
  qf[170] *= k_f;
  qr[170] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[19] + g_RT_qss[6]));
  // reaction 171:  O + nC3H7 <=> C2H5 + CH2O
  k_f = 96000000;
  qf[171] *= k_f;
  qr[171] *= k_f * exp(-(g_RT[2] - g_RT[11] - g_RT_qss[5] + g_RT_qss[6]));
  // reaction 172:  OH + nC3H7 <=> C3H6 + H2O
  k_f = 24000000;
  qf[172] *= k_f;
  qr[172] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[19] + g_RT_qss[6]));
  // reaction 173:  O2 + nC3H7 <=> C3H6 + HO2
  k_f = 90000;
  qf[173] *= k_f;
  qr[173] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[19] + g_RT_qss[6]));
  // reaction 174:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f = 24000000;
  qf[174] *= k_f;
  qr[174] *= k_f *
             exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT_qss[5] + g_RT_qss[6])) *
             (refCinv);
  // reaction 175:  CH3 + nC3H7 <=> C3H6 + CH4
  k_f = 11000000;
  qf[175] *= k_f;
  qr[175] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[19] + g_RT_qss[6]));
  // reaction 176:  C4H7 + H <=> CH3 + aC3H5
  k_f = 2e+15 * exp((-2) * tc[0] - (5535.38332385192) * invT);
  qf[176] *= k_f;
  qr[176] *= k_f * exp(-(g_RT[1] - g_RT[9] - g_RT[18] + g_RT[21]));
  // reaction 177:  C4H7 + HO2 <=> CH2O + OH + aC3H5
  k_f = 24000000;
  qf[177] *= k_f;
  qr[177] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT[18] + g_RT[21])) *
             (refCinv);
  // reaction 178:  C4H7 + HCO <=> C4H81 + CO
  k_f = 60000000;
  qf[178] *= k_f;
  qr[178] *= k_f * exp(-(-g_RT[12] + g_RT[21] - g_RT[22] + g_RT_qss[2]));
  // reaction 179:  C4H81 + H <=> C2H4 + C2H5
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[179] *= k_f;
  qr[179] *= k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[22] - g_RT_qss[5]));
  // reaction 180:  C4H81 + H <=> C3H6 + CH3
  k_f = 3.2e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[180] *= k_f;
  qr[180] *= k_f * exp(-(g_RT[1] - g_RT[9] - g_RT[19] + g_RT[22]));
  // reaction 181:  C4H81 + H <=> C4H7 + H2
  k_f = 0.65 * exp((2.54) * tc[0] - (3399.73179417669) * invT);
  qf[181] *= k_f;
  qr[181] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[21] + g_RT[22]));
  // reaction 182:  C4H81 + O => HCO + nC3H7
  k_f = 330 * exp((1.45) * tc[0] - (-202.293099653497) * invT);
  qf[182] *= k_f;
  qr[182] *= k_f * exp(-(g_RT[2] + g_RT[22] - g_RT_qss[2] - g_RT_qss[6]));
  // reaction 183:  C4H81 + O <=> C4H7 + OH
  k_f = 15000000 * exp(-(2898.52799503519) * invT);
  qf[183] *= k_f;
  qr[183] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[21] + g_RT[22]));
  // reaction 184:  C4H81 + O <=> C4H7 + OH
  k_f = 26000000 * exp(-(2249.3784961471) * invT);
  qf[184] *= k_f;
  qr[184] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[21] + g_RT[22]));
  // reaction 185:  C4H81 + OH <=> C4H7 + H2O
  k_f = 0.0007 * exp((2.66) * tc[0] - (265.195182879087) * invT);
  qf[185] *= k_f;
  qr[185] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[21] + g_RT[22]));
  // reaction 186:  C4H81 + O2 <=> C4H7 + HO2
  k_f = 20000000 * exp(-(25628.8247894344) * invT);
  qf[186] *= k_f;
  qr[186] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[21] + g_RT[22]));
  // reaction 187:  C4H81 + HO2 <=> C4H7 + H2O2
  k_f = 1000000 * exp(-(7216.12698763968) * invT);
  qf[187] *= k_f;
  qr[187] *= k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[21] + g_RT[22]));
  // reaction 188:  C4H81 + CH3 <=> C4H7 + CH4
  k_f = 4.5e-07 * exp((3.65) * tc[0] - (3599.50881050116) * invT);
  qf[188] *= k_f;
  qr[188] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[21] + g_RT[22]));
  // reaction 189:  H + pC4H9 => 2 C2H5
  k_f = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  qf[189] *= k_f;
  qr[189] *= k_f * exp(-(g_RT[1] - 2.000000 * g_RT_qss[5] + g_RT_qss[7]));
  // reaction 190:  H + pC4H9 <=> C4H81 + H2
  k_f = 1800000;
  qf[190] *= k_f;
  qr[190] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[22] + g_RT_qss[7]));
  // reaction 191:  O + pC4H9 <=> CH2O + nC3H7
  k_f = 96000000;
  qf[191] *= k_f;
  qr[191] *= k_f * exp(-(g_RT[2] - g_RT[11] - g_RT_qss[6] + g_RT_qss[7]));
  // reaction 192:  OH + pC4H9 <=> C4H81 + H2O
  k_f = 24000000;
  qf[192] *= k_f;
  qr[192] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[22] + g_RT_qss[7]));
  // reaction 193:  O2 + pC4H9 <=> C4H81 + HO2
  k_f = 270000;
  qf[193] *= k_f;
  qr[193] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[22] + g_RT_qss[7]));
  // reaction 194:  HO2 + pC4H9 <=> CH2O + OH + nC3H7
  k_f = 24000000;
  qf[194] *= k_f;
  qr[194] *= k_f *
             exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT_qss[6] + g_RT_qss[7])) *
             (refCinv);
  // reaction 195:  CH3 + pC4H9 <=> C4H81 + CH4
  k_f = 11000000;
  qf[195] *= k_f;
  qr[195] *= k_f * exp(-(g_RT[9] - g_RT[10] - g_RT[22] + g_RT_qss[7]));
  // reaction 196:  C5H9 => C2H4 + aC3H5
  k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
  qf[196] *= k_f;
  qr[196] *= k_f * exp(-(-g_RT[15] - g_RT[18] + g_RT[23])) * (refCinv);
  // reaction 197:  C5H9 => C2H3 + C3H6
  k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
  qf[197] *= k_f;
  qr[197] *= k_f * exp(-(-g_RT[19] + g_RT[23] - g_RT_qss[4])) * (refCinv);
  // reaction 198:  C5H10 + H <=> C2H4 + nC3H7
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[198] *= k_f;
  qr[198] *= k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[24] - g_RT_qss[6]));
  // reaction 199:  C5H10 + H <=> C2H5 + C3H6
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[199] *= k_f;
  qr[199] *= k_f * exp(-(g_RT[1] - g_RT[19] + g_RT[24] - g_RT_qss[5]));
  // reaction 200:  C2H4 + nC3H7 <=> PXC5H11
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[200] *= k_f;
  qr[200] *= k_f * exp(-(g_RT[15] + g_RT_qss[6] - g_RT_qss[8])) * (refC);
  // reaction 201:  C6H12 + H <=> C2H4 + pC4H9
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[201] *= k_f;
  qr[201] *= k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[25] - g_RT_qss[7]));
  // reaction 202:  C6H12 + H <=> C3H6 + nC3H7
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[202] *= k_f;
  qr[202] *= k_f * exp(-(g_RT[1] - g_RT[19] + g_RT[25] - g_RT_qss[6]));
  // reaction 203:  C2H4 + pC4H9 <=> PXC6H13
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[203] *= k_f;
  qr[203] *= k_f * exp(-(g_RT[15] + g_RT_qss[7] - g_RT_qss[9])) * (refC);
  // reaction 204:  C7H14 + H <=> C2H4 + PXC5H11
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[204] *= k_f;
  qr[204] *= k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[26] - g_RT_qss[8]));
  // reaction 205:  C7H14 + H <=> C3H6 + pC4H9
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[205] *= k_f;
  qr[205] *= k_f * exp(-(g_RT[1] - g_RT[19] + g_RT[26] - g_RT_qss[7]));
  // reaction 206:  C2H4 + PXC5H11 <=> PXC7H15
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[206] *= k_f;
  qr[206] *= k_f * exp(-(g_RT[15] + g_RT_qss[8] - g_RT_qss[10])) * (refC);
  // reaction 207:  C8H16 + H <=> C2H4 + PXC6H13
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[207] *= k_f;
  qr[207] *= k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[27] - g_RT_qss[9]));
  // reaction 208:  C8H16 + H <=> C3H6 + PXC5H11
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[208] *= k_f;
  qr[208] *= k_f * exp(-(g_RT[1] - g_RT[19] + g_RT[27] - g_RT_qss[8]));
  // reaction 209:  C2H4 + PXC6H13 <=> PXC8H17
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[209] *= k_f;
  qr[209] *= k_f * exp(-(g_RT[15] + g_RT_qss[9] - g_RT_qss[11])) * (refC);
  // reaction 210:  C9H18 + H <=> C2H4 + PXC7H15
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[210] *= k_f;
  qr[210] *= k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[28] - g_RT_qss[10]));
  // reaction 211:  C9H18 + H <=> C3H6 + PXC6H13
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[211] *= k_f;
  qr[211] *= k_f * exp(-(g_RT[1] - g_RT[19] + g_RT[28] - g_RT_qss[9]));
  // reaction 212:  C2H4 + PXC7H15 <=> PXC9H19
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[212] *= k_f;
  qr[212] *= k_f * exp(-(g_RT[15] - g_RT[29] + g_RT_qss[10])) * (refC);
  // reaction 213:  C10H20 + H <=> C2H4 + PXC8H17
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[213] *= k_f;
  qr[213] *= k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[30] - g_RT_qss[11]));
  // reaction 214:  C10H20 + H <=> C3H6 + PXC7H15
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[214] *= k_f;
  qr[214] *= k_f * exp(-(g_RT[1] - g_RT[19] + g_RT[30] - g_RT_qss[10]));
  // reaction 215:  C2H4 + PXC8H17 <=> PXC10H21
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[215] *= k_f;
  qr[215] *= k_f * exp(-(g_RT[15] + g_RT_qss[11] - g_RT_qss[12])) * (refC);
  // reaction 216:  C12H24 <=> C5H9 + PXC7H15
  k_f = 3.5e+16 * exp(-(35696.6303005228) * invT);
  qf[216] *= k_f;
  qr[216] *= k_f * exp(-(-g_RT[23] + g_RT[31] - g_RT_qss[10])) * (refCinv);
  // reaction 217:  C2H4 + PXC10H21 <=> PXC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[217] *= k_f;
  qr[217] *= k_f * exp(-(g_RT[15] + g_RT_qss[12] - g_RT_qss[13])) * (refC);
  // reaction 218:  PXC12H25 <=> S3XC12H25
  k_f = 3670000000000 * exp((-0.6) * tc[0] - (7246.31998758796) * invT);
  qf[218] *= k_f;
  qr[218] *= k_f * exp(-(g_RT_qss[13] - g_RT_qss[15]));
  // reaction 219:  C3H6 + PXC9H19 <=> SXC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[219] *= k_f;
  qr[219] *= k_f * exp(-(g_RT[19] + g_RT[29] - g_RT_qss[14])) * (refC);
  // reaction 220:  C4H81 + PXC8H17 <=> SXC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[220] *= k_f;
  qr[220] *= k_f * exp(-(g_RT[22] + g_RT_qss[11] - g_RT_qss[14])) * (refC);
  // reaction 221:  C5H10 + PXC7H15 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[221] *= k_f;
  qr[221] *= k_f * exp(-(g_RT[24] + g_RT_qss[10] - g_RT_qss[15])) * (refC);
  // reaction 222:  C10H20 + C2H5 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[222] *= k_f;
  qr[222] *= k_f * exp(-(g_RT[30] + g_RT_qss[5] - g_RT_qss[15])) * (refC);
  // reaction 223:  C6H12 + PXC6H13 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[223] *= k_f;
  qr[223] *= k_f * exp(-(g_RT[25] + g_RT_qss[9] - g_RT_qss[15])) * (refC);
  // reaction 224:  C9H18 + nC3H7 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[224] *= k_f;
  qr[224] *= k_f * exp(-(g_RT[28] + g_RT_qss[6] - g_RT_qss[15])) * (refC);
  // reaction 225:  C7H14 + PXC5H11 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[225] *= k_f;
  qr[225] *= k_f * exp(-(g_RT[26] + g_RT_qss[8] - g_RT_qss[15])) * (refC);
  // reaction 226:  C8H16 + pC4H9 <=> S3XC12H25
  k_f = 300000 * exp(-(3673.48166037445) * invT);
  qf[226] *= k_f;
  qr[226] *= k_f * exp(-(g_RT[27] + g_RT_qss[7] - g_RT_qss[15])) * (refC);
  // reaction 227:  C2H5 + PXC10H21 <=> NC12H26
  k_f = 188000000 * exp((-0.5) * tc[0]);
  qf[227] *= k_f;
  qr[227] *= k_f * exp(-(-g_RT[0] + g_RT_qss[5] + g_RT_qss[12])) * (refC);
  // reaction 228:  PXC9H19 + nC3H7 <=> NC12H26
  k_f = 188000000 * exp((-0.5) * tc[0]);
  qf[228] *= k_f;
  qr[228] *= k_f * exp(-(-g_RT[0] + g_RT[29] + g_RT_qss[6])) * (refC);
  // reaction 229:  PXC8H17 + pC4H9 <=> NC12H26
  k_f = 188000000 * exp((-0.5) * tc[0]);
  qf[229] *= k_f;
  qr[229] *= k_f * exp(-(-g_RT[0] + g_RT_qss[7] + g_RT_qss[11])) * (refC);
  // reaction 230:  PXC5H11 + PXC7H15 <=> NC12H26
  k_f = 188000000 * exp((-0.5) * tc[0]);
  qf[230] *= k_f;
  qr[230] *= k_f * exp(-(-g_RT[0] + g_RT_qss[8] + g_RT_qss[10])) * (refC);
  // reaction 231:  2 PXC6H13 <=> NC12H26
  k_f = 188000000 * exp((-0.5) * tc[0]);
  qf[231] *= k_f;
  qr[231] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT_qss[9])) * (refC);
  // reaction 232:  H + NC12H26 <=> H2 + PXC12H25
  k_f = 1.3 * exp((2.54) * tc[0] - (3399.73179417669) * invT);
  qf[232] *= k_f;
  qr[232] *= k_f * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[13]));
  // reaction 233:  H + NC12H26 <=> H2 + SXC12H25
  k_f = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  qf[233] *= k_f;
  qr[233] *= k_f * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[14]));
  // reaction 234:  H + NC12H26 <=> H2 + S3XC12H25
  k_f = 3.9 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  qf[234] *= k_f;
  qr[234] *= k_f * exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[15]));
  // reaction 235:  NC12H26 + O <=> OH + PXC12H25
  k_f = 0.19 * exp((2.68) * tc[0] - (1869.95313013034) * invT);
  qf[235] *= k_f;
  qr[235] *= k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[13]));
  // reaction 236:  NC12H26 + O <=> OH + SXC12H25
  k_f = 0.0952 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  qf[236] *= k_f;
  qr[236] *= k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[14]));
  // reaction 237:  NC12H26 + O <=> OH + S3XC12H25
  k_f = 0.1428 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  qf[237] *= k_f;
  qr[237] *= k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[15]));
  // reaction 238:  NC12H26 + OH <=> H2O + PXC12H25
  k_f = 0.0034 * exp((2.66) * tc[0] - (265.195182879087) * invT);
  qf[238] *= k_f;
  qr[238] *= k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[13]));
  // reaction 239:  NC12H26 + OH <=> H2O + SXC12H25
  k_f = 0.074 * exp((2.39) * tc[0] - (197.764149661255) * invT);
  qf[239] *= k_f;
  qr[239] *= k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[14]));
  // reaction 240:  NC12H26 + OH <=> H2O + S3XC12H25
  k_f = 0.101 * exp((2.39) * tc[0] - (197.764149661255) * invT);
  qf[240] *= k_f;
  qr[240] *= k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[15]));
  // reaction 241:  NC12H26 + O2 <=> HO2 + PXC12H25
  k_f = 40000000 * exp(-(25628.8247894344) * invT);
  qf[241] *= k_f;
  qr[241] *= k_f * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[13]));
  // reaction 242:  NC12H26 + O2 <=> HO2 + SXC12H25
  k_f = 80000000 * exp(-(23948.0811256466) * invT);
  qf[242] *= k_f;
  qr[242] *= k_f * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[14]));
  // reaction 243:  NC12H26 + O2 <=> HO2 + S3XC12H25
  k_f = 120000000 * exp(-(23948.0811256466) * invT);
  qf[243] *= k_f;
  qr[243] *= k_f * exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[15]));
  // reaction 244:  HO2 + NC12H26 <=> H2O2 + PXC12H25
  k_f = 0.0676 * exp((2.55) * tc[0] - (8298.04281911983) * invT);
  qf[244] *= k_f;
  qr[244] *= k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[13]));
  // reaction 245:  HO2 + NC12H26 <=> H2O2 + SXC12H25
  k_f = 0.089 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  qf[245] *= k_f;
  qr[245] *= k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[14]));
  // reaction 246:  HO2 + NC12H26 <=> H2O2 + S3XC12H25
  k_f = 0.0885 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  qf[246] *= k_f;
  qr[246] *= k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[15]));
  // reaction 247:  CH3 + NC12H26 <=> CH4 + PXC12H25
  k_f = 1.81e-06 * exp((3.65) * tc[0] - (3599.50881050116) * invT);
  qf[247] *= k_f;
  qr[247] *= k_f * exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[13]));
  // reaction 248:  CH3 + NC12H26 <=> CH4 + SXC12H25
  k_f = 6e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
  qf[248] *= k_f;
  qr[248] *= k_f * exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[14]));
  // reaction 249:  CH3 + NC12H26 <=> CH4 + S3XC12H25
  k_f = 9e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
  qf[249] *= k_f;
  qr[249] *= k_f * exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[15]));
  // reaction 250:  O2 + PXC12H25 => C12H25O2
  k_f = 50000000;
  qf[250] *= k_f;
  qr[250] *= k_f * exp(-(g_RT[8] - g_RT[32] + g_RT_qss[13])) * (refC);
  // reaction 251:  C12H25O2 => O2 + PXC12H25
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  qf[251] *= k_f;
  qr[251] *= k_f * exp(-(-g_RT[8] + g_RT[32] - g_RT_qss[13])) * (refCinv);
  // reaction 252:  O2 + SXC12H25 => C12H25O2
  k_f = 50000000;
  qf[252] *= k_f;
  qr[252] *= k_f * exp(-(g_RT[8] - g_RT[32] + g_RT_qss[14])) * (refC);
  // reaction 253:  C12H25O2 => O2 + SXC12H25
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  qf[253] *= k_f;
  qr[253] *= k_f * exp(-(-g_RT[8] + g_RT[32] - g_RT_qss[14])) * (refCinv);
  // reaction 254:  O2 + S3XC12H25 => C12H25O2
  k_f = 50000000;
  qf[254] *= k_f;
  qr[254] *= k_f * exp(-(g_RT[8] - g_RT[32] + g_RT_qss[15])) * (refC);
  // reaction 255:  C12H25O2 => O2 + S3XC12H25
  k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
  qf[255] *= k_f;
  qr[255] *= k_f * exp(-(-g_RT[8] + g_RT[32] - g_RT_qss[15])) * (refCinv);
  // reaction 256:  C12H25O2 => C12OOH
  k_f = 1510000000000 * exp(-(9561.11665028967) * invT);
  qf[256] *= k_f;
  qr[256] *= k_f * exp(-(g_RT[32] - g_RT_qss[16]));
  // reaction 257:  C12OOH => C12H25O2
  k_f = 100000000000 * exp(-(5786.99165675428) * invT);
  qf[257] *= k_f;
  qr[257] *= k_f * exp(-(-g_RT[32] + g_RT_qss[16]));
  // reaction 258:  O2 + PXC12H25 => C12H24 + HO2
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  qf[258] *= k_f;
  qr[258] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[31] + g_RT_qss[13]));
  // reaction 259:  C12H24 + HO2 => O2 + PXC12H25
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  qf[259] *= k_f;
  qr[259] *= k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[31] - g_RT_qss[13]));
  // reaction 260:  O2 + SXC12H25 => C12H24 + HO2
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  qf[260] *= k_f;
  qr[260] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[31] + g_RT_qss[14]));
  // reaction 261:  C12H24 + HO2 => O2 + SXC12H25
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  qf[261] *= k_f;
  qr[261] *= k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[31] - g_RT_qss[14]));
  // reaction 262:  O2 + S3XC12H25 => C12H24 + HO2
  k_f = 350000 * exp(-(3019.29999482832) * invT);
  qf[262] *= k_f;
  qr[262] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[31] + g_RT_qss[15]));
  // reaction 263:  C12H24 + HO2 => O2 + S3XC12H25
  k_f = 316000 * exp(-(9812.72498319203) * invT);
  qf[263] *= k_f;
  qr[263] *= k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[31] - g_RT_qss[15]));
  // reaction 264:  C12OOH + O2 => O2C12H24OOH
  k_f = 46000;
  qf[264] *= k_f;
  qr[264] *= k_f * exp(-(g_RT[8] + g_RT_qss[16] - g_RT_qss[17])) * (refC);
  // reaction 265:  O2C12H24OOH => C12OOH + O2
  k_f = 25100000000000 * exp(-(13788.1366430493) * invT);
  qf[265] *= k_f;
  qr[265] *= k_f * exp(-(-g_RT[8] - g_RT_qss[16] + g_RT_qss[17])) * (refCinv);
  // reaction 266:  O2C12H24OOH <=> OC12H23OOH + OH
  k_f = 89000000000 * exp(-(8554.68331868023) * invT);
  qf[266] *= k_f;
  qr[266] *= k_f * exp(-(-g_RT[3] - g_RT[33] + g_RT_qss[17])) * (refCinv);
  // reaction 267:  OC12H23OOH => 3 C2H4 + C2H5 + 2 CH2CHO + OH
  k_f = 1.8e+15 * exp(-(21167.8090470755) * invT);
  qf[267] *= k_f;
  qr[267] *= k_f *
             exp(
               -(-g_RT[3] - 3.000000 * g_RT[15] - 2.000000 * g_RT[17] +
                 g_RT[33] - g_RT_qss[5])) *
             ((refCinv * refCinv * refCinv * refCinv * refCinv * refCinv));
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 35; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 35; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[35];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[18];
  gibbs_qss(g_RT_qss, tc);

  amrex::Real sc_qss[18];
  amrex::Real kf_qss[198], qf_qss[198], qr_qss[198];
  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  H + O2 (+M) <=> HO2 (+M)
    const amrex::Real k_f = 5116000 * exp((0.44) * tc[0]);
    amrex::Real Corr = mixture + (10.89) * sc[6] + (-0.15) * sc[8] +
                       (0.0900000000000001) * sc[12] + (1.18) * sc[13];
    const amrex::Real redP = Corr / k_f * 63280000 * exp(-1.4 * tc[0]);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.5 * exp(-tc[1] * 1e+30) + 0.5 * exp(-tc[1] * 1e-30) + 0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[4] + g_RT[8])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 1:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 111000000 * exp((-0.37) * tc[0]);
    amrex::Real Corr =
      mixture + sc[5] + (5) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real redP =
      Corr / k_f * 201000 * exp(-0.584 * tc[0] - -1153.87581469022 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-tc[1] * 0.0106382978723404) +
      0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[3] * sc[3]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[3] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 2:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-tc[1] * 0.0050761421319797) +
      0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] - g_RT[11] + g_RT[12])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 3:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[11] + g_RT_qss[2])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * tc[0]);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[0]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[9] + g_RT_qss[0])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 5:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[11]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[11] - g_RT_qss[3])) * (refC) *
                           (sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 6:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-tc[1] * 0.0135135135135135) +
      0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[9] - g_RT[10])) * (refC) * (sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 7:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-tc[1] * 0.00662251655629139) +
      0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[9] * sc[9]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[9] - g_RT[16])) * (refC) * (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= 2.000000 * qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 8:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      38600000 * exp((1.62) * tc[0] - (18643.2716780664) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[14] + (2) * sc[15] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[4]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[14] + g_RT_qss[4])) *
                           (refCinv) * (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 9:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[14] + (2) * sc[15] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[4])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 10:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[14] + (2) * sc[15] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[9] * sc_qss[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[9] - g_RT[19] + g_RT_qss[4])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 11:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      3975 * exp((1.28) * tc[0] - (649.466525387545) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 4715000 * exp(-380.059419015673 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.24 * exp(-tc[1] * 0.025) + 0.76 * exp(-tc[1] * 0.000975609756097561) +
      0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[15]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[15] - g_RT_qss[5])) * (refC) *
                           (sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 12:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[16] + g_RT_qss[5])) * (refC) * (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 13:  C2H3 + C2H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f = 15000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1.55e+44 * exp(-11.79 * tc[0] - 4521.1501339225 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.802 * exp(-tc[1] * 0.000439000834101585) +
      0.198 * exp(-tc[1] * 1.66666666666667e-05) + exp(-5723.2 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[4] * sc_qss[5]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[22] + g_RT_qss[4] + g_RT_qss[5])) *
                           (refC) * (sc[22]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[22] += qdot;
  }

  {
    // reaction 14:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-tc[1] * 0.000911909538573774) +
      0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[18]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[18] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 15:  CH3 + aC3H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f =
      100000000 * exp((-0.32) * tc[0] - (-131.993731440578) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 3.91e+48 * exp(-12.81 * tc[0] - 3145.1041612795 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.896 * exp(-tc[1] * 0.00062266500622665) +
      0.104 * exp(-tc[1] * 1.66666666666667e-05) + exp(-6118.4 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[9] * sc[18]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[9] + g_RT[18] - g_RT[22])) * (refC) * (sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[18] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 16:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[19] - g_RT_qss[6])) * (refC) *
                           (sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 17:  C4H7 + H (+M) <=> C4H81 (+M)
    const amrex::Real k_f = 36000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 3.01e+36 * exp(-9.32 * tc[0] - 2935.56474163841 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.502 * exp(-tc[1] * 0.00076103500761035) +
      0.498 * exp(-tc[1] * 0.00076103500761035) + exp(-50000 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[21]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[21] - g_RT[22])) * (refC) * (sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 18:  C4H81 + H (+M) <=> pC4H9 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[22]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[22] - g_RT_qss[7])) * (refC) *
                           (sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 19:  C5H10 + H (+M) <=> PXC5H11 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[24]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[24] - g_RT_qss[8])) * (refC) *
                           (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 20:  C6H12 + H (+M) <=> PXC6H13 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[25]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[25] - g_RT_qss[9])) * (refC) *
                           (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 21:  C7H14 + H (+M) <=> PXC7H15 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[26]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[26] - g_RT_qss[10])) * (refC) *
                           (sc_qss[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 22:  C8H16 + H (+M) <=> PXC8H17 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[27]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[27] - g_RT_qss[11])) * (refC) *
                           (sc_qss[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 23:  C9H18 + H (+M) <=> PXC9H19 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[28]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[28] - g_RT[29])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 24:  C10H20 + H (+M) <=> PXC10H21 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[30]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[30] - g_RT_qss[12])) * (refC) *
                           (sc_qss[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 25:  CO + O (+M) <=> CO2 (+M)
    const amrex::Real k_f = 13620 * exp(-(1199.66853127845) * invT);
    amrex::Real Corr =
      mixture + sc[5] + (11) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real redP =
      Corr / k_f * 1173000000000 * exp(-2.79 * tc[0] - 2108.98104638758 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[12] - g_RT[13])) * (refC) * (sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 26:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1780000 * exp((-1) * tc[0]);
    const amrex::Real Corr =
      mixture + (-1) * sc[5] + (-1) * sc[6] + (-1) * sc[13];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 27:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 44000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr =
      mixture + sc[5] + (5.3) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 28:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (1.4) * sc[5] + (14.4) * sc[6] +
                             (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[8])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 29:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * ((sc[5] * sc[5]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 30:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 56240000 * exp((-1.25) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 31:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 32:  H + O + M <=> OH + M
    const amrex::Real k_f = 9428000 * exp((-1) * tc[0]);
    const amrex::Real Corr =
      mixture + sc[5] + (11) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[3])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 33:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr =
      mixture + sc[5] + (-1) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real qf = Corr * k_f * (sc_qss[2]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[12] + g_RT_qss[2])) *
                           (refCinv) * (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 34:  HCO + H2O <=> CO + H + H2O
    const amrex::Real k_f =
      2244000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc_qss[2]);
    const amrex::Real qr = k_f * exp(-(-g_RT[1] - g_RT[12] + g_RT_qss[2])) *
                           (refCinv) * (sc[1] * sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 35:  H + O2 <=> O + OH
    const amrex::Real k_f = 97560000 * exp(-(7468.87259020676) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[3] + g_RT[8])) * (sc[2] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 36:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.04589 * exp((2.7) * tc[0] - (3150.13632793755) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[3] + g_RT[5])) * (sc[1] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 37:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      102.4 * exp((1.6) * tc[0] - (1659.74946449039) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[5] - g_RT[6])) * (sc[1] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[5] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 38:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.03973 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[3] * sc[3]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[3] - g_RT[6])) * (sc[2] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 39:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 74850000 * exp(-(148.448916412392) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - 2.000000 * g_RT[3] + g_RT[4])) * ((sc[3] * sc[3]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += 2.000000 * qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 40:  H2 + O2 <=> H + HO2
    const amrex::Real k_f =
      0.5916 * exp((2.433) * tc[0] - (26923.0980538841) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[4] + g_RT[5] + g_RT[8])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 41:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f = 28910000 * exp(-(-252.569476734047) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] + g_RT[4] - g_RT[6] - g_RT[8])) * (sc[6] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] -= qdot;
    wdot[6] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 42:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[4] - g_RT[6])) * (sc[2] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 43:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[2] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[4] - g_RT[8])) * (sc[3] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 44:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[4] - g_RT[7] - g_RT[8])) * (sc[7] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 45:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 365800000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[4] - g_RT[7] - g_RT[8])) * (sc[7] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 46:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 24100000 * exp(-(1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[6] + g_RT[7])) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 47:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 6.05 * exp((2) * tc[0] - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 48:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * tc[0] - (1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[7])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 49:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 2000000 * exp(-(214.873516298615) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 50:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f =
      2.67e+35 * exp((-7) * tc[0] - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 51:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      0.07046 * exp((2.053) * tc[0] - (-178.979071526765) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[12] - g_RT[13])) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 52:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      5757000 * exp((-0.664) * tc[0] - (166.98238621398) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[12] - g_RT[13])) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 53:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f =
      0.157 * exp((2.18) * tc[0] - (9029.02038003442) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[12] - g_RT[13])) * (sc[3] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 54:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 1119000 * exp(-(24003.4349588851) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[8] + g_RT[12] - g_RT[13])) * (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 55:  H + HCO <=> CO + H2
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[12] + g_RT_qss[2])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 56:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] - g_RT[12] + g_RT_qss[2])) *
                           (sc[3] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 57:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[13] + g_RT_qss[2])) *
                           (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 58:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[2])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 59:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f =
      12040 * exp((0.807) * tc[0] - (-365.838516040031) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[12] + g_RT_qss[2])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 60:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[0] - g_RT_qss[2])) *
      (sc[1] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 61:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[0])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 62:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[9] + g_RT_qss[0])) *
                           (sc[1] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 63:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10600000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT_qss[0] - g_RT_qss[2])) *
      (sc[3] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 64:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[8] - g_RT[13] + g_RT_qss[0])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[8] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 65:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] - g_RT[11] + g_RT_qss[0])) *
                           (sc[3] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 66:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[0] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] - g_RT[14] + 2.000000 * g_RT_qss[0])) *
      (sc[5] * sc[14]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[5] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 67:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[34] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[34] - g_RT[34] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[34] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[34] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 68:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[5] - g_RT[12] + g_RT_qss[1])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 69:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[2])) *
      (sc[1] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 70:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 71:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[9] + g_RT_qss[1])) *
                           (sc[1] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 72:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[3] + g_RT[8] - g_RT[12] + g_RT_qss[1])) *
      (refCinv) * (sc[1] * sc[3] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 73:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[8] - g_RT[12] + g_RT_qss[1])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 74:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[6] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[6] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 75:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[12] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[12] - g_RT[12] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[12] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 76:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[13] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[13] - g_RT[13] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[13] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 77:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[13] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[11] - g_RT[12] + g_RT[13] + g_RT_qss[1])) *
      (sc[11] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 78:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] + g_RT[11] - g_RT_qss[2])) *
                           (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 79:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] + g_RT[11] - g_RT_qss[2])) *
                           (sc[3] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 80:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[11] - g_RT_qss[2])) *
                           (sc[6] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 81:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] + g_RT[11] - g_RT_qss[2])) *
                           (sc[4] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 82:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[7] + g_RT[11] - g_RT_qss[2])) *
                           (sc[7] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 83:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[9] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 84:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[9] - g_RT_qss[0])) *
                           (sc[6] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 85:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[9] - g_RT_qss[1])) *
                           (sc[6] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 86:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[8] + g_RT[9] - g_RT_qss[3])) *
                           (sc[2] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 87:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[9] - g_RT[11])) * (sc[3] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 88:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[9] - g_RT[10])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 89:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] + g_RT[9] - g_RT_qss[3])) *
                           (sc[3] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 90:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[7] + g_RT[9] - g_RT[10])) * (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 91:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[12] + g_RT_qss[2])) *
                           (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 92:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] + g_RT[11] - g_RT_qss[2])) *
                           (sc[10] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 93:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[15] + g_RT_qss[0])) *
                           (sc[1] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 94:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[15] + g_RT_qss[1])) *
                           (sc[1] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 95:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[9] * sc[9]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + 2.000000 * g_RT[9] - g_RT_qss[5])) *
                           (sc[1] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= 2.000000 * qdot;
  }

  {
    // reaction 96:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[11] + g_RT_qss[3])) *
                           (sc[5] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 97:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[9] + g_RT_qss[3])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 98:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[6] - g_RT_qss[1] + g_RT_qss[3])) *
      (sc[6] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 99:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] - g_RT[11] + g_RT_qss[3])) *
                           (sc[3] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 100:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[11] + g_RT_qss[3])) *
                           (sc[6] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 101:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[11] + g_RT_qss[3])) *
                           (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 102:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[9] + g_RT[10])) * (sc[5] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 103:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[9] + g_RT[10])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 104:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[9] + g_RT[10])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 105:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[9] + g_RT[10] + g_RT_qss[0])) *
      ((sc[9] * sc[9]));
    const amrex::Real qdot = qf - qr;
    wdot[9] += 2.000000 * qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 106:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[9] + g_RT[10] + g_RT_qss[1])) *
      ((sc[9] * sc[9]));
    const amrex::Real qdot = qf - qr;
    wdot[9] += 2.000000 * qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 107:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[0])) *
                           (sc[12] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 108:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[9] - g_RT[12] + g_RT[14])) * (sc[9] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[9] += qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 109:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] + g_RT[14] + g_RT_qss[2] - g_RT_qss[4])) *
      (sc[12] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 110:  C2H2 + CH3 <=> aC3H5
    const amrex::Real k_f =
      2.68e+47 * exp((-12.82) * tc[0] - (17979.9314692026) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[9] + g_RT[14] - g_RT[18])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 111:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[14] + g_RT_qss[4])) *
                           (sc[5] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 112:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[9] - g_RT[12] + g_RT_qss[4])) *
                           (sc[9] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 113:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[4])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 114:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[14] + g_RT_qss[4])) *
                           (sc[4] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 115:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[8] - g_RT[17] + g_RT_qss[4])) *
                           (sc[2] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 116:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] - g_RT[11] - g_RT_qss[2] + g_RT_qss[4])) *
      (sc[11] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 117:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] - g_RT[17] + g_RT_qss[4])) *
                           (sc[3] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 118:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[7] - g_RT[15] + g_RT_qss[4])) *
                           (sc[4] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 119:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc_qss[2] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] - g_RT[15] + g_RT_qss[2] + g_RT_qss[4])) *
      (sc[12] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[12] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 120:  C2H3 + HCO <=> C2H3CHO
    const amrex::Real k_f = 18000000;
    const amrex::Real qf = k_f * (sc_qss[2] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[20] + g_RT_qss[2] + g_RT_qss[4])) * (refC) * (sc[20]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[20] += qdot;
  }

  {
    // reaction 121:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[14] + g_RT_qss[4])) *
                           (sc[10] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 122:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[18] + g_RT_qss[4])) *
                           (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 123:  2 C2H3 <=> C2H2 + C2H4
    const amrex::Real k_f = 960000;
    const amrex::Real qf = k_f * (sc_qss[4] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[14] - g_RT[15] + 2.000000 * g_RT_qss[4])) *
      (sc[14] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[14] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 124:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc[17]);
    const amrex::Real qr = k_f * exp(-(-g_RT[9] - g_RT[12] + g_RT[17])) *
                           (refCinv) * (sc[9] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[12] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 125:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[9] + g_RT[17] - g_RT_qss[2])) *
                           (sc[9] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 126:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[8] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[11] - g_RT[12] + g_RT[17])) *
      (refCinv) * (sc[3] * sc[11] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[11] += qdot;
    wdot[12] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 127:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.9) * tc[0] - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] + g_RT[15] - g_RT_qss[4])) *
                           (sc[5] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 128:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.9) * tc[0] - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] + g_RT[15] - g_RT_qss[4])) *
                           (sc[3] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 129:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[9] + g_RT[15] - g_RT_qss[2])) *
                           (sc[9] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 130:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] + g_RT[15] - g_RT_qss[0])) *
                           (sc[11] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 131:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[15] - g_RT_qss[4])) *
                           (sc[6] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 132:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] + g_RT[15] + g_RT_qss[2] - g_RT_qss[5])) *
      (sc[12] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 133:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[15] - g_RT[18] + g_RT_qss[0])) *
      (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[15] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 134:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[15] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[15] - g_RT[18] + g_RT_qss[1])) *
      (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[15] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 135:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] + g_RT[15] - g_RT_qss[4])) *
                           (sc[10] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 136:  nC3H7 <=> C2H4 + CH3
    const amrex::Real k_f = 96000000000000 * exp(-(15611.2604302599) * invT);
    const amrex::Real qf = k_f * (sc_qss[6]);
    const amrex::Real qr = k_f * exp(-(-g_RT[9] - g_RT[15] + g_RT_qss[6])) *
                           (refCinv) * (sc[9] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 137:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] + g_RT[15] - g_RT_qss[4])) *
                           (sc[4] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 138:  C2H3 + C2H4 <=> C4H7
    const amrex::Real k_f =
      7.93e+32 * exp((-8.47) * tc[0] - (7155.74098774311) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[15] - g_RT[21] + g_RT_qss[4])) * (refC) * (sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 139:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[15] + g_RT_qss[5])) *
                           (sc[5] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 140:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[9] - g_RT[11] + g_RT_qss[5])) *
                           (sc[9] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 141:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[15] + g_RT_qss[5])) *
                           (sc[4] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 142:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[8] - g_RT[16] + g_RT_qss[5])) *
                           (sc[8] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 143:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[7] - g_RT[15] + g_RT_qss[5])) *
                           (sc[7] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 144:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[9] - g_RT[11] + g_RT_qss[5])) *
      (refCinv) * (sc[3] * sc[9] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[9] += qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 145:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[7] - g_RT[16] + g_RT_qss[5])) *
                           (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 146:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc_qss[4] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] - g_RT[18] + g_RT_qss[4] + g_RT_qss[5])) *
      (sc[9] * sc[18]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[9] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 147:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f =
      115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] + g_RT[16] - g_RT_qss[5])) *
                           (sc[5] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 148:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] + g_RT[16] - g_RT_qss[5])) *
                           (sc[3] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 149:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[16] - g_RT_qss[5])) *
                           (sc[6] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 150:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] + g_RT[16] + g_RT_qss[1] - g_RT_qss[5])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 151:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] + g_RT[16] - g_RT_qss[5])) *
                           (sc[10] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 152:  O + aC3H5 <=> C2H3CHO + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[2] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[18] - g_RT[20])) * (sc[1] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[18] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 153:  OH + aC3H5 <=> C2H3CHO + 2 H
    const amrex::Real k_f =
      4.2e+26 * exp((-5.16) * tc[0] - (15159.905274033) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] + g_RT[18] - g_RT[20])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[3] -= qdot;
    wdot[18] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 154:  O2 + aC3H5 <=> C2H3CHO + OH
    const amrex::Real k_f =
      18200000 * exp((-0.41) * tc[0] - (11503.0297636301) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[18] - g_RT[20])) * (sc[3] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[18] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 155:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[18] - g_RT[19])) * (sc[8] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 156:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] + g_RT[18] - g_RT_qss[4])) *
      (refCinv) * (sc[3] * sc[11] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 157:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[18] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] + g_RT[18] - g_RT[19] + g_RT_qss[2])) *
      (sc[12] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 158:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[9] - g_RT[15] + g_RT[19])) * (sc[9] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[15] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 159:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.173 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[18] + g_RT[19])) * (sc[5] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 160:  C3H6 + O <=> C2H3CHO + 2 H
    const amrex::Real k_f =
      40 * exp((1.65) * tc[0] - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[2] + g_RT[19] - g_RT[20])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[2] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 161:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 162:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[18] + g_RT[19])) * (sc[3] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 163:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[18] + g_RT[19])) * (sc[6] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 164:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[18] + g_RT[19])) * (sc[7] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 165:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[18] + g_RT[19])) *
                           (sc[10] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 166:  C2H3CHO + H <=> C2H4 + HCO
    const amrex::Real k_f =
      108000 * exp((0.454) * tc[0] - (2928.72099498347) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[20] - g_RT_qss[2])) *
                           (sc[15] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 167:  C2H3CHO + O <=> C2H3 + CO + OH
    const amrex::Real k_f = 30000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[12] + g_RT[20] - g_RT_qss[4])) *
      (refCinv) * (sc[3] * sc[12] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[12] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 168:  C2H3CHO + OH <=> C2H3 + CO + H2O
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT[20] - g_RT_qss[4])) *
      (refCinv) * (sc[6] * sc[12] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 169:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[9] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 170:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[19] + g_RT_qss[6])) *
                           (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 171:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[11] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[11] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 172:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[19] + g_RT_qss[6])) *
                           (sc[6] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 173:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
                           (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 174:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT_qss[5] + g_RT_qss[6])) *
      (refCinv) * (sc[3] * sc[11] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 175:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[19] + g_RT_qss[6])) *
                           (sc[10] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 176:  C4H7 + H <=> CH3 + aC3H5
    const amrex::Real k_f =
      2e+15 * exp((-2) * tc[0] - (5535.38332385192) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[9] - g_RT[18] + g_RT[21])) * (sc[9] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[18] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 177:  C4H7 + HO2 <=> CH2O + OH + aC3H5
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT[18] + g_RT[21])) *
      (refCinv) * (sc[3] * sc[11] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
    wdot[18] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 178:  C4H7 + HCO <=> C4H81 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[21] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] + g_RT[21] - g_RT[22] + g_RT_qss[2])) *
      (sc[12] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 179:  C4H81 + H <=> C2H4 + C2H5
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[22] - g_RT_qss[5])) *
                           (sc[15] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 180:  C4H81 + H <=> C3H6 + CH3
    const amrex::Real k_f =
      3.2e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[9] - g_RT[19] + g_RT[22])) * (sc[9] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 181:  C4H81 + H <=> C4H7 + H2
    const amrex::Real k_f =
      0.65 * exp((2.54) * tc[0] - (3399.73179417669) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[21] + g_RT[22])) * (sc[5] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 182:  C4H81 + O => HCO + nC3H7
    const amrex::Real k_f =
      330 * exp((1.45) * tc[0] - (-202.293099653497) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 183:  C4H81 + O <=> C4H7 + OH
    const amrex::Real k_f = 15000000 * exp(-(2898.52799503519) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[21] + g_RT[22])) * (sc[3] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 184:  C4H81 + O <=> C4H7 + OH
    const amrex::Real k_f = 26000000 * exp(-(2249.3784961471) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[21] + g_RT[22])) * (sc[3] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 185:  C4H81 + OH <=> C4H7 + H2O
    const amrex::Real k_f =
      0.0007 * exp((2.66) * tc[0] - (265.195182879087) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[21] + g_RT[22])) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 186:  C4H81 + O2 <=> C4H7 + HO2
    const amrex::Real k_f = 20000000 * exp(-(25628.8247894344) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[21] + g_RT[22])) * (sc[4] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 187:  C4H81 + HO2 <=> C4H7 + H2O2
    const amrex::Real k_f = 1000000 * exp(-(7216.12698763968) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[21] + g_RT[22])) * (sc[7] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 188:  C4H81 + CH3 <=> C4H7 + CH4
    const amrex::Real k_f =
      4.5e-07 * exp((3.65) * tc[0] - (3599.50881050116) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[21] + g_RT[22])) *
                           (sc[10] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 189:  H + pC4H9 => 2 C2H5
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
  }

  {
    // reaction 190:  H + pC4H9 <=> C4H81 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[22] + g_RT_qss[7])) *
                           (sc[5] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 191:  O + pC4H9 <=> CH2O + nC3H7
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[11] - g_RT_qss[6] + g_RT_qss[7])) *
      (sc[11] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 192:  OH + pC4H9 <=> C4H81 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[22] + g_RT_qss[7])) *
                           (sc[6] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 193:  O2 + pC4H9 <=> C4H81 + HO2
    const amrex::Real k_f = 270000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[22] + g_RT_qss[7])) *
                           (sc[4] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 194:  HO2 + pC4H9 <=> CH2O + OH + nC3H7
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT_qss[6] + g_RT_qss[7])) *
      (refCinv) * (sc[3] * sc[11] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 195:  CH3 + pC4H9 <=> C4H81 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[22] + g_RT_qss[7])) *
                           (sc[10] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 196:  C5H9 => C2H4 + aC3H5
    const amrex::Real k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
    const amrex::Real qf = k_f * (sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[18] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 197:  C5H9 => C2H3 + C3H6
    const amrex::Real k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
    const amrex::Real qf = k_f * (sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 198:  C5H10 + H <=> C2H4 + nC3H7
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[24] - g_RT_qss[6])) *
                           (sc[15] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 199:  C5H10 + H <=> C2H5 + C3H6
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[24] - g_RT_qss[5])) *
                           (sc[19] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 200:  C2H4 + nC3H7 <=> PXC5H11
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[15] + g_RT_qss[6] - g_RT_qss[8])) * (refC) * (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 201:  C6H12 + H <=> C2H4 + pC4H9
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[25]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[25] - g_RT_qss[7])) *
                           (sc[15] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 202:  C6H12 + H <=> C3H6 + nC3H7
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[25]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[25] - g_RT_qss[6])) *
                           (sc[19] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 203:  C2H4 + pC4H9 <=> PXC6H13
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[15] + g_RT_qss[7] - g_RT_qss[9])) * (refC) * (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 204:  C7H14 + H <=> C2H4 + PXC5H11
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[26] - g_RT_qss[8])) *
                           (sc[15] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 205:  C7H14 + H <=> C3H6 + pC4H9
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[26] - g_RT_qss[7])) *
                           (sc[19] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 206:  C2H4 + PXC5H11 <=> PXC7H15
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(g_RT[15] + g_RT_qss[8] - g_RT_qss[10])) *
                           (refC) * (sc_qss[10]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 207:  C8H16 + H <=> C2H4 + PXC6H13
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[27]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[27] - g_RT_qss[9])) *
                           (sc[15] * sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 208:  C8H16 + H <=> C3H6 + PXC5H11
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[27]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[27] - g_RT_qss[8])) *
                           (sc[19] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 209:  C2H4 + PXC6H13 <=> PXC8H17
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[9]);
    const amrex::Real qr = k_f * exp(-(g_RT[15] + g_RT_qss[9] - g_RT_qss[11])) *
                           (refC) * (sc_qss[11]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 210:  C9H18 + H <=> C2H4 + PXC7H15
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[28] - g_RT_qss[10])) *
      (sc[15] * sc_qss[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 211:  C9H18 + H <=> C3H6 + PXC6H13
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[28]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[28] - g_RT_qss[9])) *
                           (sc[19] * sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 212:  C2H4 + PXC7H15 <=> PXC9H19
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[15] - g_RT[29] + g_RT_qss[10])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 213:  C10H20 + H <=> C2H4 + PXC8H17
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[30] - g_RT_qss[11])) *
      (sc[15] * sc_qss[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 214:  C10H20 + H <=> C3H6 + PXC7H15
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[19] + g_RT[30] - g_RT_qss[10])) *
      (sc[19] * sc_qss[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 215:  C2H4 + PXC8H17 <=> PXC10H21
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] + g_RT_qss[11] - g_RT_qss[12])) *
                           (refC) * (sc_qss[12]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 216:  C12H24 <=> C5H9 + PXC7H15
    const amrex::Real k_f = 3.5e+16 * exp(-(35696.6303005228) * invT);
    const amrex::Real qf = k_f * (sc[31]);
    const amrex::Real qr = k_f * exp(-(-g_RT[23] + g_RT[31] - g_RT_qss[10])) *
                           (refCinv) * (sc[23] * sc_qss[10]);
    const amrex::Real qdot = qf - qr;
    wdot[23] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 217:  C2H4 + PXC10H21 <=> PXC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] + g_RT_qss[12] - g_RT_qss[13])) *
                           (refC) * (sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 218:  PXC12H25 <=> S3XC12H25
    const amrex::Real k_f =
      3670000000000 * exp((-0.6) * tc[0] - (7246.31998758796) * invT);
    const amrex::Real qf = k_f * (sc_qss[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT_qss[13] - g_RT_qss[15])) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 219:  C3H6 + PXC9H19 <=> SXC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[19] + g_RT[29] - g_RT_qss[14])) * (refC) * (sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[19] -= qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 220:  C4H81 + PXC8H17 <=> SXC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc_qss[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[22] + g_RT_qss[11] - g_RT_qss[14])) *
                           (refC) * (sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
  }

  {
    // reaction 221:  C5H10 + PXC7H15 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[24] * sc_qss[10]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[24] + g_RT_qss[10] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[24] -= qdot;
  }

  {
    // reaction 222:  C10H20 + C2H5 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[30] * sc_qss[5]);
    const amrex::Real qr = k_f * exp(-(g_RT[30] + g_RT_qss[5] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[30] -= qdot;
  }

  {
    // reaction 223:  C6H12 + PXC6H13 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[25] * sc_qss[9]);
    const amrex::Real qr = k_f * exp(-(g_RT[25] + g_RT_qss[9] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
  }

  {
    // reaction 224:  C9H18 + nC3H7 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[28] * sc_qss[6]);
    const amrex::Real qr = k_f * exp(-(g_RT[28] + g_RT_qss[6] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[28] -= qdot;
  }

  {
    // reaction 225:  C7H14 + PXC5H11 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(g_RT[26] + g_RT_qss[8] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[26] -= qdot;
  }

  {
    // reaction 226:  C8H16 + pC4H9 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[27] * sc_qss[7]);
    const amrex::Real qr = k_f * exp(-(g_RT[27] + g_RT_qss[7] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[27] -= qdot;
  }

  {
    // reaction 227:  C2H5 + PXC10H21 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc_qss[5] * sc_qss[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT_qss[5] + g_RT_qss[12])) * (refC) * (sc[0]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
  }

  {
    // reaction 228:  PXC9H19 + nC3H7 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc[29] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[29] + g_RT_qss[6])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 229:  PXC8H17 + pC4H9 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc_qss[7] * sc_qss[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT_qss[7] + g_RT_qss[11])) * (refC) * (sc[0]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
  }

  {
    // reaction 230:  PXC5H11 + PXC7H15 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc_qss[8] * sc_qss[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT_qss[8] + g_RT_qss[10])) * (refC) * (sc[0]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
  }

  {
    // reaction 231:  2 PXC6H13 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc_qss[9] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT_qss[9])) * (refC) * (sc[0]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
  }

  {
    // reaction 232:  H + NC12H26 <=> H2 + PXC12H25
    const amrex::Real k_f =
      1.3 * exp((2.54) * tc[0] - (3399.73179417669) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[1]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[13])) *
                           (sc[5] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 233:  H + NC12H26 <=> H2 + SXC12H25
    const amrex::Real k_f = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[1]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[14])) *
                           (sc[5] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 234:  H + NC12H26 <=> H2 + S3XC12H25
    const amrex::Real k_f = 3.9 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[1]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[15])) *
                           (sc[5] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 235:  NC12H26 + O <=> OH + PXC12H25
    const amrex::Real k_f =
      0.19 * exp((2.68) * tc[0] - (1869.95313013034) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[13])) *
                           (sc[3] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 236:  NC12H26 + O <=> OH + SXC12H25
    const amrex::Real k_f =
      0.0952 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[14])) *
                           (sc[3] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 237:  NC12H26 + O <=> OH + S3XC12H25
    const amrex::Real k_f =
      0.1428 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[15])) *
                           (sc[3] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 238:  NC12H26 + OH <=> H2O + PXC12H25
    const amrex::Real k_f =
      0.0034 * exp((2.66) * tc[0] - (265.195182879087) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[13])) *
                           (sc[6] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 239:  NC12H26 + OH <=> H2O + SXC12H25
    const amrex::Real k_f =
      0.074 * exp((2.39) * tc[0] - (197.764149661255) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[14])) *
                           (sc[6] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 240:  NC12H26 + OH <=> H2O + S3XC12H25
    const amrex::Real k_f =
      0.101 * exp((2.39) * tc[0] - (197.764149661255) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[15])) *
                           (sc[6] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 241:  NC12H26 + O2 <=> HO2 + PXC12H25
    const amrex::Real k_f = 40000000 * exp(-(25628.8247894344) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[13])) *
                           (sc[4] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 242:  NC12H26 + O2 <=> HO2 + SXC12H25
    const amrex::Real k_f = 80000000 * exp(-(23948.0811256466) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[14])) *
                           (sc[4] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 243:  NC12H26 + O2 <=> HO2 + S3XC12H25
    const amrex::Real k_f = 120000000 * exp(-(23948.0811256466) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[15])) *
                           (sc[4] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 244:  HO2 + NC12H26 <=> H2O2 + PXC12H25
    const amrex::Real k_f =
      0.0676 * exp((2.55) * tc[0] - (8298.04281911983) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[13])) *
                           (sc[7] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 245:  HO2 + NC12H26 <=> H2O2 + SXC12H25
    const amrex::Real k_f =
      0.089 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[14])) *
                           (sc[7] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 246:  HO2 + NC12H26 <=> H2O2 + S3XC12H25
    const amrex::Real k_f =
      0.0885 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[15])) *
                           (sc[7] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 247:  CH3 + NC12H26 <=> CH4 + PXC12H25
    const amrex::Real k_f =
      1.81e-06 * exp((3.65) * tc[0] - (3599.50881050116) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[13])) *
                           (sc[10] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 248:  CH3 + NC12H26 <=> CH4 + SXC12H25
    const amrex::Real k_f =
      6e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[14])) *
                           (sc[10] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 249:  CH3 + NC12H26 <=> CH4 + S3XC12H25
    const amrex::Real k_f =
      9e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[15])) *
                           (sc[10] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 250:  O2 + PXC12H25 => C12H25O2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 251:  C12H25O2 => O2 + PXC12H25
    const amrex::Real k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 252:  O2 + SXC12H25 => C12H25O2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 253:  C12H25O2 => O2 + SXC12H25
    const amrex::Real k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 254:  O2 + S3XC12H25 => C12H25O2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 255:  C12H25O2 => O2 + S3XC12H25
    const amrex::Real k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 256:  C12H25O2 => C12OOH
    const amrex::Real k_f = 1510000000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[32] -= qdot;
  }

  {
    // reaction 257:  C12OOH => C12H25O2
    const amrex::Real k_f = 100000000000 * exp(-(5786.99165675428) * invT);
    const amrex::Real qf = k_f * (sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[32] += qdot;
  }

  {
    // reaction 258:  O2 + PXC12H25 => C12H24 + HO2
    const amrex::Real k_f = 350000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 259:  C12H24 + HO2 => O2 + PXC12H25
    const amrex::Real k_f = 316000 * exp(-(9812.72498319203) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 260:  O2 + SXC12H25 => C12H24 + HO2
    const amrex::Real k_f = 350000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 261:  C12H24 + HO2 => O2 + SXC12H25
    const amrex::Real k_f = 316000 * exp(-(9812.72498319203) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 262:  O2 + S3XC12H25 => C12H24 + HO2
    const amrex::Real k_f = 350000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 263:  C12H24 + HO2 => O2 + S3XC12H25
    const amrex::Real k_f = 316000 * exp(-(9812.72498319203) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 264:  C12OOH + O2 => O2C12H24OOH
    const amrex::Real k_f = 46000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
  }

  {
    // reaction 265:  O2C12H24OOH => C12OOH + O2
    const amrex::Real k_f = 25100000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
  }

  {
    // reaction 266:  O2C12H24OOH <=> OC12H23OOH + OH
    const amrex::Real k_f = 89000000000 * exp(-(8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc_qss[17]);
    const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[33] + g_RT_qss[17])) *
                           (refCinv) * (sc[3] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 267:  OC12H23OOH => 3 C2H4 + C2H5 + 2 CH2CHO + OH
    const amrex::Real k_f = 1.8e+15 * exp(-(21167.8090470755) * invT);
    const amrex::Real qf = k_f * (sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[15] += 3.000000 * qdot;
    wdot[17] += 2.000000 * qdot;
    wdot[33] -= qdot;
  }
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate_light(
  amrex::Real* wdot,
  amrex::Real* sc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss,
  amrex::Real* sc_qss,
  amrex::Real* kf_qss,
  amrex::Real* qf_qss,
  amrex::Real* qr_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{
  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 35; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 35; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  gibbs(g_RT, tc);
  gibbs_qss(g_RT_qss, tc);

  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  H + O2 (+M) <=> HO2 (+M)
    const amrex::Real k_f = 5116000 * exp((0.44) * tc[0]);
    amrex::Real Corr = mixture + (10.89) * sc[6] + (-0.15) * sc[8] +
                       (0.0900000000000001) * sc[12] + (1.18) * sc[13];
    const amrex::Real redP =
      Corr / k_f * 63280000 * exp(-1.4 * tc[0] - 0 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.5 * exp(-tc[1] * 1e+30) + 0.5 * exp(-tc[1] * 1e-30) + 0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[4] + g_RT[8])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 1:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 111000000 * exp((-0.37) * tc[0]);
    amrex::Real Corr =
      mixture + sc[5] + (5) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real redP =
      Corr / k_f * 201000 * exp(-0.584 * tc[0] - -1153.87581469022 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-tc[1] * 0.0106382978723404) +
      0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[3] * sc[3]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[3] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 2:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-tc[1] * 0.0050761421319797) +
      0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] - g_RT[11] + g_RT[12])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 3:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[11] + g_RT_qss[2])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * tc[0]);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[0]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[9] + g_RT_qss[0])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 5:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[11]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[11] - g_RT_qss[3])) * (refC) *
                           (sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 6:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-tc[1] * 0.0135135135135135) +
      0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[9] - g_RT[10])) * (refC) * (sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 7:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-tc[1] * 0.00662251655629139) +
      0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[9] * sc[9]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[9] - g_RT[16])) * (refC) * (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= 2.000000 * qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 8:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      38600000 * exp((1.62) * tc[0] - (18643.2716780664) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[14] + (2) * sc[15] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[4]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[14] + g_RT_qss[4])) *
                           (refCinv) * (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 9:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[14] + (2) * sc[15] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[4])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 10:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[14] + (2) * sc[15] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[9] * sc_qss[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[9] - g_RT[19] + g_RT_qss[4])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 11:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      3975 * exp((1.28) * tc[0] - (649.466525387545) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 4715000 * exp(0 * tc[0] - 380.059419015673 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.24 * exp(-tc[1] * 0.025) + 0.76 * exp(-tc[1] * 0.000975609756097561) +
      0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[15]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[15] - g_RT_qss[5])) * (refC) *
                           (sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 12:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[16] + g_RT_qss[5])) * (refC) * (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 13:  C2H3 + C2H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f = 15000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1.55e+44 * exp(-11.79 * tc[0] - 4521.1501339225 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.802 * exp(-tc[1] * 0.000439000834101585) +
      0.198 * exp(-tc[1] * 1.66666666666667e-05) + exp(-5723.2 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[4] * sc_qss[5]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[22] + g_RT_qss[4] + g_RT_qss[5])) *
                           (refC) * (sc[22]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[22] += qdot;
  }

  {
    // reaction 14:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-tc[1] * 0.000911909538573774) +
      0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[18]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[18] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 15:  CH3 + aC3H5 (+M) <=> C4H81 (+M)
    const amrex::Real k_f =
      100000000 * exp((-0.32) * tc[0] - (-131.993731440578) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 3.91e+48 * exp(-12.81 * tc[0] - 3145.1041612795 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.896 * exp(-tc[1] * 0.00062266500622665) +
      0.104 * exp(-tc[1] * 1.66666666666667e-05) + exp(-6118.4 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[9] * sc[18]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[9] + g_RT[18] - g_RT[22])) * (refC) * (sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[18] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 16:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[19] - g_RT_qss[6])) * (refC) *
                           (sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 17:  C4H7 + H (+M) <=> C4H81 (+M)
    const amrex::Real k_f = 36000000;
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 3.01e+36 * exp(-9.32 * tc[0] - 2935.56474163841 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.502 * exp(-tc[1] * 0.00076103500761035) +
      0.498 * exp(-tc[1] * 0.00076103500761035) + exp(-50000 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[21]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[21] - g_RT[22])) * (refC) * (sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 18:  C4H81 + H (+M) <=> pC4H9 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[22]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[22] - g_RT_qss[7])) * (refC) *
                           (sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 19:  C5H10 + H (+M) <=> PXC5H11 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[24]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[24] - g_RT_qss[8])) * (refC) *
                           (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 20:  C6H12 + H (+M) <=> PXC6H13 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[25]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[25] - g_RT_qss[9])) * (refC) *
                           (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 21:  C7H14 + H (+M) <=> PXC7H15 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[26]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[26] - g_RT_qss[10])) * (refC) *
                           (sc_qss[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 22:  C8H16 + H (+M) <=> PXC8H17 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[27]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[27] - g_RT_qss[11])) * (refC) *
                           (sc_qss[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 23:  C9H18 + H (+M) <=> PXC9H19 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[28]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[28] - g_RT[29])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[28] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 24:  C10H20 + H (+M) <=> PXC10H21 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[5] + (5) * sc[6] + sc[10] + (0.5) * sc[12] +
                       sc[13] + (2) * sc[16];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[30]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[30] - g_RT_qss[12])) * (refC) *
                           (sc_qss[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 25:  CO + O (+M) <=> CO2 (+M)
    const amrex::Real k_f = 13620 * exp(-(1199.66853127845) * invT);
    amrex::Real Corr =
      mixture + sc[5] + (11) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real redP =
      Corr / k_f * 1173000000000 * exp(-2.79 * tc[0] - 2108.98104638758 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[12] - g_RT[13])) * (refC) * (sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 26:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1780000 * exp((-1) * tc[0]);
    const amrex::Real Corr =
      mixture + (-1) * sc[5] + (-1) * sc[6] + (-1) * sc[13];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 27:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 44000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr =
      mixture + sc[5] + (5.3) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 28:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (1.4) * sc[5] + (14.4) * sc[6] +
                             (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[8])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 29:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * ((sc[5] * sc[5]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 30:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 56240000 * exp((-1.25) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 31:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[1] - g_RT[5])) * (refC) * (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 32:  H + O + M <=> OH + M
    const amrex::Real k_f = 9428000 * exp((-1) * tc[0]);
    const amrex::Real Corr =
      mixture + sc[5] + (11) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[3])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 33:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr =
      mixture + sc[5] + (-1) * sc[6] + (0.75) * sc[12] + (2.6) * sc[13];
    const amrex::Real qf = Corr * k_f * (sc_qss[2]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[12] + g_RT_qss[2])) *
                           (refCinv) * (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 34:  HCO + H2O <=> CO + H + H2O
    const amrex::Real k_f =
      2244000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc_qss[2]);
    const amrex::Real qr = k_f * exp(-(-g_RT[1] - g_RT[12] + g_RT_qss[2])) *
                           (refCinv) * (sc[1] * sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 35:  H + O2 <=> O + OH
    const amrex::Real k_f = 97560000 * exp(-(7468.87259020676) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[3] + g_RT[8])) * (sc[2] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 36:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.04589 * exp((2.7) * tc[0] - (3150.13632793755) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[3] + g_RT[5])) * (sc[1] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 37:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      102.4 * exp((1.6) * tc[0] - (1659.74946449039) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[5] - g_RT[6])) * (sc[1] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[5] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 38:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.03973 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[3] * sc[3]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[3] - g_RT[6])) * (sc[2] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= 2.000000 * qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 39:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 74850000 * exp(-(148.448916412392) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - 2.000000 * g_RT[3] + g_RT[4])) * ((sc[3] * sc[3]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += 2.000000 * qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 40:  H2 + O2 <=> H + HO2
    const amrex::Real k_f =
      0.5916 * exp((2.433) * tc[0] - (26923.0980538841) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[4] + g_RT[5] + g_RT[8])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 41:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f = 28910000 * exp(-(-252.569476734047) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] + g_RT[4] - g_RT[6] - g_RT[8])) * (sc[6] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] -= qdot;
    wdot[6] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 42:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[4] - g_RT[6])) * (sc[2] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 43:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[2] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[4] - g_RT[8])) * (sc[3] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 44:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[4] - g_RT[7] - g_RT[8])) * (sc[7] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 45:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 365800000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[4] - g_RT[7] - g_RT[8])) * (sc[7] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 46:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 24100000 * exp(-(1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[6] + g_RT[7])) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 47:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 6.05 * exp((2) * tc[0] - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 48:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * tc[0] - (1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[7])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 49:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 2000000 * exp(-(214.873516298615) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 50:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f =
      2.67e+35 * exp((-7) * tc[0] - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 51:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      0.07046 * exp((2.053) * tc[0] - (-178.979071526765) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[12] - g_RT[13])) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 52:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      5757000 * exp((-0.664) * tc[0] - (166.98238621398) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] + g_RT[12] - g_RT[13])) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 53:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f =
      0.157 * exp((2.18) * tc[0] - (9029.02038003442) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[12] - g_RT[13])) * (sc[3] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 54:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 1119000 * exp(-(24003.4349588851) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[8] + g_RT[12] - g_RT[13])) * (sc[2] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[12] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 55:  H + HCO <=> CO + H2
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[12] + g_RT_qss[2])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 56:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] - g_RT[12] + g_RT_qss[2])) *
                           (sc[3] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 57:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[13] + g_RT_qss[2])) *
                           (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 58:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[2])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 59:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f =
      12040 * exp((0.807) * tc[0] - (-365.838516040031) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[12] + g_RT_qss[2])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 60:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[0] - g_RT_qss[2])) *
      (sc[1] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 61:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[0])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 62:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[9] + g_RT_qss[0])) *
                           (sc[1] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 63:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10600000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT_qss[0] - g_RT_qss[2])) *
      (sc[3] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 64:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[8] - g_RT[13] + g_RT_qss[0])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[8] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 65:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] - g_RT[11] + g_RT_qss[0])) *
                           (sc[3] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 66:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[0] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] - g_RT[14] + 2.000000 * g_RT_qss[0])) *
      (sc[5] * sc[14]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[5] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 67:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[34] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[34] - g_RT[34] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[34] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[34] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 68:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[5] - g_RT[12] + g_RT_qss[1])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 69:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[2])) *
      (sc[1] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 70:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 71:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[9] + g_RT_qss[1])) *
                           (sc[1] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 72:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[3] + g_RT[8] - g_RT[12] + g_RT_qss[1])) *
      (refCinv) * (sc[1] * sc[3] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 73:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[8] - g_RT[12] + g_RT_qss[1])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 74:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[6] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[6] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 75:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[12] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[12] - g_RT[12] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[12] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 76:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[13] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[13] - g_RT[13] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[13] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 77:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[13] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[11] - g_RT[12] + g_RT[13] + g_RT_qss[1])) *
      (sc[11] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 78:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] + g_RT[11] - g_RT_qss[2])) *
                           (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 79:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] + g_RT[11] - g_RT_qss[2])) *
                           (sc[3] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 80:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[11] - g_RT_qss[2])) *
                           (sc[6] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 81:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] + g_RT[11] - g_RT_qss[2])) *
                           (sc[4] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 82:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[7] + g_RT[11] - g_RT_qss[2])) *
                           (sc[7] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 83:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[9] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 84:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[9] - g_RT_qss[0])) *
                           (sc[6] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 85:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[9] - g_RT_qss[1])) *
                           (sc[6] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 86:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[8] + g_RT[9] - g_RT_qss[3])) *
                           (sc[2] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 87:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[9] - g_RT[11])) * (sc[3] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 88:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[9] - g_RT[10])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 89:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] + g_RT[9] - g_RT_qss[3])) *
                           (sc[3] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 90:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[7] + g_RT[9] - g_RT[10])) * (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 91:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[12] + g_RT_qss[2])) *
                           (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 92:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] + g_RT[11] - g_RT_qss[2])) *
                           (sc[10] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 93:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[15] + g_RT_qss[0])) *
                           (sc[1] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 94:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[15] + g_RT_qss[1])) *
                           (sc[1] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 95:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[9] * sc[9]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + 2.000000 * g_RT[9] - g_RT_qss[5])) *
                           (sc[1] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= 2.000000 * qdot;
  }

  {
    // reaction 96:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[11] + g_RT_qss[3])) *
                           (sc[5] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 97:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[3] - g_RT[9] + g_RT_qss[3])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 98:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[6] - g_RT_qss[1] + g_RT_qss[3])) *
      (sc[6] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 99:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] - g_RT[11] + g_RT_qss[3])) *
                           (sc[3] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 100:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[11] + g_RT_qss[3])) *
                           (sc[6] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 101:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[11] + g_RT_qss[3])) *
                           (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 102:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[9] + g_RT[10])) * (sc[5] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 103:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[9] + g_RT[10])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 104:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[9] + g_RT[10])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 105:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[9] + g_RT[10] + g_RT_qss[0])) *
      ((sc[9] * sc[9]));
    const amrex::Real qdot = qf - qr;
    wdot[9] += 2.000000 * qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 106:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[9] + g_RT[10] + g_RT_qss[1])) *
      ((sc[9] * sc[9]));
    const amrex::Real qdot = qf - qr;
    wdot[9] += 2.000000 * qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 107:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[0])) *
                           (sc[12] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 108:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[9] - g_RT[12] + g_RT[14])) * (sc[9] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[9] += qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 109:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] + g_RT[14] + g_RT_qss[2] - g_RT_qss[4])) *
      (sc[12] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 110:  C2H2 + CH3 <=> aC3H5
    const amrex::Real k_f =
      2.68e+47 * exp((-12.82) * tc[0] - (17979.9314692026) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[9] + g_RT[14] - g_RT[18])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 111:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[14] + g_RT_qss[4])) *
                           (sc[5] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 112:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[9] - g_RT[12] + g_RT_qss[4])) *
                           (sc[9] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 113:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[4])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 114:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[14] + g_RT_qss[4])) *
                           (sc[4] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 115:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[8] - g_RT[17] + g_RT_qss[4])) *
                           (sc[2] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 116:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] - g_RT[11] - g_RT_qss[2] + g_RT_qss[4])) *
      (sc[11] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 117:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[4] - g_RT[17] + g_RT_qss[4])) *
                           (sc[3] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 118:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[7] - g_RT[15] + g_RT_qss[4])) *
                           (sc[4] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 119:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc_qss[2] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] - g_RT[15] + g_RT_qss[2] + g_RT_qss[4])) *
      (sc[12] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[12] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 120:  C2H3 + HCO <=> C2H3CHO
    const amrex::Real k_f = 18000000;
    const amrex::Real qf = k_f * (sc_qss[2] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[20] + g_RT_qss[2] + g_RT_qss[4])) * (refC) * (sc[20]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[20] += qdot;
  }

  {
    // reaction 121:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[14] + g_RT_qss[4])) *
                           (sc[10] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 122:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[18] + g_RT_qss[4])) *
                           (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 123:  2 C2H3 <=> C2H2 + C2H4
    const amrex::Real k_f = 960000;
    const amrex::Real qf = k_f * (sc_qss[4] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[14] - g_RT[15] + 2.000000 * g_RT_qss[4])) *
      (sc[14] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[14] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 124:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc[17]);
    const amrex::Real qr = k_f * exp(-(-g_RT[9] - g_RT[12] + g_RT[17])) *
                           (refCinv) * (sc[9] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[12] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 125:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[9] + g_RT[17] - g_RT_qss[2])) *
                           (sc[9] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 126:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[8] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[11] - g_RT[12] + g_RT[17])) *
      (refCinv) * (sc[3] * sc[11] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[11] += qdot;
    wdot[12] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 127:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.9) * tc[0] - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] + g_RT[15] - g_RT_qss[4])) *
                           (sc[5] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 128:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.9) * tc[0] - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] + g_RT[15] - g_RT_qss[4])) *
                           (sc[3] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 129:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[9] + g_RT[15] - g_RT_qss[2])) *
                           (sc[9] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 130:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] + g_RT[15] - g_RT_qss[0])) *
                           (sc[11] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 131:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[15] - g_RT_qss[4])) *
                           (sc[6] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 132:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] + g_RT[15] + g_RT_qss[2] - g_RT_qss[5])) *
      (sc[12] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 133:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[15] - g_RT[18] + g_RT_qss[0])) *
      (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[15] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 134:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[15] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[15] - g_RT[18] + g_RT_qss[1])) *
      (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[15] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 135:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] + g_RT[15] - g_RT_qss[4])) *
                           (sc[10] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 136:  nC3H7 <=> C2H4 + CH3
    const amrex::Real k_f = 96000000000000 * exp(-(15611.2604302599) * invT);
    const amrex::Real qf = k_f * (sc_qss[6]);
    const amrex::Real qr = k_f * exp(-(-g_RT[9] - g_RT[15] + g_RT_qss[6])) *
                           (refCinv) * (sc[9] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 137:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] + g_RT[15] - g_RT_qss[4])) *
                           (sc[4] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 138:  C2H3 + C2H4 <=> C4H7
    const amrex::Real k_f =
      7.93e+32 * exp((-8.47) * tc[0] - (7155.74098774311) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[15] - g_RT[21] + g_RT_qss[4])) * (refC) * (sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 139:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[15] + g_RT_qss[5])) *
                           (sc[5] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 140:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[9] - g_RT[11] + g_RT_qss[5])) *
                           (sc[9] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[9] += qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 141:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[15] + g_RT_qss[5])) *
                           (sc[4] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 142:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[8] - g_RT[16] + g_RT_qss[5])) *
                           (sc[8] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 143:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[7] - g_RT[15] + g_RT_qss[5])) *
                           (sc[7] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 144:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[9] - g_RT[11] + g_RT_qss[5])) *
      (refCinv) * (sc[3] * sc[9] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[9] += qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 145:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[7] - g_RT[16] + g_RT_qss[5])) *
                           (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 146:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc_qss[4] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] - g_RT[18] + g_RT_qss[4] + g_RT_qss[5])) *
      (sc[9] * sc[18]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[9] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 147:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f =
      115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] + g_RT[16] - g_RT_qss[5])) *
                           (sc[5] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 148:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[3] + g_RT[16] - g_RT_qss[5])) *
                           (sc[3] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 149:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[16] - g_RT_qss[5])) *
                           (sc[6] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 150:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] + g_RT[16] + g_RT_qss[1] - g_RT_qss[5])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 151:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] + g_RT[16] - g_RT_qss[5])) *
                           (sc[10] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 152:  O + aC3H5 <=> C2H3CHO + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[2] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[18] - g_RT[20])) * (sc[1] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[18] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 153:  OH + aC3H5 <=> C2H3CHO + 2 H
    const amrex::Real k_f =
      4.2e+26 * exp((-5.16) * tc[0] - (15159.905274033) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] + g_RT[18] - g_RT[20])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[3] -= qdot;
    wdot[18] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 154:  O2 + aC3H5 <=> C2H3CHO + OH
    const amrex::Real k_f =
      18200000 * exp((-0.41) * tc[0] - (11503.0297636301) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[18] - g_RT[20])) * (sc[3] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[18] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 155:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[18] - g_RT[19])) * (sc[8] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 156:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] + g_RT[18] - g_RT_qss[4])) *
      (refCinv) * (sc[3] * sc[11] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 157:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[18] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] + g_RT[18] - g_RT[19] + g_RT_qss[2])) *
      (sc[12] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 158:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[9] - g_RT[15] + g_RT[19])) * (sc[9] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[15] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 159:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.173 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[18] + g_RT[19])) * (sc[5] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 160:  C3H6 + O <=> C2H3CHO + 2 H
    const amrex::Real k_f =
      40 * exp((1.65) * tc[0] - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[2] + g_RT[19] - g_RT[20])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[2] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 161:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 162:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[18] + g_RT[19])) * (sc[3] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 163:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[18] + g_RT[19])) * (sc[6] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 164:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[18] + g_RT[19])) * (sc[7] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 165:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[18] + g_RT[19])) *
                           (sc[10] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 166:  C2H3CHO + H <=> C2H4 + HCO
    const amrex::Real k_f =
      108000 * exp((0.454) * tc[0] - (2928.72099498347) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[20] - g_RT_qss[2])) *
                           (sc[15] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 167:  C2H3CHO + O <=> C2H3 + CO + OH
    const amrex::Real k_f = 30000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[12] + g_RT[20] - g_RT_qss[4])) *
      (refCinv) * (sc[3] * sc[12] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[12] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 168:  C2H3CHO + OH <=> C2H3 + CO + H2O
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT[20] - g_RT_qss[4])) *
      (refCinv) * (sc[6] * sc[12] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 169:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[9] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 170:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[19] + g_RT_qss[6])) *
                           (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 171:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[11] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[11] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 172:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[19] + g_RT_qss[6])) *
                           (sc[6] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 173:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
                           (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 174:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT_qss[5] + g_RT_qss[6])) *
      (refCinv) * (sc[3] * sc[11] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 175:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[19] + g_RT_qss[6])) *
                           (sc[10] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 176:  C4H7 + H <=> CH3 + aC3H5
    const amrex::Real k_f =
      2e+15 * exp((-2) * tc[0] - (5535.38332385192) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[9] - g_RT[18] + g_RT[21])) * (sc[9] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[18] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 177:  C4H7 + HO2 <=> CH2O + OH + aC3H5
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT[18] + g_RT[21])) *
      (refCinv) * (sc[3] * sc[11] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
    wdot[18] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 178:  C4H7 + HCO <=> C4H81 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[21] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[12] + g_RT[21] - g_RT[22] + g_RT_qss[2])) *
      (sc[12] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[21] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 179:  C4H81 + H <=> C2H4 + C2H5
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[22] - g_RT_qss[5])) *
                           (sc[15] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 180:  C4H81 + H <=> C3H6 + CH3
    const amrex::Real k_f =
      3.2e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[9] - g_RT[19] + g_RT[22])) * (sc[9] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 181:  C4H81 + H <=> C4H7 + H2
    const amrex::Real k_f =
      0.65 * exp((2.54) * tc[0] - (3399.73179417669) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[21] + g_RT[22])) * (sc[5] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 182:  C4H81 + O => HCO + nC3H7
    const amrex::Real k_f =
      330 * exp((1.45) * tc[0] - (-202.293099653497) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 183:  C4H81 + O <=> C4H7 + OH
    const amrex::Real k_f = 15000000 * exp(-(2898.52799503519) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[21] + g_RT[22])) * (sc[3] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 184:  C4H81 + O <=> C4H7 + OH
    const amrex::Real k_f = 26000000 * exp(-(2249.3784961471) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[21] + g_RT[22])) * (sc[3] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 185:  C4H81 + OH <=> C4H7 + H2O
    const amrex::Real k_f =
      0.0007 * exp((2.66) * tc[0] - (265.195182879087) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[21] + g_RT[22])) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 186:  C4H81 + O2 <=> C4H7 + HO2
    const amrex::Real k_f = 20000000 * exp(-(25628.8247894344) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[21] + g_RT[22])) * (sc[4] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 187:  C4H81 + HO2 <=> C4H7 + H2O2
    const amrex::Real k_f = 1000000 * exp(-(7216.12698763968) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[7] - g_RT[21] + g_RT[22])) * (sc[7] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[7] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 188:  C4H81 + CH3 <=> C4H7 + CH4
    const amrex::Real k_f =
      4.5e-07 * exp((3.65) * tc[0] - (3599.50881050116) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[22]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[21] + g_RT[22])) *
                           (sc[10] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 189:  H + pC4H9 => 2 C2H5
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
  }

  {
    // reaction 190:  H + pC4H9 <=> C4H81 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[5] - g_RT[22] + g_RT_qss[7])) *
                           (sc[5] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 191:  O + pC4H9 <=> CH2O + nC3H7
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[11] - g_RT_qss[6] + g_RT_qss[7])) *
      (sc[11] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 192:  OH + pC4H9 <=> C4H81 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[22] + g_RT_qss[7])) *
                           (sc[6] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 193:  O2 + pC4H9 <=> C4H81 + HO2
    const amrex::Real k_f = 270000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[8] - g_RT[22] + g_RT_qss[7])) *
                           (sc[4] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 194:  HO2 + pC4H9 <=> CH2O + OH + nC3H7
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[11] - g_RT_qss[6] + g_RT_qss[7])) *
      (refCinv) * (sc[3] * sc[11] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 195:  CH3 + pC4H9 <=> C4H81 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[9] - g_RT[10] - g_RT[22] + g_RT_qss[7])) *
                           (sc[10] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[9] -= qdot;
    wdot[10] += qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 196:  C5H9 => C2H4 + aC3H5
    const amrex::Real k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
    const amrex::Real qf = k_f * (sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[18] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 197:  C5H9 => C2H3 + C3H6
    const amrex::Real k_f = 25000000000000 * exp(-(15106.1214767918) * invT);
    const amrex::Real qf = k_f * (sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 198:  C5H10 + H <=> C2H4 + nC3H7
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[24] - g_RT_qss[6])) *
                           (sc[15] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 199:  C5H10 + H <=> C2H5 + C3H6
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[24]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[24] - g_RT_qss[5])) *
                           (sc[19] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 200:  C2H4 + nC3H7 <=> PXC5H11
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[15] + g_RT_qss[6] - g_RT_qss[8])) * (refC) * (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 201:  C6H12 + H <=> C2H4 + pC4H9
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[25]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[25] - g_RT_qss[7])) *
                           (sc[15] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 202:  C6H12 + H <=> C3H6 + nC3H7
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[25]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[25] - g_RT_qss[6])) *
                           (sc[19] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 203:  C2H4 + pC4H9 <=> PXC6H13
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[15] + g_RT_qss[7] - g_RT_qss[9])) * (refC) * (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 204:  C7H14 + H <=> C2H4 + PXC5H11
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[26] - g_RT_qss[8])) *
                           (sc[15] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 205:  C7H14 + H <=> C3H6 + pC4H9
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[26]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[26] - g_RT_qss[7])) *
                           (sc[19] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 206:  C2H4 + PXC5H11 <=> PXC7H15
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(g_RT[15] + g_RT_qss[8] - g_RT_qss[10])) *
                           (refC) * (sc_qss[10]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 207:  C8H16 + H <=> C2H4 + PXC6H13
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[27]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[15] + g_RT[27] - g_RT_qss[9])) *
                           (sc[15] * sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 208:  C8H16 + H <=> C3H6 + PXC5H11
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[27]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[27] - g_RT_qss[8])) *
                           (sc[19] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 209:  C2H4 + PXC6H13 <=> PXC8H17
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[9]);
    const amrex::Real qr = k_f * exp(-(g_RT[15] + g_RT_qss[9] - g_RT_qss[11])) *
                           (refC) * (sc_qss[11]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 210:  C9H18 + H <=> C2H4 + PXC7H15
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[28] - g_RT_qss[10])) *
      (sc[15] * sc_qss[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 211:  C9H18 + H <=> C3H6 + PXC6H13
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[28]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[19] + g_RT[28] - g_RT_qss[9])) *
                           (sc[19] * sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 212:  C2H4 + PXC7H15 <=> PXC9H19
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[10]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[15] - g_RT[29] + g_RT_qss[10])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 213:  C10H20 + H <=> C2H4 + PXC8H17
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[15] + g_RT[30] - g_RT_qss[11])) *
      (sc[15] * sc_qss[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 214:  C10H20 + H <=> C3H6 + PXC7H15
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[19] + g_RT[30] - g_RT_qss[10])) *
      (sc[19] * sc_qss[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 215:  C2H4 + PXC8H17 <=> PXC10H21
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] + g_RT_qss[11] - g_RT_qss[12])) *
                           (refC) * (sc_qss[12]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 216:  C12H24 <=> C5H9 + PXC7H15
    const amrex::Real k_f = 3.5e+16 * exp(-(35696.6303005228) * invT);
    const amrex::Real qf = k_f * (sc[31]);
    const amrex::Real qr = k_f * exp(-(-g_RT[23] + g_RT[31] - g_RT_qss[10])) *
                           (refCinv) * (sc[23] * sc_qss[10]);
    const amrex::Real qdot = qf - qr;
    wdot[23] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 217:  C2H4 + PXC10H21 <=> PXC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[15] + g_RT_qss[12] - g_RT_qss[13])) *
                           (refC) * (sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
  }

  {
    // reaction 218:  PXC12H25 <=> S3XC12H25
    const amrex::Real k_f =
      3670000000000 * exp((-0.6) * tc[0] - (7246.31998758796) * invT);
    const amrex::Real qf = k_f * (sc_qss[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT_qss[13] - g_RT_qss[15])) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 219:  C3H6 + PXC9H19 <=> SXC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[19] * sc[29]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[19] + g_RT[29] - g_RT_qss[14])) * (refC) * (sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[19] -= qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 220:  C4H81 + PXC8H17 <=> SXC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc_qss[11]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[22] + g_RT_qss[11] - g_RT_qss[14])) *
                           (refC) * (sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
  }

  {
    // reaction 221:  C5H10 + PXC7H15 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[24] * sc_qss[10]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[24] + g_RT_qss[10] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[24] -= qdot;
  }

  {
    // reaction 222:  C10H20 + C2H5 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[30] * sc_qss[5]);
    const amrex::Real qr = k_f * exp(-(g_RT[30] + g_RT_qss[5] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[30] -= qdot;
  }

  {
    // reaction 223:  C6H12 + PXC6H13 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[25] * sc_qss[9]);
    const amrex::Real qr = k_f * exp(-(g_RT[25] + g_RT_qss[9] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
  }

  {
    // reaction 224:  C9H18 + nC3H7 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[28] * sc_qss[6]);
    const amrex::Real qr = k_f * exp(-(g_RT[28] + g_RT_qss[6] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[28] -= qdot;
  }

  {
    // reaction 225:  C7H14 + PXC5H11 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(g_RT[26] + g_RT_qss[8] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[26] -= qdot;
  }

  {
    // reaction 226:  C8H16 + pC4H9 <=> S3XC12H25
    const amrex::Real k_f = 300000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[27] * sc_qss[7]);
    const amrex::Real qr = k_f * exp(-(g_RT[27] + g_RT_qss[7] - g_RT_qss[15])) *
                           (refC) * (sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[27] -= qdot;
  }

  {
    // reaction 227:  C2H5 + PXC10H21 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc_qss[5] * sc_qss[12]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT_qss[5] + g_RT_qss[12])) * (refC) * (sc[0]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
  }

  {
    // reaction 228:  PXC9H19 + nC3H7 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc[29] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[29] + g_RT_qss[6])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 229:  PXC8H17 + pC4H9 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc_qss[7] * sc_qss[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT_qss[7] + g_RT_qss[11])) * (refC) * (sc[0]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
  }

  {
    // reaction 230:  PXC5H11 + PXC7H15 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc_qss[8] * sc_qss[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT_qss[8] + g_RT_qss[10])) * (refC) * (sc[0]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
  }

  {
    // reaction 231:  2 PXC6H13 <=> NC12H26
    const amrex::Real k_f = 188000000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc_qss[9] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT_qss[9])) * (refC) * (sc[0]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
  }

  {
    // reaction 232:  H + NC12H26 <=> H2 + PXC12H25
    const amrex::Real k_f =
      1.3 * exp((2.54) * tc[0] - (3399.73179417669) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[1]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[13])) *
                           (sc[5] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 233:  H + NC12H26 <=> H2 + SXC12H25
    const amrex::Real k_f = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[1]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[14])) *
                           (sc[5] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 234:  H + NC12H26 <=> H2 + S3XC12H25
    const amrex::Real k_f = 3.9 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[1]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[1] - g_RT[5] - g_RT_qss[15])) *
                           (sc[5] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 235:  NC12H26 + O <=> OH + PXC12H25
    const amrex::Real k_f =
      0.19 * exp((2.68) * tc[0] - (1869.95313013034) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[13])) *
                           (sc[3] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 236:  NC12H26 + O <=> OH + SXC12H25
    const amrex::Real k_f =
      0.0952 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[14])) *
                           (sc[3] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 237:  NC12H26 + O <=> OH + S3XC12H25
    const amrex::Real k_f =
      0.1428 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[2] - g_RT[3] - g_RT_qss[15])) *
                           (sc[3] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 238:  NC12H26 + OH <=> H2O + PXC12H25
    const amrex::Real k_f =
      0.0034 * exp((2.66) * tc[0] - (265.195182879087) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[13])) *
                           (sc[6] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 239:  NC12H26 + OH <=> H2O + SXC12H25
    const amrex::Real k_f =
      0.074 * exp((2.39) * tc[0] - (197.764149661255) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[14])) *
                           (sc[6] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 240:  NC12H26 + OH <=> H2O + S3XC12H25
    const amrex::Real k_f =
      0.101 * exp((2.39) * tc[0] - (197.764149661255) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[3] - g_RT[6] - g_RT_qss[15])) *
                           (sc[6] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 241:  NC12H26 + O2 <=> HO2 + PXC12H25
    const amrex::Real k_f = 40000000 * exp(-(25628.8247894344) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[13])) *
                           (sc[4] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 242:  NC12H26 + O2 <=> HO2 + SXC12H25
    const amrex::Real k_f = 80000000 * exp(-(23948.0811256466) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[14])) *
                           (sc[4] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 243:  NC12H26 + O2 <=> HO2 + S3XC12H25
    const amrex::Real k_f = 120000000 * exp(-(23948.0811256466) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] - g_RT[4] + g_RT[8] - g_RT_qss[15])) *
                           (sc[4] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 244:  HO2 + NC12H26 <=> H2O2 + PXC12H25
    const amrex::Real k_f =
      0.0676 * exp((2.55) * tc[0] - (8298.04281911983) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[13])) *
                           (sc[7] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 245:  HO2 + NC12H26 <=> H2O2 + SXC12H25
    const amrex::Real k_f =
      0.089 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[14])) *
                           (sc[7] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 246:  HO2 + NC12H26 <=> H2O2 + S3XC12H25
    const amrex::Real k_f =
      0.0885 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[4] - g_RT[7] - g_RT_qss[15])) *
                           (sc[7] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 247:  CH3 + NC12H26 <=> CH4 + PXC12H25
    const amrex::Real k_f =
      1.81e-06 * exp((3.65) * tc[0] - (3599.50881050116) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[13])) *
                           (sc[10] * sc_qss[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 248:  CH3 + NC12H26 <=> CH4 + SXC12H25
    const amrex::Real k_f =
      6e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[14])) *
                           (sc[10] * sc_qss[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 249:  CH3 + NC12H26 <=> CH4 + S3XC12H25
    const amrex::Real k_f =
      9e-06 * exp((3.46) * tc[0] - (2757.62732860986) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[0] + g_RT[9] - g_RT[10] - g_RT_qss[15])) *
                           (sc[10] * sc_qss[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 250:  O2 + PXC12H25 => C12H25O2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 251:  C12H25O2 => O2 + PXC12H25
    const amrex::Real k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 252:  O2 + SXC12H25 => C12H25O2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 253:  C12H25O2 => O2 + SXC12H25
    const amrex::Real k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 254:  O2 + S3XC12H25 => C12H25O2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 255:  C12H25O2 => O2 + S3XC12H25
    const amrex::Real k_f = 27500000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 256:  C12H25O2 => C12OOH
    const amrex::Real k_f = 1510000000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[32] -= qdot;
  }

  {
    // reaction 257:  C12OOH => C12H25O2
    const amrex::Real k_f = 100000000000 * exp(-(5786.99165675428) * invT);
    const amrex::Real qf = k_f * (sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[32] += qdot;
  }

  {
    // reaction 258:  O2 + PXC12H25 => C12H24 + HO2
    const amrex::Real k_f = 350000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 259:  C12H24 + HO2 => O2 + PXC12H25
    const amrex::Real k_f = 316000 * exp(-(9812.72498319203) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 260:  O2 + SXC12H25 => C12H24 + HO2
    const amrex::Real k_f = 350000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 261:  C12H24 + HO2 => O2 + SXC12H25
    const amrex::Real k_f = 316000 * exp(-(9812.72498319203) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 262:  O2 + S3XC12H25 => C12H24 + HO2
    const amrex::Real k_f = 350000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 263:  C12H24 + HO2 => O2 + S3XC12H25
    const amrex::Real k_f = 316000 * exp(-(9812.72498319203) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 264:  C12OOH + O2 => O2C12H24OOH
    const amrex::Real k_f = 46000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
  }

  {
    // reaction 265:  O2C12H24OOH => C12OOH + O2
    const amrex::Real k_f = 25100000000000 * exp(-(13788.1366430493) * invT);
    const amrex::Real qf = k_f * (sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
  }

  {
    // reaction 266:  O2C12H24OOH <=> OC12H23OOH + OH
    const amrex::Real k_f = 89000000000 * exp(-(8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc_qss[17]);
    const amrex::Real qr = k_f * exp(-(-g_RT[3] - g_RT[33] + g_RT_qss[17])) *
                           (refCinv) * (sc[3] * sc[33]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 267:  OC12H23OOH => 3 C2H4 + C2H5 + 2 CH2CHO + OH
    const amrex::Real k_f = 1.8e+15 * exp(-(21167.8090470755) * invT);
    const amrex::Real qf = k_f * (sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[15] += 3.000000 * qdot;
    wdot[17] += 2.000000 * qdot;
    wdot[33] -= qdot;
  }

  return;
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[])
{

  // convert to SI
  for (int id = 0; id < 35; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, T);

  // convert to chemkin units
  for (int id = 0; id < 35; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[35]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 35; i++) {
    YOW += y[i] * imw(i);
  }
  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  for (int i = 0; i < 35; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 35; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[35]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 35; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 35; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[35]; // temporary storage

  // See Eq 8 with an extra 1e6 so c goes to SI
  for (int i = 0; i < 35; i++) {
    c[i] = 1e6 * rho * y[i] * imw(i);
  }

  // call productionRate
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 35; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[35];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 170.340000;  // NC12H26
  XW += x[1] * 1.008000;    // H
  XW += x[2] * 15.999000;   // O
  XW += x[3] * 17.007000;   // OH
  XW += x[4] * 33.006000;   // HO2
  XW += x[5] * 2.016000;    // H2
  XW += x[6] * 18.015000;   // H2O
  XW += x[7] * 34.014000;   // H2O2
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 15.035000;   // CH3
  XW += x[10] * 16.043000;  // CH4
  XW += x[11] * 30.026000;  // CH2O
  XW += x[12] * 28.010000;  // CO
  XW += x[13] * 44.009000;  // CO2
  XW += x[14] * 26.038000;  // C2H2
  XW += x[15] * 28.054000;  // C2H4
  XW += x[16] * 30.070000;  // C2H6
  XW += x[17] * 43.045000;  // CH2CHO
  XW += x[18] * 41.073000;  // aC3H5
  XW += x[19] * 42.081000;  // C3H6
  XW += x[20] * 56.064000;  // C2H3CHO
  XW += x[21] * 55.100000;  // C4H7
  XW += x[22] * 56.108000;  // C4H81
  XW += x[23] * 69.127000;  // C5H9
  XW += x[24] * 70.135000;  // C5H10
  XW += x[25] * 84.162000;  // C6H12
  XW += x[26] * 98.189000;  // C7H14
  XW += x[27] * 112.216000; // C8H16
  XW += x[28] * 126.243000; // C9H18
  XW += x[29] * 127.251000; // PXC9H19
  XW += x[30] * 140.270000; // C10H20
  XW += x[31] * 168.324000; // C12H24
  XW += x[32] * 201.330000; // C12H25O2
  XW += x[33] * 216.321000; // OC12H23OOH
  XW += x[34] * 28.014000;  // N2
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 35; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 35; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int kcharge[])
{
  kcharge[0] = 0;  // NC12H26
  kcharge[1] = 0;  // H
  kcharge[2] = 0;  // O
  kcharge[3] = 0;  // OH
  kcharge[4] = 0;  // HO2
  kcharge[5] = 0;  // H2
  kcharge[6] = 0;  // H2O
  kcharge[7] = 0;  // H2O2
  kcharge[8] = 0;  // O2
  kcharge[9] = 0;  // CH3
  kcharge[10] = 0; // CH4
  kcharge[11] = 0; // CH2O
  kcharge[12] = 0; // CO
  kcharge[13] = 0; // CO2
  kcharge[14] = 0; // C2H2
  kcharge[15] = 0; // C2H4
  kcharge[16] = 0; // C2H6
  kcharge[17] = 0; // CH2CHO
  kcharge[18] = 0; // aC3H5
  kcharge[19] = 0; // C3H6
  kcharge[20] = 0; // C2H3CHO
  kcharge[21] = 0; // C4H7
  kcharge[22] = 0; // C4H81
  kcharge[23] = 0; // C5H9
  kcharge[24] = 0; // C5H10
  kcharge[25] = 0; // C6H12
  kcharge[26] = 0; // C7H14
  kcharge[27] = 0; // C8H16
  kcharge[28] = 0; // C9H18
  kcharge[29] = 0; // PXC9H19
  kcharge[30] = 0; // C10H20
  kcharge[31] = 0; // C12H24
  kcharge[32] = 0; // C12H25O2
  kcharge[33] = 0; // OC12H23OOH
  kcharge[34] = 0; // N2
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real zk[])
{

  int kchrg[35];
  CKCHRG(kchrg);

  for (int id = 0; id < 35; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw(id);
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 0: NC12H26
    species[0] = +1.47237711e-01 - 1.88794054e-04 * tc[1] +
                 9.22323804e-08 * tc[2] - 1.61440892e-11 * tc[3];
    // species 31: C12H24
    species[31] = +1.43992360e-01 - 1.92276803e-04 * tc[1] +
                  9.90523419e-08 * tc[2] - 1.84959276e-11 * tc[3];
  } else {
    // species 0: NC12H26
    species[0] = +5.63550048e-02 - 3.82986400e-05 * tc[1] +
                 8.88074586e-09 * tc[2] - 6.84976600e-13 * tc[3];
    // species 31: C12H24
    species[31] = +5.26230753e-02 - 3.57248638e-05 * tc[1] +
                  8.27849589e-09 * tc[2] - 6.38249996e-13 * tc[3];
  }

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 1: H
    species[1] = +7.05332819e-13 - 3.99183928e-15 * tc[1] +
                 6.90244896e-18 * tc[2] - 3.71092933e-21 * tc[3];
    // species 2: O
    species[2] = -3.27931884e-03 + 1.32861279e-05 * tc[1] -
                 1.83841987e-08 * tc[2] + 8.45063884e-12 * tc[3];
    // species 3: OH
    species[3] = -3.22544939e-03 + 1.30552938e-05 * tc[1] -
                 1.73956093e-08 * tc[2] + 8.24949516e-12 * tc[3];
    // species 4: HO2
    species[4] = -4.74912051e-03 + 4.23165782e-05 * tc[1] -
                 7.28291682e-08 * tc[2] + 3.71690050e-11 * tc[3];
    // species 5: H2
    species[5] = +7.98052075e-03 - 3.89563020e-05 * tc[1] +
                 6.04716282e-08 * tc[2] - 2.95044704e-11 * tc[3];
    // species 6: H2O
    species[6] = -2.03643410e-03 + 1.30408042e-05 * tc[1] -
                 1.64639119e-08 * tc[2] + 7.08791268e-12 * tc[3];
    // species 7: H2O2
    species[7] = -5.42822417e-04 + 3.34671402e-05 * tc[1] -
                 6.47312439e-08 * tc[2] + 3.44981745e-11 * tc[3];
    // species 8: O2
    species[8] = -2.99673416e-03 + 1.96946040e-05 * tc[1] -
                 2.90438853e-08 * tc[2] + 1.29749135e-11 * tc[3];
    // species 9: CH3
    species[9] = +2.01095175e-03 + 1.14604371e-05 * tc[1] -
                 2.06135228e-08 * tc[2] + 1.01754294e-11 * tc[3];
    // species 10: CH4
    species[10] = -1.36709788e-02 + 9.83601198e-05 * tc[1] -
                  1.45422908e-07 * tc[2] + 6.66775824e-11 * tc[3];
    // species 11: CH2O
    species[11] = -9.90833369e-03 + 7.46440016e-05 * tc[1] -
                  1.13785578e-07 * tc[2] + 5.27090608e-11 * tc[3];
    // species 12: CO
    species[12] = -6.10353680e-04 + 2.03362866e-06 * tc[1] +
                  2.72101765e-09 * tc[2] - 3.61769800e-12 * tc[3];
    // species 13: CO2
    species[13] = +8.98459677e-03 - 1.42471254e-05 * tc[1] +
                  7.37757066e-09 * tc[2] - 5.74798192e-13 * tc[3];
    // species 14: C2H2
    species[14] = +2.33615629e-02 - 7.10343630e-05 * tc[1] +
                  8.40457311e-08 * tc[2] - 3.40029190e-11 * tc[3];
    // species 15: C2H4
    species[15] = -7.57052247e-03 + 1.14198058e-04 * tc[1] -
                  2.07476626e-07 * tc[2] + 1.07953749e-10 * tc[3];
    // species 16: C2H6
    species[16] = -5.50154270e-03 + 1.19887658e-04 * tc[1] -
                  2.12539886e-07 * tc[2] + 1.07474308e-10 * tc[3];
    // species 17: CH2CHO
    species[17] = +1.07385740e-02 + 3.78298500e-06 * tc[1] -
                  2.14757493e-08 * tc[2] + 1.14695404e-11 * tc[3];
    // species 18: aC3H5
    species[18] = +1.98138210e-02 + 2.49941200e-05 * tc[1] -
                  1.00066665e-07 * tc[2] + 6.33862840e-11 * tc[3];
    // species 19: C3H6
    species[19] = +2.09251800e-02 + 8.97358800e-06 * tc[1] -
                  5.00673600e-08 * tc[2] + 2.86325840e-11 * tc[3];
    // species 20: C2H3CHO
    species[20] = +2.62310540e-02 - 1.85824610e-05 * tc[1] -
                  1.43511816e-08 * tc[2] + 1.33922172e-11 * tc[3];
    // species 21: C4H7
    species[21] = +3.96788570e-02 - 4.57961720e-05 * tc[1] +
                  6.40589190e-09 * tc[2] + 9.23855000e-12 * tc[3];
    // species 22: C4H81
    species[22] = +3.08533800e-02 + 1.01730494e-05 * tc[1] -
                  7.39646640e-08 * tc[2] + 4.44407720e-11 * tc[3];
    // species 23: C5H9
    species[23] = +4.04303890e-02 + 1.35604678e-05 * tc[1] -
                  1.01174226e-07 * tc[2] + 6.04668520e-11 * tc[3];
    // species 32: C12H25O2
    species[32] = +8.93873000e-02 + 2.90702000e-05 * tc[1] -
                  2.24775000e-07 * tc[2] + 1.34130000e-10 * tc[3];
    // species 33: OC12H23OOH
    species[33] = +6.50623000e-02 + 1.39011600e-04 * tc[1] -
                  3.80715000e-07 * tc[2] + 2.04396400e-10 * tc[3];
    // species 34: N2
    species[34] = +1.40824040e-03 - 7.92644400e-06 * tc[1] +
                  1.69245450e-08 * tc[2] - 9.77941600e-12 * tc[3];
  } else {
    // species 1: H
    species[1] = -2.30842973e-11 + 3.23123896e-14 * tc[1] -
                 1.42054571e-17 * tc[2] + 1.99278943e-21 * tc[3];
    // species 2: O
    species[2] = -8.59741137e-05 + 8.38969178e-08 * tc[1] -
                 3.00533397e-11 * tc[2] + 4.91334764e-15 * tc[3];
    // species 3: OH
    species[3] = +1.05650448e-03 - 5.18165516e-07 * tc[1] +
                 9.15656022e-11 * tc[2] - 5.32783504e-15 * tc[3];
    // species 4: HO2
    species[4] = +2.23982013e-03 - 1.26731630e-06 * tc[1] +
                 3.42739110e-10 * tc[2] - 4.31634140e-14 * tc[3];
    // species 5: H2
    species[5] = -4.94024731e-05 + 9.98913556e-07 * tc[1] -
                 5.38699182e-10 * tc[2] + 8.01021504e-14 * tc[3];
    // species 6: H2O
    species[6] = +2.17691804e-03 - 3.28145036e-07 * tc[1] -
                 2.91125961e-10 * tc[2] + 6.72803968e-14 * tc[3];
    // species 7: H2O2
    species[7] = +4.90831694e-03 - 3.80278450e-06 * tc[1] +
                 1.11355796e-09 * tc[2] - 1.15163322e-13 * tc[3];
    // species 8: O2
    species[8] = +1.48308754e-03 - 1.51593334e-06 * tc[1] +
                 6.28411665e-10 * tc[2] - 8.66871176e-14 * tc[3];
    // species 9: CH3
    species[9] = +7.23990037e-03 - 5.97428696e-06 * tc[1] +
                 1.78705393e-09 * tc[2] - 1.86861758e-13 * tc[3];
    // species 10: CH4
    species[10] = +1.33909467e-02 - 1.14657162e-05 * tc[1] +
                  3.66877605e-09 * tc[2] - 4.07260920e-13 * tc[3];
    // species 11: CH2O
    species[11] = +9.20000082e-03 - 8.84517626e-06 * tc[1] +
                  3.01923636e-09 * tc[2] - 3.53542256e-13 * tc[3];
    // species 12: CO
    species[12] = +2.06252743e-03 - 1.99765154e-06 * tc[1] +
                  6.90159024e-10 * tc[2] - 8.14590864e-14 * tc[3];
    // species 13: CO2
    species[13] = +4.41437026e-03 - 4.42962808e-06 * tc[1] +
                  1.57047056e-09 * tc[2] - 1.88833666e-13 * tc[3];
    // species 14: C2H2
    species[14] = +5.96166664e-03 - 4.74589704e-06 * tc[1] +
                  1.40223651e-09 * tc[2] - 1.44494085e-13 * tc[3];
    // species 15: C2H4
    species[15] = +1.46454151e-02 - 1.34215583e-05 * tc[1] +
                  4.41668769e-09 * tc[2] - 5.02824244e-13 * tc[3];
    // species 16: C2H6
    species[16] = +2.16852677e-02 - 2.00512134e-05 * tc[1] +
                  6.64236003e-09 * tc[2] - 7.60011560e-13 * tc[3];
    // species 17: CH2CHO
    species[17] = +8.13059140e-03 - 5.48724900e-06 * tc[1] +
                  1.22109123e-09 * tc[2] - 8.70406840e-14 * tc[3];
    // species 18: aC3H5
    species[18] = +1.43247310e-02 - 1.13563264e-05 * tc[1] +
                  3.32424030e-09 * tc[2] - 3.61455548e-13 * tc[3];
    // species 19: C3H6
    species[19] = +1.49083400e-02 - 9.89979800e-06 * tc[1] +
                  2.16360660e-09 * tc[2] - 1.50648160e-13 * tc[3];
    // species 20: C2H3CHO
    species[20] = +1.71142560e-02 - 1.49668322e-05 * tc[1] +
                  4.27567470e-09 * tc[2] - 3.66987364e-13 * tc[3];
    // species 21: C4H7
    species[21] = +2.26345580e-02 - 1.85090940e-05 * tc[1] +
                  5.04237810e-09 * tc[2] - 4.16344680e-13 * tc[3];
    // species 22: C4H81
    species[22] = +3.43505070e-02 - 3.17663940e-05 * tc[1] +
                  9.92689860e-09 * tc[2] - 1.01444180e-12 * tc[3];
    // species 23: C5H9
    species[23] = +2.27141380e-02 - 1.55820926e-05 * tc[1] +
                  3.56295660e-09 * tc[2] - 2.63729792e-13 * tc[3];
    // species 32: C12H25O2
    species[32] = +5.37539000e-02 - 3.36372000e-05 * tc[1] +
                  7.54101000e-09 * tc[2] - 5.88832000e-13 * tc[3];
    // species 33: OC12H23OOH
    species[33] = +6.16392000e-02 - 4.19672000e-05 * tc[1] +
                  9.99498000e-09 * tc[2] - 8.14360000e-13 * tc[3];
    // species 34: N2
    species[34] = +1.48797680e-03 - 1.13695200e-06 * tc[1] +
                  3.02911140e-10 * tc[2] - 2.70134040e-14 * tc[3];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 24: C5H10
    species[24] = +5.74218294e-02 - 7.48973780e-05 * tc[1] +
                  3.82094967e-08 * tc[2] - 7.18439156e-12 * tc[3];
    // species 25: C6H12
    species[25] = +6.98655426e-02 - 9.18816044e-05 * tc[1] +
                  4.70902029e-08 * tc[2] - 8.85184700e-12 * tc[3];
    // species 26: C7H14
    species[26] = +8.24611601e-02 - 1.09300822e-04 * tc[1] +
                  5.63586909e-08 * tc[2] - 1.06295193e-11 * tc[3];
    // species 27: C8H16
    species[27] = +9.46066357e-02 - 1.25477104e-04 * tc[1] +
                  6.45474927e-08 * tc[2] - 1.21087473e-11 * tc[3];
    // species 28: C9H18
    species[28] = +1.06958297e-01 - 1.42194649e-04 * tc[1] +
                  7.31913231e-08 * tc[2] - 1.37108619e-11 * tc[3];
    // species 30: C10H20
    species[30] = +1.19305598e-01 - 1.58897805e-04 * tc[1] +
                  8.18209788e-08 * tc[2] - 1.53087349e-11 * tc[3];
  } else {
    // species 24: C5H10
    species[24] = +2.24072471e-02 - 1.52669605e-05 * tc[1] +
                  3.54566898e-09 * tc[2] - 2.73754056e-13 * tc[3];
    // species 25: C6H12
    species[25] = +2.67377658e-02 - 1.82007355e-05 * tc[1] +
                  4.22459304e-09 * tc[2] - 3.26049698e-13 * tc[3];
    // species 26: C7H14
    species[26] = +3.10607878e-02 - 2.11289586e-05 * tc[1] +
                  4.90217340e-09 * tc[2] - 3.78239288e-13 * tc[3];
    // species 27: C8H16
    species[27] = +3.53666462e-02 - 2.40416776e-05 * tc[1] +
                  5.57565159e-09 * tc[2] - 4.30089048e-13 * tc[3];
    // species 28: C9H18
    species[28] = +3.96825287e-02 - 2.69638892e-05 * tc[1] +
                  6.25171356e-09 * tc[2] - 4.82157176e-13 * tc[3];
    // species 30: C10H20
    species[30] = +4.39971526e-02 - 2.98851060e-05 * tc[1] +
                  6.92753034e-09 * tc[2] - 5.34205908e-13 * tc[3];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 29: PXC9H19
    species[29] = +1.05617283e-01 - 1.33639994e-04 * tc[1] +
                  6.43458498e-08 * tc[2] - 1.10961710e-11 * tc[3];
  } else {
    // species 29: PXC9H19
    species[29] = +4.12657344e-02 - 2.80766578e-05 * tc[1] +
                  6.51524613e-09 * tc[2] - 5.02769228e-13 * tc[3];
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

  // Analytical Jacobian with QSSA is only supported with symbolic
  // implementation. Re-build in ceptr with -qsj flag.
  amrex::Abort();
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[35];

  for (int k = 0; k < 35; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 35; k++) {
    J[1260 + k] *= 1.e-6;
    J[k * 36 + 35] *= 1.e6;
  }
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(amrex::Real* J, amrex::Real* sc, amrex::Real T, const int consP)
{
#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  amrex::Real dscqss_dsc[630];
  for (int i = 0; i < 630; i++) {
    dscqss_dsc[i] = 0.0;
  }
  amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;
  amrex::Real g_RT[35];
  amrex::Real h_RT[35];
  amrex::Real g_RT_qss[18];
  amrex::Real h_RT_qss[18];
  amrex::Real sc_qss[18];
  amrex::Real kf_qss[198], qf_qss[198], qr_qss[198];
  amrex::Real T_pert1, pertT;
  amrex::Real wdot_pert1[35], wdot[35];

  // dwdot/dT by finite difference
  pertT = 1e-2;
  T_pert1 = T + pertT;

  productionRate(wdot_pert1, sc, T_pert1);
  productionRate(wdot, sc, T);

  // compute the Gibbs free energy
  gibbs(g_RT, tc);
  gibbs_qss(g_RT_qss, tc);

  // compute the species enthalpy
  speciesEnthalpy(h_RT, tc);
  speciesEnthalpy_qss(h_RT_qss, tc);
  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  for (int i = 0; i < 1296; i++) {
    J[i] = 0.0;
  }
  // Species terms
  const amrex::Real x0 = -1.0 * g_RT_qss[15];
  const amrex::Real x1 = 1.0 * g_RT[24];
  const amrex::Real x2 = 1.0 * g_RT_qss[10];
  const amrex::Real x3 = x0 + x1 + x2;
  const amrex::Real x4 = 1.0 * kf_qss[151];
  const amrex::Real x5 = exp(-x3) * x4 * refC;
  const amrex::Real x6 = 1e-12 + x5;
  const amrex::Real x7 = -x2;
  const amrex::Real x8 = 1.0 * g_RT[15];
  const amrex::Real x9 = -x8;
  const amrex::Real x10 = 1.0 * g_RT[1];
  const amrex::Real x11 = 1.0 * g_RT[28];
  const amrex::Real x12 = x10 + x11;
  const amrex::Real x13 = x12 + x7 + x9;
  const amrex::Real x14 = 1.0 * kf_qss[140];
  const amrex::Real x15 = exp(-x13) * x14;
  const amrex::Real x16 = x4 * sc[24];
  const amrex::Real x17 = -1.0 * g_RT[23] + 1.0 * g_RT[31] + x7;
  const amrex::Real x18 = 1.0 * kf_qss[146];
  const amrex::Real x19 = exp(-x17) * x18 * refCinv;
  const amrex::Real x20 = 1.0 * kf_qss[142];
  const amrex::Real x21 = sc[0] + sc[11] + sc[17] + sc[18] + sc[19] + sc[1] +
                          sc[20] + sc[21] + sc[22] + sc[23] + sc[24] + sc[25] +
                          sc[26] + sc[27] + sc[28] + sc[29] + sc[2] + sc[30] +
                          sc[31] + sc[32] + sc[33] + sc[34] + sc[3] + sc[4] +
                          sc[7] + sc[8] + sc[9];
  const amrex::Real x22 = sc[14] + sc[15] + x21;
  const amrex::Real x23 = 2 * sc[5];
  const amrex::Real x24 = 6.0 * sc[6];
  const amrex::Real x25 =
    2 * sc[10] + 1.5 * sc[12] + 2 * sc[13] + 3.0 * sc[16] + x23 + x24;
  const amrex::Real x26 = x22 + x25;
  const amrex::Real x27 = 6.26e+26 * refC;
  const amrex::Real x28 = 1.0 * g_RT[26];
  const amrex::Real x29 = -(x10 + x28 + x7);
  const amrex::Real x30 = -6.66 * tc[0];
  const amrex::Real x31 = -3522.51666063304 * invT + x30;
  const amrex::Real x32 = exp(x29 + x31);
  const amrex::Real x33 = pow(log(10), -1);
  const amrex::Real x34 = pow(kf_qss[13], -1);
  const amrex::Real x35 = exp(x31);
  const amrex::Real x36 = 6.26e+26 * x35;
  const amrex::Real x37 = x36 * x26;
  const amrex::Real x38 = x34 * x37;
  const amrex::Real x39 =
    log(exp(-48097.0 * invT) + 1.0 * exp(-0.000763358778625954 * tc[1]));
  const amrex::Real x40 = x33 * x39;
  const amrex::Real x41 = -0.4 - 0.67 * x40;
  const amrex::Real x42 = x41 + x33 * log(x38);
  const amrex::Real x43 = 0.75 - 1.27 * x40;
  const amrex::Real x44 = -0.14 * x42 + x43;
  const amrex::Real x45 = pow(x44, -2);
  const amrex::Real x46 = pow(x42, 2);
  const amrex::Real x47 = 1.0 + x45 * x46;
  const amrex::Real x48 = pow(10, x40 / x47);
  const amrex::Real x49 = 1.0 + x38;
  const amrex::Real x50 = x48 / x49;
  const amrex::Real x51 = x50 * x32;
  const amrex::Real x52 = x51 * x27;
  const amrex::Real x53 = x52 * x26;
  const amrex::Real x54 = 1.0 * g_RT_qss[8];
  const amrex::Real x55 = x54 + x7 + x8;
  const amrex::Real x56 = 1.0 * kf_qss[136];
  const amrex::Real x57 = exp(-x55) * x56 * refC;
  const amrex::Real x58 = 1.0 * g_RT[30];
  const amrex::Real x59 = 1.0 * g_RT[19];
  const amrex::Real x60 = -x59;
  const amrex::Real x61 = x10 + x60;
  const amrex::Real x62 = x58 + x61 + x7;
  const amrex::Real x63 = 1.0 * kf_qss[144];
  const amrex::Real x64 = exp(-x62) * x63;
  const amrex::Real x65 = 1e-12 - x16 - x53 - x57 - x15 * sc[15] -
                          x19 * sc[23] - x20 * sc[15] - x64 * sc[19];
  const amrex::Real x66 = pow(x65, -1);
  const amrex::Real x67 = x6 * x66;
  const amrex::Real x68 = -x54;
  const amrex::Real x69 = 1.0 * g_RT[27];
  const amrex::Real x70 = x61 + x68 + x69;
  const amrex::Real x71 = 1.0 * exp(-x70) * kf_qss[138];
  const amrex::Real x72 = 1.0 * sc[15];
  const amrex::Real x73 = x10 + x9;
  const amrex::Real x74 = x28 + x68 + x73;
  const amrex::Real x75 = exp(-x74) * kf_qss[134];
  const amrex::Real x76 = 1.0 * g_RT_qss[6];
  const amrex::Real x77 = x68 + x76 + x8;
  const amrex::Real x78 = 1.0 * kf_qss[130];
  const amrex::Real x79 = exp(-x77) * x78 * refC;
  const amrex::Real x80 = -(x1 + x10 + x68);
  const amrex::Real x81 = exp(x31 + x80);
  const amrex::Real x82 = pow(kf_qss[11], -1);
  const amrex::Real x83 = x82 * x37;
  const amrex::Real x84 = x41 + x33 * log(x83);
  const amrex::Real x85 = x43 - 0.14 * x84;
  const amrex::Real x86 = pow(x85, -2);
  const amrex::Real x87 = pow(x84, 2);
  const amrex::Real x88 = 1.0 + x86 * x87;
  const amrex::Real x89 = pow(10, x40 / x88);
  const amrex::Real x90 = 1.0 + x83;
  const amrex::Real x91 = x89 / x90;
  const amrex::Real x92 = x81 * x91;
  const amrex::Real x93 = x92 * x27;
  const amrex::Real x94 = x93 * x26;
  const amrex::Real x95 = x56 * sc[15];
  const amrex::Real x96 = 1.0 * kf_qss[155];
  const amrex::Real x97 = x96 * sc[26];
  const amrex::Real x98 =
    1e-12 - x79 - x94 - x95 - x97 - x71 * sc[19] - x72 * x75;
  const amrex::Real x99 = pow(x98, -1);
  const amrex::Real x100 = 1e-12 + x57;
  const amrex::Real x101 = x99 * x100;
  const amrex::Real x102 = x67 * x101;
  const amrex::Real x103 = x0 + x28 + x54;
  const amrex::Real x104 = exp(-x103) * x96 * refC;
  const amrex::Real x105 = 1e-12 + x104;
  const amrex::Real x106 = x99 * x105;
  const amrex::Real x107 = -x102 + x106;
  const amrex::Real x108 = 1e-12 + x95;
  const amrex::Real x109 = x66 * x108;
  const amrex::Real x110 = 1 - x101 * x109;
  const amrex::Real x111 = pow(x110, -1);
  const amrex::Real x112 = 1.0 * kf_qss[184];
  const amrex::Real x113 = 1.0 * sc[6];
  const amrex::Real x114 = -1.0 * g_RT[6];
  const amrex::Real x115 = 1.0 * g_RT[3];
  const amrex::Real x116 = x114 + x115;
  const amrex::Real x117 = 1.0 * g_RT[0];
  const amrex::Real x118 = x0 + x117;
  const amrex::Real x119 = x116 + x118;
  const amrex::Real x120 = exp(-x119) * kf_qss[170];
  const amrex::Real x121 = 1.0 * g_RT_qss[7];
  const amrex::Real x122 = x0 + x121 + x69;
  const amrex::Real x123 = 1.0 * kf_qss[156];
  const amrex::Real x124 = exp(-x122) * refC * x123;
  const amrex::Real x125 = 1.0 * g_RT_qss[13];
  const amrex::Real x126 = 1.0 * kf_qss[148];
  const amrex::Real x127 = exp(-(x0 + x125)) * x126;
  const amrex::Real x128 = 1.0 * sc[3];
  const amrex::Real x129 = -x115;
  const amrex::Real x130 = 1.0 * g_RT[2];
  const amrex::Real x131 = x129 + x130;
  const amrex::Real x132 = x118 + x131;
  const amrex::Real x133 = exp(-x132) * kf_qss[167];
  const amrex::Real x134 = 1.0 * sc[7];
  const amrex::Real x135 = 1.0 * g_RT[7];
  const amrex::Real x136 = -x135;
  const amrex::Real x137 = 1.0 * g_RT[4];
  const amrex::Real x138 = x136 + x137;
  const amrex::Real x139 = x118 + x138;
  const amrex::Real x140 = exp(-x139) * kf_qss[176];
  const amrex::Real x141 = 1.0 * sc[5];
  const amrex::Real x142 = 1.0 * g_RT[5];
  const amrex::Real x143 = -x142;
  const amrex::Real x144 = x10 + x143;
  const amrex::Real x145 = x118 + x144;
  const amrex::Real x146 = exp(-x145) * kf_qss[164];
  const amrex::Real x147 = 1.0 * g_RT_qss[9];
  const amrex::Real x148 = 1.0 * g_RT[25];
  const amrex::Real x149 = x0 + x147 + x148;
  const amrex::Real x150 = 1.0 * kf_qss[153];
  const amrex::Real x151 = exp(-x149) * refC * x150;
  const amrex::Real x152 = x0 + x11 + x76;
  const amrex::Real x153 = 1.0 * kf_qss[154];
  const amrex::Real x154 = exp(-x152) * refC * x153;
  const amrex::Real x155 = 1.0 * sc[4];
  const amrex::Real x156 = 1.0 * g_RT[8];
  const amrex::Real x157 = -x137;
  const amrex::Real x158 = x156 + x157;
  const amrex::Real x159 = x118 + x158;
  const amrex::Real x160 = exp(-x159) * kf_qss[173];
  const amrex::Real x161 = 1.0 * kf_qss[192];
  const amrex::Real x162 = 1.0 * g_RT_qss[5];
  const amrex::Real x163 = x0 + x162 + x58;
  const amrex::Real x164 = 1.0 * kf_qss[152];
  const amrex::Real x165 = exp(-x163) * refC * x164;
  const amrex::Real x166 = 1.0 * sc[10];
  const amrex::Real x167 = 1.0 * g_RT[9];
  const amrex::Real x168 = 1.0 * g_RT[10];
  const amrex::Real x169 = -x168;
  const amrex::Real x170 = x167 + x169;
  const amrex::Real x171 = x117 + x170;
  const amrex::Real x172 = x0 + x171;
  const amrex::Real x173 = exp(-x172) * kf_qss[179];
  const amrex::Real x174 = 1e-12 - x104 - x124 - x127 - x151 - x154 - x165 -
                           x5 - x112 * sc[8] - x113 * x120 - x128 * x133 -
                           x134 * x140 - x141 * x146 - x160 * x155 -
                           x161 * sc[8] - x166 * x173;
  const amrex::Real x175 = pow(x174, -1);
  const amrex::Real x176 = 1e-12 + x16;
  const amrex::Real x177 = x176 * x175;
  const amrex::Real x178 = 1e-12 + x97;
  const amrex::Real x179 = -x109 * x177 + x178 * x175;
  const amrex::Real x180 = x111 * x179;
  const amrex::Real x181 = 1 - x107 * x180 - x67 * x177;
  const amrex::Real x182 = pow(x181, -1);
  const amrex::Real x183 = x107 * x111;
  const amrex::Real x184 = x26 / kf_qss[9];
  const amrex::Real x185 = x36 * x184;
  const amrex::Real x186 = x41 + x33 * log(x185);
  const amrex::Real x187 = -0.14 * x186 + x43;
  const amrex::Real x188 = pow(x187, -2);
  const amrex::Real x189 = pow(x186, 2);
  const amrex::Real x190 = 1.0 + x189 * x188;
  const amrex::Real x191 = pow(10, x40 / x190);
  const amrex::Real x192 = 1.0 + x185;
  const amrex::Real x193 = x191 / x192;
  const amrex::Real x194 = -x76;
  const amrex::Real x195 = x10 + x59;
  const amrex::Real x196 = -(x194 + x195);
  const amrex::Real x197 = exp(x196 + x31);
  const amrex::Real x198 = x27 * x197;
  const amrex::Real x199 = x198 * x193;
  const amrex::Real x200 = x26 * x199;
  const amrex::Real x201 = x78 * sc[15];
  const amrex::Real x202 = x153 * sc[28];
  const amrex::Real x203 = 1.0 * kf_qss[88];
  const amrex::Real x204 = 1.0 * kf_qss[112];
  const amrex::Real x205 = x204 * sc[2];
  const amrex::Real x206 = sc[3] * refCinv;
  const amrex::Real x207 = 1.0 * g_RT[11];
  const amrex::Real x208 = -x207;
  const amrex::Real x209 = x129 + x137;
  const amrex::Real x210 = x208 + x209;
  const amrex::Real x211 = x121 + x194;
  const amrex::Real x212 = exp(-(x210 + x211));
  const amrex::Real x213 = 1.0 * kf_qss[125];
  const amrex::Real x214 = x213 * x212;
  const amrex::Real x215 = x214 * x206;
  const amrex::Real x216 = x215 * sc[11];
  const amrex::Real x217 = 1.0 * kf_qss[116];
  const amrex::Real x218 = x148 + x194 + x61;
  const amrex::Real x219 = 1.0 * exp(-x218) * kf_qss[132];
  const amrex::Real x220 = 1.0 * kf_qss[115];
  const amrex::Real x221 = x220 * sc[4];
  const amrex::Real x222 = 1.0 * kf_qss[114];
  const amrex::Real x223 = 1.0 * kf_qss[113];
  const amrex::Real x224 = 1.0 * kf_qss[158];
  const amrex::Real x225 = 1.0 * kf_qss[110];
  const amrex::Real x226 = x225 * sc[1];
  const amrex::Real x227 = 1.0 * kf_qss[111];
  const amrex::Real x228 = x1 + x194 + x73;
  const amrex::Real x229 = exp(-x228) * kf_qss[128];
  const amrex::Real x230 = x130 + x208;
  const amrex::Real x231 = exp(-(x211 + x230));
  const amrex::Real x232 = 1.0 * kf_qss[122];
  const amrex::Real x233 = x232 * x231;
  const amrex::Real x234 = x233 * sc[11];
  const amrex::Real x235 = 1e-12 - x200 - x201 - x202 - x203 - x205 - x216 -
                           x221 - x226 - x234 - x217 * sc[9] - x219 * sc[19] -
                           x222 * sc[8] - x223 * sc[3] - x224 * sc[29] -
                           x227 * sc[1] - x72 * x229;
  const amrex::Real x236 = pow(x235, -1);
  const amrex::Real x237 = 1e-12 + x79;
  const amrex::Real x238 = x237 * x236;
  const amrex::Real x239 = 1e-12 + x154;
  const amrex::Real x240 = x236 * x239 - x238 * x183;
  const amrex::Real x241 = x240 * x182;
  const amrex::Real x242 = x164 * sc[30];
  const amrex::Real x243 = 1e-12 + x242;
  const amrex::Real x244 = x243 * x175;
  const amrex::Real x245 = x241 * x244;
  const amrex::Real x246 = -x162;
  const amrex::Real x247 = x246 + x76;
  const amrex::Real x248 = exp(-(x230 + x247));
  const amrex::Real x249 = x204 * x248;
  const amrex::Real x250 = x249 * sc[11];
  const amrex::Real x251 = -x167;
  const amrex::Real x252 = x10 + x251;
  const amrex::Real x253 = x247 + x252;
  const amrex::Real x254 = exp(-x253) * x225;
  const amrex::Real x255 = x254 * sc[9];
  const amrex::Real x256 = exp(-(x210 + x247));
  const amrex::Real x257 = x256 * x220;
  const amrex::Real x258 = x206 * x257;
  const amrex::Real x259 = x258 * sc[11];
  const amrex::Real x260 = 1e-12 + x250 + x255 + x259;
  const amrex::Real x261 = x236 * x260;
  const amrex::Real x262 = -x245 + x261;
  const amrex::Real x263 = x123 * sc[27];
  const amrex::Real x264 = 1e-12 + x263;
  const amrex::Real x265 = x264 * x175;
  const amrex::Real x266 = x232 * sc[2];
  const amrex::Real x267 = x213 * sc[4];
  const amrex::Real x268 = 1e-12 + x266 + x267;
  const amrex::Real x269 = x236 * x268 - x265 * x241;
  const amrex::Real x270 = x150 * sc[25];
  const amrex::Real x271 = 1e-12 + x270;
  const amrex::Real x272 = x271 * x175;
  const amrex::Real x273 = x272 * x182;
  const amrex::Real x274 = -x121;
  const amrex::Real x275 = x148 + x274 + x73;
  const amrex::Real x276 = exp(-x275) * kf_qss[131];
  const amrex::Real x277 = x274 + x28 + x61;
  const amrex::Real x278 = 1.0 * exp(-x277) * kf_qss[135];
  const amrex::Real x279 = 1.0 * kf_qss[120];
  const amrex::Real x280 = 1.0 * kf_qss[124];
  const amrex::Real x281 = 1.0 * kf_qss[126];
  const amrex::Real x282 = 1.0 * kf_qss[121];
  const amrex::Real x283 = pow(kf_qss[10], -1);
  const amrex::Real x284 = x37 * x283;
  const amrex::Real x285 = x41 + x33 * log(x284);
  const amrex::Real x286 = -0.14 * x285 + x43;
  const amrex::Real x287 = pow(x286, -2);
  const amrex::Real x288 = pow(x285, 2);
  const amrex::Real x289 = 1.0 + x287 * x288;
  const amrex::Real x290 = pow(10, x40 / x289);
  const amrex::Real x291 = 1.0 + x284;
  const amrex::Real x292 = x290 / x291;
  const amrex::Real x293 = 1.0 * g_RT[22];
  const amrex::Real x294 = x10 + x293;
  const amrex::Real x295 = -(x274 + x294);
  const amrex::Real x296 = exp(x295 + x31);
  const amrex::Real x297 = x27 * x296;
  const amrex::Real x298 = x297 * x292;
  const amrex::Real x299 = x26 * x298;
  const amrex::Real x300 = 1.0 * kf_qss[123];
  const amrex::Real x301 = 1.0 * kf_qss[133];
  const amrex::Real x302 = x301 * sc[15];
  const amrex::Real x303 =
    1e-12 - x263 - x266 - x267 - x299 - x302 - x278 * sc[19] - x279 * sc[1] -
    x280 * sc[8] - x281 * sc[9] - x282 * sc[1] - x300 * sc[3] - x72 * x276;
  const amrex::Real x304 = pow(x303, -1);
  const amrex::Real x305 = 1e-12 + x124;
  const amrex::Real x306 = x305 * x304;
  const amrex::Real x307 = -x147;
  const amrex::Real x308 = x121 + x307 + x8;
  const amrex::Real x309 = exp(-x308) * refC * x301;
  const amrex::Real x310 = 1e-12 + x309;
  const amrex::Real x311 = -x273 * x306 + x304 * x310;
  const amrex::Real x312 = 1e-12 + x126;
  const amrex::Real x313 = x312 * x175;
  const amrex::Real x314 = x313 * x182;
  const amrex::Real x315 = -x125;
  const amrex::Real x316 = x117 + x315;
  const amrex::Real x317 = x144 + x316;
  const amrex::Real x318 = exp(-x317) * kf_qss[162];
  const amrex::Real x319 = 1.0 * kf_qss[188];
  const amrex::Real x320 = x138 + x316;
  const amrex::Real x321 = exp(-x320) * kf_qss[174];
  const amrex::Real x322 = 1.0 * kf_qss[180];
  const amrex::Real x323 = x158 + x316;
  const amrex::Real x324 = exp(-x323) * kf_qss[171];
  const amrex::Real x325 = x116 + x316;
  const amrex::Real x326 = exp(-x325) * kf_qss[168];
  const amrex::Real x327 = 1.0 * g_RT_qss[12];
  const amrex::Real x328 = x315 + x327 + x8;
  const amrex::Real x329 = 1.0 * kf_qss[147];
  const amrex::Real x330 = exp(-x328) * refC * x329;
  const amrex::Real x331 = x131 + x316;
  const amrex::Real x332 = exp(-x331) * kf_qss[165];
  const amrex::Real x333 = x171 + x315;
  const amrex::Real x334 = exp(-x333) * kf_qss[177];
  const amrex::Real x335 = 1e-12 - x126 - x330 - x318 * x141 - x319 * sc[8] -
                           x321 * x134 - x322 * sc[8] - x324 * x155 -
                           x326 * x113 - x332 * x128 - x334 * x166;
  const amrex::Real x336 = pow(x335, -1);
  const amrex::Real x337 = 1e-12 + x127;
  const amrex::Real x338 = x337 * x336;
  const amrex::Real x339 = 1 - x338 * x314;
  const amrex::Real x340 = pow(x339, -1);
  const amrex::Real x341 = x329 * sc[15];
  const amrex::Real x342 = 1e-12 + x341;
  const amrex::Real x343 = x336 * x342;
  const amrex::Real x344 = x343 * x340;
  const amrex::Real x345 = -x327;
  const amrex::Real x346 = 1.0 * g_RT_qss[11];
  const amrex::Real x347 = x345 + x346 + x8;
  const amrex::Real x348 = 1.0 * kf_qss[145];
  const amrex::Real x349 = exp(-x347) * refC * x348;
  const amrex::Real x350 = pow(kf_qss[15], -1);
  const amrex::Real x351 = x37 * x350;
  const amrex::Real x352 = x41 + x33 * log(x351);
  const amrex::Real x353 = -0.14 * x352 + x43;
  const amrex::Real x354 = pow(x353, -2);
  const amrex::Real x355 = pow(x352, 2);
  const amrex::Real x356 = 1.0 + x354 * x355;
  const amrex::Real x357 = pow(10, x40 / x356);
  const amrex::Real x358 = 1.0 + x351;
  const amrex::Real x359 = x357 / x358;
  const amrex::Real x360 = -(x10 + x345 + x58);
  const amrex::Real x361 = exp(x31 + x360);
  const amrex::Real x362 = x27 * x361;
  const amrex::Real x363 = x362 * x359;
  const amrex::Real x364 = x26 * x363;
  const amrex::Real x365 = 1e-12 - x341 - x349 - x364;
  const amrex::Real x366 = pow(x365, -1);
  const amrex::Real x367 = 1e-12 + x330;
  const amrex::Real x368 = x366 * x367;
  const amrex::Real x369 = 1 - x368 * x344;
  const amrex::Real x370 = pow(x369, -1);
  const amrex::Real x371 = x348 * sc[15];
  const amrex::Real x372 = 1e-12 + x371;
  const amrex::Real x373 = x372 * x366;
  const amrex::Real x374 = x373 * x370;
  const amrex::Real x375 = pow(kf_qss[14], -1);
  const amrex::Real x376 = x37 * x375;
  const amrex::Real x377 = x41 + x33 * log(x376);
  const amrex::Real x378 = -0.14 * x377 + x43;
  const amrex::Real x379 = pow(x378, -2);
  const amrex::Real x380 = pow(x377, 2);
  const amrex::Real x381 = 1.0 + x379 * x380;
  const amrex::Real x382 = pow(10, x40 / x381);
  const amrex::Real x383 = 1.0 + x376;
  const amrex::Real x384 = x382 / x383;
  const amrex::Real x385 = -x346;
  const amrex::Real x386 = -(x10 + x385 + x69);
  const amrex::Real x387 = exp(x31 + x386);
  const amrex::Real x388 = x27 * x387;
  const amrex::Real x389 = x384 * x388;
  const amrex::Real x390 = x26 * x389;
  const amrex::Real x391 = x385 + x58 + x73;
  const amrex::Real x392 = 1.0 * kf_qss[143];
  const amrex::Real x393 = exp(-x391) * x392;
  const amrex::Real x394 = x147 + x385 + x8;
  const amrex::Real x395 = 1.0 * kf_qss[139];
  const amrex::Real x396 = exp(-x394) * refC * x395;
  const amrex::Real x397 = 1.0 * kf_qss[150];
  const amrex::Real x398 = x397 * sc[22];
  const amrex::Real x399 = 1e-12 - x371 - x390 - x396 - x398 - x393 * sc[15];
  const amrex::Real x400 = pow(x399, -1);
  const amrex::Real x401 = 1e-12 + x349;
  const amrex::Real x402 = x401 * x400;
  const amrex::Real x403 = 1.0 * kf_qss[182];
  const amrex::Real x404 = -1.0 * g_RT_qss[14];
  const amrex::Real x405 = x117 + x404;
  const amrex::Real x406 = x116 + x405;
  const amrex::Real x407 = exp(-x406) * kf_qss[169];
  const amrex::Real x408 = x131 + x405;
  const amrex::Real x409 = exp(-x408) * kf_qss[166];
  const amrex::Real x410 = x144 + x405;
  const amrex::Real x411 = exp(-x410) * kf_qss[163];
  const amrex::Real x412 = x293 + x346 + x404;
  const amrex::Real x413 = exp(-x412) * refC * x397;
  const amrex::Real x414 = x138 + x405;
  const amrex::Real x415 = exp(-x414) * kf_qss[175];
  const amrex::Real x416 = 1.0 * kf_qss[190];
  const amrex::Real x417 = x158 + x405;
  const amrex::Real x418 = exp(-x417) * kf_qss[172];
  const amrex::Real x419 = x171 + x404;
  const amrex::Real x420 = exp(-x419) * kf_qss[178];
  const amrex::Real x421 = 1.0 * g_RT[29];
  const amrex::Real x422 = x404 + x421 + x59;
  const amrex::Real x423 = 1.0 * refC;
  const amrex::Real x424 = 1e-12 - x413 - x403 * sc[8] - x407 * x113 -
                           x409 * x128 - x411 * x141 - x415 * x134 -
                           x416 * sc[8] - x418 * x155 - x420 * x166 -
                           exp(-x422) * x423 * kf_qss[149];
  const amrex::Real x425 = pow(x424, -1);
  const amrex::Real x426 = 1e-12 + x398;
  const amrex::Real x427 = x425 * x426;
  const amrex::Real x428 = 1e-12 + x413;
  const amrex::Real x429 = x400 * x428;
  const amrex::Real x430 = 1 - x402 * x374 - x427 * x429;
  const amrex::Real x431 = pow(x430, -1);
  const amrex::Real x432 = x395 * sc[15];
  const amrex::Real x433 = 1e-12 + x432;
  const amrex::Real x434 = x400 * x433;
  const amrex::Real x435 = x434 * x431;
  const amrex::Real x436 = x12 + x307 + x60;
  const amrex::Real x437 = 1.0 * kf_qss[141];
  const amrex::Real x438 = exp(-x436) * x437;
  const amrex::Real x439 = x307 + x69 + x73;
  const amrex::Real x440 = exp(-x439) * kf_qss[137];
  const amrex::Real x441 = -(x10 + x148 + x307);
  const amrex::Real x442 = exp(x31 + x441);
  const amrex::Real x443 = pow(kf_qss[12], -1);
  const amrex::Real x444 = x37 * x443;
  const amrex::Real x445 = x41 + x33 * log(x444);
  const amrex::Real x446 = x43 - 0.14 * x445;
  const amrex::Real x447 = pow(x446, -2);
  const amrex::Real x448 = pow(x445, 2);
  const amrex::Real x449 = 1.0 + x448 * x447;
  const amrex::Real x450 = pow(10, x40 / x449);
  const amrex::Real x451 = 1.0 + x444;
  const amrex::Real x452 = x450 / x451;
  const amrex::Real x453 = x452 * x442;
  const amrex::Real x454 = x27 * x453;
  const amrex::Real x455 = x26 * x454;
  const amrex::Real x456 =
    1e-12 - x270 - x309 - x432 - x455 - x438 * sc[19] - x72 * x440;
  const amrex::Real x457 = pow(x456, -1);
  const amrex::Real x458 = 1e-12 + x396;
  const amrex::Real x459 = x457 * x458;
  const amrex::Real x460 = 1e-12 + x151;
  const amrex::Real x461 = x457 * x460;
  const amrex::Real x462 = 1 - x459 * x435 - x461 * x273;
  const amrex::Real x463 = pow(x462, -1);
  const amrex::Real x464 = x265 * x182;
  const amrex::Real x465 = x461 * x464;
  const amrex::Real x466 = 1e-12 + x302;
  const amrex::Real x467 = x457 * x466;
  const amrex::Real x468 = -x465 + x467;
  const amrex::Real x469 = x463 * x468;
  const amrex::Real x470 = 1 - x464 * x306 - x469 * x311;
  const amrex::Real x471 = pow(x470, -1);
  const amrex::Real x472 = 1e-12 + x201;
  const amrex::Real x473 = x99 * x472;
  const amrex::Real x474 = x473 * x180;
  const amrex::Real x475 = 1e-12 + x202;
  const amrex::Real x476 = x475 * x175;
  const amrex::Real x477 = -x474 + x476;
  const amrex::Real x478 = x477 * x182;
  const amrex::Real x479 = x478 * x306;
  const amrex::Real x480 = 1e-12 + x216 + x234;
  const amrex::Real x481 = x480 * x304;
  const amrex::Real x482 = -x479 + x481;
  const amrex::Real x483 = x471 * x482;
  const amrex::Real x484 = x473 * x111;
  const amrex::Real x485 = 1 - x477 * x241 - x483 * x269 - x484 * x238;
  const amrex::Real x486 = pow(x485, -1);
  const amrex::Real x487 = 1.0 * g_RT[16];
  const amrex::Real x488 = x246 + x487;
  const amrex::Real x489 = x131 + x488;
  const amrex::Real x490 = exp(-x489);
  const amrex::Real x491 = 1.0 * kf_qss[91];
  const amrex::Real x492 = x116 + x488;
  const amrex::Real x493 = 1.0 * kf_qss[101];
  const amrex::Real x494 = exp(-x492) * x493;
  const amrex::Real x495 = x144 + x488;
  const amrex::Real x496 = exp(-x495) * kf_qss[99];
  const amrex::Real x497 = -3364.00341090455 * invT - 7.08 * tc[0];
  const amrex::Real x498 = exp(x497);
  const amrex::Real x499 = 1.99e+29 * x498;
  const amrex::Real x500 = x26 / kf_qss[7];
  const amrex::Real x501 = x499 * x500;
  const amrex::Real x502 = log(
    exp(-6882.0 * invT) + 0.1578 * exp(-0.008 * tc[1]) +
    0.8422 * exp(-0.000450653447498873 * tc[1]));
  const amrex::Real x503 = 0.67 * x33;
  const amrex::Real x504 = -0.4 - x502 * x503;
  const amrex::Real x505 = x504 + x33 * log(x501);
  const amrex::Real x506 = pow(x505, 2);
  const amrex::Real x507 = 1.27 * x33;
  const amrex::Real x508 = 0.75 - x502 * x507;
  const amrex::Real x509 = -0.14 * x505 + x508;
  const amrex::Real x510 = pow(x509, -2);
  const amrex::Real x511 = 1.0 + x510 * x506;
  const amrex::Real x512 = x33 * x502;
  const amrex::Real x513 = pow(10, x512 / x511);
  const amrex::Real x514 = 1.0 + x501;
  const amrex::Real x515 = x513 / x514;
  const amrex::Real x516 = x515 * sc[1];
  const amrex::Real x517 = x499 * x516;
  const amrex::Real x518 = x26 * x517;
  const amrex::Real x519 = 4715000.0 * x26;
  const amrex::Real x520 = x10 + x8;
  const amrex::Real x521 = -(x246 + x520);
  const amrex::Real x522 = 380.059419015673 * invT;
  const amrex::Real x523 = -x522;
  const amrex::Real x524 = pow(kf_qss[6], -1);
  const amrex::Real x525 = exp(-x522);
  const amrex::Real x526 = x519 * x525;
  const amrex::Real x527 = x524 * x526;
  const amrex::Real x528 =
    log(0.24 * exp(-0.025 * tc[1]) + 0.76 * exp(-0.000975609756097561 * tc[1]));
  const amrex::Real x529 = x33 * x528;
  const amrex::Real x530 = -0.4 - 0.67 * x529;
  const amrex::Real x531 = x530 + x33 * log(x527);
  const amrex::Real x532 = 0.75 - 1.27 * x529;
  const amrex::Real x533 = -0.14 * x531 + x532;
  const amrex::Real x534 = pow(x533, -2);
  const amrex::Real x535 = pow(x531, 2);
  const amrex::Real x536 = 1.0 + x535 * x534;
  const amrex::Real x537 = pow(10, x529 / x536);
  const amrex::Real x538 = 1.0 + x527;
  const amrex::Real x539 = x537 / x538;
  const amrex::Real x540 = exp(x521 + x523) * x539;
  const amrex::Real x541 = refC * x540;
  const amrex::Real x542 = x519 * x541;
  const amrex::Real x543 = 1.0 * kf_qss[97];
  const amrex::Real x544 = 1.0 * g_RT_qss[1];
  const amrex::Real x545 = x251 + x488 + x544;
  const amrex::Real x546 = exp(-x545);
  const amrex::Real x547 = 1.0 * sc[9];
  const amrex::Real x548 = x546 * x547 * kf_qss[102];
  const amrex::Real x549 = x1 + x246 + x61;
  const amrex::Real x550 = 1.0 * exp(-x549) * kf_qss[129];
  const amrex::Real x551 = 1.0 * kf_qss[96];
  const amrex::Real x552 = 1.0 * kf_qss[93];
  const amrex::Real x553 = 2.0 * g_RT[9];
  const amrex::Real x554 = -x10;
  const amrex::Real x555 = x246 + x553 + x554;
  const amrex::Real x556 = exp(-x555);
  const amrex::Real x557 = 1.0 * sc[1];
  const amrex::Real x558 = 1.0 * kf_qss[95];
  const amrex::Real x559 = 1.0 * kf_qss[94];
  const amrex::Real x560 = x170 + x488;
  const amrex::Real x561 = exp(-x560) * kf_qss[103];
  const amrex::Real x562 = 1.0 * kf_qss[92];
  const amrex::Real x563 = 1.0 * g_RT_qss[2];
  const amrex::Real x564 = 1.0 * g_RT[12];
  const amrex::Real x565 = -x564;
  const amrex::Real x566 = x563 + x565;
  const amrex::Real x567 = x246 + x566 + x8;
  const amrex::Real x568 = 1.0 * kf_qss[84];
  const amrex::Real x569 = exp(-x567) * x568;
  const amrex::Real x570 = x569 * sc[12];
  const amrex::Real x571 = x246 + x293 + x73;
  const amrex::Real x572 = 1.0 * kf_qss[118];
  const amrex::Real x573 = exp(-x571) * x572;
  const amrex::Real x574 =
    1e-12 - x242 - x250 - x255 - x259 - x518 - x542 - x548 - x570 -
    x491 * sc[1] - x494 * sc[6] - x496 * x141 - x543 * sc[7] - x550 * sc[19] -
    x551 * sc[4] - x552 * sc[8] - x558 * sc[4] - x559 * sc[4] - x561 * x166 -
    x562 * sc[2] - x573 * sc[15] - x490 * x128 * kf_qss[100] -
    x557 * x556 * kf_qss[54];
  const amrex::Real x575 = pow(x574, -1);
  const amrex::Real x576 = 1e-12 + x165;
  const amrex::Real x577 = x576 * x575;
  const amrex::Real x578 = 2.0 * kf_qss[120];
  const amrex::Real x579 = 1e-12 + x578 * sc[1];
  const amrex::Real x580 = -x464 * x577 + x579 * x575;
  const amrex::Real x581 = 1e-12 + x205 + x221 + x226;
  const amrex::Real x582 = -x478 * x577 - x483 * x580 + x575 * x581;
  const amrex::Real x583 = x486 * x582;
  const amrex::Real x584 = x244 * x182;
  const amrex::Real x585 = 1 - x577 * x584 - x583 * x262;
  const amrex::Real x586 = pow(x585, -1);
  const amrex::Real x587 = 1.0 * sc[16];
  const amrex::Real x588 = x587 * kf_qss[102];
  const amrex::Real x589 = 1e-12 + x588;
  const amrex::Real x590 = x575 * x589;
  const amrex::Real x591 = x590 * x586;
  const amrex::Real x592 = -x563;
  const amrex::Real x593 = x130 + x554;
  const amrex::Real x594 = x592 + x593;
  const amrex::Real x595 = exp(-(x544 + x594));
  const amrex::Real x596 = 1.0 * kf_qss[32];
  const amrex::Real x597 = x596 * x595;
  const amrex::Real x598 = x597 * sc[1];
  const amrex::Real x599 = -717.083748771726 * invT - 2.57 * tc[0];
  const amrex::Real x600 = exp(x599);
  const amrex::Real x601 = 1350000000000.0 * x600;
  const amrex::Real x602 = x26 / kf_qss[0];
  const amrex::Real x603 = x602 * x601;
  const amrex::Real x604 = log(
    exp(-6570.0 * invT) + 0.2176 * exp(-0.003690036900369 * tc[1]) +
    0.7824 * exp(-0.000362976406533575 * tc[1]));
  const amrex::Real x605 = -0.4 - x604 * x503;
  const amrex::Real x606 = x605 + x33 * log(x603);
  const amrex::Real x607 = 0.75 - x604 * x507;
  const amrex::Real x608 = -0.14 * x606 + x607;
  const amrex::Real x609 = pow(x608, -2);
  const amrex::Real x610 = pow(x606, 2);
  const amrex::Real x611 = 1.0 + x610 * x609;
  const amrex::Real x612 = x33 * x604;
  const amrex::Real x613 = pow(10, x612 / x611);
  const amrex::Real x614 = 1.0 + x603;
  const amrex::Real x615 = x613 / x614;
  const amrex::Real x616 = x615 * sc[1];
  const amrex::Real x617 = x616 * x601;
  const amrex::Real x618 = x26 * x617;
  const amrex::Real x619 = x568 * sc[15];
  const amrex::Real x620 = 1.0 * kf_qss[19];
  const amrex::Real x621 = 1.75 * sc[12];
  const amrex::Real x622 = sc[10] + sc[16];
  const amrex::Real x623 = x22 + x622;
  const amrex::Real x624 = 3.6 * sc[13] + x621 + x623;
  const amrex::Real x625 = x23 + x624;
  const amrex::Real x626 = 1.0 * kf_qss[16];
  const amrex::Real x627 = x625 * x626;
  const amrex::Real x628 = x207 + x592;
  const amrex::Real x629 = x158 + x628;
  const amrex::Real x630 = exp(-x629) * kf_qss[44];
  const amrex::Real x631 = 1.0 * kf_qss[20];
  const amrex::Real x632 = x131 + x628;
  const amrex::Real x633 = exp(-x632) * kf_qss[42];
  const amrex::Real x634 = x10 + x207;
  const amrex::Real x635 = x143 + x592 + x634;
  const amrex::Real x636 = exp(-x635) * kf_qss[41];
  const amrex::Real x637 = 1.0 * g_RT[17];
  const amrex::Real x638 = exp(-(x252 + x592 + x637));
  const amrex::Real x639 = 1.0 * kf_qss[117];
  const amrex::Real x640 = 1.0 * g_RT_qss[0];
  const amrex::Real x641 = exp(-(x594 + x640));
  const amrex::Real x642 = 1.0 * kf_qss[23];
  const amrex::Real x643 = x642 * x641;
  const amrex::Real x644 = x643 * sc[1];
  const amrex::Real x645 = 1.0 * kf_qss[17];
  const amrex::Real x646 = x645 * sc[6];
  const amrex::Real x647 = x138 + x628;
  const amrex::Real x648 = 1.0 * exp(-x647) * kf_qss[45];
  const amrex::Real x649 = 1.0 * kf_qss[21];
  const amrex::Real x650 = x129 + x156;
  const amrex::Real x651 = x592 + x640 + x650;
  const amrex::Real x652 = 1.0 * kf_qss[26];
  const amrex::Real x653 = exp(-x651) * x652;
  const amrex::Real x654 = x653 * sc[3];
  const amrex::Real x655 = 1.0 * kf_qss[50];
  const amrex::Real x656 = x116 + x628;
  const amrex::Real x657 = 1.0 * exp(-x656) * kf_qss[43];
  const amrex::Real x658 = 1.0 * kf_qss[64];
  const amrex::Real x659 = x658 * sc[14];
  const amrex::Real x660 = 1.0 * kf_qss[18];
  const amrex::Real x661 = 1.0 * g_RT[20];
  const amrex::Real x662 = x592 + x661 + x73;
  const amrex::Real x663 = exp(-x662) * kf_qss[107];
  const amrex::Real x664 = x170 + x628;
  const amrex::Real x665 = 1.0 * kf_qss[51];
  const amrex::Real x666 = exp(-x664) * x665;
  const amrex::Real x667 = 1.0 * kf_qss[105];
  const amrex::Real x668 = x130 + x251;
  const amrex::Real x669 = x592 + x668 + x8;
  const amrex::Real x670 = exp(-x669) * kf_qss[81];
  const amrex::Real x671 = 1.0 * kf_qss[22];
  const amrex::Real x672 = 1.0 * g_RT_qss[4];
  const amrex::Real x673 = x156 + x208 + x592 + x672;
  const amrex::Real x674 = 1.0 * kf_qss[70];
  const amrex::Real x675 = exp(-x673) * x674;
  const amrex::Real x676 = x675 * sc[11];
  const amrex::Real x677 =
    1e-12 - x598 - x618 - x619 - x627 - x644 - x646 - x654 - x659 - x676 -
    x620 * sc[2] - x630 * x155 - x631 * sc[2] - x633 * x128 - x636 * x141 -
    x639 * sc[21] - x648 * sc[7] - x649 * sc[3] - x655 * sc[9] - x657 * sc[6] -
    x660 * sc[1] - x666 * sc[10] - x667 * sc[18] - x670 * x547 - x671 * sc[8] -
    x72 * x663 - x638 * x547 * kf_qss[78];
  const amrex::Real x678 = pow(x677, -1);
  const amrex::Real x679 = 1e-12 + x570;
  const amrex::Real x680 = x679 * x678;
  const amrex::Real x681 = x680 * x591;
  const amrex::Real x682 = x596 * sc[2];
  const amrex::Real x683 = 1e-12 + x682;
  const amrex::Real x684 = x678 * x683;
  const amrex::Real x685 = -x681 + x684;
  const amrex::Real x686 = 1.0 * kf_qss[69];
  const amrex::Real x687 = -x672;
  const amrex::Real x688 = x687 + x8;
  const amrex::Real x689 = x170 + x688;
  const amrex::Real x690 = 1.0 * kf_qss[87];
  const amrex::Real x691 = exp(-x689) * x690;
  const amrex::Real x692 = sc[12] * refCinv;
  const amrex::Real x693 = x565 + x661 + x687;
  const amrex::Real x694 = x131 + x693;
  const amrex::Real x695 = exp(-x694) * kf_qss[108];
  const amrex::Real x696 = x695 * x128;
  const amrex::Real x697 = x131 + x688;
  const amrex::Real x698 = exp(-x697) * kf_qss[80];
  const amrex::Real x699 = x158 + x688;
  const amrex::Real x700 = exp(-x699) * kf_qss[89];
  const amrex::Real x701 = 1.0 * kf_qss[90];
  const amrex::Real x702 = 1.0 * g_RT[18];
  const amrex::Real x703 = exp(-(x210 + x687 + x702));
  const amrex::Real x704 = x703 * refCinv;
  const amrex::Real x705 = x704 * kf_qss[104];
  const amrex::Real x706 = x705 * x128;
  const amrex::Real x707 = x116 + x688;
  const amrex::Real x708 = 1.0 * exp(-x707) * kf_qss[83];
  const amrex::Real x709 = 1.0 * kf_qss[75];
  const amrex::Real x710 = 1.0 * g_RT[14];
  const amrex::Real x711 = x566 + x687 + x710;
  const amrex::Real x712 = exp(-x711) * x658;
  const amrex::Real x713 = x712 * sc[12];
  const amrex::Real x714 = 1.0 * kf_qss[67];
  const amrex::Real x715 = 1.0 * kf_qss[71];
  const amrex::Real x716 = 1.0 * kf_qss[72];
  const amrex::Real x717 = x143 + x520 + x687;
  const amrex::Real x718 = exp(-x717) * kf_qss[79];
  const amrex::Real x719 = 3.0 * sc[14] + 3.0 * sc[15] + x21 + x25;
  const amrex::Real x720 = -4916.32618157895 * invT - 11.94 * tc[0];
  const amrex::Real x721 = exp(x720);
  const amrex::Real x722 = x719 * x721;
  const amrex::Real x723 = 4.27e+46 * x722;
  const amrex::Real x724 = pow(kf_qss[5], -1);
  const amrex::Real x725 = x724 * x723;
  const amrex::Real x726 = exp(-1.66666666666667e-05 * tc[1]);
  const amrex::Real x727 = log(
    0.175 * x726 + exp(-10139.8 * invT) +
    0.825 * exp(-0.000745934656124124 * tc[1]));
  const amrex::Real x728 = -0.4 - x727 * x503;
  const amrex::Real x729 = x728 + x33 * log(x725);
  const amrex::Real x730 = pow(x729, 2);
  const amrex::Real x731 = 0.75 - x727 * x507;
  const amrex::Real x732 = -0.14 * x729 + x731;
  const amrex::Real x733 = pow(x732, -2);
  const amrex::Real x734 = 1.0 + x730 * x733;
  const amrex::Real x735 = x33 * x727;
  const amrex::Real x736 = pow(10, x735 / x734);
  const amrex::Real x737 = 1.0 + x725;
  const amrex::Real x738 = x736 / x737;
  const amrex::Real x739 = x738 * x723;
  const amrex::Real x740 = x739 * sc[9];
  const amrex::Real x741 = 1.0 * kf_qss[65];
  const amrex::Real x742 = 1.0 * kf_qss[76];
  const amrex::Real x743 = -18014.5125184767 * invT - 3.4 * tc[0];
  const amrex::Real x744 = exp(x743);
  const amrex::Real x745 = 2.565e+21 * x744;
  const amrex::Real x746 = x719 / kf_qss[3];
  const amrex::Real x747 = x745 * x746;
  const amrex::Real x748 = log(
    1.9816 * exp(-0.232926488400261 * tc[1]) -
    0.9816 * exp(-0.000185745862510913 * tc[1]) + exp(0.0795 * invT));
  const amrex::Real x749 = -0.4 - x748 * x503;
  const amrex::Real x750 = x749 + x33 * log(x747);
  const amrex::Real x751 = pow(x750, 2);
  const amrex::Real x752 = 0.75 - x748 * x507;
  const amrex::Real x753 = -0.14 * x750 + x752;
  const amrex::Real x754 = pow(x753, -2);
  const amrex::Real x755 = 1.0 + x754 * x751;
  const amrex::Real x756 = x33 * x748;
  const amrex::Real x757 = pow(10, x756 / x755);
  const amrex::Real x758 = 1.0 + x747;
  const amrex::Real x759 = x757 / x758;
  const amrex::Real x760 = x745 * x759;
  const amrex::Real x761 = x760 * x719;
  const amrex::Real x762 = x674 * sc[8];
  const amrex::Real x763 = 1.0 * kf_qss[66];
  const amrex::Real x764 = 1.0 * kf_qss[68];
  const amrex::Real x765 = -1670.67933047167 * invT - 3.86 * tc[0];
  const amrex::Real x766 = exp(x765);
  const amrex::Real x767 = 1.4e+18 * x766;
  const amrex::Real x768 = x719 / kf_qss[4];
  const amrex::Real x769 = x768 * x767;
  const amrex::Real x770 = log(
    exp(-6095.0 * invT) + 0.218 * exp(-0.00481927710843374 * tc[1]) +
    0.782 * exp(-0.000375516334960571 * tc[1]));
  const amrex::Real x771 = -0.4 - x770 * x503;
  const amrex::Real x772 = x771 + x33 * log(x769);
  const amrex::Real x773 = pow(x772, 2);
  const amrex::Real x774 = 0.75 - x770 * x507;
  const amrex::Real x775 = -0.14 * x772 + x774;
  const amrex::Real x776 = pow(x775, -2);
  const amrex::Real x777 = 1.0 + x776 * x773;
  const amrex::Real x778 = x33 * x770;
  const amrex::Real x779 = pow(10, x778 / x777);
  const amrex::Real x780 = 1.0 + x769;
  const amrex::Real x781 = x779 / x780;
  const amrex::Real x782 = x781 * sc[1];
  const amrex::Real x783 = x767 * x782;
  const amrex::Real x784 = x719 * x783;
  const amrex::Real x785 = x116 + x693;
  const amrex::Real x786 = exp(-x785) * kf_qss[109];
  const amrex::Real x787 = x786 * x113;
  const amrex::Real x788 =
    1e-12 - x713 - x740 - x761 - x762 - x784 - x686 * sc[8] - x691 * sc[10] -
    x692 * x787 - x696 * x692 - x698 * x128 - x700 * x155 - x701 * sc[15] -
    x706 * sc[11] - x708 * sc[6] - x709 * sc[9] - x714 * sc[3] - x715 * sc[4] -
    x716 * sc[7] - x718 * x141 - x741 * sc[1] - x742 * sc[9] - x763 * sc[2] -
    x764 * sc[8];
  const amrex::Real x789 = pow(x788, -1);
  const amrex::Real x790 = 1e-12 + x659 + x676;
  const amrex::Real x791 = x790 * x789;
  const amrex::Real x792 = 1e-12 + x713 + x762;
  const amrex::Real x793 = x678 * x792;
  const amrex::Real x794 = 1e-12 + x619;
  const amrex::Real x795 = x794 * x575;
  const amrex::Real x796 = x795 * x586;
  const amrex::Real x797 = 1 - x680 * x796 - x791 * x793;
  const amrex::Real x798 = pow(x797, -1);
  const amrex::Real x799 = 1.0 * kf_qss[40];
  const amrex::Real x800 = 1.0 * kf_qss[37];
  const amrex::Real x801 = x800 * sc[6];
  const amrex::Real x802 = -x544;
  const amrex::Real x803 = x116 + x167;
  const amrex::Real x804 = exp(-(x802 + x803));
  const amrex::Real x805 = 1.0 * x804 * kf_qss[47];
  const amrex::Real x806 = 1.0 * kf_qss[35];
  const amrex::Real x807 = 1.0 * g_RT_qss[3];
  const amrex::Real x808 = x10 + x114;
  const amrex::Real x809 = exp(-(x802 + x807 + x808));
  const amrex::Real x810 = 1.0 * kf_qss[57];
  const amrex::Real x811 = x809 * x810;
  const amrex::Real x812 = x811 * sc[6];
  const amrex::Real x813 = 1.0 * kf_qss[39];
  const amrex::Real x814 = x813 * sc[13];
  const amrex::Real x815 = 1.0 * kf_qss[31];
  const amrex::Real x816 = 1.0 * kf_qss[30];
  const amrex::Real x817 = x816 * sc[34];
  const amrex::Real x818 = 1.0 * kf_qss[36];
  const amrex::Real x819 = 1.0 * kf_qss[38];
  const amrex::Real x820 = x819 * sc[12];
  const amrex::Real x821 = 1e-12 - x588 - x682 - x801 - x812 - x814 - x817 -
                           x820 - x128 * kf_qss[33] - x141 * kf_qss[34] -
                           x166 * kf_qss[62] - x547 * kf_qss[53] -
                           x72 * kf_qss[86] - x799 * sc[13] - x805 * sc[6] -
                           x806 * sc[8] - x815 * sc[2] - x818 * sc[8];
  const amrex::Real x822 = pow(x821, -1);
  const amrex::Real x823 = 1e-12 + x548;
  const amrex::Real x824 = x822 * x823;
  const amrex::Real x825 = 1e-12 + x598;
  const amrex::Real x826 = -x796 * x824 + x822 * x825;
  const amrex::Real x827 = x798 * x826;
  const amrex::Real x828 = 1e-12 + x812;
  const amrex::Real x829 = x810 * sc[1];
  const amrex::Real x830 = 2.2e+18 * x26;
  const amrex::Real x831 = -x807;
  const amrex::Real x832 = -(x634 + x831);
  const amrex::Real x833 = -2797.88466187424 * invT - 4.8 * tc[0];
  const amrex::Real x834 = pow(kf_qss[2], -1);
  const amrex::Real x835 = exp(x833);
  const amrex::Real x836 = x830 * x835;
  const amrex::Real x837 = x836 * x834;
  const amrex::Real x838 = exp(-0.0106382978723404 * tc[1]);
  const amrex::Real x839 = log(
    0.242 * x838 + exp(-4200.0 * invT) +
    0.758 * exp(-0.000643086816720257 * tc[1]));
  const amrex::Real x840 = -0.4 - x503 * x839;
  const amrex::Real x841 = x840 + x33 * log(x837);
  const amrex::Real x842 = 0.75 - x507 * x839;
  const amrex::Real x843 = -0.14 * x841 + x842;
  const amrex::Real x844 = pow(x843, -2);
  const amrex::Real x845 = pow(x841, 2);
  const amrex::Real x846 = 1.0 + x844 * x845;
  const amrex::Real x847 = x33 * x839;
  const amrex::Real x848 = pow(10, x847 / x846);
  const amrex::Real x849 = 1.0 + x837;
  const amrex::Real x850 = x848 / x849;
  const amrex::Real x851 = exp(x832 + x833) * x850;
  const amrex::Real x852 = refC * x851;
  const amrex::Real x853 = x830 * x852;
  const amrex::Real x854 = 1.0 * kf_qss[60];
  const amrex::Real x855 = 1.0 * kf_qss[56];
  const amrex::Real x856 = 1.0 * kf_qss[58];
  const amrex::Real x857 = 1.0 * sc[2];
  const amrex::Real x858 = -x130;
  const amrex::Real x859 = x156 + x858;
  const amrex::Real x860 = x167 + x831;
  const amrex::Real x861 = x859 + x860;
  const amrex::Real x862 = exp(-x861) * kf_qss[48];
  const amrex::Real x863 = exp(-(x209 + x860));
  const amrex::Real x864 = x863 * kf_qss[49];
  const amrex::Real x865 = 1.0 * kf_qss[55];
  const amrex::Real x866 = 1.0 * kf_qss[59];
  const amrex::Real x867 = 1e-12 - x829 - x853 - x854 * sc[8] - x855 * sc[1] -
                           x856 * sc[2] - x857 * x862 - x864 * x128 -
                           x865 * sc[1] - x866 * sc[3];
  const amrex::Real x868 = pow(x867, -1);
  const amrex::Real x869 = x828 * x868;
  const amrex::Real x870 = 1e-12 + x829;
  const amrex::Real x871 = x870 * x822;
  const amrex::Real x872 = 1 - x591 * x824 - x685 * x827 - x871 * x869;
  const amrex::Real x873 = pow(x872, -1);
  const amrex::Real x874 = x652 * sc[8];
  const amrex::Real x875 = x642 * sc[2];
  const amrex::Real x876 = 1e-12 + x874 + x875;
  const amrex::Real x877 = x678 * x876;
  const amrex::Real x878 = x877 * x827;
  const amrex::Real x879 = -x640;
  const amrex::Real x880 = exp(-(x544 + x879));
  const amrex::Real x881 = 1.0 * x880;
  const amrex::Real x882 = x881 * kf_qss[38];
  const amrex::Real x883 = x882 * sc[12];
  const amrex::Real x884 = x813 * x880;
  const amrex::Real x885 = x884 * sc[13];
  const amrex::Real x886 = x801 * x880;
  const amrex::Real x887 = x881 * kf_qss[30];
  const amrex::Real x888 = x887 * sc[34];
  const amrex::Real x889 = 1e-12 + x883 + x885 + x886 + x888;
  const amrex::Real x890 = x822 * x889;
  const amrex::Real x891 = (x878 - x890) * x873;
  const amrex::Real x892 = 1.0 * kf_qss[195];
  const amrex::Real x893 = 1.0 * kf_qss[196];
  const amrex::Real x894 = pow(1e-12 - x892 - x893, -1);
  const amrex::Real x895 = 1.0 * sc[8];
  const amrex::Real x896 = x895 * kf_qss[194];
  const amrex::Real x897 = x894 * (1e-12 + x896);
  const amrex::Real x898 = x798 * x877;
  const amrex::Real x899 = (x681 - x684) * x798;
  const amrex::Real x900 = (x245 - x261) * x486;
  const amrex::Real x901 = (x479 - x481) * x471;
  const amrex::Real x902 = (x465 - x467) * x463;
  const amrex::Real x903 = (x474 - x476) * x182;
  const amrex::Real x904 = (x102 - x106) * x111;
  const amrex::Real x905 = x33 / x26;
  const amrex::Real x906 = x905;
  const amrex::Real x907 = 0.28 * x906;
  const amrex::Real x908 = x380 / pow(x378, 3);
  const amrex::Real x909 = 2.0 * x906;
  const amrex::Real x910 = x379 * x377;
  const amrex::Real x911 = x908 * x907 + x909 * x910;
  const amrex::Real x912 = x39 / pow(x381, 2);
  const amrex::Real x913 = x912 * x390;
  const amrex::Real x914 = x26 * refC;
  const amrex::Real x915 = 3.91876e+53 * x914;
  const amrex::Real x916 = -13.32 * tc[0];
  const amrex::Real x917 = -7045.03332126608 * invT + x916;
  const amrex::Real x918 = x375 * x382 / pow(x383, 2);
  const amrex::Real x919 = exp(x386 + x917) * x918;
  const amrex::Real x920 = -x389 + x911 * x913 + x915 * x919;
  const amrex::Real x921 = pow(x399, -2);
  const amrex::Real x922 = x459 * x431;
  const amrex::Real x923 = x433 * x922;
  const amrex::Real x924 = x921 * x923;
  const amrex::Real x925 = x920 * x924;
  const amrex::Real x926 = x460 * x273;
  const amrex::Real x927 = pow(x456, -2);
  const amrex::Real x928 = x448 / pow(x446, 3);
  const amrex::Real x929 = x445 * x447;
  const amrex::Real x930 = x907 * x928 + x909 * x929;
  const amrex::Real x931 = x39 / pow(x449, 2);
  const amrex::Real x932 = x455 * x931;
  const amrex::Real x933 = x450 * x443 / pow(x451, 2);
  const amrex::Real x934 = exp(x441 + x917) * x933;
  const amrex::Real x935 = -x454 + x915 * x934 + x930 * x932;
  const amrex::Real x936 = x927 * x935;
  const amrex::Real x937 = x458 * x435;
  const amrex::Real x938 = x926 * x936 + x936 * x937;
  const amrex::Real x939 = x925 + x938;
  const amrex::Real x940 = pow(x365, -2);
  const amrex::Real x941 = x355 / pow(x353, 3);
  const amrex::Real x942 = x352 * x354;
  const amrex::Real x943 = x941 * x907 + x942 * x909;
  const amrex::Real x944 = x39 / pow(x356, 2);
  const amrex::Real x945 = x944 * x364;
  const amrex::Real x946 = x350 * x357 / pow(x358, 2);
  const amrex::Real x947 = exp(x360 + x917) * x946;
  const amrex::Real x948 = -x363 + x945 * x943 + x947 * x915;
  const amrex::Real x949 = x948 * x940;
  const amrex::Real x950 = x402 * x370;
  const amrex::Real x951 = x950 * x372;
  const amrex::Real x952 = x949 * x951;
  const amrex::Real x953 = x367 * x344;
  const amrex::Real x954 = x949 * x953;
  const amrex::Real x955 = x46 / pow(x44, 3);
  const amrex::Real x956 = x42 * x45;
  const amrex::Real x957 = x955 * x907 + x956 * x909;
  const amrex::Real x958 = x39 / pow(x47, 2);
  const amrex::Real x959 = x53 * x958;
  const amrex::Real x960 = x48 * x34 / pow(x49, 2);
  const amrex::Real x961 = exp(x29 + x917) * x960;
  const amrex::Real x962 = -x52 + x959 * x957 + x961 * x915;
  const amrex::Real x963 = pow(x65, -2);
  const amrex::Real x964 = x108 * x177;
  const amrex::Real x965 = x964 * x963;
  const amrex::Real x966 = x965 * x962;
  const amrex::Real x967 = x6 * x177;
  const amrex::Real x968 = x967 * x963;
  const amrex::Real x969 = x968 * x962;
  const amrex::Real x970 = x963 * x101;
  const amrex::Real x971 = x6 * x970;
  const amrex::Real x972 = x962 * x971;
  const amrex::Real x973 = x87 / pow(x85, 3);
  const amrex::Real x974 = x84 * x86;
  const amrex::Real x975 = x907 * x973 + x909 * x974;
  const amrex::Real x976 = x39 / pow(x88, 2);
  const amrex::Real x977 = x94 * x976;
  const amrex::Real x978 = x82 * x89 / pow(x90, 2);
  const amrex::Real x979 = exp(x80 + x917) * x978;
  const amrex::Real x980 = -x93 + x915 * x979 + x975 * x977;
  const amrex::Real x981 = pow(x98, -2);
  const amrex::Real x982 = x981 * x105;
  const amrex::Real x983 = x981 * x100;
  const amrex::Real x984 = x67 * x983;
  const amrex::Real x985 = -x980 * x982 + x980 * x984;
  const amrex::Real x986 = x972 + x985;
  const amrex::Real x987 = x970 * x108;
  const amrex::Real x988 = x962 * x987;
  const amrex::Real x989 = x983 * x109;
  const amrex::Real x990 = x980 * x989;
  const amrex::Real x991 = x988 + x990;
  const amrex::Real x992 = pow(x110, -2);
  const amrex::Real x993 = x992 * x179;
  const amrex::Real x994 = x993 * x107;
  const amrex::Real x995 = x969 - x986 * x180 + x994 * x991;
  const amrex::Real x996 = x995 - x966 * x183;
  const amrex::Real x997 = pow(x335, -2);
  const amrex::Real x998 = pow(x339, -2);
  const amrex::Real x999 = x998 * x368;
  const amrex::Real x1000 = pow(x181, -2);
  const amrex::Real x1001 = x313 * x1000;
  const amrex::Real x1002 = x999 * x997 * x337 * x342 * x1001;
  const amrex::Real x1003 = x954 + x996 * x1002;
  const amrex::Real x1004 = pow(x369, -2);
  const amrex::Real x1005 = x402 * x1004;
  const amrex::Real x1006 = x373 * x1005;
  const amrex::Real x1007 = x952 + x1003 * x1006;
  const amrex::Real x1008 = x428 * x921;
  const amrex::Real x1009 = x427 * x1008;
  const amrex::Real x1010 = x401 * x921;
  const amrex::Real x1011 = x920 * x1010;
  const amrex::Real x1012 = x374 * x1011 + x920 * x1009;
  const amrex::Real x1013 = x1007 + x1012;
  const amrex::Real x1014 = pow(x430, -2);
  const amrex::Real x1015 = x459 * x1014;
  const amrex::Real x1016 = x434 * x1015;
  const amrex::Real x1017 = x461 * x1000;
  const amrex::Real x1018 = x996 * x1017;
  const amrex::Real x1019 = x272 * x1018;
  const amrex::Real x1020 = x1019 + x1013 * x1016;
  const amrex::Real x1021 = x1020 + x939;
  const amrex::Real x1022 = pow(x462, -2);
  const amrex::Real x1023 = x311 * x1022;
  const amrex::Real x1024 = x468 * x1023;
  const amrex::Real x1025 = x1024 * x1021;
  const amrex::Real x1026 = x265 * x1000;
  const amrex::Real x1027 = x996 * x306;
  const amrex::Real x1028 = x1026 * x1027;
  const amrex::Real x1029 = x265 * x1018;
  const amrex::Real x1030 = x466 * x927;
  const amrex::Real x1031 = x464 * x460;
  const amrex::Real x1032 = -x935 * x1030 + x936 * x1031;
  const amrex::Real x1033 = x1029 + x1032;
  const amrex::Real x1034 = x463 * x311;
  const amrex::Real x1035 = x1028 - x1033 * x1034;
  const amrex::Real x1036 = x1025 + x1035;
  const amrex::Real x1037 = x288 / pow(x286, 3);
  const amrex::Real x1038 = x287 * x285;
  const amrex::Real x1039 = x907 * x1037 + x909 * x1038;
  const amrex::Real x1040 = x39 / pow(x289, 2);
  const amrex::Real x1041 = x299 * x1040;
  const amrex::Real x1042 = x290 * x283 / pow(x291, 2);
  const amrex::Real x1043 = exp(x295 + x917) * x1042;
  const amrex::Real x1044 = -x298 + x1041 * x1039 + x915 * x1043;
  const amrex::Real x1045 = pow(x303, -2);
  const amrex::Real x1046 = x305 * x1045;
  const amrex::Real x1047 = x1044 * x1046;
  const amrex::Real x1048 = x464 * x1047;
  const amrex::Real x1049 = x272 * x1000;
  const amrex::Real x1050 = x1049 * x1027;
  const amrex::Real x1051 = x310 * x1045;
  const amrex::Real x1052 = -x1051 * x1044 + x273 * x1047;
  const amrex::Real x1053 = x1050 + x1052;
  const amrex::Real x1054 = x1048 - x469 * x1053;
  const amrex::Real x1055 = x1036 + x1054;
  const amrex::Real x1056 = pow(x470, -2);
  const amrex::Real x1057 = x580 * x1056;
  const amrex::Real x1058 = x482 * x1057;
  const amrex::Real x1059 = x477 * x1000;
  const amrex::Real x1060 = x577 * x1059;
  const amrex::Real x1061 = x996 * x1060;
  const amrex::Real x1062 = x1061 + x1058 * x1055;
  const amrex::Real x1063 = x996 * x577;
  const amrex::Real x1064 = x1063 * x1026;
  const amrex::Real x1065 = x535 / pow(x533, 3);
  const amrex::Real x1066 = x905 * x1065;
  const amrex::Real x1067 = x534 * x531;
  const amrex::Real x1068 = x905 * x1067;
  const amrex::Real x1069 = 0.28 * x1066 + 2.0 * x1068;
  const amrex::Real x1070 = x528 / pow(x536, 2);
  const amrex::Real x1071 = x542 * x1070;
  const amrex::Real x1072 = x524 * x537 / pow(x538, 2);
  const amrex::Real x1073 = 760.118838031345 * invT;
  const amrex::Real x1074 = exp(-x1073 + x521) * x914;
  const amrex::Real x1075 = x1074 * x1072;
  const amrex::Real x1076 = x513 * x500 / pow(x514, 2);
  const amrex::Real x1077 = -6728.0068218091 * invT - 14.16 * tc[0];
  const amrex::Real x1078 = exp(x1077) * sc[1];
  const amrex::Real x1079 = x1078 * x1076;
  const amrex::Real x1080 = 2.0 * x905;
  const amrex::Real x1081 = 1;
  const amrex::Real x1082 = x510 * x505 * x1081;
  const amrex::Real x1083 = 0.28 * x905;
  const amrex::Real x1084 = x506 * x1081 / pow(x509, 3);
  const amrex::Real x1085 = x1080 * x1082 + x1084 * x1083;
  const amrex::Real x1086 = x502 / pow(x511, 2);
  const amrex::Real x1087 = x518 * x1086;
  const amrex::Real x1088 = 22231225000000.0 * x1075 + 3.9601e+58 * x1079 -
                            x517 - 4715000.0 * x541 + x1071 * x1069 +
                            x1085 * x1087;
  const amrex::Real x1089 = pow(x574, -2);
  const amrex::Real x1090 = x579 * x1089;
  const amrex::Real x1091 = x1088 * x1089;
  const amrex::Real x1092 = x464 * x576;
  const amrex::Real x1093 = -x1090 * x1088 + x1091 * x1092;
  const amrex::Real x1094 = x1064 + x1093;
  const amrex::Real x1095 = x581 * x1089;
  const amrex::Real x1096 = x478 * x576;
  const amrex::Real x1097 = -x1095 * x1088 + x1096 * x1091;
  const amrex::Real x1098 = x1097 - x483 * x1094;
  const amrex::Real x1099 = x1062 + x1098;
  const amrex::Real x1100 = x472 * x981;
  const amrex::Real x1101 = x180 * x1100;
  const amrex::Real x1102 = x980 * x1101;
  const amrex::Real x1103 = x473 * x993;
  const amrex::Real x1104 = x1102 + x991 * x1103;
  const amrex::Real x1105 = x1104 - x484 * x966;
  const amrex::Real x1106 = x577 * x182;
  const amrex::Real x1107 = -x1105 * x1106;
  const amrex::Real x1108 = x306 * x182;
  const amrex::Real x1109 = -x1105 * x1108;
  const amrex::Real x1110 = x306 * x1059;
  const amrex::Real x1111 = x996 * x1110;
  const amrex::Real x1112 = x478 * x1046;
  const amrex::Real x1113 = x480 * x1045;
  const amrex::Real x1114 = x1112 * x1044 - x1113 * x1044;
  const amrex::Real x1115 = x1111 + x1114;
  const amrex::Real x1116 = x1109 + x1115;
  const amrex::Real x1117 = x471 * x580;
  const amrex::Real x1118 = -x1116 * x1117;
  const amrex::Real x1119 = x1107 + x1118;
  const amrex::Real x1120 = x1099 + x1119;
  const amrex::Real x1121 = x486 * x262;
  const amrex::Real x1122 = -x1121 * x1120;
  const amrex::Real x1123 = x269 * x1056;
  const amrex::Real x1124 = x482 * x1123;
  const amrex::Real x1125 = x1124 * x1055;
  const amrex::Real x1126 = x471 * x269;
  const amrex::Real x1127 = x240 * x1000;
  const amrex::Real x1128 = x477 * x1127;
  const amrex::Real x1129 = x996 * x1128;
  const amrex::Real x1130 = x992 * x238;
  const amrex::Real x1131 = x473 * x1130;
  const amrex::Real x1132 = x238 * x111;
  const amrex::Real x1133 = x1132 * x1100;
  const amrex::Real x1134 = x980 * x1133;
  const amrex::Real x1135 = x1134 + x991 * x1131;
  const amrex::Real x1136 = x1129 + x1135 - x241 * x1105;
  const amrex::Real x1137 = x1136 - x1116 * x1126;
  const amrex::Real x1138 = x1125 + x1137;
  const amrex::Real x1139 = x996 * x1127;
  const amrex::Real x1140 = x265 * x1139;
  const amrex::Real x1141 = x189 / pow(x187, 3);
  const amrex::Real x1142 = x186 * x188;
  const amrex::Real x1143 = x907 * x1141 + x909 * x1142;
  const amrex::Real x1144 = x39 / pow(x190, 2);
  const amrex::Real x1145 = x200 * x1144;
  const amrex::Real x1146 = x184 * x191 / pow(x192, 2);
  const amrex::Real x1147 = 3.91876e+53 * x1146;
  const amrex::Real x1148 = exp(x196 + x917) * refC;
  const amrex::Real x1149 = -x199 + x1145 * x1143 + x1148 * x1147;
  const amrex::Real x1150 = pow(x235, -2);
  const amrex::Real x1151 = x268 * x1150;
  const amrex::Real x1152 = -x1151 * x1149;
  const amrex::Real x1153 = x107 * x1130;
  const amrex::Real x1154 = -x986 * x1132 + x991 * x1153;
  const amrex::Real x1155 = x237 * x1150;
  const amrex::Real x1156 = x183 * x1155;
  const amrex::Real x1157 = x239 * x1150;
  const amrex::Real x1158 = x1156 * x1149 - x1157 * x1149;
  const amrex::Real x1159 = x1154 + x1158;
  const amrex::Real x1160 = x1152 - x464 * x1159;
  const amrex::Real x1161 = x1140 + x1160;
  const amrex::Real x1162 = x484 * x1155;
  const amrex::Real x1163 = x1162 * x1149;
  const amrex::Real x1164 = x1163 - x478 * x1159;
  const amrex::Real x1165 = x1164 - x483 * x1161;
  const amrex::Real x1166 = x1138 + x1165;
  const amrex::Real x1167 = pow(x485, -2);
  const amrex::Real x1168 = x582 * x1167;
  const amrex::Real x1169 = x262 * x1168;
  const amrex::Real x1170 = x1169 * x1166;
  const amrex::Real x1171 = x244 * x1139;
  const amrex::Real x1172 = x260 * x1150;
  const amrex::Real x1173 = -x1149 * x1172;
  const amrex::Real x1174 = x1173 - x584 * x1159;
  const amrex::Real x1175 = x1171 + x1174;
  const amrex::Real x1176 = x244 * x1000;
  const amrex::Real x1177 = x1176 * x1063;
  const amrex::Real x1178 = x576 * x584;
  const amrex::Real x1179 = x1178 * x1091;
  const amrex::Real x1180 = x1177 + x1179;
  const amrex::Real x1181 = x1180 - x583 * x1175;
  const amrex::Real x1182 = x1122 + x1170 + x1181;
  const amrex::Real x1183 = pow(x585, -2);
  const amrex::Real x1184 = x795 * x1183;
  const amrex::Real x1185 = x680 * x1184;
  const amrex::Real x1186 = x1185 * x1182;
  const amrex::Real x1187 = x680 * x586;
  const amrex::Real x1188 = x794 * x1187;
  const amrex::Real x1189 = x1188 * x1091;
  const amrex::Real x1190 = x33 / x719;
  const amrex::Real x1191 = x1190;
  const amrex::Real x1192 = x776 * x772 * x1191;
  const amrex::Real x1193 = x773 * x1191 / pow(x775, 3);
  const amrex::Real x1194 = 2.0 * x1192 + 0.28 * x1193;
  const amrex::Real x1195 = x770 / pow(x777, 2);
  const amrex::Real x1196 = x784 * x1195;
  const amrex::Real x1197 = x768 * x779 / pow(x780, 2);
  const amrex::Real x1198 = -3341.35866094334 * invT - 7.72 * tc[0];
  const amrex::Real x1199 = exp(x1198) * sc[1];
  const amrex::Real x1200 = x1197 * x1199;
  const amrex::Real x1201 = x1190;
  const amrex::Real x1202 = x754 * x750 * x1201;
  const amrex::Real x1203 = x751 * x1201 / pow(x753, 3);
  const amrex::Real x1204 = 2.0 * x1202 + 0.28 * x1203;
  const amrex::Real x1205 = x748 / pow(x755, 2);
  const amrex::Real x1206 = x761 * x1205;
  const amrex::Real x1207 = x1190;
  const amrex::Real x1208 = x733 * x729;
  const amrex::Real x1209 = x1207 * x1208;
  const amrex::Real x1210 = x730 / pow(x732, 3);
  const amrex::Real x1211 = x1207 * x1210;
  const amrex::Real x1212 = 2.0 * x1209 + 0.28 * x1211;
  const amrex::Real x1213 = x727 / pow(x734, 2);
  const amrex::Real x1214 = x740 * x1213;
  const amrex::Real x1215 = x721 * sc[9];
  const amrex::Real x1216 = x738 * x1215;
  const amrex::Real x1217 = -36029.0250369535 * invT - 6.8 * tc[0];
  const amrex::Real x1218 = x746 * x757 / pow(x758, 2);
  const amrex::Real x1219 = exp(x1217) * x1218;
  const amrex::Real x1220 = x736 * x724 / pow(x737, 2);
  const amrex::Real x1221 = -9832.6523631579 * invT - 23.88 * tc[0];
  const amrex::Real x1222 = exp(x1221) * sc[9];
  const amrex::Real x1223 = x719 * x1222;
  const amrex::Real x1224 = x1220 * x1223;
  const amrex::Real x1225 = 1.96e+36 * x1200 - 4.27e+46 * x1216 +
                            6.579225e+42 * x1219 + 1.82329e+93 * x1224 - x760 -
                            x783 + x1196 * x1194 + x1204 * x1206 +
                            x1214 * x1212;
  const amrex::Real x1226 = pow(x788, -2);
  const amrex::Real x1227 = x790 * x1226;
  const amrex::Real x1228 = x793 * x1227;
  const amrex::Real x1229 = x1228 * x1225;
  const amrex::Real x1230 = x1189 + x1229;
  const amrex::Real x1231 = 1;
  const amrex::Real x1232 = x610 * x1231 / pow(x608, 3);
  const amrex::Real x1233 = x606 * x609 * x1231;
  const amrex::Real x1234 = x1232 * x1083 + x1233 * x1080;
  const amrex::Real x1235 = x604 / pow(x611, 2);
  const amrex::Real x1236 = x618 * x1235;
  const amrex::Real x1237 = -x626;
  const amrex::Real x1238 = x613 * x602 / pow(x614, 2);
  const amrex::Real x1239 = -1434.16749754345 * invT - 5.14 * tc[0];
  const amrex::Real x1240 = exp(x1239) * sc[1];
  const amrex::Real x1241 = x1238 * x1240;
  const amrex::Real x1242 = x1237 + 1.8225e+24 * x1241 - x617 + x1236 * x1234;
  const amrex::Real x1243 = pow(x677, -2);
  const amrex::Real x1244 = x679 * x1243;
  const amrex::Real x1245 = x796 * x1244;
  const amrex::Real x1246 = x792 * x1243;
  const amrex::Real x1247 = x791 * x1246;
  const amrex::Real x1248 = x1242 * x1245 + x1247 * x1242;
  const amrex::Real x1249 = x1230 + x1248;
  const amrex::Real x1250 = x1186 + x1249;
  const amrex::Real x1251 = pow(x797, -2);
  const amrex::Real x1252 = 1.0 * kf_qss[85];
  const amrex::Real x1253 = x230 + x8 + x879;
  const amrex::Real x1254 = 1.0 * kf_qss[82];
  const amrex::Real x1255 = exp(-x1253) * x1254;
  const amrex::Real x1256 = 1.0 * kf_qss[25];
  const amrex::Real x1257 = x130 + x565 + x710 + x879;
  const amrex::Real x1258 = 1.0 * kf_qss[63];
  const amrex::Real x1259 = exp(-x1257) * x1258;
  const amrex::Real x1260 = 1.0 * kf_qss[24];
  const amrex::Real x1261 = x803 + x879;
  const amrex::Real x1262 = 1.0 * exp(-x1261) * kf_qss[46];
  const amrex::Real x1263 = 1.0 * kf_qss[28];
  const amrex::Real x1264 = 1.0 * kf_qss[27];
  const amrex::Real x1265 = 1.0 * kf_qss[61];
  const amrex::Real x1266 = 1.0 * kf_qss[52];
  const amrex::Real x1267 = -618.956498939805 * invT;
  const amrex::Real x1268 = -3.14 * tc[0] + x1267;
  const amrex::Real x1269 = exp(x1268);
  const amrex::Real x1270 = 3.2e+15 * x1269;
  const amrex::Real x1271 = x26 / kf_qss[1];
  const amrex::Real x1272 = x1270 * x1271;
  const amrex::Real x1273 = log(
    exp(-5590.0 * invT) + 0.32 * exp(-0.0128205128205128 * tc[1]) +
    0.68 * exp(-0.00050125313283208 * tc[1]));
  const amrex::Real x1274 = -0.4 - x503 * x1273;
  const amrex::Real x1275 = x1274 + x33 * log(x1272);
  const amrex::Real x1276 = 0.75 - x507 * x1273;
  const amrex::Real x1277 = -0.14 * x1275 + x1276;
  const amrex::Real x1278 = pow(x1277, -2);
  const amrex::Real x1279 = pow(x1275, 2);
  const amrex::Real x1280 = 1.0 + x1278 * x1279;
  const amrex::Real x1281 = x33 * x1273;
  const amrex::Real x1282 = pow(10, x1281 / x1280);
  const amrex::Real x1283 = 1.0 + x1272;
  const amrex::Real x1284 = x1282 / x1283;
  const amrex::Real x1285 = sc[1] * x1284;
  const amrex::Real x1286 = x1270 * x1285;
  const amrex::Real x1287 = x26 * x1286;
  const amrex::Real x1288 = 1e-12 - x1287 - x874 - x875 - x883 - x885 - x886 -
                            x888 - sc[3] * x1260 - sc[4] * x1263 -
                            sc[5] * x1256 - sc[6] * x1262 - sc[8] * x1264 -
                            sc[9] * x1266 - x1252 * sc[15] - x1255 * sc[11] -
                            x1259 * sc[12] - x1265 * sc[10];
  const amrex::Real x1289 = pow(x1288, -1);
  const amrex::Real x1290 = 1e-12 + x644 + x654;
  const amrex::Real x1291 = x1289 * x1290;
  const amrex::Real x1292 = x1251 * x1291;
  const amrex::Real x1293 = x877 * x1292;
  const amrex::Real x1294 = x1250 * x1293;
  const amrex::Real x1295 = x586 * x824;
  const amrex::Real x1296 = x794 * x1295;
  const amrex::Real x1297 = x1296 * x1091;
  const amrex::Real x1298 = x824 * x1184;
  const amrex::Real x1299 = x1297 + x1298 * x1182;
  const amrex::Real x1300 = x685 * x798;
  const amrex::Real x1301 = x590 * x1183;
  const amrex::Real x1302 = x824 * x1301;
  const amrex::Real x1303 = 1;
  const amrex::Real x1304 = x845 * x1303 / pow(x843, 3);
  const amrex::Real x1305 = x844 * x841 * x1303;
  const amrex::Real x1306 = x1304 * x1083 + x1305 * x1080;
  const amrex::Real x1307 = x839 / pow(x846, 2);
  const amrex::Real x1308 = x853 * x1307;
  const amrex::Real x1309 = x834 * x848 / pow(x849, 2);
  const amrex::Real x1310 = -5595.76932374848 * invT - 9.6 * tc[0];
  const amrex::Real x1311 = exp(x1310 + x832) * x914;
  const amrex::Real x1312 = x1311 * x1309;
  const amrex::Real x1313 = 4.84e+36 * x1312 - 2.2e+18 * x852 + x1306 * x1308;
  const amrex::Real x1314 = pow(x867, -2);
  const amrex::Real x1315 = x828 * x1314;
  const amrex::Real x1316 = x871 * x1315;
  const amrex::Real x1317 = x1316 * x1313;
  const amrex::Real x1318 = x589 * x1295;
  const amrex::Real x1319 = x1317 + x1318 * x1091;
  const amrex::Real x1320 = x1319 + x1302 * x1182;
  const amrex::Real x1321 = x1320 - x1300 * x1299;
  const amrex::Real x1322 = x589 * x1187;
  const amrex::Real x1323 = x1322 * x1091;
  const amrex::Real x1324 = x680 * x1301;
  const amrex::Real x1325 = x1323 + x1324 * x1182;
  const amrex::Real x1326 = x683 * x1243;
  const amrex::Real x1327 = x591 * x1244;
  const amrex::Real x1328 = -x1326 * x1242 + x1327 * x1242;
  const amrex::Real x1329 = x1325 + x1328;
  const amrex::Real x1330 = x826 * x1251;
  const amrex::Real x1331 = x685 * x1330;
  const amrex::Real x1332 = x1331 * x1250 - x827 * x1329;
  const amrex::Real x1333 = x1321 + x1332;
  const amrex::Real x1334 = -x878 + x890;
  const amrex::Real x1335 = pow(x872, -2);
  const amrex::Real x1336 = 1e-12 + x801 + x814 + x817 + x820;
  const amrex::Real x1337 = -x1300 * x1291 + x1336 * x1289;
  const amrex::Real x1338 = x1337 * x1335;
  const amrex::Real x1339 = x1338 * x1334;
  const amrex::Real x1340 = -x898 * x1299;
  const amrex::Real x1341 = x876 * x1243;
  const amrex::Real x1342 = x827 * x1341;
  const amrex::Real x1343 = x1342 * x1242;
  const amrex::Real x1344 = x877 * x1330;
  const amrex::Real x1345 = x1343 + x1344 * x1250;
  const amrex::Real x1346 = x1340 + x1345;
  const amrex::Real x1347 = x873 * x1337;
  const amrex::Real x1348 = 1;
  const amrex::Real x1349 = x1348 * x1279 / pow(x1277, 3);
  const amrex::Real x1350 = x1348 * x1275 * x1278;
  const amrex::Real x1351 = x1080 * x1350 + x1349 * x1083;
  const amrex::Real x1352 = x1273 / pow(x1280, 2);
  const amrex::Real x1353 = x1287 * x1352;
  const amrex::Real x1354 = x1271 * x1282 / pow(x1283, 2);
  const amrex::Real x1355 = -1237.91299787961 * invT;
  const amrex::Real x1356 = -6.28 * tc[0] + x1355;
  const amrex::Real x1357 = exp(x1356) * sc[1];
  const amrex::Real x1358 = x1357 * x1354;
  const amrex::Real x1359 = -x1286 + 1.024e+31 * x1358 + x1353 * x1351;
  const amrex::Real x1360 = pow(x1288, -2);
  const amrex::Real x1361 = x1336 * x1360;
  const amrex::Real x1362 = x1290 * x1360;
  const amrex::Real x1363 = x1300 * x1362;
  const amrex::Real x1364 = -x1361 * x1359 + x1363 * x1359;
  const amrex::Real x1365 = x685 * x1292;
  const amrex::Real x1366 = x798 * x1291;
  const amrex::Real x1367 = x1250 * x1365 - x1329 * x1366;
  const amrex::Real x1368 = x1364 + x1367;
  const amrex::Real x1369 = x873 * x1334;
  const amrex::Real x1370 = x1341 * x1366;
  const amrex::Real x1371 = x1242 * x1370;
  const amrex::Real x1372 = x898 * x1362;
  const amrex::Real x1373 = x1372 * x1359;
  const amrex::Real x1374 = x1371 + x1373;
  const amrex::Real x1375 = x155 * kf_qss[104];
  const amrex::Real x1376 = -x710;
  const amrex::Real x1377 = exp(-(2.0 * g_RT_qss[4] + x1376 + x9));
  const amrex::Real x1378 = 2.0 * x1377 * kf_qss[77];
  const amrex::Real x1379 = x1378 * sc[15];
  const amrex::Real x1380 = x857 * kf_qss[80];
  const amrex::Real x1381 = x547 * kf_qss[87];
  const amrex::Real x1382 = x128 * kf_qss[109];
  const amrex::Real x1383 = x135 + x157;
  const amrex::Real x1384 = x672 + x9;
  const amrex::Real x1385 = x1383 + x1384;
  const amrex::Real x1386 = exp(-x1385) * x716;
  const amrex::Real x1387 = x1386 * sc[15];
  const amrex::Real x1388 = x1376 + x672;
  const amrex::Real x1389 = exp(-(x116 + x1388));
  const amrex::Real x1390 = x714 * x1389;
  const amrex::Real x1391 = x1390 * sc[14];
  const amrex::Real x1392 = x857 * kf_qss[108];
  const amrex::Real x1393 = x251 + x565;
  const amrex::Real x1394 = exp(-(x130 + x1393 + x672));
  const amrex::Real x1395 = x763 * x1394;
  const amrex::Real x1396 = sc[9] * x1395;
  const amrex::Real x1397 = 1.0 * g_RT[21];
  const amrex::Real x1398 = -x1397;
  const amrex::Real x1399 = x1398 + x672 + x8;
  const amrex::Real x1400 = exp(-x1399) * refC * x701;
  const amrex::Real x1401 = -x702;
  const amrex::Real x1402 = x1401 + x167;
  const amrex::Real x1403 = x554 + x672;
  const amrex::Real x1404 = x1402 + x1403;
  const amrex::Real x1405 = exp(-x1404) * x742;
  const amrex::Real x1406 = sc[1] * x1405;
  const amrex::Real x1407 = x557 * kf_qss[79];
  const amrex::Real x1408 = refC * x719;
  const amrex::Real x1409 = x167 + x672;
  const amrex::Real x1410 = -(x1409 + x60);
  const amrex::Real x1411 = exp(x1410 + x720);
  const amrex::Real x1412 = 4.27e+46 * x1411;
  const amrex::Real x1413 = x1408 * x1412;
  const amrex::Real x1414 = x738 * x1413;
  const amrex::Real x1415 = x1414 * sc[19];
  const amrex::Real x1416 = x1376 + x143;
  const amrex::Real x1417 = exp(-(x10 + x1416 + x672));
  const amrex::Real x1418 = x741 * x1417;
  const amrex::Real x1419 = x1418 * sc[14];
  const amrex::Real x1420 = -(x672 + x73);
  const amrex::Real x1421 = exp(x1420 + x765);
  const amrex::Real x1422 = refC * sc[15];
  const amrex::Real x1423 = x1421 * x1422;
  const amrex::Real x1424 = x719 * x781;
  const amrex::Real x1425 = 1.4e+18 * x1424;
  const amrex::Real x1426 = x1423 * x1425;
  const amrex::Real x1427 = -x637 + x672;
  const amrex::Real x1428 = exp(-(x1427 + x209));
  const amrex::Real x1429 = x715 * x1428;
  const amrex::Real x1430 = x1429 * sc[17];
  const amrex::Real x1431 = exp(-(x1376 + x1409 + x169));
  const amrex::Real x1432 = x709 * x1431;
  const amrex::Real x1433 = x1432 * sc[14];
  const amrex::Real x1434 = x895 * kf_qss[89];
  const amrex::Real x1435 = x1388 + x158;
  const amrex::Real x1436 = exp(-x1435) * x764;
  const amrex::Real x1437 = x1436 * sc[14];
  const amrex::Real x1438 = 1.0 * kf_qss[127];
  const amrex::Real x1439 = sc[1] * refCinv;
  const amrex::Real x1440 = x1439 * sc[14];
  const amrex::Real x1441 = -(x1376 + x1403);
  const amrex::Real x1442 = exp(x1441 + x743) * x759;
  const amrex::Real x1443 = 2.565e+21 * x1442;
  const amrex::Real x1444 = x719 * x1443;
  const amrex::Real x1445 = x1440 * x1444;
  const amrex::Real x1446 = x128 * kf_qss[83];
  const amrex::Real x1447 = x1427 + x859;
  const amrex::Real x1448 = exp(-x1447) * x686;
  const amrex::Real x1449 = sc[2] * x1448;
  const amrex::Real x1450 = -x293;
  const amrex::Real x1451 = x162 + x672;
  const amrex::Real x1452 = -(x1450 + x1451);
  const amrex::Real x1453 = -4521.1501339225 * invT - 11.79 * tc[0];
  const amrex::Real x1454 = exp(x1452 + x1453);
  const amrex::Real x1455 = 1.55e+44 * x1454;
  const amrex::Real x1456 = pow(kf_qss[8], -1);
  const amrex::Real x1457 = exp(x1453) * x26;
  const amrex::Real x1458 = 1.55e+44 * x1456 * x1457;
  const amrex::Real x1459 = log(
    0.198 * x726 + exp(-5723.2 * invT) +
    0.802 * exp(-0.000439000834101585 * tc[1]));
  const amrex::Real x1460 = -0.4 - x503 * x1459;
  const amrex::Real x1461 = x1460 + x33 * log(x1458);
  const amrex::Real x1462 = 0.75 - x507 * x1459;
  const amrex::Real x1463 = -0.14 * x1461 + x1462;
  const amrex::Real x1464 = pow(x1463, -2);
  const amrex::Real x1465 = pow(x1461, 2);
  const amrex::Real x1466 = 1.0 + x1465 * x1464;
  const amrex::Real x1467 = x33 * x1459;
  const amrex::Real x1468 = pow(10, x1467 / x1466);
  const amrex::Real x1469 = 1.0 + x1458;
  const amrex::Real x1470 = x1468 / x1469;
  const amrex::Real x1471 = x1470 * x1455;
  const amrex::Real x1472 = x914 * x1471;
  const amrex::Real x1473 = x1472 * sc[22];
  const amrex::Real x1474 = x1401 + x251;
  const amrex::Real x1475 = x1451 + x1474;
  const amrex::Real x1476 = exp(-x1475) * kf_qss[98];
  const amrex::Real x1477 = x547 * x1476;
  const amrex::Real x1478 = x1473 + x1477 * sc[18];
  const amrex::Real x1479 = exp(-(x1384 + x566));
  const amrex::Real x1480 = x1479 * kf_qss[73];
  const amrex::Real x1481 = x72 * x1480;
  const amrex::Real x1482 = 1.0 * sc[20];
  const amrex::Real x1483 = -x661;
  const amrex::Real x1484 = exp(-(x1483 + x563 + x672)) * refC;
  const amrex::Real x1485 = x1484 * kf_qss[74];
  const amrex::Real x1486 = 1e-12 + x1481 * sc[12] + x1485 * x1482;
  const amrex::Real x1487 =
    x1415 + x1426 + x1445 + x1478 + x1486 + sc[3] * x1430 + sc[4] * x1387 +
    sc[4] * x1437 + sc[5] * x1419 + sc[6] * x1391 + x1375 * sc[18] +
    x1379 * sc[14] + x1380 * sc[15] + x1381 * sc[15] + x1382 * sc[20] +
    x1392 * sc[20] + x1396 * sc[12] + x1400 * sc[21] + x1406 * sc[18] +
    x1407 * sc[15] + x1433 * sc[10] + x1434 * sc[15] + x1438 * sc[23] +
    x1446 * sc[15] + x1449 * sc[17];
  const amrex::Real x1488 = x789 * x1487;
  const amrex::Real x1489 = x50 * sc[26];
  const amrex::Real x1490 = x37 * sc[1];
  const amrex::Real x1491 = x1489 * x1490;
  const amrex::Real x1492 = x63 * sc[30];
  const amrex::Real x1493 = x14 * sc[28];
  const amrex::Real x1494 = -x421;
  const amrex::Real x1495 = x1494 + x2 + x8;
  const amrex::Real x1496 = exp(-x1495) * x20 * refC;
  const amrex::Real x1497 = -x117;
  const amrex::Real x1498 = x1497 + x2 + x54;
  const amrex::Real x1499 = exp(-x1498) * kf_qss[160];
  const amrex::Real x1500 = 1.0 * sc[0];
  const amrex::Real x1501 = refC * x1500;
  const amrex::Real x1502 = 1e-12 + x1501 * x1499;
  const amrex::Real x1503 = x1491 + x1502 + sc[1] * x1492 + sc[1] * x1493 +
                            x1496 * sc[29] + x18 * sc[31];
  const amrex::Real x1504 = x66 * x1503;
  const amrex::Real x1505 = x557 * kf_qss[134];
  const amrex::Real x1506 = x557 * kf_qss[138];
  const amrex::Real x1507 = x91 * x1490;
  const amrex::Real x1508 = x1507 * sc[24];
  const amrex::Real x1509 = x1502 + x1508 + x1505 * sc[26] + x1506 * sc[27];
  const amrex::Real x1510 = x101 * x1504 - x99 * x1509;
  const amrex::Real x1511 = x155 * kf_qss[193];
  const amrex::Real x1512 = 1.0 * sc[32];
  const amrex::Real x1513 = x155 * kf_qss[176];
  const amrex::Real x1514 = x857 * kf_qss[167];
  const amrex::Real x1515 = x547 * kf_qss[179];
  const amrex::Real x1516 = x128 * kf_qss[170];
  const amrex::Real x1517 = x557 * kf_qss[164];
  const amrex::Real x1518 = x895 * kf_qss[173];
  const amrex::Real x1519 =
    1e-12 + sc[0] * x1513 + sc[0] * x1514 + sc[0] * x1515 + sc[0] * x1516 +
    sc[0] * x1517 + sc[0] * x1518 + x1511 * sc[31] + x1512 * kf_qss[185];
  const amrex::Real x1520 = -x175 * x1519 + x177 * x1504 - x180 * x1510;
  const amrex::Real x1521 = x182 * x1520;
  const amrex::Real x1522 = x155 * kf_qss[174];
  const amrex::Real x1523 = x128 * kf_qss[168];
  const amrex::Real x1524 = x557 * kf_qss[162];
  const amrex::Real x1525 = x857 * kf_qss[165];
  const amrex::Real x1526 = x155 * sc[31];
  const amrex::Real x1527 = x547 * kf_qss[177];
  const amrex::Real x1528 = x895 * kf_qss[171];
  const amrex::Real x1529 =
    1e-12 + sc[0] * x1522 + sc[0] * x1523 + sc[0] * x1524 + sc[0] * x1525 +
    sc[0] * x1527 + sc[0] * x1528 + x1512 * kf_qss[181] + x1526 * kf_qss[189];
  const amrex::Real x1530 = -x336 * x1529 - x338 * x1521;
  const amrex::Real x1531 = x368 * x340;
  const amrex::Real x1532 = x359 * sc[30];
  const amrex::Real x1533 = x1532 * x1490;
  const amrex::Real x1534 = x1497 + x162 + x327;
  const amrex::Real x1535 = exp(-x1534) * kf_qss[157];
  const amrex::Real x1536 = 1e-12 + x1501 * x1535;
  const amrex::Real x1537 = x1533 + x1536;
  const amrex::Real x1538 = -x1530 * x1531 - x366 * x1537;
  const amrex::Real x1539 = x384 * sc[27];
  const amrex::Real x1540 = x1539 * x1490;
  const amrex::Real x1541 = x392 * sc[30];
  const amrex::Real x1542 = x121 + x1497 + x346;
  const amrex::Real x1543 = exp(-x1542) * kf_qss[159];
  const amrex::Real x1544 = 1e-12 + x1501 * x1543;
  const amrex::Real x1545 = x1540 + x1544 + sc[1] * x1541;
  const amrex::Real x1546 = x557 * kf_qss[163];
  const amrex::Real x1547 = x155 * kf_qss[175];
  const amrex::Real x1548 = sc[19] * kf_qss[149];
  const amrex::Real x1549 = x128 * kf_qss[169];
  const amrex::Real x1550 = x857 * kf_qss[166];
  const amrex::Real x1551 = x895 * kf_qss[172];
  const amrex::Real x1552 = x547 * kf_qss[178];
  const amrex::Real x1553 = 1e-12 + sc[0] * x1546 + sc[0] * x1547 +
                            sc[0] * x1549 + sc[0] * x1550 + sc[0] * x1551 +
                            sc[0] * x1552 + x1512 * kf_qss[183] +
                            x1526 * kf_qss[191] + 1.0 * x1548 * sc[29];
  const amrex::Real x1554 = x425 * x1553;
  const amrex::Real x1555 = -x400 * x1545 + x429 * x1554 - x950 * x1538;
  const amrex::Real x1556 = x452 * sc[25];
  const amrex::Real x1557 = x1556 * x1490;
  const amrex::Real x1558 = x557 * kf_qss[137];
  const amrex::Real x1559 = 2.0 * g_RT_qss[9] + x1497;
  const amrex::Real x1560 = 2.0 * exp(-x1559) * refC * kf_qss[161];
  const amrex::Real x1561 = x557 * kf_qss[141];
  const amrex::Real x1562 =
    1e-12 + x1557 + sc[0] * x1560 + x1558 * sc[27] + x1561 * sc[28];
  const amrex::Real x1563 = -x457 * x1562 - x461 * x1521 - x922 * x1555;
  const amrex::Real x1564 = x463 * x1563;
  const amrex::Real x1565 = x121 + x1450;
  const amrex::Real x1566 = exp(-(x116 + x1565));
  const amrex::Real x1567 = x300 * x1566;
  const amrex::Real x1568 = sc[6] * x1567;
  const amrex::Real x1569 = x292 * x1490;
  const amrex::Real x1570 = x1569 * sc[22];
  const amrex::Real x1571 = exp(-(x1565 + x158));
  const amrex::Real x1572 = x280 * x1571;
  const amrex::Real x1573 = sc[4] * x1572;
  const amrex::Real x1574 = x557 * kf_qss[135];
  const amrex::Real x1575 = exp(-(x144 + x1565));
  const amrex::Real x1576 = x1575 * sc[22];
  const amrex::Real x1577 = x282 * sc[5];
  const amrex::Real x1578 = x1450 + x167;
  const amrex::Real x1579 = exp(-(x121 + x1578 + x169));
  const amrex::Real x1580 = x281 * x1579;
  const amrex::Real x1581 = x1580 * sc[10];
  const amrex::Real x1582 = x557 * kf_qss[131];
  const amrex::Real x1583 = x1544 + x1570 + x1568 * sc[22] + x1573 * sc[22] +
                            x1574 * sc[26] + x1577 * x1576 + x1581 * sc[22] +
                            x1582 * sc[25];
  const amrex::Real x1584 = -x304 * x1583 - x306 * x1521 - x311 * x1564;
  const amrex::Real x1585 = x471 * x1584;
  const amrex::Real x1586 = x111 * x1510;
  const amrex::Real x1587 = x60 + x76;
  const amrex::Real x1588 = exp(-(x1587 + x170));
  const amrex::Real x1589 = x217 * x1588;
  const amrex::Real x1590 = x1589 * sc[19];
  const amrex::Real x1591 = exp(-(x143 + x61 + x76));
  const amrex::Real x1592 = x1591 * sc[19];
  const amrex::Real x1593 = x227 * sc[5];
  const amrex::Real x1594 = x557 * kf_qss[132];
  const amrex::Real x1595 = exp(-(x116 + x1587));
  const amrex::Real x1596 = x223 * x1595;
  const amrex::Real x1597 = sc[6] * x1596;
  const amrex::Real x1598 = sc[15] * refCinv;
  const amrex::Real x1599 = x251 + x9;
  const amrex::Real x1600 = x1599 + x76;
  const amrex::Real x1601 = exp(-x1600) * x203;
  const amrex::Real x1602 = x1601 * x1598;
  const amrex::Real x1603 = exp(-(x158 + x1587));
  const amrex::Real x1604 = x222 * x1603;
  const amrex::Real x1605 = sc[4] * x1604;
  const amrex::Real x1606 = x557 * kf_qss[128];
  const amrex::Real x1607 = x1497 + x421 + x76;
  const amrex::Real x1608 = exp(-x1607) * refC * x224;
  const amrex::Real x1609 = x193 * sc[19];
  const amrex::Real x1610 = x1609 * x1490;
  const amrex::Real x1611 = 1e-12 + x1610 + sc[0] * x1608 + sc[9] * x1602 +
                            x1590 * sc[10] + x1592 * x1593 + x1594 * sc[25] +
                            x1597 * sc[19] + x1605 * sc[19] + x1606 * sc[24];
  const amrex::Real x1612 =
    -x236 * x1611 - x238 * x1586 - x241 * x1520 - x269 * x1585;
  const amrex::Real x1613 = x557 * kf_qss[118];
  const amrex::Real x1614 = -x487;
  const amrex::Real x1615 = x1614 + x162;
  const amrex::Real x1616 = x1383 + x1615;
  const amrex::Real x1617 = exp(-x1616) * x543;
  const amrex::Real x1618 = x1617 * sc[16];
  const amrex::Real x1619 = x547 * kf_qss[103];
  const amrex::Real x1620 = x557 * kf_qss[129];
  const amrex::Real x1621 = x162 + x9;
  const amrex::Real x1622 = exp(-(x158 + x1621));
  const amrex::Real x1623 = x552 * x1622;
  const amrex::Real x1624 = x1623 * sc[15];
  const amrex::Real x1625 = -x156;
  const amrex::Real x1626 = x137 + x1625;
  const amrex::Real x1627 = exp(-(x1615 + x1626));
  const amrex::Real x1628 = x559 * x1627;
  const amrex::Real x1629 = x1628 * sc[16];
  const amrex::Real x1630 = exp(-(x138 + x1621));
  const amrex::Real x1631 = x558 * x1630;
  const amrex::Real x1632 = x1631 * sc[15];
  const amrex::Real x1633 = refC * sc[16];
  const amrex::Real x1634 = 1.99e+29 * x1633;
  const amrex::Real x1635 = -(x10 + x1615);
  const amrex::Real x1636 = exp(x1635 + x497);
  const amrex::Real x1637 = x26 * x515;
  const amrex::Real x1638 = x1636 * x1637;
  const amrex::Real x1639 = x1638 * x1634;
  const amrex::Real x1640 = sc[9] * refCinv;
  const amrex::Real x1641 = x162 + x208;
  const amrex::Real x1642 = exp(-(x1641 + x209 + x251));
  const amrex::Real x1643 = x1642 * sc[11];
  const amrex::Real x1644 = x1640 * x1643;
  const amrex::Real x1645 = x551 * x1644;
  const amrex::Real x1646 = 1.0 * kf_qss[197];
  const amrex::Real x1647 = sc[1] * sc[15];
  const amrex::Real x1648 = x526 * x539;
  const amrex::Real x1649 = x1647 * x1648;
  const amrex::Real x1650 = pow(sc[9], 2.0);
  const amrex::Real x1651 = 1.0 * kf_qss[54];
  const amrex::Real x1652 = exp(-(x1641 + x668));
  const amrex::Real x1653 = x562 * x1652;
  const amrex::Real x1654 = x1653 * sc[11];
  const amrex::Real x1655 = x557 * kf_qss[99];
  const amrex::Real x1656 = exp(-(x143 + x162 + x73));
  const amrex::Real x1657 = x491 * x1656;
  const amrex::Real x1658 = x1657 * sc[15];
  const amrex::Real x1659 = x128 * kf_qss[101];
  const amrex::Real x1660 = x857 * kf_qss[100];
  const amrex::Real x1661 = x1478 + x1536 + x1639 + x1649 + sc[3] * x1645 +
                            sc[4] * x1618 + sc[4] * x1624 + sc[5] * x1658 +
                            sc[7] * x1632 + sc[8] * x1629 + sc[9] * x1654 +
                            x1613 * sc[22] + x1619 * sc[16] + x1620 * sc[24] +
                            x1646 * sc[33] + x1650 * x1651 + x1655 * sc[16] +
                            x1659 * sc[16] + x1660 * sc[16];
  const amrex::Real x1662 =
    -x1117 * x1584 - x575 * x1661 - x577 * x1521 - x583 * x1612;
  const amrex::Real x1663 = exp(-(x131 + x566));
  const amrex::Real x1664 = x620 * x1663;
  const amrex::Real x1665 = sc[3] * x1664;
  const amrex::Real x1666 = x547 * kf_qss[51];
  const amrex::Real x1667 = x557 * kf_qss[107];
  const amrex::Real x1668 = x155 * kf_qss[45];
  const amrex::Real x1669 = x857 * kf_qss[42];
  const amrex::Real x1670 = x554 + x566;
  const amrex::Real x1671 = exp(-x1670);
  const amrex::Real x1672 = x692 * sc[1];
  const amrex::Real x1673 = x1671 * x1672;
  const amrex::Real x1674 = x557 * kf_qss[41];
  const amrex::Real x1675 = x557 * kf_qss[78];
  const amrex::Real x1676 = x128 * kf_qss[43];
  const amrex::Real x1677 = refC * sc[11];
  const amrex::Real x1678 = x10 + x208;
  const amrex::Real x1679 = -(x1678 + x563);
  const amrex::Real x1680 = exp(x1679 + x599);
  const amrex::Real x1681 = x26 * x615;
  const amrex::Real x1682 = 1350000000000.0 * x1680 * x1681;
  const amrex::Real x1683 = x1682 * x1677;
  const amrex::Real x1684 = x158 + x566;
  const amrex::Real x1685 = exp(-x1684) * x671;
  const amrex::Real x1686 = x1685 * sc[12];
  const amrex::Real x1687 = exp(-(x144 + x566));
  const amrex::Real x1688 = x660 * x1687;
  const amrex::Real x1689 = x1688 * sc[12];
  const amrex::Real x1690 = x895 * kf_qss[44];
  const amrex::Real x1691 = exp(-(x170 + x566));
  const amrex::Real x1692 = x655 * x1691;
  const amrex::Real x1693 = x1692 * sc[12];
  const amrex::Real x1694 = x857 * kf_qss[81];
  const amrex::Real x1695 = x60 + x702;
  const amrex::Real x1696 = exp(-(x1695 + x566));
  const amrex::Real x1697 = x667 * x1696;
  const amrex::Real x1698 = x1697 * sc[19];
  const amrex::Real x1699 = 1.0 * g_RT[13];
  const amrex::Real x1700 = -x1699;
  const amrex::Real x1701 = exp(-(x1700 + x563 + x593));
  const amrex::Real x1702 = x631 * x1701;
  const amrex::Real x1703 = sc[1] * x1702;
  const amrex::Real x1704 = exp(-(x116 + x566));
  const amrex::Real x1705 = x649 * x1704;
  const amrex::Real x1706 = x1705 * sc[12];
  const amrex::Real x1707 = exp(-(x1397 + x1450 + x566));
  const amrex::Real x1708 = x639 * x1707;
  const amrex::Real x1709 = x1708 * sc[12];
  const amrex::Real x1710 =
    x1486 + x1683 + sc[4] * x1686 + sc[5] * x1689 + sc[6] * x1706 +
    x1665 * sc[12] + x1666 * sc[11] + x1667 * sc[20] + x1668 * sc[11] +
    x1669 * sc[11] + x1674 * sc[11] + x1675 * sc[17] + x1676 * sc[11] +
    x1690 * sc[11] + x1693 * sc[10] + x1694 * sc[15] + x1698 * sc[12] +
    x1703 * sc[13] + x1709 * sc[22] + x627 * x1673 + x646 * x1673;
  const amrex::Real x1711 = -x1662 * x1187 - x678 * x1710 + x793 * x1488;
  const amrex::Real x1712 = x544 + x554;
  const amrex::Real x1713 = x142 + x251;
  const amrex::Real x1714 = exp(-(x1712 + x1713));
  const amrex::Real x1715 = x1714 * kf_qss[34];
  const amrex::Real x1716 = x547 * x1715;
  const amrex::Real x1717 = x167 + x9;
  const amrex::Real x1718 = x1712 + x1717;
  const amrex::Real x1719 = exp(-x1718) * kf_qss[53];
  const amrex::Real x1720 = x557 * x1719;
  const amrex::Real x1721 = x544 + x565;
  const amrex::Real x1722 = exp(-(x130 + x143 + x1721));
  const amrex::Real x1723 = x815 * x1722;
  const amrex::Real x1724 = sc[5] * x1723;
  const amrex::Real x1725 = x206 * sc[12];
  const amrex::Real x1726 = x565 + x650;
  const amrex::Real x1727 = exp(-(x1712 + x1726));
  const amrex::Real x1728 = x806 * x1727;
  const amrex::Real x1729 = x1728 * x1725;
  const amrex::Real x1730 = x168 - x553;
  const amrex::Real x1731 = x1730 + x544;
  const amrex::Real x1732 = exp(-x1731) * kf_qss[62];
  const amrex::Real x1733 = x115 + x208;
  const amrex::Real x1734 = exp(-(x1712 + x1733));
  const amrex::Real x1735 = x1734 * kf_qss[33];
  const amrex::Real x1736 = x557 * x1735;
  const amrex::Real x1737 = x128 * kf_qss[47];
  const amrex::Real x1738 = exp(-(x1699 + x1721 + x208));
  const amrex::Real x1739 = x799 * x1738;
  const amrex::Real x1740 = x1739 * sc[11];
  const amrex::Real x1741 = x1401 + x8;
  const amrex::Real x1742 = exp(-(x1712 + x1741));
  const amrex::Real x1743 = x1742 * kf_qss[86];
  const amrex::Real x1744 = x557 * x1743;
  const amrex::Real x1745 = exp(-(x114 + x156 + x1721));
  const amrex::Real x1746 = x818 * x1745;
  const amrex::Real x1747 = sc[6] * x1746;
  const amrex::Real x1748 = 1e-12 + sc[1] * x1716 + sc[1] * x1729 +
                            sc[9] * x1737 + x1720 * sc[15] + x1724 * sc[12] +
                            1.0 * x1732 * x1650 + x1736 * sc[11] +
                            x1740 * sc[12] + x1744 * sc[18] + x1747 * sc[12];
  const amrex::Real x1749 = x208 + x807;
  const amrex::Real x1750 = x158 + x1749;
  const amrex::Real x1751 = exp(-x1750) * x854;
  const amrex::Real x1752 = x1751 * sc[11];
  const amrex::Real x1753 = exp(-(x143 + x1678 + x807));
  const amrex::Real x1754 = sc[5] * x1753;
  const amrex::Real x1755 = x865 * x1754;
  const amrex::Real x1756 = x547 * kf_qss[48];
  const amrex::Real x1757 = exp(-(x129 + x252 + x807));
  const amrex::Real x1758 = x855 * x1757;
  const amrex::Real x1759 = sc[3] * x1758;
  const amrex::Real x1760 = x850 * sc[11];
  const amrex::Real x1761 = x836 * x1760;
  const amrex::Real x1762 = sc[1] * x1761;
  const amrex::Real x1763 = exp(-(x116 + x1749));
  const amrex::Real x1764 = x866 * x1763;
  const amrex::Real x1765 = sc[6] * x1764;
  const amrex::Real x1766 = x547 * kf_qss[49];
  const amrex::Real x1767 = exp(-(x131 + x1749));
  const amrex::Real x1768 = x856 * x1767;
  const amrex::Real x1769 = x1768 * sc[11];
  const amrex::Real x1770 = 1e-12 + x1762 + sc[3] * x1769 + sc[4] * x1752 +
                            sc[4] * x1766 + sc[8] * x1756 + sc[9] * x1759 +
                            x1755 * sc[11] + x1765 * sc[11];
  const amrex::Real x1771 = x868 * x1770;
  const amrex::Real x1772 =
    -x1662 * x1295 - x822 * x1748 - x827 * x1711 + x871 * x1771;
  const amrex::Real x1773 = exp(-(x210 + x640));
  const amrex::Real x1774 = x1773 * x1263;
  const amrex::Real x1775 = sc[3] * x1774;
  const amrex::Real x1776 = x128 * kf_qss[46];
  const amrex::Real x1777 = x554 + x640;
  const amrex::Real x1778 = exp(-(x1733 + x1777));
  const amrex::Real x1779 = x1778 * x1260;
  const amrex::Real x1780 = x1779 * sc[11];
  const amrex::Real x1781 = exp(-(x1717 + x1777));
  const amrex::Real x1782 = x1781 * x1266;
  const amrex::Real x1783 = x1782 * sc[15];
  const amrex::Real x1784 = x1713 + x1777;
  const amrex::Real x1785 = exp(-x1784) * x1256;
  const amrex::Real x1786 = sc[9] * x1785;
  const amrex::Real x1787 = x1730 + x640;
  const amrex::Real x1788 = exp(-x1787);
  const amrex::Real x1789 = x1741 + x1777;
  const amrex::Real x1790 = exp(-x1789) * x1252;
  const amrex::Real x1791 = x1790 * sc[18];
  const amrex::Real x1792 = x857 * kf_qss[82];
  const amrex::Real x1793 = x857 * kf_qss[63];
  const amrex::Real x1794 = 2.0 * g_RT[1];
  const amrex::Real x1795 = -x1794;
  const amrex::Real x1796 = x156 + x1700 + x1795 + x640;
  const amrex::Real x1797 = exp(-x1796) * refCinv;
  const amrex::Real x1798 = pow(sc[1], 2.0) * x1797 * x1264;
  const amrex::Real x1799 = exp(-(2.0 * g_RT_qss[0] + x1416));
  const amrex::Real x1800 = 2.0 * x1799 * kf_qss[29];
  const amrex::Real x1801 = sc[5] * x1800;
  const amrex::Real x1802 = refC * sc[9];
  const amrex::Real x1803 = x26 * x1284;
  const amrex::Real x1804 = -(x252 + x640);
  const amrex::Real x1805 = exp(x1268 + x1804);
  const amrex::Real x1806 = 3.2e+15 * x1805;
  const amrex::Real x1807 = x1803 * x1806;
  const amrex::Real x1808 = x1802 * x1807;
  const amrex::Real x1809 =
    1e-12 + x1808 + sc[1] * x1780 + sc[1] * x1783 + sc[1] * x1786 +
    sc[1] * x1791 + sc[9] * x1776 + x1775 * sc[11] + x1792 * sc[15] +
    x1793 * sc[14] + x1798 * sc[13] + x1801 * sc[14] + x1788 * x1650 * x1265;
  const amrex::Real x1810 = x798 * x1711;
  const amrex::Real x1811 = -x1347 * x1772 - x1809 * x1289 - x1810 * x1291;
  const amrex::Real x1812 = 1 - x1337 * x1369 - x898 * x1291;
  const amrex::Real x1813 = x1811 / pow(x1812, 2);
  const amrex::Real x1814 =
    x1813 * (x1294 + x1374 + x1339 * x1333 - x1347 * x1346 - x1368 * x1369);
  const amrex::Real x1815 = -x1814;
  const amrex::Real x1816 = pow(x1812, -1);
  const amrex::Real x1817 = x423 * x1535;
  const amrex::Real x1818 = x1649 * x1070;
  const amrex::Real x1819 = x26 * x1647;
  const amrex::Real x1820 = exp(-x1073) * x1819;
  const amrex::Real x1821 = x1820 * x1072;
  const amrex::Real x1822 = exp(x1077 + x1635) * x1633;
  const amrex::Real x1823 = x1822 * x1076;
  const amrex::Real x1824 = x1639 * x1086;
  const amrex::Real x1825 = x525 * x539;
  const amrex::Real x1826 = x1825 * x1647;
  const amrex::Real x1827 = x515 * x1636;
  const amrex::Real x1828 = 1;
  const amrex::Real x1829 = x1828 * x1465 / pow(x1463, 3);
  const amrex::Real x1830 = x1461 * x1464;
  const amrex::Real x1831 = x1828 * x1830;
  const amrex::Real x1832 = x1473 * x1459 / pow(x1466, 2);
  const amrex::Real x1833 = refC * sc[22];
  const amrex::Real x1834 =
    exp(-9042.30026784501 * invT - 23.58 * tc[0] + x1452);
  const amrex::Real x1835 = x914 * sc[22];
  const amrex::Real x1836 = x1834 * x1835 * x1456 * x1468 / pow(x1469, 2);
  const amrex::Real x1837 = -2.4025e+88 * x1836 + x1833 * x1471 -
                            (x1829 * x1083 + x1831 * x1080) * x1832;
  const amrex::Real x1838 = -22231225000000. * x1821 - 3.9601e+58 * x1823 +
                            4715000.0 * x1826 + x1837 - x1818 * x1069 -
                            x1824 * x1085 + x1827 * x1634;
  const amrex::Real x1839 = x423 * x1499;
  const amrex::Real x1840 = x958 * x1491;
  const amrex::Real x1841 = x960 * sc[26];
  const amrex::Real x1842 = exp(x917);
  const amrex::Real x1843 = x26 * sc[1];
  const amrex::Real x1844 = x1843 * x1842;
  const amrex::Real x1845 = 3.91876e+53 * x1844;
  const amrex::Real x1846 = x36 * sc[1];
  const amrex::Real x1847 = -x1841 * x1845 + x1846 * x1489 - x957 * x1840;
  const amrex::Real x1848 = (x1839 + x1847) * x66;
  const amrex::Real x1849 = x976 * x1508;
  const amrex::Real x1850 = x91 * sc[24];
  const amrex::Real x1851 = x978 * sc[24];
  const amrex::Real x1852 = x1851 * x1844;
  const amrex::Real x1853 = -3.91876e+53 * x1852 + x1850 * x1846 - x975 * x1849;
  const amrex::Real x1854 = x963 * x1503;
  const amrex::Real x1855 = x962 * x1854;
  const amrex::Real x1856 = -x101 * x1855;
  const amrex::Real x1857 = x981 * x1509;
  const amrex::Real x1858 = x983 * x1504;
  const amrex::Real x1859 = x980 * x1857 - x980 * x1858;
  const amrex::Real x1860 = x1856 + x1859;
  const amrex::Real x1861 = x1860 + x101 * x1848 - (x1839 + x1853) * x99;
  const amrex::Real x1862 = -x177 * x1855;
  const amrex::Real x1863 = x993 * x1510;
  const amrex::Real x1864 = x1862 + x991 * x1863;
  const amrex::Real x1865 = x1864 - x966 * x1586;
  const amrex::Real x1866 =
    x1865 + x177 * x1848 - x180 * x1861 -
    (x1513 + x1514 + x1515 + x1516 + x1517 + x1518) * x175;
  const amrex::Real x1867 = x1023 * x1563;
  const amrex::Real x1868 = x1867 * x1021;
  const amrex::Real x1869 = x423 * x1543;
  const amrex::Real x1870 = x1040 * x1570;
  const amrex::Real x1871 = x292 * sc[22];
  const amrex::Real x1872 = x1042 * sc[22];
  const amrex::Real x1873 = -x1845 * x1872 + x1846 * x1871 - x1870 * x1039;
  const amrex::Real x1874 = x931 * x1557;
  const amrex::Real x1875 = x933 * sc[25];
  const amrex::Real x1876 = -x1845 * x1875 + x1846 * x1556 - x930 * x1874;
  const amrex::Real x1877 =
    (x1546 + x1547 + x1549 + x1550 + x1551 + x1552) * x425;
  const amrex::Real x1878 = x912 * x1540;
  const amrex::Real x1879 = x918 * sc[27];
  const amrex::Real x1880 = x1844 * x1879;
  const amrex::Real x1881 = -3.91876e+53 * x1880 + x1846 * x1539 - x911 * x1878;
  const amrex::Real x1882 = x1000 * x1520;
  const amrex::Real x1883 = x338 * x1882;
  const amrex::Real x1884 = x996 * x1883;
  const amrex::Real x1885 = x338 * x182;
  const amrex::Real x1886 =
    x340 * (x1884 - x1866 * x1885 -
            (x1522 + x1523 + x1524 + x1525 + x1527 + x1528) * x336);
  const amrex::Real x1887 = x944 * x1533;
  const amrex::Real x1888 = x946 * sc[30];
  const amrex::Real x1889 = x1844 * x1888;
  const amrex::Real x1890 = -3.91876e+53 * x1889 + x1846 * x1532 - x943 * x1887;
  const amrex::Real x1891 = x940 * x1537;
  const amrex::Real x1892 = x948 * x1891;
  const amrex::Real x1893 = x367 * x340 * x1530;
  const amrex::Real x1894 = x949 * x1893;
  const amrex::Real x1895 = x999 * x1530;
  const amrex::Real x1896 = x338 * x1001;
  const amrex::Real x1897 = x1895 * x1896;
  const amrex::Real x1898 = x1892 + x1894 + x996 * x1897;
  const amrex::Real x1899 = x1898 - x368 * x1886 - (x1817 + x1890) * x366;
  const amrex::Real x1900 = x1005 * x1538;
  const amrex::Real x1901 = x1900 * x1003;
  const amrex::Real x1902 = x921 * x1545;
  const amrex::Real x1903 = x1008 * x1554;
  const amrex::Real x1904 = x370 * x1538;
  const amrex::Real x1905 = x1904 * x1011 + x920 * x1902 - x920 * x1903;
  const amrex::Real x1906 = x1901 + x1905;
  const amrex::Real x1907 =
    x1906 + x429 * x1877 - x950 * x1899 - (x1869 + x1881) * x400;
  const amrex::Real x1908 = x461 * x182;
  const amrex::Real x1909 = x927 * x1562;
  const amrex::Real x1910 = x460 * x1521;
  const amrex::Real x1911 = x927 * x1910;
  const amrex::Real x1912 = x458 * x431 * x1555;
  const amrex::Real x1913 = x927 * x1912;
  const amrex::Real x1914 = x935 * x1909 + x935 * x1911 + x935 * x1913;
  const amrex::Real x1915 = x461 * x1882;
  const amrex::Real x1916 = x996 * x1915;
  const amrex::Real x1917 = x1015 * x1555;
  const amrex::Real x1918 = x1916 + x1917 * x1013;
  const amrex::Real x1919 = x1914 + x1918;
  const amrex::Real x1920 =
    x1919 - x1908 * x1866 - x922 * x1907 - (x1560 + x1876) * x457;
  const amrex::Real x1921 = x306 * x1882;
  const amrex::Real x1922 = x996 * x1921;
  const amrex::Real x1923 = x1046 * x1521;
  const amrex::Real x1924 = x1045 * x1583;
  const amrex::Real x1925 = x1923 * x1044 + x1924 * x1044;
  const amrex::Real x1926 = x1922 + x1925 - x1053 * x1564;
  const amrex::Real x1927 =
    x1868 + x1926 - x1866 * x1108 - x1920 * x1034 - (x1869 + x1873) * x304;
  const amrex::Real x1928 = x1610 * x1144;
  const amrex::Real x1929 = sc[1] * x1842 * sc[19];
  const amrex::Real x1930 = x1846 * x1609 - x1928 * x1143 - x1929 * x1147;
  const amrex::Real x1931 = x1611 * x1150;
  const amrex::Real x1932 = x1155 * x1586;
  const amrex::Real x1933 = x1931 * x1149 + x1932 * x1149;
  const amrex::Real x1934 = x1933 - x1159 * x1521;
  const amrex::Real x1935 = x1934 - x1161 * x1585;
  const amrex::Real x1936 = x1123 * x1584;
  const amrex::Real x1937 = x1936 * x1055;
  const amrex::Real x1938 = x1130 * x1510;
  const amrex::Real x1939 = x991 * x1938;
  const amrex::Real x1940 = x1127 * x1520;
  const amrex::Real x1941 = x1939 + x996 * x1940;
  const amrex::Real x1942 = x1937 + x1941;
  const amrex::Real x1943 = x1935 + x1942;
  const amrex::Real x1944 = x1943 - x1861 * x1132 - x1927 * x1126 -
                            x241 * x1866 - (x1608 + x1930) * x236;
  const amrex::Real x1945 = x486 * x1612;
  const amrex::Real x1946 = -x1945 * x1120;
  const amrex::Real x1947 = x1612 * x1168;
  const amrex::Real x1948 = x1947 * x1166;
  const amrex::Real x1949 = x1057 * x1584;
  const amrex::Real x1950 = x577 * x1882;
  const amrex::Real x1951 = x996 * x1950;
  const amrex::Real x1952 = x1951 + x1949 * x1055;
  const amrex::Real x1953 = x1948 + x1952;
  const amrex::Real x1954 = x1946 + x1953;
  const amrex::Real x1955 = -x1094 * x1585;
  const amrex::Real x1956 = x576 * x1521;
  const amrex::Real x1957 = x1661 * x1089;
  const amrex::Real x1958 = x1956 * x1091 + x1957 * x1088;
  const amrex::Real x1959 = x1955 + x1958;
  const amrex::Real x1960 = x1954 + x1959 - x1866 * x1106 - x1927 * x1117 -
                            x583 * x1944 - (x1817 + x1838) * x575;
  const amrex::Real x1961 = x1226 * x1487;
  const amrex::Real x1962 = x1961 * x1225;
  const amrex::Real x1963 = -x793 * x1962;
  const amrex::Real x1964 = exp(x1239 + x1679) * x1677;
  const amrex::Real x1965 = x1964 * x1238;
  const amrex::Real x1966 = x615 * x1680;
  const amrex::Real x1967 = x1966 * x1677;
  const amrex::Real x1968 = x1683 * x1235;
  const amrex::Real x1969 = x626 * x1673;
  const amrex::Real x1970 =
    -1.8225e+24 * x1965 + 1350000000000.0 * x1967 + x1969 - x1968 * x1234;
  const amrex::Real x1971 = -x678 * x1970;
  const amrex::Real x1972 = x1662 * x1183;
  const amrex::Real x1973 = x680 * x1972;
  const amrex::Real x1974 = x1973 * x1182;
  const amrex::Real x1975 = x1971 + x1974;
  const amrex::Real x1976 = x1963 + x1975;
  const amrex::Real x1977 = x1205 * x1445;
  const amrex::Real x1978 = x781 * x1423;
  const amrex::Real x1979 = exp(x1198 + x1420) * x1422;
  const amrex::Real x1980 = x1979 * x1197;
  const amrex::Real x1981 = x1195 * x1426;
  const amrex::Real x1982 = exp(x1221 + x1410) * x1408 * sc[19];
  const amrex::Real x1983 = x1982 * x1220;
  const amrex::Real x1984 = x1213 * x1415;
  const amrex::Real x1985 = refC * sc[19];
  const amrex::Real x1986 = x1985 * x1412;
  const amrex::Real x1987 = exp(x1217 + x1441) * x1218 * x1440;
  const amrex::Real x1988 = x1837 + 1.4e+18 * x1978 - 1.96e+36 * x1980 -
                            1.82329e+93 * x1983 - 6.579225e+42 * x1987 +
                            x1440 * x1443 - x1977 * x1204 - x1981 * x1194 -
                            x1984 * x1212 + x738 * x1986;
  const amrex::Real x1989 = x789 * x1988;
  const amrex::Real x1990 = x793 * x1989;
  const amrex::Real x1991 = x586 * x1662;
  const amrex::Real x1992 = x1991 * x1244;
  const amrex::Real x1993 = x1710 * x1243;
  const amrex::Real x1994 = x1246 * x1488;
  const amrex::Real x1995 = x1992 * x1242 + x1993 * x1242 - x1994 * x1242;
  const amrex::Real x1996 = x1990 + x1995;
  const amrex::Real x1997 = x1976 + x1996;
  const amrex::Real x1998 = x1997 - x1960 * x1187;
  const amrex::Real x1999 = x1330 * x1711;
  const amrex::Real x2000 = x1999 * x1250;
  const amrex::Real x2001 = x824 * x1972;
  const amrex::Real x2002 = x1182 * x2001;
  const amrex::Real x2003 = x1314 * x1770;
  const amrex::Real x2004 = x1313 * x2003;
  const amrex::Real x2005 = -x871 * x2004;
  const amrex::Real x2006 = x1307 * x1762;
  const amrex::Real x2007 = x835 * sc[1] * x1760;
  const amrex::Real x2008 = x1843 * sc[11];
  const amrex::Real x2009 = exp(x1310) * x2008;
  const amrex::Real x2010 = x1309 * x2009;
  const amrex::Real x2011 = 2.2e+18 * x2007 - 4.84e+36 * x2010 - x1306 * x2006;
  const amrex::Real x2012 = x868 * x2011;
  const amrex::Real x2013 = x871 * x2012;
  const amrex::Real x2014 = x2005 + x2013;
  const amrex::Real x2015 = x2002 + x2014 - x1810 * x1299;
  const amrex::Real x2016 = x2000 + x2015;
  const amrex::Real x2017 = x2016 - x1960 * x1295 - x827 * x1998;
  const amrex::Real x2018 = x1711 * x1292;
  const amrex::Real x2019 = x1250 * x2018;
  const amrex::Real x2020 = x1338 * x1772;
  const amrex::Real x2021 = x873 * x1772;
  const amrex::Real x2022 = x1808 * x1352;
  const amrex::Real x2023 = x1802 * x1284;
  const amrex::Real x2024 = exp(x1356 + x1804) * x1802;
  const amrex::Real x2025 = x1354 * x2024;
  const amrex::Real x2026 = -1.024e+31 * x2025 - x1351 * x2022 + x1806 * x2023;
  const amrex::Real x2027 = -x1289 * x2026;
  const amrex::Real x2028 = x1810 * x1362;
  const amrex::Real x2029 = x1809 * x1360;
  const amrex::Real x2030 = x1359 * x2028 + x1359 * x2029;
  const amrex::Real x2031 = x2027 + x2030;
  const amrex::Real x2032 = x2019 + x2031 + x1333 * x2020 - x1368 * x2021;
  const amrex::Real x2033 = x1816 * (x2032 - x1347 * x2017 - x1998 * x1366);
  const amrex::Real x2034 = x898 * x1289;
  const amrex::Real x2035 = x1088 - x491 - x499 * x1637 - x556 * x1651;
  const amrex::Real x2036 = x1188 * x1089;
  const amrex::Real x2037 = x1242 - x597 - x643 - x660 - x601 * x1681;
  const amrex::Real x2038 = x1225 - x741 - x767 * x1424;
  const amrex::Real x2039 = x576 * x1089;
  const amrex::Real x2040 = x2035 * x2039;
  const amrex::Real x2041 = x1044 - x279 - x282;
  const amrex::Real x2042 = x1046 * x2041;
  const amrex::Real x2043 = x1050 - x1051 * x2041 + x273 * x2042;
  const amrex::Real x2044 = x1036 + x464 * x2042 - x469 * x2043;
  const amrex::Real x2045 = x1064 - x1090 * x2035 + x464 * x2040 + x575 * x578;
  const amrex::Real x2046 = x1109 + x1111;
  const amrex::Real x2047 = x2046 + x1112 * x2041 - x1113 * x2041;
  const amrex::Real x2048 = x478 * x2039;
  const amrex::Real x2049 = x1061 + x1107;
  const amrex::Real x2050 = x2049 + x1058 * x2044 - x1095 * x2035 -
                            x1117 * x2047 + x2035 * x2048 - x483 * x2045 +
                            x575 * x225;
  const amrex::Real x2051 = x1149 - x225 - x227;
  const amrex::Real x2052 = x1154 + x1156 * x2051 - x1157 * x2051;
  const amrex::Real x2053 = x1140 - x1151 * x2051 - x464 * x2052;
  const amrex::Real x2054 = x1136 + x1124 * x2044 - x1126 * x2047 +
                            x1162 * x2051 - x478 * x2052 - x483 * x2053;
  const amrex::Real x2055 = x1171 - x1172 * x2051 - x584 * x2052;
  const amrex::Real x2056 =
    x1177 - x1121 * x2050 + x1169 * x2054 - x583 * x2055 + x584 * x2040;
  const amrex::Real x2057 = x1185 * x2056 + x1228 * x2038 + x1245 * x2037 +
                            x1247 * x2037 + x2036 * x2035;
  const amrex::Real x2058 = x1359 - x1803 * x1270;
  const amrex::Real x2059 = x1313 - x810 - x855 - x865;
  const amrex::Real x2060 = x589 * x1089;
  const amrex::Real x2061 = x1187 * x2060;
  const amrex::Real x2062 =
    x1324 * x2056 - x1326 * x2037 + x1327 * x2037 + x2035 * x2061;
  const amrex::Real x2063 = x1296 * x1089;
  const amrex::Real x2064 = x1298 * x2056 + x2035 * x2063 + x597 * x822;
  const amrex::Real x2065 = x1295 * x2060;
  const amrex::Real x2066 = x810 * x822;
  const amrex::Real x2067 = -x1300 * x2064 + x1302 * x2056 + x1316 * x2059 +
                            x1331 * x2057 + x2035 * x2065 - x827 * x2062 -
                            x869 * x2066;
  const amrex::Real x2068 = x1300 * x1289;
  const amrex::Real x2069 = -x1361 * x2058 + x1363 * x2058 + x1365 * x2057 -
                            x1366 * x2062 - x643 * x2068;
  const amrex::Real x2070 = x1342 * x2037 + x1344 * x2057 - x898 * x2064;
  const amrex::Real x2071 =
    x1813 * (x1293 * x2057 + x1339 * x2067 - x1347 * x2070 - x1369 * x2069 +
             x1370 * x2037 + x1372 * x2058 - x643 * x2034);
  const amrex::Real x2072 = x692 * x1671;
  const amrex::Real x2073 = 1.0 * kf_qss[78];
  const amrex::Real x2074 = 1.0 * sc[11];
  const amrex::Real x2075 = x66 * (x1492 + x1493 + x1847 + x37 * x1489);
  const amrex::Real x2076 = x175 * x1500;
  const amrex::Real x2077 = 1.0 * sc[27];
  const amrex::Real x2078 = 1.0 * sc[26];
  const amrex::Real x2079 =
    x1860 + x101 * x2075 -
    x99 * (x1853 + x2077 * kf_qss[138] + x2078 * kf_qss[134] + x37 * x1850);
  const amrex::Real x2080 =
    x1865 + x177 * x2075 - x180 * x2079 - x2076 * kf_qss[164];
  const amrex::Real x2081 = 1.0 * sc[25];
  const amrex::Real x2082 = 1.0 * x336;
  const amrex::Real x2083 = sc[0] * x2082;
  const amrex::Real x2084 =
    x340 * (x1884 - x1885 * x2080 - x2083 * kf_qss[162]);
  const amrex::Real x2085 = x1898 - x366 * (x1890 + x37 * x1532) - x368 * x2084;
  const amrex::Real x2086 = 1.0 * x425;
  const amrex::Real x2087 = sc[0] * x2086;
  const amrex::Real x2088 = x2087 * kf_qss[163];
  const amrex::Real x2089 =
    x1906 - x400 * (x1541 + x1881 + x37 * x1539) + x429 * x2088 - x950 * x2085;
  const amrex::Real x2090 =
    x1919 - x1908 * x2080 -
    x457 * (x1876 + x2077 * kf_qss[137] + x37 * x1556 + x437 * sc[28]) -
    x922 * x2089;
  const amrex::Real x2091 = x1868 + x1922;
  const amrex::Real x2092 =
    x2091 - x1034 * x2090 - x1108 * x2080 - x1564 * x2043 + x1923 * x2041 +
    x1924 * x2041 -
    x304 * (x1873 + x2078 * kf_qss[135] + x2081 * kf_qss[131] + x37 * x1871);
  const amrex::Real x2093 = x1521 * x2039;
  const amrex::Real x2094 = 1.0 * sc[24];
  const amrex::Real x2095 =
    x1941 - x1126 * x2092 - x1132 * x2079 - x1521 * x2052 - x1585 * x2053 +
    x1931 * x2051 + x1932 * x2051 + x1936 * x2044 -
    x236 * (x1930 + x2081 * kf_qss[132] + x2094 * kf_qss[128] + x37 * x1609) -
    x241 * x2080;
  const amrex::Real x2096 =
    x1951 - x1106 * x2080 - x1117 * x2092 - x1585 * x2045 - x1945 * x2050 +
    x1947 * x2054 + x1949 * x2044 + x1957 * x2035 + x2035 * x2093 -
    x575 * (x1838 + x1648 * sc[15] + x2094 * kf_qss[129] + x572 * sc[22] +
            x587 * kf_qss[99]) -
    x583 * x2095;
  const amrex::Real x2097 = x1961 * x2038;
  const amrex::Real x2098 = sc[14] * refCinv;
  const amrex::Real x2099 =
    x789 * (x1988 + x1405 * sc[18] + x1444 * x2098 + x72 * kf_qss[79]);
  const amrex::Real x2100 =
    -x1187 * x2096 + x1973 * x2056 + x1992 * x2037 + x1993 * x2037 -
    x1994 * x2037 -
    x678 * (x1970 + x1482 * kf_qss[107] + x1702 * sc[13] + x2073 * sc[17] +
            x2074 * kf_qss[41] + x627 * x2072 + x646 * x2072) -
    x793 * x2097 + x793 * x2099;
  const amrex::Real x2101 = x1810 * x1289;
  const amrex::Real x2102 = x2003 * x2059;
  const amrex::Real x2103 = 1.0 * sc[18];
  const amrex::Real x2104 = (x1761 + x2011) * x868;
  const amrex::Real x2105 =
    -x1295 * x2096 + x1771 * x2066 - x1810 * x2064 + x1999 * x2057 +
    x2001 * x2056 -
    x822 * (x1716 + x1729 + x1735 * x2074 + x1743 * x2103 + x72 * x1719) -
    x827 * x2100 - x871 * x2102 + x871 * x2104;
  const amrex::Real x2106 =
    x1816 * (-x1289 * (x1780 + x1783 + x1786 + x1791 + x2026 +
                       2.0 * pow(sc[1], 1.0) * x1797 * sc[13] * kf_qss[27]) -
             x1347 * x2105 - x1366 * x2100 + x2018 * x2057 + x2020 * x2067 -
             x2021 * x2069 + x2028 * x2058 + x2029 * x2058 - x643 * x2101);
  const amrex::Real x2107 = x678 * x1366;
  const amrex::Real x2108 = x1313 - x856 - 1.0 * x862;
  const amrex::Real x2109 = x1088 - x562;
  const amrex::Real x2110 = x2039 * x2109;
  const amrex::Real x2111 = x1044 - x232;
  const amrex::Real x2112 = x1046 * x2111;
  const amrex::Real x2113 = x1050 - x1051 * x2111 + x273 * x2112;
  const amrex::Real x2114 = x1036 + x464 * x2112 - x469 * x2113;
  const amrex::Real x2115 = x2046 + x1112 * x2111 - x1113 * x2111;
  const amrex::Real x2116 = x1064 - x1090 * x2109 + x464 * x2110;
  const amrex::Real x2117 = x2049 + x1058 * x2114 - x1095 * x2109 -
                            x1117 * x2115 + x2048 * x2109 - x483 * x2116 +
                            x575 * x204;
  const amrex::Real x2118 = x1149 - x204;
  const amrex::Real x2119 = x1154 + x1156 * x2118 - x1157 * x2118;
  const amrex::Real x2120 = x1140 - x1151 * x2118 + x232 * x236 - x464 * x2119;
  const amrex::Real x2121 = x1136 + x1124 * x2114 - x1126 * x2115 +
                            x1162 * x2118 - x478 * x2119 - x483 * x2120;
  const amrex::Real x2122 = x1171 - x1172 * x2118 - x584 * x2119;
  const amrex::Real x2123 =
    x1177 - x1121 * x2117 + x1169 * x2121 - x583 * x2122 + x584 * x2110;
  const amrex::Real x2124 = x1242 - x620 - x631;
  const amrex::Real x2125 =
    x1324 * x2123 - x1326 * x2124 + x1327 * x2124 + x2061 * x2109 + x678 * x596;
  const amrex::Real x2126 = -x596 - x815;
  const amrex::Real x2127 = pow(x821, -2);
  const amrex::Real x2128 = x825 * x2127;
  const amrex::Real x2129 = x2126 * x2127;
  const amrex::Real x2130 = x823 * x2129;
  const amrex::Real x2131 =
    x1298 * x2123 + x2063 * x2109 - x2126 * x2128 + x796 * x2130;
  const amrex::Real x2132 = x1225 - x763;
  const amrex::Real x2133 = x1185 * x2123 + x1228 * x2132 + x1245 * x2124 +
                            x1247 * x2124 + x2036 * x2109;
  const amrex::Real x2134 = x870 * x869;
  const amrex::Real x2135 = -x1300 * x2131 + x1302 * x2123 + x1316 * x2108 +
                            x1331 * x2133 + x2065 * x2109 + x2134 * x2129 +
                            x591 * x2130 - x827 * x2125;
  const amrex::Real x2136 = x1359 - x642;
  const amrex::Real x2137 = x678 * x827;
  const amrex::Real x2138 = x889 * x2127;
  const amrex::Real x2139 =
    x1342 * x2124 + x1344 * x2133 - x2138 * x2126 - x642 * x2137 - x898 * x2131;
  const amrex::Real x2140 =
    -x1361 * x2136 + x1363 * x2136 + x1365 * x2133 - x1366 * x2125;
  const amrex::Real x2141 =
    x1813 * (x1293 * x2133 + x1339 * x2135 - x1347 * x2139 - x1369 * x2140 +
             x1370 * x2124 + x1372 * x2136 - x642 * x2107);
  const amrex::Real x2142 = x2003 * x2108;
  const amrex::Real x2143 = x870 * x1771;
  const amrex::Real x2144 = 1.0 * kf_qss[100];
  const amrex::Real x2145 = -x2076 * kf_qss[167];
  const amrex::Real x2146 = x66 * x1847;
  const amrex::Real x2147 = x101 * x2146;
  const amrex::Real x2148 = -x99 * x1853;
  const amrex::Real x2149 = x1859 + x2148;
  const amrex::Real x2150 = x1856 + x2149;
  const amrex::Real x2151 = x2147 + x2150;
  const amrex::Real x2152 = -x180 * x2151;
  const amrex::Real x2153 = x177 * x2146;
  const amrex::Real x2154 = x1865 + x2153;
  const amrex::Real x2155 = x2152 + x2154;
  const amrex::Real x2156 = x2145 + x2155;
  const amrex::Real x2157 = x182 * x2156;
  const amrex::Real x2158 = x2087 * kf_qss[166];
  const amrex::Real x2159 = x340 * (x1884 - x2083 * kf_qss[165] - x338 * x2157);
  const amrex::Real x2160 = -x366 * x1890;
  const amrex::Real x2161 = x1898 + x2160;
  const amrex::Real x2162 = x2161 - x368 * x2159;
  const amrex::Real x2163 = -x400 * x1881;
  const amrex::Real x2164 = x1906 + x2163;
  const amrex::Real x2165 = x2164 + x429 * x2158 - x950 * x2162;
  const amrex::Real x2166 = -x457 * x1876;
  const amrex::Real x2167 = x1914 + x2166;
  const amrex::Real x2168 = x1918 + x2167;
  const amrex::Real x2169 = x2168 - x461 * x2157 - x922 * x2165;
  const amrex::Real x2170 = -x304 * x1873;
  const amrex::Real x2171 = x2091 + x2170;
  const amrex::Real x2172 = x2171 - x1034 * x2169 - x1564 * x2113 +
                            x1923 * x2111 + x1924 * x2111 - x306 * x2157;
  const amrex::Real x2173 = -x1132 * x2151;
  const amrex::Real x2174 = -x236 * x1930;
  const amrex::Real x2175 = x2173 + x2174;
  const amrex::Real x2176 = x1941 + x2175;
  const amrex::Real x2177 = x2176 - x1126 * x2172 - x1521 * x2119 -
                            x1585 * x2120 + x1931 * x2118 + x1932 * x2118 +
                            x1936 * x2114 - x241 * x2156;
  const amrex::Real x2178 =
    x1951 - x1117 * x2172 - x1585 * x2116 - x1945 * x2117 + x1947 * x2121 +
    x1949 * x2114 + x1957 * x2109 + x2093 * x2109 -
    x575 * (x1838 + x2144 * sc[16]) - x577 * x2157 - x583 * x2177;
  const amrex::Real x2179 = x1748 * x2127;
  const amrex::Real x2180 = x1961 * x2132;
  const amrex::Real x2181 =
    x789 * (x1988 + x1448 * sc[17] + x1482 * kf_qss[108] + x72 * kf_qss[80]);
  const amrex::Real x2182 =
    -x1187 * x2178 + x1973 * x2123 + x1992 * x2124 + x1993 * x2124 -
    x1994 * x2124 - x678 * (x1970 + x2074 * kf_qss[42] + x72 * kf_qss[81]) -
    x793 * x2180 + x793 * x2181;
  const amrex::Real x2183 =
    x2013 - x1295 * x2178 - x1810 * x2131 + x1991 * x2130 + x1999 * x2133 +
    x2001 * x2123 + x2126 * x2179 - x2129 * x2143 - x827 * x2182 - x871 * x2142;
  const amrex::Real x2184 =
    x1816 * (-x1289 * (x2026 + x1254 * sc[15] + x1258 * sc[14]) -
             x1347 * x2183 - x1366 * x2182 + x2018 * x2133 + x2020 * x2135 -
             x2021 * x2140 + x2028 * x2136 + x2029 * x2136);
  const amrex::Real x2185 = sc[11] * refCinv;
  const amrex::Real x2186 = x257 * x2185;
  const amrex::Real x2187 = x1088 - x2186 - x490 * x2144;
  const amrex::Real x2188 = x1089 * x2187;
  const amrex::Real x2189 = pow(x174, -2);
  const amrex::Real x2190 = 1.0 * x2189;
  const amrex::Real x2191 = x133 * x2190;
  const amrex::Real x2192 = x67 * x176;
  const amrex::Real x2193 = x109 * x176;
  const amrex::Real x2194 = x966 + x178 * x2191 - x2191 * x2193;
  const amrex::Real x2195 = x995 - x183 * x2194 - x2191 * x2192;
  const amrex::Real x2196 = x577 * x2195;
  const amrex::Real x2197 = x1044 - x300;
  const amrex::Real x2198 = x1046 * x2197;
  const amrex::Real x2199 = x306 * x2195;
  const amrex::Real x2200 = x1108 * x2191;
  const amrex::Real x2201 =
    x1049 * x2199 - x1051 * x2197 - x271 * x2200 + x273 * x2198;
  const amrex::Real x2202 = x1017 * x2195;
  const amrex::Real x2203 = x1908 * x2191;
  const amrex::Real x2204 = x1032 - x264 * x2203 + x265 * x2202;
  const amrex::Real x2205 = pow(x424, -2);
  const amrex::Real x2206 = 1.0 * x2205;
  const amrex::Real x2207 = x426 * x2206;
  const amrex::Real x2208 = x429 * x2207;
  const amrex::Real x2209 = 1.0 * x997;
  const amrex::Real x2210 = x342 * x1531;
  const amrex::Real x2211 = x2210 * x2209;
  const amrex::Real x2212 = x337 * x2209;
  const amrex::Real x2213 = x314 * x2212;
  const amrex::Real x2214 = x337 * x312 * x182 * x2082 * x2189;
  const amrex::Real x2215 = -x133 * x2214 + x1896 * x2195 - x332 * x2213;
  const amrex::Real x2216 = x999 * x343;
  const amrex::Real x2217 = x954 + x2215 * x2216 - x332 * x2211;
  const amrex::Real x2218 = x1012 + x952;
  const amrex::Real x2219 = x2218 + x1006 * x2217 - x409 * x2208;
  const amrex::Real x2220 = x939 + x1016 * x2219 - x271 * x2203 + x272 * x2202;
  const amrex::Real x2221 = x1024 * x2220 + x1026 * x2199 - x1034 * x2204 -
                            x264 * x2200 + x464 * x2198 - x469 * x2201;
  const amrex::Real x2222 = x1104 + x475 * x2191 - x484 * x2194;
  const amrex::Real x2223 = x264 * x1106;
  const amrex::Real x2224 =
    x1026 * x2196 - x1090 * x2187 + x1092 * x2188 - x2223 * x2191;
  const amrex::Real x2225 = x214 * x2185;
  const amrex::Real x2226 = -x1108 * x2222 + x1110 * x2195 + x1112 * x2197 -
                            x1113 * x2197 + x304 * x2225;
  const amrex::Real x2227 = x1058 * x2221 + x1060 * x2195 - x1095 * x2187 +
                            x1096 * x2188 - x1106 * x2222 - x1117 * x2226 -
                            x483 * x2224;
  const amrex::Real x2228 = x243 * x1106;
  const amrex::Real x2229 = x1149 - x2225 - x223;
  const amrex::Real x2230 = x1127 * x2195;
  const amrex::Real x2231 = x1154 + x1156 * x2229 - x1157 * x2229;
  const amrex::Real x2232 = x241 * x2191;
  const amrex::Real x2233 =
    -x1151 * x2229 - x264 * x2232 + x265 * x2230 - x464 * x2231;
  const amrex::Real x2234 = x1135 + x1124 * x2221 - x1126 * x2226 +
                            x1128 * x2195 + x1162 * x2229 - x241 * x2222 -
                            x478 * x2231 - x483 * x2233;
  const amrex::Real x2235 =
    -x1172 * x2229 + x236 * x2186 - x243 * x2232 + x244 * x2230 - x584 * x2231;
  const amrex::Real x2236 = -x1121 * x2227 + x1169 * x2234 + x1176 * x2196 +
                            x1178 * x2188 - x2228 * x2191 - x583 * x2235;
  const amrex::Real x2237 = x1242 - 1.0 * x633 - x649 - x653;
  const amrex::Real x2238 = 1.0 * sc[12];
  const amrex::Real x2239 = x2238 * refCinv;
  const amrex::Real x2240 =
    x1225 - 1.0 * x698 - x714 - x695 * x2239 - x705 * x2074;
  const amrex::Real x2241 = x1185 * x2236 + x1188 * x2188 + x1228 * x2240 +
                            x1245 * x2237 + x1247 * x2237;
  const amrex::Real x2242 = -x1260 + x1359;
  const amrex::Real x2243 = x591 * x823;
  const amrex::Real x2244 = x2243 * x2127;
  const amrex::Real x2245 = 1.0 * x2244;
  const amrex::Real x2246 = x2134 * x2127;
  const amrex::Real x2247 = 1.0 * x2246;
  const amrex::Real x2248 = x1313 - 1.0 * x864 - x866;
  const amrex::Real x2249 = 1.0 * x2128;
  const amrex::Real x2250 = x796 * x823;
  const amrex::Real x2251 = x2250 * x2127;
  const amrex::Real x2252 = 1.0 * x2251;
  const amrex::Real x2253 =
    x1296 * x2188 + x1298 * x2236 + x2249 * kf_qss[33] - x2252 * kf_qss[33];
  const amrex::Real x2254 =
    x1322 * x2188 + x1324 * x2236 - x1326 * x2237 + x1327 * x2237;
  const amrex::Real x2255 = x1302 * x2236 + x1316 * x2248 + x1318 * x2188 +
                            x1331 * x2241 - x2245 * kf_qss[33] -
                            x2247 * kf_qss[33] - x2253 * x1300 - x827 * x2254;
  const amrex::Real x2256 = 1.0 * x2138;
  const amrex::Real x2257 =
    x1342 * x2237 + x1344 * x2241 + x2256 * kf_qss[33] - x898 * x2253;
  const amrex::Real x2258 = -x1361 * x2242 + x1363 * x2242 + x1365 * x2241 -
                            x2254 * x1366 - x653 * x2068;
  const amrex::Real x2259 =
    x1813 * (x1293 * x2241 + x1370 * x2237 + x1372 * x2242 + x2255 * x1339 -
             x2257 * x1347 - x2258 * x1369 - x653 * x2034);
  const amrex::Real x2260 = x1519 * x2190;
  const amrex::Real x2261 = x176 * x1504;
  const amrex::Real x2262 = x1864 + x2152 + x2153;
  const amrex::Real x2263 =
    x2262 - x133 * x2260 - x1586 * x2194 - x2076 * kf_qss[170] + x2261 * x2191;
  const amrex::Real x2264 = x2087 * kf_qss[169];
  const amrex::Real x2265 = x1553 * x2206;
  const amrex::Real x2266 = x409 * x2265;
  const amrex::Real x2267 = x1521 * x2212;
  const amrex::Real x2268 = x1529 * x2209;
  const amrex::Real x2269 = x1883 * x2195 - x2083 * kf_qss[168] -
                            x2263 * x1885 - x332 * x2267 - x332 * x2268;
  const amrex::Real x2270 = x1892 + x1894 + x2160;
  const amrex::Real x2271 = x2270 + x1895 * x2215 - x2269 * x1531;
  const amrex::Real x2272 = x1905 + x2163;
  const amrex::Real x2273 =
    x2272 + x1900 * x2217 + x429 * x2264 + x429 * x2266 - x950 * x2271;
  const amrex::Real x2274 =
    x2167 + x1915 * x2195 + x1917 * x2219 - x2263 * x1908 - x922 * x2273;
  const amrex::Real x2275 = x2170 - x1564 * x2201 + x1867 * x2220 +
                            x1921 * x2195 + x1923 * x2197 + x1924 * x2197 -
                            x2263 * x1108 - x2274 * x1034;
  const amrex::Real x2276 = x1939 + x2175;
  const amrex::Real x2277 = x2276 - x1521 * x2231 - x1585 * x2233 +
                            x1931 * x2229 + x1932 * x2229 + x1936 * x2221 +
                            x1940 * x2195 - x2275 * x1126 - x241 * x2263;
  const amrex::Real x2278 =
    -x1585 * x2224 - x1945 * x2227 + x1947 * x2234 + x1949 * x2221 +
    x1950 * x2195 + x1956 * x2188 + x1957 * x2187 - x2263 * x1106 -
    x2275 * x1117 - x575 * (x1645 + x1838 + x493 * sc[16]) - x583 * x2277;
  const amrex::Real x2279 = x1961 * x2240;
  const amrex::Real x2280 =
    x789 * (x1430 + x1988 + x1482 * kf_qss[109] + x72 * kf_qss[83]);
  const amrex::Real x2281 =
    x1973 * x2236 + x1992 * x2237 + x1993 * x2237 - x1994 * x2237 -
    x2278 * x1187 - x678 * (x1970 + x1664 * sc[12] + x2074 * kf_qss[43]) -
    x793 * x2279 + x793 * x2280;
  const amrex::Real x2282 = x868 * (x1769 + x2011 + sc[9] * x1758);
  const amrex::Real x2283 = x2127 * x2143;
  const amrex::Real x2284 = 1.0 * x2283;
  const amrex::Real x2285 = 1.0 * x2179;
  const amrex::Real x2286 = x823 * x1991;
  const amrex::Real x2287 = x2286 * x2127;
  const amrex::Real x2288 = 1.0 * x2287;
  const amrex::Real x2289 = x2248 * x2003;
  const amrex::Real x2290 = x1999 * x2241 + x2236 * x2001 - x2253 * x1810 -
                            x2278 * x1295 + x2284 * kf_qss[33] -
                            x2285 * kf_qss[33] - x2288 * kf_qss[33] -
                            x822 * (x1728 * x1672 + x547 * kf_qss[47]) -
                            x827 * x2281 + x871 * x2282 - x871 * x2289;
  const amrex::Real x2291 =
    x1816 * (-x1289 * (x2026 + x1774 * sc[11] + x547 * kf_qss[46]) +
             x2241 * x2018 + x2242 * x2028 + x2242 * x2029 + x2255 * x2020 -
             x2258 * x2021 - x2281 * x1366 - x2290 * x1347 - x653 * x2101);
  const amrex::Real x2292 = x160 * x2190;
  const amrex::Real x2293 = x966 + x178 * x2292 - x2292 * x2193;
  const amrex::Real x2294 = x995 - x183 * x2293 - x2292 * x2192;
  const amrex::Real x2295 = x2294 * x1017;
  const amrex::Real x2296 = x2292 * x1908;
  const amrex::Real x2297 = x1032 - x264 * x2296 + x265 * x2295;
  const amrex::Real x2298 = x1044 - x213;
  const amrex::Real x2299 = x2298 * x1046;
  const amrex::Real x2300 = x306 * x2294;
  const amrex::Real x2301 = x2292 * x1108;
  const amrex::Real x2302 =
    x1049 * x2300 - x2298 * x1051 - x271 * x2301 + x273 * x2299;
  const amrex::Real x2303 = -x160 * x2214 + x2294 * x1896 - x324 * x2213;
  const amrex::Real x2304 = x954 + x2216 * x2303 - x324 * x2211;
  const amrex::Real x2305 = x2218 + x1006 * x2304 - x418 * x2208;
  const amrex::Real x2306 = x939 + x1016 * x2305 - x271 * x2296 + x272 * x2295;
  const amrex::Real x2307 = x1024 * x2306 + x1026 * x2300 - x2297 * x1034 -
                            x264 * x2301 + x464 * x2299 - x469 * x2302;
  const amrex::Real x2308 = x1104 + x475 * x2292 - x484 * x2293;
  const amrex::Real x2309 =
    -x1108 * x2308 + x2294 * x1110 + x2298 * x1112 - x2298 * x1113;
  const amrex::Real x2310 = x1088 - x551 - x558 - x559;
  const amrex::Real x2311 = x1089 * x2310;
  const amrex::Real x2312 = x576 * x2311;
  const amrex::Real x2313 = x577 * x2294;
  const amrex::Real x2314 = x2292 * x1106;
  const amrex::Real x2315 =
    x1026 * x2313 - x1090 * x2310 - x264 * x2314 + x464 * x2312;
  const amrex::Real x2316 = x1058 * x2307 - x1095 * x2310 + x1096 * x2311 -
                            x1106 * x2308 - x1117 * x2309 + x2294 * x1060 -
                            x483 * x2315 + x575 * x220;
  const amrex::Real x2317 = x2294 * x1127;
  const amrex::Real x2318 = x1149 - x220;
  const amrex::Real x2319 = x1154 + x1156 * x2318 - x1157 * x2318;
  const amrex::Real x2320 = x241 * x2292;
  const amrex::Real x2321 =
    -x1172 * x2318 - x243 * x2320 + x244 * x2317 - x584 * x2319;
  const amrex::Real x2322 =
    -x1151 * x2318 + x213 * x236 - x264 * x2320 + x265 * x2317 - x464 * x2319;
  const amrex::Real x2323 = x1135 + x1124 * x2307 - x1126 * x2309 +
                            x1162 * x2318 + x2294 * x1128 - x241 * x2308 -
                            x478 * x2319 - x483 * x2322;
  const amrex::Real x2324 = -x1121 * x2316 + x1169 * x2323 + x1176 * x2313 -
                            x243 * x2314 - x583 * x2321 + x584 * x2312;
  const amrex::Real x2325 = x1225 - 1.0 * x700 - x715;
  const amrex::Real x2326 = x1242 - 1.0 * x630;
  const amrex::Real x2327 = x1185 * x2324 + x1188 * x2311 + x1228 * x2325 +
                            x1245 * x2326 + x1247 * x2326;
  const amrex::Real x2328 = x1296 * x2311 + x1298 * x2324;
  const amrex::Real x2329 =
    x1322 * x2311 + x1324 * x2324 - x1326 * x2326 + x1327 * x2326;
  const amrex::Real x2330 = x1317 - x1300 * x2328 + x1302 * x2324 +
                            x1318 * x2311 + x1331 * x2327 - x827 * x2329;
  const amrex::Real x2331 = -x1263 + x1359;
  const amrex::Real x2332 = x1342 * x2326 + x1344 * x2327 - x898 * x2328;
  const amrex::Real x2333 =
    -x1361 * x2331 + x1363 * x2331 + x1365 * x2327 - x1366 * x2329;
  const amrex::Real x2334 = (x1293 * x2327 + x1339 * x2330 - x1347 * x2332 -
                             x1369 * x2333 + x1370 * x2326 + x1372 * x2331) *
                            x1813;
  const amrex::Real x2335 = x1961 * x2325;
  const amrex::Real x2336 = 1.0 * sc[31];
  const amrex::Real x2337 = x2262 - x160 * x2260 + x2261 * x2292 -
                            x2293 * x1586 -
                            (x1500 * kf_qss[176] + x2336 * kf_qss[193]) * x175;
  const amrex::Real x2338 = (x1500 * kf_qss[175] + x2336 * kf_qss[191]) * x425;
  const amrex::Real x2339 = x418 * x2265;
  const amrex::Real x2340 = -x1885 * x2337 + x2294 * x1883 - x324 * x2267 -
                            x324 * x2268 -
                            (x1500 * kf_qss[174] + x2336 * kf_qss[189]) * x336;
  const amrex::Real x2341 = x2270 - x1531 * x2340 + x1895 * x2303;
  const amrex::Real x2342 =
    x2272 + x1900 * x2304 + x429 * x2338 + x429 * x2339 - x950 * x2341;
  const amrex::Real x2343 =
    x2167 - x1908 * x2337 + x1917 * x2305 + x2294 * x1915 - x922 * x2342;
  const amrex::Real x2344 = -x1034 * x2343 - x1108 * x2337 - x1564 * x2302 +
                            x1867 * x2306 + x2294 * x1921 + x2298 * x1923 +
                            x2298 * x1924 - x304 * (x1873 + x1572 * sc[22]);
  const amrex::Real x2345 = x1939 + x2173 - x1126 * x2344 - x1521 * x2319 -
                            x1585 * x2322 + x1931 * x2318 + x1932 * x2318 +
                            x1936 * x2307 + x2294 * x1940 -
                            x236 * (x1930 + x1604 * sc[19]) - x241 * x2337;
  const amrex::Real x2346 = -x1106 * x2337 - x1117 * x2344 - x1585 * x2315 -
                            x1945 * x2316 + x1947 * x2323 + x1949 * x2307 +
                            x1956 * x2311 + x1957 * x2310 + x2294 * x1950 -
                            x575 * (x1618 + x1624 + x1838) - x583 * x2345;
  const amrex::Real x2347 =
    x789 * (x1387 + x1437 + x1988 + x2103 * kf_qss[104]);
  const amrex::Real x2348 = -x1187 * x2346 + x1973 * x2324 + x1992 * x2326 +
                            x1993 * x2326 - x1994 * x2326 -
                            x678 * (x1686 + x1970 + x2074 * kf_qss[45]) -
                            x793 * x2335 + x793 * x2347;
  const amrex::Real x2349 = x868 * (x1752 + x1766 + x2011);
  const amrex::Real x2350 = x2005 - x1295 * x2346 - x1810 * x2328 +
                            x1999 * x2327 + x2324 * x2001 - x827 * x2348 +
                            x871 * x2349;
  const amrex::Real x2351 =
    x1816 * (x2027 - x1347 * x2350 - x1366 * x2348 + x2327 * x2018 +
             x2330 * x2020 + x2331 * x2028 + x2331 * x2029 - x2333 * x2021);
  const amrex::Real x2352 = 0.56 * x1066 + 4.0 * x1068;
  const amrex::Real x2353 = 4.0 * x905;
  const amrex::Real x2354 = 0.56 * x905;
  const amrex::Real x2355 = x1082 * x2353 + x1084 * x2354;
  const amrex::Real x2356 = x498 * x516;
  const amrex::Real x2357 = 44462450000000.0 * x1075 + 7.9202e+58 * x1079 -
                            3.98e+29 * x2356 - 9430000.0 * x541 +
                            x1071 * x2352 + x1087 * x2355;
  const amrex::Real x2358 = x2357 - 1.0 * x496;
  const amrex::Real x2359 = x146 * x2190;
  const amrex::Real x2360 = 0.56 * x906;
  const amrex::Real x2361 = 4.0 * x906;
  const amrex::Real x2362 = x955 * x2360 + x956 * x2361;
  const amrex::Real x2363 = 1.252e+27 * refC;
  const amrex::Real x2364 = 7.83752e+53 * x914;
  const amrex::Real x2365 = -x51 * x2363 + x959 * x2362 + x961 * x2364;
  const amrex::Real x2366 = x963 * x2365;
  const amrex::Real x2367 = x964 * x2366;
  const amrex::Real x2368 = x2367 + x178 * x2359 - x2359 * x2193;
  const amrex::Real x2369 = x973 * x2360 + x974 * x2361;
  const amrex::Real x2370 = -x92 * x2363 + x977 * x2369 + x979 * x2364;
  const amrex::Real x2371 = x6 * x101;
  const amrex::Real x2372 = x2371 * x2366 - x982 * x2370 + x984 * x2370;
  const amrex::Real x2373 = x101 * x108;
  const amrex::Real x2374 = x2373 * x2366 + x989 * x2370;
  const amrex::Real x2375 = -x180 * x2372 + x967 * x2366 + x994 * x2374;
  const amrex::Real x2376 = x2375 - x183 * x2368 - x2359 * x2192;
  const amrex::Real x2377 = x577 * x2376;
  const amrex::Real x2378 = x1106 * x2359;
  const amrex::Real x2379 = x2039 * x2358;
  const amrex::Real x2380 = x1101 * x2370 + x1103 * x2374;
  const amrex::Real x2381 = x2380 + x475 * x2359 - x484 * x2368;
  const amrex::Real x2382 = x1037 * x2360 + x1038 * x2361;
  const amrex::Real x2383 = x296 * x292;
  const amrex::Real x2384 = x1041 * x2382 + x1043 * x2364 - x2363 * x2383;
  const amrex::Real x2385 = x1112 * x2384 - x1113 * x2384;
  const amrex::Real x2386 = x2385 - x1108 * x2381 + x1110 * x2376;
  const amrex::Real x2387 = x1046 * x2384;
  const amrex::Real x2388 = x464 * x2387;
  const amrex::Real x2389 = x306 * x2376;
  const amrex::Real x2390 = x1108 * x2359;
  const amrex::Real x2391 = -x1051 * x2384 + x273 * x2387;
  const amrex::Real x2392 = x2391 + x1049 * x2389 - x271 * x2390;
  const amrex::Real x2393 = x1017 * x2376;
  const amrex::Real x2394 = x1908 * x2359;
  const amrex::Real x2395 = x928 * x2360 + x929 * x2361;
  const amrex::Real x2396 = x442 * x2363;
  const amrex::Real x2397 = -x452 * x2396 + x932 * x2395 + x934 * x2364;
  const amrex::Real x2398 = x927 * x2397;
  const amrex::Real x2399 = -x1030 * x2397 + x1031 * x2398;
  const amrex::Real x2400 = x2399 - x264 * x2394 + x265 * x2393;
  const amrex::Real x2401 = x941 * x2360 + x942 * x2361;
  const amrex::Real x2402 = x361 * x359;
  const amrex::Real x2403 = -x2402 * x2363 + x945 * x2401 + x947 * x2364;
  const amrex::Real x2404 = x940 * x2403;
  const amrex::Real x2405 = x953 * x2404;
  const amrex::Real x2406 = -x146 * x2214 + x1896 * x2376 - x318 * x2213;
  const amrex::Real x2407 = x2405 + x2406 * x2216 - x318 * x2211;
  const amrex::Real x2408 = x908 * x2360 + x910 * x2361;
  const amrex::Real x2409 = x384 * x387;
  const amrex::Real x2410 = -x2409 * x2363 + x913 * x2408 + x919 * x2364;
  const amrex::Real x2411 = x374 * x1010;
  const amrex::Real x2412 = x2410 * x1008;
  const amrex::Real x2413 = x2410 * x2411 + x427 * x2412 + x951 * x2404;
  const amrex::Real x2414 = x2413 + x2407 * x1006 - x411 * x2208;
  const amrex::Real x2415 = x924 * x2410 + x926 * x2398 + x937 * x2398;
  const amrex::Real x2416 = x2415 + x2414 * x1016 - x271 * x2394 + x272 * x2393;
  const amrex::Real x2417 = x2388 + x1026 * x2389 - x2400 * x1034 +
                            x2416 * x1024 - x264 * x2390 - x469 * x2392;
  const amrex::Real x2418 =
    x1026 * x2377 - x1090 * x2358 - x264 * x2378 + x464 * x2379;
  const amrex::Real x2419 = x1060 * x2376 - x1095 * x2358 - x1106 * x2381 -
                            x1117 * x2386 + x2358 * x2048 + x2417 * x1058 -
                            x483 * x2418;
  const amrex::Real x2420 = x1127 * x2376;
  const amrex::Real x2421 = x241 * x2359;
  const amrex::Real x2422 = x1141 * x2360 + x1142 * x2361;
  const amrex::Real x2423 = x197 * x193;
  const amrex::Real x2424 = x1148 * x1146;
  const amrex::Real x2425 = 7.83752e+53 * x2424 + x2422 * x1145 - x2423 * x2363;
  const amrex::Real x2426 =
    -x1132 * x2372 + x1153 * x2374 + x2425 * x1156 - x2425 * x1157;
  const amrex::Real x2427 = -x2425 * x1172 - x584 * x2426;
  const amrex::Real x2428 = x2427 - x243 * x2421 + x244 * x2420;
  const amrex::Real x2429 = -x2425 * x1151 - x464 * x2426;
  const amrex::Real x2430 = x2429 - x264 * x2421 + x265 * x2420;
  const amrex::Real x2431 =
    x1131 * x2374 + x1133 * x2370 + x2425 * x1162 - x478 * x2426;
  const amrex::Real x2432 = x2431 - x1126 * x2386 + x1128 * x2376 -
                            x241 * x2381 + x2417 * x1124 - x483 * x2430;
  const amrex::Real x2433 = x1176 * x2377 - x2419 * x1121 - x243 * x2378 +
                            x2432 * x1169 - x583 * x2428 + x584 * x2379;
  const amrex::Real x2434 = 2.0 * kf_qss[16];
  const amrex::Real x2435 = x1232 * x2354 + x1233 * x2353;
  const amrex::Real x2436 = x616 * x600;
  const amrex::Real x2437 =
    3.645e+24 * x1241 - 2700000000000.0 * x2436 + x2435 * x1236;
  const amrex::Real x2438 = -x2434 + x2437 - 1.0 * x636;
  const amrex::Real x2439 = 4.0 * x1192 + 0.56 * x1193;
  const amrex::Real x2440 = x766 * x782;
  const amrex::Real x2441 = 4.0 * x1202 + 0.56 * x1203;
  const amrex::Real x2442 = x744 * x759;
  const amrex::Real x2443 = 4.0 * x1209 + 0.56 * x1211;
  const amrex::Real x2444 = 3.92e+36 * x1200 - 8.54e+46 * x1216 +
                            1.315845e+43 * x1219 + 3.64658e+93 * x1224 -
                            2.8e+18 * x2440 - 5.13e+21 * x2442 + x2439 * x1196 +
                            x2441 * x1206 + x2443 * x1214;
  const amrex::Real x2445 = x2444 - 1.0 * x718;
  const amrex::Real x2446 = x2036 * x2358 + x2433 * x1185 + x2438 * x1245 +
                            x2438 * x1247 + x2445 * x1228;
  const amrex::Real x2447 = x1349 * x2354 + x1350 * x2353;
  const amrex::Real x2448 = x1269 * x1285;
  const amrex::Real x2449 = 2.048e+31 * x1358 - 6.4e+15 * x2448 + x2447 * x1353;
  const amrex::Real x2450 = -x1256 + x2449;
  const amrex::Real x2451 =
    x2358 * x2061 + x2433 * x1324 - x2438 * x1326 + x2438 * x1327;
  const amrex::Real x2452 =
    x2446 * x1365 - x2450 * x1361 + x2450 * x1363 - x2451 * x1366;
  const amrex::Real x2453 = 1.0 * kf_qss[34];
  const amrex::Real x2454 =
    x2249 * kf_qss[34] - x2251 * x2453 + x2358 * x2063 + x2433 * x1298;
  const amrex::Real x2455 = x1304 * x2354 + x1305 * x2353;
  const amrex::Real x2456 = 9.68e+36 * x1312 - 4.4e+18 * x852 + x2455 * x1308;
  const amrex::Real x2457 = x2456 * x1316;
  const amrex::Real x2458 = x2457 - x2247 * kf_qss[34] + x2358 * x2065 +
                            x2433 * x1302 + x2446 * x1331 - x2453 * x2244 -
                            x2454 * x1300 - x827 * x2451;
  const amrex::Real x2459 =
    x2256 * kf_qss[34] + x2438 * x1342 + x2446 * x1344 - x898 * x2454;
  const amrex::Real x2460 = (x2438 * x1370 + x2446 * x1293 + x2450 * x1372 -
                             x2452 * x1369 + x2458 * x1339 - x2459 * x1347) *
                            x1813;
  const amrex::Real x2461 =
    -3.645e+24 * x1965 + 2700000000000.0 * x1967 - x2435 * x1968;
  const amrex::Real x2462 = 3.98e+29 * x1633;
  const amrex::Real x2463 = x1833 * x1454;
  const amrex::Real x2464 = 3.1e+44 * x2463;
  const amrex::Real x2465 = -4.805e+88 * x1836 + x2464 * x1470 -
                            (x1829 * x2354 + x1831 * x2353) * x1832;
  const amrex::Real x2466 = -44462450000000. * x1821 - 7.9202e+58 * x1823 +
                            9430000.0 * x1826 + x2465 - x1818 * x2352 -
                            x1824 * x2355 + x2462 * x1827;
  const amrex::Real x2467 = x1854 * x2365;
  const amrex::Real x2468 = 7.83752e+53 * x1844;
  const amrex::Real x2469 = x35 * sc[1];
  const amrex::Real x2470 = 1.252e+27 * x2469;
  const amrex::Real x2471 =
    x66 * (-x1840 * x2362 - x2468 * x1841 + x2470 * x1489);
  const amrex::Real x2472 =
    -x101 * x2467 + x101 * x2471 + x1857 * x2370 - x1858 * x2370 -
    x99 * (-x1849 * x2369 - x2468 * x1851 + x2470 * x1850);
  const amrex::Real x2473 =
    -x177 * x2467 + x177 * x2471 - x180 * x2472 + x1863 * x2374;
  const amrex::Real x2474 =
    x2473 - x146 * x2260 - x1586 * x2368 + x2261 * x2359;
  const amrex::Real x2475 = x411 * x2265;
  const amrex::Real x2476 =
    x1883 * x2376 - x2474 * x1885 - x318 * x2267 - x318 * x2268;
  const amrex::Real x2477 =
    x2403 * x1891 + x2404 * x1893 -
    x366 * (-x2401 * x1887 - x2468 * x1888 + x2470 * x1532);
  const amrex::Real x2478 = x2477 + x2406 * x1895 - x2476 * x1531;
  const amrex::Real x2479 = x1904 * x1010;
  const amrex::Real x2480 =
    x2410 * x1902 + x2410 * x2479 - x2412 * x1554 -
    x400 * (-x2408 * x1878 - x2468 * x1879 + x2470 * x1539);
  const amrex::Real x2481 = x2480 + x2407 * x1900 + x429 * x2475 - x950 * x2478;
  const amrex::Real x2482 =
    x1909 * x2397 + x1910 * x2398 + x1912 * x2398 -
    x457 * (-x1874 * x2395 - x2468 * x1875 + x2470 * x1556);
  const amrex::Real x2483 =
    x2482 + x1915 * x2376 + x2414 * x1917 - x2474 * x1908 - x922 * x2481;
  const amrex::Real x2484 = -x1870 * x2382 - x2468 * x1872 + x2470 * x1871;
  const amrex::Real x2485 = x1923 * x2384 + x1924 * x2384;
  const amrex::Real x2486 = x2485 - x1564 * x2392 + x1921 * x2376 +
                            x2416 * x1867 - x2474 * x1108 - x2483 * x1034 -
                            x304 * (x2484 + x282 * x1576);
  const amrex::Real x2487 = x1929 * x1146;
  const amrex::Real x2488 =
    -7.83752e+53 * x2487 - x2422 * x1928 + x2470 * x1609;
  const amrex::Real x2489 = x1938 * x2374 + x2425 * x1931 + x2425 * x1932 -
                            x2426 * x1521 - x2472 * x1132;
  const amrex::Real x2490 = x2489 + x1940 * x2376 -
                            x236 * (x2488 + x227 * x1592) - x241 * x2474 +
                            x2417 * x1936 - x2430 * x1585 - x2486 * x1126;
  const amrex::Real x2491 = x1950 * x2376 + x1957 * x2358 + x2358 * x2093 +
                            x2417 * x1949 - x2418 * x1585 - x2419 * x1945 +
                            x2432 * x1947 - x2474 * x1106 - x2486 * x1117 -
                            x583 * x2490 - (x1658 + x2466) * x575;
  const amrex::Real x2492 = x2445 * x1961;
  const amrex::Real x2493 = x1985 * x1411;
  const amrex::Real x2494 = x738 * x2493;
  const amrex::Real x2495 = 5.13e+21 * x1440;
  const amrex::Real x2496 = 2.8e+18 * x1978 - 3.92e+36 * x1980 -
                            3.64658e+93 * x1983 - 1.315845e+43 * x1987 + x2465 +
                            8.54e+46 * x2494 - x2439 * x1981 - x2441 * x1977 -
                            x2443 * x1984 + x2495 * x1442;
  const amrex::Real x2497 = (x1419 + x2496) * x789;
  const amrex::Real x2498 = x2433 * x1973 + x2438 * x1992 + x2438 * x1993 -
                            x2438 * x1994 - x2491 * x1187 -
                            x678 * (x1689 + x2461 + x2434 * x1673) -
                            x793 * x2492 + x793 * x2497;
  const amrex::Real x2499 = x1805 * x2023;
  const amrex::Real x2500 =
    -2.048e+31 * x2025 + 6.4e+15 * x2499 - x2447 * x2022;
  const amrex::Real x2501 = 4.4e+18 * x2007 - 9.68e+36 * x2010 - x2455 * x2006;
  const amrex::Real x2502 = x868 * (x2501 + x865 * x1753 * sc[11]);
  const amrex::Real x2503 = x2456 * x2003;
  const amrex::Real x2504 = -x871 * x2503;
  const amrex::Real x2505 = x822 * sc[12];
  const amrex::Real x2506 = x2504 - x1723 * x2505 + x2283 * x2453 -
                            x2285 * kf_qss[34] - x2287 * x2453 + x2433 * x2001 +
                            x2446 * x1999 - x2454 * x1810 - x2491 * x1295 -
                            x827 * x2498 + x871 * x2502;
  const amrex::Real x2507 =
    x1816 * (-x1289 * (x2500 + x1800 * sc[14]) - x1347 * x2506 + x2446 * x2018 +
             x2450 * x2028 + x2450 * x2029 - x2452 * x2021 + x2458 * x2020 -
             x2498 * x1366);
  const amrex::Real x2508 = 1.68 * x905;
  const amrex::Real x2509 = 12.0 * x905;
  const amrex::Real x2510 = x1232 * x2508 + x1233 * x2509;
  const amrex::Real x2511 =
    1.0935e+25 * x1241 - 8100000000000.0 * x2436 - x645 - x657 + x1236 * x2510;
  const amrex::Real x2512 = 12.0 * x1068 + x1065 * x2508;
  const amrex::Real x2513 = 133387350000000. * x1072;
  const amrex::Real x2514 = x1082 * x2509 + x1084 * x2508;
  const amrex::Real x2515 = 2.37606e+59 * x1079 - 1.194e+30 * x2356 - x494 -
                            28290000.0 * x541 + x1071 * x2512 + x1074 * x2513 +
                            x1087 * x2514;
  const amrex::Real x2516 = x2515 * x2039;
  const amrex::Real x2517 = x120 * x2190;
  const amrex::Real x2518 = 1.68 * x906;
  const amrex::Real x2519 = 12.0 * x906;
  const amrex::Real x2520 = x1037 * x2518 + x1038 * x2519;
  const amrex::Real x2521 = 3.756e+27 * refC;
  const amrex::Real x2522 = 2.351256e+54 * x914;
  const amrex::Real x2523 = x1041 * x2520 + x1043 * x2522 - x2521 * x2383;
  const amrex::Real x2524 = x1046 * x2523;
  const amrex::Real x2525 = x955 * x2518 + x956 * x2519;
  const amrex::Real x2526 = -x51 * x2521 + x959 * x2525 + x961 * x2522;
  const amrex::Real x2527 = x178 * x2517 - x2517 * x2193 + x965 * x2526;
  const amrex::Real x2528 = x973 * x2518 + x974 * x2519;
  const amrex::Real x2529 = -x92 * x2521 + x977 * x2528 + x979 * x2522;
  const amrex::Real x2530 = x971 * x2526 - x982 * x2529 + x984 * x2529;
  const amrex::Real x2531 = x987 * x2526 + x989 * x2529;
  const amrex::Real x2532 =
    -x180 * x2530 - x183 * x2527 - x2517 * x2192 + x968 * x2526 + x994 * x2531;
  const amrex::Real x2533 = x306 * x2532;
  const amrex::Real x2534 = x1108 * x2517;
  const amrex::Real x2535 =
    x1049 * x2533 - x1051 * x2523 - x271 * x2534 + x273 * x2524;
  const amrex::Real x2536 = x928 * x2518 + x929 * x2519;
  const amrex::Real x2537 = -x453 * x2521 + x932 * x2536 + x934 * x2522;
  const amrex::Real x2538 = x1017 * x2532;
  const amrex::Real x2539 = x1908 * x2517;
  const amrex::Real x2540 = x927 * x2537;
  const amrex::Real x2541 =
    -x1030 * x2537 + x1031 * x2540 - x264 * x2539 + x265 * x2538;
  const amrex::Real x2542 = x908 * x2518 + x910 * x2519;
  const amrex::Real x2543 = -x2409 * x2521 + x913 * x2542 + x919 * x2522;
  const amrex::Real x2544 = x941 * x2518 + x942 * x2519;
  const amrex::Real x2545 = -x2402 * x2521 + x945 * x2544 + x947 * x2522;
  const amrex::Real x2546 = x940 * x951;
  const amrex::Real x2547 = x940 * x953;
  const amrex::Real x2548 = -x120 * x2214 + x1896 * x2532 - x326 * x2213;
  const amrex::Real x2549 = x2545 * x2547 + x2548 * x2216 - x326 * x2211;
  const amrex::Real x2550 = x1006 * x2549 + x1009 * x2543 + x2411 * x2543 +
                            x2545 * x2546 - x407 * x2208;
  const amrex::Real x2551 = x1016 * x2550 - x271 * x2539 + x272 * x2538 +
                            x924 * x2543 + x926 * x2540 + x937 * x2540;
  const amrex::Real x2552 = x1024 * x2551 + x1026 * x2533 - x1034 * x2541 -
                            x264 * x2534 + x464 * x2524 - x469 * x2535;
  const amrex::Real x2553 =
    x1101 * x2529 + x1103 * x2531 + x475 * x2517 - x484 * x2527;
  const amrex::Real x2554 =
    -x1108 * x2553 + x1110 * x2532 + x1112 * x2523 - x1113 * x2523;
  const amrex::Real x2555 = x577 * x2532;
  const amrex::Real x2556 =
    x1026 * x2555 - x1090 * x2515 - x2517 * x2223 + x464 * x2516;
  const amrex::Real x2557 = x1058 * x2552 + x1060 * x2532 - x1095 * x2515 -
                            x1106 * x2553 - x1117 * x2554 + x2515 * x2048 -
                            x483 * x2556;
  const amrex::Real x2558 = x1141 * x2518 + x1142 * x2519;
  const amrex::Real x2559 =
    2.351256e+54 * x2424 + x1145 * x2558 - x2423 * x2521;
  const amrex::Real x2560 =
    -x1132 * x2530 + x1153 * x2531 + x1156 * x2559 - x1157 * x2559;
  const amrex::Real x2561 = x1127 * x2532;
  const amrex::Real x2562 = x241 * x2517;
  const amrex::Real x2563 =
    -x1151 * x2559 - x264 * x2562 + x265 * x2561 - x464 * x2560;
  const amrex::Real x2564 = x1124 * x2552 - x1126 * x2554 + x1128 * x2532 +
                            x1131 * x2531 + x1133 * x2529 + x1162 * x2559 -
                            x241 * x2553 - x478 * x2560 - x483 * x2563;
  const amrex::Real x2565 =
    -x1172 * x2559 - x243 * x2562 + x244 * x2561 - x584 * x2560;
  const amrex::Real x2566 = -x1121 * x2557 + x1169 * x2564 + x1176 * x2555 -
                            x2517 * x2228 - x583 * x2565 + x584 * x2516;
  const amrex::Real x2567 = 12.0 * x1202 + 1.68 * x1203;
  const amrex::Real x2568 = 12.0 * x1209 + 1.68 * x1211;
  const amrex::Real x2569 = 12.0 * x1192 + 1.68 * x1193;
  const amrex::Real x2570 =
    1.176e+37 * x1200 - 2.562e+47 * x1216 + 3.947535e+43 * x1219 +
    1.093974e+94 * x1224 - 8.4e+18 * x2440 - 1.539e+22 * x2442 - x708 +
    x1196 * x2569 + x1206 * x2567 + x1214 * x2568 - x786 * x2239;
  const amrex::Real x2571 = x1185 * x2566 + x1228 * x2570 + x1245 * x2511 +
                            x1247 * x2511 + x2515 * x2036;
  const amrex::Real x2572 = x1349 * x2508 + x1350 * x2509;
  const amrex::Real x2573 = x800 * x880;
  const amrex::Real x2574 =
    -x1262 + 6.144e+31 * x1358 - 1.92e+16 * x2448 - x2573 + x1353 * x2572;
  const amrex::Real x2575 =
    x1324 * x2566 - x1326 * x2511 + x1327 * x2511 + x2515 * x2061;
  const amrex::Real x2576 = -x1361 * x2574 + x1363 * x2574 + x1365 * x2571 -
                            x1366 * x2575 + x800 * x1289;
  const amrex::Real x2577 = -x800 - x805 - x811;
  const amrex::Real x2578 = x2577 * x2127;
  const amrex::Real x2579 = x811 * x868;
  const amrex::Real x2580 = x1304 * x2508 + x1305 * x2509;
  const amrex::Real x2581 = 2.904e+37 * x1312 - 1.32e+19 * x852 + x1308 * x2580;
  const amrex::Real x2582 =
    x1298 * x2566 + x2250 * x2578 + x2515 * x2063 - x2577 * x2128;
  const amrex::Real x2583 = -x1300 * x2582 + x1302 * x2566 + x1316 * x2581 +
                            x1331 * x2571 + x2243 * x2578 + x2515 * x2065 +
                            x2578 * x2134 - x827 * x2575 - x871 * x2579;
  const amrex::Real x2584 =
    x1342 * x2511 + x1344 * x2571 - x2577 * x2138 + x822 * x2573 - x898 * x2582;
  const amrex::Real x2585 = (x1293 * x2571 + x1339 * x2583 - x1347 * x2584 -
                             x1369 * x2576 + x1370 * x2511 + x1372 * x2574) *
                            x1813;
  const amrex::Real x2586 = 8100000000000.0 * x1677;
  const amrex::Real x2587 = x1961 * x2570;
  const amrex::Real x2588 = x1440 * x1442;
  const amrex::Real x2589 = 9.3e+44 * x2463;
  const amrex::Real x2590 = -1.4415e+89 * x1836 + x1470 * x2589 -
                            (x1829 * x2508 + x1831 * x2509) * x1832;
  const amrex::Real x2591 =
    x789 * (x1391 + 8.4e+18 * x1978 - 1.176e+37 * x1980 - 1.093974e+94 * x1983 -
            3.947535e+43 * x1987 + 2.562e+47 * x2494 + 1.539e+22 * x2588 +
            x2590 - x1977 * x2567 - x1981 * x2569 - x1984 * x2568);
  const amrex::Real x2592 = 3.756e+27 * x2469;
  const amrex::Real x2593 = 2.351256e+54 * x1844;
  const amrex::Real x2594 =
    x66 * (x1489 * x2592 - x1840 * x2525 - x1841 * x2593);
  const amrex::Real x2595 = x1854 * x2526;
  const amrex::Real x2596 =
    x101 * x2594 - x101 * x2595 + x1857 * x2529 - x1858 * x2529 -
    x99 * (-2.351256e+54 * x1852 - x1849 * x2528 + x1850 * x2592);
  const amrex::Real x2597 = -x120 * x2260 - x1586 * x2527 + x177 * x2594 -
                            x177 * x2595 - x180 * x2596 + x1863 * x2531 +
                            x2261 * x2517;
  const amrex::Real x2598 = x407 * x2265;
  const amrex::Real x2599 =
    x1883 * x2532 - x1885 * x2597 - x326 * x2267 - x326 * x2268;
  const amrex::Real x2600 = x940 * x1893;
  const amrex::Real x2601 =
    -x1531 * x2599 + x1891 * x2545 + x1895 * x2548 + x2545 * x2600 -
    x366 * (-2.351256e+54 * x1889 + x1532 * x2592 - x1887 * x2544);
  const amrex::Real x2602 =
    x1900 * x2549 + x1902 * x2543 - x1903 * x2543 + x2479 * x2543 -
    x400 * (x1539 * x2592 - x1878 * x2542 - x1879 * x2593) + x429 * x2598 -
    x950 * x2601;
  const amrex::Real x2603 =
    -x1908 * x2597 + x1909 * x2537 + x1911 * x2537 + x1913 * x2537 +
    x1915 * x2532 + x1917 * x2550 -
    x457 * (x1556 * x2592 - x1874 * x2536 - x1875 * x2593) - x922 * x2602;
  const amrex::Real x2604 =
    -x1034 * x2603 - x1108 * x2597 - x1564 * x2535 + x1867 * x2551 +
    x1921 * x2532 + x1923 * x2523 + x1924 * x2523 -
    x304 * (x1567 * sc[22] - x1870 * x2520 + x1871 * x2592 - x1872 * x2593);
  const amrex::Real x2605 = 28290000.0 * x1647;
  const amrex::Real x2606 = 1.194e+30 * x1633;
  const amrex::Real x2607 = -x1126 * x2604 - x1132 * x2596 - x1521 * x2560 -
                            x1585 * x2563 + x1931 * x2559 + x1932 * x2559 +
                            x1936 * x2552 + x1938 * x2531 + x1940 * x2532 -
                            x236 * (-2.351256e+54 * x2487 + x1596 * sc[19] +
                                    x1609 * x2592 - x1928 * x2558) -
                            x241 * x2597;
  const amrex::Real x2608 =
    -x1106 * x2597 - x1117 * x2604 - x1585 * x2556 - x1945 * x2557 +
    x1947 * x2564 + x1949 * x2552 + x1950 * x2532 + x1957 * x2515 +
    x2515 * x2093 -
    x575 * (-2.37606e+59 * x1823 + x2590 - x1818 * x2512 - x1820 * x2513 -
            x1824 * x2514 + x1825 * x2605 + x1827 * x2606) -
    x583 * x2607;
  const amrex::Real x2609 = x586 * x2608;
  const amrex::Real x2610 = x1973 * x2566 + x1992 * x2511 + x1993 * x2511 -
                            x1994 * x2511 -
                            x678 * (x1706 - 1.0935e+25 * x1965 + x1966 * x2586 -
                                    x1968 * x2510 + x645 * x1673) -
                            x680 * x2609 - x793 * x2587 + x793 * x2591;
  const amrex::Real x2611 = x868 * (1.32e+19 * x2007 - 2.904e+37 * x2010 +
                                    x1764 * sc[11] - x2580 * x2006);
  const amrex::Real x2612 = x2581 * x2003;
  const amrex::Real x2613 = -x1746 * x2505 - x1810 * x2582 + x1999 * x2571 +
                            x2286 * x2578 + x2566 * x2001 + x2577 * x2179 -
                            x2578 * x2143 - x824 * x2609 - x827 * x2610 +
                            x871 * x2611 - x871 * x2612;
  const amrex::Real x2614 =
    x1816 * (-x1289 * (-6.144e+31 * x2025 + 1.92e+16 * x2499 - x2572 * x2022) -
             x1347 * x2613 - x1366 * x2610 + x2571 * x2018 + x2574 * x2028 +
             x2574 * x2029 - x2576 * x2021 + x2583 * x2020);
  const amrex::Real x2615 = x1088 - x543;
  const amrex::Real x2616 = x2615 * x2039;
  const amrex::Real x2617 = x140 * x2190;
  const amrex::Real x2618 = x1106 * x2617;
  const amrex::Real x2619 = x1108 * x2617;
  const amrex::Real x2620 = x966 + x178 * x2617 - x2617 * x2193;
  const amrex::Real x2621 = x995 - x183 * x2620 - x2617 * x2192;
  const amrex::Real x2622 = x306 * x2621;
  const amrex::Real x2623 = x1052 + x1049 * x2622 - x271 * x2619;
  const amrex::Real x2624 = x1017 * x2621;
  const amrex::Real x2625 = x1908 * x2617;
  const amrex::Real x2626 = x1032 - x264 * x2625 + x265 * x2624;
  const amrex::Real x2627 = -x140 * x2214 + x1896 * x2621 - x321 * x2213;
  const amrex::Real x2628 = x954 + x2216 * x2627 - x321 * x2211;
  const amrex::Real x2629 = x2218 + x1006 * x2628 - x415 * x2208;
  const amrex::Real x2630 = x939 + x1016 * x2629 - x271 * x2625 + x272 * x2624;
  const amrex::Real x2631 = x1048 + x1024 * x2630 + x1026 * x2622 -
                            x1034 * x2626 - x264 * x2619 - x469 * x2623;
  const amrex::Real x2632 = x482 * x2631;
  const amrex::Real x2633 = x1104 + x475 * x2617 - x484 * x2620;
  const amrex::Real x2634 = x1114 - x1108 * x2633 + x1110 * x2621;
  const amrex::Real x2635 = x577 * x2621;
  const amrex::Real x2636 =
    x1026 * x2635 - x1090 * x2615 - x264 * x2618 + x464 * x2616;
  const amrex::Real x2637 = x1057 * x2632 + x1060 * x2621 - x1095 * x2615 -
                            x1106 * x2633 - x1117 * x2634 + x2615 * x2048 -
                            x483 * x2636;
  const amrex::Real x2638 = x1127 * x2621;
  const amrex::Real x2639 = x241 * x2617;
  const amrex::Real x2640 = x1160 - x264 * x2639 + x265 * x2638;
  const amrex::Real x2641 = x1135 + x1164 + x1123 * x2632 - x1126 * x2634 +
                            x1128 * x2621 - x241 * x2633 - x483 * x2640;
  const amrex::Real x2642 = x1174 - x243 * x2639 + x244 * x2638;
  const amrex::Real x2643 = -x1121 * x2637 + x1169 * x2641 + x1176 * x2635 -
                            x243 * x2618 - x583 * x2642 + x584 * x2616;
  const amrex::Real x2644 = x1225 - x716;
  const amrex::Real x2645 = x1242 - x648;
  const amrex::Real x2646 = x1185 * x2643 + x1228 * x2644 + x1245 * x2645 +
                            x1247 * x2645 + x2615 * x2036;
  const amrex::Real x2647 =
    x1324 * x2643 - x1326 * x2645 + x1327 * x2645 + x2615 * x2061;
  const amrex::Real x2648 = x1364 + x1365 * x2646 - x1366 * x2647;
  const amrex::Real x2649 = x1298 * x2643 + x2615 * x2063;
  const amrex::Real x2650 = x1317 - x1300 * x2649 + x1302 * x2643 +
                            x1331 * x2646 + x2615 * x2065 - x827 * x2647;
  const amrex::Real x2651 = x1342 * x2645 + x1344 * x2646 - x898 * x2649;
  const amrex::Real x2652 =
    x1813 * (x1373 + x1293 * x2646 + x1339 * x2650 - x1347 * x2651 -
             x1369 * x2648 + x1370 * x2645);
  const amrex::Real x2653 =
    x2262 - x140 * x2260 - x1586 * x2620 + x2261 * x2617;
  const amrex::Real x2654 = x415 * x2265;
  const amrex::Real x2655 =
    x1883 * x2621 - x1885 * x2653 - x321 * x2267 - x321 * x2268;
  const amrex::Real x2656 = x2270 - x1531 * x2655 + x1895 * x2627;
  const amrex::Real x2657 = x2272 + x1900 * x2628 + x429 * x2654 - x950 * x2656;
  const amrex::Real x2658 =
    x2167 - x1908 * x2653 + x1915 * x2621 + x1917 * x2629 - x922 * x2657;
  const amrex::Real x2659 = x1925 + x2170;
  const amrex::Real x2660 = x2659 - x1034 * x2658 - x1108 * x2653 -
                            x1564 * x2623 + x1867 * x2630 + x1921 * x2621;
  const amrex::Real x2661 = x1934 + x2276 - x1126 * x2660 - x1585 * x2640 +
                            x1936 * x2631 + x1940 * x2621 - x241 * x2653;
  const amrex::Real x2662 = -x1106 * x2653 - x1117 * x2660 - x1585 * x2636 -
                            x1945 * x2637 + x1947 * x2641 + x1949 * x2631 +
                            x1950 * x2621 + x1957 * x2615 + x2615 * x2093 -
                            x583 * x2661 - (x1632 + x1838) * x575;
  const amrex::Real x2663 = x1961 * x2644;
  const amrex::Real x2664 = x1971 + x1990 - x1187 * x2662 + x1973 * x2643 +
                            x1992 * x2645 + x1993 * x2645 - x1994 * x2645 -
                            x793 * x2663;
  const amrex::Real x2665 = x2014 - x1295 * x2662 - x1810 * x2649 +
                            x1999 * x2646 + x2643 * x2001 - x827 * x2664;
  const amrex::Real x2666 =
    x1816 * (x2031 - x1347 * x2665 - x1366 * x2664 + x2646 * x2018 -
             x2648 * x2021 + x2650 * x2020);
  const amrex::Real x2667 = x1088 - x552;
  const amrex::Real x2668 = x1242 - x671;
  const amrex::Real x2669 = x1225 - x674 - x686 - x764;
  const amrex::Real x2670 = (-x112 - x161) * x2189;
  const amrex::Real x2671 = x243 * x2670;
  const amrex::Real x2672 = x176 * x2670;
  const amrex::Real x2673 = x966 + x109 * x2672 - x178 * x2670;
  const amrex::Real x2674 = x995 - x183 * x2673 + x67 * x2672;
  const amrex::Real x2675 = x1127 * x2674;
  const amrex::Real x2676 = x1149 - x222;
  const amrex::Real x2677 = x1154 + x1156 * x2676 - x1157 * x2676;
  const amrex::Real x2678 =
    -x1172 * x2676 + x241 * x2671 + x244 * x2675 - x584 * x2677;
  const amrex::Real x2679 = x1044 - x280;
  const amrex::Real x2680 = x1046 * x2679;
  const amrex::Real x2681 = x306 * x2674;
  const amrex::Real x2682 = x1017 * x2674;
  const amrex::Real x2683 = x264 * x2670;
  const amrex::Real x2684 = x1032 + x1908 * x2683 + x265 * x2682;
  const amrex::Real x2685 = x271 * x2670;
  const amrex::Real x2686 =
    x1049 * x2681 - x1051 * x2679 + x1108 * x2685 + x273 * x2680;
  const amrex::Real x2687 = (-x403 - x416) * x2205;
  const amrex::Real x2688 = x426 * x2687;
  const amrex::Real x2689 = (-x319 - x322) * x997;
  const amrex::Real x2690 = x337 * x2689;
  const amrex::Real x2691 = x1896 * x2674 + x314 * x2690 + x312 * x1885 * x2670;
  const amrex::Real x2692 = x954 + x2210 * x2689 + x2216 * x2691;
  const amrex::Real x2693 = x2218 + x1006 * x2692 + x429 * x2688;
  const amrex::Real x2694 = x939 + x1016 * x2693 + x1908 * x2685 + x272 * x2682;
  const amrex::Real x2695 = x1024 * x2694 + x1026 * x2681 - x1034 * x2684 +
                            x1108 * x2683 + x464 * x2680 - x469 * x2686;
  const amrex::Real x2696 = x1104 - x475 * x2670 - x484 * x2673;
  const amrex::Real x2697 =
    -x1108 * x2696 + x1110 * x2674 + x1112 * x2679 - x1113 * x2679;
  const amrex::Real x2698 = x2667 * x2039;
  const amrex::Real x2699 = x577 * x2674;
  const amrex::Real x2700 =
    x1026 * x2699 - x1090 * x2667 + x1106 * x2683 + x464 * x2698;
  const amrex::Real x2701 = x1058 * x2695 + x1059 * x2699 - x1095 * x2667 -
                            x1106 * x2696 - x1117 * x2697 + x2667 * x2048 -
                            x483 * x2700;
  const amrex::Real x2702 =
    -x1151 * x2676 + x241 * x2683 + x265 * x2675 - x464 * x2677;
  const amrex::Real x2703 = x1135 + x1124 * x2695 - x1126 * x2697 +
                            x1128 * x2674 + x1162 * x2676 - x241 * x2696 -
                            x478 * x2677 - x483 * x2702;
  const amrex::Real x2704 = x1106 * x2671 - x1121 * x2701 + x1169 * x2703 +
                            x1176 * x2699 - x583 * x2678 + x584 * x2698;
  const amrex::Real x2705 = x674 * x678;
  const amrex::Real x2706 = x1185 * x2704 + x1228 * x2669 + x1245 * x2668 +
                            x1247 * x2668 + x2667 * x2036 - x791 * x2705;
  const amrex::Real x2707 = -x806 - x818;
  const amrex::Real x2708 = x2707 * x2127;
  const amrex::Real x2709 = x1313 - x854;
  const amrex::Real x2710 =
    x1298 * x2704 + x2250 * x2708 + x2667 * x2063 - x2707 * x2128;
  const amrex::Real x2711 =
    x1324 * x2704 - x1326 * x2668 + x1327 * x2668 + x2667 * x2061;
  const amrex::Real x2712 = -x1300 * x2710 + x1302 * x2704 + x1316 * x2709 +
                            x1331 * x2706 + x2243 * x2708 + x2667 * x2065 +
                            x2708 * x2134 - x827 * x2711;
  const amrex::Real x2713 =
    x1342 * x2668 + x1344 * x2706 - x2707 * x2138 - x652 * x2137 - x898 * x2710;
  const amrex::Real x2714 = -x1264 + x1359 - x652;
  const amrex::Real x2715 =
    -x1361 * x2714 + x1363 * x2714 + x1365 * x2706 - x1366 * x2711;
  const amrex::Real x2716 =
    x1813 * (x1293 * x2706 + x1339 * x2712 - x1347 * x2713 - x1369 * x2715 +
             x1370 * x2668 + x1372 * x2714 - x652 * x2107);
  const amrex::Real x2717 =
    x2262 - x1504 * x2672 + x1519 * x2670 - x1586 * x2673 - x2076 * kf_qss[173];
  const amrex::Real x2718 = x1553 * x2687;
  const amrex::Real x2719 = x1521 * x2690 + x1529 * x2689 + x1883 * x2674 -
                            x1885 * x2717 - x2083 * kf_qss[171];
  const amrex::Real x2720 = x2270 - x1531 * x2719 + x1895 * x2691;
  const amrex::Real x2721 = x2087 * kf_qss[172];
  const amrex::Real x2722 =
    x2272 + x1900 * x2692 - x429 * x2718 + x429 * x2721 - x950 * x2720;
  const amrex::Real x2723 =
    x2167 - x1908 * x2717 + x1915 * x2674 + x1917 * x2693 - x922 * x2722;
  const amrex::Real x2724 = x2170 - x1034 * x2723 - x1108 * x2717 -
                            x1564 * x2686 + x1867 * x2694 + x1921 * x2674 +
                            x1923 * x2679 + x1924 * x2679;
  const amrex::Real x2725 = x2276 - x1126 * x2724 - x1521 * x2677 -
                            x1585 * x2702 + x1931 * x2676 + x1932 * x2676 +
                            x1936 * x2695 + x1940 * x2674 - x241 * x2717;
  const amrex::Real x2726 = -x1106 * x2717 - x1117 * x2724 - x1585 * x2700 +
                            x1882 * x2699 - x1945 * x2701 + x1947 * x2703 +
                            x1949 * x2695 + x1957 * x2667 + x2667 * x2093 -
                            x583 * x2725 - (x1629 + x1838) * x575;
  const amrex::Real x2727 = x1961 * x2669;
  const amrex::Real x2728 = x789 * (x1988 + x72 * kf_qss[89]);
  const amrex::Real x2729 = -x1187 * x2726 + x1488 * x2705 + x1973 * x2704 +
                            x1992 * x2668 + x1993 * x2668 - x1994 * x2668 -
                            x678 * (x1970 + x2074 * kf_qss[44]) - x793 * x2727 +
                            x793 * x2728;
  const amrex::Real x2730 = (x1756 + x2011) * x868;
  const amrex::Real x2731 = x2709 * x2003;
  const amrex::Real x2732 = -x1295 * x2726 - x1810 * x2710 + x1999 * x2706 +
                            x2286 * x2708 + x2704 * x2001 + x2707 * x2179 -
                            x2708 * x2143 - x827 * x2729 + x871 * x2730 -
                            x871 * x2731;
  const amrex::Real x2733 =
    x1816 * (x2027 - x1347 * x2732 - x1366 * x2729 + x2706 * x2018 +
             x2712 * x2020 + x2714 * x2028 + x2714 * x2029 - x2715 * x2021);
  const amrex::Real x2734 = 1.0 * kf_qss[102];
  const amrex::Real x2735 = x546 * x2734;
  const amrex::Real x2736 = x1088 - x254 - x2735;
  const amrex::Real x2737 = x2736 * x2039;
  const amrex::Real x2738 = x1044 - x281;
  const amrex::Real x2739 = x1046 * x2738;
  const amrex::Real x2740 = x1050 - x1051 * x2738 + x273 * x2739;
  const amrex::Real x2741 = x1036 + x464 * x2739 - x469 * x2740;
  const amrex::Real x2742 = x2046 + x1112 * x2738 - x1113 * x2738;
  const amrex::Real x2743 = x1064 - x1090 * x2736 + x464 * x2737;
  const amrex::Real x2744 = x2049 + x1058 * x2741 - x1095 * x2736 -
                            x1117 * x2742 + x2736 * x2048 - x483 * x2743;
  const amrex::Real x2745 = x1149 - x217;
  const amrex::Real x2746 = x1154 + x1156 * x2745 - x1157 * x2745;
  const amrex::Real x2747 = x1140 - x1151 * x2745 - x464 * x2746;
  const amrex::Real x2748 = x1136 + x1124 * x2741 - x1126 * x2742 +
                            x1162 * x2745 - x478 * x2746 - x483 * x2747;
  const amrex::Real x2749 = x1171 - x1172 * x2745 + x236 * x254 - x584 * x2746;
  const amrex::Real x2750 =
    x1177 - x1121 * x2744 + x1169 * x2748 - x583 * x2749 + x584 * x2737;
  const amrex::Real x2751 = x1225 - x709 - x739 - x742;
  const amrex::Real x2752 = x1242 - x655 - 1.0 * x670 - x638 * x2073;
  const amrex::Real x2753 = x1185 * x2750 + x1228 * x2751 + x1245 * x2752 +
                            x1247 * x2752 + x2736 * x2036;
  const amrex::Real x2754 = x822 * x2735;
  const amrex::Real x2755 = x1298 * x2750 + x2249 * kf_qss[53] -
                            x2252 * kf_qss[53] + x2736 * x2063 - x796 * x2754;
  const amrex::Real x2756 =
    x1324 * x2750 - x1326 * x2752 + x1327 * x2752 + x2736 * x2061;
  const amrex::Real x2757 =
    x1317 - x1300 * x2755 + x1302 * x2750 + x1331 * x2753 - x2245 * kf_qss[53] -
    x2247 * kf_qss[53] + x2736 * x2065 - x591 * x2754 - x827 * x2756;
  const amrex::Real x2758 = -x1266 + x1359;
  const amrex::Real x2759 =
    x1342 * x2752 + x1344 * x2753 + x2256 * kf_qss[53] - x898 * x2755;
  const amrex::Real x2760 =
    -x1361 * x2758 + x1363 * x2758 + x1365 * x2753 - x1366 * x2756;
  const amrex::Real x2761 = (x1293 * x2753 + x1339 * x2757 - x1347 * x2759 -
                             x1369 * x2760 + x1370 * x2752 + x1372 * x2758) *
                            x1813;
  const amrex::Real x2762 = -x2076 * kf_qss[179];
  const amrex::Real x2763 = x2155 + x2762;
  const amrex::Real x2764 = x2087 * kf_qss[178];
  const amrex::Real x2765 =
    x340 * (x1884 - x1885 * x2763 - x2083 * kf_qss[177]);
  const amrex::Real x2766 = x2161 - x368 * x2765;
  const amrex::Real x2767 = x2164 + x429 * x2764 - x950 * x2766;
  const amrex::Real x2768 = x2168 - x1908 * x2763 - x922 * x2767;
  const amrex::Real x2769 = x2171 - x1034 * x2768 - x1108 * x2763 -
                            x1564 * x2740 + x1923 * x2738 + x1924 * x2738;
  const amrex::Real x2770 = 2.0 * pow(sc[9], 1.0);
  const amrex::Real x2771 = x1476 * x2103;
  const amrex::Real x2772 = x1941 + x2173;
  const amrex::Real x2773 =
    x2772 - x1126 * x2769 - x1521 * x2746 - x1585 * x2747 + x1931 * x2745 +
    x1932 * x2745 + x1936 * x2741 - x241 * x2763 - (x1602 + x1930) * x236;
  const amrex::Real x2774 = x1951 - x1106 * x2763 - x1117 * x2769 -
                            x1585 * x2743 - x1945 * x2744 + x1947 * x2748 +
                            x1949 * x2741 + x1957 * x2736 + x2736 * x2093 -
                            x575 * (x1654 + x1838 + x2771 + x2770 * kf_qss[54] +
                                    x587 * kf_qss[103] + x551 * x206 * x1643) -
                            x583 * x2773;
  const amrex::Real x2775 = x1961 * x2751;
  const amrex::Real x2776 =
    x789 * (x1988 + x2771 + x1395 * sc[12] + x690 * sc[15]);
  const amrex::Real x2777 = -x1187 * x2774 + x1973 * x2750 + x1992 * x2752 +
                            x1993 * x2752 - x1994 * x2752 -
                            x678 * (x1970 + x665 * sc[11]) - x793 * x2775 +
                            x793 * x2776;
  const amrex::Real x2778 =
    (x1759 + x2011 + x155 * kf_qss[49] + x895 * kf_qss[48]) * x868;
  const amrex::Real x2779 =
    x2005 - x1295 * x2774 - x1810 * x2755 - x1991 * x2754 + x1999 * x2753 +
    x2284 * kf_qss[53] - x2285 * kf_qss[53] - x2288 * kf_qss[53] +
    x2750 * x2001 - x822 * (x1737 + x1732 * x2770 + x557 * x1715) -
    x827 * x2777 + x871 * x2778;
  const amrex::Real x2780 =
    x1816 * (-x1289 * (x1776 + x2026 + refC * x1807 + sc[1] * x1785 +
                       x1788 * x2770 * kf_qss[61]) -
             x1347 * x2779 - x1366 * x2777 + x2753 * x2018 + x2757 * x2020 +
             x2758 * x2028 + x2758 * x2029 - x2760 * x2021);
  const amrex::Real x2781 = x2357 - 1.0 * x561;
  const amrex::Real x2782 = x2781 * x2039;
  const amrex::Real x2783 = x173 * x2190;
  const amrex::Real x2784 = x1106 * x2783;
  const amrex::Real x2785 = x2367 + x178 * x2783 - x2783 * x2193;
  const amrex::Real x2786 = x2380 + x475 * x2783 - x484 * x2785;
  const amrex::Real x2787 = x2375 - x183 * x2785 - x2783 * x2192;
  const amrex::Real x2788 = x2385 - x1108 * x2786 + x1110 * x2787;
  const amrex::Real x2789 = x577 * x2787;
  const amrex::Real x2790 =
    x1026 * x2789 - x1090 * x2781 - x264 * x2784 + x464 * x2782;
  const amrex::Real x2791 = x306 * x2787;
  const amrex::Real x2792 = x1108 * x2783;
  const amrex::Real x2793 = x1017 * x2787;
  const amrex::Real x2794 = x1908 * x2783;
  const amrex::Real x2795 = x2399 - x264 * x2794 + x265 * x2793;
  const amrex::Real x2796 = x2391 + x1049 * x2791 - x271 * x2792;
  const amrex::Real x2797 = -x173 * x2214 + x1896 * x2787 - x334 * x2213;
  const amrex::Real x2798 = x2405 + x2216 * x2797 - x334 * x2211;
  const amrex::Real x2799 = x2413 + x1006 * x2798 - x420 * x2208;
  const amrex::Real x2800 = x2415 + x1016 * x2799 - x271 * x2794 + x272 * x2793;
  const amrex::Real x2801 = x2388 + x1024 * x2800 + x1026 * x2791 -
                            x1034 * x2795 - x264 * x2792 - x469 * x2796;
  const amrex::Real x2802 = x1058 * x2801 + x1060 * x2787 - x1095 * x2781 -
                            x1106 * x2786 - x1117 * x2788 + x2781 * x2048 -
                            x483 * x2790;
  const amrex::Real x2803 = x1127 * x2787;
  const amrex::Real x2804 = x241 * x2783;
  const amrex::Real x2805 = x2427 - x243 * x2804 + x244 * x2803;
  const amrex::Real x2806 = x2429 - x264 * x2804 + x265 * x2803;
  const amrex::Real x2807 = x2431 + x1124 * x2801 - x1126 * x2788 +
                            x1128 * x2787 - x241 * x2786 - x483 * x2806;
  const amrex::Real x2808 = -x1121 * x2802 + x1169 * x2807 + x1176 * x2789 -
                            x243 * x2784 - x583 * x2805 + x584 * x2782;
  const amrex::Real x2809 = x1237 + x2437 - x666;
  const amrex::Real x2810 = x2444 - x691;
  const amrex::Real x2811 = x1185 * x2808 + x1228 * x2810 + x1245 * x2809 +
                            x1247 * x2809 + x2781 * x2036;
  const amrex::Real x2812 = -x1265 + x2449;
  const amrex::Real x2813 =
    x1324 * x2808 - x1326 * x2809 + x1327 * x2809 + x2781 * x2061;
  const amrex::Real x2814 =
    -x1361 * x2812 + x1363 * x2812 + x1365 * x2811 - x1366 * x2813;
  const amrex::Real x2815 =
    x1298 * x2808 + x2249 * kf_qss[62] - x2252 * kf_qss[62] + x2781 * x2063;
  const amrex::Real x2816 =
    x1342 * x2809 + x1344 * x2811 + x2256 * kf_qss[62] - x898 * x2815;
  const amrex::Real x2817 = x2457 - x1300 * x2815 + x1302 * x2808 +
                            x1331 * x2811 - x2245 * kf_qss[62] -
                            x2247 * kf_qss[62] + x2781 * x2065 - x827 * x2813;
  const amrex::Real x2818 = (x1293 * x2811 + x1339 * x2817 - x1347 * x2816 -
                             x1369 * x2814 + x1370 * x2809 + x1372 * x2812) *
                            x1813;
  const amrex::Real x2819 = x1961 * x2810;
  const amrex::Real x2820 =
    x2473 - x1586 * x2785 - x173 * x2260 + x2261 * x2783;
  const amrex::Real x2821 = x182 * x2820;
  const amrex::Real x2822 = x420 * x2265;
  const amrex::Real x2823 =
    x1883 * x2787 - x334 * x2267 - x334 * x2268 - x338 * x2821;
  const amrex::Real x2824 = x2477 - x1531 * x2823 + x1895 * x2797;
  const amrex::Real x2825 = x2480 + x1900 * x2798 + x429 * x2822 - x950 * x2824;
  const amrex::Real x2826 =
    x2482 + x1915 * x2787 + x1917 * x2799 - x461 * x2821 - x922 * x2825;
  const amrex::Real x2827 = x2485 - x1034 * x2826 - x1564 * x2796 +
                            x1867 * x2800 + x1921 * x2787 -
                            x304 * (x2484 + x1580 * sc[22]) - x306 * x2821;
  const amrex::Real x2828 = -x575 * x2466;
  const amrex::Real x2829 = x2489 - x1126 * x2827 - x1585 * x2806 +
                            x1936 * x2801 + x1940 * x2787 - x241 * x2820 -
                            (x1590 + x2488) * x236;
  const amrex::Real x2830 = x2828 - x1117 * x2827 - x1585 * x2790 -
                            x1945 * x2802 + x1947 * x2807 + x1949 * x2801 +
                            x1950 * x2787 + x1957 * x2781 + x2781 * x2093 -
                            x577 * x2821 - x583 * x2829;
  const amrex::Real x2831 = (x1433 + x2496) * x789;
  const amrex::Real x2832 = -x1187 * x2830 + x1973 * x2808 + x1992 * x2809 +
                            x1993 * x2809 - x1994 * x2809 -
                            x678 * (x1693 + x1969 + x2461) - x793 * x2819 +
                            x793 * x2831;
  const amrex::Real x2833 = x868 * x2501;
  const amrex::Real x2834 = x2504 + x871 * x2833;
  const amrex::Real x2835 =
    x2834 - x1295 * x2830 - x1810 * x2815 + x1999 * x2811 + x2284 * kf_qss[62] -
    x2285 * kf_qss[62] - x2288 * kf_qss[62] + x2808 * x2001 - x827 * x2832;
  const amrex::Real x2836 =
    (-x1289 * x2500 - x1347 * x2835 - x1366 * x2832 + x2811 * x2018 +
     x2812 * x2028 + x2812 * x2029 - x2814 * x2021 + x2817 * x2020) *
    x1816;
  const amrex::Real x2837 = -x1255 + x1359;
  const amrex::Real x2838 = x1088 - x249 - x258;
  const amrex::Real x2839 = x1116 + (x215 + x233) * x304;
  const amrex::Real x2840 = x2838 * x2039;
  const amrex::Real x2841 = x1064 - x1090 * x2838 + x464 * x2840;
  const amrex::Real x2842 = x1062 + x1107;
  const amrex::Real x2843 =
    x2842 - x1095 * x2838 - x1117 * x2839 + x2838 * x2048 - x483 * x2841;
  const amrex::Real x2844 = x1149 - x215 - x233;
  const amrex::Real x2845 = x1154 + x1156 * x2844 - x1157 * x2844;
  const amrex::Real x2846 = x1140 - x1151 * x2844 - x464 * x2845;
  const amrex::Real x2847 =
    x1125 + x1136 - x1126 * x2839 + x1162 * x2844 - x478 * x2845 - x483 * x2846;
  const amrex::Real x2848 =
    x1171 - x1172 * x2844 - x584 * x2845 + (x249 + x258) * x236;
  const amrex::Real x2849 =
    x1177 - x1121 * x2843 + x1169 * x2847 - x583 * x2848 + x584 * x2840;
  const amrex::Real x2850 = x1298 * x2849 + x2838 * x2063;
  const amrex::Real x2851 = x1242 - x675;
  const amrex::Real x2852 =
    x1324 * x2849 - x1326 * x2851 + x1327 * x2851 + x2838 * x2061;
  const amrex::Real x2853 = x675 * x789;
  const amrex::Real x2854 = x1225 - x706;
  const amrex::Real x2855 = x1185 * x2849 + x1228 * x2854 + x1245 * x2851 +
                            x1247 * x2851 + x2838 * x2036 - x793 * x2853;
  const amrex::Real x2856 = x1317 - x1300 * x2850 + x1302 * x2849 +
                            x1331 * x2855 + x2838 * x2065 - x827 * x2852;
  const amrex::Real x2857 = x1342 * x2851 + x1344 * x2855 - x898 * x2850;
  const amrex::Real x2858 =
    -x1361 * x2837 + x1363 * x2837 + x1365 * x2855 - x1366 * x2852;
  const amrex::Real x2859 = (x1293 * x2855 + x1339 * x2856 - x1347 * x2857 -
                             x1369 * x2858 + x1370 * x2851 + x1372 * x2837) *
                            x1813;
  const amrex::Real x2860 = x1640 * x1642;
  const amrex::Real x2861 = -x1908 * x2155;
  const amrex::Real x2862 = x340 * (x1884 - x1885 * x2155);
  const amrex::Real x2863 = x2161 - x368 * x2862;
  const amrex::Real x2864 = x2163 - x950 * x2863;
  const amrex::Real x2865 = x1906 + x2864;
  const amrex::Real x2866 = x2861 - x922 * x2865;
  const amrex::Real x2867 = x2168 + x2866;
  const amrex::Real x2868 = -x1108 * x2155;
  const amrex::Real x2869 = x1926 + x2868;
  const amrex::Real x2870 = x1868 + x2170;
  const amrex::Real x2871 = x2869 + x2870 - x1034 * x2867;
  const amrex::Real x2872 = -x241 * x2155;
  const amrex::Real x2873 = x2176 + x2872;
  const amrex::Real x2874 = x1937 + x2873 - x1126 * x2871;
  const amrex::Real x2875 =
    x2874 - x1521 * x2845 - x1585 * x2846 + x1931 * x2844 + x1932 * x2844;
  const amrex::Real x2876 = -x1106 * x2155;
  const amrex::Real x2877 = x1952 + x2876 - x1117 * x2871;
  const amrex::Real x2878 =
    x2877 - x1585 * x2841 - x1945 * x2843 + x1947 * x2847 + x1957 * x2838 +
    x2838 * x2093 - x575 * (x1838 + sc[9] * x1653 + x551 * sc[3] * x2860) -
    x583 * x2875;
  const amrex::Real x2879 = x1961 * x2854;
  const amrex::Real x2880 = x1990 - x1187 * x2878 + x1973 * x2849 +
                            x1992 * x2851 + x1993 * x2851 - x1994 * x2851 -
                            x678 * (x1666 + x1668 + x1669 + x1674 + x1676 +
                                    x1690 + x1970 + refC * x1682) -
                            x793 * x2879;
  const amrex::Real x2881 = x868 * (x1755 + x1765 + x2011 + sc[3] * x1768 +
                                    sc[4] * x1751 + x836 * x850 * sc[1]);
  const amrex::Real x2882 =
    x2005 - x1295 * x2878 - x1810 * x2850 + x1999 * x2855 + x2849 * x2001 -
    x822 * (x1736 + x1739 * sc[12]) - x827 * x2880 + x871 * x2881;
  const amrex::Real x2883 =
    x1816 * (-x1289 * (x1775 + x2026 + sc[1] * x1779) - x1347 * x2882 -
             x1366 * x2880 + x2837 * x2028 + x2837 * x2029 + x2855 * x2018 +
             x2856 * x2020 - x2858 * x2021);
  const amrex::Real x2884 = x678 * x569;
  const amrex::Real x2885 = 0.42 * x1066 + 3.0 * x1068;
  const amrex::Real x2886 = 3.0 * x905;
  const amrex::Real x2887 = 0.42 * x905;
  const amrex::Real x2888 = x1082 * x2886 + x1084 * x2887;
  const amrex::Real x2889 = 33346837500000.0 * x1075 + 5.94015e+58 * x1079 -
                            2.985e+29 * x2356 - 7072500.0 * x541 - x569 +
                            x1071 * x2885 + x1087 * x2888;
  const amrex::Real x2890 = x2889 * x2039;
  const amrex::Real x2891 = 0.42 * x906;
  const amrex::Real x2892 = 3.0 * x906;
  const amrex::Real x2893 = x955 * x2891 + x956 * x2892;
  const amrex::Real x2894 = 9.39e+26 * refC;
  const amrex::Real x2895 = x32 * x2894;
  const amrex::Real x2896 = 5.87814e+53 * x914;
  const amrex::Real x2897 = -x50 * x2895 + x959 * x2893 + x961 * x2896;
  const amrex::Real x2898 = x965 * x183;
  const amrex::Real x2899 = x973 * x2891 + x974 * x2892;
  const amrex::Real x2900 = -x92 * x2894 + x977 * x2899 + x979 * x2896;
  const amrex::Real x2901 = x971 * x2897 - x982 * x2900 + x984 * x2900;
  const amrex::Real x2902 = x987 * x2897 + x989 * x2900;
  const amrex::Real x2903 =
    -x180 * x2901 - x2898 * x2897 + x968 * x2897 + x994 * x2902;
  const amrex::Real x2904 = x577 * x2903;
  const amrex::Real x2905 = x306 * x2903;
  const amrex::Real x2906 = x928 * x2891 + x929 * x2892;
  const amrex::Real x2907 = -x453 * x2894 + x932 * x2906 + x934 * x2896;
  const amrex::Real x2908 = x1017 * x2903;
  const amrex::Real x2909 = x927 * x2907;
  const amrex::Real x2910 = -x1030 * x2907 + x1031 * x2909 + x265 * x2908;
  const amrex::Real x2911 = x1037 * x2891 + x1038 * x2892;
  const amrex::Real x2912 = x1041 * x2911 + x1043 * x2896 - x2894 * x2383;
  const amrex::Real x2913 = x1046 * x2912;
  const amrex::Real x2914 = x1049 * x2905 - x1051 * x2912 + x273 * x2913;
  const amrex::Real x2915 = x908 * x2891 + x910 * x2892;
  const amrex::Real x2916 = -x2409 * x2894 + x913 * x2915 + x919 * x2896;
  const amrex::Real x2917 = x941 * x2891 + x942 * x2892;
  const amrex::Real x2918 = -x2402 * x2894 + x945 * x2917 + x947 * x2896;
  const amrex::Real x2919 = x940 * x2918;
  const amrex::Real x2920 = x1002 * x2903 + x953 * x2919;
  const amrex::Real x2921 =
    x1006 * x2920 + x1009 * x2916 + x2411 * x2916 + x951 * x2919;
  const amrex::Real x2922 =
    x1016 * x2921 + x272 * x2908 + x924 * x2916 + x926 * x2909 + x937 * x2909;
  const amrex::Real x2923 =
    x1024 * x2922 + x1026 * x2905 - x1034 * x2910 + x464 * x2913 - x469 * x2914;
  const amrex::Real x2924 = x484 * x965;
  const amrex::Real x2925 = x1101 * x2900 + x1103 * x2902 - x2897 * x2924;
  const amrex::Real x2926 =
    -x1108 * x2925 + x1110 * x2903 + x1112 * x2912 - x1113 * x2912;
  const amrex::Real x2927 = x1026 * x2904 - x1090 * x2889 + x464 * x2890;
  const amrex::Real x2928 = x1058 * x2923 + x1060 * x2903 - x1095 * x2889 -
                            x1106 * x2925 - x1117 * x2926 + x2889 * x2048 -
                            x483 * x2927;
  const amrex::Real x2929 = x1141 * x2891 + x1142 * x2892;
  const amrex::Real x2930 = 5.87814e+53 * x2424 + x1145 * x2929 - x2423 * x2894;
  const amrex::Real x2931 = x1127 * x2903;
  const amrex::Real x2932 =
    -x1132 * x2901 + x1153 * x2902 + x1156 * x2930 - x1157 * x2930;
  const amrex::Real x2933 = -x1151 * x2930 + x265 * x2931 - x464 * x2932;
  const amrex::Real x2934 = x1124 * x2923 - x1126 * x2926 + x1128 * x2903 +
                            x1131 * x2902 + x1133 * x2900 + x1162 * x2930 -
                            x241 * x2925 - x478 * x2932 - x483 * x2933;
  const amrex::Real x2935 = -x1172 * x2930 + x244 * x2931 - x584 * x2932;
  const amrex::Real x2936 = -x1121 * x2928 + x1169 * x2934 + x1176 * x2904 -
                            x583 * x2935 + x584 * x2890;
  const amrex::Real x2937 = x678 * x712;
  const amrex::Real x2938 = x1232 * x2887 + x1233 * x2886;
  const amrex::Real x2939 = -1.75 * kf_qss[16] + 2.73375e+24 * x1241 -
                            2025000000000.0 * x2436 + x1236 * x2938;
  const amrex::Real x2940 = 3.0 * x1202 + 0.42 * x1203;
  const amrex::Real x2941 = 6.405e+46 * x738;
  const amrex::Real x2942 = 2.94e+36 * x1197;
  const amrex::Real x2943 = 3.0 * x1207;
  const amrex::Real x2944 = 0.42 * x1211 + x1208 * x2943;
  const amrex::Real x2945 = 2.734935e+93 * x1220;
  const amrex::Real x2946 = 3.0 * x1192 + 0.42 * x1193;
  const amrex::Real x2947 =
    9.8688375e+42 * x1219 - 2.1e+18 * x2440 - 3.8475e+21 * x2442 - x712 +
    x1196 * x2946 + x1199 * x2942 + x1206 * x2940 + x1214 * x2944 -
    x1215 * x2941 + x1223 * x2945 - x696 * refCinv - x787 * refCinv;
  const amrex::Real x2948 = x1185 * x2936 + x1228 * x2947 + x1245 * x2939 +
                            x1247 * x2939 + x2889 * x2036 - x791 * x2937 -
                            x796 * x2884;
  const amrex::Real x2949 = x1349 * x2887 + x1350 * x2886;
  const amrex::Real x2950 = 1.536e+31 * x1354;
  const amrex::Real x2951 =
    -x1259 - 4.8e+15 * x2448 - x882 + x1353 * x2949 + x1357 * x2950;
  const amrex::Real x2952 = x1324 * x2936 - x1326 * x2939 + x1327 * x2939 +
                            x2889 * x2061 - x591 * x2884;
  const amrex::Real x2953 = x1304 * x2887 + x1305 * x2886;
  const amrex::Real x2954 = 7.26e+36 * x1312 - 3.3e+18 * x852 + x1308 * x2953;
  const amrex::Real x2955 =
    x1298 * x2936 + x2889 * x2063 + x819 * x2128 - x819 * x2251;
  const amrex::Real x2956 = -x1300 * x2955 + x1302 * x2936 + x1316 * x2954 +
                            x1331 * x2948 + x2889 * x2065 - x819 * x2244 -
                            x819 * x2246 - x827 * x2952;
  const amrex::Real x2957 =
    x1342 * x2939 + x1344 * x2948 + x819 * x2138 + x822 * x882 - x898 * x2955;
  const amrex::Real x2958 = 1.0 * x1289;
  const amrex::Real x2959 = -x1361 * x2951 + x1363 * x2951 + x1365 * x2948 -
                            x1366 * x2952 + x2958 * kf_qss[38];
  const amrex::Real x2960 = (x1293 * x2948 + x1339 * x2956 - x1347 * x2957 -
                             x1369 * x2959 + x1370 * x2939 + x1372 * x2951) *
                            x1813;
  const amrex::Real x2961 = x1854 * x2897;
  const amrex::Real x2962 = 9.39e+26 * x2469;
  const amrex::Real x2963 = 5.87814e+53 * x1844;
  const amrex::Real x2964 =
    x66 * (x1489 * x2962 - x1840 * x2893 - x1841 * x2963);
  const amrex::Real x2965 = x965 * x1586;
  const amrex::Real x2966 =
    -x101 * x2961 + x101 * x2964 + x1857 * x2900 - x1858 * x2900 -
    x99 * (-x1849 * x2899 + x1850 * x2962 - x1851 * x2963);
  const amrex::Real x2967 =
    -x177 * x2961 + x177 * x2964 - x180 * x2966 + x1863 * x2902 - x2897 * x2965;
  const amrex::Real x2968 = x182 * x2967;
  const amrex::Real x2969 = x340 * (x1883 * x2903 - x338 * x2968);
  const amrex::Real x2970 =
    x1891 * x2918 + x1897 * x2903 + x2600 * x2918 -
    x366 * (-5.87814e+53 * x1889 + x1532 * x2962 - x1887 * x2917) -
    x368 * x2969;
  const amrex::Real x2971 =
    x1900 * x2920 + x1902 * x2916 - x1903 * x2916 + x2479 * x2916 -
    x400 * (x1539 * x2962 - x1878 * x2915 - x1879 * x2963) - x950 * x2970;
  const amrex::Real x2972 =
    x1909 * x2907 + x1911 * x2907 + x1913 * x2907 + x1915 * x2903 +
    x1917 * x2921 - x457 * (x1556 * x2962 - x1874 * x2906 - x1875 * x2963) -
    x461 * x2968 - x922 * x2971;
  const amrex::Real x2973 =
    -x1034 * x2972 - x1564 * x2914 + x1867 * x2922 + x1921 * x2903 +
    x1923 * x2912 + x1924 * x2912 -
    x304 * (-x1870 * x2911 + x1871 * x2962 - x1872 * x2963) - x306 * x2968;
  const amrex::Real x2974 = 2.985e+29 * x1633;
  const amrex::Real x2975 = x2463 * x1470;
  const amrex::Real x2976 = -3.60375e+88 * x1836 + 2.325e+44 * x2975 -
                            (x1829 * x2887 + x1831 * x2886) * x1832;
  const amrex::Real x2977 =
    -x1126 * x2973 - x1132 * x2966 - x1521 * x2932 - x1585 * x2933 +
    x1931 * x2930 + x1932 * x2930 + x1936 * x2923 + x1938 * x2902 +
    x1940 * x2903 -
    x236 * (-5.87814e+53 * x2487 + x1609 * x2962 - x1928 * x2929) -
    x241 * x2967;
  const amrex::Real x2978 =
    -x1106 * x2967 - x1117 * x2973 - x1585 * x2927 - x1945 * x2928 +
    x1947 * x2934 + x1949 * x2923 + x1950 * x2903 + x1957 * x2889 +
    x2889 * x2093 -
    x575 * (-33346837500000. * x1821 - 5.94015e+58 * x1823 + 7072500.0 * x1826 +
            x2976 - x1818 * x2885 - x1824 * x2888 + x1827 * x2974) -
    x583 * x2977;
  const amrex::Real x2979 = x1961 * x2947;
  const amrex::Real x2980 = 3.8475e+21 * x1440;
  const amrex::Real x2981 =
    x789 * (x1396 + x1481 + 2.1e+18 * x1978 - 9.8688375e+42 * x1987 + x2976 +
            x1442 * x2980 - x1977 * x2940 - x1979 * x2942 - x1981 * x2946 -
            x1982 * x2945 - x1984 * x2944 + x2493 * x2941);
  const amrex::Real x2982 = x1671 * x1439;
  const amrex::Real x2983 = 2025000000000.0 * x1677;
  const amrex::Real x2984 =
    -x1187 * x2978 + x1488 * x2937 + x1973 * x2936 - x1991 * x2884 +
    x1992 * x2939 + x1993 * x2939 - x1994 * x2939 -
    x678 * (x1481 + x1665 + x1698 - 2.73375e+24 * x1965 + sc[4] * x1685 +
            sc[5] * x1688 + sc[6] * x1705 + x1692 * sc[10] + x1708 * sc[22] +
            x1966 * x2983 - x1968 * x2938 + x627 * x2982 + x646 * x2982 +
            x621 * x2982 * kf_qss[16]) -
    x793 * x2979 + x793 * x2981;
  const amrex::Real x2985 =
    x868 * (3.3e+18 * x2007 - 7.26e+36 * x2010 - x2953 * x2006);
  const amrex::Real x2986 = x2954 * x2003;
  const amrex::Real x2987 = x206 * sc[1];
  const amrex::Real x2988 = -x1295 * x2978 - x1810 * x2955 + x1999 * x2948 +
                            x2936 * x2001 - x819 * x2179 + x819 * x2283 -
                            x819 * x2287 -
                            x822 * (x1724 + x1740 + x1747 + x1728 * x2987) -
                            x827 * x2984 + x871 * x2985 - x871 * x2986;
  const amrex::Real x2989 =
    x1816 * (-x1289 * (4.8e+15 * x2499 - x2949 * x2022 - x2950 * x2024) -
             x1347 * x2988 - x1366 * x2984 + x2948 * x2018 + x2951 * x2028 +
             x2951 * x2029 + x2956 * x2020 - x2959 * x2021);
  const amrex::Real x2990 = x2039 * x2357;
  const amrex::Real x2991 = x2375 - x183 * x2367;
  const amrex::Real x2992 = x1017 * x2991;
  const amrex::Real x2993 = x2399 + x265 * x2992;
  const amrex::Real x2994 = x2405 + x1002 * x2991;
  const amrex::Real x2995 = x2413 + x1006 * x2994;
  const amrex::Real x2996 = x2415 + x1016 * x2995 + x272 * x2992;
  const amrex::Real x2997 = x306 * x2991;
  const amrex::Real x2998 = x2391 + x1049 * x2997;
  const amrex::Real x2999 =
    x2388 + x1024 * x2996 + x1026 * x2997 - x1034 * x2993 - x469 * x2998;
  const amrex::Real x3000 = x2380 - x484 * x2367;
  const amrex::Real x3001 = x182 * x3000;
  const amrex::Real x3002 = x2385 + x1110 * x2991 - x306 * x3001;
  const amrex::Real x3003 = x577 * x2991;
  const amrex::Real x3004 = -x1090 * x2357 + x3003 * x1026 + x464 * x2990;
  const amrex::Real x3005 = x1058 * x2999 + x1060 * x2991 - x1095 * x2357 +
                            x2357 * x2048 - x3002 * x1117 - x483 * x3004 -
                            x577 * x3001;
  const amrex::Real x3006 = x1127 * x2991;
  const amrex::Real x3007 = x2427 + x244 * x3006;
  const amrex::Real x3008 = x2429 + x265 * x3006;
  const amrex::Real x3009 = x2431 + x1124 * x2999 + x1128 * x2991 -
                            x241 * x3000 - x3002 * x1126 - x483 * x3008;
  const amrex::Real x3010 =
    x3003 * x1176 - x3005 * x1121 + x3009 * x1169 - x583 * x3007 + x584 * x2990;
  const amrex::Real x3011 = 3.6 * kf_qss[16];
  const amrex::Real x3012 = x2437 - x3011;
  const amrex::Real x3013 = x2036 * x2357 + x2444 * x1228 + x3010 * x1185 +
                            x3012 * x1245 + x3012 * x1247;
  const amrex::Real x3014 =
    x2357 * x2061 + x3010 * x1324 - x3012 * x1326 + x3012 * x1327;
  const amrex::Real x3015 = -x799 - x813;
  const amrex::Real x3016 = x3015 * x2127;
  const amrex::Real x3017 =
    x2357 * x2063 + x3010 * x1298 - x3015 * x2128 + x3016 * x2250;
  const amrex::Real x3018 = x2457 + x2357 * x2065 + x3010 * x1302 +
                            x3013 * x1331 + x3016 * x2134 + x3016 * x2243 -
                            x3017 * x1300 - x827 * x3014;
  const amrex::Real x3019 =
    x3012 * x1342 + x3013 * x1344 - x3015 * x2138 + x822 * x884 - x898 * x3017;
  const amrex::Real x3020 = x2449 - x884;
  const amrex::Real x3021 = x3013 * x1365 - x3014 * x1366 - x3020 * x1361 +
                            x3020 * x1363 + x813 * x1289;
  const amrex::Real x3022 = (x3012 * x1370 + x3013 * x1293 + x3018 * x1339 -
                             x3019 * x1347 + x3020 * x1372 - x3021 * x1369) *
                            x1813;
  const amrex::Real x3023 = x2473 - x1586 * x2367;
  const amrex::Real x3024 = x340 * (x1883 * x2991 - x3023 * x1885);
  const amrex::Real x3025 = x2477 + x1897 * x2991 - x368 * x3024;
  const amrex::Real x3026 = x2480 + x1900 * x2994 - x950 * x3025;
  const amrex::Real x3027 =
    x2482 + x1915 * x2991 + x1917 * x2995 - x3023 * x1908 - x922 * x3026;
  const amrex::Real x3028 = x2485 - x1564 * x2998 + x1867 * x2996 +
                            x1921 * x2991 - x3023 * x1108 - x3027 * x1034 -
                            x304 * x2484;
  const amrex::Real x3029 = x2489 + x1936 * x2999 + x1940 * x2991 -
                            x236 * x2488 - x241 * x3023 - x3008 * x1585 -
                            x3028 * x1126;
  const amrex::Real x3030 = x2828 + x1949 * x2999 + x1950 * x2991 +
                            x1957 * x2357 + x2357 * x2093 - x3004 * x1585 -
                            x3005 * x1945 + x3009 * x1947 - x3023 * x1106 -
                            x3028 * x1117 - x583 * x3029;
  const amrex::Real x3031 = x789 * x2496;
  const amrex::Real x3032 = x2444 * x1961;
  const amrex::Real x3033 = x3010 * x1973 + x3012 * x1992 + x3012 * x1993 -
                            x3012 * x1994 - x3030 * x1187 -
                            x678 * (x1703 + x2461 + x3011 * x1673) +
                            x793 * x3031 - x793 * x3032;
  const amrex::Real x3034 = x2834 + x3010 * x2001 + x3013 * x1999 +
                            x3015 * x2179 - x3016 * x2143 + x3016 * x2286 -
                            x3017 * x1810 - x3030 * x1295 - x827 * x3033;
  const amrex::Real x3035 =
    x1816 *
    (x3013 * x2018 + x3018 * x2020 + x3020 * x2028 + x3020 * x2029 -
     x3021 * x2021 - x3033 * x1366 - x3034 * x1347 - (x1798 + x2500) * x1289);
  const amrex::Real x3036 = 6.0 * x1202 + 0.84 * x1203;
  const amrex::Real x3037 = 6.0 * x1192 + 0.84 * x1193;
  const amrex::Real x3038 = 0.84 * x1207;
  const amrex::Real x3039 = 6.0 * x1209 + x3038 * x1210;
  const amrex::Real x3040 = 5.88e+36 * x1200 - 1.281e+47 * x1216 +
                            1.9737675e+43 * x1219 + 5.46987e+93 * x1224 -
                            4.2e+18 * x2440 - 7.695e+21 * x2442 +
                            x3036 * x1206 + x3037 * x1196 + x3039 * x1214;
  const amrex::Real x3041 = x3040 * x1228;
  const amrex::Real x3042 = x1242 - x658;
  const amrex::Real x3043 = x658 * x789;
  const amrex::Real x3044 =
    x1186 + x1189 + x3041 + x3042 * x1245 + x3042 * x1247 - x793 * x3043;
  const amrex::Real x3045 = x1325 - x3042 * x1326 + x3042 * x1327;
  const amrex::Real x3046 = x1364 + x3044 * x1365 - x3045 * x1366;
  const amrex::Real x3047 = x1321 + x3044 * x1331 - x827 * x3045;
  const amrex::Real x3048 = x1340 + x3042 * x1342 + x3044 * x1344;
  const amrex::Real x3049 =
    x1813 * (x1373 + x3042 * x1370 + x3044 * x1293 - x3046 * x1369 +
             x3047 * x1339 - x3048 * x1347);
  const amrex::Real x3050 = x3040 * x1961;
  const amrex::Real x3051 = -x793 * x3050;
  const amrex::Real x3052 = -x575 * x1838;
  const amrex::Real x3053 = x1958 + x3052;
  const amrex::Real x3054 = x1955 + x3053;
  const amrex::Real x3055 = x1935 + x2874;
  const amrex::Real x3056 = x1946 + x1948 + x2877 - x583 * x3055;
  const amrex::Real x3057 = x3054 + x3056;
  const amrex::Real x3058 = -x3057 * x1187;
  const amrex::Real x3059 = x719 * x1439;
  const amrex::Real x3060 = 1.281e+47 * x2493;
  const amrex::Real x3061 = 4.2e+18 * x1978 - 5.88e+36 * x1980 -
                            5.46987e+93 * x1983 - 1.9737675e+43 * x1987 +
                            7.695e+21 * x2588 - x3036 * x1977 - x3037 * x1981 -
                            x3039 * x1984 + x738 * x3060;
  const amrex::Real x3062 = x1837 + x3061;
  const amrex::Real x3063 =
    x789 * (x1379 + x3062 + sc[4] * x1436 + sc[5] * x1418 + sc[6] * x1390 +
            x1432 * sc[10] + x3059 * x1443);
  const amrex::Real x3064 = x1975 + x3051 + x3058 + x3042 * x1992 +
                            x3042 * x1993 - x3042 * x1994 + x793 * x3063;
  const amrex::Real x3065 = -x3057 * x1295;
  const amrex::Real x3066 = x2015 + x3065;
  const amrex::Real x3067 = x3066 + x3044 * x1999 - x827 * x3064;
  const amrex::Real x3068 =
    x1816 * (x2030 - x1289 * (x1793 + x1801 + x2026) + x3044 * x2018 -
             x3046 * x2021 + x3047 * x2020 - x3064 * x1366 - x3067 * x1347);
  const amrex::Real x3069 = x1088 - x573;
  const amrex::Real x3070 = x3069 * x2039;
  const amrex::Real x3071 = x1044 - 1.0 * x276 - x301;
  const amrex::Real x3072 = x3071 * x1046;
  const amrex::Real x3073 = -x15 - x20 + x962;
  const amrex::Real x3074 = x66 * x56;
  const amrex::Real x3075 = -x177 * x3074 + x965 * x3073;
  const amrex::Real x3076 = -x56 - 1.0 * x75 + x980;
  const amrex::Real x3077 = x971 * x3073 - x982 * x3076 + x984 * x3076;
  const amrex::Real x3078 = -x101 * x3074 + x987 * x3073 + x989 * x3076;
  const amrex::Real x3079 =
    -x180 * x3077 - x183 * x3075 + x968 * x3073 + x994 * x3078;
  const amrex::Real x3080 = x306 * x3079;
  const amrex::Real x3081 = -x395 - 1.0 * x440 + x935;
  const amrex::Real x3082 = x3079 * x1017;
  const amrex::Real x3083 = x927 * x3081;
  const amrex::Real x3084 =
    x265 * x3082 - x3081 * x1030 + x3083 * x1031 + x457 * x301;
  const amrex::Real x3085 = x273 * x3072 - x3071 * x1051 + x3080 * x1049;
  const amrex::Real x3086 = -x348 - x393 + x920;
  const amrex::Real x3087 = x921 * x3086;
  const amrex::Real x3088 = x428 * x3087;
  const amrex::Real x3089 = x401 * x3087;
  const amrex::Real x3090 = -x329 + x948;
  const amrex::Real x3091 = x336 * x329;
  const amrex::Real x3092 = x3079 * x1002 + x3090 * x2547 - x3091 * x1531;
  const amrex::Real x3093 = x366 * x348;
  const amrex::Real x3094 =
    x3090 * x2546 + x3092 * x1006 + x374 * x3089 + x427 * x3088 - x950 * x3093;
  const amrex::Real x3095 = x400 * x395;
  const amrex::Real x3096 = x272 * x3082 + x3094 * x1016 - x922 * x3095 +
                            x923 * x3087 + x926 * x3083 + x937 * x3083;
  const amrex::Real x3097 =
    x3080 * x1026 - x3084 * x1034 + x3096 * x1024 + x464 * x3072 - x469 * x3085;
  const amrex::Real x3098 = x78 * x99;
  const amrex::Real x3099 =
    -x180 * x3098 + x3076 * x1101 + x3078 * x1103 - x484 * x3075;
  const amrex::Real x3100 =
    x3071 * x1112 - x3071 * x1113 + x3079 * x1110 - x3099 * x1108;
  const amrex::Real x3101 = x577 * x3079;
  const amrex::Real x3102 = -x3069 * x1090 + x3101 * x1026 + x464 * x3070;
  const amrex::Real x3103 = -x3069 * x1095 + x3069 * x2048 + x3079 * x1060 +
                            x3097 * x1058 - x3099 * x1106 - x3100 * x1117 -
                            x483 * x3102;
  const amrex::Real x3104 = x1149 - 1.0 * x229 - x78;
  const amrex::Real x3105 = x3079 * x1127;
  const amrex::Real x3106 =
    -x3077 * x1132 + x3078 * x1153 + x3104 * x1156 - x3104 * x1157;
  const amrex::Real x3107 = x265 * x3105 - x3104 * x1151 - x464 * x3106;
  const amrex::Real x3108 = -x241 * x3099 + x3076 * x1133 + x3078 * x1131 +
                            x3079 * x1128 + x3097 * x1124 - x3098 * x1132 -
                            x3100 * x1126 + x3104 * x1162 - x478 * x3106 -
                            x483 * x3107;
  const amrex::Real x3109 = x244 * x3105 - x3104 * x1172 - x584 * x3106;
  const amrex::Real x3110 =
    x3101 * x1176 - x3103 * x1121 + x3108 * x1169 - x583 * x3109 + x584 * x3070;
  const amrex::Real x3111 = x575 * x568;
  const amrex::Real x3112 = x3040 - x701;
  const amrex::Real x3113 = x1242 - x568 - 1.0 * x663;
  const amrex::Real x3114 = x3069 * x2036 + x3110 * x1185 - x3111 * x1187 +
                            x3112 * x1228 + x3113 * x1245 + x3113 * x1247;
  const amrex::Real x3115 = x2249 * kf_qss[86] - x2252 * kf_qss[86] +
                            x3069 * x2063 + x3110 * x1298 - x3111 * x1295;
  const amrex::Real x3116 =
    x3069 * x2061 + x3110 * x1324 - x3113 * x1326 + x3113 * x1327;
  const amrex::Real x3117 = x1317 - x2245 * kf_qss[86] - x2247 * kf_qss[86] +
                            x3069 * x2065 + x3110 * x1302 + x3114 * x1331 -
                            x3115 * x1300 - x827 * x3116;
  const amrex::Real x3118 = -x1252 + x1359;
  const amrex::Real x3119 =
    x2256 * kf_qss[86] + x3113 * x1342 + x3114 * x1344 - x898 * x3115;
  const amrex::Real x3120 =
    x3114 * x1365 - x3116 * x1366 - x3118 * x1361 + x3118 * x1363;
  const amrex::Real x3121 = (x3113 * x1370 + x3114 * x1293 + x3117 * x1339 +
                             x3118 * x1372 - x3119 * x1347 - x3120 * x1369) *
                            x1813;
  const amrex::Real x3122 = x1480 * x2238;
  const amrex::Real x3123 =
    x789 * (x1380 + x1381 + x1407 + x1434 + x1446 + x3062 + x3122 +
            sc[4] * x1386 + x1378 * sc[14] + refC * x1421 * x1425);
  const amrex::Real x3124 = x3073 * x1854;
  const amrex::Real x3125 = x2147 + x2148;
  const amrex::Real x3126 =
    x3125 - x101 * x3124 + x3076 * x1857 - x3076 * x1858;
  const amrex::Real x3127 =
    x2153 - x177 * x3124 - x180 * x3126 - x3075 * x1586 + x3078 * x1863;
  const amrex::Real x3128 = x3079 * x1883 - x3127 * x1885;
  const amrex::Real x3129 =
    x2160 + x3079 * x1897 + x3090 * x1891 + x3090 * x2600 - x3128 * x1531;
  const amrex::Real x3130 = x2163 + x3086 * x1902 - x3088 * x1554 +
                            x3089 * x1904 + x3092 * x1900 - x950 * x3129;
  const amrex::Real x3131 = x2166 + x3079 * x1915 + x3081 * x1909 +
                            x3081 * x1911 + x3081 * x1913 + x3094 * x1917 -
                            x3127 * x1908 - x922 * x3130;
  const amrex::Real x3132 = x2170 + x3071 * x1923 + x3071 * x1924 +
                            x3079 * x1921 - x3085 * x1564 + x3096 * x1867 -
                            x3127 * x1108 - x3131 * x1034;
  const amrex::Real x3133 = -x236 * (x1930 + x1640 * x1601) - x241 * x3127 +
                            x3078 * x1938 + x3079 * x1940 + x3097 * x1936 +
                            x3104 * x1931 + x3104 * x1932 - x3106 * x1521 -
                            x3107 * x1585 - x3126 * x1132 - x3132 * x1126;
  const amrex::Real x3134 = x3069 * x1957 + x3069 * x2093 + x3079 * x1950 +
                            x3097 * x1949 - x3102 * x1585 - x3103 * x1945 +
                            x3108 * x1947 - x3127 * x1106 - x3132 * x1117 -
                            x575 * (x1838 + sc[1] * x1648 + sc[4] * x1623 +
                                    sc[5] * x1657 + sc[7] * x1631) -
                            x583 * x3133;
  const amrex::Real x3135 = x3112 * x1961;
  const amrex::Real x3136 = x3110 * x1973 + x3113 * x1992 + x3113 * x1993 -
                            x3113 * x1994 - x3134 * x1187 -
                            x678 * (x1694 + x1970 + x3122) + x793 * x3123 -
                            x793 * x3135;
  const amrex::Real x3137 = x2014 + x2284 * kf_qss[86] - x2285 * kf_qss[86] -
                            x2288 * kf_qss[86] + x3110 * x2001 + x3114 * x1999 -
                            x3115 * x1810 - x3134 * x1295 - x822 * x1720 -
                            x827 * x3136;
  const amrex::Real x3138 =
    x1816 * (-x1289 * (x1792 + x2026 + sc[1] * x1782) + x3114 * x2018 +
             x3117 * x2020 + x3118 * x2028 + x3118 * x2029 - x3120 * x2021 -
             x3136 * x1366 - x3137 * x1347);
  const amrex::Real x3139 = 0.84 * x905;
  const amrex::Real x3140 = 6.0 * x905;
  const amrex::Real x3141 = x3139 * x1232 + x3140 * x1233;
  const amrex::Real x3142 = 5.4675e+24 * x1238;
  const amrex::Real x3143 =
    x1237 - 4050000000000.0 * x2436 + x3141 * x1236 + x3142 * x1240;
  const amrex::Real x3144 = 0.84 * x1066 + x3140 * x1067;
  const amrex::Real x3145 = x3139 * x1084 + x3140 * x1082;
  const amrex::Real x3146 = 14145000.0 * refC;
  const amrex::Real x3147 = 1.18803e+59 * x1076;
  const amrex::Real x3148 = 66693675000000.0 * x1075 - 5.97e+29 * x2356 +
                            x3144 * x1071 + x3145 * x1087 + x3147 * x1078 -
                            x540 * x3146;
  const amrex::Real x3149 = x3148 * x2039;
  const amrex::Real x3150 = 0.84 * x906;
  const amrex::Real x3151 = 6.0 * x906;
  const amrex::Real x3152 = x955 * x3150 + x956 * x3151;
  const amrex::Real x3153 = 1.175628e+54 * x914;
  const amrex::Real x3154 = 1.878e+27 * refC;
  const amrex::Real x3155 = -x51 * x3154 + x959 * x3152 + x961 * x3153;
  const amrex::Real x3156 = x973 * x3150 + x974 * x3151;
  const amrex::Real x3157 = x81 * x3154;
  const amrex::Real x3158 = -x91 * x3157 + x977 * x3156 + x979 * x3153;
  const amrex::Real x3159 = x971 * x3155 - x982 * x3158 + x984 * x3158;
  const amrex::Real x3160 = x987 * x3155 + x989 * x3158;
  const amrex::Real x3161 =
    -x180 * x3159 - x3155 * x2898 + x968 * x3155 + x994 * x3160;
  const amrex::Real x3162 = x577 * x3161;
  const amrex::Real x3163 = x3150 * x1037 + x3151 * x1038;
  const amrex::Real x3164 = x3153 * x1043 - x3154 * x2383 + x3163 * x1041;
  const amrex::Real x3165 = x3164 * x1046;
  const amrex::Real x3166 = x306 * x3161;
  const amrex::Real x3167 = x928 * x3150 + x929 * x3151;
  const amrex::Real x3168 = -x453 * x3154 + x932 * x3167 + x934 * x3153;
  const amrex::Real x3169 = x3161 * x1017;
  const amrex::Real x3170 = x927 * x3168;
  const amrex::Real x3171 = x265 * x3169 - x3168 * x1030 + x3170 * x1031;
  const amrex::Real x3172 = x273 * x3165 - x3164 * x1051 + x3166 * x1049;
  const amrex::Real x3173 = x908 * x3150 + x910 * x3151;
  const amrex::Real x3174 = -x2409 * x3154 + x913 * x3173 + x919 * x3153;
  const amrex::Real x3175 = x941 * x3150 + x942 * x3151;
  const amrex::Real x3176 = -x2402 * x3154 + x945 * x3175 + x947 * x3153;
  const amrex::Real x3177 = x940 * x3176;
  const amrex::Real x3178 = x3161 * x1002 + x953 * x3177;
  const amrex::Real x3179 =
    x2411 * x3174 + x3174 * x1009 + x3178 * x1006 + x951 * x3177;
  const amrex::Real x3180 =
    x272 * x3169 + x3179 * x1016 + x924 * x3174 + x926 * x3170 + x937 * x3170;
  const amrex::Real x3181 =
    x3166 * x1026 - x3171 * x1034 + x3180 * x1024 + x464 * x3165 - x469 * x3172;
  const amrex::Real x3182 = -x3155 * x2924 + x3158 * x1101 + x3160 * x1103;
  const amrex::Real x3183 =
    x3161 * x1110 + x3164 * x1112 - x3164 * x1113 - x3182 * x1108;
  const amrex::Real x3184 = -x3148 * x1090 + x3162 * x1026 + x464 * x3149;
  const amrex::Real x3185 = -x3148 * x1095 + x3148 * x2048 + x3161 * x1060 +
                            x3181 * x1058 - x3182 * x1106 - x3183 * x1117 -
                            x483 * x3184;
  const amrex::Real x3186 = x3150 * x1141 + x3151 * x1142;
  const amrex::Real x3187 =
    1.175628e+54 * x2424 - x2423 * x3154 + x3186 * x1145;
  const amrex::Real x3188 =
    -x3159 * x1132 + x3160 * x1153 + x3187 * x1156 - x3187 * x1157;
  const amrex::Real x3189 = x3161 * x1127;
  const amrex::Real x3190 = x265 * x3189 - x3187 * x1151 - x464 * x3188;
  const amrex::Real x3191 = -x241 * x3182 + x3158 * x1133 + x3160 * x1131 +
                            x3161 * x1128 + x3181 * x1124 - x3183 * x1126 +
                            x3187 * x1162 - x478 * x3188 - x483 * x3190;
  const amrex::Real x3192 = x244 * x3189 - x3187 * x1172 - x584 * x3188;
  const amrex::Real x3193 =
    x3162 * x1176 - x3185 * x1121 + x3191 * x1169 - x583 * x3192 + x584 * x3149;
  const amrex::Real x3194 =
    x3041 + x3143 * x1245 + x3143 * x1247 + x3148 * x2036 + x3193 * x1185;
  const amrex::Real x3195 = x3139 * x1349 + x3140 * x1350;
  const amrex::Real x3196 = 3.072e+31 * x1358 - 9.6e+15 * x2448 + x3195 * x1353;
  const amrex::Real x3197 = x575 * x2734;
  const amrex::Real x3198 = -x3143 * x1326 + x3143 * x1327 + x3148 * x2061 +
                            x3193 * x1324 - x3197 * x1187;
  const amrex::Real x3199 =
    x3194 * x1365 - x3196 * x1361 + x3196 * x1363 - x3198 * x1366;
  const amrex::Real x3200 = x2734 * x2127;
  const amrex::Real x3201 =
    -x2250 * x3200 + x2734 * x2128 + x3148 * x2063 + x3193 * x1298;
  const amrex::Real x3202 = x3139 * x1304 + x3140 * x1305;
  const amrex::Real x3203 = 6.6e+18 * refC;
  const amrex::Real x3204 = 1.452e+37 * x1309;
  const amrex::Real x3205 = x3202 * x1308 + x3204 * x1311 - x851 * x3203;
  const amrex::Real x3206 = -x2246 * x2734 + x3148 * x2065 + x3193 * x1302 +
                            x3194 * x1331 - x3197 * x1295 - x3200 * x2243 -
                            x3201 * x1300 + x3205 * x1316 - x827 * x3198;
  const amrex::Real x3207 =
    x2734 * x2138 + x3143 * x1342 + x3194 * x1344 - x898 * x3201;
  const amrex::Real x3208 = (x3143 * x1370 + x3194 * x1293 + x3196 * x1372 -
                             x3199 * x1369 + x3206 * x1339 - x3207 * x1347) *
                            x1813;
  const amrex::Real x3209 = x3155 * x1854;
  const amrex::Real x3210 = 1.878e+27 * x2469;
  const amrex::Real x3211 = 1.175628e+54 * x1844;
  const amrex::Real x3212 =
    x66 * (-x3152 * x1840 + x3210 * x1489 - x3211 * x1841);
  const amrex::Real x3213 = x3210 * sc[24];
  const amrex::Real x3214 =
    -x101 * x3209 + x101 * x3212 + x3158 * x1857 - x3158 * x1858 -
    x99 * (-1.175628e+54 * x1852 - x3156 * x1849 + x91 * x3213);
  const amrex::Real x3215 =
    -x177 * x3209 + x177 * x3212 - x180 * x3214 - x3155 * x2965 + x3160 * x1863;
  const amrex::Real x3216 = x3210 * sc[22];
  const amrex::Real x3217 = (x3161 * x1883 - x3215 * x1885) * x340;
  const amrex::Real x3218 =
    x3161 * x1897 + x3176 * x1891 + x3176 * x2600 -
    x366 * (-1.175628e+54 * x1889 - x3175 * x1887 + x3210 * x1532) -
    x368 * x3217;
  const amrex::Real x3219 =
    x2479 * x3174 + x3174 * x1902 - x3174 * x1903 + x3178 * x1900 -
    x400 * (-1.175628e+54 * x1880 - x3173 * x1878 + x3210 * x1539) -
    x950 * x3218;
  const amrex::Real x3220 =
    x3161 * x1915 + x3168 * x1909 + x3170 * x1910 + x3170 * x1912 +
    x3179 * x1917 - x3215 * x1908 -
    x457 * (-x3167 * x1874 + x3210 * x1556 - x3211 * x1875) - x922 * x3219;
  const amrex::Real x3221 =
    -x304 * (x292 * x3216 - x3163 * x1870 - x3211 * x1872) + x3161 * x1921 +
    x3164 * x1923 + x3164 * x1924 - x3172 * x1564 + x3180 * x1867 -
    x3215 * x1108 - x3220 * x1034;
  const amrex::Real x3222 = 5.97e+29 * x1633;
  const amrex::Real x3223 = x3140 * x1828;
  const amrex::Real x3224 = -7.2075e+88 * x1836 + 4.65e+44 * x2975 -
                            (x3139 * x1829 + x3223 * x1830) * x1832;
  const amrex::Real x3225 =
    -x236 * (-1.175628e+54 * x2487 - x3186 * x1928 + x3210 * x1609) -
    x241 * x3215 + x3160 * x1938 + x3161 * x1940 + x3181 * x1936 +
    x3187 * x1931 + x3187 * x1932 - x3188 * x1521 - x3190 * x1585 -
    x3214 * x1132 - x3221 * x1126;
  const amrex::Real x3226 =
    x3148 * x1957 + x3148 * x2093 + x3161 * x1950 + x3181 * x1949 -
    x3184 * x1585 - x3185 * x1945 + x3191 * x1947 - x3215 * x1106 -
    x3221 * x1117 -
    x575 * (x1619 + x1655 + x1659 + x1660 - 66693675000000. * x1821 +
            14145000.0 * x1826 + x3224 + 1.99e+29 * refC * x1638 +
            sc[4] * x1617 + sc[8] * x1628 - x3144 * x1818 - x3145 * x1824 -
            x3147 * x1822 + x3222 * x1827) -
    x583 * x3225;
  const amrex::Real x3227 = (x3061 + x3224) * x789;
  const amrex::Real x3228 =
    x3051 + x3143 * x1992 + x3143 * x1993 - x3143 * x1994 + x3193 * x1973 -
    x3226 * x1187 -
    x678 * (4050000000000.0 * x1967 + x1969 - x3141 * x1968 - x3142 * x1964) +
    x793 * x3227;
  const amrex::Real x3229 =
    x868 * (6.6e+18 * x2007 - x3202 * x2006 - x3204 * x2009);
  const amrex::Real x3230 = x3205 * x2003;
  const amrex::Real x3231 = x2283 * x2734 - x2287 * x2734 - x2734 * x2179 +
                            x3193 * x2001 + x3194 * x1999 - x3201 * x1810 -
                            x3226 * x1295 - x827 * x3228 + x871 * x3229 -
                            x871 * x3230;
  const amrex::Real x3232 =
    x1816 * (-x1289 * (-3.072e+31 * x2025 + 9.6e+15 * x2499 - x3195 * x2022) +
             x3194 * x2018 + x3196 * x2028 + x3196 * x2029 - x3199 * x2021 +
             x3206 * x2020 - x3228 * x1366 - x3231 * x1347);
  const amrex::Real x3233 = x789 * (x1449 + x1988 + sc[3] * x1429);
  const amrex::Real x3234 = x1963 + x1995;
  const amrex::Real x3235 = x1974 + x3058 + x3234;
  const amrex::Real x3236 = x3235 + x793 * x3233 - (x1675 + x1970) * x678;
  const amrex::Real x3237 = x2016 + x3065;
  const amrex::Real x3238 = x3237 - x827 * x3236;
  const amrex::Real x3239 = x1816 * (x2032 - x3236 * x1366 - x3238 * x1347);
  const amrex::Real x3240 = x1242 - x667;
  const amrex::Real x3241 = x1186 + x1230;
  const amrex::Real x3242 = x3241 + x3240 * x1245 + x3240 * x1247;
  const amrex::Real x3243 = x1325 - x3240 * x1326 + x3240 * x1327;
  const amrex::Real x3244 = x1321 + x3242 * x1331 - x827 * x3243;
  const amrex::Real x3245 = x1340 + x3240 * x1342 + x3242 * x1344;
  const amrex::Real x3246 = x1364 + x3242 * x1365 - x3243 * x1366;
  const amrex::Real x3247 =
    x1813 * (x1373 + x3240 * x1370 + x3242 * x1293 + x3244 * x1339 -
             x3245 * x1347 - x3246 * x1369);
  const amrex::Real x3248 = x1959 + x3056;
  const amrex::Real x3249 = x3248 - (x1477 + x1838) * x575;
  const amrex::Real x3250 = (x1375 + x1406 + x1477 + x1988) * x789;
  const amrex::Real x3251 = x1976 + x3240 * x1992 + x3240 * x1993 -
                            x3240 * x1994 - x3249 * x1187 + x793 * x3250;
  const amrex::Real x3252 =
    x2015 + x3242 * x1999 - x3249 * x1295 - x822 * x1744 - x827 * x3251;
  const amrex::Real x3253 =
    x1816 * (x2030 - x1289 * (x2026 + sc[1] * x1790) + x3242 * x2018 +
             x3244 * x2020 - x3246 * x2021 - x3251 * x1366 - x3252 * x1347);
  const amrex::Real x3254 = x1088 - x550;
  const amrex::Real x3255 = x3254 * x2039;
  const amrex::Real x3256 = -x64 + x962;
  const amrex::Real x3257 = -x71 + x980;
  const amrex::Real x3258 = x971 * x3256 - x982 * x3257 + x984 * x3257;
  const amrex::Real x3259 = x987 * x3256 + x989 * x3257;
  const amrex::Real x3260 =
    -x180 * x3258 - x3256 * x2898 + x968 * x3256 + x994 * x3259;
  const amrex::Real x3261 = x577 * x3260;
  const amrex::Real x3262 = x1044 - x278;
  const amrex::Real x3263 = x3262 * x1046;
  const amrex::Real x3264 = x306 * x3260;
  const amrex::Real x3265 = -x438 + x935;
  const amrex::Real x3266 = x3260 * x1017;
  const amrex::Real x3267 = x927 * x3265;
  const amrex::Real x3268 = x265 * x3266 - x3265 * x1030 + x3267 * x1031;
  const amrex::Real x3269 = x273 * x3263 - x3262 * x1051 + x3264 * x1049;
  const amrex::Real x3270 = x954 + x3260 * x1002;
  const amrex::Real x3271 = x2218 + x3270 * x1006;
  const amrex::Real x3272 =
    x925 + x272 * x3266 + x3271 * x1016 + x926 * x3267 + x937 * x3267;
  const amrex::Real x3273 =
    x3264 * x1026 - x3268 * x1034 + x3272 * x1024 + x464 * x3263 - x469 * x3269;
  const amrex::Real x3274 = -x3256 * x2924 + x3257 * x1101 + x3259 * x1103;
  const amrex::Real x3275 =
    x3260 * x1110 + x3262 * x1112 - x3262 * x1113 - x3274 * x1108;
  const amrex::Real x3276 = -x3254 * x1090 + x3261 * x1026 + x464 * x3255;
  const amrex::Real x3277 =
    x486 * (-x3254 * x1095 + x3254 * x2048 + x3260 * x1060 + x3273 * x1058 -
            x3274 * x1106 - x3275 * x1117 - x483 * x3276);
  const amrex::Real x3278 = x1149 - x219;
  const amrex::Real x3279 =
    -x3258 * x1132 + x3259 * x1153 + x3278 * x1156 - x3278 * x1157;
  const amrex::Real x3280 = x3260 * x1127;
  const amrex::Real x3281 = x265 * x3280 - x3278 * x1151 - x464 * x3279;
  const amrex::Real x3282 = -x241 * x3274 + x3257 * x1133 + x3259 * x1131 +
                            x3260 * x1128 + x3273 * x1124 - x3275 * x1126 +
                            x3278 * x1162 - x478 * x3279 - x483 * x3281;
  const amrex::Real x3283 = x244 * x3280 - x3278 * x1172 - x584 * x3279;
  const amrex::Real x3284 =
    -x262 * x3277 + x3261 * x1176 + x3282 * x1169 - x583 * x3283 + x584 * x3255;
  const amrex::Real x3285 = x1229 + x1248;
  const amrex::Real x3286 = x3285 + x3254 * x2036 + x3284 * x1185;
  const amrex::Real x3287 = x1328 + x3254 * x2061 + x3284 * x1324;
  const amrex::Real x3288 = x1364 + x3286 * x1365 - x3287 * x1366;
  const amrex::Real x3289 = x3254 * x2063 + x3284 * x1298;
  const amrex::Real x3290 = x1317 + x3254 * x2065 + x3284 * x1302 +
                            x3286 * x1331 - x3289 * x1300 - x827 * x3287;
  const amrex::Real x3291 = x1343 + x3286 * x1344 - x898 * x3289;
  const amrex::Real x3292 = x1813 * (x1374 + x3286 * x1293 - x3288 * x1369 +
                                     x3290 * x1339 - x3291 * x1347);
  const amrex::Real x3293 = x3256 * x1854;
  const amrex::Real x3294 =
    x3125 - x101 * x3293 + x3257 * x1857 - x3257 * x1858;
  const amrex::Real x3295 =
    x2153 - x177 * x3293 - x180 * x3294 - x3256 * x2965 + x3259 * x1863;
  const amrex::Real x3296 = sc[29] * kf_qss[149];
  const amrex::Real x3297 = x3296 * x2086;
  const amrex::Real x3298 = (x3260 * x1883 - x3295 * x1885) * x340;
  const amrex::Real x3299 = x2270 + x3260 * x1897 - x368 * x3298;
  const amrex::Real x3300 = x2272 + x3270 * x1900 + x429 * x3297 - x950 * x3299;
  const amrex::Real x3301 = x2166 + x3260 * x1915 + x3265 * x1909 +
                            x3265 * x1911 + x3265 * x1913 + x3271 * x1917 -
                            x3295 * x1908 - x922 * x3300;
  const amrex::Real x3302 = x2170 + x3260 * x1921 + x3262 * x1923 +
                            x3262 * x1924 - x3269 * x1564 + x3272 * x1867 -
                            x3295 * x1108 - x3301 * x1034;
  const amrex::Real x3303 =
    -x236 *
      (x1597 + x1605 + x1930 + x1589 * sc[10] + x1591 * x1593 + x193 * x1490) -
    x241 * x3295 + x3259 * x1938 + x3260 * x1940 + x3273 * x1936 +
    x3278 * x1931 + x3278 * x1932 - x3279 * x1521 - x3281 * x1585 -
    x3294 * x1132 - x3302 * x1126;
  const amrex::Real x3304 = x3052 + x3254 * x1957 + x3254 * x2093 +
                            x3260 * x1950 + x3273 * x1949 - x3276 * x1585 -
                            x3277 * x1612 + x3282 * x1947 - x3295 * x1106 -
                            x3302 * x1117 - x583 * x3303;
  const amrex::Real x3305 = (x1414 + x1988) * x789;
  const amrex::Real x3306 = x3234 + x3284 * x1973 - x3304 * x1187 -
                            x678 * (x1970 + x1697 * sc[12]) + x793 * x3305;
  const amrex::Real x3307 = x2014 + x3284 * x2001 + x3286 * x1999 -
                            x3289 * x1810 - x3304 * x1295 - x827 * x3306;
  const amrex::Real x3308 =
    x1816 * (x2031 + x3286 * x2018 - x3288 * x2021 + x3290 * x2020 -
             x3306 * x1366 - x3307 * x1347);
  const amrex::Real x3309 = 1.0 * x1485;
  const amrex::Real x3310 = (x1382 + x1392 + x1988 + x3309) * x789;
  const amrex::Real x3311 =
    x3235 - x678 * (x1667 + x1970 + x3309) + x793 * x3310;
  const amrex::Real x3312 = x3237 - x827 * x3311;
  const amrex::Real x3313 = x1816 * (x2032 - x3311 * x1366 - x3312 * x1347);
  const amrex::Real x3314 = x1242 - x639;
  const amrex::Real x3315 = x3241 + x3314 * x1245 + x3314 * x1247;
  const amrex::Real x3316 = x1325 - x3314 * x1326 + x3314 * x1327;
  const amrex::Real x3317 = x1321 + x3315 * x1331 - x827 * x3316;
  const amrex::Real x3318 = x1340 + x3314 * x1342 + x3315 * x1344;
  const amrex::Real x3319 = x1364 + x3315 * x1365 - x3316 * x1366;
  const amrex::Real x3320 =
    x1813 * (x1373 + x3314 * x1370 + x3315 * x1293 + x3317 * x1339 -
             x3318 * x1347 - x3319 * x1369);
  const amrex::Real x3321 = (x1400 + x1988) * x789;
  const amrex::Real x3322 = x1976 + x3058 + x3314 * x1992 + x3314 * x1993 -
                            x3314 * x1994 + x793 * x3321;
  const amrex::Real x3323 = x3066 + x3315 * x1999 - x827 * x3322;
  const amrex::Real x3324 =
    x1816 * (x2031 + x3315 * x2018 + x3317 * x2020 - x3319 * x2021 -
             x3322 * x1366 - x3323 * x1347);
  const amrex::Real x3325 = -x397 + x920;
  const amrex::Real x3326 = x425 * x397;
  const amrex::Real x3327 =
    x1007 + x2411 * x3325 + x3325 * x1009 - x429 * x3326;
  const amrex::Real x3328 = x1019 + x938 + x3327 * x1016 + x924 * x3325;
  const amrex::Real x3329 = x1035 + x1054 + x3328 * x1024;
  const amrex::Real x3330 = x1061 + x1098 + x1119;
  const amrex::Real x3331 = x3330 + x3329 * x1058;
  const amrex::Real x3332 = x1137 + x1165;
  const amrex::Real x3333 = x3332 + x3329 * x1124;
  const amrex::Real x3334 = x1181 - x3331 * x1121 + x3333 * x1169;
  const amrex::Real x3335 = x1297 + x3334 * x1298;
  const amrex::Real x3336 = x1249 + x3334 * x1185;
  const amrex::Real x3337 = x1343 + x3336 * x1344 - x898 * x3335;
  const amrex::Real x3338 = x1323 + x1328;
  const amrex::Real x3339 = x3338 + x3334 * x1324;
  const amrex::Real x3340 =
    x1319 + x3334 * x1302 - x3335 * x1300 + x3336 * x1331 - x827 * x3339;
  const amrex::Real x3341 = x1364 + x3336 * x1365 - x3339 * x1366;
  const amrex::Real x3342 = x1813 * (x1374 + x3336 * x1293 - x3337 * x1347 +
                                     x3340 * x1339 - x3341 * x1369);
  const amrex::Real x3343 =
    x1901 + x2864 + x2479 * x3325 + x3325 * x1902 - x3325 * x1903;
  const amrex::Real x3344 =
    x1916 + x2167 + x2861 + x3327 * x1917 - x922 * x3343;
  const amrex::Real x3345 =
    x2869 - x304 * (x1568 + x1569 + x1573 + x1581 + x1873 + x1577 * x1575) +
    x3328 * x1867 - x3344 * x1034;
  const amrex::Real x3346 = x1935 + x2873 + x3329 * x1936 - x3345 * x1126;
  const amrex::Real x3347 = x1951 + x2876;
  const amrex::Real x3348 = x1959 + x3347 + x3329 * x1949 - x3331 * x1945 +
                            x3333 * x1947 - x3345 * x1117 -
                            x575 * (x1472 + x1613 + x1838) - x583 * x3346;
  const amrex::Real x3349 = (x1472 + x1988) * x789;
  const amrex::Real x3350 = x3234 + x3334 * x1973 - x3348 * x1187 +
                            x793 * x3349 - (x1709 + x1970) * x678;
  const amrex::Real x3351 = x2014 + x3334 * x2001 - x3335 * x1810 +
                            x3336 * x1999 - x3348 * x1295 - x827 * x3350;
  const amrex::Real x3352 =
    x1816 * (x2031 + x3336 * x2018 + x3340 * x2020 - x3341 * x2021 -
             x3350 * x1366 - x3351 * x1347);
  const amrex::Real x3353 = -x19 + x962;
  const amrex::Real x3354 = x963 * x3353;
  const amrex::Real x3355 = x964 * x3354;
  const amrex::Real x3356 = x990 + x3354 * x2373;
  const amrex::Real x3357 = x985 + x3354 * x2371;
  const amrex::Real x3358 =
    -x180 * x3357 - x183 * x3355 + x967 * x3354 + x994 * x3356;
  const amrex::Real x3359 = x577 * x3358;
  const amrex::Real x3360 = x1093 + x3359 * x1026;
  const amrex::Real x3361 = x306 * x3358;
  const amrex::Real x3362 = x3358 * x1017;
  const amrex::Real x3363 = x1032 + x265 * x3362;
  const amrex::Real x3364 = x1052 + x3361 * x1049;
  const amrex::Real x3365 = x954 + x3358 * x1002;
  const amrex::Real x3366 = x2218 + x3365 * x1006;
  const amrex::Real x3367 = x939 + x272 * x3362 + x3366 * x1016;
  const amrex::Real x3368 =
    x1048 + x3361 * x1026 - x3363 * x1034 + x3367 * x1024 - x469 * x3364;
  const amrex::Real x3369 = x1102 + x3356 * x1103 - x484 * x3355;
  const amrex::Real x3370 = x1114 + x3358 * x1110 - x3369 * x1108;
  const amrex::Real x3371 = x1097 + x3358 * x1060 + x3368 * x1058 -
                            x3369 * x1106 - x3370 * x1117 - x483 * x3360;
  const amrex::Real x3372 = x1158 + x3356 * x1153 - x3357 * x1132;
  const amrex::Real x3373 = x3358 * x1127;
  const amrex::Real x3374 = x1152 + x265 * x3373 - x464 * x3372;
  const amrex::Real x3375 = x1134 + x1163;
  const amrex::Real x3376 = x3375 - x241 * x3369 + x3356 * x1131 +
                            x3358 * x1128 + x3368 * x1124 - x3370 * x1126 -
                            x478 * x3372 - x483 * x3374;
  const amrex::Real x3377 = x1173 + x244 * x3373 - x584 * x3372;
  const amrex::Real x3378 =
    x1179 + x3359 * x1176 - x3371 * x1121 + x3376 * x1169 - x583 * x3377;
  const amrex::Real x3379 = x1297 + x3378 * x1298;
  const amrex::Real x3380 = x1249 + x3378 * x1185;
  const amrex::Real x3381 = x3338 + x3378 * x1324;
  const amrex::Real x3382 =
    x1319 + x3378 * x1302 - x3379 * x1300 + x3380 * x1331 - x827 * x3381;
  const amrex::Real x3383 = x1343 + x3380 * x1344 - x898 * x3379;
  const amrex::Real x3384 = x1364 + x3380 * x1365 - x3381 * x1366;
  const amrex::Real x3385 = x1813 * (x1374 + x3380 * x1293 + x3382 * x1339 -
                                     x3383 * x1347 - x3384 * x1369);
  const amrex::Real x3386 = x3353 * x1854;
  const amrex::Real x3387 = x2147 + x2149 - x101 * x3386;
  const amrex::Real x3388 =
    x2153 - x177 * x3386 - x180 * x3387 - x3355 * x1586 + x3356 * x1863;
  const amrex::Real x3389 = x3358 * x1882;
  const amrex::Real x3390 = x340 * (x338 * x3389 - x3388 * x1885);
  const amrex::Real x3391 = x2270 + x3358 * x1897 - x368 * x3390;
  const amrex::Real x3392 = x2272 + x3365 * x1900 - x950 * x3391;
  const amrex::Real x3393 =
    x2167 + x3366 * x1917 - x3388 * x1908 + x461 * x3389 - x922 * x3392;
  const amrex::Real x3394 = x2659 + x3358 * x1921 - x3364 * x1564 +
                            x3367 * x1867 - x3388 * x1108 - x3393 * x1034;
  const amrex::Real x3395 = x1933 + x2174;
  const amrex::Real x3396 = x3395 - x241 * x3388 + x3356 * x1938 +
                            x3358 * x1940 + x3368 * x1936 - x3372 * x1521 -
                            x3374 * x1585 - x3387 * x1132 - x3394 * x1126;
  const amrex::Real x3397 = x3053 - x3360 * x1585 + x3368 * x1949 -
                            x3371 * x1945 + x3376 * x1947 - x3388 * x1106 -
                            x3394 * x1117 + x577 * x3389 - x583 * x3396;
  const amrex::Real x3398 = (x1438 + x1988) * x789;
  const amrex::Real x3399 = x1963 + x1971;
  const amrex::Real x3400 =
    x1995 + x3399 + x3378 * x1973 - x3397 * x1187 + x793 * x3398;
  const amrex::Real x3401 = x2014 + x3378 * x2001 - x3379 * x1810 +
                            x3380 * x1999 - x3397 * x1295 - x827 * x3400;
  const amrex::Real x3402 =
    x1816 * (x2031 + x3380 * x2018 + x3382 * x2020 - x3384 * x2021 -
             x3400 * x1366 - x3401 * x1347);
  const amrex::Real x3403 = -x4 + x962;
  const amrex::Real x3404 = x4 * x175;
  const amrex::Real x3405 = -x109 * x3404 + x965 * x3403;
  const amrex::Real x3406 = x985 + x971 * x3403;
  const amrex::Real x3407 = x990 + x987 * x3403;
  const amrex::Real x3408 =
    -x180 * x3406 - x183 * x3405 - x67 * x3404 + x968 * x3403 + x994 * x3407;
  const amrex::Real x3409 = x306 * x3408;
  const amrex::Real x3410 = x3408 * x1017;
  const amrex::Real x3411 = x1032 + x265 * x3410;
  const amrex::Real x3412 = x1052 + x3409 * x1049;
  const amrex::Real x3413 = x954 + x3408 * x1002;
  const amrex::Real x3414 = x2218 + x3413 * x1006;
  const amrex::Real x3415 = x939 + x272 * x3410 + x3414 * x1016;
  const amrex::Real x3416 =
    x1048 + x3409 * x1026 - x3411 * x1034 + x3415 * x1024 - x469 * x3412;
  const amrex::Real x3417 = x1102 + x3407 * x1103 - x484 * x3405;
  const amrex::Real x3418 = x1114 + x3408 * x1110 - x3417 * x1108;
  const amrex::Real x3419 = x577 * x3408;
  const amrex::Real x3420 = x1093 + x3419 * x1026;
  const amrex::Real x3421 = x1097 + x3408 * x1060 + x3416 * x1058 -
                            x3417 * x1106 - x3418 * x1117 - x483 * x3420;
  const amrex::Real x3422 = x1158 - x3406 * x1132 + x3407 * x1153;
  const amrex::Real x3423 = x3408 * x1127;
  const amrex::Real x3424 = x1152 + x265 * x3423 - x464 * x3422;
  const amrex::Real x3425 = x3375 - x241 * x3417 + x3407 * x1131 +
                            x3408 * x1128 + x3416 * x1124 - x3418 * x1126 -
                            x478 * x3422 - x483 * x3424;
  const amrex::Real x3426 = x1173 + x244 * x3423 - x584 * x3422;
  const amrex::Real x3427 =
    x1179 + x3419 * x1176 - x3421 * x1121 + x3425 * x1169 - x583 * x3426;
  const amrex::Real x3428 = x1249 + x3427 * x1185;
  const amrex::Real x3429 = x1297 + x3427 * x1298;
  const amrex::Real x3430 = x3338 + x3427 * x1324;
  const amrex::Real x3431 =
    x1319 + x3427 * x1302 + x3428 * x1331 - x3429 * x1300 - x827 * x3430;
  const amrex::Real x3432 = x1343 + x3428 * x1344 - x898 * x3429;
  const amrex::Real x3433 = x1364 + x3428 * x1365 - x3430 * x1366;
  const amrex::Real x3434 = x1813 * (x1374 + x3428 * x1293 + x3431 * x1339 -
                                     x3432 * x1347 - x3433 * x1369);
  const amrex::Real x3435 = x3403 * x1854;
  const amrex::Real x3436 =
    x1859 + x2147 - x101 * x3435 - (x1507 + x1853) * x99;
  const amrex::Real x3437 = x2153 - x177 * x3435 - x180 * x3436 +
                            x3404 * x1504 - x3405 * x1586 + x3407 * x1863;
  const amrex::Real x3438 = (x3408 * x1883 - x3437 * x1885) * x340;
  const amrex::Real x3439 = x2270 + x3408 * x1897 - x368 * x3438;
  const amrex::Real x3440 = x2272 + x3413 * x1900 - x950 * x3439;
  const amrex::Real x3441 =
    x2167 + x3408 * x1915 + x3414 * x1917 - x3437 * x1908 - x922 * x3440;
  const amrex::Real x3442 = x2659 + x3408 * x1921 - x3412 * x1564 +
                            x3415 * x1867 - x3437 * x1108 - x3441 * x1034;
  const amrex::Real x3443 = x1933 - x241 * x3437 + x3407 * x1938 +
                            x3408 * x1940 + x3416 * x1936 - x3422 * x1521 -
                            x3424 * x1585 - x3436 * x1132 - x3442 * x1126 -
                            (x1606 + x1930) * x236;
  const amrex::Real x3444 = x1958 + x3408 * x1950 + x3416 * x1949 -
                            x3420 * x1585 - x3421 * x1945 + x3425 * x1947 -
                            x3437 * x1106 - x3442 * x1117 - x583 * x3443 -
                            (x1620 + x1838) * x575;
  const amrex::Real x3445 = x586 * x3444;
  const amrex::Real x3446 = x1996 + x3399;
  const amrex::Real x3447 = x3446 + x3427 * x1973 - x680 * x3445;
  const amrex::Real x3448 = x2014 + x3427 * x2001 + x3428 * x1999 -
                            x3429 * x1810 - x824 * x3445 - x827 * x3447;
  const amrex::Real x3449 =
    x1816 * (x2031 + x3428 * x2018 + x3431 * x2020 - x3433 * x2021 -
             x3447 * x1366 - x3448 * x1347);
  const amrex::Real x3450 = -x150 + x935;
  const amrex::Real x3451 = x927 * x3450;
  const amrex::Real x3452 = x1029 - x3450 * x1030 + x3451 * x1031;
  const amrex::Real x3453 = x175 * x150;
  const amrex::Real x3454 = x1053 - x3453 * x1108;
  const amrex::Real x3455 =
    x1020 + x925 - x3453 * x1908 + x926 * x3451 + x937 * x3451;
  const amrex::Real x3456 =
    x1028 + x1048 - x3452 * x1034 + x3455 * x1024 - x469 * x3454;
  const amrex::Real x3457 = x3330 + x3456 * x1058;
  const amrex::Real x3458 = x3332 + x3456 * x1124;
  const amrex::Real x3459 = x1181 - x3457 * x1121 + x3458 * x1169;
  const amrex::Real x3460 = x1249 + x3459 * x1185;
  const amrex::Real x3461 = x3338 + x3459 * x1324;
  const amrex::Real x3462 = x1364 + x3460 * x1365 - x3461 * x1366;
  const amrex::Real x3463 = x1297 + x3459 * x1298;
  const amrex::Real x3464 =
    x1319 + x3459 * x1302 + x3460 * x1331 - x3463 * x1300 - x827 * x3461;
  const amrex::Real x3465 = x1343 + x3460 * x1344 - x898 * x3463;
  const amrex::Real x3466 = x1813 * (x1374 + x3460 * x1293 - x3462 * x1369 +
                                     x3464 * x1339 - x3465 * x1347);
  const amrex::Real x3467 = x1918 + x2866 + x3450 * x1909 + x3450 * x1911 +
                            x3450 * x1913 - x457 * (x1876 + x452 * x1490);
  const amrex::Real x3468 = x1922 + x1925 + x2868 - x3454 * x1564 +
                            x3455 * x1867 - x3467 * x1034 -
                            (x1582 + x1873) * x304;
  const amrex::Real x3469 = x1935 + x2772 + x2872 + x3456 * x1936 -
                            x3468 * x1126 - (x1594 + x1930) * x236;
  const amrex::Real x3470 = x3054 + x3347 + x3456 * x1949 - x3457 * x1945 +
                            x3458 * x1947 - x3468 * x1117 - x583 * x3469;
  const amrex::Real x3471 = x3446 + x3459 * x1973 - x3470 * x1187;
  const amrex::Real x3472 = x2014 + x3459 * x2001 + x3460 * x1999 -
                            x3463 * x1810 - x3470 * x1295 - x827 * x3471;
  const amrex::Real x3473 =
    x1816 * (x2031 + x3460 * x2018 - x3462 * x2021 + x3464 * x2020 -
             x3471 * x1366 - x3472 * x1347);
  const amrex::Real x3474 = x966 + x96 * x175;
  const amrex::Real x3475 = -x96 + x980;
  const amrex::Real x3476 = x972 - x982 * x3475 + x984 * x3475;
  const amrex::Real x3477 = x988 + x989 * x3475;
  const amrex::Real x3478 = x969 - x180 * x3476 - x183 * x3474 + x994 * x3477;
  const amrex::Real x3479 = x577 * x3478;
  const amrex::Real x3480 = x3478 * x1017;
  const amrex::Real x3481 = x1032 + x265 * x3480;
  const amrex::Real x3482 = x306 * x3478;
  const amrex::Real x3483 = x1052 + x3482 * x1049;
  const amrex::Real x3484 = x954 + x3478 * x1002;
  const amrex::Real x3485 = x2218 + x3484 * x1006;
  const amrex::Real x3486 = x939 + x272 * x3480 + x3485 * x1016;
  const amrex::Real x3487 =
    x1048 - x3481 * x1034 + x3482 * x1026 + x3486 * x1024 - x469 * x3483;
  const amrex::Real x3488 = x3475 * x1101 + x3477 * x1103 - x484 * x3474;
  const amrex::Real x3489 = x1114 + x3478 * x1110 - x3488 * x1108;
  const amrex::Real x3490 = x1093 + x3479 * x1026;
  const amrex::Real x3491 = x1097 + x3478 * x1060 + x3487 * x1058 -
                            x3488 * x1106 - x3489 * x1117 - x483 * x3490;
  const amrex::Real x3492 = x1158 - x3476 * x1132 + x3477 * x1153;
  const amrex::Real x3493 = x3478 * x1127;
  const amrex::Real x3494 = x1152 + x265 * x3493 - x464 * x3492;
  const amrex::Real x3495 = x1163 - x241 * x3488 + x3475 * x1133 +
                            x3477 * x1131 + x3478 * x1128 + x3487 * x1124 -
                            x3489 * x1126 - x478 * x3492 - x483 * x3494;
  const amrex::Real x3496 = x1173 + x244 * x3493 - x584 * x3492;
  const amrex::Real x3497 =
    x1179 + x3479 * x1176 - x3491 * x1121 + x3495 * x1169 - x583 * x3496;
  const amrex::Real x3498 = x1249 + x3497 * x1185;
  const amrex::Real x3499 = x1297 + x3497 * x1298;
  const amrex::Real x3500 = x3338 + x3497 * x1324;
  const amrex::Real x3501 =
    x1319 + x3497 * x1302 + x3498 * x1331 - x3499 * x1300 - x827 * x3500;
  const amrex::Real x3502 = x1343 + x3498 * x1344 - x898 * x3499;
  const amrex::Real x3503 = x1364 + x3498 * x1365 - x3500 * x1366;
  const amrex::Real x3504 = x1813 * (x1374 + x3498 * x1293 + x3501 * x1339 -
                                     x3502 * x1347 - x3503 * x1369);
  const amrex::Real x3505 = x66 * (x1847 + x50 * x1490);
  const amrex::Real x3506 = x1856 + x101 * x3505 + x3475 * x1857 -
                            x3475 * x1858 - (x1505 + x1853) * x99;
  const amrex::Real x3507 =
    x1862 + x177 * x3505 - x180 * x3506 - x3474 * x1586 + x3477 * x1863;
  const amrex::Real x3508 = x340 * (x3478 * x1883 - x3507 * x1885);
  const amrex::Real x3509 = x2270 + x3478 * x1897 - x368 * x3508;
  const amrex::Real x3510 = x2272 + x3484 * x1900 - x950 * x3509;
  const amrex::Real x3511 =
    x2167 + x3478 * x1915 + x3485 * x1917 - x3507 * x1908 - x922 * x3510;
  const amrex::Real x3512 = x1925 + x3478 * x1921 - x3483 * x1564 +
                            x3486 * x1867 - x3507 * x1108 - x3511 * x1034 -
                            (x1574 + x1873) * x304;
  const amrex::Real x3513 = x3395 - x241 * x3507 + x3477 * x1938 +
                            x3478 * x1940 + x3487 * x1936 - x3492 * x1521 -
                            x3494 * x1585 - x3506 * x1132 - x3512 * x1126;
  const amrex::Real x3514 = x3053 + x3478 * x1950 + x3487 * x1949 -
                            x3490 * x1585 - x3491 * x1945 + x3495 * x1947 -
                            x3507 * x1106 - x3512 * x1117 - x583 * x3513;
  const amrex::Real x3515 = x3446 + x3497 * x1973 - x3514 * x1187;
  const amrex::Real x3516 = x2014 + x3497 * x2001 + x3498 * x1999 -
                            x3499 * x1810 - x3514 * x1295 - x827 * x3515;
  const amrex::Real x3517 =
    x1816 * (x2031 + x3498 * x2018 + x3501 * x2020 - x3503 * x2021 -
             x3515 * x1366 - x3516 * x1347);
  const amrex::Real x3518 = x123 * x175;
  const amrex::Real x3519 = x1033 - x3518 * x1908;
  const amrex::Real x3520 = x1044 - x123;
  const amrex::Real x3521 = x3520 * x1046;
  const amrex::Real x3522 = x1050 + x273 * x3521 - x3520 * x1051;
  const amrex::Real x3523 =
    x1025 + x1028 - x3518 * x1108 - x3519 * x1034 + x464 * x3521 - x469 * x3522;
  const amrex::Real x3524 = x1094 - x3518 * x1106;
  const amrex::Real x3525 = x2046 + x3520 * x1112 - x3520 * x1113;
  const amrex::Real x3526 =
    x1097 + x2049 + x3523 * x1058 - x3525 * x1117 - x483 * x3524;
  const amrex::Real x3527 = x1161 - x241 * x3518;
  const amrex::Real x3528 =
    x1136 + x1164 + x3523 * x1124 - x3525 * x1126 - x483 * x3527;
  const amrex::Real x3529 = x1181 - x3526 * x1121 + x3528 * x1169;
  const amrex::Real x3530 = x1249 + x3529 * x1185;
  const amrex::Real x3531 = x3338 + x3529 * x1324;
  const amrex::Real x3532 = x1297 + x3529 * x1298;
  const amrex::Real x3533 =
    x1319 + x3529 * x1302 + x3530 * x1331 - x3532 * x1300 - x827 * x3531;
  const amrex::Real x3534 = x1364 + x3530 * x1365 - x3531 * x1366;
  const amrex::Real x3535 = x1343 + x3530 * x1344 - x898 * x3532;
  const amrex::Real x3536 = x1813 * (x1374 + x3530 * x1293 + x3533 * x1339 -
                                     x3534 * x1369 - x3535 * x1347);
  const amrex::Real x3537 = x1860 + x2147 - (x1506 + x1853) * x99;
  const amrex::Real x3538 = x2154 - x180 * x3537;
  const amrex::Real x3539 = x340 * (x1884 - x3538 * x1885);
  const amrex::Real x3540 = x2161 - x368 * x3539;
  const amrex::Real x3541 =
    x1906 - x400 * (x1881 + x384 * x1490) - x950 * x3540;
  const amrex::Real x3542 =
    x1919 - x3538 * x1908 - x922 * x3541 - (x1558 + x1876) * x457;
  const amrex::Real x3543 = x2171 + x3520 * x1923 + x3520 * x1924 -
                            x3522 * x1564 - x3538 * x1108 - x3542 * x1034;
  const amrex::Real x3544 = x1934 + x1941 + x2174 - x241 * x3538 +
                            x3523 * x1936 - x3527 * x1585 - x3537 * x1132 -
                            x3543 * x1126;
  const amrex::Real x3545 = x1951 + x3053 + x3523 * x1949 - x3524 * x1585 -
                            x3526 * x1945 + x3528 * x1947 - x3538 * x1106 -
                            x3543 * x1117 - x583 * x3544;
  const amrex::Real x3546 = x3446 + x3529 * x1973 - x3545 * x1187;
  const amrex::Real x3547 = x2014 + x3529 * x2001 + x3530 * x1999 -
                            x3532 * x1810 - x3545 * x1295 - x827 * x3546;
  const amrex::Real x3548 =
    x1816 * (x2031 + x3530 * x2018 + x3533 * x2020 - x3534 * x2021 -
             x3546 * x1366 - x3547 * x1347);
  const amrex::Real x3549 = x1105 + x175 * x153;
  const amrex::Real x3550 = x1115 - x3549 * x1108;
  const amrex::Real x3551 = x1099 - x3549 * x1106 - x3550 * x1117;
  const amrex::Real x3552 = x1149 - x153;
  const amrex::Real x3553 = x1154 + x3552 * x1156 - x3552 * x1157;
  const amrex::Real x3554 = x1140 - x3552 * x1151 - x464 * x3553;
  const amrex::Real x3555 = x1125 + x1129 + x1135 - x241 * x3549 -
                            x3550 * x1126 + x3552 * x1162 - x478 * x3553 -
                            x483 * x3554;
  const amrex::Real x3556 = x1171 - x3552 * x1172 - x584 * x3553;
  const amrex::Real x3557 =
    x1180 - x3551 * x1121 + x3555 * x1169 - x583 * x3556;
  const amrex::Real x3558 = x1249 + x3557 * x1185;
  const amrex::Real x3559 = x1297 + x3557 * x1298;
  const amrex::Real x3560 = x1343 + x3558 * x1344 - x898 * x3559;
  const amrex::Real x3561 = x3338 + x3557 * x1324;
  const amrex::Real x3562 =
    x1319 + x3557 * x1302 + x3558 * x1331 - x3559 * x1300 - x827 * x3561;
  const amrex::Real x3563 = x1364 + x3558 * x1365 - x3561 * x1366;
  const amrex::Real x3564 = x1813 * (x1374 + x3558 * x1293 - x3560 * x1347 +
                                     x3562 * x1339 - x3563 * x1369);
  const amrex::Real x3565 = x66 * (x1847 + x14 * sc[1]);
  const amrex::Real x3566 = x2150 + x101 * x3565;
  const amrex::Real x3567 = x1865 + x177 * x3565 - x180 * x3566;
  const amrex::Real x3568 = x340 * (x1884 - x3567 * x1885);
  const amrex::Real x3569 = x2161 - x368 * x3568;
  const amrex::Real x3570 = x2164 - x950 * x3569;
  const amrex::Real x3571 =
    x1919 - x3567 * x1908 - x922 * x3570 - (x1561 + x1876) * x457;
  const amrex::Real x3572 = x1926 + x2870;
  const amrex::Real x3573 = x3572 - x3567 * x1108 - x3571 * x1034;
  const amrex::Real x3574 = x1942 + x2174;
  const amrex::Real x3575 = x3574 - x241 * x3567 + x3552 * x1931 +
                            x3552 * x1932 - x3553 * x1521 - x3554 * x1585 -
                            x3566 * x1132 - x3573 * x1126;
  const amrex::Real x3576 = x1952 + x3054;
  const amrex::Real x3577 = x3576 - x3551 * x1945 + x3555 * x1947 -
                            x3567 * x1106 - x3573 * x1117 - x583 * x3575;
  const amrex::Real x3578 = x3446 + x3557 * x1973 - x3577 * x1187;
  const amrex::Real x3579 = x2014 + x3557 * x2001 + x3558 * x1999 -
                            x3559 * x1810 - x3577 * x1295 - x827 * x3578;
  const amrex::Real x3580 =
    x1816 * (x2031 + x3558 * x2018 + x3562 * x2020 - x3563 * x2021 -
             x3578 * x1366 - x3579 * x1347);
  const amrex::Real x3581 = x1149 - x224;
  const amrex::Real x3582 = x1154 + x3581 * x1156 - x3581 * x1157;
  const amrex::Real x3583 = x1171 - x3581 * x1172 - x584 * x3582;
  const amrex::Real x3584 = x1140 - x3581 * x1151 - x464 * x3582;
  const amrex::Real x3585 = x1138 + x3581 * x1162 - x478 * x3582 - x483 * x3584;
  const amrex::Real x3586 = x1122 + x1180 + x3585 * x1169 - x583 * x3583;
  const amrex::Real x3587 = x1249 + x3586 * x1185;
  const amrex::Real x3588 = x3338 + x3586 * x1324;
  const amrex::Real x3589 = x1364 + x3587 * x1365 - x3588 * x1366;
  const amrex::Real x3590 = x1297 + x3586 * x1298;
  const amrex::Real x3591 = x1343 + x3587 * x1344 - x898 * x3590;
  const amrex::Real x3592 =
    x1319 + x3586 * x1302 + x3587 * x1331 - x3590 * x1300 - x827 * x3588;
  const amrex::Real x3593 = x1813 * (x1374 + x3587 * x1293 - x3589 * x1369 -
                                     x3591 * x1347 + x3592 * x1339);
  const amrex::Real x3594 = (x1496 + x1847) * x66;
  const amrex::Real x3595 = x2150 + x101 * x3594;
  const amrex::Real x3596 = x1865 + x177 * x3594 - x180 * x3595;
  const amrex::Real x3597 = x1548 * x2086;
  const amrex::Real x3598 = x340 * (x1884 - x3596 * x1885);
  const amrex::Real x3599 = x2161 - x368 * x3598;
  const amrex::Real x3600 = x2164 + x429 * x3597 - x950 * x3599;
  const amrex::Real x3601 = x2168 - x3596 * x1908 - x922 * x3600;
  const amrex::Real x3602 = x3572 - x3596 * x1108 - x3601 * x1034;
  const amrex::Real x3603 = x3574 - x241 * x3596 + x3581 * x1931 +
                            x3581 * x1932 - x3582 * x1521 - x3584 * x1585 -
                            x3595 * x1132 - x3602 * x1126;
  const amrex::Real x3604 = x1946 + x3576 + x3585 * x1947 - x3596 * x1106 -
                            x3602 * x1117 - x583 * x3603;
  const amrex::Real x3605 = x3446 + x3586 * x1973 - x3604 * x1187;
  const amrex::Real x3606 = x2014 + x3586 * x2001 + x3587 * x1999 -
                            x3590 * x1810 - x3604 * x1295 - x827 * x3605;
  const amrex::Real x3607 =
    x1816 * (x2031 + x3587 * x2018 - x3589 * x2021 + x3592 * x2020 -
             x3605 * x1366 - x3606 * x1347);
  const amrex::Real x3608 = x1088 - x164;
  const amrex::Real x3609 = x3608 * x2039;
  const amrex::Real x3610 = x164 * x175;
  const amrex::Real x3611 = x1064 - x3608 * x1090 + x464 * x3609;
  const amrex::Real x3612 =
    x1118 + x2842 - x3608 * x1095 + x3608 * x2048 - x483 * x3611;
  const amrex::Real x3613 = x1175 - x241 * x3610;
  const amrex::Real x3614 =
    x1170 + x1177 - x3610 * x1106 - x3612 * x1121 - x583 * x3613 + x584 * x3609;
  const amrex::Real x3615 = x3608 * x2063 + x3614 * x1298;
  const amrex::Real x3616 = x3285 + x3608 * x2036 + x3614 * x1185;
  const amrex::Real x3617 = x1328 + x3608 * x2061 + x3614 * x1324;
  const amrex::Real x3618 = x1317 + x3608 * x2065 + x3614 * x1302 -
                            x3615 * x1300 + x3616 * x1331 - x827 * x3617;
  const amrex::Real x3619 = x1364 + x3616 * x1365 - x3617 * x1366;
  const amrex::Real x3620 = x1343 + x3616 * x1344 - x898 * x3615;
  const amrex::Real x3621 = x1813 * (x1374 + x3616 * x1293 + x3618 * x1339 -
                                     x3619 * x1369 - x3620 * x1347);
  const amrex::Real x3622 = x66 * (x1847 + x63 * sc[1]);
  const amrex::Real x3623 = x2150 + x101 * x3622;
  const amrex::Real x3624 = x1865 + x177 * x3622 - x180 * x3623;
  const amrex::Real x3625 = x340 * (x1884 - x3624 * x1885);
  const amrex::Real x3626 =
    x1898 - x366 * (x1890 + x359 * x1490) - x368 * x3625;
  const amrex::Real x3627 =
    x1906 - x400 * (x1881 + x392 * sc[1]) - x950 * x3626;
  const amrex::Real x3628 = x2168 - x3624 * x1908 - x922 * x3627;
  const amrex::Real x3629 = x3572 - x3624 * x1108 - x3628 * x1034;
  const amrex::Real x3630 = x1943 + x2174;
  const amrex::Real x3631 =
    x3630 - x241 * x3624 - x3623 * x1132 - x3629 * x1126;
  const amrex::Real x3632 = x1953 + x3052 + x3608 * x1957 + x3608 * x2093 -
                            x3611 * x1585 - x3612 * x1945 - x3624 * x1106 -
                            x3629 * x1117 - x583 * x3631;
  const amrex::Real x3633 = x3446 + x3614 * x1973 - x3632 * x1187;
  const amrex::Real x3634 = x2014 + x3614 * x2001 - x3615 * x1810 +
                            x3616 * x1999 - x3632 * x1295 - x827 * x3633;
  const amrex::Real x3635 =
    x1816 * (x2031 + x3616 * x2018 + x3618 * x2020 - x3619 * x2021 -
             x3633 * x1366 - x3634 * x1347);
  const amrex::Real x3636 = x66 * (x18 + x1847);
  const amrex::Real x3637 = x2150 + x101 * x3636;
  const amrex::Real x3638 = x1865 - x175 * x1511 + x177 * x3636 - x180 * x3637;
  const amrex::Real x3639 = x425 * kf_qss[191];
  const amrex::Real x3640 = x155 * x3639;
  const amrex::Real x3641 =
    x340 * (x1884 - x3638 * x1885 - x336 * x155 * kf_qss[189]);
  const amrex::Real x3642 = x2161 - x368 * x3641;
  const amrex::Real x3643 = x2164 + x429 * x3640 - x950 * x3642;
  const amrex::Real x3644 = x2168 - x3638 * x1908 - x922 * x3643;
  const amrex::Real x3645 = x3572 - x3638 * x1108 - x3644 * x1034;
  const amrex::Real x3646 =
    x3630 - x241 * x3638 - x3637 * x1132 - x3645 * x1126;
  const amrex::Real x3647 = x1954 + x3054;
  const amrex::Real x3648 =
    x3647 - x3638 * x1106 - x3645 * x1117 - x583 * x3646;
  const amrex::Real x3649 = x1997 - x3648 * x1187;
  const amrex::Real x3650 = x2016 - x3648 * x1295 - x827 * x3649;
  const amrex::Real x3651 = x1816 * (x2032 - x3649 * x1366 - x3650 * x1347);
  const amrex::Real x3652 = -1.0 * x175 * kf_qss[185];
  const amrex::Real x3653 = x2155 + x3652;
  const amrex::Real x3654 = x2086 * kf_qss[183];
  const amrex::Real x3655 =
    x340 * (x1884 - x2082 * kf_qss[181] - x3653 * x1885);
  const amrex::Real x3656 = x2161 - x368 * x3655;
  const amrex::Real x3657 = x2164 + x429 * x3654 - x950 * x3656;
  const amrex::Real x3658 = x2168 - x3653 * x1908 - x922 * x3657;
  const amrex::Real x3659 = x3572 - x3653 * x1108 - x3658 * x1034;
  const amrex::Real x3660 =
    x1935 + x1937 + x2176 - x241 * x3653 - x3659 * x1126;
  const amrex::Real x3661 =
    x3647 - x3653 * x1106 - x3659 * x1117 - x583 * x3660;
  const amrex::Real x3662 = x1997 - x3661 * x1187;
  const amrex::Real x3663 = x2016 - x3661 * x1295 - x827 * x3662;
  const amrex::Real x3664 = x1816 * (x2032 - x3662 * x1366 - x3663 * x1347);
  const amrex::Real x3665 = x3248 - (x1646 + x1838) * x575;
  const amrex::Real x3666 = x1997 - x3665 * x1187;
  const amrex::Real x3667 = x2016 - x3665 * x1295 - x827 * x3666;
  const amrex::Real x3668 = x1816 * (x2032 - x3666 * x1366 - x3667 * x1347);
  const amrex::Real x3669 = x1359 - x887;
  const amrex::Real x3670 = x1299 + x816 * x2128 - x816 * x2251;
  const amrex::Real x3671 =
    x1320 + x1332 - x3670 * x1300 - x816 * x2244 - x816 * x2246;
  const amrex::Real x3672 =
    x1367 + x2958 * kf_qss[30] - x3669 * x1361 + x3669 * x1363;
  const amrex::Real x3673 = x1345 + x816 * x2138 + x822 * x887 - x898 * x3670;
  const amrex::Real x3674 = (x1294 + x1371 + x3669 * x1372 + x3671 * x1339 -
                             x3672 * x1369 - x3673 * x1347) *
                            x1813;
  const amrex::Real x3675 = x1997 + x3058;
  const amrex::Real x3676 = x2000 + x2002 + x2014 + x3065 - x3670 * x1810 -
                            x816 * x2179 + x816 * x2283 - x816 * x2287 -
                            x827 * x3675;
  const amrex::Real x3677 =
    (x2019 + x2027 + x3669 * x2028 + x3669 * x2029 + x3671 * x2020 -
     x3672 * x2021 - x3675 * x1366 - x3676 * x1347) *
    x1816;
  const amrex::Real x3678 = sc[33] * refCinv;
  const amrex::Real x3679 = -1.0 * g_RT[33] + 1.0 * g_RT_qss[17] + x129;
  const amrex::Real x3680 = exp(-x3679);
  const amrex::Real x3681 = x893 * x3680;
  const amrex::Real x3682 = x3681 * x3678;
  const amrex::Real x3683 = 1e-12 - 1.0 * kf_qss[187] - x896;
  const amrex::Real x3684 = pow(x3683, -1);
  const amrex::Real x3685 = 1e-12 + x892;
  const amrex::Real x3686 = x3685 * x3684;
  const amrex::Real x3687 = 1 - x897 * x3686;
  const amrex::Real x3688 = pow(x3687, -1);
  const amrex::Real x3689 = x894 * x3686;
  const amrex::Real x3690 = x3689 * x3688;
  const amrex::Real x3691 = 1e-12 + x1512 * kf_qss[186];
  const amrex::Real x3692 = 1.0 * kf_qss[194];
  const amrex::Real x3693 = x3692 / pow(x3683, 2);
  const amrex::Real x3694 = 1e-12 + sc[3] * x3682;
  const amrex::Real x3695 = x3685 * x3693;
  const amrex::Real x3696 = x3688 * (-x3693 * x3691 + x894 * x3694 * x3695);
  const amrex::Real x3697 = -x3684 * x3691 + x3689 * x3694;
  const amrex::Real x3698 =
    x3697 * (-x3689 * x3692 - x897 * x3695) / pow(x3687, 2);
  const amrex::Real x3699 = x3684 * kf_qss[186];
  const amrex::Real x3700 = x3688 * x3699;
  const amrex::Real x3701 = x206 * x3681;
  const amrex::Real x3702 = -x1346 * sc_qss[0];
  const amrex::Real x3703 = (x2017 + x3702) * x873;
  const amrex::Real x3704 = x1772 - x1334 * sc_qss[0];
  const amrex::Real x3705 = x3704 * x1335;
  const amrex::Real x3706 = x3705 * x1333;
  const amrex::Real x3707 = -x3706;
  const amrex::Real x3708 = x873 * (x2105 - x2070 * sc_qss[0]);
  const amrex::Real x3709 = x3705 * x2067;
  const amrex::Real x3710 = x873 * (x2183 - x2139 * sc_qss[0]);
  const amrex::Real x3711 = x3705 * x2135;
  const amrex::Real x3712 = x873 * (x2290 - x2257 * sc_qss[0]);
  const amrex::Real x3713 = x3705 * x2255;
  const amrex::Real x3714 = x873 * (x2350 - x2332 * sc_qss[0]);
  const amrex::Real x3715 = x3705 * x2330;
  const amrex::Real x3716 = x873 * (x2506 - x2459 * sc_qss[0]);
  const amrex::Real x3717 = x3705 * x2458;
  const amrex::Real x3718 = x873 * (x2613 - x2584 * sc_qss[0]);
  const amrex::Real x3719 = x3705 * x2583;
  const amrex::Real x3720 = x873 * (x2665 - x2651 * sc_qss[0]);
  const amrex::Real x3721 = x3705 * x2650;
  const amrex::Real x3722 = x873 * (x2732 - x2713 * sc_qss[0]);
  const amrex::Real x3723 = x3705 * x2712;
  const amrex::Real x3724 = x873 * (x2779 - x2759 * sc_qss[0]);
  const amrex::Real x3725 = x3705 * x2757;
  const amrex::Real x3726 = x873 * (x2835 - x2816 * sc_qss[0]);
  const amrex::Real x3727 = x3705 * x2817;
  const amrex::Real x3728 = x873 * (x2882 - x2857 * sc_qss[0]);
  const amrex::Real x3729 = x3705 * x2856;
  const amrex::Real x3730 = x873 * (x2988 - x2957 * sc_qss[0]);
  const amrex::Real x3731 = x3705 * x2956;
  const amrex::Real x3732 = x873 * (x3034 - x3019 * sc_qss[0]);
  const amrex::Real x3733 = x3018 * x3705;
  const amrex::Real x3734 = x873 * (x3067 - x3048 * sc_qss[0]);
  const amrex::Real x3735 = x3047 * x3705;
  const amrex::Real x3736 = x873 * (x3137 - x3119 * sc_qss[0]);
  const amrex::Real x3737 = x3705 * x3117;
  const amrex::Real x3738 = x873 * (x3231 - x3207 * sc_qss[0]);
  const amrex::Real x3739 = x3705 * x3206;
  const amrex::Real x3740 = (x3238 + x3702) * x873;
  const amrex::Real x3741 = x873 * (x3252 - x3245 * sc_qss[0]);
  const amrex::Real x3742 = x3705 * x3244;
  const amrex::Real x3743 = x873 * (x3307 - x3291 * sc_qss[0]);
  const amrex::Real x3744 = x3705 * x3290;
  const amrex::Real x3745 = (x3312 + x3702) * x873;
  const amrex::Real x3746 = x873 * (x3323 - x3318 * sc_qss[0]);
  const amrex::Real x3747 = x3705 * x3317;
  const amrex::Real x3748 = x873 * (x3351 - x3337 * sc_qss[0]);
  const amrex::Real x3749 = x3705 * x3340;
  const amrex::Real x3750 = x873 * (x3401 - x3383 * sc_qss[0]);
  const amrex::Real x3751 = x3705 * x3382;
  const amrex::Real x3752 = x873 * (x3448 - x3432 * sc_qss[0]);
  const amrex::Real x3753 = x3705 * x3431;
  const amrex::Real x3754 = x873 * (x3472 - x3465 * sc_qss[0]);
  const amrex::Real x3755 = x3705 * x3464;
  const amrex::Real x3756 = x873 * (x3516 - x3502 * sc_qss[0]);
  const amrex::Real x3757 = x3705 * x3501;
  const amrex::Real x3758 = x873 * (x3547 - x3535 * sc_qss[0]);
  const amrex::Real x3759 = x3705 * x3533;
  const amrex::Real x3760 = x873 * (x3579 - x3560 * sc_qss[0]);
  const amrex::Real x3761 = x3705 * x3562;
  const amrex::Real x3762 = x873 * (x3606 - x3591 * sc_qss[0]);
  const amrex::Real x3763 = x3705 * x3592;
  const amrex::Real x3764 = x873 * (x3634 - x3620 * sc_qss[0]);
  const amrex::Real x3765 = x3705 * x3618;
  const amrex::Real x3766 = (x3650 + x3702) * x873;
  const amrex::Real x3767 = (x3663 + x3702) * x873;
  const amrex::Real x3768 = (x3667 + x3702) * x873;
  const amrex::Real x3769 = x873 * (x3676 - x3673 * sc_qss[0]);
  const amrex::Real x3770 = x3705 * x3671;
  const amrex::Real x3771 = x894 * sc_qss[16];
  const amrex::Real x3772 = x1711 - (x685 * sc_qss[1] + x877 * sc_qss[0]);
  const amrex::Real x3773 = x3772 * x1251;
  const amrex::Real x3774 = x3773 * x1250;
  const amrex::Real x3775 = -x3774;
  const amrex::Real x3776 = x1341 * sc_qss[0];
  const amrex::Real x3777 = x3776 * x1242;
  const amrex::Real x3778 = x3777 - x1329 * sc_qss[1];
  const amrex::Real x3779 = (x1998 + x3778) * x798;
  const amrex::Real x3780 = x3773 * x2057;
  const amrex::Real x3781 = x798 * (x2100 - x2062 * sc_qss[1] + x3776 * x2037);
  const amrex::Real x3782 = x3773 * x2133;
  const amrex::Real x3783 = x678 * sc_qss[0];
  const amrex::Real x3784 =
    x798 * (x2182 - x2125 * sc_qss[1] + x3776 * x2124 - x642 * x3783);
  const amrex::Real x3785 = x3773 * x2241;
  const amrex::Real x3786 = x798 * (x2281 - x2254 * sc_qss[1] + x3776 * x2237);
  const amrex::Real x3787 = x3773 * x2327;
  const amrex::Real x3788 = x798 * (x2348 - x2329 * sc_qss[1] + x3776 * x2326);
  const amrex::Real x3789 = x3773 * x2446;
  const amrex::Real x3790 = x798 * (x2498 - x2451 * sc_qss[1] + x3776 * x2438);
  const amrex::Real x3791 = x3773 * x2571;
  const amrex::Real x3792 = x798 * (x2610 - x2575 * sc_qss[1] + x3776 * x2511);
  const amrex::Real x3793 = x3773 * x2646;
  const amrex::Real x3794 = x798 * (x2664 - x2647 * sc_qss[1] + x3776 * x2645);
  const amrex::Real x3795 = x3773 * x2706;
  const amrex::Real x3796 =
    x798 * (x2729 - x2711 * sc_qss[1] + x3776 * x2668 - x652 * x3783);
  const amrex::Real x3797 = x3773 * x2753;
  const amrex::Real x3798 = x798 * (x2777 - x2756 * sc_qss[1] + x3776 * x2752);
  const amrex::Real x3799 = x3773 * x2811;
  const amrex::Real x3800 = x798 * (x2832 - x2813 * sc_qss[1] + x3776 * x2809);
  const amrex::Real x3801 = x3773 * x2855;
  const amrex::Real x3802 = x798 * (x2880 - x2852 * sc_qss[1] + x3776 * x2851);
  const amrex::Real x3803 = x3773 * x2948;
  const amrex::Real x3804 = x798 * (x2984 - x2952 * sc_qss[1] + x3776 * x2939);
  const amrex::Real x3805 = x3013 * x3773;
  const amrex::Real x3806 = x798 * (x3033 + x3012 * x3776 - x3014 * sc_qss[1]);
  const amrex::Real x3807 = x3044 * x3773;
  const amrex::Real x3808 = x798 * (x3064 + x3042 * x3776 - x3045 * sc_qss[1]);
  const amrex::Real x3809 = x3773 * x3114;
  const amrex::Real x3810 = x798 * (x3136 - x3116 * sc_qss[1] + x3776 * x3113);
  const amrex::Real x3811 = x3773 * x3194;
  const amrex::Real x3812 = x798 * (x3228 - x3198 * sc_qss[1] + x3776 * x3143);
  const amrex::Real x3813 = (x3236 + x3778) * x798;
  const amrex::Real x3814 = x3773 * x3242;
  const amrex::Real x3815 = x798 * (x3251 - x3243 * sc_qss[1] + x3776 * x3240);
  const amrex::Real x3816 = x3773 * x3286;
  const amrex::Real x3817 = x798 * (x3306 + x3777 - x3287 * sc_qss[1]);
  const amrex::Real x3818 = (x3311 + x3778) * x798;
  const amrex::Real x3819 = x3773 * x3315;
  const amrex::Real x3820 = x798 * (x3322 - x3316 * sc_qss[1] + x3776 * x3314);
  const amrex::Real x3821 = x3773 * x3336;
  const amrex::Real x3822 = x798 * (x3350 + x3777 - x3339 * sc_qss[1]);
  const amrex::Real x3823 = x3773 * x3380;
  const amrex::Real x3824 = x798 * (x3400 + x3777 - x3381 * sc_qss[1]);
  const amrex::Real x3825 = x3773 * x3428;
  const amrex::Real x3826 = x798 * (x3447 + x3777 - x3430 * sc_qss[1]);
  const amrex::Real x3827 = x3773 * x3460;
  const amrex::Real x3828 = x798 * (x3471 + x3777 - x3461 * sc_qss[1]);
  const amrex::Real x3829 = x3773 * x3498;
  const amrex::Real x3830 = x798 * (x3515 + x3777 - x3500 * sc_qss[1]);
  const amrex::Real x3831 = x3530 * x3773;
  const amrex::Real x3832 = x798 * (x3546 + x3777 - x3531 * sc_qss[1]);
  const amrex::Real x3833 = x3558 * x3773;
  const amrex::Real x3834 = x798 * (x3578 + x3777 - x3561 * sc_qss[1]);
  const amrex::Real x3835 = x3587 * x3773;
  const amrex::Real x3836 = x798 * (x3605 + x3777 - x3588 * sc_qss[1]);
  const amrex::Real x3837 = x3616 * x3773;
  const amrex::Real x3838 = x798 * (x3633 + x3777 - x3617 * sc_qss[1]);
  const amrex::Real x3839 = (x3649 + x3778) * x798;
  const amrex::Real x3840 = (x3662 + x3778) * x798;
  const amrex::Real x3841 = (x3666 + x3778) * x798;
  const amrex::Real x3842 = (x3675 + x3778) * x798;
  const amrex::Real x3843 = -x2012;
  const amrex::Real x3844 = x1315 * sc_qss[1];
  const amrex::Real x3845 = x2004 + x3844 * x1313;
  const amrex::Real x3846 = x3843 + x3845;
  const amrex::Real x3847 = x2102 - x2104 + x3844 * x2059;
  const amrex::Real x3848 = x2142 + x3843 + x3844 * x2108;
  const amrex::Real x3849 = -x2282 + x2289 + x3844 * x2248;
  const amrex::Real x3850 = -x2349 + x3845;
  const amrex::Real x3851 = x2503 + x3844 * x2456;
  const amrex::Real x3852 = -x2502 + x3851;
  const amrex::Real x3853 = -x2611 + x2612 - x2579 * sc_qss[1] + x3844 * x2581;
  const amrex::Real x3854 = -x2730 + x2731 + x3844 * x2709;
  const amrex::Real x3855 = -x2778 + x3845;
  const amrex::Real x3856 = -x2833 + x3851;
  const amrex::Real x3857 = -x2881 + x3845;
  const amrex::Real x3858 = -x2985 + x2986 + x3844 * x2954;
  const amrex::Real x3859 = -x3229 + x3230 + x3844 * x3205;
  const amrex::Real x3860 = -x1989;
  const amrex::Real x3861 = x1227 * sc_qss[2];
  const amrex::Real x3862 = x1962 + x3861 * x1225;
  const amrex::Real x3863 = x3860 + x3862;
  const amrex::Real x3864 = x2097 - x2099 + x3861 * x2038;
  const amrex::Real x3865 = x2180 - x2181 + x3861 * x2132;
  const amrex::Real x3866 = x2279 - x2280 + x3861 * x2240;
  const amrex::Real x3867 = x2335 - x2347 + x3861 * x2325;
  const amrex::Real x3868 = x2492 - x2497 + x3861 * x2445;
  const amrex::Real x3869 = x2587 - x2591 + x3861 * x2570;
  const amrex::Real x3870 = x2663 + x3860 + x3861 * x2644;
  const amrex::Real x3871 = x2727 - x2728 + x3861 * x2669;
  const amrex::Real x3872 = x2775 - x2776 + x3861 * x2751;
  const amrex::Real x3873 = x2819 - x2831 + x3861 * x2810;
  const amrex::Real x3874 = x2879 + x3860 - x2853 * sc_qss[2] + x3861 * x2854;
  const amrex::Real x3875 = x2979 - x2981 + x3861 * x2947;
  const amrex::Real x3876 = -x3031 + x3032 + x3861 * x2444;
  const amrex::Real x3877 = x3050 + x3040 * x3861;
  const amrex::Real x3878 = -x3063 + x3877 - x3043 * sc_qss[2];
  const amrex::Real x3879 = -x3123 + x3135 + x3861 * x3112;
  const amrex::Real x3880 = -x3227 + x3877;
  const amrex::Real x3881 = -x3233 + x3862;
  const amrex::Real x3882 = -x3250 + x3862;
  const amrex::Real x3883 = -x3305 + x3862;
  const amrex::Real x3884 = -x3310 + x3862;
  const amrex::Real x3885 = -x3321 + x3862;
  const amrex::Real x3886 = -x3349 + x3862;
  const amrex::Real x3887 = -x3398 + x3862;
  const amrex::Real x3888 = x794 * sc_qss[2];
  const amrex::Real x3889 = x589 * sc_qss[1];
  const amrex::Real x3890 = x3888 * x1091 + x3889 * x1091;
  const amrex::Real x3891 = (x1960 + x3890) * x586;
  const amrex::Real x3892 = x1662 - (x590 * sc_qss[1] + x795 * sc_qss[2]);
  const amrex::Real x3893 = x3892 * x1183;
  const amrex::Real x3894 = x3893 * x1182;
  const amrex::Real x3895 = -x3894;
  const amrex::Real x3896 = x3888 * x1089;
  const amrex::Real x3897 = x3889 * x1089;
  const amrex::Real x3898 = x586 * (x2096 + x3896 * x2035 + x3897 * x2035);
  const amrex::Real x3899 = x3893 * x2056;
  const amrex::Real x3900 = x586 * (x2178 + x3896 * x2109 + x3897 * x2109);
  const amrex::Real x3901 = x3893 * x2123;
  const amrex::Real x3902 = x586 * (x2278 + x3888 * x2188 + x3889 * x2188);
  const amrex::Real x3903 = x3893 * x2236;
  const amrex::Real x3904 = x586 * (x2346 + x3888 * x2311 + x3889 * x2311);
  const amrex::Real x3905 = x3893 * x2324;
  const amrex::Real x3906 = x586 * (x2491 + x3896 * x2358 + x3897 * x2358);
  const amrex::Real x3907 = x3893 * x2433;
  const amrex::Real x3908 = x586 * (x2608 + x3896 * x2515 + x3897 * x2515);
  const amrex::Real x3909 = x3893 * x2566;
  const amrex::Real x3910 = x586 * (x2662 + x3896 * x2615 + x3897 * x2615);
  const amrex::Real x3911 = x3893 * x2643;
  const amrex::Real x3912 = x586 * (x2726 + x3896 * x2667 + x3897 * x2667);
  const amrex::Real x3913 = x3893 * x2704;
  const amrex::Real x3914 = x586 * (x2774 + x3896 * x2736 + x3897 * x2736);
  const amrex::Real x3915 = x3893 * x2750;
  const amrex::Real x3916 = x586 * (x2830 + x3896 * x2781 + x3897 * x2781);
  const amrex::Real x3917 = x3893 * x2808;
  const amrex::Real x3918 = x586 * (x2878 + x3896 * x2838 + x3897 * x2838);
  const amrex::Real x3919 = x3893 * x2849;
  const amrex::Real x3920 = x586 * (x2978 + x3896 * x2889 + x3897 * x2889);
  const amrex::Real x3921 = x3893 * x2936;
  const amrex::Real x3922 = x586 * (x3030 + x3896 * x2357 + x3897 * x2357);
  const amrex::Real x3923 = x3010 * x3893;
  const amrex::Real x3924 = (x3057 + x3890) * x586;
  const amrex::Real x3925 = x3895 + x3924;
  const amrex::Real x3926 =
    x586 * (x3134 + x3069 * x3896 + x3069 * x3897 - x3111 * sc_qss[2]);
  const amrex::Real x3927 = x3893 * x3110;
  const amrex::Real x3928 =
    x586 * (x3226 - x3197 * sc_qss[1] + x3896 * x3148 + x3897 * x3148);
  const amrex::Real x3929 = x3893 * x3193;
  const amrex::Real x3930 = (x3249 + x3890) * x586;
  const amrex::Real x3931 = x586 * (x3304 + x3896 * x3254 + x3897 * x3254);
  const amrex::Real x3932 = x3893 * x3284;
  const amrex::Real x3933 = (x3348 + x3890) * x586;
  const amrex::Real x3934 = x3893 * x3334;
  const amrex::Real x3935 = (x3397 + x3890) * x586;
  const amrex::Real x3936 = x3893 * x3378;
  const amrex::Real x3937 = (x3444 + x3890) * x586;
  const amrex::Real x3938 = x3893 * x3427;
  const amrex::Real x3939 = (x3470 + x3890) * x586;
  const amrex::Real x3940 = x3893 * x3459;
  const amrex::Real x3941 = (x3514 + x3890) * x586;
  const amrex::Real x3942 = x3893 * x3497;
  const amrex::Real x3943 = (x3545 + x3890) * x586;
  const amrex::Real x3944 = x3893 * x3529;
  const amrex::Real x3945 = (x3577 + x3890) * x586;
  const amrex::Real x3946 = x3893 * x3557;
  const amrex::Real x3947 = (x3604 + x3890) * x586;
  const amrex::Real x3948 = x3893 * x3586;
  const amrex::Real x3949 = x586 * (x3632 + x3896 * x3608 + x3897 * x3608);
  const amrex::Real x3950 = x3893 * x3614;
  const amrex::Real x3951 = (x3648 + x3890) * x586;
  const amrex::Real x3952 = (x3661 + x3890) * x586;
  const amrex::Real x3953 = (x3665 + x3890) * x586;
  const amrex::Real x3954 = -x1175 * sc_qss[5];
  const amrex::Real x3955 = (x1944 + x3954) * x486;
  const amrex::Real x3956 = x1612 - x262 * sc_qss[5];
  const amrex::Real x3957 = x3956 * x1167;
  const amrex::Real x3958 = x3957 * x1166;
  const amrex::Real x3959 = -x3958;
  const amrex::Real x3960 = x486 * (x2095 - x2055 * sc_qss[5]);
  const amrex::Real x3961 = x3957 * x2054;
  const amrex::Real x3962 = x486 * (x2177 - x2122 * sc_qss[5]);
  const amrex::Real x3963 = x3957 * x2121;
  const amrex::Real x3964 = x486 * (x2277 - x2235 * sc_qss[5]);
  const amrex::Real x3965 = x3957 * x2234;
  const amrex::Real x3966 = x486 * (x2345 - x2321 * sc_qss[5]);
  const amrex::Real x3967 = x3957 * x2323;
  const amrex::Real x3968 = x486 * (x2490 - x2428 * sc_qss[5]);
  const amrex::Real x3969 = x3957 * x2432;
  const amrex::Real x3970 = x486 * (x2607 - x2565 * sc_qss[5]);
  const amrex::Real x3971 = x3957 * x2564;
  const amrex::Real x3972 = x486 * (x2661 - x2642 * sc_qss[5]);
  const amrex::Real x3973 = x3957 * x2641;
  const amrex::Real x3974 = x486 * (x2725 - x2678 * sc_qss[5]);
  const amrex::Real x3975 = x3957 * x2703;
  const amrex::Real x3976 = x486 * (x2773 - x2749 * sc_qss[5]);
  const amrex::Real x3977 = x3957 * x2748;
  const amrex::Real x3978 = x486 * (x2829 - x2805 * sc_qss[5]);
  const amrex::Real x3979 = x3957 * x2807;
  const amrex::Real x3980 = x486 * (x2875 - x2848 * sc_qss[5]);
  const amrex::Real x3981 = x3957 * x2847;
  const amrex::Real x3982 = x486 * (x2977 - x2935 * sc_qss[5]);
  const amrex::Real x3983 = x3957 * x2934;
  const amrex::Real x3984 = x486 * (x3029 - x3007 * sc_qss[5]);
  const amrex::Real x3985 = x3009 * x3957;
  const amrex::Real x3986 = (x3055 + x3954) * x486;
  const amrex::Real x3987 = x3959 + x3986;
  const amrex::Real x3988 = x486 * (x3133 - x3109 * sc_qss[5]);
  const amrex::Real x3989 = x3957 * x3108;
  const amrex::Real x3990 = x486 * (x3225 - x3192 * sc_qss[5]);
  const amrex::Real x3991 = x3957 * x3191;
  const amrex::Real x3992 = x486 * (x3303 - x3283 * sc_qss[5]);
  const amrex::Real x3993 = x3957 * x3282;
  const amrex::Real x3994 = (x3346 + x3954) * x486;
  const amrex::Real x3995 = x3957 * x3333;
  const amrex::Real x3996 = x486 * (x3396 - x3377 * sc_qss[5]);
  const amrex::Real x3997 = x3957 * x3376;
  const amrex::Real x3998 = x486 * (x3443 - x3426 * sc_qss[5]);
  const amrex::Real x3999 = x3957 * x3425;
  const amrex::Real x4000 = (x3469 + x3954) * x486;
  const amrex::Real x4001 = x3957 * x3458;
  const amrex::Real x4002 = x486 * (x3513 - x3496 * sc_qss[5]);
  const amrex::Real x4003 = x3957 * x3495;
  const amrex::Real x4004 = (x3544 + x3954) * x486;
  const amrex::Real x4005 = x3528 * x3957;
  const amrex::Real x4006 = x486 * (x3575 - x3556 * sc_qss[5]);
  const amrex::Real x4007 = x3555 * x3957;
  const amrex::Real x4008 = x486 * (x3603 - x3583 * sc_qss[5]);
  const amrex::Real x4009 = x3585 * x3957;
  const amrex::Real x4010 = x486 * (x3631 - x3613 * sc_qss[5]);
  const amrex::Real x4011 = (x3646 + x3954) * x486;
  const amrex::Real x4012 = (x3660 + x3954) * x486;
  const amrex::Real x4013 = x1584 - x482 * sc_qss[6];
  const amrex::Real x4014 = x4013 * x1056;
  const amrex::Real x4015 = x4014 * x1055;
  const amrex::Real x4016 = -x4015;
  const amrex::Real x4017 = -x1116 * sc_qss[6];
  const amrex::Real x4018 = (x1927 + x4017) * x471;
  const amrex::Real x4019 = x4014 * x2044;
  const amrex::Real x4020 = x471 * (x2092 - x2047 * sc_qss[6]);
  const amrex::Real x4021 = x4014 * x2114;
  const amrex::Real x4022 = x471 * (x2172 - x2115 * sc_qss[6]);
  const amrex::Real x4023 = x4014 * x2221;
  const amrex::Real x4024 = x471 * (x2275 - x2226 * sc_qss[6]);
  const amrex::Real x4025 = x4014 * x2307;
  const amrex::Real x4026 = x471 * (x2344 - x2309 * sc_qss[6]);
  const amrex::Real x4027 = x4014 * x2417;
  const amrex::Real x4028 = x471 * (x2486 - x2386 * sc_qss[6]);
  const amrex::Real x4029 = x4014 * x2552;
  const amrex::Real x4030 = x471 * (x2604 - x2554 * sc_qss[6]);
  const amrex::Real x4031 = x4014 * x2631;
  const amrex::Real x4032 = x471 * (x2660 - x2634 * sc_qss[6]);
  const amrex::Real x4033 = x4014 * x2695;
  const amrex::Real x4034 = x471 * (x2724 - x2697 * sc_qss[6]);
  const amrex::Real x4035 = x4014 * x2741;
  const amrex::Real x4036 = x471 * (x2769 - x2742 * sc_qss[6]);
  const amrex::Real x4037 = x4014 * x2801;
  const amrex::Real x4038 = x471 * (x2827 - x2788 * sc_qss[6]);
  const amrex::Real x4039 = x471 * (x2871 - x2839 * sc_qss[6]);
  const amrex::Real x4040 = x4014 * x2923;
  const amrex::Real x4041 = x471 * (x2973 - x2926 * sc_qss[6]);
  const amrex::Real x4042 = x4014 * x2999;
  const amrex::Real x4043 = x471 * (x3028 - x3002 * sc_qss[6]);
  const amrex::Real x4044 = (x2871 + x4017) * x471;
  const amrex::Real x4045 = x4016 + x4044;
  const amrex::Real x4046 = x4014 * x3097;
  const amrex::Real x4047 = x471 * (x3132 - x3100 * sc_qss[6]);
  const amrex::Real x4048 = x4014 * x3181;
  const amrex::Real x4049 = x471 * (x3221 - x3183 * sc_qss[6]);
  const amrex::Real x4050 = x4014 * x3273;
  const amrex::Real x4051 = x471 * (x3302 - x3275 * sc_qss[6]);
  const amrex::Real x4052 = x4014 * x3329;
  const amrex::Real x4053 = (x3345 + x4017) * x471;
  const amrex::Real x4054 = x4014 * x3368;
  const amrex::Real x4055 = x471 * (x3394 - x3370 * sc_qss[6]);
  const amrex::Real x4056 = x4014 * x3416;
  const amrex::Real x4057 = x471 * (x3442 - x3418 * sc_qss[6]);
  const amrex::Real x4058 = x4014 * x3456;
  const amrex::Real x4059 = (x3468 + x4017) * x471;
  const amrex::Real x4060 = x4014 * x3487;
  const amrex::Real x4061 = x471 * (x3512 - x3489 * sc_qss[6]);
  const amrex::Real x4062 = x4014 * x3523;
  const amrex::Real x4063 = x471 * (x3543 - x3525 * sc_qss[6]);
  const amrex::Real x4064 = x471 * (x3573 - x3550 * sc_qss[6]);
  const amrex::Real x4065 = (x3602 + x4017) * x471;
  const amrex::Real x4066 = (x3629 + x4017) * x471;
  const amrex::Real x4067 = (x3645 + x4017) * x471;
  const amrex::Real x4068 = (x3659 + x4017) * x471;
  const amrex::Real x4069 = -x1033 * sc_qss[7];
  const amrex::Real x4070 = (x1920 + x4069) * x463;
  const amrex::Real x4071 = x1563 - x468 * sc_qss[7];
  const amrex::Real x4072 = x4071 * x1022;
  const amrex::Real x4073 = x4072 * x1021;
  const amrex::Real x4074 = -x4073;
  const amrex::Real x4075 = (x2090 + x4069) * x463;
  const amrex::Real x4076 = (x2169 + x4069) * x463;
  const amrex::Real x4077 = x463 * (x2274 - x2204 * sc_qss[7]);
  const amrex::Real x4078 = x4072 * x2220;
  const amrex::Real x4079 = x463 * (x2343 - x2297 * sc_qss[7]);
  const amrex::Real x4080 = x4072 * x2306;
  const amrex::Real x4081 = x463 * (x2483 - x2400 * sc_qss[7]);
  const amrex::Real x4082 = x4072 * x2416;
  const amrex::Real x4083 = x463 * (x2603 - x2541 * sc_qss[7]);
  const amrex::Real x4084 = x4072 * x2551;
  const amrex::Real x4085 = x463 * (x2658 - x2626 * sc_qss[7]);
  const amrex::Real x4086 = x4072 * x2630;
  const amrex::Real x4087 = x463 * (x2723 - x2684 * sc_qss[7]);
  const amrex::Real x4088 = x4072 * x2694;
  const amrex::Real x4089 = (x2768 + x4069) * x463;
  const amrex::Real x4090 = x463 * (x2826 - x2795 * sc_qss[7]);
  const amrex::Real x4091 = x4072 * x2800;
  const amrex::Real x4092 = (x2867 + x4069) * x463;
  const amrex::Real x4093 = x4074 + x4092;
  const amrex::Real x4094 = x463 * (x2972 - x2910 * sc_qss[7]);
  const amrex::Real x4095 = x4072 * x2922;
  const amrex::Real x4096 = x463 * (x3027 - x2993 * sc_qss[7]);
  const amrex::Real x4097 = x4072 * x2996;
  const amrex::Real x4098 = x463 * (x3131 - x3084 * sc_qss[7]);
  const amrex::Real x4099 = x4072 * x3096;
  const amrex::Real x4100 = x463 * (x3220 - x3171 * sc_qss[7]);
  const amrex::Real x4101 = x4072 * x3180;
  const amrex::Real x4102 = x463 * (x3301 - x3268 * sc_qss[7]);
  const amrex::Real x4103 = x4072 * x3272;
  const amrex::Real x4104 = (x3344 + x4069) * x463;
  const amrex::Real x4105 = x4072 * x3328;
  const amrex::Real x4106 = x463 * (x3393 - x3363 * sc_qss[7]);
  const amrex::Real x4107 = x4072 * x3367;
  const amrex::Real x4108 = x463 * (x3441 - x3411 * sc_qss[7]);
  const amrex::Real x4109 = x4072 * x3415;
  const amrex::Real x4110 = x463 * (x3467 - x3452 * sc_qss[7]);
  const amrex::Real x4111 = x4072 * x3455;
  const amrex::Real x4112 = x463 * (x3511 - x3481 * sc_qss[7]);
  const amrex::Real x4113 = x4072 * x3486;
  const amrex::Real x4114 = x463 * (x3542 - x3519 * sc_qss[7]);
  const amrex::Real x4115 = (x3571 + x4069) * x463;
  const amrex::Real x4116 = (x3601 + x4069) * x463;
  const amrex::Real x4117 = (x3628 + x4069) * x463;
  const amrex::Real x4118 = (x3644 + x4069) * x463;
  const amrex::Real x4119 = (x3658 + x4069) * x463;
  const amrex::Real x4120 = x1555 - x434 * sc_qss[9];
  const amrex::Real x4121 = x4120 * x1014;
  const amrex::Real x4122 = x4121 * x1013;
  const amrex::Real x4123 = -x4122;
  const amrex::Real x4124 = x433 * sc_qss[9];
  const amrex::Real x4125 = x921 * x4124;
  const amrex::Real x4126 = x920 * x4125;
  const amrex::Real x4127 = (x1907 + x4126) * x431;
  const amrex::Real x4128 = (x2089 + x4126) * x431;
  const amrex::Real x4129 = (x2165 + x4126) * x431;
  const amrex::Real x4130 = x4121 * x2219;
  const amrex::Real x4131 = (x2273 + x4126) * x431;
  const amrex::Real x4132 = x4121 * x2305;
  const amrex::Real x4133 = (x2342 + x4126) * x431;
  const amrex::Real x4134 = x4121 * x2414;
  const amrex::Real x4135 = x4125 * x2410;
  const amrex::Real x4136 = (x2481 + x4135) * x431;
  const amrex::Real x4137 = x4121 * x2550;
  const amrex::Real x4138 = x431 * (x2602 + x4125 * x2543);
  const amrex::Real x4139 = x4121 * x2629;
  const amrex::Real x4140 = (x2657 + x4126) * x431;
  const amrex::Real x4141 = x4121 * x2693;
  const amrex::Real x4142 = (x2722 + x4126) * x431;
  const amrex::Real x4143 = (x2767 + x4126) * x431;
  const amrex::Real x4144 = x4121 * x2799;
  const amrex::Real x4145 = (x2825 + x4135) * x431;
  const amrex::Real x4146 = (x2865 + x4126) * x431;
  const amrex::Real x4147 = x4123 + x4146;
  const amrex::Real x4148 = x4121 * x2921;
  const amrex::Real x4149 = x431 * (x2971 + x4125 * x2916);
  const amrex::Real x4150 = x4121 * x2995;
  const amrex::Real x4151 = (x3026 + x4135) * x431;
  const amrex::Real x4152 = x4121 * x3094;
  const amrex::Real x4153 = x431 * (x3130 - x3095 * sc_qss[9] + x4124 * x3087);
  const amrex::Real x4154 = x4121 * x3179;
  const amrex::Real x4155 = x431 * (x3219 + x4125 * x3174);
  const amrex::Real x4156 = x4121 * x3271;
  const amrex::Real x4157 = (x3300 + x4126) * x431;
  const amrex::Real x4158 = x4121 * x3327;
  const amrex::Real x4159 = x431 * (x3343 + x4125 * x3325);
  const amrex::Real x4160 = x4121 * x3366;
  const amrex::Real x4161 = (x3392 + x4126) * x431;
  const amrex::Real x4162 = x4121 * x3414;
  const amrex::Real x4163 = (x3440 + x4126) * x431;
  const amrex::Real x4164 = x4121 * x3485;
  const amrex::Real x4165 = (x3510 + x4126) * x431;
  const amrex::Real x4166 = (x3541 + x4126) * x431;
  const amrex::Real x4167 = (x3570 + x4126) * x431;
  const amrex::Real x4168 = (x3600 + x4126) * x431;
  const amrex::Real x4169 = (x3627 + x4126) * x431;
  const amrex::Real x4170 = (x3643 + x4126) * x431;
  const amrex::Real x4171 = (x3657 + x4126) * x431;
  const amrex::Real x4172 = x372 * sc_qss[11];
  const amrex::Real x4173 = x940 * x4172;
  const amrex::Real x4174 = x948 * x4173;
  const amrex::Real x4175 = (x1899 + x4174) * x370;
  const amrex::Real x4176 = x1538 - x373 * sc_qss[11];
  const amrex::Real x4177 = x4176 * x1004;
  const amrex::Real x4178 = x4177 * x1003;
  const amrex::Real x4179 = -x4178;
  const amrex::Real x4180 = (x2085 + x4174) * x370;
  const amrex::Real x4181 = (x2162 + x4174) * x370;
  const amrex::Real x4182 = (x2271 + x4174) * x370;
  const amrex::Real x4183 = x4177 * x2217;
  const amrex::Real x4184 = (x2341 + x4174) * x370;
  const amrex::Real x4185 = x4177 * x2304;
  const amrex::Real x4186 = x4172 * x2404;
  const amrex::Real x4187 = (x2478 + x4186) * x370;
  const amrex::Real x4188 = x4177 * x2407;
  const amrex::Real x4189 = x370 * (x2601 + x4173 * x2545);
  const amrex::Real x4190 = x4177 * x2549;
  const amrex::Real x4191 = (x2656 + x4174) * x370;
  const amrex::Real x4192 = x4177 * x2628;
  const amrex::Real x4193 = (x2720 + x4174) * x370;
  const amrex::Real x4194 = x4177 * x2692;
  const amrex::Real x4195 = (x2766 + x4174) * x370;
  const amrex::Real x4196 = (x2824 + x4186) * x370;
  const amrex::Real x4197 = x4177 * x2798;
  const amrex::Real x4198 = (x2863 + x4174) * x370;
  const amrex::Real x4199 = x4179 + x4198;
  const amrex::Real x4200 = x370 * (x2970 + x4173 * x2918);
  const amrex::Real x4201 = x4177 * x2920;
  const amrex::Real x4202 = (x3025 + x4186) * x370;
  const amrex::Real x4203 = x4177 * x2994;
  const amrex::Real x4204 = x370 * (x3129 - x3093 * sc_qss[11] + x4173 * x3090);
  const amrex::Real x4205 = x4177 * x3092;
  const amrex::Real x4206 = x370 * (x3218 + x4173 * x3176);
  const amrex::Real x4207 = x4177 * x3178;
  const amrex::Real x4208 = (x3299 + x4174) * x370;
  const amrex::Real x4209 = x4177 * x3270;
  const amrex::Real x4210 = (x3391 + x4174) * x370;
  const amrex::Real x4211 = x4177 * x3365;
  const amrex::Real x4212 = (x3439 + x4174) * x370;
  const amrex::Real x4213 = x4177 * x3413;
  const amrex::Real x4214 = (x3509 + x4174) * x370;
  const amrex::Real x4215 = x4177 * x3484;
  const amrex::Real x4216 = (x3540 + x4174) * x370;
  const amrex::Real x4217 = (x3569 + x4174) * x370;
  const amrex::Real x4218 = (x3599 + x4174) * x370;
  const amrex::Real x4219 = (x3626 + x4174) * x370;
  const amrex::Real x4220 = (x3642 + x4174) * x370;
  const amrex::Real x4221 = (x3656 + x4174) * x370;
  const amrex::Real x4222 = x2207 * sc_qss[11];
  const amrex::Real x4223 = -x2264 - x2266 - x409 * x4222;
  const amrex::Real x4224 = -x2338 - x2339 - x418 * x4222;
  const amrex::Real x4225 = -x2475 - x411 * x4222;
  const amrex::Real x4226 = -x2598 - x407 * x4222;
  const amrex::Real x4227 = -x2654 - x415 * x4222;
  const amrex::Real x4228 = x2718 - x2721 + x2688 * sc_qss[11];
  const amrex::Real x4229 = -x2822 - x420 * x4222;
  const amrex::Real x4230 = x1530 - x343 * sc_qss[12];
  const amrex::Real x4231 = x998 * x4230;
  const amrex::Real x4232 = x4231 * x1896;
  const amrex::Real x4233 = x996 * x4232;
  const amrex::Real x4234 = -x4233;
  const amrex::Real x4235 = x4231 * x2215;
  const amrex::Real x4236 = x342 * sc_qss[12];
  const amrex::Real x4237 = x4236 * x2209;
  const amrex::Real x4238 = x340 * (x2269 - x332 * x4237);
  const amrex::Real x4239 = x4231 * x2303;
  const amrex::Real x4240 = x340 * (x2340 - x324 * x4237);
  const amrex::Real x4241 = x4231 * x2406;
  const amrex::Real x4242 = x340 * (x2476 - x318 * x4237);
  const amrex::Real x4243 = x4231 * x2548;
  const amrex::Real x4244 = x340 * (x2599 - x326 * x4237);
  const amrex::Real x4245 = x4231 * x2627;
  const amrex::Real x4246 = x340 * (x2655 - x321 * x4237);
  const amrex::Real x4247 = x4231 * x2691;
  const amrex::Real x4248 = x340 * (x2719 + x4236 * x2689);
  const amrex::Real x4249 = x4231 * x2797;
  const amrex::Real x4250 = x340 * (x2823 - x334 * x4237);
  const amrex::Real x4251 = x2862 + x4234;
  const amrex::Real x4252 = x4232 * x2903;
  const amrex::Real x4253 = x4232 * x2991;
  const amrex::Real x4254 = x4232 * x3079;
  const amrex::Real x4255 = x340 * (x3128 - x3091 * sc_qss[12]);
  const amrex::Real x4256 = x4232 * x3161;
  const amrex::Real x4257 = x4232 * x3260;
  const amrex::Real x4258 = x4232 * x3358;
  const amrex::Real x4259 = x4232 * x3408;
  const amrex::Real x4260 = x4232 * x3478;
  const amrex::Real x4261 =
    x1520 - (x244 * sc_qss[5] + x265 * sc_qss[7] + x272 * sc_qss[9] +
             x313 * sc_qss[13] + x477 * sc_qss[6]);
  const amrex::Real x4262 = x4261 * x1000;
  const amrex::Real x4263 = x996 * x4262;
  const amrex::Real x4264 = -x4263;
  const amrex::Real x4265 = -x1105 * sc_qss[6];
  const amrex::Real x4266 = (x1866 + x4265) * x182;
  const amrex::Real x4267 = (x2080 + x4265) * x182;
  const amrex::Real x4268 = x2155 + x4265;
  const amrex::Real x4269 = (x2145 + x4268) * x182;
  const amrex::Real x4270 = x4262 * x2195;
  const amrex::Real x4271 = x243 * sc_qss[5];
  const amrex::Real x4272 = x271 * sc_qss[9];
  const amrex::Real x4273 = x312 * sc_qss[13];
  const amrex::Real x4274 = x264 * sc_qss[7];
  const amrex::Real x4275 =
    x182 * (x2263 - x2222 * sc_qss[6] - x4271 * x2191 - x4272 * x2191 -
            x4273 * x2191 - x4274 * x2191);
  const amrex::Real x4276 = x4262 * x2294;
  const amrex::Real x4277 =
    x182 * (x2337 - x2308 * sc_qss[6] - x4271 * x2292 - x4272 * x2292 -
            x4273 * x2292 - x4274 * x2292);
  const amrex::Real x4278 = x4262 * x2376;
  const amrex::Real x4279 =
    x182 * (x2474 - x2381 * sc_qss[6] - x4271 * x2359 - x4272 * x2359 -
            x4273 * x2359 - x4274 * x2359);
  const amrex::Real x4280 = x4262 * x2532;
  const amrex::Real x4281 =
    x182 * (x2597 - x2553 * sc_qss[6] - x4271 * x2517 - x4272 * x2517 -
            x4273 * x2517 - x4274 * x2517);
  const amrex::Real x4282 = x4262 * x2621;
  const amrex::Real x4283 =
    x182 * (x2653 - x2633 * sc_qss[6] - x4271 * x2617 - x4272 * x2617 -
            x4273 * x2617 - x4274 * x2617);
  const amrex::Real x4284 = x4262 * x2674;
  const amrex::Real x4285 =
    x182 * (x2717 + x2671 * sc_qss[5] + x2683 * sc_qss[7] - x2696 * sc_qss[6] +
            x4272 * x2670 + x4273 * x2670);
  const amrex::Real x4286 = (x2762 + x4268) * x182;
  const amrex::Real x4287 = x4262 * x2787;
  const amrex::Real x4288 =
    x182 * (x2820 - x2786 * sc_qss[6] - x4271 * x2783 - x4272 * x2783 -
            x4273 * x2783 - x4274 * x2783);
  const amrex::Real x4289 = x182 * x4268;
  const amrex::Real x4290 = x4264 + x4289;
  const amrex::Real x4291 = x4262 * x2903;
  const amrex::Real x4292 = x182 * (x2967 - x2925 * sc_qss[6]);
  const amrex::Real x4293 = x4262 * x2991;
  const amrex::Real x4294 = x182 * (x3023 - x3000 * sc_qss[6]);
  const amrex::Real x4295 = x4262 * x3079;
  const amrex::Real x4296 = x182 * (x3127 - x3099 * sc_qss[6]);
  const amrex::Real x4297 = x4262 * x3161;
  const amrex::Real x4298 = x182 * (x3215 - x3182 * sc_qss[6]);
  const amrex::Real x4299 = x4262 * x3260;
  const amrex::Real x4300 = x182 * (x3295 - x3274 * sc_qss[6]);
  const amrex::Real x4301 = x4262 * x3358;
  const amrex::Real x4302 = x182 * (x3388 - x3369 * sc_qss[6]);
  const amrex::Real x4303 = x4262 * x3408;
  const amrex::Real x4304 = x182 * (x3437 - x3417 * sc_qss[6]);
  const amrex::Real x4305 = x182 * (x4268 - x3453 * sc_qss[9]);
  const amrex::Real x4306 = x4262 * x3478;
  const amrex::Real x4307 = x182 * (x3507 - x3488 * sc_qss[6]);
  const amrex::Real x4308 = x182 * (x3538 + x4265 - x3518 * sc_qss[7]);
  const amrex::Real x4309 = x182 * (x3567 - x3549 * sc_qss[6]);
  const amrex::Real x4310 = (x3596 + x4265) * x182;
  const amrex::Real x4311 = x182 * (x3624 + x4265 - x3610 * sc_qss[5]);
  const amrex::Real x4312 = (x3638 + x4265) * x182;
  const amrex::Real x4313 = (x3652 + x4268) * x182;
  const amrex::Real x4314 = x1510 - (x107 * sc_qss[15] + x473 * sc_qss[6]);
  const amrex::Real x4315 = x992 * x4314;
  const amrex::Real x4316 = x991 * x4315;
  const amrex::Real x4317 = -x4316;
  const amrex::Real x4318 = x1100 * sc_qss[6];
  const amrex::Real x4319 = x980 * x4318;
  const amrex::Real x4320 = x4319 - x986 * sc_qss[15];
  const amrex::Real x4321 = (x1861 + x4320) * x111;
  const amrex::Real x4322 = (x2079 + x4320) * x111;
  const amrex::Real x4323 = (x2151 + x4320) * x111;
  const amrex::Real x4324 = x4317 + x4323;
  const amrex::Real x4325 = x4315 * x2374;
  const amrex::Real x4326 = x111 * (x2472 - x2372 * sc_qss[15] + x4318 * x2370);
  const amrex::Real x4327 = -x4325 + x4326;
  const amrex::Real x4328 = x4315 * x2531;
  const amrex::Real x4329 = x111 * (x2596 - x2530 * sc_qss[15] + x4318 * x2529);
  const amrex::Real x4330 = x4315 * x2902;
  const amrex::Real x4331 = x111 * (x2966 - x2901 * sc_qss[15] + x4318 * x2900);
  const amrex::Real x4332 = x4315 * x3078;
  const amrex::Real x4333 =
    x111 * (x3126 - x3077 * sc_qss[15] - x3098 * sc_qss[6] + x4318 * x3076);
  const amrex::Real x4334 = x4315 * x3160;
  const amrex::Real x4335 = x111 * (x3214 - x3159 * sc_qss[15] + x4318 * x3158);
  const amrex::Real x4336 = x4315 * x3259;
  const amrex::Real x4337 = x111 * (x3294 - x3258 * sc_qss[15] + x4318 * x3257);
  const amrex::Real x4338 = x4315 * x3356;
  const amrex::Real x4339 = x111 * (x3387 + x4319 - x3357 * sc_qss[15]);
  const amrex::Real x4340 = x4315 * x3407;
  const amrex::Real x4341 = x111 * (x3436 + x4319 - x3406 * sc_qss[15]);
  const amrex::Real x4342 = x4315 * x3477;
  const amrex::Real x4343 = x111 * (x3506 - x3476 * sc_qss[15] + x4318 * x3475);
  const amrex::Real x4344 = (x3537 + x4320) * x111;
  const amrex::Real x4345 = (x3566 + x4320) * x111;
  const amrex::Real x4346 = (x3595 + x4320) * x111;
  const amrex::Real x4347 = (x3623 + x4320) * x111;
  const amrex::Real x4348 = (x3637 + x4320) * x111;
  const amrex::Real x4349 = x108 * sc_qss[8];
  const amrex::Real x4350 = x963 * x4349;
  const amrex::Real x4351 = x6 * sc_qss[15];
  const amrex::Real x4352 = x963 * x4351;
  const amrex::Real x4353 = x1855 + x962 * x4350 + x962 * x4352;
  const amrex::Real x4354 = -x1848 + x4353;
  const amrex::Real x4355 = -x2075 + x4353;
  const amrex::Real x4356 = -x2146;
  const amrex::Real x4357 = x4353 + x4356;
  const amrex::Real x4358 = x2467 - x2471 + x4349 * x2366 + x4352 * x2365;
  const amrex::Real x4359 = -x2594 + x2595 + x4350 * x2526 + x4352 * x2526;
  const amrex::Real x4360 = x2961 - x2964 + x4350 * x2897 + x4352 * x2897;
  const amrex::Real x4361 =
    x3124 + x4356 - x3074 * sc_qss[8] + x4350 * x3073 + x4352 * x3073;
  const amrex::Real x4362 = x3209 - x3212 + x4350 * x3155 + x4352 * x3155;
  const amrex::Real x4363 = x3293 + x4356 + x4350 * x3256 + x4352 * x3256;
  const amrex::Real x4364 = x3386 + x4356 + x4349 * x3354 + x4351 * x3354;
  const amrex::Real x4365 = x3435 + x4356 + x4350 * x3403 + x4352 * x3403;
  const amrex::Real x4366 = -x3505 + x4353;
  const amrex::Real x4367 = -x3565 + x4353;
  const amrex::Real x4368 = -x3594 + x4353;
  const amrex::Real x4369 = -x3622 + x4353;
  const amrex::Real x4370 = -x3636 + x4353;
  const amrex::Real x4371 = 0.5 * tc[0];
  const amrex::Real x4372 = 188000000.0 * exp(-x4371);
  const amrex::Real x4373 = x4372 * sc[29];
  const amrex::Real x4374 = x900 * x4373;
  const amrex::Real x4375 = -2757.62732860986 * invT + 3.46 * tc[0];
  const amrex::Real x4376 = 9e-06 * exp(-x172 + x4375);
  const amrex::Real x4377 = x4376 * sc[10];
  const amrex::Real x4378 = x584 * x4377;
  const amrex::Real x4379 = -x4378;
  const amrex::Real x4380 = -6999.74382134365 * invT + 2.6 * tc[0];
  const amrex::Real x4381 = 0.0885 * exp(-x139 + x4380);
  const amrex::Real x4382 = sc[7] * x4381;
  const amrex::Real x4383 = x584 * x4382;
  const amrex::Real x4384 = -x4383;
  const amrex::Real x4385 = 2.4 * tc[0];
  const amrex::Real x4386 = -2249.8817128129 * invT + x4385;
  const amrex::Real x4387 = 3.9 * exp(-x145 + x4386);
  const amrex::Real x4388 = sc[5] * x4387;
  const amrex::Real x4389 = x584 * x4388;
  const amrex::Real x4390 = -x4389;
  const amrex::Real x4391 = -1059.77429818474 * invT + 2.71 * tc[0];
  const amrex::Real x4392 = 0.1428 * exp(-x132 + x4391);
  const amrex::Real x4393 = sc[3] * x4392;
  const amrex::Real x4394 = x584 * x4393;
  const amrex::Real x4395 = -x4394;
  const amrex::Real x4396 = 23948.0811256466 * invT;
  const amrex::Real x4397 = -x4396;
  const amrex::Real x4398 = 120000000.0 * exp(-x159 + x4397);
  const amrex::Real x4399 = sc[4] * x4398;
  const amrex::Real x4400 = x584 * x4399;
  const amrex::Real x4401 = -x4400;
  const amrex::Real x4402 = 2.39 * tc[0];
  const amrex::Real x4403 = -197.764149661255 * invT + x4402;
  const amrex::Real x4404 = 0.101 * exp(-x119 + x4403);
  const amrex::Real x4405 = sc[6] * x4404;
  const amrex::Real x4406 = x584 * x4405;
  const amrex::Real x4407 = -x4406;
  const amrex::Real x4408 = x903 * x4377;
  const amrex::Real x4409 = x903 * x4393;
  const amrex::Real x4410 = x903 * x4382;
  const amrex::Real x4411 = x903 * x4399;
  const amrex::Real x4412 = x903 * x4388;
  const amrex::Real x4413 = x903 * x4405;
  const amrex::Real x4414 = x464 * x4393;
  const amrex::Real x4415 = -x4414;
  const amrex::Real x4416 = x464 * x4377;
  const amrex::Real x4417 = -x4416;
  const amrex::Real x4418 = x464 * x4382;
  const amrex::Real x4419 = -x4418;
  const amrex::Real x4420 = x464 * x4399;
  const amrex::Real x4421 = -x4420;
  const amrex::Real x4422 = x464 * x4388;
  const amrex::Real x4423 = -x4422;
  const amrex::Real x4424 = x464 * x4405;
  const amrex::Real x4425 = -x4424;
  const amrex::Real x4426 = x273 * x4377;
  const amrex::Real x4427 = -x4426;
  const amrex::Real x4428 = x273 * x4399;
  const amrex::Real x4429 = -x4428;
  const amrex::Real x4430 = x273 * x4393;
  const amrex::Real x4431 = -x4430;
  const amrex::Real x4432 = x273 * x4382;
  const amrex::Real x4433 = -x4432;
  const amrex::Real x4434 = x273 * x4388;
  const amrex::Real x4435 = -x4434;
  const amrex::Real x4436 = x273 * x4405;
  const amrex::Real x4437 = -x4436;
  const amrex::Real x4438 = 80000000.0 * exp(-x417 + x4397);
  const amrex::Real x4439 = sc[4] * x4438;
  const amrex::Real x4440 = x427 * x4439;
  const amrex::Real x4441 = -x4440;
  const amrex::Real x4442 = 0.074 * exp(-x406 + x4403);
  const amrex::Real x4443 = sc[6] * x4442;
  const amrex::Real x4444 = x427 * x4443;
  const amrex::Real x4445 = -x4444;
  const amrex::Real x4446 = 0.0952 * exp(-x408 + x4391);
  const amrex::Real x4447 = sc[3] * x4446;
  const amrex::Real x4448 = x427 * x4447;
  const amrex::Real x4449 = -x4448;
  const amrex::Real x4450 = 6e-06 * exp(-x419 + x4375);
  const amrex::Real x4451 = x4450 * sc[10];
  const amrex::Real x4452 = x427 * x4451;
  const amrex::Real x4453 = -x4452;
  const amrex::Real x4454 = 2.6 * exp(-x410 + x4386);
  const amrex::Real x4455 = sc[5] * x4454;
  const amrex::Real x4456 = x427 * x4455;
  const amrex::Real x4457 = -x4456;
  const amrex::Real x4458 = 0.089 * exp(-x414 + x4380);
  const amrex::Real x4459 = sc[7] * x4458;
  const amrex::Real x4460 = x427 * x4459;
  const amrex::Real x4461 = -x4460;
  const amrex::Real x4462 = -3399.73179417669 * invT + 2.54 * tc[0];
  const amrex::Real x4463 = 1.3 * exp(-x317 + x4462);
  const amrex::Real x4464 = sc[5] * x4463;
  const amrex::Real x4465 = x344 * x4464;
  const amrex::Real x4466 = -x4465;
  const amrex::Real x4467 = -265.195182879087 * invT + 2.66 * tc[0];
  const amrex::Real x4468 = 0.0034 * exp(-x325 + x4467);
  const amrex::Real x4469 = sc[6] * x4468;
  const amrex::Real x4470 = x344 * x4469;
  const amrex::Real x4471 = -x4470;
  const amrex::Real x4472 = -1869.95313013034 * invT + 2.68 * tc[0];
  const amrex::Real x4473 = 0.19 * exp(-x331 + x4472);
  const amrex::Real x4474 = sc[3] * x4473;
  const amrex::Real x4475 = x344 * x4474;
  const amrex::Real x4476 = -x4475;
  const amrex::Real x4477 = 25628.8247894344 * invT;
  const amrex::Real x4478 = -x4477;
  const amrex::Real x4479 = exp(-x323 + x4478);
  const amrex::Real x4480 = 40000000.0 * sc[4];
  const amrex::Real x4481 = x4479 * x4480;
  const amrex::Real x4482 = x344 * x4481;
  const amrex::Real x4483 = -x4482;
  const amrex::Real x4484 = -3599.50881050116 * invT + 3.65 * tc[0];
  const amrex::Real x4485 = 1.81e-06 * exp(-x333 + x4484);
  const amrex::Real x4486 = x4485 * sc[10];
  const amrex::Real x4487 = x344 * x4486;
  const amrex::Real x4488 = -x4487;
  const amrex::Real x4489 = -8298.04281911983 * invT + 2.55 * tc[0];
  const amrex::Real x4490 = 0.0676 * exp(-x320 + x4489);
  const amrex::Real x4491 = sc[7] * x4490;
  const amrex::Real x4492 = x344 * x4491;
  const amrex::Real x4493 = -x4492;
  const amrex::Real x4494 = x314 * x4393;
  const amrex::Real x4495 = -x4494;
  const amrex::Real x4496 = x314 * x4399;
  const amrex::Real x4497 = -x4496;
  const amrex::Real x4498 = x314 * x4377;
  const amrex::Real x4499 = -x4498;
  const amrex::Real x4500 = x314 * x4382;
  const amrex::Real x4501 = -x4500;
  const amrex::Real x4502 = x314 * x4388;
  const amrex::Real x4503 = -x4502;
  const amrex::Real x4504 = x314 * x4405;
  const amrex::Real x4505 = -x4504;
  const amrex::Real x4506 = 50000000.0 * sc[15];
  const amrex::Real x4507 = x891 * x4506;
  const amrex::Real x4508 = 15000000.0 * sc[2];
  const amrex::Real x4509 = x891 * x4508;
  const amrex::Real x4510 = 286.83349950869 * invT;
  const amrex::Real x4511 = exp(x4510);
  const amrex::Real x4512 = 12000000.0 * sc[9] * x4511;
  const amrex::Real x4513 = x891 * x4512;
  const amrex::Real x4514 = 70000000.0 * sc[5];
  const amrex::Real x4515 = x891 * x4514;
  const amrex::Real x4516 = 15000000.0 * x595;
  const amrex::Real x4517 = sc[1] * x4516;
  const amrex::Real x4518 = x898 * x4517;
  const amrex::Real x4519 = 0.454 * tc[0];
  const amrex::Real x4520 = -2928.72099498347 * invT + x4519;
  const amrex::Real x4521 = 108000.0 * exp(x4520 - x662);
  const amrex::Real x4522 = x4521 * sc[15];
  const amrex::Real x4523 = x898 * x4522;
  const amrex::Real x4524 = -x4523;
  const amrex::Real x4525 = 130.836333109227 * invT + 0.48 * tc[0];
  const amrex::Real x4526 = -x4525;
  const amrex::Real x4527 = -586.247415662499 * invT - 2.09 * tc[0] + x4526;
  const amrex::Real x4528 = exp(x4527);
  const amrex::Real x4529 = x4526 + x599;
  const amrex::Real x4530 = 1238532.11009174 * exp(x4529) * x26;
  const amrex::Real x4531 = x605 + x33 * log(x4530);
  const amrex::Real x4532 = pow(x4531, 2);
  const amrex::Real x4533 = -0.14 * x4531 + x607;
  const amrex::Real x4534 = pow(x4533, -2);
  const amrex::Real x4535 = 1.0 + x4534 * x4532;
  const amrex::Real x4536 = pow(10, x612 / x4535);
  const amrex::Real x4537 = 1.0 + x4530;
  const amrex::Real x4538 = x4536 / x4537;
  const amrex::Real x4539 = 1350000000000.0 * x4528 * x4538 * x1843;
  const amrex::Real x4540 = x898 * x4539;
  const amrex::Real x4541 = 80000000.0 * x641;
  const amrex::Real x4542 = sc[1] * x4541;
  const amrex::Real x4543 = x898 * x4542;
  const amrex::Real x4544 = 120000000.0 * sc[1];
  const amrex::Real x4545 = x898 * x4544;
  const amrex::Real x4546 = x809 * sc[6];
  const amrex::Real x4547 = 16000000.0 * x4546;
  const amrex::Real x4548 = x891 * x4547;
  const amrex::Real x4549 = 90000000.0 * x638;
  const amrex::Real x4550 = sc[9] * x4549;
  const amrex::Real x4551 = x898 * x4550;
  const amrex::Real x4552 = -x4551;
  const amrex::Real x4553 = 30000000.0 * sc[2];
  const amrex::Real x4554 = -x898 * x4553;
  const amrex::Real x4555 = 28000000.0 * sc[8];
  const amrex::Real x4556 = x4554 + x891 * x4555;
  const amrex::Real x4557 = 30000000.0 * sc[3];
  const amrex::Real x4558 = x891 * x4557;
  const amrex::Real x4559 = -1648.03458051046 * invT + 1.05 * tc[0];
  const amrex::Real x4560 = 23000.0 * exp(x4559 - x635);
  const amrex::Real x4561 = sc[5] * x4560;
  const amrex::Real x4562 = x898 * x4561;
  const amrex::Real x4563 = x4558 - x4562;
  const amrex::Real x4564 = 1.0 * tc[0];
  const amrex::Real x4565 = -x4564;
  const amrex::Real x4566 = -8554.68331868023 * invT + x4565;
  const amrex::Real x4567 = exp(x4566);
  const amrex::Real x4568 = 187000000000.0 * x625;
  const amrex::Real x4569 = x4568 * x4567;
  const amrex::Real x4570 = 2244000000000.0 * x4567;
  const amrex::Real x4571 = sc[6] * x4570;
  const amrex::Real x4572 = -x898 * x4569 - x898 * x4571;
  const amrex::Real x4573 = -5625.96232369677 * invT - x4402;
  const amrex::Real x4574 = exp(x4573 - x571);
  const amrex::Real x4575 = x4574 * sc[15];
  const amrex::Real x4576 = 1.6e+16 * x4575;
  const amrex::Real x4577 = x591 * x4576;
  const amrex::Real x4578 = -x4577;
  const amrex::Real x4579 = 1.9 * tc[0];
  const amrex::Real x4580 = -3789.22149350954 * invT + x4579;
  const amrex::Real x4581 = 115.0 * exp(x4580 - x495);
  const amrex::Real x4582 = sc[5] * x4581;
  const amrex::Real x4583 = x591 * x4582;
  const amrex::Real x4584 = -x4583;
  const amrex::Real x4585 = 1.28 * tc[0];
  const amrex::Real x4586 = -649.466525387545 * invT + x4585;
  const amrex::Real x4587 = -x4586;
  const amrex::Real x4588 = -1029.52594440322 * invT + x4585 + x4587;
  const amrex::Real x4589 = exp(x4588 + x521);
  const amrex::Real x4590 = x4587 + x523;
  const amrex::Real x4591 = 1186.16352201258 * exp(x4590) * x26;
  const amrex::Real x4592 = x530 + x33 * log(x4591);
  const amrex::Real x4593 = pow(x4592, 2);
  const amrex::Real x4594 = -0.14 * x4592 + x532;
  const amrex::Real x4595 = pow(x4594, -2);
  const amrex::Real x4596 = 1.0 + x4593 * x4595;
  const amrex::Real x4597 = pow(10, x529 / x4596);
  const amrex::Real x4598 = 1.0 + x4591;
  const amrex::Real x4599 = x4597 / x4598;
  const amrex::Real x4600 = refC * x519 * x4599 * x4589;
  const amrex::Real x4601 = -x591 * x4600;
  const amrex::Real x4602 = -5334.09665753003 * invT + 0.1 * tc[0];
  const amrex::Real x4603 = exp(x4602 - x555);
  const amrex::Real x4604 = sc[1] * x4603;
  const amrex::Real x4605 = 4990000.0 * x4604;
  const amrex::Real x4606 = -795.082331971457 * invT - 0.99 * tc[0];
  const amrex::Real x4607 = -x4606;
  const amrex::Real x4608 = -4159.08574287601 * invT - 8.07 * tc[0] + x4607;
  const amrex::Real x4609 = x4607 + x497;
  const amrex::Real x4610 = 3.81957773512476e+17 * exp(x4609) * x26;
  const amrex::Real x4611 = x504 + x33 * log(x4610);
  const amrex::Real x4612 = pow(x4611, 2);
  const amrex::Real x4613 = -0.14 * x4611 + x508;
  const amrex::Real x4614 = pow(x4613, -2);
  const amrex::Real x4615 = 1.0 + x4612 * x4614;
  const amrex::Real x4616 = pow(10, x512 / x4615);
  const amrex::Real x4617 = 1.0 + x4610;
  const amrex::Real x4618 = x4616 / x4617;
  const amrex::Real x4619 = exp(x4608) * x4618;
  const amrex::Real x4620 = 1.99e+29 * x4619 * x1843;
  const amrex::Real x4621 = x591 * x4620;
  const amrex::Real x4622 = x899 * x4517;
  const amrex::Real x4623 = x899 * x4522;
  const amrex::Real x4624 = x899 * x4542;
  const amrex::Real x4625 = x899 * x4544;
  const amrex::Real x4626 = x899 * x4539;
  const amrex::Real x4627 = exp(x4573 - x549);
  const amrex::Real x4628 = x4627 * sc[19];
  const amrex::Real x4629 = 1.6e+16 * x4628;
  const amrex::Real x4630 = x591 * x4629;
  const amrex::Real x4631 = -x4630;
  const amrex::Real x4632 = 68000000.0 * sc[1];
  const amrex::Real x4633 = x899 * x4550;
  const amrex::Real x4634 = -6292.72440588802 * invT - 2.92 * tc[0];
  const amrex::Real x4635 = 3.7e+18 * exp(-x253 + x4634);
  const amrex::Real x4636 = sc[9] * x4635;
  const amrex::Real x4637 = x591 * x4636;
  const amrex::Real x4638 = 2000000.0 * sc[1];
  const amrex::Real x4639 = x591 * x4638;
  const amrex::Real x4640 = x899 * x4553;
  const amrex::Real x4641 = x4640 + x899 * x4569 + x899 * x4571;
  const amrex::Real x4642 = x899 * x4561;
  const amrex::Real x4643 = -1308.36333109227 * invT + x4519;
  const amrex::Real x4644 = -x4643;
  const amrex::Real x4645 = x4644 + x833;
  const amrex::Real x4646 = 4074074074074.07 * exp(x4645) * x26;
  const amrex::Real x4647 = x840 + x33 * log(x4646);
  const amrex::Real x4648 = -0.14 * x4647 + x842;
  const amrex::Real x4649 = pow(x4648, -2);
  const amrex::Real x4650 = pow(x4647, 2);
  const amrex::Real x4651 = 1.0 + x4649 * x4650;
  const amrex::Real x4652 = pow(10, x847 / x4651);
  const amrex::Real x4653 = 1.0 + x4646;
  const amrex::Real x4654 = x4652 / x4653;
  const amrex::Real x4655 = x830 * x4654;
  const amrex::Real x4656 = -4106.24799296651 * invT - 4.346 * tc[0] + x4644;
  const amrex::Real x4657 = exp(x4656 + x832);
  const amrex::Real x4658 = refC * x4657;
  const amrex::Real x4659 = x4658 * x4655;
  const amrex::Real x4660 = x4642 - x869 * x4659;
  const amrex::Real x4661 = -9368.88788395227 * invT - 2.83 * tc[0];
  const amrex::Real x4662 = 1.5e+18 * exp(x4661);
  const amrex::Real x4663 = sc[9] * x4662;
  const amrex::Real x4664 = x791 * x4663;
  const amrex::Real x4665 = -x4664;
  const amrex::Real x4666 = 1.62 * tc[0];
  const amrex::Real x4667 = -18643.2716780664 * invT + x4666;
  const amrex::Real x4668 = -x4667;
  const amrex::Real x4669 = -36657.7841965431 * invT - 1.78 * tc[0] + x4668;
  const amrex::Real x4670 = x4668 + x743;
  const amrex::Real x4671 = 66450777202072.5 * exp(x4670) * x719;
  const amrex::Real x4672 = 1.0 + x4671;
  const amrex::Real x4673 = pow(x4672, -1);
  const amrex::Real x4674 = exp(x4669) * x4673;
  const amrex::Real x4675 = x749 + x33 * log(x4671);
  const amrex::Real x4676 = -0.14 * x4675 + x752;
  const amrex::Real x4677 = pow(x4676, -2);
  const amrex::Real x4678 = pow(x4675, 2);
  const amrex::Real x4679 = 1.0 + x4678 * x4677;
  const amrex::Real x4680 = pow(10, x756 / x4679);
  const amrex::Real x4681 = 2.565e+21 * x4680;
  const amrex::Real x4682 = x4674 * x4681;
  const amrex::Real x4683 = x719 * x4682;
  const amrex::Real x4684 = -x791 * x4683;
  const amrex::Real x4685 = x796 * x4582;
  const amrex::Real x4686 = -x4685;
  const amrex::Real x4687 = 90000000.0 * sc[1];
  const amrex::Real x4688 = x791 * x4687;
  const amrex::Real x4689 = x796 * x4629;
  const amrex::Real x4690 = -x4689;
  const amrex::Real x4691 = x796 * x4638;
  const amrex::Real x4692 = x796 * x4620;
  const amrex::Real x4693 = x796 * x4636;
  const amrex::Real x4694 = -140.900666425322 * invT + 0.27 * tc[0];
  const amrex::Real x4695 = -x4694;
  const amrex::Real x4696 = x4695 + x765;
  const amrex::Real x4697 = 230263157894.737 * exp(x4696) * x719;
  const amrex::Real x4698 = x771 + x33 * log(x4697);
  const amrex::Real x4699 = pow(x4698, 2);
  const amrex::Real x4700 = -0.14 * x4698 + x774;
  const amrex::Real x4701 = pow(x4700, -2);
  const amrex::Real x4702 = 1.0 + x4701 * x4699;
  const amrex::Real x4703 = pow(10, x778 / x4702);
  const amrex::Real x4704 = 1.0 + x4697;
  const amrex::Real x4705 = x4703 / x4704;
  const amrex::Real x4706 = 1.4e+18 * x4705;
  const amrex::Real x4707 = x719 * x4706;
  const amrex::Real x4708 = -1811.57999689699 * invT - 3.59 * tc[0] + x4695;
  const amrex::Real x4709 = exp(x4708);
  const amrex::Real x4710 = sc[1] * x4709;
  const amrex::Real x4711 = x4710 * x4707;
  const amrex::Real x4712 = x791 * x4711;
  const amrex::Real x4713 = x796 * x4576;
  const amrex::Real x4714 = -x4713;
  const amrex::Real x4715 = -6516.65582217112 * invT + x4579;
  const amrex::Real x4716 = 50.7 * exp(x4715 - x717);
  const amrex::Real x4717 = sc[5] * x4716;
  const amrex::Real x4718 = x791 * x4717;
  const amrex::Real x4719 = -x4718 - x796 * x4600;
  const amrex::Real x4720 = 1.6e+16 * exp(-x218 + x4573);
  const amrex::Real x4721 = x4720 * sc[19];
  const amrex::Real x4722 = x900 * x4721;
  const amrex::Real x4723 = 1800000.0 * sc[1];
  const amrex::Real x4724 = x900 * x4723;
  const amrex::Real x4725 = 3.7e+18 * exp(x4634);
  const amrex::Real x4726 = sc[1] * x4725;
  const amrex::Real x4727 = x900 * x4726;
  const amrex::Real x4728 = -1881.67807844359 * invT + x30;
  const amrex::Real x4729 = 4.70676691729323e+19 * exp(x4728) * x26;
  const amrex::Real x4730 = x41 + x33 * log(x4729);
  const amrex::Real x4731 = x43 - 0.14 * x4730;
  const amrex::Real x4732 = pow(x4731, -2);
  const amrex::Real x4733 = pow(x4730, 2);
  const amrex::Real x4734 = 1.0 + x4732 * x4733;
  const amrex::Real x4735 = pow(10, x40 / x4734);
  const amrex::Real x4736 = 1.0 + x4729;
  const amrex::Real x4737 = x4735 / x4736;
  const amrex::Real x4738 = x198 * x4737;
  const amrex::Real x4739 = x26 * x4738;
  const amrex::Real x4740 = x900 * x4739;
  const amrex::Real x4741 = 8e+15 * exp(-x228 + x4573);
  const amrex::Real x4742 = x4741 * sc[15];
  const amrex::Real x4743 = x900 * x4742;
  const amrex::Real x4744 = 8e+15 * exp(-x275 + x4573);
  const amrex::Real x4745 = x4744 * sc[15];
  const amrex::Real x4746 = x901 * x4745;
  const amrex::Real x4747 = x27 * x4737;
  const amrex::Real x4748 = x26 * x4747;
  const amrex::Real x4749 = x81 * x4748;
  const amrex::Real x4750 = -x484 * x4749;
  const amrex::Real x4751 = 1.6e+16 * exp(x4573 - x70);
  const amrex::Real x4752 = x4751 * sc[19];
  const amrex::Real x4753 = x484 * x4752;
  const amrex::Real x4754 = -x4753;
  const amrex::Real x4755 = x297 * x4737;
  const amrex::Real x4756 = x26 * x4755;
  const amrex::Real x4757 = x901 * x4756;
  const amrex::Real x4758 = x901 * x4723;
  const amrex::Real x4759 = 1.6e+16 * exp(-x277 + x4573);
  const amrex::Real x4760 = x4759 * sc[19];
  const amrex::Real x4761 = x901 * x4760;
  const amrex::Real x4762 = 8e+15 * exp(x4573 - x74);
  const amrex::Real x4763 = x4762 * sc[15];
  const amrex::Real x4764 = x484 * x4763;
  const amrex::Real x4765 = x4761 - x4764;
  const amrex::Real x4766 = 1.6e+16 * exp(-x436 + x4573);
  const amrex::Real x4767 = x4766 * sc[19];
  const amrex::Real x4768 = x902 * x4767;
  const amrex::Real x4769 = x442 * x4748;
  const amrex::Real x4770 = x902 * x4769;
  const amrex::Real x4771 = 8e+15 * exp(-x439 + x4573);
  const amrex::Real x4772 = x4771 * sc[15];
  const amrex::Real x4773 = x902 * x4772;
  const amrex::Real x4774 = 8e+15 * exp(-x391 + x4573);
  const amrex::Real x4775 = x4774 * sc[15];
  const amrex::Real x4776 = x435 * x4775;
  const amrex::Real x4777 = -x4776;
  const amrex::Real x4778 = x388 * x4737;
  const amrex::Real x4779 = x26 * x4778;
  const amrex::Real x4780 = -x435 * x4779;
  const amrex::Real x4781 = x362 * x4737;
  const amrex::Real x4782 = x26 * x4781;
  const amrex::Real x4783 = -x374 * x4782;
  const amrex::Real x4784 = x904 * x4749;
  const amrex::Real x4785 = 1.6e+16 * exp(x4573 - x62);
  const amrex::Real x4786 = x4785 * sc[19];
  const amrex::Real x4787 = x67 * x4786;
  const amrex::Real x4788 = -x4787;
  const amrex::Real x4789 = 8e+15 * exp(-x13 + x4573);
  const amrex::Real x4790 = x4789 * sc[15];
  const amrex::Real x4791 = x67 * x4790;
  const amrex::Real x4792 = -x4791;
  const amrex::Real x4793 = x904 * x4752;
  const amrex::Real x4794 = x904 * x4763;
  const amrex::Real x4795 = x32 * x4748;
  const amrex::Real x4796 = x4794 - x67 * x4795;
  const amrex::Real x4797 = x109 * x4786;
  const amrex::Real x4798 = -x4797;
  const amrex::Real x4799 = -x109 * x4795;
  const amrex::Real x4800 = x109 * x4790;
  const amrex::Real x4801 = -x4800;
  const amrex::Real x4802 = 60000000.0 * sc[2];
  const amrex::Real x4803 = 1781.38699694871 * invT;
  const amrex::Real x4804 = -x4803;
  const amrex::Real x4805 = 39000000.0 * exp(x4804 - x632);
  const amrex::Real x4806 = sc[3] * x4805;
  const amrex::Real x4807 = x898 * x4806;
  const amrex::Real x4808 = -x4807;
  const amrex::Real x4809 = -110.707666477038 * invT + 1.83 * tc[0];
  const amrex::Real x4810 = 19.2 * exp(x4809 - x669);
  const amrex::Real x4811 = sc[9] * x4810;
  const amrex::Real x4812 = x898 * x4811;
  const amrex::Real x4813 = -x4812;
  const amrex::Real x4814 = 96000000.0 * x248;
  const amrex::Real x4815 = x4814 * sc[11];
  const amrex::Real x4816 = x591 * x4815;
  const amrex::Real x4817 = 10000000.0 * sc[2];
  const amrex::Real x4818 = x869 * x4817;
  const amrex::Real x4819 = 16040000.0 * sc[2];
  const amrex::Real x4820 = x591 * x4819;
  const amrex::Real x4821 = 1.92 * tc[0];
  const amrex::Real x4822 = -2863.30282842885 * invT + x4821;
  const amrex::Real x4823 = 89.8 * exp(x4822 - x489);
  const amrex::Real x4824 = sc[3] * x4823;
  const amrex::Real x4825 = x591 * x4824;
  const amrex::Real x4826 = -x4825;
  const amrex::Real x4827 = x899 * x4811;
  const amrex::Real x4828 = 14492.6399751759 * invT;
  const amrex::Real x4829 = 30830000.0 * exp(-x4828 - x861);
  const amrex::Real x4830 = sc[2] * x4829;
  const amrex::Real x4831 = x869 * x4830;
  const amrex::Real x4832 = x899 * x4806;
  const amrex::Real x4833 = x796 * x4815;
  const amrex::Real x4834 = -5.53538332385192 * invT + 0.29 * tc[0];
  const amrex::Real x4835 = 300000.0 * exp(x4834);
  const amrex::Real x4836 = sc[8] * x4835;
  const amrex::Real x4837 = x791 * x4836;
  const amrex::Real x4838 = -x4837;
  const amrex::Real x4839 = x796 * x4824;
  const amrex::Real x4840 = -x4839;
  const amrex::Real x4841 = -1882.03033010965 * invT + x4579;
  const amrex::Real x4842 = 15.1 * exp(x4841 - x697);
  const amrex::Real x4843 = sc[3] * x4842;
  const amrex::Real x4844 = x791 * x4843;
  const amrex::Real x4845 = -x4844;
  const amrex::Real x4846 = x796 * x4819;
  const amrex::Real x4847 = 48000000.0 * sc[2];
  const amrex::Real x4848 = x791 * x4847;
  const amrex::Real x4849 = exp(x4804 - x694);
  const amrex::Real x4850 = x4849 * x4557;
  const amrex::Real x4851 = x692 * x4850;
  const amrex::Real x4852 = x791 * x4851;
  const amrex::Real x4853 = -x4852;
  const amrex::Real x4854 = 96000000.0 * sc[2];
  const amrex::Real x4855 = x900 * x4854;
  const amrex::Real x4856 = 96000000.0 * x231 * sc[11];
  const amrex::Real x4857 = x900 * x4856;
  const amrex::Real x4858 = x901 * x4854;
  const amrex::Real x4859 = 224.93784961471 * invT + 1.18 * tc[0];
  const amrex::Real x4860 = 3430.0 * exp(x4859 - x656);
  const amrex::Real x4861 = sc[6] * x4860;
  const amrex::Real x4862 = x898 * x4861;
  const amrex::Real x4863 = -x4862;
  const amrex::Real x4864 = 754.82499870708 * invT;
  const amrex::Real x4865 = -x4864;
  const amrex::Real x4866 = 10600000.0 * exp(x4865 - x651);
  const amrex::Real x4867 = sc[3] * x4866;
  const amrex::Real x4868 = x898 * x4867;
  const amrex::Real x4869 = 30200000.0 * sc[3];
  const amrex::Real x4870 = x898 * x4869;
  const amrex::Real x4871 = 25010000.0 * x804;
  const amrex::Real x4872 = sc[6] * x4871;
  const amrex::Real x4873 = x891 * x4872;
  const amrex::Real x4874 = 8554.68331868023 * invT;
  const amrex::Real x4875 = 89000000000.0 * exp(-x4874);
  const amrex::Real x4876 = -x897 * x4875;
  const amrex::Real x4877 = -437.798499250106 * invT + 2.12 * tc[0];
  const amrex::Real x4878 = 3.54 * exp(x4877 - x492);
  const amrex::Real x4879 = sc[6] * x4878;
  const amrex::Real x4880 = x591 * x4879;
  const amrex::Real x4881 = -x4880;
  const amrex::Real x4882 = 13400000.0 * x863;
  const amrex::Real x4883 = sc[3] * x4882;
  const amrex::Real x4884 = x869 * x4883;
  const amrex::Real x4885 = x899 * x4869;
  const amrex::Real x4886 = 5000000.0 * sc[3];
  const amrex::Real x4887 = x869 * x4886;
  const amrex::Real x4888 = x899 * x4867;
  const amrex::Real x4889 = 32000000.0 * sc[1];
  const amrex::Real x4890 = 24000000.0 * sc[4];
  const amrex::Real x4891 = -x591 * x4890;
  const amrex::Real x4892 = x4891 - x869 * x4889;
  const amrex::Real x4893 = x899 * x4861;
  const amrex::Real x4894 = 24000000.0 * sc[3];
  const amrex::Real x4895 = x4894 * refCinv;
  const amrex::Real x4896 = x4895 * sc[11];
  const amrex::Real x4897 = x256 * x4896;
  const amrex::Real x4898 = x591 * x4897;
  const amrex::Real x4899 = -x4818 + x4893 + x4898;
  const amrex::Real x4900 = 10000000.0 * sc[4];
  const amrex::Real x4901 = x791 * x4900;
  const amrex::Real x4902 = -x4901;
  const amrex::Real x4903 = 3430.0 * exp(x4859 - x785);
  const amrex::Real x4904 = sc[6] * x4903;
  const amrex::Real x4905 = x692 * x4904;
  const amrex::Real x4906 = x791 * x4905;
  const amrex::Real x4907 = -x4906;
  const amrex::Real x4908 = -x796 * x4890;
  const amrex::Real x4909 = x796 * x4879;
  const amrex::Real x4910 = -x4909;
  const amrex::Real x4911 = 30110000.0 * sc[3];
  const amrex::Real x4912 = x791 * x4911;
  const amrex::Real x4913 = 2.0 * tc[0];
  const amrex::Real x4914 = -1258.0416645118 * invT + x4913;
  const amrex::Real x4915 = 3.6 * exp(x4914 - x707);
  const amrex::Real x4916 = sc[6] * x4915;
  const amrex::Real x4917 = x791 * x4916;
  const amrex::Real x4918 = -x4917;
  const amrex::Real x4919 = x796 * x4897;
  const amrex::Real x4920 = x703 * x206;
  const amrex::Real x4921 = 6600000.0 * x4920 * sc[11];
  const amrex::Real x4922 = x791 * x4921;
  const amrex::Real x4923 = x4919 + x4922;
  const amrex::Real x4924 = x900 * x4894;
  const amrex::Real x4925 = x900 * x4890;
  const amrex::Real x4926 = x212 * x2185;
  const amrex::Real x4927 = x4926 * x4924;
  const amrex::Real x4928 = x4925 - x4927;
  const amrex::Real x4929 = x901 * x4894;
  const amrex::Real x4930 = x901 * x4890;
  const amrex::Real x4931 = 4025.73332643776 * invT;
  const amrex::Real x4932 = 1000000.0 * exp(-x4931 - x647);
  const amrex::Real x4933 = sc[7] * x4932;
  const amrex::Real x4934 = x898 * x4933;
  const amrex::Real x4935 = -x4934;
  const amrex::Real x4936 = 20128.6666321888 * invT;
  const amrex::Real x4937 = 100000000.0 * exp(-x4936 - x629);
  const amrex::Real x4938 = sc[4] * x4937;
  const amrex::Real x4939 = x898 * x4938;
  const amrex::Real x4940 = 365.838516040031 * invT + 0.807 * tc[0];
  const amrex::Real x4941 = 12040.0 * exp(x4940);
  const amrex::Real x4942 = sc[8] * x4941;
  const amrex::Real x4943 = x898 * x4942;
  const amrex::Real x4944 = -x4943;
  const amrex::Real x4945 = 490.133032493797 * invT;
  const amrex::Real x4946 = 8700.0 * exp(-x4945);
  const amrex::Real x4947 = sc[7] * x4946;
  const amrex::Real x4948 = x591 * x4947;
  const amrex::Real x4949 = -x4948;
  const amrex::Real x4950 = 20000.0 * sc[8];
  const amrex::Real x4951 = x591 * x4950;
  const amrex::Real x4952 = -x4951;
  const amrex::Real x4953 = -x4884;
  const amrex::Real x4954 = 24600000.0 * sc[4];
  const amrex::Real x4955 = x899 * x4942;
  const amrex::Real x4956 = x899 * x4938;
  const amrex::Real x4957 = x899 * x4933;
  const amrex::Real x4958 = 1776.35483029066 * invT + 7.6 * tc[0];
  const amrex::Real x4959 = 4.28e-19 * exp(x4958);
  const amrex::Real x4960 = sc[8] * x4959;
  const amrex::Real x4961 = x869 * x4960;
  const amrex::Real x4962 = x4957 - x4961;
  const amrex::Real x4963 = -x4922;
  const amrex::Real x4964 = 192.93326966953 * invT + 1.61 * tc[0];
  const amrex::Real x4965 = 1.34 * exp(x4964);
  const amrex::Real x4966 = sc[8] * x4965;
  const amrex::Real x4967 = x791 * x4966;
  const amrex::Real x4968 = -x4967;
  const amrex::Real x4969 = x796 * x4947;
  const amrex::Real x4970 = -x4969;
  const amrex::Real x4971 = 30595.573280927 * invT;
  const amrex::Real x4972 = 42200000.0 * exp(-x4971 - x699);
  const amrex::Real x4973 = sc[4] * x4972;
  const amrex::Real x4974 = x791 * x4973;
  const amrex::Real x4975 = 299.917132819613 * invT;
  const amrex::Real x4976 = 12100.0 * exp(x4975);
  const amrex::Real x4977 = sc[7] * x4976;
  const amrex::Real x4978 = x791 * x4977;
  const amrex::Real x4979 = x796 * x4950;
  const amrex::Real x4980 = -x4978 - x4979;
  const amrex::Real x4981 = 3019.29999482832 * invT;
  const amrex::Real x4982 = exp(-x4981);
  const amrex::Real x4983 = 350000.0 * x4982;
  const amrex::Real x4984 = sc[8] * x4983;
  const amrex::Real x4985 = x584 * x4984;
  const amrex::Real x4986 = -x4985;
  const amrex::Real x4987 = 90000.0 * sc[8];
  const amrex::Real x4988 = x900 * x4987;
  const amrex::Real x4989 = 270000.0 * sc[8];
  const amrex::Real x4990 = x901 * x4989;
  const amrex::Real x4991 = x903 * x4984;
  const amrex::Real x4992 = x464 * x4984;
  const amrex::Real x4993 = -x4992;
  const amrex::Real x4994 = x273 * x4984;
  const amrex::Real x4995 = -x4994;
  const amrex::Real x4996 = x427 * x4984;
  const amrex::Real x4997 = -x4996;
  const amrex::Real x4998 = x344 * x4984;
  const amrex::Real x4999 = -x4998;
  const amrex::Real x5000 = x314 * x4984;
  const amrex::Real x5001 = -x5000;
  const amrex::Real x5002 = x4509 - x4545;
  const amrex::Real x5003 = -x4639;
  const amrex::Real x5004 = 20000000.0 * sc[1];
  const amrex::Real x5005 = -x869 * x5004;
  const amrex::Real x5006 = -x4691;
  const amrex::Real x5007 = -x4688;
  const amrex::Real x5008 = 12000000.0 * sc[8];
  const amrex::Real x5009 = -x4870;
  const amrex::Real x5010 = 16000000.0 * sc[1];
  const amrex::Real x5011 = -x4887;
  const amrex::Real x5012 = -x4912;
  const amrex::Real x5013 = 300000.0 * sc[4];
  const amrex::Real x5014 = -x591 * x5013;
  const amrex::Real x5015 = -x796 * x5013;
  const amrex::Real x5016 = 40000000.0 * sc[8];
  const amrex::Real x5017 = x891 * x5016;
  const amrex::Real x5018 = -508.248832462767 * invT - 1.39 * tc[0];
  const amrex::Real x5019 = 46000000000.0 * exp(x5018 - x673);
  const amrex::Real x5020 = x5019 * sc[11];
  const amrex::Real x5021 = x898 * x5020;
  const amrex::Real x5022 = -x4939;
  const amrex::Real x5023 = 13788.1366430493 * invT;
  const amrex::Real x5024 = exp(-x5023);
  const amrex::Real x5025 = 25100000000000.0 * x5024;
  const amrex::Real x5026 = x899 * x5020;
  const amrex::Real x5027 = -x4831;
  const amrex::Real x5028 = 46000000000.0 * exp(x5018);
  const amrex::Real x5029 = sc[8] * x5028;
  const amrex::Real x5030 = x791 * x5029;
  const amrex::Real x5031 = -x4974 + x5015;
  const amrex::Real x5032 = 50000000.0 * sc[8];
  const amrex::Real x5033 = x584 * x5032;
  const amrex::Real x5034 = x903 * x5032;
  const amrex::Real x5035 = x464 * x5032;
  const amrex::Real x5036 = x273 * x5032;
  const amrex::Real x5037 = x427 * x5032;
  const amrex::Real x5038 = x344 * x5032;
  const amrex::Real x5039 = x314 * x5032;
  const amrex::Real x5040 = -2948.84966161566 * invT + 2.81 * tc[0];
  const amrex::Real x5041 = 0.00332 * exp(x5040 - x664);
  const amrex::Real x5042 = x5041 * sc[10];
  const amrex::Real x5043 = x898 * x5042;
  const amrex::Real x5044 = -x5043;
  const amrex::Real x5045 = 32000000.0 * x4511;
  const amrex::Real x5046 = x5045 * sc[10];
  const amrex::Real x5047 = 276.769166192596 * invT;
  const amrex::Real x5048 = exp(x5047);
  const amrex::Real x5049 = 40000000.0 * x5048 * sc[16];
  const amrex::Real x5050 = x891 * x5049;
  const amrex::Real x5051 = 8480000.0 * sc[9];
  const amrex::Real x5052 = x898 * x5051;
  const amrex::Real x5053 = -5258.61415765932 * invT + 1.74 * tc[0];
  const amrex::Real x5054 = 6.14 * exp(x5053 - x560);
  const amrex::Real x5055 = x5054 * sc[10];
  const amrex::Real x5056 = x591 * x5055;
  const amrex::Real x5057 = -x5056;
  const amrex::Real x5058 = x899 * x5051;
  const amrex::Real x5059 = 9980000.0 * x4604;
  const amrex::Real x5060 = exp(x5047 - x545);
  const amrex::Real x5061 = 40000000.0 * sc[9];
  const amrex::Real x5062 = x5061 * x5060;
  const amrex::Real x5063 = x591 * x5062;
  const amrex::Real x5064 = x899 * x5042;
  const amrex::Real x5065 = -x4820 + x5064;
  const amrex::Real x5066 = -x4848;
  const amrex::Real x5067 = x796 * x5055;
  const amrex::Real x5068 = -x5067;
  const amrex::Real x5069 = x796 * x5062;
  const amrex::Real x5070 = -4629.59332540342 * invT + x4913;
  const amrex::Real x5071 = 0.227 * exp(x5070 - x689);
  const amrex::Real x5072 = x5071 * sc[10];
  const amrex::Real x5073 = x791 * x5072;
  const amrex::Real x5074 = -x5073;
  const amrex::Real x5075 = 1.708e+39 * x722;
  const amrex::Real x5076 = x728 + x33 * log(x5075);
  const amrex::Real x5077 = -0.14 * x5076 + x731;
  const amrex::Real x5078 = pow(x5077, -2);
  const amrex::Real x5079 = pow(x5076, 2);
  const amrex::Real x5080 = 1.0 + x5078 * x5079;
  const amrex::Real x5081 = pow(10, x735 / x5080);
  const amrex::Real x5082 = 1.0 + x5075;
  const amrex::Real x5083 = x5081 / x5082;
  const amrex::Real x5084 = x723 * sc[9] * x5083;
  const amrex::Real x5085 = x791 * x5084;
  const amrex::Real x5086 = 392000.0 * sc[9];
  const amrex::Real x5087 = x791 * x5086;
  const amrex::Real x5088 = -x4846 + x4908;
  const amrex::Real x5089 = 15611.2604302599 * invT;
  const amrex::Real x5090 = 96000000000000.0 * exp(-x5089);
  const amrex::Real x5091 = x900 * x5090;
  const amrex::Real x5092 = 11000000.0 * sc[9];
  const amrex::Real x5093 = x900 * x5092;
  const amrex::Real x5094 = x901 * x5092;
  const amrex::Real x5095 = x4511 * sc[10];
  const amrex::Real x5096 = 16000000.0 * x5095;
  const amrex::Real x5097 = -x5052;
  const amrex::Real x5098 = -x5087;
  const amrex::Real x5099 = 14000000.0 * sc[13];
  const amrex::Real x5100 = x891 * x5099;
  const amrex::Real x5101 = 60000000.0 * sc[18];
  const amrex::Real x5102 = x898 * x5101;
  const amrex::Real x5103 = -x5102;
  const amrex::Real x5104 = -3019.29999482832 * invT + x4913;
  const amrex::Real x5105 = exp(x5104);
  const amrex::Real x5106 = x5105 * sc[14];
  const amrex::Real x5107 = 10.0 * x5106;
  const amrex::Real x5108 = x898 * x5107;
  const amrex::Real x5109 = 60000000.0 * sc[21];
  const amrex::Real x5110 = x898 * x5109;
  const amrex::Real x5111 = -x5110;
  const amrex::Real x5112 = -4025.73332643776 * invT + x4913;
  const amrex::Real x5113 = exp(x5112);
  const amrex::Real x5114 = x5113 * sc[15];
  const amrex::Real x5115 = 10.0 * x5114;
  const amrex::Real x5116 = x898 * x5115;
  const amrex::Real x5117 = x899 * x5109;
  const amrex::Real x5118 = x899 * x5101;
  const amrex::Real x5119 = 10.0 * exp(x5112 - x567);
  const amrex::Real x5120 = x5119 * sc[12];
  const amrex::Real x5121 = x591 * x5120;
  const amrex::Real x5122 = x899 * x5107;
  const amrex::Real x5123 = x899 * x5115;
  const amrex::Real x5124 = 10.0 * exp(x5104 - x711);
  const amrex::Real x5125 = x5124 * sc[12];
  const amrex::Real x5126 = x791 * x5125;
  const amrex::Real x5127 = x796 * x5120;
  const amrex::Real x5128 = -7155.74098774311 * invT - 8.47 * tc[0];
  const amrex::Real x5129 = 7.93e+32 * exp(x5128);
  const amrex::Real x5130 = x5129 * sc[15];
  const amrex::Real x5131 = x791 * x5130;
  const amrex::Real x5132 = 3673.48166037445 * invT;
  const amrex::Real x5133 = exp(-x5132);
  const amrex::Real x5134 = 300000.0 * x5133;
  const amrex::Real x5135 = x5134 * sc[15];
  const amrex::Real x5136 = -x5132;
  const amrex::Real x5137 = 300000.0 * refC;
  const amrex::Real x5138 = exp(x5136 - x77) * x5137;
  const amrex::Real x5139 = exp(-x308 + x5136) * x5137;
  const amrex::Real x5140 = exp(-x394 + x5136) * x5137;
  const amrex::Real x5141 = exp(-x347 + x5136) * x5137;
  const amrex::Real x5142 = exp(-x328 + x5136) * x5137;
  const amrex::Real x5143 = x67 * x5135;
  const amrex::Real x5144 = exp(x5136 - x55) * x5137;
  const amrex::Real x5145 = x109 * x5135;
  const amrex::Real x5146 = exp(-x422 + x5136) * x5137;
  const amrex::Real x5147 = -x427 * x5146;
  const amrex::Real x5148 = x5134 * sc[22];
  const amrex::Real x5149 = exp(-x412 + x5136) * x5137;
  const amrex::Real x5150 = 35696.6303005228 * invT;
  const amrex::Real x5151 = 3.5e+16 * exp(-x17 - x5150) * refCinv;
  const amrex::Real x5152 = x5151 * sc[23];
  const amrex::Real x5153 = x67 * x5152;
  const amrex::Real x5154 = x109 * x5152;
  const amrex::Real x5155 = exp(-x3 + x5136);
  const amrex::Real x5156 = x5137 * x5155;
  const amrex::Real x5157 = x5134 * sc[24];
  const amrex::Real x5158 = exp(-x149 + x5136);
  const amrex::Real x5159 = x5137 * x5158;
  const amrex::Real x5160 = x5134 * sc[25];
  const amrex::Real x5161 = exp(-x103 + x5136);
  const amrex::Real x5162 = x5161 * x5137;
  const amrex::Real x5163 = x5134 * sc[26];
  const amrex::Real x5164 = exp(-x122 + x5136);
  const amrex::Real x5165 = x5164 * x5137;
  const amrex::Real x5166 = x5134 * sc[27];
  const amrex::Real x5167 = exp(-x152 + x5136);
  const amrex::Real x5168 = x5167 * x5137;
  const amrex::Real x5169 = x5134 * sc[28];
  const amrex::Real x5170 = x5134 * sc[30];
  const amrex::Real x5171 = exp(-x163 + x5136);
  const amrex::Real x5172 = x5171 * x5137;
  const amrex::Real x5173 = x4373 * x3958;
  const amrex::Real x5174 = -x5173;
  const amrex::Real x5175 = x4373 * x3955;
  const amrex::Real x5176 = -x4371;
  const amrex::Real x5177 = 188000000.0 * refC;
  const amrex::Real x5178 = exp(-x1607 + x5176) * x5177;
  const amrex::Real x5179 = 0.19 * exp(x4472);
  const amrex::Real x5180 = sc[2] * x5179;
  const amrex::Real x5181 = x4266 * x4393;
  const amrex::Real x5182 = x4447 * x1877;
  const amrex::Real x5183 = x4474 * x1886;
  const amrex::Real x5184 = 0.238 * exp(x4391);
  const amrex::Real x5185 = sc[2] * x5184;
  const amrex::Real x5186 = x4233 * x4474;
  const amrex::Real x5187 = x4263 * x4393;
  const amrex::Real x5188 = -x5186 - x5187;
  const amrex::Real x5189 = -x5180 + x5181 - x5182 + x5183 - x5185 + x5188;
  const amrex::Real x5190 = x4439 * x1877;
  const amrex::Real x5191 = x4481 * x1886;
  const amrex::Real x5192 = x4266 * x4399;
  const amrex::Real x5193 = exp(-x4477);
  const amrex::Real x5194 = 40000000.0 * x5193;
  const amrex::Real x5195 = sc[8] * x5194;
  const amrex::Real x5196 = 200000000.0 * exp(-x4396);
  const amrex::Real x5197 = sc[8] * x5196;
  const amrex::Real x5198 = x4233 * x4481;
  const amrex::Real x5199 = x4263 * x4399;
  const amrex::Real x5200 = -x5198 - x5199;
  const amrex::Real x5201 = -x5190 + x5191 + x5192 - x5195 - x5197 + x5200;
  const amrex::Real x5202 = x4491 * x1886;
  const amrex::Real x5203 = x4459 * x1877;
  const amrex::Real x5204 = 0.0676 * exp(x4489);
  const amrex::Real x5205 = sc[4] * x5204;
  const amrex::Real x5206 = x4266 * x4382;
  const amrex::Real x5207 = exp(x4380);
  const amrex::Real x5208 = 0.1775 * x5207;
  const amrex::Real x5209 = sc[4] * x5208;
  const amrex::Real x5210 = x4263 * x4382;
  const amrex::Real x5211 = x4233 * x4491;
  const amrex::Real x5212 = -x5210 - x5211;
  const amrex::Real x5213 = x5202 - x5203 - x5205 + x5206 - x5209 + x5212;
  const amrex::Real x5214 = x4443 * x1877;
  const amrex::Real x5215 = exp(x4467);
  const amrex::Real x5216 = 0.0034 * x5215;
  const amrex::Real x5217 = sc[3] * x5216;
  const amrex::Real x5218 = x4266 * x4405;
  const amrex::Real x5219 = x4469 * x1886;
  const amrex::Real x5220 = 0.175 * exp(x4403);
  const amrex::Real x5221 = sc[3] * x5220;
  const amrex::Real x5222 = x4233 * x4469;
  const amrex::Real x5223 = x4263 * x4405;
  const amrex::Real x5224 = -x5222 - x5223;
  const amrex::Real x5225 = -x5214 - x5217 + x5218 + x5219 - x5221 + x5224;
  const amrex::Real x5226 = x4266 * x4377;
  const amrex::Real x5227 = exp(x4484);
  const amrex::Real x5228 = 1.81e-06 * x5227;
  const amrex::Real x5229 = sc[9] * x5228;
  const amrex::Real x5230 = x4486 * x1886;
  const amrex::Real x5231 = x4451 * x1877;
  const amrex::Real x5232 = 1.5e-05 * exp(x4375);
  const amrex::Real x5233 = sc[9] * x5232;
  const amrex::Real x5234 = x4263 * x4377;
  const amrex::Real x5235 = x4233 * x4486;
  const amrex::Real x5236 = -x5234 - x5235;
  const amrex::Real x5237 = x5226 - x5229 + x5230 - x5231 - x5233 + x5236;
  const amrex::Real x5238 = x4266 * x4388;
  const amrex::Real x5239 = exp(x4462);
  const amrex::Real x5240 = 1.3 * x5239;
  const amrex::Real x5241 = sc[1] * x5240;
  const amrex::Real x5242 = x4455 * x1877;
  const amrex::Real x5243 = 6.5 * exp(x4386);
  const amrex::Real x5244 = sc[1] * x5243;
  const amrex::Real x5245 = x4464 * x1886;
  const amrex::Real x5246 = x4233 * x4464;
  const amrex::Real x5247 = x4263 * x4388;
  const amrex::Real x5248 = -x5246 - x5247;
  const amrex::Real x5249 = x5238 - x5241 - x5242 - x5244 + x5245 + x5248;
  const amrex::Real x5250 = x4373 * x3961;
  const amrex::Real x5251 = x4373 * x3960;
  const amrex::Real x5252 = x425 * sc[0];
  const amrex::Real x5253 = x4439 * x5252;
  const amrex::Real x5254 = x5253 * kf_qss[163];
  const amrex::Real x5255 = x4267 * x4399;
  const amrex::Real x5256 = x4481 * x2084;
  const amrex::Real x5257 = x5200 - x5254 + x5255 + x5256;
  const amrex::Real x5258 = x4267 * x4393;
  const amrex::Real x5259 = x4447 * x5252;
  const amrex::Real x5260 = x5259 * kf_qss[163];
  const amrex::Real x5261 = x4474 * x2084;
  const amrex::Real x5262 = x5188 + x5258 - x5260 + x5261;
  const amrex::Real x5263 = x4267 * x4382;
  const amrex::Real x5264 = x4491 * x2084;
  const amrex::Real x5265 = x4459 * x5252;
  const amrex::Real x5266 = x5265 * kf_qss[163];
  const amrex::Real x5267 = x5212 + x5263 + x5264 - x5266;
  const amrex::Real x5268 = x425 * x4443;
  const amrex::Real x5269 = sc[0] * x5268;
  const amrex::Real x5270 = x5269 * kf_qss[163];
  const amrex::Real x5271 = x4469 * x2084;
  const amrex::Real x5272 = x4267 * x4405;
  const amrex::Real x5273 = x5224 - x5270 + x5271 + x5272;
  const amrex::Real x5274 = x4267 * x4377;
  const amrex::Real x5275 = x4451 * x5252;
  const amrex::Real x5276 = x5275 * kf_qss[163];
  const amrex::Real x5277 = x4486 * x2084;
  const amrex::Real x5278 = x5236 + x5274 - x5276 + x5277;
  const amrex::Real x5279 = x4464 * x2084;
  const amrex::Real x5280 = sc[0] * x5240;
  const amrex::Real x5281 = x4267 * x4388;
  const amrex::Real x5282 = x4455 * x5252;
  const amrex::Real x5283 = x5282 * kf_qss[163];
  const amrex::Real x5284 = sc[0] * x5243;
  const amrex::Real x5285 = x5248 + x5279 - x5280 + x5281 - x5283 - x5284;
  const amrex::Real x5286 = x4373 * x3963;
  const amrex::Real x5287 = x4373 * x3962;
  const amrex::Real x5288 = x5253 * kf_qss[166];
  const amrex::Real x5289 = x4481 * x2159;
  const amrex::Real x5290 = x4269 * x4399;
  const amrex::Real x5291 = x5200 - x5288 + x5289 + x5290;
  const amrex::Real x5292 = x4491 * x2159;
  const amrex::Real x5293 = x4269 * x4382;
  const amrex::Real x5294 = x5265 * kf_qss[166];
  const amrex::Real x5295 = x5212 + x5292 + x5293 - x5294;
  const amrex::Real x5296 = x5269 * kf_qss[166];
  const amrex::Real x5297 = x4269 * x4405;
  const amrex::Real x5298 = x4469 * x2159;
  const amrex::Real x5299 = x5224 - x5296 + x5297 + x5298;
  const amrex::Real x5300 = x4269 * x4377;
  const amrex::Real x5301 = x4486 * x2159;
  const amrex::Real x5302 = x5275 * kf_qss[166];
  const amrex::Real x5303 = x5236 + x5300 + x5301 - x5302;
  const amrex::Real x5304 = x4464 * x2159;
  const amrex::Real x5305 = x4269 * x4388;
  const amrex::Real x5306 = x5282 * kf_qss[166];
  const amrex::Real x5307 = x5248 + x5304 + x5305 - x5306;
  const amrex::Real x5308 = x4269 * x4393;
  const amrex::Real x5309 = sc[0] * x5179;
  const amrex::Real x5310 = x4474 * x2159;
  const amrex::Real x5311 = x5259 * kf_qss[166];
  const amrex::Real x5312 = sc[0] * x5184;
  const amrex::Real x5313 = x5188 + x5308 - x5309 + x5310 - x5311 - x5312;
  const amrex::Real x5314 = x4373 * x3965;
  const amrex::Real x5315 = x4373 * x3964;
  const amrex::Real x5316 = x4223 * x4439;
  const amrex::Real x5317 = x4235 * x4481;
  const amrex::Real x5318 = x4238 * x4481;
  const amrex::Real x5319 = x4275 * x4399;
  const amrex::Real x5320 = x4270 * x4399;
  const amrex::Real x5321 = x5316 - x5317 + x5318 + x5319 - x5320;
  const amrex::Real x5322 = x4270 * x4382;
  const amrex::Real x5323 = x4275 * x4382;
  const amrex::Real x5324 = x4235 * x4491;
  const amrex::Real x5325 = x4238 * x4491;
  const amrex::Real x5326 = x4223 * x4459;
  const amrex::Real x5327 = -x5322 + x5323 - x5324 + x5325 + x5326;
  const amrex::Real x5328 = x4275 * x4377;
  const amrex::Real x5329 = x4235 * x4486;
  const amrex::Real x5330 = x4238 * x4486;
  const amrex::Real x5331 = x4270 * x4377;
  const amrex::Real x5332 = x4223 * x4451;
  const amrex::Real x5333 = x5328 - x5329 + x5330 - x5331 + x5332;
  const amrex::Real x5334 = x4235 * x4464;
  const amrex::Real x5335 = x4238 * x4464;
  const amrex::Real x5336 = x4223 * x4455;
  const amrex::Real x5337 = x4270 * x4388;
  const amrex::Real x5338 = x4275 * x4388;
  const amrex::Real x5339 = -x5334 + x5335 + x5336 - x5337 + x5338;
  const amrex::Real x5340 = sc[0] * x5216;
  const amrex::Real x5341 = x4235 * x4469;
  const amrex::Real x5342 = x4270 * x4405;
  const amrex::Real x5343 = x4238 * x4469;
  const amrex::Real x5344 = x4223 * x4443;
  const amrex::Real x5345 = sc[0] * x5220;
  const amrex::Real x5346 = x4275 * x4405;
  const amrex::Real x5347 =
    -x5340 - x5341 - x5342 + x5343 + x5344 - x5345 + x5346;
  const amrex::Real x5348 = x4270 * x4393;
  const amrex::Real x5349 = x4275 * x4393;
  const amrex::Real x5350 = x340 * x4230;
  const amrex::Real x5351 = x4473 * x5350;
  const amrex::Real x5352 = x4238 * x4474;
  const amrex::Real x5353 = x4223 * x4447;
  const amrex::Real x5354 = x182 * x4261;
  const amrex::Real x5355 = x4392 * x5354;
  const amrex::Real x5356 = x4235 * x4474;
  const amrex::Real x5357 = x427 * sc_qss[11];
  const amrex::Real x5358 = -x1554 - x5357;
  const amrex::Real x5359 = x4446 * x5358;
  const amrex::Real x5360 =
    -x5348 + x5349 + x5351 + x5352 + x5353 + x5355 - x5356 + x5359;
  const amrex::Real x5361 = x4373 * x3966;
  const amrex::Real x5362 = x4373 * x3967;
  const amrex::Real x5363 = x4239 * x4474;
  const amrex::Real x5364 = x4240 * x4474;
  const amrex::Real x5365 = x4277 * x4393;
  const amrex::Real x5366 = x4276 * x4393;
  const amrex::Real x5367 = x4224 * x4447;
  const amrex::Real x5368 = -x5363 + x5364 + x5365 - x5366 + x5367;
  const amrex::Real x5369 = x4224 * x4443;
  const amrex::Real x5370 = x4239 * x4469;
  const amrex::Real x5371 = x4240 * x4469;
  const amrex::Real x5372 = x4276 * x4405;
  const amrex::Real x5373 = x4277 * x4405;
  const amrex::Real x5374 = x5369 - x5370 + x5371 - x5372 + x5373;
  const amrex::Real x5375 = x4276 * x4377;
  const amrex::Real x5376 = x4239 * x4486;
  const amrex::Real x5377 = x4240 * x4486;
  const amrex::Real x5378 = x4224 * x4451;
  const amrex::Real x5379 = x4277 * x4377;
  const amrex::Real x5380 = -x5375 - x5376 + x5377 + x5378 + x5379;
  const amrex::Real x5381 = x4240 * x4464;
  const amrex::Real x5382 = x4276 * x4388;
  const amrex::Real x5383 = x4277 * x4388;
  const amrex::Real x5384 = x4224 * x4455;
  const amrex::Real x5385 = x4239 * x4464;
  const amrex::Real x5386 = x5381 - x5382 + x5383 + x5384 - x5385;
  const amrex::Real x5387 = x4277 * x4382;
  const amrex::Real x5388 = x4276 * x4382;
  const amrex::Real x5389 = x4239 * x4491;
  const amrex::Real x5390 = sc[0] * x5208;
  const amrex::Real x5391 = x4240 * x4491;
  const amrex::Real x5392 = x4224 * x4459;
  const amrex::Real x5393 = sc[0] * x5204;
  const amrex::Real x5394 =
    x5387 - x5388 - x5389 - x5390 + x5391 + x5392 - x5393;
  const amrex::Real x5395 = x4224 * x4439;
  const amrex::Real x5396 = x4239 * x4481;
  const amrex::Real x5397 = x4240 * x4481;
  const amrex::Real x5398 = x4277 * x4399;
  const amrex::Real x5399 = x4276 * x4399;
  const amrex::Real x5400 = x4438 * x5358;
  const amrex::Real x5401 = x4398 * x5354;
  const amrex::Real x5402 = 40000000.0 * x4479 * x5350;
  const amrex::Real x5403 =
    x5395 - x5396 + x5397 + x5398 - x5399 + x5400 + x5401 + x5402;
  const amrex::Real x5404 = x4373 * x3969;
  const amrex::Real x5405 = x4373 * x3968;
  const amrex::Real x5406 = x4242 * x4481;
  const amrex::Real x5407 = x4241 * x4481;
  const amrex::Real x5408 = x4225 * x4439;
  const amrex::Real x5409 = x4279 * x4399;
  const amrex::Real x5410 = x4278 * x4399;
  const amrex::Real x5411 = x5406 - x5407 + x5408 + x5409 - x5410;
  const amrex::Real x5412 = x4278 * x4393;
  const amrex::Real x5413 = x4241 * x4474;
  const amrex::Real x5414 = x4242 * x4474;
  const amrex::Real x5415 = x4279 * x4393;
  const amrex::Real x5416 = x4225 * x4447;
  const amrex::Real x5417 = -x5412 - x5413 + x5414 + x5415 + x5416;
  const amrex::Real x5418 = x4278 * x4382;
  const amrex::Real x5419 = x4279 * x4382;
  const amrex::Real x5420 = x4225 * x4459;
  const amrex::Real x5421 = x4242 * x4491;
  const amrex::Real x5422 = x4241 * x4491;
  const amrex::Real x5423 = -x5418 + x5419 + x5420 + x5421 - x5422;
  const amrex::Real x5424 = x4225 * x4443;
  const amrex::Real x5425 = x4241 * x4469;
  const amrex::Real x5426 = x4242 * x4469;
  const amrex::Real x5427 = x4278 * x4405;
  const amrex::Real x5428 = x4279 * x4405;
  const amrex::Real x5429 = x5424 - x5425 + x5426 - x5427 + x5428;
  const amrex::Real x5430 = x4278 * x4377;
  const amrex::Real x5431 = x4279 * x4377;
  const amrex::Real x5432 = x4242 * x4486;
  const amrex::Real x5433 = x4241 * x4486;
  const amrex::Real x5434 = x4225 * x4451;
  const amrex::Real x5435 = -x5430 + x5431 + x5432 - x5433 + x5434;
  const amrex::Real x5436 = x4241 * x4464;
  const amrex::Real x5437 = x4242 * x4464;
  const amrex::Real x5438 = x4225 * x4455;
  const amrex::Real x5439 = x4463 * x5350;
  const amrex::Real x5440 = x4278 * x4388;
  const amrex::Real x5441 = x4387 * x5354;
  const amrex::Real x5442 = x4279 * x4388;
  const amrex::Real x5443 = x4454 * x5358;
  const amrex::Real x5444 =
    -x5436 + x5437 + x5438 + x5439 - x5440 + x5441 + x5442 + x5443;
  const amrex::Real x5445 = x4373 * x3971;
  const amrex::Real x5446 = x4373 * x3970;
  const amrex::Real x5447 = x4226 * x4439;
  const amrex::Real x5448 = x4243 * x4481;
  const amrex::Real x5449 = x4244 * x4481;
  const amrex::Real x5450 = x4281 * x4399;
  const amrex::Real x5451 = x4280 * x4399;
  const amrex::Real x5452 = x5447 - x5448 + x5449 + x5450 - x5451;
  const amrex::Real x5453 = x4226 * x4447;
  const amrex::Real x5454 = x4281 * x4393;
  const amrex::Real x5455 = x4244 * x4474;
  const amrex::Real x5456 = x4280 * x4393;
  const amrex::Real x5457 = x4243 * x4474;
  const amrex::Real x5458 = x5453 + x5454 + x5455 - x5456 - x5457;
  const amrex::Real x5459 = x4281 * x4382;
  const amrex::Real x5460 = x4243 * x4491;
  const amrex::Real x5461 = x4244 * x4491;
  const amrex::Real x5462 = x4280 * x4382;
  const amrex::Real x5463 = x4226 * x4459;
  const amrex::Real x5464 = x5459 - x5460 + x5461 - x5462 + x5463;
  const amrex::Real x5465 = x4280 * x4377;
  const amrex::Real x5466 = x4281 * x4377;
  const amrex::Real x5467 = x4244 * x4486;
  const amrex::Real x5468 = x4243 * x4486;
  const amrex::Real x5469 = x4226 * x4451;
  const amrex::Real x5470 = -x5465 + x5466 + x5467 - x5468 + x5469;
  const amrex::Real x5471 = x4244 * x4464;
  const amrex::Real x5472 = x4226 * x4455;
  const amrex::Real x5473 = x4280 * x4388;
  const amrex::Real x5474 = x4281 * x4388;
  const amrex::Real x5475 = x4243 * x4464;
  const amrex::Real x5476 = x5471 + x5472 - x5473 + x5474 - x5475;
  const amrex::Real x5477 = x4226 * x4443;
  const amrex::Real x5478 = x4442 * x5358;
  const amrex::Real x5479 = x4468 * x5350;
  const amrex::Real x5480 = x4244 * x4469;
  const amrex::Real x5481 = x4280 * x4405;
  const amrex::Real x5482 = x4281 * x4405;
  const amrex::Real x5483 = x4404 * x5354;
  const amrex::Real x5484 = x4243 * x4469;
  const amrex::Real x5485 =
    x5477 + x5478 + x5479 + x5480 - x5481 + x5482 + x5483 - x5484;
  const amrex::Real x5486 = x4373 * x3973;
  const amrex::Real x5487 = x4373 * x3972;
  const amrex::Real x5488 = x4283 * x4393;
  const amrex::Real x5489 = x4245 * x4474;
  const amrex::Real x5490 = x4282 * x4393;
  const amrex::Real x5491 = x4227 * x4447;
  const amrex::Real x5492 = x4246 * x4474;
  const amrex::Real x5493 = x5488 - x5489 - x5490 + x5491 + x5492;
  const amrex::Real x5494 = x4227 * x4439;
  const amrex::Real x5495 = x4246 * x4481;
  const amrex::Real x5496 = x4245 * x4481;
  const amrex::Real x5497 = x4282 * x4399;
  const amrex::Real x5498 = x4283 * x4399;
  const amrex::Real x5499 = x5494 + x5495 - x5496 - x5497 + x5498;
  const amrex::Real x5500 = x4227 * x4443;
  const amrex::Real x5501 = x4245 * x4469;
  const amrex::Real x5502 = x4246 * x4469;
  const amrex::Real x5503 = x4282 * x4405;
  const amrex::Real x5504 = x4283 * x4405;
  const amrex::Real x5505 = x5500 - x5501 + x5502 - x5503 + x5504;
  const amrex::Real x5506 = x4283 * x4377;
  const amrex::Real x5507 = x4245 * x4486;
  const amrex::Real x5508 = x4282 * x4377;
  const amrex::Real x5509 = x4227 * x4451;
  const amrex::Real x5510 = x4246 * x4486;
  const amrex::Real x5511 = x5506 - x5507 - x5508 + x5509 + x5510;
  const amrex::Real x5512 = x4245 * x4464;
  const amrex::Real x5513 = x4246 * x4464;
  const amrex::Real x5514 = x4227 * x4455;
  const amrex::Real x5515 = x4282 * x4388;
  const amrex::Real x5516 = x4283 * x4388;
  const amrex::Real x5517 = -x5512 + x5513 + x5514 - x5515 + x5516;
  const amrex::Real x5518 = x4282 * x4382;
  const amrex::Real x5519 = x4283 * x4382;
  const amrex::Real x5520 = x4227 * x4459;
  const amrex::Real x5521 = x4245 * x4491;
  const amrex::Real x5522 = x4246 * x4491;
  const amrex::Real x5523 = x4381 * x5354;
  const amrex::Real x5524 = x4490 * x5350;
  const amrex::Real x5525 = x4458 * x5358;
  const amrex::Real x5526 =
    -x5518 + x5519 + x5520 - x5521 + x5522 + x5523 + x5524 + x5525;
  const amrex::Real x5527 = x4373 * x3975;
  const amrex::Real x5528 = x4373 * x3974;
  const amrex::Real x5529 = x4285 * x4393;
  const amrex::Real x5530 = x4247 * x4474;
  const amrex::Real x5531 = x4228 * x4447;
  const amrex::Real x5532 = x4248 * x4474;
  const amrex::Real x5533 = x4284 * x4393;
  const amrex::Real x5534 = x5529 - x5530 + x5531 + x5532 - x5533;
  const amrex::Real x5535 = x4247 * x4491;
  const amrex::Real x5536 = x4284 * x4382;
  const amrex::Real x5537 = x4285 * x4382;
  const amrex::Real x5538 = x4248 * x4491;
  const amrex::Real x5539 = x4228 * x4459;
  const amrex::Real x5540 = -x5535 - x5536 + x5537 + x5538 + x5539;
  const amrex::Real x5541 = x4228 * x4443;
  const amrex::Real x5542 = x4248 * x4469;
  const amrex::Real x5543 = x4247 * x4469;
  const amrex::Real x5544 = x4284 * x4405;
  const amrex::Real x5545 = x4285 * x4405;
  const amrex::Real x5546 = x5541 + x5542 - x5543 - x5544 + x5545;
  const amrex::Real x5547 = x4284 * x4377;
  const amrex::Real x5548 = x4285 * x4377;
  const amrex::Real x5549 = x4247 * x4486;
  const amrex::Real x5550 = x4248 * x4486;
  const amrex::Real x5551 = x4228 * x4451;
  const amrex::Real x5552 = -x5547 + x5548 - x5549 + x5550 + x5551;
  const amrex::Real x5553 = x4247 * x4464;
  const amrex::Real x5554 = x4248 * x4464;
  const amrex::Real x5555 = x4285 * x4388;
  const amrex::Real x5556 = x4284 * x4388;
  const amrex::Real x5557 = x4228 * x4455;
  const amrex::Real x5558 = -x5553 + x5554 + x5555 - x5556 + x5557;
  const amrex::Real x5559 = x4228 * x4439;
  const amrex::Real x5560 = x4248 * x4481;
  const amrex::Real x5561 = sc[0] * x5194;
  const amrex::Real x5562 = x4284 * x4399;
  const amrex::Real x5563 = x4247 * x4481;
  const amrex::Real x5564 = sc[0] * x5196;
  const amrex::Real x5565 = x4285 * x4399;
  const amrex::Real x5566 =
    x5559 + x5560 - x5561 - x5562 - x5563 - x5564 + x5565;
  const amrex::Real x5567 = x4373 * x3976;
  const amrex::Real x5568 = x4373 * x3977;
  const amrex::Real x5569 = x4481 * x2765;
  const amrex::Real x5570 = x4286 * x4399;
  const amrex::Real x5571 = x5253 * kf_qss[178];
  const amrex::Real x5572 = x5200 + x5569 + x5570 - x5571;
  const amrex::Real x5573 = x4286 * x4393;
  const amrex::Real x5574 = x5259 * kf_qss[178];
  const amrex::Real x5575 = x4474 * x2765;
  const amrex::Real x5576 = x5188 + x5573 - x5574 + x5575;
  const amrex::Real x5577 = x4286 * x4382;
  const amrex::Real x5578 = x4491 * x2765;
  const amrex::Real x5579 = x5265 * kf_qss[178];
  const amrex::Real x5580 = x5212 + x5577 + x5578 - x5579;
  const amrex::Real x5581 = x5269 * kf_qss[178];
  const amrex::Real x5582 = x4286 * x4405;
  const amrex::Real x5583 = x4469 * x2765;
  const amrex::Real x5584 = x5224 - x5581 + x5582 + x5583;
  const amrex::Real x5585 = x4286 * x4388;
  const amrex::Real x5586 = x4464 * x2765;
  const amrex::Real x5587 = x5282 * kf_qss[178];
  const amrex::Real x5588 = x5248 + x5585 + x5586 - x5587;
  const amrex::Real x5589 = x4286 * x4377;
  const amrex::Real x5590 = x4486 * x2765;
  const amrex::Real x5591 = sc[0] * x5228;
  const amrex::Real x5592 = x5275 * kf_qss[178];
  const amrex::Real x5593 = sc[0] * x5232;
  const amrex::Real x5594 = x5236 + x5589 + x5590 - x5591 - x5592 - x5593;
  const amrex::Real x5595 = x4373 * x3978;
  const amrex::Real x5596 = x4373 * x3979;
  const amrex::Real x5597 = x4229 * x4439;
  const amrex::Real x5598 = x4250 * x4481;
  const amrex::Real x5599 = x4249 * x4481;
  const amrex::Real x5600 = x4288 * x4399;
  const amrex::Real x5601 = x4287 * x4399;
  const amrex::Real x5602 = x5597 + x5598 - x5599 + x5600 - x5601;
  const amrex::Real x5603 = x4250 * x4474;
  const amrex::Real x5604 = x4287 * x4393;
  const amrex::Real x5605 = x4288 * x4393;
  const amrex::Real x5606 = x4249 * x4474;
  const amrex::Real x5607 = x4229 * x4447;
  const amrex::Real x5608 = x5603 - x5604 + x5605 - x5606 + x5607;
  const amrex::Real x5609 = x4288 * x4382;
  const amrex::Real x5610 = x4287 * x4382;
  const amrex::Real x5611 = x4249 * x4491;
  const amrex::Real x5612 = x4250 * x4491;
  const amrex::Real x5613 = x4229 * x4459;
  const amrex::Real x5614 = x5609 - x5610 - x5611 + x5612 + x5613;
  const amrex::Real x5615 = x4229 * x4443;
  const amrex::Real x5616 = x4249 * x4469;
  const amrex::Real x5617 = x4288 * x4405;
  const amrex::Real x5618 = x4287 * x4405;
  const amrex::Real x5619 = x4250 * x4469;
  const amrex::Real x5620 = x5615 - x5616 + x5617 - x5618 + x5619;
  const amrex::Real x5621 = x4249 * x4464;
  const amrex::Real x5622 = x4250 * x4464;
  const amrex::Real x5623 = x4288 * x4388;
  const amrex::Real x5624 = x4287 * x4388;
  const amrex::Real x5625 = x4229 * x4455;
  const amrex::Real x5626 = -x5621 + x5622 + x5623 - x5624 + x5625;
  const amrex::Real x5627 = x4288 * x4377;
  const amrex::Real x5628 = x4376 * x5354;
  const amrex::Real x5629 = x4249 * x4486;
  const amrex::Real x5630 = x4485 * x5350;
  const amrex::Real x5631 = x4250 * x4486;
  const amrex::Real x5632 = x4287 * x4377;
  const amrex::Real x5633 = x4450 * x5358;
  const amrex::Real x5634 = x4229 * x4451;
  const amrex::Real x5635 =
    x5627 + x5628 - x5629 + x5630 + x5631 - x5632 + x5633 + x5634;
  const amrex::Real x5636 = x4373 * x3981;
  const amrex::Real x5637 = x4373 * x3980;
  const amrex::Real x5638 = x4289 * x4399;
  const amrex::Real x5639 = x4481 * x2862;
  const amrex::Real x5640 = x5200 + x5639;
  const amrex::Real x5641 = x5638 + x5640;
  const amrex::Real x5642 = x4289 * x4393;
  const amrex::Real x5643 = x4474 * x2862;
  const amrex::Real x5644 = x5188 + x5643;
  const amrex::Real x5645 = x5642 + x5644;
  const amrex::Real x5646 = x4289 * x4382;
  const amrex::Real x5647 = x4491 * x2862;
  const amrex::Real x5648 = x5212 + x5647;
  const amrex::Real x5649 = x5646 + x5648;
  const amrex::Real x5650 = x4289 * x4405;
  const amrex::Real x5651 = x4469 * x2862;
  const amrex::Real x5652 = x5224 + x5651;
  const amrex::Real x5653 = x5650 + x5652;
  const amrex::Real x5654 = x4289 * x4377;
  const amrex::Real x5655 = x4486 * x2862;
  const amrex::Real x5656 = x5236 + x5655;
  const amrex::Real x5657 = x5654 + x5656;
  const amrex::Real x5658 = x4289 * x4388;
  const amrex::Real x5659 = x4464 * x2862;
  const amrex::Real x5660 = x5248 + x5659;
  const amrex::Real x5661 = x5658 + x5660;
  const amrex::Real x5662 = x5641 + x5645 + x5649 + x5653 + x5657 + x5661;
  const amrex::Real x5663 = x4373 * x3983;
  const amrex::Real x5664 = x4373 * x3982;
  const amrex::Real x5665 = x4481 * x2969;
  const amrex::Real x5666 = x4291 * x4399;
  const amrex::Real x5667 = x4292 * x4399;
  const amrex::Real x5668 = x4252 * x4481;
  const amrex::Real x5669 = x5665 - x5666 + x5667 - x5668;
  const amrex::Real x5670 = x4252 * x4491;
  const amrex::Real x5671 = x4292 * x4382;
  const amrex::Real x5672 = x4291 * x4382;
  const amrex::Real x5673 = x4491 * x2969;
  const amrex::Real x5674 = -x5670 + x5671 - x5672 + x5673;
  const amrex::Real x5675 = x4292 * x4393;
  const amrex::Real x5676 = x4252 * x4474;
  const amrex::Real x5677 = x4474 * x2969;
  const amrex::Real x5678 = x4291 * x4393;
  const amrex::Real x5679 = x5675 - x5676 + x5677 - x5678;
  const amrex::Real x5680 = x4252 * x4469;
  const amrex::Real x5681 = x4469 * x2969;
  const amrex::Real x5682 = x4292 * x4405;
  const amrex::Real x5683 = x4291 * x4405;
  const amrex::Real x5684 = -x5680 + x5681 + x5682 - x5683;
  const amrex::Real x5685 = x4486 * x2969;
  const amrex::Real x5686 = x4292 * x4377;
  const amrex::Real x5687 = x4291 * x4377;
  const amrex::Real x5688 = x4252 * x4486;
  const amrex::Real x5689 = x5685 + x5686 - x5687 - x5688;
  const amrex::Real x5690 = x4252 * x4464;
  const amrex::Real x5691 = x4464 * x2969;
  const amrex::Real x5692 = x4292 * x4388;
  const amrex::Real x5693 = x4291 * x4388;
  const amrex::Real x5694 = -x5690 + x5691 + x5692 - x5693;
  const amrex::Real x5695 = x4373 * x3985;
  const amrex::Real x5696 = x4373 * x3984;
  const amrex::Real x5697 = x4481 * x3024;
  const amrex::Real x5698 = x4253 * x4481;
  const amrex::Real x5699 = x4293 * x4399;
  const amrex::Real x5700 = x4294 * x4399;
  const amrex::Real x5701 = x5697 - x5698 - x5699 + x5700;
  const amrex::Real x5702 = x4294 * x4393;
  const amrex::Real x5703 = x4253 * x4474;
  const amrex::Real x5704 = x4293 * x4393;
  const amrex::Real x5705 = x4474 * x3024;
  const amrex::Real x5706 = x5702 - x5703 - x5704 + x5705;
  const amrex::Real x5707 = x4293 * x4382;
  const amrex::Real x5708 = x4294 * x4382;
  const amrex::Real x5709 = x4253 * x4491;
  const amrex::Real x5710 = x4491 * x3024;
  const amrex::Real x5711 = -x5707 + x5708 - x5709 + x5710;
  const amrex::Real x5712 = x4253 * x4469;
  const amrex::Real x5713 = x4469 * x3024;
  const amrex::Real x5714 = x4293 * x4405;
  const amrex::Real x5715 = x4294 * x4405;
  const amrex::Real x5716 = -x5712 + x5713 - x5714 + x5715;
  const amrex::Real x5717 = x4253 * x4486;
  const amrex::Real x5718 = x4294 * x4377;
  const amrex::Real x5719 = x4293 * x4377;
  const amrex::Real x5720 = x4486 * x3024;
  const amrex::Real x5721 = -x5717 + x5718 - x5719 + x5720;
  const amrex::Real x5722 = x4293 * x4388;
  const amrex::Real x5723 = x4464 * x3024;
  const amrex::Real x5724 = x4253 * x4464;
  const amrex::Real x5725 = x4294 * x4388;
  const amrex::Real x5726 = -x5722 + x5723 - x5724 + x5725;
  const amrex::Real x5727 = x4373 * x3986;
  const amrex::Real x5728 = x5174 + x5662 + x5727;
  const amrex::Real x5729 = x4373 * x3988;
  const amrex::Real x5730 = x4373 * x3989;
  const amrex::Real x5731 = x4255 * x4481;
  const amrex::Real x5732 = x4295 * x4399;
  const amrex::Real x5733 = x4296 * x4399;
  const amrex::Real x5734 = x4254 * x4481;
  const amrex::Real x5735 = x5731 - x5732 + x5733 - x5734;
  const amrex::Real x5736 = x4296 * x4393;
  const amrex::Real x5737 = x4254 * x4474;
  const amrex::Real x5738 = x4255 * x4474;
  const amrex::Real x5739 = x4295 * x4393;
  const amrex::Real x5740 = x5736 - x5737 + x5738 - x5739;
  const amrex::Real x5741 = x4254 * x4491;
  const amrex::Real x5742 = x4295 * x4382;
  const amrex::Real x5743 = x4296 * x4382;
  const amrex::Real x5744 = x4255 * x4491;
  const amrex::Real x5745 = -x5741 - x5742 + x5743 + x5744;
  const amrex::Real x5746 = x4254 * x4469;
  const amrex::Real x5747 = x4255 * x4469;
  const amrex::Real x5748 = x4295 * x4405;
  const amrex::Real x5749 = x4296 * x4405;
  const amrex::Real x5750 = -x5746 + x5747 - x5748 + x5749;
  const amrex::Real x5751 = x4295 * x4377;
  const amrex::Real x5752 = x4296 * x4377;
  const amrex::Real x5753 = x4254 * x4486;
  const amrex::Real x5754 = x4255 * x4486;
  const amrex::Real x5755 = -x5751 + x5752 - x5753 + x5754;
  const amrex::Real x5756 = x4255 * x4464;
  const amrex::Real x5757 = x4295 * x4388;
  const amrex::Real x5758 = x4296 * x4388;
  const amrex::Real x5759 = x4254 * x4464;
  const amrex::Real x5760 = x5756 - x5757 + x5758 - x5759;
  const amrex::Real x5761 = x4373 * x3991;
  const amrex::Real x5762 = x4373 * x3990;
  const amrex::Real x5763 = x4256 * x4481;
  const amrex::Real x5764 = x4481 * x3217;
  const amrex::Real x5765 = x4298 * x4399;
  const amrex::Real x5766 = x4297 * x4399;
  const amrex::Real x5767 = -x5763 + x5764 + x5765 - x5766;
  const amrex::Real x5768 = x4298 * x4393;
  const amrex::Real x5769 = x4474 * x3217;
  const amrex::Real x5770 = x4256 * x4474;
  const amrex::Real x5771 = x4297 * x4393;
  const amrex::Real x5772 = x5768 + x5769 - x5770 - x5771;
  const amrex::Real x5773 = x4298 * x4382;
  const amrex::Real x5774 = x4256 * x4491;
  const amrex::Real x5775 = x4491 * x3217;
  const amrex::Real x5776 = x4297 * x4382;
  const amrex::Real x5777 = x5773 - x5774 + x5775 - x5776;
  const amrex::Real x5778 = x4469 * x3217;
  const amrex::Real x5779 = x4256 * x4469;
  const amrex::Real x5780 = x4297 * x4405;
  const amrex::Real x5781 = x4298 * x4405;
  const amrex::Real x5782 = x5778 - x5779 - x5780 + x5781;
  const amrex::Real x5783 = x4297 * x4377;
  const amrex::Real x5784 = x4298 * x4377;
  const amrex::Real x5785 = x4256 * x4486;
  const amrex::Real x5786 = x4486 * x3217;
  const amrex::Real x5787 = -x5783 + x5784 - x5785 + x5786;
  const amrex::Real x5788 = x4256 * x4464;
  const amrex::Real x5789 = x4297 * x4388;
  const amrex::Real x5790 = x4464 * x3217;
  const amrex::Real x5791 = x4298 * x4388;
  const amrex::Real x5792 = -x5788 - x5789 + x5790 + x5791;
  const amrex::Real x5793 = x4373 * x3993;
  const amrex::Real x5794 = x4373 * x3992;
  const amrex::Real x5795 = x4481 * x3298;
  const amrex::Real x5796 = x4399 * x4300;
  const amrex::Real x5797 = x4299 * x4399;
  const amrex::Real x5798 = x4257 * x4481;
  const amrex::Real x5799 = x425 * x4439;
  const amrex::Real x5800 = x5799 * x3296;
  const amrex::Real x5801 = x5795 + x5796 - x5797 - x5798 - x5800;
  const amrex::Real x5802 = x4299 * x4393;
  const amrex::Real x5803 = x425 * x4447;
  const amrex::Real x5804 = x5803 * x3296;
  const amrex::Real x5805 = x4393 * x4300;
  const amrex::Real x5806 = x4474 * x3298;
  const amrex::Real x5807 = x4257 * x4474;
  const amrex::Real x5808 = -x5802 - x5804 + x5805 + x5806 - x5807;
  const amrex::Real x5809 = x425 * x4459;
  const amrex::Real x5810 = x5809 * x3296;
  const amrex::Real x5811 = x4491 * x3298;
  const amrex::Real x5812 = x4299 * x4382;
  const amrex::Real x5813 = x4382 * x4300;
  const amrex::Real x5814 = x4257 * x4491;
  const amrex::Real x5815 = -x5810 + x5811 - x5812 + x5813 - x5814;
  const amrex::Real x5816 = x5268 * x3296;
  const amrex::Real x5817 = x4257 * x4469;
  const amrex::Real x5818 = x4299 * x4405;
  const amrex::Real x5819 = x4469 * x3298;
  const amrex::Real x5820 = x4300 * x4405;
  const amrex::Real x5821 = -x5816 - x5817 - x5818 + x5819 + x5820;
  const amrex::Real x5822 = x4486 * x3298;
  const amrex::Real x5823 = x4257 * x4486;
  const amrex::Real x5824 = x4377 * x4300;
  const amrex::Real x5825 = x4299 * x4377;
  const amrex::Real x5826 = x425 * x4451;
  const amrex::Real x5827 = x5826 * x3296;
  const amrex::Real x5828 = x5822 - x5823 + x5824 - x5825 - x5827;
  const amrex::Real x5829 = x4257 * x4464;
  const amrex::Real x5830 = x4464 * x3298;
  const amrex::Real x5831 = x4299 * x4388;
  const amrex::Real x5832 = x4388 * x4300;
  const amrex::Real x5833 = x425 * x4455;
  const amrex::Real x5834 = x5833 * x3296;
  const amrex::Real x5835 = -x5829 + x5830 - x5831 + x5832 - x5834;
  const amrex::Real x5836 = sc_qss[11] * kf_qss[150];
  const amrex::Real x5837 = x425 * x5836;
  const amrex::Real x5838 = x4439 * x5837;
  const amrex::Real x5839 = -x5838;
  const amrex::Real x5840 = x4373 * x3994;
  const amrex::Real x5841 = x4443 * x5837;
  const amrex::Real x5842 = -x5841;
  const amrex::Real x5843 = x4455 * x5837;
  const amrex::Real x5844 = -x5843;
  const amrex::Real x5845 = x4447 * x5837;
  const amrex::Real x5846 = -x5845;
  const amrex::Real x5847 = x4451 * x5837;
  const amrex::Real x5848 = -x5847;
  const amrex::Real x5849 = x4373 * x3995;
  const amrex::Real x5850 = x4459 * x5837;
  const amrex::Real x5851 = -x5850;
  const amrex::Real x5852 = x4373 * x3996;
  const amrex::Real x5853 = x4373 * x3997;
  const amrex::Real x5854 = x4481 * x3390;
  const amrex::Real x5855 = x4258 * x4481;
  const amrex::Real x5856 = x4399 * x4302;
  const amrex::Real x5857 = x4399 * x4301;
  const amrex::Real x5858 = x5854 - x5855 + x5856 - x5857;
  const amrex::Real x5859 = x4393 * x4301;
  const amrex::Real x5860 = x4258 * x4474;
  const amrex::Real x5861 = x4474 * x3390;
  const amrex::Real x5862 = x4393 * x4302;
  const amrex::Real x5863 = -x5859 - x5860 + x5861 + x5862;
  const amrex::Real x5864 = x4382 * x4301;
  const amrex::Real x5865 = x4382 * x4302;
  const amrex::Real x5866 = x4258 * x4491;
  const amrex::Real x5867 = x4491 * x3390;
  const amrex::Real x5868 = -x5864 + x5865 - x5866 + x5867;
  const amrex::Real x5869 = x4258 * x4469;
  const amrex::Real x5870 = x4469 * x3390;
  const amrex::Real x5871 = x4301 * x4405;
  const amrex::Real x5872 = x4302 * x4405;
  const amrex::Real x5873 = -x5869 + x5870 - x5871 + x5872;
  const amrex::Real x5874 = x4486 * x3390;
  const amrex::Real x5875 = x4377 * x4302;
  const amrex::Real x5876 = x4377 * x4301;
  const amrex::Real x5877 = x4258 * x4486;
  const amrex::Real x5878 = x5874 + x5875 - x5876 - x5877;
  const amrex::Real x5879 = x4258 * x4464;
  const amrex::Real x5880 = x4464 * x3390;
  const amrex::Real x5881 = x4388 * x4302;
  const amrex::Real x5882 = x4388 * x4301;
  const amrex::Real x5883 = -x5879 + x5880 + x5881 - x5882;
  const amrex::Real x5884 = x4373 * x3999;
  const amrex::Real x5885 = x4373 * x3998;
  const amrex::Real x5886 = x4481 * x3438;
  const amrex::Real x5887 = x4259 * x4481;
  const amrex::Real x5888 = x4399 * x4303;
  const amrex::Real x5889 = x4399 * x4304;
  const amrex::Real x5890 = x5886 - x5887 - x5888 + x5889;
  const amrex::Real x5891 = x4393 * x4304;
  const amrex::Real x5892 = x4259 * x4474;
  const amrex::Real x5893 = x4474 * x3438;
  const amrex::Real x5894 = x4393 * x4303;
  const amrex::Real x5895 = x5891 - x5892 + x5893 - x5894;
  const amrex::Real x5896 = x4382 * x4303;
  const amrex::Real x5897 = x4259 * x4491;
  const amrex::Real x5898 = x4382 * x4304;
  const amrex::Real x5899 = x4491 * x3438;
  const amrex::Real x5900 = -x5896 - x5897 + x5898 + x5899;
  const amrex::Real x5901 = x4469 * x3438;
  const amrex::Real x5902 = x4259 * x4469;
  const amrex::Real x5903 = x4303 * x4405;
  const amrex::Real x5904 = x4304 * x4405;
  const amrex::Real x5905 = x5901 - x5902 - x5903 + x5904;
  const amrex::Real x5906 = x4486 * x3438;
  const amrex::Real x5907 = x4259 * x4486;
  const amrex::Real x5908 = x4377 * x4303;
  const amrex::Real x5909 = x4377 * x4304;
  const amrex::Real x5910 = x5906 - x5907 - x5908 + x5909;
  const amrex::Real x5911 = x4259 * x4464;
  const amrex::Real x5912 = x4464 * x3438;
  const amrex::Real x5913 = x4388 * x4303;
  const amrex::Real x5914 = x4388 * x4304;
  const amrex::Real x5915 = -x5911 + x5912 - x5913 + x5914;
  const amrex::Real x5916 = x4001 * x4373;
  const amrex::Real x5917 = x4000 * x4373;
  const amrex::Real x5918 = x4399 * x4305;
  const amrex::Real x5919 = x5640 + x5918;
  const amrex::Real x5920 = x4393 * x4305;
  const amrex::Real x5921 = x5644 + x5920;
  const amrex::Real x5922 = x4382 * x4305;
  const amrex::Real x5923 = x5648 + x5922;
  const amrex::Real x5924 = x4305 * x4405;
  const amrex::Real x5925 = x5652 + x5924;
  const amrex::Real x5926 = x4377 * x4305;
  const amrex::Real x5927 = x5656 + x5926;
  const amrex::Real x5928 = x4388 * x4305;
  const amrex::Real x5929 = x5660 + x5928;
  const amrex::Real x5930 = x4003 * x4373;
  const amrex::Real x5931 = x4002 * x4373;
  const amrex::Real x5932 = x4481 * x3508;
  const amrex::Real x5933 = x4260 * x4481;
  const amrex::Real x5934 = x4399 * x4307;
  const amrex::Real x5935 = x4399 * x4306;
  const amrex::Real x5936 = x5932 - x5933 + x5934 - x5935;
  const amrex::Real x5937 = x4393 * x4306;
  const amrex::Real x5938 = x4393 * x4307;
  const amrex::Real x5939 = x4474 * x3508;
  const amrex::Real x5940 = x4260 * x4474;
  const amrex::Real x5941 = -x5937 + x5938 + x5939 - x5940;
  const amrex::Real x5942 = x4382 * x4306;
  const amrex::Real x5943 = x4382 * x4307;
  const amrex::Real x5944 = x4260 * x4491;
  const amrex::Real x5945 = x4491 * x3508;
  const amrex::Real x5946 = -x5942 + x5943 - x5944 + x5945;
  const amrex::Real x5947 = x4260 * x4469;
  const amrex::Real x5948 = x4469 * x3508;
  const amrex::Real x5949 = x4307 * x4405;
  const amrex::Real x5950 = x4306 * x4405;
  const amrex::Real x5951 = -x5947 + x5948 + x5949 - x5950;
  const amrex::Real x5952 = x4377 * x4306;
  const amrex::Real x5953 = x4377 * x4307;
  const amrex::Real x5954 = x4486 * x3508;
  const amrex::Real x5955 = x4260 * x4486;
  const amrex::Real x5956 = -x5952 + x5953 + x5954 - x5955;
  const amrex::Real x5957 = x4464 * x3508;
  const amrex::Real x5958 = x4388 * x4306;
  const amrex::Real x5959 = x4260 * x4464;
  const amrex::Real x5960 = x4388 * x4307;
  const amrex::Real x5961 = x5957 - x5958 - x5959 + x5960;
  const amrex::Real x5962 = x4004 * x4373;
  const amrex::Real x5963 = x4005 * x4373;
  const amrex::Real x5964 = x4481 * x3539;
  const amrex::Real x5965 = x4399 * x4308;
  const amrex::Real x5966 = x5200 + x5964 + x5965;
  const amrex::Real x5967 = x4393 * x4308;
  const amrex::Real x5968 = x4474 * x3539;
  const amrex::Real x5969 = x5188 + x5967 + x5968;
  const amrex::Real x5970 = x4491 * x3539;
  const amrex::Real x5971 = x4382 * x4308;
  const amrex::Real x5972 = x5212 + x5970 + x5971;
  const amrex::Real x5973 = x4469 * x3539;
  const amrex::Real x5974 = x4308 * x4405;
  const amrex::Real x5975 = x5224 + x5973 + x5974;
  const amrex::Real x5976 = x4377 * x4308;
  const amrex::Real x5977 = x4486 * x3539;
  const amrex::Real x5978 = x5236 + x5976 + x5977;
  const amrex::Real x5979 = x4388 * x4308;
  const amrex::Real x5980 = x4464 * x3539;
  const amrex::Real x5981 = x5248 + x5979 + x5980;
  const amrex::Real x5982 = x4007 * x4373;
  const amrex::Real x5983 = x4006 * x4373;
  const amrex::Real x5984 = x4481 * x3568;
  const amrex::Real x5985 = x4399 * x4309;
  const amrex::Real x5986 = x5200 + x5984 + x5985;
  const amrex::Real x5987 = x4393 * x4309;
  const amrex::Real x5988 = x4474 * x3568;
  const amrex::Real x5989 = x5188 + x5987 + x5988;
  const amrex::Real x5990 = x4382 * x4309;
  const amrex::Real x5991 = x4491 * x3568;
  const amrex::Real x5992 = x5212 + x5990 + x5991;
  const amrex::Real x5993 = x4469 * x3568;
  const amrex::Real x5994 = x4309 * x4405;
  const amrex::Real x5995 = x5224 + x5993 + x5994;
  const amrex::Real x5996 = x4377 * x4309;
  const amrex::Real x5997 = x4486 * x3568;
  const amrex::Real x5998 = x5236 + x5996 + x5997;
  const amrex::Real x5999 = x4464 * x3568;
  const amrex::Real x6000 = x4388 * x4309;
  const amrex::Real x6001 = x5248 + x5999 + x6000;
  const amrex::Real x6002 = x4008 * x4373;
  const amrex::Real x6003 = x4009 * x4373;
  const amrex::Real x6004 = x486 * x3956;
  const amrex::Real x6005 = x6004 * x4372;
  const amrex::Real x6006 = x4474 * x3598;
  const amrex::Real x6007 = x4393 * x4310;
  const amrex::Real x6008 = x5803 * x1548;
  const amrex::Real x6009 = x5188 + x6006 + x6007 - x6008;
  const amrex::Real x6010 = x5799 * x1548;
  const amrex::Real x6011 = x4481 * x3598;
  const amrex::Real x6012 = x4399 * x4310;
  const amrex::Real x6013 = x5200 - x6010 + x6011 + x6012;
  const amrex::Real x6014 = x4382 * x4310;
  const amrex::Real x6015 = x4491 * x3598;
  const amrex::Real x6016 = x5809 * x1548;
  const amrex::Real x6017 = x5212 + x6014 + x6015 - x6016;
  const amrex::Real x6018 = x4469 * x3598;
  const amrex::Real x6019 = x5268 * x1548;
  const amrex::Real x6020 = x4310 * x4405;
  const amrex::Real x6021 = x5224 + x6018 - x6019 + x6020;
  const amrex::Real x6022 = x4486 * x3598;
  const amrex::Real x6023 = x5826 * x1548;
  const amrex::Real x6024 = x4377 * x4310;
  const amrex::Real x6025 = x5236 + x6022 - x6023 + x6024;
  const amrex::Real x6026 = x4464 * x3598;
  const amrex::Real x6027 = x5833 * x1548;
  const amrex::Real x6028 = x4388 * x4310;
  const amrex::Real x6029 = x5248 + x6026 - x6027 + x6028;
  const amrex::Real x6030 = x4010 * x4373;
  const amrex::Real x6031 = x4399 * x4311;
  const amrex::Real x6032 = x4481 * x3625;
  const amrex::Real x6033 = x5200 + x6031 + x6032;
  const amrex::Real x6034 = x4393 * x4311;
  const amrex::Real x6035 = x4474 * x3625;
  const amrex::Real x6036 = x5188 + x6034 + x6035;
  const amrex::Real x6037 = x4491 * x3625;
  const amrex::Real x6038 = x4382 * x4311;
  const amrex::Real x6039 = x5212 + x6037 + x6038;
  const amrex::Real x6040 = x4469 * x3625;
  const amrex::Real x6041 = x4311 * x4405;
  const amrex::Real x6042 = x5224 + x6040 + x6041;
  const amrex::Real x6043 = x4377 * x4311;
  const amrex::Real x6044 = x4486 * x3625;
  const amrex::Real x6045 = x5236 + x6043 + x6044;
  const amrex::Real x6046 = x4464 * x3625;
  const amrex::Real x6047 = x4388 * x4311;
  const amrex::Real x6048 = x5248 + x6046 + x6047;
  const amrex::Real x6049 = x4011 * x4373;
  const amrex::Real x6050 = x4474 * x3641;
  const amrex::Real x6051 = x4393 * x4312;
  const amrex::Real x6052 = sc[4] * x3639;
  const amrex::Real x6053 = x6052 * x4447;
  const amrex::Real x6054 = x5188 + x6050 + x6051 - x6053;
  const amrex::Real x6055 = pow(sc[4], 2) * x4438 * x3639;
  const amrex::Real x6056 = x4481 * x3641;
  const amrex::Real x6057 = x4399 * x4312;
  const amrex::Real x6058 = x5200 - x6055 + x6056 + x6057;
  const amrex::Real x6059 = x4382 * x4312;
  const amrex::Real x6060 = x6052 * x4459;
  const amrex::Real x6061 = x4491 * x3641;
  const amrex::Real x6062 = x5212 + x6059 - x6060 + x6061;
  const amrex::Real x6063 = x6052 * x4443;
  const amrex::Real x6064 = x4469 * x3641;
  const amrex::Real x6065 = x4312 * x4405;
  const amrex::Real x6066 = x5224 - x6063 + x6064 + x6065;
  const amrex::Real x6067 = x4377 * x4312;
  const amrex::Real x6068 = x4486 * x3641;
  const amrex::Real x6069 = x6052 * x4451;
  const amrex::Real x6070 = x5236 + x6067 + x6068 - x6069;
  const amrex::Real x6071 = x4464 * x3641;
  const amrex::Real x6072 = x4388 * x4312;
  const amrex::Real x6073 = x6052 * x4455;
  const amrex::Real x6074 = x5248 + x6071 + x6072 - x6073;
  const amrex::Real x6075 = x4012 * x4373;
  const amrex::Real x6076 = x4393 * x4313;
  const amrex::Real x6077 = x4474 * x3655;
  const amrex::Real x6078 = x425 * kf_qss[183];
  const amrex::Real x6079 = x6078 * x4447;
  const amrex::Real x6080 = x5188 + x6076 + x6077 - x6079;
  const amrex::Real x6081 = x4481 * x3655;
  const amrex::Real x6082 = x6078 * x4439;
  const amrex::Real x6083 = x4399 * x4313;
  const amrex::Real x6084 = x5200 + x6081 - x6082 + x6083;
  const amrex::Real x6085 = x4382 * x4313;
  const amrex::Real x6086 = x4491 * x3655;
  const amrex::Real x6087 = x6078 * x4459;
  const amrex::Real x6088 = x5212 + x6085 + x6086 - x6087;
  const amrex::Real x6089 = x6078 * x4443;
  const amrex::Real x6090 = x4469 * x3655;
  const amrex::Real x6091 = x4313 * x4405;
  const amrex::Real x6092 = x5224 - x6089 + x6090 + x6091;
  const amrex::Real x6093 = x4486 * x3655;
  const amrex::Real x6094 = x6078 * x4451;
  const amrex::Real x6095 = x4377 * x4313;
  const amrex::Real x6096 = x5236 + x6093 - x6094 + x6095;
  const amrex::Real x6097 = x4464 * x3655;
  const amrex::Real x6098 = x4388 * x4313;
  const amrex::Real x6099 = x6078 * x4455;
  const amrex::Real x6100 = x5248 + x6097 + x6098 - x6099;
  const amrex::Real x6101 = x4550 * x3779;
  const amrex::Real x6102 = x4522 * x3779;
  const amrex::Real x6103 = x4553 * x3779;
  const amrex::Real x6104 = x4508 * x3703;
  const amrex::Real x6105 = x4555 * x3703;
  const amrex::Real x6106 = x4620 * x3891;
  const amrex::Real x6107 = x4517 * x3779;
  const amrex::Real x6108 = exp(-x4864);
  const amrex::Real x6109 = sc[8] * x6108;
  const amrex::Real x6110 = 5280000.0 * x6109;
  const amrex::Real x6111 = x4723 * x3955;
  const amrex::Real x6112 = 80000000.0 * sc[2];
  const amrex::Real x6113 = x6112 * x2033;
  const amrex::Real x6114 = x4544 * x3779;
  const amrex::Real x6115 = x4723 * x4018;
  const amrex::Real x6116 = x4542 * x3779;
  const amrex::Real x6117 = x4636 * x3891;
  const amrex::Real x6118 = x4547 * x3703;
  const amrex::Real x6119 = -3.14 * tc[0] + x1267;
  const amrex::Real x6120 = -2.34 * tc[0] + x1267;
  const amrex::Real x6121 = 128000.0 * exp(x6120) * x26;
  const amrex::Real x6122 = x1274 + x33 * log(x6121);
  const amrex::Real x6123 = pow(x6122, 2);
  const amrex::Real x6124 = x1276 - 0.14 * x6122;
  const amrex::Real x6125 = pow(x6124, -2);
  const amrex::Real x6126 = 1.0 + x6123 * x6125;
  const amrex::Real x6127 = pow(10, x1281 / x6126);
  const amrex::Real x6128 = 1.0 + x6121;
  const amrex::Real x6129 = x6127 / x6128;
  const amrex::Real x6130 = exp(x6119) * x6129;
  const amrex::Real x6131 = 3.2e+15 * x6130 * x1843;
  const amrex::Real x6132 = x6131 * x2033;
  const amrex::Real x6133 = x4726 * x3955;
  const amrex::Real x6134 = x4638 * x3891;
  const amrex::Real x6135 = x4539 * x3779;
  const amrex::Real x6136 = x4790 * x4354;
  const amrex::Real x6137 = x4767 * x4070;
  const amrex::Real x6138 = x6136 + x6137;
  const amrex::Real x6139 = x4786 * x4354;
  const amrex::Real x6140 = x4775 * x4127;
  const amrex::Real x6141 = x6139 + x6140 + x4782 * x4175;
  const amrex::Real x6142 = x4763 * x4321;
  const amrex::Real x6143 = x4760 * x4018;
  const amrex::Real x6144 = x6142 + x6143 + x4795 * x4354;
  const amrex::Real x6145 = x4742 * x3955;
  const amrex::Real x6146 = x4629 * x3891;
  const amrex::Real x6147 = x6145 + x6146 + x4749 * x4321;
  const amrex::Real x6148 = x4745 * x4018;
  const amrex::Real x6149 = x4721 * x3955;
  const amrex::Real x6150 = x6148 + x6149 + x4769 * x4070;
  const amrex::Real x6151 = x4752 * x4321;
  const amrex::Real x6152 = x4772 * x4070;
  const amrex::Real x6153 = x6151 + x6152 + x4779 * x4127;
  const amrex::Real x6154 = 20000000.0 * x4982 * sc[15];
  const amrex::Real x6155 = x6154 * x2033;
  const amrex::Real x6156 = x4506 * x3703;
  const amrex::Real x6157 = x6155 + x6156;
  const amrex::Real x6158 = x4582 * x3894;
  const amrex::Real x6159 = -x6158;
  const amrex::Real x6160 = x4582 * x3891;
  const amrex::Real x6161 = x6159 + x6160;
  const amrex::Real x6162 = x4576 * x3891;
  const amrex::Real x6163 = x4576 * x3894;
  const amrex::Real x6164 = x471 * x4013;
  const amrex::Real x6165 = x6164 * x4755;
  const amrex::Real x6166 = -5404.19473907663 * invT + x916;
  const amrex::Real x6167 = exp(x295 + x6166) * x6164;
  const amrex::Real x6168 = x4735 / pow(x4736, 2);
  const amrex::Real x6169 = x914 * x6168;
  const amrex::Real x6170 = 2.94643609022556e+46 * x6169;
  const amrex::Real x6171 = 1;
  const amrex::Real x6172 = x6171 * x4733 / pow(x4731, 3);
  const amrex::Real x6173 = x6171 * x4730 * x4732;
  const amrex::Real x6174 = x6172 * x1083 + x6173 * x1080;
  const amrex::Real x6175 = x39 / pow(x4734, 2);
  const amrex::Real x6176 = x26 * x6175;
  const amrex::Real x6177 = x6165 * x6176;
  const amrex::Real x6178 = exp(x6166) * x6168 * x1843;
  const amrex::Real x6179 = 2.94643609022556e+46 * x6178;
  const amrex::Real x6180 = x4737 * x1490;
  const amrex::Real x6181 = x6175 * x6180;
  const amrex::Real x6182 = x6181 * sc[22];
  const amrex::Real x6183 = x4737 * x1846;
  const amrex::Real x6184 = x6165 - x6167 * x6170 + x6174 * x6182 -
                            x6177 * x6174 + x6179 * sc[22] - x6183 * sc[22];
  const amrex::Real x6185 = x6184 - x4756 * x4015;
  const amrex::Real x6186 = -x6163 + x6185;
  const amrex::Real x6187 = x6162 + x6186 + x4756 * x4018;
  const amrex::Real x6188 = -x4739 * x3958;
  const amrex::Real x6189 = x6188 + x4739 * x3955;
  const amrex::Real x6190 = -x4569 * x3774 - x4571 * x3774;
  const amrex::Real x6191 = x6190 + x4569 * x3779 + x4571 * x3779;
  const amrex::Real x6192 = 20000000.0 * sc[3];
  const amrex::Real x6193 = x6192 * x2033;
  const amrex::Real x6194 = x4561 * x3779;
  const amrex::Real x6195 = x4557 * x3703;
  const amrex::Real x6196 = x6192 * x1814;
  const amrex::Real x6197 = x4557 * x3706;
  const amrex::Real x6198 = x4561 * x3774;
  const amrex::Real x6199 = -x6198;
  const amrex::Real x6200 = -x6196 - x6197 + x6199;
  const amrex::Real x6201 = x6193 + x6194 + x6195 + x6200;
  const amrex::Real x6202 = x4512 * x3703;
  const amrex::Real x6203 = x5061 * x2033;
  const amrex::Real x6204 = x6202 + x6203 + x4600 * x3891;
  const amrex::Real x6205 = -3638.25649376812 * invT + x4913;
  const amrex::Real x6206 = 0.5 * exp(x6205);
  const amrex::Real x6207 = sc[5] * x6206;
  const amrex::Real x6208 = x6207 * x2033;
  const amrex::Real x6209 = x4514 * x3703;
  const amrex::Real x6210 = x4514 * x3706;
  const amrex::Real x6211 = x6207 * x1814;
  const amrex::Real x6212 = -192.731983003208 * invT - 0.63 * tc[0];
  const amrex::Real x6213 = -x6212;
  const amrex::Real x6214 = -1420.58064756672 * invT - 5.39 * tc[0] + x6213;
  const amrex::Real x6215 = exp(x6214);
  const amrex::Real x6216 = sc[9] * sc[1];
  const amrex::Real x6217 = x6215 * x6216;
  const amrex::Real x6218 = -1227.84866456352 * invT - 4.76 * tc[0] + x6213;
  const amrex::Real x6219 = 195039370078.74 * exp(x6218) * x26;
  const amrex::Real x6220 = log(
    exp(-6964.0 * invT) + 0.217 * exp(-0.0135135135135135 * tc[1]) +
    0.783 * exp(-0.000340020401224073 * tc[1]));
  const amrex::Real x6221 = -0.4 + x33 * log(x6219) - x503 * x6220;
  const amrex::Real x6222 = pow(x6221, 2);
  const amrex::Real x6223 = 0.75 - 0.14 * x6221 - x507 * x6220;
  const amrex::Real x6224 = pow(x6223, -2);
  const amrex::Real x6225 = 1.0 + x6224 * x6222;
  const amrex::Real x6226 = pow(10, x33 * x6220 / x6225);
  const amrex::Real x6227 = 1.0 + x6219;
  const amrex::Real x6228 = x6226 / x6227;
  const amrex::Real x6229 = 2.477e+21 * x6228;
  const amrex::Real x6230 = x6229 * x6217;
  const amrex::Real x6231 = x26 * x6230;
  const amrex::Real x6232 = 1;
  const amrex::Real x6233 = x905 * x6232;
  const amrex::Real x6234 = x6224 * x6221;
  const amrex::Real x6235 = x6233 * x6234;
  const amrex::Real x6236 = x6222 / pow(x6223, 3);
  const amrex::Real x6237 = x6233 * x6236;
  const amrex::Real x6238 = x6220 / pow(x6225, 2);
  const amrex::Real x6239 = x6238 * (2.0 * x6235 + 0.28 * x6237);
  const amrex::Real x6240 = x6231 * x6239;
  const amrex::Real x6241 = x6226 / pow(x6227, 2);
  const amrex::Real x6242 = -(x10 + x170);
  const amrex::Real x6243 =
    -2648.42931213024 * invT - 10.15 * tc[0] - 2 * x6212;
  const amrex::Real x6244 = exp(x6242 + x6243) * x914 * sc[10];
  const amrex::Real x6245 = x6241 * x6244;
  const amrex::Real x6246 = 4.83112519685039e+32 * x6245;
  const amrex::Real x6247 = exp(x6243) * x26 * x6216;
  const amrex::Real x6248 = x6241 * x6247;
  const amrex::Real x6249 = 4.83112519685039e+32 * x6248;
  const amrex::Real x6250 = exp(x6214 + x6242);
  const amrex::Real x6251 = x6250 * sc[10];
  const amrex::Real x6252 = x914 * x6229;
  const amrex::Real x6253 = x6251 * x6252;
  const amrex::Real x6254 = x6239 * x6253;
  const amrex::Real x6255 = refC * x6251;
  const amrex::Real x6256 = x6229 * x6255;
  const amrex::Real x6257 = -x6230 + x6240 - x6246 + x6249 - x6254 + x6256;
  const amrex::Real x6258 = -x6210 - x6211 + x6257;
  const amrex::Real x6259 = x6208 + x6209 + x6258;
  const amrex::Real x6260 = x4550 * x3774;
  const amrex::Real x6261 = -x6260;
  const amrex::Real x6262 = x4522 * x3774;
  const amrex::Real x6263 = -x6262;
  const amrex::Real x6264 = -x4553 * x3774;
  const amrex::Real x6265 = -x4555 * x3706;
  const amrex::Real x6266 = x4539 * x3774;
  const amrex::Real x6267 = x6112 * x1814;
  const amrex::Real x6268 = -x6267;
  const amrex::Real x6269 = x6131 * x1814;
  const amrex::Real x6270 = x4547 * x3706;
  const amrex::Real x6271 = -x6270;
  const amrex::Real x6272 = x4517 * x3774;
  const amrex::Real x6273 = -x6110 * x1814;
  const amrex::Real x6274 = x4542 * x3774;
  const amrex::Real x6275 = x4544 * x3774;
  const amrex::Real x6276 = x4663 * x3863;
  const amrex::Real x6277 = -3003.09641818941 * invT - 12.0 * tc[0];
  const amrex::Real x6278 = exp(x6277);
  const amrex::Real x6279 = x26 * x6278;
  const amrex::Real x6280 = 6.65e+39 * x6279;
  const amrex::Real x6281 =
    log(exp(-6859.5 * invT) + 1.0 * exp(-0.000911909538573774 * tc[1]));
  const amrex::Real x6282 = -0.4 + x33 * log(x6280) - x503 * x6281;
  const amrex::Real x6283 = pow(x6282, 2);
  const amrex::Real x6284 = 0.75 - 0.14 * x6282 - x507 * x6281;
  const amrex::Real x6285 = pow(x6284, -2);
  const amrex::Real x6286 = 1.0 + x6283 * x6285;
  const amrex::Real x6287 = pow(10, x33 * x6281 / x6286);
  const amrex::Real x6288 = 1.0 + x6280;
  const amrex::Real x6289 = x6287 / pow(x6288, 2);
  const amrex::Real x6290 = -(x61 + x702);
  const amrex::Real x6291 = -6006.19283637881 * invT - 24.0 * tc[0];
  const amrex::Real x6292 = exp(x6290 + x6291) * x914 * sc[19];
  const amrex::Real x6293 = x6289 * x6292;
  const amrex::Real x6294 = 8.8445e+87 * x6293;
  const amrex::Real x6295 = x6287 / x6288;
  const amrex::Real x6296 = exp(x6277 + x6290) * x6295;
  const amrex::Real x6297 = 1.33e+48 * x6296;
  const amrex::Real x6298 = x6297 * x1985;
  const amrex::Real x6299 = exp(x6291) * x1843 * sc[18];
  const amrex::Real x6300 = x6289 * x6299;
  const amrex::Real x6301 = 8.8445e+87 * x6300;
  const amrex::Real x6302 = x6295 * sc[18];
  const amrex::Real x6303 = sc[1] * x6302;
  const amrex::Real x6304 = x6303 * x6278;
  const amrex::Real x6305 = 1.33e+48 * x6304;
  const amrex::Real x6306 = 1.33e+48 * x6279;
  const amrex::Real x6307 = x6303 * x6306;
  const amrex::Real x6308 = 1;
  const amrex::Real x6309 = x6308 * x6282 * x6285;
  const amrex::Real x6310 = x6308 * x6283 / pow(x6284, 3);
  const amrex::Real x6311 = x6281 / pow(x6286, 2);
  const amrex::Real x6312 = (x6309 * x1080 + x6310 * x1083) * x6311;
  const amrex::Real x6313 = x6307 * x6312;
  const amrex::Real x6314 = x914 * x6297;
  const amrex::Real x6315 = x6314 * sc[19];
  const amrex::Real x6316 = x6312 * x6315;
  const amrex::Real x6317 = -x6294 + x6298 + x6301 - x6305 + x6313 - x6316;
  const amrex::Real x6318 = x6276 + x6317;
  const amrex::Real x6319 = x4506 * x3706;
  const amrex::Real x6320 = x6154 * x1814;
  const amrex::Real x6321 = -x6319 - x6320;
  const amrex::Real x6322 = x6318 + x6321;
  const amrex::Real x6323 = 1;
  const amrex::Real x6324 = x6323 * x4592 * x4595;
  const amrex::Real x6325 = x6323 * x4593 / pow(x4594, 3);
  const amrex::Real x6326 = x6324 * x1080 + x6325 * x1083;
  const amrex::Real x6327 = exp(x4588) * x4599;
  const amrex::Real x6328 = x6327 * x1647;
  const amrex::Real x6329 = x519 * x528 / pow(x4596, 2);
  const amrex::Real x6330 = x6328 * x6329;
  const amrex::Real x6331 = x4597 / pow(x4598, 2);
  const amrex::Real x6332 = 5592761006.28931 * x6331;
  const amrex::Real x6333 = -1409.58536341889 * invT + x4585 - 2 * x4586;
  const amrex::Real x6334 = x586 * x3892;
  const amrex::Real x6335 = exp(x521 + x6333) * x914 * x6334;
  const amrex::Real x6336 = x6334 * x4599 * x4589;
  const amrex::Real x6337 = refC * x6336;
  const amrex::Real x6338 = exp(x6333) * x1819;
  const amrex::Real x6339 = x6329 * x6337;
  const amrex::Real x6340 = -4715000.0 * x6328 + 4715000.0 * x6337 +
                            x6326 * x6330 - x6326 * x6339 - x6332 * x6335 +
                            x6332 * x6338;
  const amrex::Real x6341 = x6340 - x4600 * x3894;
  const amrex::Real x6342 = x4512 * x3706;
  const amrex::Real x6343 = x5061 * x1814;
  const amrex::Real x6344 = -x6342 - x6343;
  const amrex::Real x6345 = x6341 + x6344;
  const amrex::Real x6346 = x6261 + x6263 + x6264 + x6265 + x6266 + x6268 +
                            x6269 + x6271 + x6272 + x6273 + x6274 + x6275 +
                            x6322 + x6345;
  const amrex::Real x6347 = -x4508 * x3706;
  const amrex::Real x6348 = x4629 * x3894;
  const amrex::Real x6349 = x4742 * x3958;
  const amrex::Real x6350 = -x6349;
  const amrex::Real x6351 = -x6348 + x6350;
  const amrex::Real x6352 = x4605 * x3894;
  const amrex::Real x6353 = x4620 * x3894;
  const amrex::Real x6354 = x4636 * x3894;
  const amrex::Real x6355 = -x6354;
  const amrex::Real x6356 = x4638 * x3894;
  const amrex::Real x6357 = x4726 * x3958;
  const amrex::Real x6358 = x4723 * x3958;
  const amrex::Real x6359 = x4721 * x3958;
  const amrex::Real x6360 = x4745 * x4015;
  const amrex::Real x6361 = -x4769 * x4073;
  const amrex::Real x6362 = -x6360 + x6361;
  const amrex::Real x6363 = -x6359 + x6362;
  const amrex::Real x6364 = x4760 * x4015;
  const amrex::Real x6365 = -x6364;
  const amrex::Real x6366 = x4723 * x4015;
  const amrex::Real x6367 = x6365 + x6366 + x4726 * x4015;
  const amrex::Real x6368 = x6357 + x6358 + x6363 + x6367;
  const amrex::Real x6369 = x6352 + x6353 + x6355 + x6356 + x6368;
  const amrex::Real x6370 = 1;
  const amrex::Real x6371 = x4611 * x4614;
  const amrex::Real x6372 = x4612 / pow(x4613, 3);
  const amrex::Real x6373 = x6372 * x6370;
  const amrex::Real x6374 = x6373 * x1083 + x6371 * x6370 * x1080;
  const amrex::Real x6375 = x502 / pow(x4615, 2);
  const amrex::Real x6376 = x6334 * x4619;
  const amrex::Real x6377 = 1.99e+29 * x6376;
  const amrex::Real x6378 = x6377 * x1843;
  const amrex::Real x6379 = x6378 * x6375;
  const amrex::Real x6380 = x6379 * x6374;
  const amrex::Real x6381 = x4536 / pow(x4537, 2);
  const amrex::Real x6382 = -1303.33116443422 * invT - 4.66 * tc[0] - 2 * x4525;
  const amrex::Real x6383 = x798 * x3772;
  const amrex::Real x6384 = exp(x6382) * x6383 * x1843;
  const amrex::Real x6385 = x6384 * x6381;
  const amrex::Real x6386 = 1.67201834862385e+18 * x6385;
  const amrex::Real x6387 = exp(x1804 + x6119) * x6129;
  const amrex::Real x6388 = x6387 * x1802;
  const amrex::Real x6389 = 3.2e+15 * x6388;
  const amrex::Real x6390 = x6127 / pow(x6128, 2);
  const amrex::Real x6391 = -5.48 * tc[0] + x1355;
  const amrex::Real x6392 = x1816 * x1811;
  const amrex::Real x6393 = exp(x6391) * x6392 * x1843;
  const amrex::Real x6394 = x6393 * x6390;
  const amrex::Real x6395 = 4.096e+20 * x6394;
  const amrex::Real x6396 = 1;
  const amrex::Real x6397 = x6396 * x6122 * x6125;
  const amrex::Real x6398 = 2.0 * x905;
  const amrex::Real x6399 = x6396 * x6123 / pow(x6124, 3);
  const amrex::Real x6400 = 0.28 * x905;
  const amrex::Real x6401 = x6398 * x6397 + x6399 * x6400;
  const amrex::Real x6402 = x1273 / pow(x6126, 2);
  const amrex::Real x6403 = 3.2e+15 * x914 * x6387;
  const amrex::Real x6404 = sc[9] * x6403;
  const amrex::Real x6405 = x6402 * x6404;
  const amrex::Real x6406 = x6401 * x6405;
  const amrex::Real x6407 = -x6406;
  const amrex::Real x6408 = exp(x1679 + x4527) * x4538;
  const amrex::Real x6409 = x6408 * x1677;
  const amrex::Real x6410 = 1350000000000.0 * x6409;
  const amrex::Real x6411 = 1;
  const amrex::Real x6412 = x6411 * x4534 * x4531;
  const amrex::Real x6413 = x6411 * x4532 / pow(x4533, 3);
  const amrex::Real x6414 = x604 / pow(x4535, 2);
  const amrex::Real x6415 = (x6412 * x1080 + x6413 * x1083) * x6414;
  const amrex::Real x6416 = 1350000000000.0 * x914 * x6408;
  const amrex::Real x6417 = x6416 * sc[11];
  const amrex::Real x6418 = x6417 * x6415;
  const amrex::Real x6419 = -x6418;
  const amrex::Real x6420 = x6383 * x4528 * x4538;
  const amrex::Real x6421 = 1350000000000.0 * x6420;
  const amrex::Real x6422 = x6421 * x1843;
  const amrex::Real x6423 = x6422 * x6415;
  const amrex::Real x6424 = sc[1] * x6421;
  const amrex::Real x6425 = -x6424;
  const amrex::Real x6426 = exp(x1635 + x4608) * x4618;
  const amrex::Real x6427 = x6426 * x1634;
  const amrex::Real x6428 = exp(x1804 + x6391) * x914 * sc[9];
  const amrex::Real x6429 = x6428 * x6390;
  const amrex::Real x6430 = 4.096e+20 * x6429;
  const amrex::Real x6431 = -x6430;
  const amrex::Real x6432 = x6392 * x6130;
  const amrex::Real x6433 = sc[1] * x6432;
  const amrex::Real x6434 = 3.2e+15 * x6433;
  const amrex::Real x6435 = -x6434;
  const amrex::Real x6436 = sc[1] * x6376;
  const amrex::Real x6437 = 1.99e+29 * x6436;
  const amrex::Real x6438 = -x6437;
  const amrex::Real x6439 = x914 * sc[11];
  const amrex::Real x6440 = exp(x1679 + x6382) * x6439;
  const amrex::Real x6441 = x6440 * x6381;
  const amrex::Real x6442 = 1.67201834862385e+18 * x6441;
  const amrex::Real x6443 = -x6442;
  const amrex::Real x6444 = x4616 / pow(x4617, 2);
  const amrex::Real x6445 =
    -7523.08915378056 * invT - 15.15 * tc[0] - 2 * x4606;
  const amrex::Real x6446 = x914 * sc[16];
  const amrex::Real x6447 = exp(x1635 + x6445) * x6446;
  const amrex::Real x6448 = x6444 * x6447;
  const amrex::Real x6449 = 7.60095969289827e+46 * x6448;
  const amrex::Real x6450 = -x6449;
  const amrex::Real x6451 = 1.99e+29 * x914 * x6426;
  const amrex::Real x6452 = x6451 * sc[16];
  const amrex::Real x6453 = x6452 * x6375;
  const amrex::Real x6454 = x6453 * x6374;
  const amrex::Real x6455 = -x6454;
  const amrex::Real x6456 = exp(x6445) * x6334 * x1843;
  const amrex::Real x6457 = x6456 * x6444;
  const amrex::Real x6458 = 7.60095969289827e+46 * x6457;
  const amrex::Real x6459 = -x4632 * x3846;
  const amrex::Real x6460 = 3.2e+15 * x6432;
  const amrex::Real x6461 = x6460 * x1843;
  const amrex::Real x6462 = x6461 * x6402;
  const amrex::Real x6463 = x6462 * x6401;
  const amrex::Real x6464 =
    log(exp(-50000.0 * invT) + 1.0 * exp(-0.00076103500761035 * tc[1]));
  const amrex::Real x6465 = -2935.56474163841 * invT - 9.32 * tc[0];
  const amrex::Real x6466 = exp(x6465);
  const amrex::Real x6467 = x26 * x6466;
  const amrex::Real x6468 = 8.36111111111111e+28 * x6467;
  const amrex::Real x6469 = -0.4 + x33 * log(x6468) - x503 * x6464;
  const amrex::Real x6470 = pow(x6469, 2);
  const amrex::Real x6471 = 0.75 - 0.14 * x6469 - x507 * x6464;
  const amrex::Real x6472 = pow(x6471, -2);
  const amrex::Real x6473 = 1.0 + x6472 * x6470;
  const amrex::Real x6474 = pow(10, x33 * x6464 / x6473);
  const amrex::Real x6475 = 1.0 + x6468;
  const amrex::Real x6476 = x6474 / x6475;
  const amrex::Real x6477 = x10 + x1397;
  const amrex::Real x6478 = -(x1450 + x6477);
  const amrex::Real x6479 = exp(x6465 + x6478);
  const amrex::Real x6480 = x6479 * x1833;
  const amrex::Real x6481 = x6480 * x6476;
  const amrex::Real x6482 = 3.01e+36 * x6481;
  const amrex::Real x6483 = 1;
  const amrex::Real x6484 = x905 * x6483;
  const amrex::Real x6485 = x6469 * x6472;
  const amrex::Real x6486 = x6485 * x6484;
  const amrex::Real x6487 = x6470 / pow(x6471, 3);
  const amrex::Real x6488 = x6487 * x6484;
  const amrex::Real x6489 = x6464 / pow(x6473, 2);
  const amrex::Real x6490 = x6489 * (2.0 * x6486 + 0.28 * x6488);
  const amrex::Real x6491 = sc[1] * sc[21];
  const amrex::Real x6492 = 3.01e+36 * x6476;
  const amrex::Real x6493 = x6492 * x6467;
  const amrex::Real x6494 = x6493 * x6491;
  const amrex::Real x6495 = x6494 * x6490;
  const amrex::Real x6496 = x6474 / pow(x6475, 2);
  const amrex::Real x6497 = -5871.12948327683 * invT - 18.64 * tc[0];
  const amrex::Real x6498 = exp(x6478 + x6497) * x1835;
  const amrex::Real x6499 = x6498 * x6496;
  const amrex::Real x6500 = 2.51669444444444e+65 * x6499;
  const amrex::Real x6501 = x914 * x6492 * x6479;
  const amrex::Real x6502 = x6501 * sc[22];
  const amrex::Real x6503 = x6490 * x6502;
  const amrex::Real x6504 = exp(x6497) * x26 * x6491;
  const amrex::Real x6505 = x6496 * x6504;
  const amrex::Real x6506 = 2.51669444444444e+65 * x6505;
  const amrex::Real x6507 = x6466 * x6491;
  const amrex::Real x6508 = x6476 * x6507;
  const amrex::Real x6509 = 3.01e+36 * x6508;
  const amrex::Real x6510 = x6482 + x6495 - x6500 - x6503 + x6506 - x6509;
  const amrex::Real x6511 = exp(x196 + x6166) * x6004;
  const amrex::Real x6512 = x6169 * x6511;
  const amrex::Real x6513 = x6004 * x4738;
  const amrex::Real x6514 = x6181 * sc[19];
  const amrex::Real x6515 = x6176 * x6513;
  const amrex::Real x6516 = -2.94643609022556e+46 * x6512 + x6513 +
                            x6174 * x6514 - x6174 * x6515 + x6179 * sc[19] -
                            x6183 * sc[19];
  const amrex::Real x6517 = x4652 / pow(x4653, 2);
  const amrex::Real x6518 = x869 * sc_qss[1];
  const amrex::Real x6519 = -x1771 - x6518;
  const amrex::Real x6520 =
    -6904.13265484075 * invT - 9.146 * tc[0] - 2 * x4643;
  const amrex::Real x6521 = exp(x6520 + x832) * x914 * x6519;
  const amrex::Real x6522 = x6521 * x6517;
  const amrex::Real x6523 = 1;
  const amrex::Real x6524 = x6523 * x4650 / pow(x4648, 3);
  const amrex::Real x6525 = x6523 * x4647 * x4649;
  const amrex::Real x6526 = x6398 * x6525 + x6400 * x6524;
  const amrex::Real x6527 = x839 / pow(x4651, 2);
  const amrex::Real x6528 = x6519 * x4658;
  const amrex::Real x6529 = x6528 * x4655;
  const amrex::Real x6530 = x6527 * x6529;
  const amrex::Real x6531 = exp(x4656);
  const amrex::Real x6532 = sc[1] * x6531;
  const amrex::Real x6533 = x6532 * x4655;
  const amrex::Real x6534 = x6533 * sc[11];
  const amrex::Real x6535 = x6527 * x6534;
  const amrex::Real x6536 = x6519 * x4654;
  const amrex::Real x6537 = x6536 * x4658;
  const amrex::Real x6538 = exp(x6520) * x2008;
  const amrex::Real x6539 = x6517 * x6538;
  const amrex::Real x6540 = x6532 * sc[11];
  const amrex::Real x6541 = x6540 * x4654;
  const amrex::Real x6542 = -8.96296296296296e+30 * x6522 + 2.2e+18 * x6537 +
                            8.96296296296296e+30 * x6539 - 2.2e+18 * x6541 -
                            x6526 * x6530 + x6526 * x6535;
  const amrex::Real x6543 = x6542 + x4659 * x3846;
  const amrex::Real x6544 =
    sc[0] + sc[11] + 1.09 * sc[12] + 2.18 * sc[13] + sc[14] + sc[15] + sc[17] +
    sc[18] + sc[19] + sc[1] + sc[20] + sc[21] + sc[22] + sc[23] + sc[24] +
    sc[25] + sc[26] + sc[27] + sc[28] + sc[29] + sc[2] + sc[30] + sc[31] +
    sc[32] + sc[33] + sc[34] + sc[3] + sc[4] + sc[5] + 11.89 * sc[6] + sc[7] +
    0.85 * sc[8] + sc[9] + x622;
  const amrex::Real x6545 = 12.3690383111806 * exp(-1.84 * tc[0]) * x6544;
  const amrex::Real x6546 =
    log(0.5 * exp(-1e+30 * tc[1]) + 0.5 * exp(-1e-30 * tc[1]));
  const amrex::Real x6547 = -0.4 + x33 * log(x6545) - x503 * x6546;
  const amrex::Real x6548 = 0.75 - 0.14 * x6547 - x507 * x6546;
  const amrex::Real x6549 = pow(x6548, -2);
  const amrex::Real x6550 = pow(x6547, 2);
  const amrex::Real x6551 = 1.0 + x6550 * x6549;
  const amrex::Real x6552 = pow(10, x33 * x6546 / x6551);
  const amrex::Real x6553 = 1.0 + x6545;
  const amrex::Real x6554 = x6552 * x6544 / pow(x6553, 2);
  const amrex::Real x6555 = 782712744.331509 * x6554;
  const amrex::Real x6556 = 3.24 * tc[0];
  const amrex::Real x6557 = -(x10 + x158);
  const amrex::Real x6558 = exp(-x6556 + x6557) * refC * sc[4];
  const amrex::Real x6559 = x6558 * x6555;
  const amrex::Real x6560 = 1.4 * tc[0];
  const amrex::Real x6561 = exp(-x6560);
  const amrex::Real x6562 = sc[8] * sc[1];
  const amrex::Real x6563 = x6562 * x6561;
  const amrex::Real x6564 = x6552 / x6553;
  const amrex::Real x6565 = 63280000.0 * x6564;
  const amrex::Real x6566 = x6563 * x6565;
  const amrex::Real x6567 = exp(-x6556) * x6562;
  const amrex::Real x6568 = x6567 * x6555;
  const amrex::Real x6569 = x33 / x6544;
  const amrex::Real x6570 = x6569 * x6550 / pow(x6548, 3);
  const amrex::Real x6571 = x6569 * x6547 * x6549;
  const amrex::Real x6572 = 0.28 * x6570 + 2.0 * x6571;
  const amrex::Real x6573 = x6565 * x6544;
  const amrex::Real x6574 = x6573 * x6546 / pow(x6551, 2);
  const amrex::Real x6575 = x6563 * x6574;
  const amrex::Real x6576 = x6572 * x6575;
  const amrex::Real x6577 = exp(x6557 - x6560) * refC;
  const amrex::Real x6578 = sc[4] * x6577;
  const amrex::Real x6579 = x6578 * x6574;
  const amrex::Real x6580 = x6572 * x6579;
  const amrex::Real x6581 = x6565 * x6578;
  const amrex::Real x6582 = -x6559 - x6566 + x6568 + x6576 - x6580 + x6581;
  const amrex::Real x6583 = exp(-x1670 + x4566);
  const amrex::Real x6584 = x6583 * x1672;
  const amrex::Real x6585 = x6383 * x4567;
  const amrex::Real x6586 = -187000000000.0 * x6584 + 187000000000.0 * x6585;
  const amrex::Real x6587 = exp(x4565 - (x10 + x131)) * refC;
  const amrex::Real x6588 = sc[3] * x6587;
  const amrex::Real x6589 = 9428000.0 * x6588;
  const amrex::Real x6590 = exp(-x4564);
  const amrex::Real x6591 = sc[2] * x6590;
  const amrex::Real x6592 = sc[1] * x6591;
  const amrex::Real x6593 = 9428000.0 * x6592;
  const amrex::Real x6594 = x6589 - x6593;
  const amrex::Real x6595 = -x4913;
  const amrex::Real x6596 = exp(x6595 - (x10 + x116)) * refC;
  const amrex::Real x6597 = sc[6] * x6596;
  const amrex::Real x6598 = 44000000000.0 * x6597;
  const amrex::Real x6599 = exp(-x4913);
  const amrex::Real x6600 = sc[1] * x6599;
  const amrex::Real x6601 = sc[3] * x6600;
  const amrex::Real x6602 = 44000000000.0 * x6601;
  const amrex::Real x6603 = x6598 - x6602;
  const amrex::Real x6604 = -(x143 + x1794);
  const amrex::Real x6605 = exp(x4565 + x6604) * refC;
  const amrex::Real x6606 = 3560000.0 * x6605;
  const amrex::Real x6607 = pow(sc[1], 2);
  const amrex::Real x6608 = x6607 * x6590;
  const amrex::Real x6609 = -3560000.0 * x6608 + sc[5] * x6606;
  const amrex::Real x6610 = x6582 + x6586 + x6594 + x6603 + x6609;
  const amrex::Real x6611 = x6380 + x6386 + x6389 + x6395 + x6407 + x6410 +
                            x6419 + x6423 + x6425 + x6427 + x6431 + x6435 +
                            x6438 + x6443 + x6450 + x6455 + x6458 + x6459 +
                            x6463 + x6510 + x6516 + x6543 + x6610;
  const amrex::Real x6612 = exp(x1420 + x4708);
  const amrex::Real x6613 = x6612 * x4706 * x1408;
  const amrex::Real x6614 = x6613 * sc[15];
  const amrex::Real x6615 = x1190;
  const amrex::Real x6616 = x6615 * x4701 * x4698;
  const amrex::Real x6617 = x6615 * x4699 / pow(x4700, 3);
  const amrex::Real x6618 = x770 / pow(x4702, 2);
  const amrex::Real x6619 = x6618 * (2.0 * x6616 + 0.28 * x6617);
  const amrex::Real x6620 = x6614 * x6619;
  const amrex::Real x6621 = x6612 * x1422;
  const amrex::Real x6622 = x6621 * x4705;
  const amrex::Real x6623 = 1.4e+18 * x6622;
  const amrex::Real x6624 = x791 * sc_qss[2];
  const amrex::Real x6625 = -x1488 - x6624;
  const amrex::Real x6626 = x6625 * x4709;
  const amrex::Real x6627 = sc[1] * x6626;
  const amrex::Real x6628 = x6627 * x4706;
  const amrex::Real x6629 = x719 * x6628;
  const amrex::Real x6630 = x6629 * x6619;
  const amrex::Real x6631 = x4703 / pow(x4704, 2);
  const amrex::Real x6632 = 3.22368421052632e+29 * x6631;
  const amrex::Real x6633 = -3482.25932736866 * invT - 7.45 * tc[0] - 2 * x4694;
  const amrex::Real x6634 = exp(x1420 + x6633) * x1408 * sc[15];
  const amrex::Real x6635 = x6632 * x6634;
  const amrex::Real x6636 = x719 * x6625;
  const amrex::Real x6637 = exp(x6633) * sc[1] * x6636;
  const amrex::Real x6638 = x6632 * x6637;
  const amrex::Real x6639 = -x6620 + x6623 - x6628 + x6630 - x6635 + x6638;
  const amrex::Real x6640 = x6611 + x6639;
  const amrex::Real x6641 = x4717 * x3863;
  const amrex::Real x6642 = x4711 * x3863;
  const amrex::Real x6643 = x4687 * x3863;
  const amrex::Real x6644 = x1190;
  const amrex::Real x6645 = x6644 * x4678 / pow(x4676, 3);
  const amrex::Real x6646 = x6644 * x4677 * x4675;
  const amrex::Real x6647 = 0.28 * x6645 + 2.0 * x6646;
  const amrex::Real x6648 = x6625 * x4680;
  const amrex::Real x6649 = x6648 * x4674;
  const amrex::Real x6650 = 2.565e+21 * x6649;
  const amrex::Real x6651 = x719 * x748 / pow(x4679, 2);
  const amrex::Real x6652 = x6651 * x6650;
  const amrex::Real x6653 = x719 / pow(x4672, 2);
  const amrex::Real x6654 = 1.70446243523316e+35 * x6653;
  const amrex::Real x6655 = -54672.2967150199 * invT - 5.18 * tc[0] - 2 * x4667;
  const amrex::Real x6656 = exp(x6655) * x6648;
  const amrex::Real x6657 = exp(x1441 + x4669) * x4673;
  const amrex::Real x6658 = x6657 * x4681;
  const amrex::Real x6659 = x6658 * x1440;
  const amrex::Real x6660 = x6651 * x6659;
  const amrex::Real x6661 = exp(x1441 + x6655) * x4680 * x1440;
  const amrex::Real x6662 = x6650 - x6659 - x6647 * x6652 + x6647 * x6660 +
                            x6654 * x6661 - x6656 * x6654;
  const amrex::Real x6663 = x6662 + x4683 * x3863;
  const amrex::Real x6664 = x6641 - x6642 - x6643 + x6663;
  const amrex::Real x6665 = x6640 + x6664;
  const amrex::Real x6666 = -(x12 + x1494);
  const amrex::Real x6667 = exp(x6166 + x6666) * sc[29];
  const amrex::Real x6668 = x6169 * x6667;
  const amrex::Real x6669 = 2.94643609022556e+46 * x6668;
  const amrex::Real x6670 = x6181 * sc[28];
  const amrex::Real x6671 = x6174 * x6670;
  const amrex::Real x6672 = exp(x31 + x6666);
  const amrex::Real x6673 = x6672 * sc[29];
  const amrex::Real x6674 = x6673 * x4747;
  const amrex::Real x6675 = x26 * x6674;
  const amrex::Real x6676 = x6175 * x6675;
  const amrex::Real x6677 = x6174 * x6676;
  const amrex::Real x6678 = x6183 * sc[28];
  const amrex::Real x6679 = x6179 * sc[28];
  const amrex::Real x6680 = -x6669 + x6671 + x6674 - x6677 - x6678 + x6679;
  const amrex::Real x6681 = x370 * x4176;
  const amrex::Real x6682 = exp(x360 + x6166) * x6681;
  const amrex::Real x6683 = x6681 * x4781;
  const amrex::Real x6684 = x6176 * x6683;
  const amrex::Real x6685 = x6181 * sc[30];
  const amrex::Real x6686 = x6683 - x6170 * x6682 - x6174 * x6684 +
                            x6174 * x6685 + x6179 * sc[30] - x6183 * sc[30];
  const amrex::Real x6687 = x4767 * x4073;
  const amrex::Real x6688 = -x6687;
  const amrex::Real x6689 = -x4782 * x4178;
  const amrex::Real x6690 = x4775 * x4122;
  const amrex::Real x6691 = -x6690;
  const amrex::Real x6692 = x463 * x4071;
  const amrex::Real x6693 = exp(x441 + x6166) * x6692;
  const amrex::Real x6694 = x6181 * sc[25];
  const amrex::Real x6695 = x442 * x6692;
  const amrex::Real x6696 = x6695 * x4748;
  const amrex::Real x6697 = x6175 * x6696;
  const amrex::Real x6698 = -x6170 * x6693 + x6174 * x6694 - x6174 * x6697 +
                            x6179 * sc[25] - x6183 * sc[25] + x6695 * x4747;
  const amrex::Real x6699 = -x4779 * x4122;
  const amrex::Real x6700 = x4772 * x4073;
  const amrex::Real x6701 = x6699 - x6700;
  const amrex::Real x6702 = x6688 + x6689 + x6691 + x6698 + x6701;
  const amrex::Real x6703 = x4763 * x4316;
  const amrex::Real x6704 = -x1504 - (x109 * sc_qss[8] + x67 * sc_qss[15]);
  const amrex::Real x6705 = x32 * x6704;
  const amrex::Real x6706 = x6705 * x4747;
  const amrex::Real x6707 = x26 * x6706;
  const amrex::Real x6708 = x6175 * x6707;
  const amrex::Real x6709 = x6181 * sc[26];
  const amrex::Real x6710 = exp(x29 + x6166) * x6704;
  const amrex::Real x6711 = x6169 * x6710;
  const amrex::Real x6712 = x6706 - 2.94643609022556e+46 * x6711 -
                            x6174 * x6708 + x6174 * x6709 + x6179 * sc[26] -
                            x6183 * sc[26];
  const amrex::Real x6713 = -x6703 + x6712;
  const amrex::Real x6714 = x111 * x4314;
  const amrex::Real x6715 = x81 * x6714;
  const amrex::Real x6716 = x6715 * x4748;
  const amrex::Real x6717 = x6175 * x6716;
  const amrex::Real x6718 = exp(x6166 + x80) * x6714;
  const amrex::Real x6719 = x6181 * sc[24];
  const amrex::Real x6720 = -x6170 * x6718 - x6174 * x6717 + x6174 * x6719 +
                            x6179 * sc[24] - x6183 * sc[24] + x6715 * x4747;
  const amrex::Real x6721 = x6720 - x4749 * x4316;
  const amrex::Real x6722 = x4752 * x4316;
  const amrex::Real x6723 = x431 * x4120;
  const amrex::Real x6724 = x6723 * x4778;
  const amrex::Real x6725 = x6176 * x6724;
  const amrex::Real x6726 = x6181 * sc[27];
  const amrex::Real x6727 = exp(x386 + x6166) * x6723;
  const amrex::Real x6728 = x6724 - x6170 * x6727 - x6174 * x6725 +
                            x6174 * x6726 + x6179 * sc[27] - x6183 * sc[27];
  const amrex::Real x6729 = -x6722 + x6728;
  const amrex::Real x6730 = x6713 + x6721 + x6729;
  const amrex::Real x6731 = x6680 + x6686 + x6702 + x6730;
  const amrex::Real x6732 = x6665 + x6731;
  const amrex::Real x6733 = x6347 + x6351 + x6369 + x6732;
  const amrex::Real x6734 = -5454.86865732316 * invT + x4666;
  const amrex::Real x6735 = 660.0 * exp(x6734);
  const amrex::Real x6736 = x6735 * sc[10];
  const amrex::Real x6737 = -x6736;
  const amrex::Real x6738 = x142 + x554;
  const amrex::Real x6739 = 1.6 * tc[0];
  const amrex::Real x6740 = -1659.74946449039 * invT + x6739;
  const amrex::Real x6741 = 102.4 * exp(x6740 - (x116 + x6738));
  const amrex::Real x6742 = sc[6] * x6741;
  const amrex::Real x6743 = -x6742;
  const amrex::Real x6744 = 28000000.0 * x1727;
  const amrex::Real x6745 = x6744 * x1725;
  const amrex::Real x6746 = -x6745;
  const amrex::Real x6747 = x4508 * x3708;
  const amrex::Real x6748 = -x4508 * x3709;
  const amrex::Real x6749 = 12.0 * sc[6] + x625;
  const amrex::Real x6750 = 9428000.0 * x6749;
  const amrex::Real x6751 = x6750 * x6591;
  const amrex::Real x6752 = -x6751;
  const amrex::Real x6753 = x4620 * x3898;
  const amrex::Real x6754 = x4517 * x3781;
  const amrex::Real x6755 = 1.65 * tc[0];
  const amrex::Real x6756 = -164.551849718143 * invT + x6755;
  const amrex::Real x6757 = exp(x6756 - (x130 + x1483 + x1795 + x59));
  const amrex::Real x6758 = x1439 * sc[20];
  const amrex::Real x6759 = x6758 * x6757;
  const amrex::Real x6760 = x4687 * x3864;
  const amrex::Real x6761 = 90000000.0 * x1488;
  const amrex::Real x6762 = 90000000.0 * x6624;
  const amrex::Real x6763 = x1483 + x702;
  const amrex::Real x6764 = -15159.905274033 * invT - 5.16 * tc[0];
  const amrex::Real x6765 = exp(x6764 - (x115 + x1795 + x6763));
  const amrex::Real x6766 = x6758 * x6765;
  const amrex::Real x6767 = 360000.0 * sc[5];
  const amrex::Real x6768 = 0.6 * tc[0];
  const amrex::Real x6769 = exp(-x6768);
  const amrex::Real x6770 = sc[1] * x6769;
  const amrex::Real x6771 = x6383 * x4516;
  const amrex::Real x6772 = x6383 * x4541;
  const amrex::Real x6773 = x26 * x6377;
  const amrex::Real x6774 = x6600 * sc[13];
  const amrex::Real x6775 = x4539 * x3781;
  const amrex::Real x6776 = x26 * x6421;
  const amrex::Real x6777 = x6131 * x2106;
  const amrex::Real x6778 = x4544 * x3781;
  const amrex::Real x6779 = 120000000.0 * x6383;
  const amrex::Real x6780 = x4542 * x3781;
  const amrex::Real x6781 = x6131 * x2071;
  const amrex::Real x6782 = x4711 * x3864;
  const amrex::Real x6783 = x6112 * x2106;
  const amrex::Real x6784 = 1800000.0 * x6164;
  const amrex::Real x6785 = x4636 * x3899;
  const amrex::Real x6786 = x6112 * x2071;
  const amrex::Real x6787 = x6334 * x4603;
  const amrex::Real x6788 = x4723 * x4020;
  const amrex::Real x6789 = x4539 * x3780;
  const amrex::Real x6790 = sc[12] + x623;
  const amrex::Real x6791 = sc[1] * x6590;
  const amrex::Real x6792 = x6790 * x6791;
  const amrex::Real x6793 = x4547 * x3708;
  const amrex::Real x6794 = x4723 * x3961;
  const amrex::Real x6795 = 2000000.0 * x6334;
  const amrex::Real x6796 = x4723 * x3960;
  const amrex::Real x6797 = 1800000.0 * x6004;
  const amrex::Real x6798 = x6626 * x4707;
  const amrex::Real x6799 = x4638 * x3899;
  const amrex::Real x6800 = exp(-x1796 + x4865);
  const amrex::Real x6801 = x6800 * x1439 * sc[13];
  const amrex::Real x6802 = x26 * x6460;
  const amrex::Real x6803 = x4723 * x4019;
  const amrex::Real x6804 = x4726 * x3960;
  const amrex::Real x6805 = x6004 * x4725;
  const amrex::Real x6806 = x4547 * x3709;
  const amrex::Real x6807 = x4636 * x3898;
  const amrex::Real x6808 = x4517 * x3780;
  const amrex::Real x6809 = x4620 * x3899;
  const amrex::Real x6810 = 1.25 * tc[0];
  const amrex::Real x6811 = exp(-x6810);
  const amrex::Real x6812 = sc[1] * sc[6];
  const amrex::Real x6813 = x6812 * x6811;
  const amrex::Real x6814 = x4544 * x3780;
  const amrex::Real x6815 = x4638 * x3898;
  const amrex::Real x6816 = x4542 * x3780;
  const amrex::Real x6817 = x4726 * x3961;
  const amrex::Real x6818 = x4550 * x3780;
  const amrex::Real x6819 = 90000000.0 * sc[17];
  const amrex::Real x6820 = x4550 * x3781;
  const amrex::Real x6821 = -x6818 - x6819 + x6820;
  const amrex::Real x6822 = 60000000.0 * exp(-(x593 + x6763));
  const amrex::Real x6823 = x6822 * sc[20];
  const amrex::Real x6824 = x4522 * x3780;
  const amrex::Real x6825 = 108000.0 * exp(x4520);
  const amrex::Real x6826 = x6825 * sc[20];
  const amrex::Real x6827 = x4522 * x3781;
  const amrex::Real x6828 = -x6823 - x6824 - x6826 + x6827;
  const amrex::Real x6829 = x6493 * sc[21];
  const amrex::Real x6830 = -5535.38332385192 * invT + x6595;
  const amrex::Real x6831 = 2e+15 * exp(x6830);
  const amrex::Real x6832 = x6831 * sc[21];
  const amrex::Real x6833 = x6510 - x6829 - x6832;
  const amrex::Real x6834 = x1700 + x564;
  const amrex::Real x6835 = -(x115 + x554 + x6834);
  const amrex::Real x6836 = -166.98238621398 * invT - 0.664 * tc[0];
  const amrex::Real x6837 = 5757000.0 * exp(x6835 + x6836);
  const amrex::Real x6838 = x6837 * sc[13];
  const amrex::Real x6839 = 30000000.0 * x1701;
  const amrex::Real x6840 = x6839 * sc[13];
  const amrex::Real x6841 = 178.979071526765 * invT + 2.053 * tc[0];
  const amrex::Real x6842 = 0.07046 * exp(x6835 + x6841);
  const amrex::Real x6843 = x6842 * sc[13];
  const amrex::Real x6844 = -x4553 * x3780 + x4553 * x3781;
  const amrex::Real x6845 = -x6838 - x6840 - x6843 + x6844;
  const amrex::Real x6846 = x4790 * x4355;
  const amrex::Real x6847 = exp(x4573);
  const amrex::Real x6848 = 2.4e+16 * x6847;
  const amrex::Real x6849 = x4767 * x4075;
  const amrex::Real x6850 = x37 * x4737;
  const amrex::Real x6851 = x6850 * sc[28];
  const amrex::Real x6852 = x6846 + x6849 - x6851 - x6848 * sc[28];
  const amrex::Real x6853 = x4786 * x4355;
  const amrex::Real x6854 = x4775 * x4128;
  const amrex::Real x6855 =
    x6853 + x6854 + x4782 * x4180 - x6848 * sc[30] - x6850 * sc[30];
  const amrex::Real x6856 = x4763 * x4322;
  const amrex::Real x6857 = x4760 * x4019;
  const amrex::Real x6858 = x4760 * x4020;
  const amrex::Real x6859 =
    x6856 - x6857 + x6858 + x4795 * x4355 - x6848 * sc[26] - x6850 * sc[26];
  const amrex::Real x6860 = x4742 * x3960;
  const amrex::Real x6861 = x4629 * x3898;
  const amrex::Real x6862 = x4629 * x3899;
  const amrex::Real x6863 = x4742 * x3961;
  const amrex::Real x6864 = x6860 + x6861 - x6862 - x6863 + x4749 * x4322 -
                            x6848 * sc[24] - x6850 * sc[24];
  const amrex::Real x6865 = x4772 * x4075;
  const amrex::Real x6866 = x4752 * x4322;
  const amrex::Real x6867 =
    x6865 + x6866 + x4779 * x4128 - x6848 * sc[27] - x6850 * sc[27];
  const amrex::Real x6868 = x4721 * x3960;
  const amrex::Real x6869 = x4721 * x3961;
  const amrex::Real x6870 = x4745 * x4019;
  const amrex::Real x6871 = x4745 * x4020;
  const amrex::Real x6872 = x6868 - x6869 - x6870 + x6871 + x4769 * x4075 -
                            x6848 * sc[25] - x6850 * sc[25];
  const amrex::Real x6873 = x6662 + x4683 * x3864 - x719 * x6658 * x2098;
  const amrex::Real x6874 = 1997.77016324474 * invT;
  const amrex::Real x6875 = 24100000.0 * exp(-x6874);
  const amrex::Real x6876 = sc[7] * x6875;
  const amrex::Real x6877 = -2616.72666218454 * invT + x4913;
  const amrex::Real x6878 = 6.05 * exp(x6877);
  const amrex::Real x6879 = sc[7] * x6878;
  const amrex::Real x6880 = -x6876 - x6879;
  const amrex::Real x6881 = x6154 * x2106;
  const amrex::Real x6882 = x6154 * x2071;
  const amrex::Real x6883 = 50000000.0 * x1742;
  const amrex::Real x6884 = x6883 * sc[18];
  const amrex::Real x6885 = exp(-x1789 - x4981);
  const amrex::Real x6886 = 20000000.0 * x6885 * sc[18];
  const amrex::Real x6887 = x4506 * x3708;
  const amrex::Real x6888 = x4663 * x3864;
  const amrex::Real x6889 = 1.5e+18 * exp(-x1404 + x4661);
  const amrex::Real x6890 = x6889 * sc[18];
  const amrex::Real x6891 = x4506 * x3709;
  const amrex::Real x6892 = x6302 * x6306;
  const amrex::Real x6893 =
    x6881 - x6882 - x6884 - x6886 + x6887 + x6888 - x6890 - x6891 - x6892;
  const amrex::Real x6894 = x4582 * x3899;
  const amrex::Real x6895 = x4582 * x3898;
  const amrex::Real x6896 = 115.0 * exp(x4580);
  const amrex::Real x6897 = x6896 * sc[16];
  const amrex::Real x6898 = -x6894 + x6895 - x6897;
  const amrex::Real x6899 = x4576 * x3898;
  const amrex::Real x6900 = x6847 * sc[22];
  const amrex::Real x6901 = 0.65 * x5239;
  const amrex::Real x6902 = x6901 * sc[22];
  const amrex::Real x6903 = x4576 * x3899;
  const amrex::Real x6904 = x6899 - 4.8e+16 * x6900 - x6902 - x6903 -
                            x4756 * x4019 + x4756 * x4020 - x6850 * sc[22];
  const amrex::Real x6905 = x6561 * x6573;
  const amrex::Real x6906 = sc[8] * x6905;
  const amrex::Real x6907 = 7468.87259020676 * invT;
  const amrex::Real x6908 = 97560000.0 * exp(-x6907);
  const amrex::Real x6909 = sc[8] * x6908;
  const amrex::Real x6910 = -x6906 - x6909;
  const amrex::Real x6911 = x6583 * x4568;
  const amrex::Real x6912 = 2244000000000.0 * x6583;
  const amrex::Real x6913 = -x4569 * x3780 + x4569 * x3781 - x4571 * x3780 +
                            x4571 * x3781 - x692 * x6911 - x692 * sc[6] * x6912;
  const amrex::Real x6914 = 8e+15 * x6847;
  const amrex::Real x6915 = x6914 * sc[19];
  const amrex::Real x6916 = -1253.00949785375 * invT + 2.5 * tc[0];
  const amrex::Real x6917 = 0.173 * exp(x6916);
  const amrex::Real x6918 = x6917 * sc[19];
  const amrex::Real x6919 =
    -x6915 - x6918 + x4739 * x3960 - x4739 * x3961 - x6850 * sc[19];
  const amrex::Real x6920 = 148.448916412392 * invT;
  const amrex::Real x6921 = exp(-x6920);
  const amrex::Real x6922 = 74850000.0 * x6921;
  const amrex::Real x6923 = -26923.0980538841 * invT + 2.433 * tc[0];
  const amrex::Real x6924 = 0.5916 * exp(x6923 - (x158 + x6738));
  const amrex::Real x6925 = sc[4] * x6924;
  const amrex::Real x6926 = 337.658382754967 * invT;
  const amrex::Real x6927 = 3970000.0 * exp(-x6926);
  const amrex::Real x6928 = sc[4] * x6927;
  const amrex::Real x6929 = -x6925 - x6928 - sc[4] * x6922;
  const amrex::Real x6930 = 20000000.0 * sc[11];
  const amrex::Real x6931 = x6930 * x1778;
  const amrex::Real x6932 = x6192 * x2071;
  const amrex::Real x6933 = x4561 * x3780;
  const amrex::Real x6934 = 23000.0 * exp(x4559);
  const amrex::Real x6935 = x6934 * sc[11];
  const amrex::Real x6936 = x4561 * x3781;
  const amrex::Real x6937 = x167 + x208;
  const amrex::Real x6938 = 84300000.0 * exp(-(x593 + x6937));
  const amrex::Real x6939 = x6938 * sc[11];
  const amrex::Real x6940 = x4557 * x3708;
  const amrex::Real x6941 = x4557 * x3709;
  const amrex::Real x6942 = x6192 * x2106;
  const amrex::Real x6943 = 30000000.0 * x1734;
  const amrex::Real x6944 = x6943 * sc[11];
  const amrex::Real x6945 = -x6931 - x6932 - x6933 - x6935 + x6936 - x6939 +
                            x6940 - x6941 + x6942 - x6944 + x4659 * x3847 -
                            x6531 * x4655 * sc[11];
  const amrex::Real x6946 = -3150.13632793755 * invT + 2.7 * tc[0];
  const amrex::Real x6947 = 0.04589 * exp(x6946 - (x131 + x6738));
  const amrex::Real x6948 = sc[3] * x6947;
  const amrex::Real x6949 = 44000000000.0 * (6.3 * sc[6] + x625);
  const amrex::Real x6950 = sc[3] * x6599 * x6949;
  const amrex::Real x6951 = -x6948 - x6950 + x4555 * x3708 - x4555 * x3709;
  const amrex::Real x6952 = x519 * x6327;
  const amrex::Real x6953 = x5061 * x2071;
  const amrex::Real x6954 = x5061 * x2106;
  const amrex::Real x6955 = 40000000.0 * x1781;
  const amrex::Real x6956 = x6955 * sc[15];
  const amrex::Real x6957 = 12000000.0 * exp(-x1718 + x4510);
  const amrex::Real x6958 = x6957 * sc[15];
  const amrex::Real x6959 = 50.7 * exp(x4715);
  const amrex::Real x6960 = x6959 * sc[15];
  const amrex::Real x6961 = x4717 * x3864;
  const amrex::Real x6962 = x4512 * x3709;
  const amrex::Real x6963 = x4512 * x3708;
  const amrex::Real x6964 = -x6953 + x6954 - x6956 - x6958 - x6960 + x6961 -
                            x6962 + x6963 + x4600 * x3898 - x4600 * x3899 -
                            x6952 * sc[15];
  const amrex::Real x6965 = x4514 * x3708;
  const amrex::Real x6966 = x6207 * x2071;
  const amrex::Real x6967 = 70000000.0 * x1714;
  const amrex::Real x6968 = sc[9] * x6967;
  const amrex::Real x6969 = x26 * sc[9];
  const amrex::Real x6970 = x6229 * x6215;
  const amrex::Real x6971 = x6969 * x6970;
  const amrex::Real x6972 = x4514 * x3709;
  const amrex::Real x6973 = 0.5 * exp(-x1784 + x6205);
  const amrex::Real x6974 = sc[9] * x6973;
  const amrex::Real x6975 = x6207 * x2106;
  const amrex::Real x6976 =
    x6965 - x6966 - x6968 - x6971 - x6972 - x6974 + x6975;
  const amrex::Real x6977 = x6361 + x6542;
  const amrex::Real x6978 = x6380 + x6386 + x6389 + x6395 + x6407 + x6410 +
                            x6419 + x6423 + x6425 + x6427 + x6431 + x6435 +
                            x6438 + x6443 + x6450 + x6455 + x6458 + x6463 +
                            x6516 + x6639;
  const amrex::Real x6979 = x6257 + x6340;
  const amrex::Real x6980 = x6184 + x6317;
  const amrex::Real x6981 = x6979 + x6980;
  const amrex::Real x6982 = x6610 + x6981;
  const amrex::Real x6983 = x6978 + x6982;
  const amrex::Real x6984 = x4767 * x4076;
  const amrex::Real x6985 = 97560000.0 * exp(-x6907 - (x10 + x650 + x858));
  const amrex::Real x6986 = sc[3] * x6985;
  const amrex::Real x6987 = x10 + x137;
  const amrex::Real x6988 = x114 + x858;
  const amrex::Real x6989 = 3970000.0 * exp(-x6926 - (x6987 + x6988));
  const amrex::Real x6990 = sc[6] * x6989;
  const amrex::Real x6991 = x6791 * x6750;
  const amrex::Real x6992 = -x6991;
  const amrex::Real x6993 = x4620 * x3901;
  const amrex::Real x6994 = x4517 * x3782;
  const amrex::Real x6995 = exp(x6756);
  const amrex::Real x6996 = x6995 * sc[19];
  const amrex::Real x6997 = x4687 * x3865;
  const amrex::Real x6998 = x4542 * x3782;
  const amrex::Real x6999 = x4638 * x3901;
  const amrex::Real x7000 = x4547 * x3710;
  const amrex::Real x7001 = x4726 * x3962;
  const amrex::Real x7002 = x4542 * x3784;
  const amrex::Real x7003 = x4544 * x3784;
  const amrex::Real x7004 = x4539 * x3782;
  const amrex::Real x7005 = 80000000.0 * x6392;
  const amrex::Real x7006 = x6112 * x2184;
  const amrex::Real x7007 = x4723 * x3962;
  const amrex::Real x7008 = x4723 * x3963;
  const amrex::Real x7009 = x6112 * x2141;
  const amrex::Real x7010 = x4723 * x4021;
  const amrex::Real x7011 = x4723 * x4022;
  const amrex::Real x7012 = x4544 * x3782;
  const amrex::Real x7013 = x4638 * x3900;
  const amrex::Real x7014 = x4636 * x3900;
  const amrex::Real x7015 = x6131 * x2141;
  const amrex::Real x7016 = x4620 * x3900;
  const amrex::Real x7017 = x4539 * x3784;
  const amrex::Real x7018 = x719 * x3865;
  const amrex::Real x7019 = x4710 * x4706 * x7018;
  const amrex::Real x7020 = x4636 * x3901;
  const amrex::Real x7021 = x4517 * x3784;
  const amrex::Real x7022 = x4547 * x3711;
  const amrex::Real x7023 = x6131 * x2184;
  const amrex::Real x7024 = x4726 * x3963;
  const amrex::Real x7025 = x4550 * x3782;
  const amrex::Real x7026 = x4550 * x3784;
  const amrex::Real x7027 = -x7025 + x7026;
  const amrex::Real x7028 = x4522 * x3782;
  const amrex::Real x7029 = x4522 * x3784;
  const amrex::Real x7030 = x5101 - x7028 + x7029;
  const amrex::Real x7031 = 30000000.0 * x6383 - x4553 * x3782 + x4553 * x3784;
  const amrex::Real x7032 = x4742 * x3962;
  const amrex::Real x7033 = x4742 * x3963;
  const amrex::Real x7034 = x4629 * x3900;
  const amrex::Real x7035 = x4629 * x3901;
  const amrex::Real x7036 = x7032 - x7033 + x7034 - x7035;
  const amrex::Real x7037 = x4775 * x4129;
  const amrex::Real x7038 = x7037 + x4782 * x4181;
  const amrex::Real x7039 = x4760 * x4021;
  const amrex::Real x7040 = x4760 * x4022;
  const amrex::Real x7041 = -x7039 + x7040;
  const amrex::Real x7042 = x4721 * x3962;
  const amrex::Real x7043 = x4721 * x3963;
  const amrex::Real x7044 = x4745 * x4022;
  const amrex::Real x7045 = x4745 * x4021;
  const amrex::Real x7046 = x7042 - x7043 + x7044 - x7045 + x4769 * x4076;
  const amrex::Real x7047 = x4772 * x4076;
  const amrex::Real x7048 = x7047 + x4779 * x4129;
  const amrex::Real x7049 = x6662 + x4682 * x7018;
  const amrex::Real x7050 = x6154 * x2184;
  const amrex::Real x7051 = x6154 * x2141;
  const amrex::Real x7052 = x4506 * x3711;
  const amrex::Real x7053 = x4506 * x3710;
  const amrex::Real x7054 = x4663 * x3865;
  const amrex::Real x7055 = x7050 - x7051 - x7052 + x7053 + x7054;
  const amrex::Real x7056 = x4582 * x3901;
  const amrex::Real x7057 = x4582 * x3900;
  const amrex::Real x7058 = -x7056 + x7057;
  const amrex::Real x7059 = x873 * x3704;
  const amrex::Real x7060 = 15000000.0 * x7059 + x4508 * x3710 - x4508 * x3711;
  const amrex::Real x7061 = x4576 * x3901;
  const amrex::Real x7062 = x4576 * x3900;
  const amrex::Real x7063 = -x7061 + x7062 - x4756 * x4021 + x4756 * x4022;
  const amrex::Real x7064 = x4739 * x3962 - x4739 * x3963;
  const amrex::Real x7065 =
    -x4569 * x3782 + x4569 * x3784 - x4571 * x3782 + x4571 * x3784;
  const amrex::Real x7066 = x6192 * x2141;
  const amrex::Real x7067 = x4561 * x3782;
  const amrex::Real x7068 = x4561 * x3784;
  const amrex::Real x7069 = x4557 * x3711;
  const amrex::Real x7070 = x4557 * x3710;
  const amrex::Real x7071 = 84300000.0 * sc[9];
  const amrex::Real x7072 = x6192 * x2184;
  const amrex::Real x7073 =
    -x7066 - x7067 + x7068 - x7069 + x7070 + x7071 + x7072 + x4659 * x3848;
  const amrex::Real x7074 = x4717 * x3865;
  const amrex::Real x7075 = x4512 * x3710;
  const amrex::Real x7076 = x5061 * x2141;
  const amrex::Real x7077 = x4512 * x3711;
  const amrex::Real x7078 = x5061 * x2184;
  const amrex::Real x7079 =
    x7074 + x7075 - x7076 - x7077 + x7078 + x4600 * x3900 - x4600 * x3901;
  const amrex::Real x7080 = 0.04589 * exp(x6946);
  const amrex::Real x7081 = sc[5] * x7080;
  const amrex::Real x7082 = x7081 + x4555 * x3710 - x4555 * x3711;
  const amrex::Real x7083 = x6207 * x2141;
  const amrex::Real x7084 = x4514 * x3711;
  const amrex::Real x7085 = x4514 * x3710;
  const amrex::Real x7086 = x6207 * x2184;
  const amrex::Real x7087 = -x7083 - x7084 + x7085 + x7086;
  const amrex::Real x7088 = x6380 + x6386 + x6389 + x6395 + x6407 + x6410 +
                            x6419 + x6423 + x6425 + x6427 + x6431 + x6435 +
                            x6438 + x6443 + x6450 + x6455 + x6458 + x6463 +
                            x6510 + x6639;
  const amrex::Real x7089 = x6516 + x7088;
  const amrex::Real x7090 = x6982 + x7089;
  const amrex::Real x7091 = x4786 * x4357;
  const amrex::Real x7092 = x6686 + x7091;
  const amrex::Real x7093 = x6702 + x7092;
  const amrex::Real x7094 = x4790 * x4357;
  const amrex::Real x7095 = x6680 + x7094;
  const amrex::Real x7096 = x4752 * x4323;
  const amrex::Real x7097 = x6729 + x7096;
  const amrex::Real x7098 = x4749 * x4323;
  const amrex::Real x7099 = x4763 * x4323;
  const amrex::Real x7100 = x4795 * x4357;
  const amrex::Real x7101 = x7099 + x7100;
  const amrex::Real x7102 = x6713 + x6721 + x7098 + x7101;
  const amrex::Real x7103 = x7095 + x7097 + x7102;
  const amrex::Real x7104 = x6977 + x7093 + x7103;
  const amrex::Real x7105 = 24100000.0 * exp(-x6874 - (x129 + x135 + x808));
  const amrex::Real x7106 = sc[6] * x7105;
  const amrex::Real x7107 = 102.4 * exp(x6740);
  const amrex::Real x7108 = sc[5] * x7107;
  const amrex::Real x7109 = sc[2] * x6985;
  const amrex::Real x7110 = x6587 * x6750;
  const amrex::Real x7111 = 2.0 * g_RT[3];
  const amrex::Real x7112 = exp(-x6920 - (x6987 - x7111)) * sc[3];
  const amrex::Real x7113 = 149700000.0 * x7112;
  const amrex::Real x7114 = 20000000.0 * x6392;
  const amrex::Real x7115 = x4517 * x3785;
  const amrex::Real x7116 = x4620 * x3903;
  const amrex::Real x7117 = x4687 * x3866;
  const amrex::Real x7118 = exp(x6764);
  const amrex::Real x7119 = 8.4e+26 * x7118;
  const amrex::Real x7120 = x4620 * x3902;
  const amrex::Real x7121 = x6131 * x2291;
  const amrex::Real x7122 = x4636 * x3902;
  const amrex::Real x7123 = x4542 * x3785;
  const amrex::Real x7124 = x4517 * x3786;
  const amrex::Real x7125 = x4539 * x3786;
  const amrex::Real x7126 = x4539 * x3785;
  const amrex::Real x7127 = x4638 * x3902;
  const amrex::Real x7128 = x4726 * x3965;
  const amrex::Real x7129 = x4723 * x3964;
  const amrex::Real x7130 = x4723 * x3965;
  const amrex::Real x7131 = x4544 * x3786;
  const amrex::Real x7132 = x4636 * x3903;
  const amrex::Real x7133 = x4723 * x4024;
  const amrex::Real x7134 = x4547 * x3713;
  const amrex::Real x7135 = x4711 * x3866;
  const amrex::Real x7136 = x6112 * x2291;
  const amrex::Real x7137 = x4547 * x3712;
  const amrex::Real x7138 = x6131 * x2259;
  const amrex::Real x7139 = x4542 * x3786;
  const amrex::Real x7140 = 32000000.0 * x1757;
  const amrex::Real x7141 = sc[9] * x7140;
  const amrex::Real x7142 = x6112 * x2259;
  const amrex::Real x7143 = x4723 * x4023;
  const amrex::Real x7144 = x4544 * x3785;
  const amrex::Real x7145 = x4638 * x3903;
  const amrex::Real x7146 = x4726 * x3964;
  const amrex::Real x7147 = x4550 * x3785;
  const amrex::Real x7148 = x4550 * x3786;
  const amrex::Real x7149 = -x7147 + x7148;
  const amrex::Real x7150 = x4522 * x3785;
  const amrex::Real x7151 = x4522 * x3786;
  const amrex::Real x7152 = -x7150 + x7151;
  const amrex::Real x7153 = 5757000.0 * exp(x6836);
  const amrex::Real x7154 = x7153 * sc[12];
  const amrex::Real x7155 = 0.07046 * exp(x6841);
  const amrex::Real x7156 = x7155 * sc[12];
  const amrex::Real x7157 = x7154 + x7156;
  const amrex::Real x7158 = x4767 * x4077;
  const amrex::Real x7159 = x4767 * x4078;
  const amrex::Real x7160 = x7095 + x7158 - x7159;
  const amrex::Real x7161 = x4775 * x4130;
  const amrex::Real x7162 = x4775 * x4131;
  const amrex::Real x7163 =
    x7092 - x7161 + x7162 + x4782 * x4182 - x4782 * x4183;
  const amrex::Real x7164 = x4760 * x4023;
  const amrex::Real x7165 = x4760 * x4024;
  const amrex::Real x7166 = -x7164 + x7165;
  const amrex::Real x7167 = x4742 * x3964;
  const amrex::Real x7168 = x4742 * x3965;
  const amrex::Real x7169 = x4629 * x3902;
  const amrex::Real x7170 = x4629 * x3903;
  const amrex::Real x7171 = x7167 - x7168 + x7169 - x7170;
  const amrex::Real x7172 = x4772 * x4077;
  const amrex::Real x7173 = x4772 * x4078;
  const amrex::Real x7174 =
    x7097 + x7172 - x7173 - x4779 * x4130 + x4779 * x4131;
  const amrex::Real x7175 = x4721 * x3964;
  const amrex::Real x7176 = x4721 * x3965;
  const amrex::Real x7177 = x4745 * x4023;
  const amrex::Real x7178 = x4745 * x4024;
  const amrex::Real x7179 =
    x6698 + x7175 - x7176 - x7177 + x7178 + x4769 * x4077 - x4769 * x4078;
  const amrex::Real x7180 = x6662 + x4683 * x3866;
  const amrex::Real x7181 = x4663 * x3866;
  const amrex::Real x7182 = x6154 * x2291;
  const amrex::Real x7183 = x6154 * x2259;
  const amrex::Real x7184 = x4506 * x3712;
  const amrex::Real x7185 = x4506 * x3713;
  const amrex::Real x7186 = x7181 + x7182 - x7183 + x7184 - x7185;
  const amrex::Real x7187 = x4582 * x3902;
  const amrex::Real x7188 = x4582 * x3903;
  const amrex::Real x7189 = x7187 - x7188;
  const amrex::Real x7190 = x4508 * x3712 - x4508 * x3713;
  const amrex::Real x7191 = x4576 * x3903;
  const amrex::Real x7192 = x4576 * x3902;
  const amrex::Real x7193 = -x7191 + x7192 - x4756 * x4023 + x4756 * x4024;
  const amrex::Real x7194 = x4739 * x3964 - x4739 * x3965;
  const amrex::Real x7195 = x6744 * x1672;
  const amrex::Real x7196 = -x7195;
  const amrex::Real x7197 = -x4553 * x3785 + x4553 * x3786;
  const amrex::Real x7198 = x7196 + x7197 - x4569 * x3785 + x4569 * x3786 -
                            x4571 * x3785 + x4571 * x3786;
  const amrex::Real x7199 = x6192 * x2291;
  const amrex::Real x7200 = x4561 * x3785;
  const amrex::Real x7201 = x4561 * x3786;
  const amrex::Real x7202 = 30000000.0 * x7059;
  const amrex::Real x7203 = x4557 * x3713;
  const amrex::Real x7204 = x4557 * x3712;
  const amrex::Real x7205 = x6192 * x2259;
  const amrex::Real x7206 =
    x7199 - x7200 + x7201 + x7202 - x7203 + x7204 - x7205 + x4659 * x3849;
  const amrex::Real x7207 = x4512 * x3713;
  const amrex::Real x7208 = x4512 * x3712;
  const amrex::Real x7209 = x4717 * x3866;
  const amrex::Real x7210 = x5061 * x2259;
  const amrex::Real x7211 = x5061 * x2291;
  const amrex::Real x7212 =
    -x7207 + x7208 + x7209 - x7210 + x7211 + x4600 * x3902 - x4600 * x3903;
  const amrex::Real x7213 = x4514 * x3712;
  const amrex::Real x7214 = x4514 * x3713;
  const amrex::Real x7215 = x6207 * x2291;
  const amrex::Real x7216 = x6207 * x2259;
  const amrex::Real x7217 = x7213 - x7214 + x7215 - x7216;
  const amrex::Real x7218 = sc[1] * x6947;
  const amrex::Real x7219 = x6600 * x6949;
  const amrex::Real x7220 = -x7218 - x7219 + x4555 * x3712 - x4555 * x3713;
  const amrex::Real x7221 = x6542 + x7102;
  const amrex::Real x7222 = x7090 + x7221;
  const amrex::Real x7223 = 6.05 * exp(x6877 - (x1383 + x144));
  const amrex::Real x7224 = sc[5] * x7223;
  const amrex::Real x7225 = x6573 * x6577;
  const amrex::Real x7226 = x4620 * x3905;
  const amrex::Real x7227 = x4620 * x3904;
  const amrex::Real x7228 = x4517 * x3787;
  const amrex::Real x7229 = x4687 * x3867;
  const amrex::Real x7230 = x6112 * x2351;
  const amrex::Real x7231 = x4542 * x3787;
  const amrex::Real x7232 = x4542 * x3788;
  const amrex::Real x7233 = x4517 * x3788;
  const amrex::Real x7234 = x4723 * x4026;
  const amrex::Real x7235 = x6131 * x2334;
  const amrex::Real x7236 = x6131 * x2351;
  const amrex::Real x7237 = x4547 * x3715;
  const amrex::Real x7238 = x4723 * x3966;
  const amrex::Real x7239 = x4723 * x3967;
  const amrex::Real x7240 = x4544 * x3787;
  const amrex::Real x7241 = x4547 * x3714;
  const amrex::Real x7242 = x4544 * x3788;
  const amrex::Real x7243 = x4636 * x3904;
  const amrex::Real x7244 = x4726 * x3967;
  const amrex::Real x7245 = x4711 * x3867;
  const amrex::Real x7246 = x4539 * x3787;
  const amrex::Real x7247 = x4723 * x4025;
  const amrex::Real x7248 = x4726 * x3966;
  const amrex::Real x7249 = x4539 * x3788;
  const amrex::Real x7250 = x4638 * x3904;
  const amrex::Real x7251 = x4636 * x3905;
  const amrex::Real x7252 = x4638 * x3905;
  const amrex::Real x7253 = x6112 * x2334;
  const amrex::Real x7254 = x4522 * x3787;
  const amrex::Real x7255 = x4522 * x3788;
  const amrex::Real x7256 = -x7254 + x7255;
  const amrex::Real x7257 = x4550 * x3788;
  const amrex::Real x7258 = x4550 * x3787;
  const amrex::Real x7259 = x7257 - x7258;
  const amrex::Real x7260 = x4767 * x4079;
  const amrex::Real x7261 = x4767 * x4080;
  const amrex::Real x7262 = x7095 + x7260 - x7261;
  const amrex::Real x7263 = x4742 * x3966;
  const amrex::Real x7264 = x4742 * x3967;
  const amrex::Real x7265 = x4629 * x3904;
  const amrex::Real x7266 = x4629 * x3905;
  const amrex::Real x7267 = x7263 - x7264 + x7265 - x7266;
  const amrex::Real x7268 = x4775 * x4132;
  const amrex::Real x7269 = x4775 * x4133;
  const amrex::Real x7270 =
    x7092 - x7268 + x7269 + x4782 * x4184 - x4782 * x4185;
  const amrex::Real x7271 = x4760 * x4025;
  const amrex::Real x7272 = x4760 * x4026;
  const amrex::Real x7273 = -x7271 + x7272;
  const amrex::Real x7274 = x4772 * x4080;
  const amrex::Real x7275 = x4772 * x4079;
  const amrex::Real x7276 =
    x7097 - x7274 + x7275 - x4779 * x4132 + x4779 * x4133;
  const amrex::Real x7277 = x4721 * x3966;
  const amrex::Real x7278 = x4721 * x3967;
  const amrex::Real x7279 = x4745 * x4026;
  const amrex::Real x7280 = x4745 * x4025;
  const amrex::Real x7281 =
    x6698 + x7277 - x7278 + x7279 - x7280 + x4769 * x4079 - x4769 * x4080;
  const amrex::Real x7282 = x6662 + x4683 * x3867;
  const amrex::Real x7283 = x6154 * x2334;
  const amrex::Real x7284 = x4506 * x3714;
  const amrex::Real x7285 = x4506 * x3715;
  const amrex::Real x7286 = x4663 * x3867;
  const amrex::Real x7287 = x6154 * x2351;
  const amrex::Real x7288 = -x7283 + x7284 - x7285 + x7286 + x7287;
  const amrex::Real x7289 = x4582 * x3904;
  const amrex::Real x7290 = x4582 * x3905;
  const amrex::Real x7291 = x7289 - x7290;
  const amrex::Real x7292 = x4508 * x3714 - x4508 * x3715;
  const amrex::Real x7293 = x4576 * x3904;
  const amrex::Real x7294 = x4576 * x3905;
  const amrex::Real x7295 = x7293 - x7294 - x4756 * x4025 + x4756 * x4026;
  const amrex::Real x7296 = x4739 * x3966 - x4739 * x3967;
  const amrex::Real x7297 = -x4553 * x3787 + x4553 * x3788;
  const amrex::Real x7298 =
    x7297 - x4569 * x3787 + x4569 * x3788 - x4571 * x3787 + x4571 * x3788;
  const amrex::Real x7299 = x6192 * x2351;
  const amrex::Real x7300 = x4561 * x3787;
  const amrex::Real x7301 = x6192 * x2334;
  const amrex::Real x7302 = x4557 * x3715;
  const amrex::Real x7303 = x4557 * x3714;
  const amrex::Real x7304 = x4561 * x3788;
  const amrex::Real x7305 =
    x7299 - x7300 - x7301 - x7302 + x7303 + x7304 + x4659 * x3850;
  const amrex::Real x7306 = x4512 * x3715;
  const amrex::Real x7307 = x4512 * x3714;
  const amrex::Real x7308 = x4717 * x3867;
  const amrex::Real x7309 = x5061 * x2334;
  const amrex::Real x7310 = x5061 * x2351;
  const amrex::Real x7311 =
    -x7306 + x7307 + x7308 - x7309 + x7310 + x4600 * x3904 - x4600 * x3905;
  const amrex::Real x7312 = x4555 * x3714 - x4555 * x3715;
  const amrex::Real x7313 = x4514 * x3715;
  const amrex::Real x7314 = x4514 * x3714;
  const amrex::Real x7315 = x6207 * x2351;
  const amrex::Real x7316 = x6207 * x2334;
  const amrex::Real x7317 = -x7313 + x7314 + x7315 - x7316;
  const amrex::Real x7318 = sc[1] * x6924;
  const amrex::Real x7319 = sc[1] * x6927;
  const amrex::Real x7320 = -x7318 - x7319 - sc[1] * x6922;
  const amrex::Real x7321 = sc[4] * x7223;
  const amrex::Real x7322 = 660.0 * exp(x6734 - (x143 + x168 + x252));
  const amrex::Real x7323 = sc[9] * x7322;
  const amrex::Real x7324 = sc[3] * x7107;
  const amrex::Real x7325 = -x4508 * x3717;
  const amrex::Real x7326 = x4508 * x3716;
  const amrex::Real x7327 = 0.5916 * exp(x6923);
  const amrex::Real x7328 = sc[8] * x7327;
  const amrex::Real x7329 = x6426 * x2462;
  const amrex::Real x7330 = x905 * x6370;
  const amrex::Real x7331 = x6371 * x7330;
  const amrex::Real x7332 = 4.0 * x7331 + x6373 * x2354;
  const amrex::Real x7333 = x6453 * x7332;
  const amrex::Real x7334 = -x7333;
  const amrex::Real x7335 = 1.52019193857965e+47 * x6444;
  const amrex::Real x7336 = x6456 * x7335;
  const amrex::Real x7337 = x6379 * x7332;
  const amrex::Real x7338 = x6631 * x6637;
  const amrex::Real x7339 = 6.44736842105263e+29 * x7338;
  const amrex::Real x7340 = x6447 * x7335;
  const amrex::Real x7341 = -x7340;
  const amrex::Real x7342 = 6.4e+15 * x6388;
  const amrex::Real x7343 = 2700000000000.0 * x6409;
  const amrex::Real x7344 = 2.8e+18 * x6622;
  const amrex::Real x7345 = 3.34403669724771e+18 * x6385;
  const amrex::Real x7346 = x6412 * x2353 + x6413 * x2354;
  const amrex::Real x7347 = x6422 * x6414;
  const amrex::Real x7348 = x7347 * x7346;
  const amrex::Real x7349 = x6417 * x6414;
  const amrex::Real x7350 = x7349 * x7346;
  const amrex::Real x7351 = -x7350;
  const amrex::Real x7352 = 8.192e+20 * x6390;
  const amrex::Real x7353 = x6393 * x7352;
  const amrex::Real x7354 = 4.0 * x905;
  const amrex::Real x7355 = 0.56 * x905;
  const amrex::Real x7356 = (x6397 * x7354 + x6399 * x7355) * x6402;
  const amrex::Real x7357 = x6461 * x7356;
  const amrex::Real x7358 = 3.34403669724771e+18 * x6441;
  const amrex::Real x7359 = -x7358;
  const amrex::Real x7360 = x6404 * x7356;
  const amrex::Real x7361 = -x7360;
  const amrex::Real x7362 = x6627 * x4705;
  const amrex::Real x7363 = 2.8e+18 * x7362;
  const amrex::Real x7364 = -x7363;
  const amrex::Real x7365 = sc[1] * x6420;
  const amrex::Real x7366 = 2700000000000.0 * x7365;
  const amrex::Real x7367 = -x7366;
  const amrex::Real x7368 = x6631 * x6634;
  const amrex::Real x7369 = 6.44736842105263e+29 * x7368;
  const amrex::Real x7370 = -x7369;
  const amrex::Real x7371 = x6618 * (4.0 * x6616 + 0.56 * x6617);
  const amrex::Real x7372 = x6629 * x7371;
  const amrex::Real x7373 = 3.98e+29 * x6436;
  const amrex::Real x7374 = -x7373;
  const amrex::Real x7375 = 6.4e+15 * x6433;
  const amrex::Real x7376 = -x7375;
  const amrex::Real x7377 = x6614 * x7371;
  const amrex::Real x7378 = -x7377;
  const amrex::Real x7379 = x6428 * x7352;
  const amrex::Real x7380 = -x7379;
  const amrex::Real x7381 = x4620 * x3907;
  const amrex::Real x7382 = x4517 * x3790;
  const amrex::Real x7383 = x4517 * x3789;
  const amrex::Real x7384 = 90000000.0 * x1417;
  const amrex::Real x7385 = x7384 * sc[14];
  const amrex::Real x7386 = exp(x6604 - x6768) * refC;
  const amrex::Real x7387 = x6607 * x6769;
  const amrex::Real x7388 = x4723 * x3968;
  const amrex::Real x7389 = x4542 * x3789;
  const amrex::Real x7390 = x4539 * x3790;
  const amrex::Real x7391 = exp(x6595 + x6604) * refC;
  const amrex::Real x7392 = x7391 * sc[13];
  const amrex::Real x7393 = x6112 * x2507;
  const amrex::Real x7394 = 120000000.0 * x1687;
  const amrex::Real x7395 = x7394 * sc[12];
  const amrex::Real x7396 = x4544 * x3789;
  const amrex::Real x7397 = x4544 * x3790;
  const amrex::Real x7398 = x6112 * x2460;
  const amrex::Real x7399 = x4687 * x3868;
  const amrex::Real x7400 = x6930 * x1753;
  const amrex::Real x7401 = x6131 * x2507;
  const amrex::Real x7402 = x4547 * x3716;
  const amrex::Real x7403 = x4547 * x3717;
  const amrex::Real x7404 = x4723 * x4028;
  const amrex::Real x7405 = x4539 * x3789;
  const amrex::Real x7406 = x4726 * x3969;
  const amrex::Real x7407 = x4711 * x3868;
  const amrex::Real x7408 = x4620 * x3906;
  const amrex::Real x7409 = x4542 * x3790;
  const amrex::Real x7410 = x4723 * x3969;
  const amrex::Real x7411 = x4636 * x3906;
  const amrex::Real x7412 = 1800000.0 * x1576;
  const amrex::Real x7413 = x4638 * x3907;
  const amrex::Real x7414 = x4636 * x3907;
  const amrex::Real x7415 = exp(x6604 - x6810) * refC;
  const amrex::Real x7416 = 112480000.0 * x7415;
  const amrex::Real x7417 = x4726 * x3968;
  const amrex::Real x7418 = 1800000.0 * x1592;
  const amrex::Real x7419 = x4638 * x3906;
  const amrex::Real x7420 = 2000000.0 * x1656;
  const amrex::Real x7421 = x7420 * sc[15];
  const amrex::Real x7422 = x6131 * x2460;
  const amrex::Real x7423 = x4723 * x4027;
  const amrex::Real x7424 = x4522 * x3789;
  const amrex::Real x7425 = x4522 * x3790;
  const amrex::Real x7426 = -x7424 + x7425;
  const amrex::Real x7427 = x4550 * x3789;
  const amrex::Real x7428 = x4550 * x3790;
  const amrex::Real x7429 = -x7427 + x7428;
  const amrex::Real x7430 = 6.02e+36 * x6481;
  const amrex::Real x7431 = x6487 * x6483;
  const amrex::Real x7432 = 4.0 * x6486 + x7431 * x2354;
  const amrex::Real x7433 = x6494 * x6489;
  const amrex::Real x7434 = x7432 * x7433;
  const amrex::Real x7435 = 5.03338888888889e+65 * x6499;
  const amrex::Real x7436 = x6489 * x6502;
  const amrex::Real x7437 = x7436 * x7432;
  const amrex::Real x7438 = 5.03338888888889e+65 * x6505;
  const amrex::Real x7439 = 6.02e+36 * x6508;
  const amrex::Real x7440 = x7430 + x7434 - x7435 - x7437 + x7438 - x7439;
  const amrex::Real x7441 = -x4553 * x3789 + x4553 * x3790;
  const amrex::Real x7442 = x4767 * x4081;
  const amrex::Real x7443 = x4767 * x4082;
  const amrex::Real x7444 = x4790 * x4358;
  const amrex::Real x7445 = 5.89287218045113e+46 * x6668;
  const amrex::Real x7446 = x6172 * x2354 + x6173 * x2353;
  const amrex::Real x7447 = x6670 * x7446;
  const amrex::Real x7448 = 5.89287218045113e+46 * x6178;
  const amrex::Real x7449 = x7448 * sc[28];
  const amrex::Real x7450 = x6673 * x4737;
  const amrex::Real x7451 = x7450 * x2363;
  const amrex::Real x7452 = x4737 * x2470;
  const amrex::Real x7453 = x7452 * sc[28];
  const amrex::Real x7454 = x6676 * x7446;
  const amrex::Real x7455 =
    x7444 - x7445 + x7447 + x7449 + x7451 - x7453 - x7454;
  const amrex::Real x7456 = x7442 - x7443 + x7455;
  const amrex::Real x7457 = x4763 * x4326;
  const amrex::Real x7458 = x6705 * x4737;
  const amrex::Real x7459 = x4763 * x4325;
  const amrex::Real x7460 = -5.89287218045113e+46 * x6711 + x7457 - x7459 +
                            x4795 * x4358 - x6708 * x7446 + x6709 * x7446 +
                            x7448 * sc[26] - x7452 * sc[26] + x7458 * x2363;
  const amrex::Real x7461 = 5.89287218045113e+46 * x6169;
  const amrex::Real x7462 = x4737 * x2363;
  const amrex::Real x7463 = -x4749 * x4325 + x4749 * x4326 + x6715 * x7462 -
                            x6717 * x7446 - x6718 * x7461 + x6719 * x7446 +
                            x7448 * sc[24] - x7452 * sc[24];
  const amrex::Real x7464 = x4742 * x3968;
  const amrex::Real x7465 = x4742 * x3969;
  const amrex::Real x7466 = x4629 * x3906;
  const amrex::Real x7467 = x4629 * x3907;
  const amrex::Real x7468 = x7464 - x7465 + x7466 - x7467;
  const amrex::Real x7469 = x4760 * x4027;
  const amrex::Real x7470 = x4760 * x4028;
  const amrex::Real x7471 = -x7469 + x7470;
  const amrex::Real x7472 = x4775 * x4136;
  const amrex::Real x7473 = x4775 * x4134;
  const amrex::Real x7474 = x4786 * x4358;
  const amrex::Real x7475 = x361 * x6681;
  const amrex::Real x7476 = x7474 - x6682 * x7461 - x6684 * x7446 +
                            x6685 * x7446 + x7448 * sc[30] - x7452 * sc[30] +
                            x7462 * x7475;
  const amrex::Real x7477 =
    x7472 - x7473 + x7476 + x4782 * x4187 - x4782 * x4188;
  const amrex::Real x7478 = x4772 * x4081;
  const amrex::Real x7479 = x4772 * x4082;
  const amrex::Real x7480 = x387 * x6723;
  const amrex::Real x7481 = x4752 * x4326;
  const amrex::Real x7482 = x4752 * x4325;
  const amrex::Real x7483 = x7481 - x7482 - x6725 * x7446 + x6726 * x7446 -
                            x6727 * x7461 + x7448 * sc[27] - x7452 * sc[27] +
                            x7462 * x7480;
  const amrex::Real x7484 =
    x7478 - x7479 + x7483 - x4779 * x4134 + x4779 * x4136;
  const amrex::Real x7485 = x4721 * x3968;
  const amrex::Real x7486 = x4745 * x4027;
  const amrex::Real x7487 = x4721 * x3969;
  const amrex::Real x7488 = x4745 * x4028;
  const amrex::Real x7489 = -x6693 * x7461 + x6694 * x7446 - x6697 * x7446 +
                            x7448 * sc[25] - x7452 * sc[25] +
                            x6692 * x4737 * x2396;
  const amrex::Real x7490 =
    x7485 - x7486 - x7487 + x7488 + x7489 + x4769 * x4081 - x4769 * x4082;
  const amrex::Real x7491 = 0.56 * x6645 + 4.0 * x6646;
  const amrex::Real x7492 = x6653 * x6656;
  const amrex::Real x7493 = x6657 * x4680;
  const amrex::Real x7494 = x6653 * x6661;
  const amrex::Real x7495 = 5.13e+21 * x6649 - 3.40892487046632e+35 * x7492 +
                            3.40892487046632e+35 * x7494 - x6652 * x7491 +
                            x6660 * x7491 - x7493 * x2495;
  const amrex::Real x7496 = x7495 + x4683 * x3868;
  const amrex::Real x7497 = x4663 * x3868;
  const amrex::Real x7498 = x6154 * x2507;
  const amrex::Real x7499 = x6154 * x2460;
  const amrex::Real x7500 = x4506 * x3717;
  const amrex::Real x7501 = x4506 * x3716;
  const amrex::Real x7502 = x7497 + x7498 - x7499 - x7500 + x7501;
  const amrex::Real x7503 = x4582 * x3906;
  const amrex::Real x7504 = x6334 * x4581;
  const amrex::Real x7505 = x4582 * x3907;
  const amrex::Real x7506 = x7503 + x7504 - x7505;
  const amrex::Real x7507 = x4576 * x3906;
  const amrex::Real x7508 = x4576 * x3907;
  const amrex::Real x7509 = 0.65 * exp(x4462 - (x1398 + x143 + x294));
  const amrex::Real x7510 = x7509 * sc[21];
  const amrex::Real x7511 =
    x7507 - x7508 + x7510 - x4756 * x4027 + x4756 * x4028;
  const amrex::Real x7512 = 0.173 * exp(x6916 - (x1401 + x143 + x195));
  const amrex::Real x7513 = x7512 * sc[18];
  const amrex::Real x7514 = x7513 + x4739 * x3968 - x4739 * x3969;
  const amrex::Real x7515 = -374000000000.0 * x6584 + 374000000000.0 * x6585 -
                            x4569 * x3789 + x4569 * x3790 - x4571 * x3789 +
                            x4571 * x3790;
  const amrex::Real x7516 = 18856000.0 * x6588;
  const amrex::Real x7517 = 18856000.0 * x6592;
  const amrex::Real x7518 = x7516 - x7517;
  const amrex::Real x7519 = x6192 * x2507;
  const amrex::Real x7520 = x6192 * x2460;
  const amrex::Real x7521 = x4561 * x3789;
  const amrex::Real x7522 = x4561 * x3790;
  const amrex::Real x7523 = x6383 * x4560;
  const amrex::Real x7524 = x4557 * x3717;
  const amrex::Real x7525 = x4557 * x3716;
  const amrex::Real x7526 = x6524 * x7355 + x6525 * x7354;
  const amrex::Real x7527 = -1.79259259259259e+31 * x6522 + 4.4e+18 * x6537 +
                            1.79259259259259e+31 * x6539 - 4.4e+18 * x6541 -
                            x6530 * x7526 + x6535 * x7526;
  const amrex::Real x7528 = x7519 - x7520 - x7521 + x7522 + x7523 - x7524 +
                            x7525 + x7527 + x4659 * x3852;
  const amrex::Real x7529 = 88000000000.0 * x6601;
  const amrex::Real x7530 = sc[2] * x7080;
  const amrex::Real x7531 = 88000000000.0 * x6597;
  const amrex::Real x7532 =
    -x7529 + x7530 + x7531 + x4555 * x3716 - x4555 * x3717;
  const amrex::Real x7533 = x4512 * x3717;
  const amrex::Real x7534 = x5061 * x2460;
  const amrex::Real x7535 = x5061 * x2507;
  const amrex::Real x7536 = x6625 * x4716;
  const amrex::Real x7537 = x4512 * x3716;
  const amrex::Real x7538 = x4717 * x3868;
  const amrex::Real x7539 = -x7533 - x7534 + x7535 + x7536 + x7537 + x7538 +
                            x4600 * x3906 - x4600 * x3907;
  const amrex::Real x7540 = x4514 * x3717;
  const amrex::Real x7541 = x6207 * x2507;
  const amrex::Real x7542 = x4514 * x3716;
  const amrex::Real x7543 = x6207 * x2460;
  const amrex::Real x7544 = 70000000.0 * x7059;
  const amrex::Real x7545 = x6392 * x6206;
  const amrex::Real x7546 = 4.954e+21 * x6228;
  const amrex::Real x7547 = x6255 * x7546;
  const amrex::Real x7548 = 9.66225039370079e+32 * x6248;
  const amrex::Real x7549 = 9.66225039370079e+32 * x6245;
  const amrex::Real x7550 = x6232 * x6236;
  const amrex::Real x7551 = x6238 * (4.0 * x6235 + x7355 * x7550);
  const amrex::Real x7552 = x6231 * x7551;
  const amrex::Real x7553 = x6217 * x7546;
  const amrex::Real x7554 = x6253 * x7551;
  const amrex::Real x7555 = x7547 + x7548 - x7549 + x7552 - x7553 - x7554;
  const amrex::Real x7556 =
    -x7540 + x7541 + x7542 - x7543 + x7544 + x7545 + x7555;
  const amrex::Real x7557 = 1.7689e+88 * x6293;
  const amrex::Real x7558 = x6296 * x1985;
  const amrex::Real x7559 = 2.66e+48 * x7558;
  const amrex::Real x7560 = 1.7689e+88 * x6300;
  const amrex::Real x7561 = 2.66e+48 * x6304;
  const amrex::Real x7562 = (x6309 * x2353 + x6310 * x2354) * x6311;
  const amrex::Real x7563 = x6307 * x7562;
  const amrex::Real x7564 = x6315 * x7562;
  const amrex::Real x7565 = -x7557 + x7559 + x7560 - x7561 + x7563 - x7564;
  const amrex::Real x7566 = x296 * x6164;
  const amrex::Real x7567 = -x6167 * x7461 - x6177 * x7446 + x6182 * x7446 +
                            x7448 * sc[22] - x7452 * sc[22] + x7566 * x7462;
  const amrex::Real x7568 = x197 * x6004;
  const amrex::Real x7569 = -x6511 * x7461 + x6514 * x7446 - x6515 * x7446 +
                            x7448 * sc[19] - x7452 * sc[19] + x7568 * x7462;
  const amrex::Real x7570 = x6331 * x6335;
  const amrex::Real x7571 = x6324 * x2353 + x6325 * x2354;
  const amrex::Real x7572 = x6331 * x6338;
  const amrex::Real x7573 =
    -9430000.0 * x6328 + 9430000.0 * x6337 - 11185522012.5786 * x7570 +
    11185522012.5786 * x7572 + x6330 * x7571 - x6339 * x7571;
  const amrex::Real x7574 = x7565 + x7567 + x7569 + x7573;
  const amrex::Real x7575 = sc[3] * x7105;
  const amrex::Real x7576 = sc[1] * x6741;
  const amrex::Real x7577 = -x7576;
  const amrex::Real x7578 = sc[2] * x6989;
  const amrex::Real x7579 = x6426 * x2606;
  const amrex::Real x7580 = x6372 * x7330;
  const amrex::Real x7581 = 12.0 * x7331 + 1.68 * x7580;
  const amrex::Real x7582 = x6453 * x7581;
  const amrex::Real x7583 = 4.56057581573896e+47 * x6457;
  const amrex::Real x7584 = x4620 * x3909;
  const amrex::Real x7585 = x6379 * x7581;
  const amrex::Real x7586 = x4687 * x3869;
  const amrex::Real x7587 = x4517 * x3791;
  const amrex::Real x7588 = 2.4576e+21 * x6394;
  const amrex::Real x7589 = 8.4e+18 * x6622;
  const amrex::Real x7590 = x6131 * x2585;
  const amrex::Real x7591 = x4542 * x3792;
  const amrex::Real x7592 = x4542 * x3791;
  const amrex::Real x7593 = 1.92e+16 * x6388;
  const amrex::Real x7594 = x6412 * x2509 + x6413 * x2508;
  const amrex::Real x7595 = x7347 * x7594;
  const amrex::Real x7596 = x4636 * x3909;
  const amrex::Real x7597 = x7349 * x7594;
  const amrex::Real x7598 = 8100000000000.0 * x7365;
  const amrex::Real x7599 = x4539 * x3792;
  const amrex::Real x7600 = x4539 * x3791;
  const amrex::Real x7601 = x6112 * x2614;
  const amrex::Real x7602 = x6112 * x2585;
  const amrex::Real x7603 = 2.4576e+21 * x6429;
  const amrex::Real x7604 = x6131 * x2614;
  const amrex::Real x7605 = x4517 * x3792;
  const amrex::Real x7606 = 1.92e+16 * x6433;
  const amrex::Real x7607 = 1.00321100917431e+19 * x6381;
  const amrex::Real x7608 = x6440 * x7607;
  const amrex::Real x7609 = 4.56057581573896e+47 * x6448;
  const amrex::Real x7610 = x4723 * x3970;
  const amrex::Real x7611 = x4544 * x3792;
  const amrex::Real x7612 = 1.194e+30 * x6436;
  const amrex::Real x7613 = x6408 * x2586;
  const amrex::Real x7614 = x4723 * x4029;
  const amrex::Real x7615 = x4723 * x4030;
  const amrex::Real x7616 = x4547 * x3718;
  const amrex::Real x7617 = 16000000.0 * x7059;
  const amrex::Real x7618 = x809 * x7617;
  const amrex::Real x7619 = 1.93421052631579e+30 * x7368;
  const amrex::Real x7620 = x6607 * x6811;
  const amrex::Real x7621 = x4723 * x3971;
  const amrex::Real x7622 = x4711 * x3869;
  const amrex::Real x7623 = (12.0 * x6616 + 1.68 * x6617) * x6618;
  const amrex::Real x7624 = x6629 * x7623;
  const amrex::Real x7625 = x4544 * x3791;
  const amrex::Real x7626 = 1.93421052631579e+30 * x7338;
  const amrex::Real x7627 = 8.4e+18 * x7362;
  const amrex::Real x7628 = x4726 * x3970;
  const amrex::Real x7629 = x4726 * x3971;
  const amrex::Real x7630 = 12.0 * x905;
  const amrex::Real x7631 = 1.68 * x905;
  const amrex::Real x7632 = x6397 * x7630 + x6399 * x7631;
  const amrex::Real x7633 = x6462 * x7632;
  const amrex::Real x7634 = x6405 * x7632;
  const amrex::Real x7635 = x6614 * x7623;
  const amrex::Real x7636 = x4638 * x3908;
  const amrex::Real x7637 = x4620 * x3908;
  const amrex::Real x7638 = x6384 * x7607;
  const amrex::Real x7639 = x4636 * x3908;
  const amrex::Real x7640 = x4547 * x3719;
  const amrex::Real x7641 = x4638 * x3909;
  const amrex::Real x7642 = x4550 * x3791;
  const amrex::Real x7643 = x4550 * x3792;
  const amrex::Real x7644 = -x7642 + x7643;
  const amrex::Real x7645 = x4522 * x3791;
  const amrex::Real x7646 = x4522 * x3792;
  const amrex::Real x7647 = -x7645 + x7646;
  const amrex::Real x7648 = -x4553 * x3791 + x4553 * x3792;
  const amrex::Real x7649 = 1.806e+37 * x6481;
  const amrex::Real x7650 = 12.0 * x6486 + x7431 * x2508;
  const amrex::Real x7651 = x7433 * x7650;
  const amrex::Real x7652 = 1.51001666666667e+66 * x6499;
  const amrex::Real x7653 = x7436 * x7650;
  const amrex::Real x7654 = 1.51001666666667e+66 * x6505;
  const amrex::Real x7655 = 1.806e+37 * x6508;
  const amrex::Real x7656 = x7649 + x7651 - x7652 - x7653 + x7654 - x7655;
  const amrex::Real x7657 = x4767 * x4084;
  const amrex::Real x7658 = x4790 * x4359;
  const amrex::Real x7659 = 1.76786165413534e+47 * x6668;
  const amrex::Real x7660 = x7450 * x2521;
  const amrex::Real x7661 = x6172 * x2508 + x6173 * x2509;
  const amrex::Real x7662 = x6181 * x7661;
  const amrex::Real x7663 = x7662 * sc[28];
  const amrex::Real x7664 = 1.76786165413534e+47 * x6178;
  const amrex::Real x7665 = x7664 * sc[28];
  const amrex::Real x7666 = x4767 * x4083;
  const amrex::Real x7667 = x4737 * x2592;
  const amrex::Real x7668 = x7667 * sc[28];
  const amrex::Real x7669 = x6676 * x7661;
  const amrex::Real x7670 =
    -x7657 + x7658 - x7659 + x7660 + x7663 + x7665 + x7666 - x7668 - x7669;
  const amrex::Real x7671 = 1.76786165413534e+47 * x6169;
  const amrex::Real x7672 = x4737 * x2521;
  const amrex::Real x7673 = x4775 * x4137;
  const amrex::Real x7674 = x4786 * x4359;
  const amrex::Real x7675 = x4775 * x4138;
  const amrex::Real x7676 = -x7673 + x7674 + x7675 + x4782 * x4189 -
                            x4782 * x4190 - x6682 * x7671 - x6684 * x7661 +
                            x7475 * x7672 + x7662 * sc[30] + x7664 * sc[30] -
                            x7667 * sc[30];
  const amrex::Real x7677 = x4763 * x4329;
  const amrex::Real x7678 = x4760 * x4029;
  const amrex::Real x7679 = x4760 * x4030;
  const amrex::Real x7680 = x4763 * x4328;
  const amrex::Real x7681 = -1.76786165413534e+47 * x6711 + x7677 - x7678 +
                            x7679 - x7680 + x4795 * x4359 - x6708 * x7661 +
                            x7458 * x2521 + x7662 * sc[26] + x7664 * sc[26] -
                            x7667 * sc[26];
  const amrex::Real x7682 = x4742 * x3970;
  const amrex::Real x7683 = x4742 * x3971;
  const amrex::Real x7684 = x4629 * x3908;
  const amrex::Real x7685 = x4629 * x3909;
  const amrex::Real x7686 = x7682 - x7683 + x7684 - x7685 - x4749 * x4328 +
                            x4749 * x4329 + x6715 * x7672 - x6717 * x7661 -
                            x6718 * x7671 + x7662 * sc[24] + x7664 * sc[24] -
                            x7667 * sc[24];
  const amrex::Real x7687 = x4752 * x4328;
  const amrex::Real x7688 = x4772 * x4083;
  const amrex::Real x7689 = x4752 * x4329;
  const amrex::Real x7690 = x4772 * x4084;
  const amrex::Real x7691 = -x7687 + x7688 + x7689 - x7690 - x4779 * x4137 +
                            x4779 * x4138 - x6725 * x7661 - x6727 * x7671 +
                            x7480 * x7672 + x7662 * sc[27] + x7664 * sc[27] -
                            x7667 * sc[27];
  const amrex::Real x7692 = x4721 * x3970;
  const amrex::Real x7693 = x4745 * x4029;
  const amrex::Real x7694 = x4745 * x4030;
  const amrex::Real x7695 = x4721 * x3971;
  const amrex::Real x7696 = x7692 - x7693 + x7694 - x7695 + x4769 * x4083 -
                            x4769 * x4084 - x6693 * x7671 + x6695 * x7672 -
                            x6697 * x7661 + x7662 * sc[25] + x7664 * sc[25] -
                            x7667 * sc[25];
  const amrex::Real x7697 = 1.68 * x6645 + 12.0 * x6646;
  const amrex::Real x7698 = x7493 * x1440;
  const amrex::Real x7699 = 1.539e+22 * x6649 - 1.0226774611399e+36 * x7492 +
                            1.0226774611399e+36 * x7494 - 1.539e+22 * x7698 +
                            x4683 * x3869 - x6652 * x7697 + x6660 * x7697;
  const amrex::Real x7700 = x4663 * x3869;
  const amrex::Real x7701 = x6154 * x2585;
  const amrex::Real x7702 = 7.98e+48 * x6304;
  const amrex::Real x7703 = x4506 * x3719;
  const amrex::Real x7704 = x4506 * x3718;
  const amrex::Real x7705 = (x6309 * x2509 + x6310 * x2508) * x6311;
  const amrex::Real x7706 = x6315 * x7705;
  const amrex::Real x7707 = 7.98e+48 * x7558;
  const amrex::Real x7708 = 5.3067e+88 * x6289;
  const amrex::Real x7709 = x6299 * x7708;
  const amrex::Real x7710 = x6154 * x2614;
  const amrex::Real x7711 = x6307 * x7705;
  const amrex::Real x7712 = x6292 * x7708;
  const amrex::Real x7713 = x7700 - x7701 - x7702 - x7703 + x7704 - x7706 +
                            x7707 + x7709 + x7710 + x7711 - x7712;
  const amrex::Real x7714 = x4582 * x3908;
  const amrex::Real x7715 = x4582 * x3909;
  const amrex::Real x7716 = x7714 - x7715;
  const amrex::Real x7717 = x4508 * x3718 - x4508 * x3719;
  const amrex::Real x7718 = x4576 * x3908;
  const amrex::Real x7719 = x4576 * x3909;
  const amrex::Real x7720 = x7718 - x7719 - x4756 * x4029 + x4756 * x4030 -
                            x6167 * x7671 - x6177 * x7661 + x7566 * x7672 +
                            x7662 * sc[22] + x7664 * sc[22] - x7667 * sc[22];
  const amrex::Real x7721 = x4739 * x3970 - x4739 * x3971 - x6511 * x7671 -
                            x6515 * x7661 + x7568 * x7672 + x7662 * sc[19] +
                            x7664 * sc[19] - x7667 * sc[19];
  const amrex::Real x7722 = 3.3292 * x6570 + 23.78 * x6571;
  const amrex::Real x7723 = x6579 * x7722;
  const amrex::Real x7724 = 9306454530.10164 * x6554;
  const amrex::Real x7725 = x6558 * x7724;
  const amrex::Real x7726 = 752399200.0 * x6564;
  const amrex::Real x7727 = x6578 * x7726;
  const amrex::Real x7728 = x6567 * x7724;
  const amrex::Real x7729 = x6563 * x7726;
  const amrex::Real x7730 = x6575 * x7722;
  const amrex::Real x7731 = -x7723 - x7725 + x7727 + x7728 - x7729 + x7730;
  const amrex::Real x7732 = 113136000.0 * x6592;
  const amrex::Real x7733 = 113136000.0 * x6588;
  const amrex::Real x7734 = -x7732 + x7733;
  const amrex::Real x7735 = -2244000000000.0 * x6584 + 2244000000000.0 * x6585 -
                            x4569 * x3791 + x4569 * x3792 - x4571 * x3791 +
                            x4571 * x3792;
  const amrex::Real x7736 = 1.32e+19 * x4654;
  const amrex::Real x7737 = (x6524 * x7631 + x6525 * x7630) * x6527;
  const amrex::Real x7738 = x6192 * x2614;
  const amrex::Real x7739 = x4561 * x3792;
  const amrex::Real x7740 = x4557 * x3718;
  const amrex::Real x7741 = x6192 * x2585;
  const amrex::Real x7742 = x4561 * x3791;
  const amrex::Real x7743 = x4557 * x3719;
  const amrex::Real x7744 =
    -5.37777777777778e+31 * x6522 + 5.37777777777778e+31 * x6539 + x7738 +
    x7739 + x7740 - x7741 - x7742 - x7743 + x4659 * x3853 + x6528 * x7736 -
    x6529 * x7737 + x6534 * x7737 - x6540 * x7736;
  const amrex::Real x7745 = x6324 * x2509 + x6325 * x2508;
  const amrex::Real x7746 = x5061 * x2614;
  const amrex::Real x7747 = x4717 * x3869;
  const amrex::Real x7748 = x5061 * x2585;
  const amrex::Real x7749 = x4512 * x3718;
  const amrex::Real x7750 = x4512 * x3719;
  const amrex::Real x7751 = 28290000.0 * x6337 - 33556566037.7358 * x7570 +
                            33556566037.7358 * x7572 + x7746 + x7747 - x7748 +
                            x7749 - x7750 + x4600 * x3908 - x4600 * x3909 -
                            x6327 * x2605 + x6330 * x7745 - x6339 * x7745;
  const amrex::Real x7752 = x6207 * x2614;
  const amrex::Real x7753 = x4514 * x3718;
  const amrex::Real x7754 = x4514 * x3719;
  const amrex::Real x7755 = 1.4862e+22 * x6228;
  const amrex::Real x7756 = x6217 * x7755;
  const amrex::Real x7757 = x6207 * x2585;
  const amrex::Real x7758 = 2.89867511811024e+33 * x6241;
  const amrex::Real x7759 = x6244 * x7758;
  const amrex::Real x7760 = x6255 * x7755;
  const amrex::Real x7761 = x6238 * (12.0 * x6235 + x7550 * x2508);
  const amrex::Real x7762 = x6253 * x7761;
  const amrex::Real x7763 = x6247 * x7758;
  const amrex::Real x7764 = x6231 * x7761;
  const amrex::Real x7765 = x7752 + x7753 - x7754 - x7756 - x7757 - x7759 +
                            x7760 - x7762 + x7763 + x7764;
  const amrex::Real x7766 = 277200000000.0 * x6601;
  const amrex::Real x7767 = 277200000000.0 * x6597;
  const amrex::Real x7768 = x6596 * x6949;
  const amrex::Real x7769 =
    -x7766 + x7767 + x7768 + x4555 * x3718 - x4555 * x3719;
  const amrex::Real x7770 = x4620 * x3910;
  const amrex::Real x7771 = x4620 * x3911;
  const amrex::Real x7772 = x4517 * x3794;
  const amrex::Real x7773 = x4539 * x3793;
  const amrex::Real x7774 = x4542 * x3793;
  const amrex::Real x7775 = x4539 * x3794;
  const amrex::Real x7776 = x4542 * x3794;
  const amrex::Real x7777 = x4517 * x3793;
  const amrex::Real x7778 = x6112 * x2666;
  const amrex::Real x7779 = x6112 * x2652;
  const amrex::Real x7780 = x6131 * x2652;
  const amrex::Real x7781 = x6131 * x2666;
  const amrex::Real x7782 = x4723 * x4031;
  const amrex::Real x7783 = x4723 * x3972;
  const amrex::Real x7784 = x4723 * x3973;
  const amrex::Real x7785 = x4544 * x3793;
  const amrex::Real x7786 = x4544 * x3794;
  const amrex::Real x7787 = x4723 * x4032;
  const amrex::Real x7788 = x4547 * x3720;
  const amrex::Real x7789 = x4547 * x3721;
  const amrex::Real x7790 = x4687 * x3870;
  const amrex::Real x7791 = x4711 * x3870;
  const amrex::Real x7792 = x4726 * x3972;
  const amrex::Real x7793 = x4726 * x3973;
  const amrex::Real x7794 = x4636 * x3910;
  const amrex::Real x7795 = x4638 * x3911;
  const amrex::Real x7796 = x4638 * x3910;
  const amrex::Real x7797 = x4636 * x3911;
  const amrex::Real x7798 = x4522 * x3793;
  const amrex::Real x7799 = x4522 * x3794;
  const amrex::Real x7800 = -x7798 + x7799;
  const amrex::Real x7801 = x4550 * x3793;
  const amrex::Real x7802 = x4550 * x3794;
  const amrex::Real x7803 = -x7801 + x7802;
  const amrex::Real x7804 = -x4553 * x3793 + x4553 * x3794;
  const amrex::Real x7805 = x4767 * x4085;
  const amrex::Real x7806 = x4767 * x4086;
  const amrex::Real x7807 = x7095 + x7805 - x7806;
  const amrex::Real x7808 = x4742 * x3972;
  const amrex::Real x7809 = x4629 * x3910;
  const amrex::Real x7810 = x4629 * x3911;
  const amrex::Real x7811 = x4742 * x3973;
  const amrex::Real x7812 = x7808 + x7809 - x7810 - x7811;
  const amrex::Real x7813 = x4760 * x4032;
  const amrex::Real x7814 = x4760 * x4031;
  const amrex::Real x7815 = x7813 - x7814;
  const amrex::Real x7816 = x4775 * x4139;
  const amrex::Real x7817 = x4775 * x4140;
  const amrex::Real x7818 =
    x7092 - x7816 + x7817 + x4782 * x4191 - x4782 * x4192;
  const amrex::Real x7819 = x6662 + x4683 * x3870;
  const amrex::Real x7820 = x4745 * x4031;
  const amrex::Real x7821 = x4745 * x4032;
  const amrex::Real x7822 = x4721 * x3972;
  const amrex::Real x7823 = x4721 * x3973;
  const amrex::Real x7824 =
    x6698 - x7820 + x7821 + x7822 - x7823 + x4769 * x4085 - x4769 * x4086;
  const amrex::Real x7825 = x4772 * x4085;
  const amrex::Real x7826 = x4772 * x4086;
  const amrex::Real x7827 =
    x7097 + x7825 - x7826 - x4779 * x4139 + x4779 * x4140;
  const amrex::Real x7828 = x6154 * x2666;
  const amrex::Real x7829 = x6154 * x2652;
  const amrex::Real x7830 = x4506 * x3721;
  const amrex::Real x7831 = x4506 * x3720;
  const amrex::Real x7832 = x4663 * x3870;
  const amrex::Real x7833 = x7828 - x7829 - x7830 + x7831 + x7832;
  const amrex::Real x7834 = x4582 * x3910;
  const amrex::Real x7835 = x4582 * x3911;
  const amrex::Real x7836 = x7834 - x7835;
  const amrex::Real x7837 = x4508 * x3720 - x4508 * x3721;
  const amrex::Real x7838 = sc[1] * x6875;
  const amrex::Real x7839 = sc[1] * x6878;
  const amrex::Real x7840 = -x7838 - x7839;
  const amrex::Real x7841 = x4576 * x3911;
  const amrex::Real x7842 = x4576 * x3910;
  const amrex::Real x7843 = -x7841 + x7842 - x4756 * x4031 + x4756 * x4032;
  const amrex::Real x7844 = x4739 * x3972 - x4739 * x3973;
  const amrex::Real x7845 = sc[6] * x3794;
  const amrex::Real x7846 =
    -x4569 * x3793 + x4569 * x3794 + x4570 * x7845 - x4571 * x3793;
  const amrex::Real x7847 = x4561 * x3793;
  const amrex::Real x7848 = x4561 * x3794;
  const amrex::Real x7849 = x4557 * x3721;
  const amrex::Real x7850 = x6192 * x2666;
  const amrex::Real x7851 = x4557 * x3720;
  const amrex::Real x7852 = x6192 * x2652;
  const amrex::Real x7853 = -x7847 + x7848 - x7849 + x7850 + x7851 - x7852;
  const amrex::Real x7854 = x4555 * x3720 - x4555 * x3721;
  const amrex::Real x7855 = x4512 * x3721;
  const amrex::Real x7856 = x4512 * x3720;
  const amrex::Real x7857 = x5061 * x2652;
  const amrex::Real x7858 = x4717 * x3870;
  const amrex::Real x7859 = x5061 * x2666;
  const amrex::Real x7860 =
    -x7855 + x7856 - x7857 + x7858 + x7859 + x4600 * x3910 - x4600 * x3911;
  const amrex::Real x7861 = x4514 * x3721;
  const amrex::Real x7862 = x6207 * x2666;
  const amrex::Real x7863 = x6207 * x2652;
  const amrex::Real x7864 = x4514 * x3720;
  const amrex::Real x7865 = -x7861 + x7862 - x7863 + x7864;
  const amrex::Real x7866 = x6640 + x6981;
  const amrex::Real x7867 = sc[5] * x7327;
  const amrex::Real x7868 = x4620 * x3913;
  const amrex::Real x7869 = x4517 * x3796;
  const amrex::Real x7870 = x4517 * x3795;
  const amrex::Real x7871 = x4687 * x3871;
  const amrex::Real x7872 = x4542 * x3796;
  const amrex::Real x7873 = x4539 * x3795;
  const amrex::Real x7874 = x6112 * x2733;
  const amrex::Real x7875 = x6112 * x2716;
  const amrex::Real x7876 = x6131 * x2716;
  const amrex::Real x7877 = x4723 * x4034;
  const amrex::Real x7878 = x6131 * x2733;
  const amrex::Real x7879 = x4723 * x3974;
  const amrex::Real x7880 = x4544 * x3795;
  const amrex::Real x7881 = x4544 * x3796;
  const amrex::Real x7882 = x4547 * x3723;
  const amrex::Real x7883 = x4620 * x3912;
  const amrex::Real x7884 = x4542 * x3795;
  const amrex::Real x7885 = x4723 * x3975;
  const amrex::Real x7886 = x4711 * x3871;
  const amrex::Real x7887 = x4726 * x3974;
  const amrex::Real x7888 = x6392 * x6108;
  const amrex::Real x7889 = x4636 * x3913;
  const amrex::Real x7890 = x4726 * x3975;
  const amrex::Real x7891 = x4539 * x3796;
  const amrex::Real x7892 = x4636 * x3912;
  const amrex::Real x7893 = x4723 * x4033;
  const amrex::Real x7894 = x4638 * x3913;
  const amrex::Real x7895 = x4638 * x3912;
  const amrex::Real x7896 = x4547 * x3722;
  const amrex::Real x7897 = x4522 * x3795;
  const amrex::Real x7898 = x4522 * x3796;
  const amrex::Real x7899 = -x7897 + x7898;
  const amrex::Real x7900 = x4550 * x3795;
  const amrex::Real x7901 = x4550 * x3796;
  const amrex::Real x7902 = -x7900 + x7901;
  const amrex::Real x7903 = -x4553 * x3795 + x4553 * x3796;
  const amrex::Real x7904 = x4767 * x4088;
  const amrex::Real x7905 = x4767 * x4087;
  const amrex::Real x7906 = x7095 - x7904 + x7905;
  const amrex::Real x7907 = x4760 * x4034;
  const amrex::Real x7908 = x4760 * x4033;
  const amrex::Real x7909 = x7907 - x7908;
  const amrex::Real x7910 = x4775 * x4142;
  const amrex::Real x7911 = x4775 * x4141;
  const amrex::Real x7912 =
    x7092 + x7910 - x7911 + x4782 * x4193 - x4782 * x4194;
  const amrex::Real x7913 = x4742 * x3974;
  const amrex::Real x7914 = x4629 * x3912;
  const amrex::Real x7915 = x4742 * x3975;
  const amrex::Real x7916 = x4629 * x3913;
  const amrex::Real x7917 = x7913 + x7914 - x7915 - x7916;
  const amrex::Real x7918 = x4772 * x4087;
  const amrex::Real x7919 = x4772 * x4088;
  const amrex::Real x7920 =
    x7097 + x7918 - x7919 - x4779 * x4141 + x4779 * x4142;
  const amrex::Real x7921 = x4721 * x3974;
  const amrex::Real x7922 = x4721 * x3975;
  const amrex::Real x7923 = x4745 * x4033;
  const amrex::Real x7924 = x4745 * x4034;
  const amrex::Real x7925 =
    x6698 + x7921 - x7922 - x7923 + x7924 + x4769 * x4087 - x4769 * x4088;
  const amrex::Real x7926 = x6662 + x4683 * x3871;
  const amrex::Real x7927 = x6154 * x2733;
  const amrex::Real x7928 = x6154 * x2716;
  const amrex::Real x7929 = x4506 * x3722;
  const amrex::Real x7930 = x4663 * x3871;
  const amrex::Real x7931 = x4506 * x3723;
  const amrex::Real x7932 = x7927 - x7928 + x7929 + x7930 - x7931;
  const amrex::Real x7933 = x4582 * x3912;
  const amrex::Real x7934 = x4582 * x3913;
  const amrex::Real x7935 = x7933 - x7934;
  const amrex::Real x7936 = x4508 * x3722 - x4508 * x3723;
  const amrex::Real x7937 = x4576 * x3912;
  const amrex::Real x7938 = x4576 * x3913;
  const amrex::Real x7939 = x7937 - x7938 - x4756 * x4033 + x4756 * x4034;
  const amrex::Real x7940 = x4739 * x3974 - x4739 * x3975;
  const amrex::Real x7941 =
    -x4569 * x3795 + x4569 * x3796 - x4571 * x3795 + x4571 * x3796;
  const amrex::Real x7942 = x6192 * x2716;
  const amrex::Real x7943 = x4561 * x3796;
  const amrex::Real x7944 = x4557 * x3723;
  const amrex::Real x7945 = x4557 * x3722;
  const amrex::Real x7946 = x4561 * x3795;
  const amrex::Real x7947 = x6192 * x2733;
  const amrex::Real x7948 =
    -x7942 + x7943 - x7944 + x7945 - x7946 + x7947 + x4659 * x3854;
  const amrex::Real x7949 = 28000000.0 * x7059 + x4555 * x3722 - x4555 * x3723;
  const amrex::Real x7950 = x4512 * x3723;
  const amrex::Real x7951 = x4512 * x3722;
  const amrex::Real x7952 = x4717 * x3871;
  const amrex::Real x7953 = x5061 * x2733;
  const amrex::Real x7954 = x5061 * x2716;
  const amrex::Real x7955 =
    -x7950 + x7951 + x7952 + x7953 - x7954 + x4600 * x3912 - x4600 * x3913;
  const amrex::Real x7956 = 665305832.681783 * x6554;
  const amrex::Real x7957 = x6558 * x7956;
  const amrex::Real x7958 = 53788000.0 * x6564;
  const amrex::Real x7959 = x6578 * x7958;
  const amrex::Real x7960 = x6563 * x7958;
  const amrex::Real x7961 = sc[1] * x6905;
  const amrex::Real x7962 = 0.238 * x6570 + 1.7 * x6571;
  const amrex::Real x7963 = x6575 * x7962;
  const amrex::Real x7964 = sc[1] * x6908;
  const amrex::Real x7965 = x6579 * x7962;
  const amrex::Real x7966 = x6567 * x7956;
  const amrex::Real x7967 =
    -x7957 + x7959 - x7960 - x7961 + x7963 - x7964 - x7965 + x7966;
  const amrex::Real x7968 = x4514 * x3722;
  const amrex::Real x7969 = x4514 * x3723;
  const amrex::Real x7970 = x6207 * x2716;
  const amrex::Real x7971 = x6207 * x2733;
  const amrex::Real x7972 = x7968 - x7969 - x7970 + x7971;
  const amrex::Real x7973 = x6586 + x6594 + x6609 + x7089;
  const amrex::Real x7974 = x4767 * x4089;
  const amrex::Real x7975 = sc[5] * x7322;
  const amrex::Real x7976 = x4620 * x3915;
  const amrex::Real x7977 = x4517 * x3797;
  const amrex::Real x7978 = x4687 * x3872;
  const amrex::Real x7979 = x4723 * x3976;
  const amrex::Real x7980 = x4620 * x3914;
  const amrex::Real x7981 = x4542 * x3797;
  const amrex::Real x7982 = x4539 * x3798;
  const amrex::Real x7983 = x4539 * x3797;
  const amrex::Real x7984 = x6112 * x2761;
  const amrex::Real x7985 = x6131 * x2780;
  const amrex::Real x7986 = sc[3] * x7140;
  const amrex::Real x7987 = x6131 * x2761;
  const amrex::Real x7988 = x4544 * x3797;
  const amrex::Real x7989 = x4544 * x3798;
  const amrex::Real x7990 = x4542 * x3798;
  const amrex::Real x7991 = x4723 * x4035;
  const amrex::Real x7992 = x4723 * x4036;
  const amrex::Real x7993 = x4547 * x3724;
  const amrex::Real x7994 = x4547 * x3725;
  const amrex::Real x7995 = x4517 * x3798;
  const amrex::Real x7996 = x4726 * x3977;
  const amrex::Real x7997 = x4711 * x3872;
  const amrex::Real x7998 = x6334 * x4635;
  const amrex::Real x7999 = x4636 * x3914;
  const amrex::Real x8000 = x4723 * x3977;
  const amrex::Real x8001 = exp(x4602) * sc[9];
  const amrex::Real x8002 = x4638 * x3915;
  const amrex::Real x8003 = x4726 * x3976;
  const amrex::Real x8004 = x6112 * x2780;
  const amrex::Real x8005 = x4636 * x3915;
  const amrex::Real x8006 = x4638 * x3914;
  const amrex::Real x8007 = x4522 * x3797;
  const amrex::Real x8008 = x4522 * x3798;
  const amrex::Real x8009 = -x8007 + x8008;
  const amrex::Real x8010 = x4550 * x3797;
  const amrex::Real x8011 = x6383 * x4549;
  const amrex::Real x8012 = x4550 * x3798;
  const amrex::Real x8013 = -x8010 + x8011 + x8012;
  const amrex::Real x8014 = -x4553 * x3797 + x4553 * x3798;
  const amrex::Real x8015 = 2e+15 * exp(x6830 - (x1474 + x6477));
  const amrex::Real x8016 = x8015 * sc[18];
  const amrex::Real x8017 = x6510 + x8016;
  const amrex::Real x8018 = x4760 * x4035;
  const amrex::Real x8019 = x4760 * x4036;
  const amrex::Real x8020 = -x8018 + x8019;
  const amrex::Real x8021 = x4742 * x3976;
  const amrex::Real x8022 = x4742 * x3977;
  const amrex::Real x8023 = x4629 * x3915;
  const amrex::Real x8024 = x4629 * x3914;
  const amrex::Real x8025 = x8021 - x8022 - x8023 + x8024;
  const amrex::Real x8026 = x4775 * x4143;
  const amrex::Real x8027 = x8026 + x4782 * x4195;
  const amrex::Real x8028 = x4721 * x3976;
  const amrex::Real x8029 = x4745 * x4036;
  const amrex::Real x8030 = x4745 * x4035;
  const amrex::Real x8031 = x4721 * x3977;
  const amrex::Real x8032 = x8028 + x8029 - x8030 - x8031 + x4769 * x4089;
  const amrex::Real x8033 = x4772 * x4089;
  const amrex::Real x8034 = x8033 + x4779 * x4143;
  const amrex::Real x8035 = x6662 + x4683 * x3872;
  const amrex::Real x8036 = x6625 * x4662;
  const amrex::Real x8037 = x4663 * x3872;
  const amrex::Real x8038 = x6154 * x2761;
  const amrex::Real x8039 = x4506 * x3725;
  const amrex::Real x8040 = x4506 * x3724;
  const amrex::Real x8041 = x6154 * x2780;
  const amrex::Real x8042 = x8036 + x8037 - x8038 - x8039 + x8040 + x8041;
  const amrex::Real x8043 = x4582 * x3914;
  const amrex::Real x8044 = x4582 * x3915;
  const amrex::Real x8045 = x8043 - x8044;
  const amrex::Real x8046 = x4508 * x3724 - x4508 * x3725;
  const amrex::Real x8047 = x4576 * x3915;
  const amrex::Real x8048 = x4576 * x3914;
  const amrex::Real x8049 = 3.2e+16 * exp(x4573 - (x251 + x293 + x61));
  const amrex::Real x8050 = x8049 * sc[19];
  const amrex::Real x8051 =
    -x8047 + x8048 + x8050 - x4756 * x4035 + x4756 * x4036;
  const amrex::Real x8052 = 8e+15 * exp(x4573 - (x1599 + x195));
  const amrex::Real x8053 = x8052 * sc[15];
  const amrex::Real x8054 = x8053 + x4739 * x3976 - x4739 * x3977;
  const amrex::Real x8055 =
    -x4569 * x3797 + x4569 * x3798 - x4571 * x3797 + x4571 * x3798;
  const amrex::Real x8056 = x6192 * x2780;
  const amrex::Real x8057 = x6192 * x2761;
  const amrex::Real x8058 = x4561 * x3797;
  const amrex::Real x8059 = x4561 * x3798;
  const amrex::Real x8060 = 84300000.0 * sc[2];
  const amrex::Real x8061 = x4557 * x3725;
  const amrex::Real x8062 = x4557 * x3724;
  const amrex::Real x8063 =
    x8056 - x8057 - x8058 + x8059 + x8060 - x8061 + x8062 + x4659 * x3855;
  const amrex::Real x8064 = x4555 * x3724 - x4555 * x3725;
  const amrex::Real x8065 = 12000000.0 * x7059;
  const amrex::Real x8066 = x4511 * x8065;
  const amrex::Real x8067 = x4512 * x3724;
  const amrex::Real x8068 = 40000000.0 * x6392;
  const amrex::Real x8069 = x4512 * x3725;
  const amrex::Real x8070 = x4717 * x3872;
  const amrex::Real x8071 = x5061 * x2761;
  const amrex::Real x8072 = x5061 * x2780;
  const amrex::Real x8073 = x8066 + x8067 + x8068 - x8069 + x8070 - x8071 +
                            x8072 + x4600 * x3914 - x4600 * x3915;
  const amrex::Real x8074 = sc[1] * x6967;
  const amrex::Real x8075 = x4514 * x3725;
  const amrex::Real x8076 = x4514 * x3724;
  const amrex::Real x8077 = x6207 * x2780;
  const amrex::Real x8078 = x6207 * x2761;
  const amrex::Real x8079 = x6970 * x1843;
  const amrex::Real x8080 = sc[1] * x6973;
  const amrex::Real x8081 =
    -x8074 - x8075 + x8076 + x8077 - x8078 - x8079 - x8080;
  const amrex::Real x8082 = sc[1] * x6735;
  const amrex::Real x8083 = -x8082;
  const amrex::Real x8084 = x4620 * x3916;
  const amrex::Real x8085 = x4517 * x3799;
  const amrex::Real x8086 = x4723 * x4037;
  const amrex::Real x8087 = x4542 * x3799;
  const amrex::Real x8088 = x4620 * x3917;
  const amrex::Real x8089 = x4726 * x3978;
  const amrex::Real x8090 = x4539 * x3799;
  const amrex::Real x8091 = x4539 * x3800;
  const amrex::Real x8092 = x6112 * x2836;
  const amrex::Real x8093 = x6112 * x2818;
  const amrex::Real x8094 = x6131 * x2818;
  const amrex::Real x8095 = x6131 * x2836;
  const amrex::Real x8096 = x4517 * x3800;
  const amrex::Real x8097 = x4723 * x3978;
  const amrex::Real x8098 = x4544 * x3799;
  const amrex::Real x8099 = x4547 * x3727;
  const amrex::Real x8100 = x4687 * x3873;
  const amrex::Real x8101 = x4542 * x3800;
  const amrex::Real x8102 = x4726 * x3979;
  const amrex::Real x8103 = x4711 * x3873;
  const amrex::Real x8104 = x4723 * x3979;
  const amrex::Real x8105 = x4638 * x3917;
  const amrex::Real x8106 = x4636 * x3916;
  const amrex::Real x8107 = x4636 * x3917;
  const amrex::Real x8108 = x4547 * x3726;
  const amrex::Real x8109 = x4544 * x3800;
  const amrex::Real x8110 = x4638 * x3916;
  const amrex::Real x8111 = x4723 * x4038;
  const amrex::Real x8112 = x4550 * x3800;
  const amrex::Real x8113 = x4550 * x3799;
  const amrex::Real x8114 = x8112 - x8113;
  const amrex::Real x8115 = x4522 * x3799;
  const amrex::Real x8116 = x4522 * x3800;
  const amrex::Real x8117 = -x8115 + x8116;
  const amrex::Real x8118 = -x4553 * x3799 + x4553 * x3800;
  const amrex::Real x8119 = x4767 * x4090;
  const amrex::Real x8120 = x4767 * x4091;
  const amrex::Real x8121 = x7455 + x8119 - x8120;
  const amrex::Real x8122 = x4760 * x4038;
  const amrex::Real x8123 = x4760 * x4037;
  const amrex::Real x8124 = x8122 - x8123;
  const amrex::Real x8125 = x4775 * x4145;
  const amrex::Real x8126 = x4775 * x4144;
  const amrex::Real x8127 =
    x7476 + x8125 - x8126 + x4782 * x4196 - x4782 * x4197;
  const amrex::Real x8128 = x4742 * x3978;
  const amrex::Real x8129 = x4742 * x3979;
  const amrex::Real x8130 = x4629 * x3917;
  const amrex::Real x8131 = 1.6e+16 * x3916;
  const amrex::Real x8132 = x4628 * x8131;
  const amrex::Real x8133 = x8128 - x8129 - x8130 + x8132;
  const amrex::Real x8134 = x4721 * x3978;
  const amrex::Real x8135 = x4721 * x3979;
  const amrex::Real x8136 = x4745 * x4037;
  const amrex::Real x8137 = x4745 * x4038;
  const amrex::Real x8138 =
    x7489 + x8134 - x8135 - x8136 + x8137 + x4769 * x4090 - x4769 * x4091;
  const amrex::Real x8139 = x4772 * x4091;
  const amrex::Real x8140 = x4772 * x4090;
  const amrex::Real x8141 =
    x7483 - x8139 + x8140 - x4779 * x4144 + x4779 * x4145;
  const amrex::Real x8142 = x7495 + x4683 * x3873;
  const amrex::Real x8143 = x4663 * x3873;
  const amrex::Real x8144 = x6154 * x2836;
  const amrex::Real x8145 = x6154 * x2818;
  const amrex::Real x8146 = x4506 * x3727;
  const amrex::Real x8147 = x4506 * x3726;
  const amrex::Real x8148 = x8143 + x8144 - x8145 - x8146 + x8147;
  const amrex::Real x8149 = x4582 * x3917;
  const amrex::Real x8150 = x4582 * x3916;
  const amrex::Real x8151 = -x8149 + x8150;
  const amrex::Real x8152 = x4508 * x3726 - x4508 * x3727;
  const amrex::Real x8153 = x4576 * x3917;
  const amrex::Real x8154 = x4575 * x8131;
  const amrex::Real x8155 = -x8153 + x8154 - x4756 * x4037 + x4756 * x4038;
  const amrex::Real x8156 = x4739 * x3978 - x4739 * x3979;
  const amrex::Real x8157 =
    -x4569 * x3799 + x4569 * x3800 - x4571 * x3799 + x4571 * x3800;
  const amrex::Real x8158 = x6192 * x2836;
  const amrex::Real x8159 = x4561 * x3799;
  const amrex::Real x8160 = x6192 * x2818;
  const amrex::Real x8161 = x4557 * x3727;
  const amrex::Real x8162 = x4561 * x3800;
  const amrex::Real x8163 = x4557 * x3726;
  const amrex::Real x8164 = x7527 + x4659 * x3856;
  const amrex::Real x8165 =
    x8158 - x8159 - x8160 - x8161 + x8162 + x8163 + x8164;
  const amrex::Real x8166 = x4555 * x3726 - x4555 * x3727;
  const amrex::Real x8167 = x4512 * x3726;
  const amrex::Real x8168 = x5061 * x2836;
  const amrex::Real x8169 = x5061 * x2818;
  const amrex::Real x8170 = x4512 * x3727;
  const amrex::Real x8171 = x4717 * x3873;
  const amrex::Real x8172 =
    x8167 + x8168 - x8169 - x8170 + x8171 + x4600 * x3916 - x4600 * x3917;
  const amrex::Real x8173 = x4514 * x3726;
  const amrex::Real x8174 = x6207 * x2818;
  const amrex::Real x8175 = x6207 * x2836;
  const amrex::Real x8176 = x6250 * x6252;
  const amrex::Real x8177 = x4514 * x3727;
  const amrex::Real x8178 = x7555 + x8173 - x8174 + x8175 + x8176 - x8177;
  const amrex::Real x8179 = x7329 + x7334 + x7336 + x7337 + x7339 + x7341 +
                            x7342 + x7343 + x7344 + x7345 + x7348 + x7351 +
                            x7353 + x7357 + x7359 + x7361 + x7364 + x7367 +
                            x7370 + x7372 + x7374 + x7376 + x7378 + x7380 +
                            x7440 + x7460 + x7463 - x4632 * x3856;
  const amrex::Real x8180 = x4760 * x4039;
  const amrex::Real x8181 = x4620 * x3918;
  const amrex::Real x8182 = x4620 * x3919;
  const amrex::Real x8183 = x4517 * x3801;
  const amrex::Real x8184 = x4687 * x3874;
  const amrex::Real x8185 = x4542 * x3801;
  const amrex::Real x8186 = 20000000.0 * x1754;
  const amrex::Real x8187 = x4539 * x3801;
  const amrex::Real x8188 = x4539 * x3802;
  const amrex::Real x8189 = x6112 * x2883;
  const amrex::Real x8190 = x6112 * x2859;
  const amrex::Real x8191 = x4547 * x3728;
  const amrex::Real x8192 = x6131 * x2883;
  const amrex::Real x8193 = x4723 * x3981;
  const amrex::Real x8194 = x4542 * x3802;
  const amrex::Real x8195 = x4517 * x3802;
  const amrex::Real x8196 = x4723 * x3980;
  const amrex::Real x8197 = x4544 * x3801;
  const amrex::Real x8198 = x4723 * x4039;
  const amrex::Real x8199 = x4711 * x3874;
  const amrex::Real x8200 = x4547 * x3729;
  const amrex::Real x8201 = x4636 * x3918;
  const amrex::Real x8202 = x4726 * x3981;
  const amrex::Real x8203 = x4544 * x3802;
  const amrex::Real x8204 = x4636 * x3919;
  const amrex::Real x8205 = x4726 * x3980;
  const amrex::Real x8206 = x4638 * x3918;
  const amrex::Real x8207 = x4638 * x3919;
  const amrex::Real x8208 = x6131 * x2859;
  const amrex::Real x8209 = x4522 * x3801;
  const amrex::Real x8210 = x4522 * x3802;
  const amrex::Real x8211 = -x8209 + x8210;
  const amrex::Real x8212 = x4550 * x3801;
  const amrex::Real x8213 = x4550 * x3802;
  const amrex::Real x8214 = -x8212 + x8213;
  const amrex::Real x8215 = -x4553 * x3801 + x4553 * x3802;
  const amrex::Real x8216 = x4629 * x3919;
  const amrex::Real x8217 = x4742 * x3981;
  const amrex::Real x8218 = x4629 * x3918;
  const amrex::Real x8219 = x4742 * x3980;
  const amrex::Real x8220 = -x8216 - x8217 + x8218 + x8219;
  const amrex::Real x8221 = x6662 + x4683 * x3874;
  const amrex::Real x8222 = x4721 * x3980;
  const amrex::Real x8223 = x4721 * x3981;
  const amrex::Real x8224 = x4745 * x4039;
  const amrex::Real x8225 = x8222 - x8223 + x8224;
  const amrex::Real x8226 = x6154 * x2859;
  const amrex::Real x8227 = x4506 * x3728;
  const amrex::Real x8228 = x4506 * x3729;
  const amrex::Real x8229 = x4663 * x3874;
  const amrex::Real x8230 = x6154 * x2883;
  const amrex::Real x8231 = -x8226 + x8227 - x8228 + x8229 + x8230;
  const amrex::Real x8232 = x4582 * x3919;
  const amrex::Real x8233 = x4582 * x3918;
  const amrex::Real x8234 = -x8232 + x8233;
  const amrex::Real x8235 = x4508 * x3728 - x4508 * x3729;
  const amrex::Real x8236 = x4576 * x3919;
  const amrex::Real x8237 = x4576 * x3918;
  const amrex::Real x8238 = -x8236 + x8237 + x4756 * x4039;
  const amrex::Real x8239 = x6516 + x4739 * x3980 - x4739 * x3981;
  const amrex::Real x8240 =
    -x4569 * x3801 + x4569 * x3802 - x4571 * x3801 + x4571 * x3802;
  const amrex::Real x8241 = sc[8] * x3728;
  const amrex::Real x8242 = 28000000.0 * x8241 - x4555 * x3729;
  const amrex::Real x8243 = x4512 * x3729;
  const amrex::Real x8244 = x4512 * x3728;
  const amrex::Real x8245 = x5061 * x2859;
  const amrex::Real x8246 = x4717 * x3874;
  const amrex::Real x8247 = x5061 * x2883;
  const amrex::Real x8248 =
    -x8243 + x8244 - x8245 + x8246 + x8247 + x4600 * x3918 - x4600 * x3919;
  const amrex::Real x8249 = x4514 * x3728;
  const amrex::Real x8250 = x4514 * x3729;
  const amrex::Real x8251 = x6207 * x2883;
  const amrex::Real x8252 = x6207 * x2859;
  const amrex::Real x8253 = x8249 - x8250 + x8251 - x8252;
  const amrex::Real x8254 = x6192 * x2883;
  const amrex::Real x8255 = x6192 * x2859;
  const amrex::Real x8256 = x4561 * x3801;
  const amrex::Real x8257 = sc[1] * x6934;
  const amrex::Real x8258 = sc[1] * x6943;
  const amrex::Real x8259 = x4561 * x3802;
  const amrex::Real x8260 = sc[1] * x6938;
  const amrex::Real x8261 = x4557 * x3729;
  const amrex::Real x8262 = x5004 * x1778;
  const amrex::Real x8263 = x4557 * x3728;
  const amrex::Real x8264 = -x6533 + x8254 - x8255 - x8256 - x8257 - x8258 +
                            x8259 - x8260 - x8261 - x8262 + x8263 +
                            x4659 * x3857;
  const amrex::Real x8265 = x4767 * x4092;
  const amrex::Real x8266 = x4769 * x4092;
  const amrex::Real x8267 = x4782 * x4198;
  const amrex::Real x8268 = x4775 * x4146;
  const amrex::Real x8269 = x8267 + x8268;
  const amrex::Real x8270 = x4779 * x4146;
  const amrex::Real x8271 = x4772 * x4092;
  const amrex::Real x8272 = x8270 + x8271;
  const amrex::Real x8273 = x5661 + x7095 + x7097 + x7102;
  const amrex::Real x8274 = x8265 + x8266 + x8269 + x8272 + x8273;
  const amrex::Real x8275 = x6362 + x6367;
  const amrex::Real x8276 = x6317 + x7093;
  const amrex::Real x8277 = x6610 + x8276;
  const amrex::Real x8278 = x6744 * x2987;
  const amrex::Real x8279 = -x8278;
  const amrex::Real x8280 = x4620 * x3921;
  const amrex::Real x8281 = x4620 * x3920;
  const amrex::Real x8282 = x4517 * x3804;
  const amrex::Real x8283 = x4517 * x3803;
  const amrex::Real x8284 = 1.14014395393474e+47 * x6457;
  const amrex::Real x8285 = x4542 * x3804;
  const amrex::Real x8286 = 2.1e+18 * x4705;
  const amrex::Real x8287 = x6621 * x8286;
  const amrex::Real x8288 = x4711 * x3875;
  const amrex::Real x8289 = x4542 * x3803;
  const amrex::Real x8290 = x6408 * x2983;
  const amrex::Real x8291 = x6412 * x2886 + x6413 * x2887;
  const amrex::Real x8292 = x8291 * x7349;
  const amrex::Real x8293 = x4539 * x3804;
  const amrex::Real x8294 = 2.50802752293578e+18 * x6385;
  const amrex::Real x8295 = x6112 * x2989;
  const amrex::Real x8296 = 6.144e+20 * x6429;
  const amrex::Real x8297 = 6.144e+20 * x6394;
  const amrex::Real x8298 = 4.8e+15 * x6388;
  const amrex::Real x8299 = 4.8e+15 * x6433;
  const amrex::Real x8300 = x4539 * x3803;
  const amrex::Real x8301 = x4687 * x3875;
  const amrex::Real x8302 = x4723 * x3982;
  const amrex::Real x8303 = sc[5] * x7394;
  const amrex::Real x8304 = x4544 * x3803;
  const amrex::Real x8305 = x4544 * x3804;
  const amrex::Real x8306 = 2025000000000.0 * x7365;
  const amrex::Real x8307 = 2.985e+29 * x6436;
  const amrex::Real x8308 = x4547 * x3730;
  const amrex::Real x8309 = x4723 * x4040;
  const amrex::Real x8310 = x4547 * x3731;
  const amrex::Real x8311 = x6618 * (3.0 * x6616 + 0.42 * x6617);
  const amrex::Real x8312 = x6614 * x8311;
  const amrex::Real x8313 = 3.0 * x905;
  const amrex::Real x8314 = 0.42 * x905;
  const amrex::Real x8315 = x6397 * x8313 + x6399 * x8314;
  const amrex::Real x8316 = x6405 * x8315;
  const amrex::Real x8317 = x6131 * x2989;
  const amrex::Real x8318 = x4726 * x3982;
  const amrex::Real x8319 = 4.83552631578947e+29 * x7368;
  const amrex::Real x8320 = x6627 * x8286;
  const amrex::Real x8321 = x6629 * x8311;
  const amrex::Real x8322 = x4723 * x4041;
  const amrex::Real x8323 = x4726 * x3983;
  const amrex::Real x8324 = x4723 * x3983;
  const amrex::Real x8325 = x4638 * x3921;
  const amrex::Real x8326 = x6462 * x8315;
  const amrex::Real x8327 = 3.0 * x7331 + 0.42 * x7580;
  const amrex::Real x8328 = x6379 * x8327;
  const amrex::Real x8329 = x6131 * x2960;
  const amrex::Real x8330 = x4636 * x3920;
  const amrex::Real x8331 = x6112 * x2960;
  const amrex::Real x8332 = x4638 * x3920;
  const amrex::Real x8333 = x8291 * x7347;
  const amrex::Real x8334 = x6453 * x8327;
  const amrex::Real x8335 = 2.50802752293578e+18 * x6441;
  const amrex::Real x8336 = 1.14014395393474e+47 * x6448;
  const amrex::Real x8337 = 4.83552631578947e+29 * x7338;
  const amrex::Real x8338 = x6426 * x2974;
  const amrex::Real x8339 = x4636 * x3921;
  const amrex::Real x8340 = x4550 * x3803;
  const amrex::Real x8341 = x4550 * x3804;
  const amrex::Real x8342 = -x8340 + x8341;
  const amrex::Real x8343 = x4522 * x3803;
  const amrex::Real x8344 = x4522 * x3804;
  const amrex::Real x8345 = -x8343 + x8344;
  const amrex::Real x8346 = 4.515e+36 * x6481;
  const amrex::Real x8347 = 3.77504166666667e+65 * x6499;
  const amrex::Real x8348 = 3.0 * x6486 + 0.42 * x6488;
  const amrex::Real x8349 = x8348 * x7436;
  const amrex::Real x8350 = 4.515e+36 * x6508;
  const amrex::Real x8351 = 3.77504166666667e+65 * x6505;
  const amrex::Real x8352 = x8348 * x7433;
  const amrex::Real x8353 = x8346 - x8347 - x8349 - x8350 + x8351 + x8352;
  const amrex::Real x8354 = x4767 * x4094;
  const amrex::Real x8355 = 4.41965413533835e+46 * x6178;
  const amrex::Real x8356 = x8355 * sc[28];
  const amrex::Real x8357 = (x6172 * x2887 + x6173 * x2886) * x6175;
  const amrex::Real x8358 = x6675 * x8357;
  const amrex::Real x8359 = x4790 * x4360;
  const amrex::Real x8360 = x6180 * x8357;
  const amrex::Real x8361 = x8360 * sc[28];
  const amrex::Real x8362 = x4737 * x2962;
  const amrex::Real x8363 = x8362 * sc[28];
  const amrex::Real x8364 = 4.41965413533835e+46 * x6668;
  const amrex::Real x8365 = x4767 * x4095;
  const amrex::Real x8366 = x4737 * x2894;
  const amrex::Real x8367 = x6673 * x8366;
  const amrex::Real x8368 =
    x8354 + x8356 - x8358 + x8359 + x8361 - x8363 - x8364 - x8365 + x8367;
  const amrex::Real x8369 = x4763 * x4330;
  const amrex::Real x8370 = x4763 * x4331;
  const amrex::Real x8371 = x4760 * x4041;
  const amrex::Real x8372 = x4760 * x4040;
  const amrex::Real x8373 = -4.41965413533835e+46 * x6711 - x8369 + x8370 +
                            x8371 - x8372 + x4795 * x4360 - x6707 * x8357 +
                            x8355 * sc[26] + x8360 * sc[26] - x8362 * sc[26] +
                            x6704 * x4737 * x2895;
  const amrex::Real x8374 = x4786 * x4360;
  const amrex::Real x8375 = x4775 * x4148;
  const amrex::Real x8376 = x26 * x8357;
  const amrex::Real x8377 = x4775 * x4149;
  const amrex::Real x8378 = 4.41965413533835e+46 * x6169;
  const amrex::Real x8379 = x8374 - x8375 + x8377 + x4782 * x4200 -
                            x4782 * x4201 - x6682 * x8378 - x6683 * x8376 +
                            x8355 * sc[30] + x8360 * sc[30] - x8362 * sc[30] +
                            x8366 * x7475;
  const amrex::Real x8380 = x4629 * x3921;
  const amrex::Real x8381 = x4742 * x3982;
  const amrex::Real x8382 = x4742 * x3983;
  const amrex::Real x8383 = x4629 * x3920;
  const amrex::Real x8384 = -x8380 + x8381 - x8382 + x8383 - x4749 * x4330 +
                            x4749 * x4331 + x6715 * x8366 - x6716 * x8357 -
                            x6718 * x8378 + x8355 * sc[24] + x8360 * sc[24] -
                            x8362 * sc[24];
  const amrex::Real x8385 = sc[3] * x7153;
  const amrex::Real x8386 = sc[3] * x7155;
  const amrex::Real x8387 = x8385 + x8386;
  const amrex::Real x8388 = x4745 * x4041;
  const amrex::Real x8389 = x4721 * x3982;
  const amrex::Real x8390 = x4745 * x4040;
  const amrex::Real x8391 = x4721 * x3983;
  const amrex::Real x8392 = x8388 + x8389 - x8390 - x8391 + x4769 * x4094 -
                            x4769 * x4095 - x6693 * x8378 + x6695 * x8366 -
                            x6696 * x8357 + x8355 * sc[25] + x8360 * sc[25] -
                            x8362 * sc[25];
  const amrex::Real x8393 = x4752 * x4330;
  const amrex::Real x8394 = x4772 * x4095;
  const amrex::Real x8395 = x4772 * x4094;
  const amrex::Real x8396 = x4752 * x4331;
  const amrex::Real x8397 = -x8393 - x8394 + x8395 + x8396 - x4779 * x4148 +
                            x4779 * x4149 - x6724 * x8376 - x6727 * x8378 +
                            x8355 * sc[27] + x8360 * sc[27] - x8362 * sc[27] +
                            x8366 * x7480;
  const amrex::Real x8398 = 0.42 * x6645 + 3.0 * x6646;
  const amrex::Real x8399 = 3.8475e+21 * x6649 - 2.55669365284974e+35 * x7492 +
                            2.55669365284974e+35 * x7494 + x4683 * x3875 -
                            x6652 * x8398 + x6660 * x8398 - x7493 * x2980;
  const amrex::Real x8400 = x4663 * x3875;
  const amrex::Real x8401 = x6154 * x2989;
  const amrex::Real x8402 = 1.326675e+88 * x6293;
  const amrex::Real x8403 = 1.995e+48 * x6304;
  const amrex::Real x8404 = x6154 * x2960;
  const amrex::Real x8405 = 1.995e+48 * x7558;
  const amrex::Real x8406 = x4506 * x3731;
  const amrex::Real x8407 = 1.326675e+88 * x6300;
  const amrex::Real x8408 = x4506 * x3730;
  const amrex::Real x8409 = (x6309 * x2886 + x6310 * x2887) * x6311;
  const amrex::Real x8410 = x6307 * x8409;
  const amrex::Real x8411 = x6315 * x8409;
  const amrex::Real x8412 = x8400 + x8401 - x8402 - x8403 - x8404 + x8405 -
                            x8406 + x8407 + x8408 + x8410 - x8411;
  const amrex::Real x8413 = x4582 * x3920;
  const amrex::Real x8414 = x4582 * x3921;
  const amrex::Real x8415 = x8413 - x8414;
  const amrex::Real x8416 = x4508 * x3730 - x4508 * x3731;
  const amrex::Real x8417 = x4576 * x3920;
  const amrex::Real x8418 = x4576 * x3921;
  const amrex::Real x8419 = x8417 - x8418 - x4756 * x4040 + x4756 * x4041 -
                            x6165 * x8376 - x6167 * x8378 + x8355 * sc[22] +
                            x8360 * sc[22] - x8362 * sc[22] + x8366 * x7566;
  const amrex::Real x8420 = -4.41965413533835e+46 * x6512 + x4739 * x3982 -
                            x4739 * x3983 - x6513 * x8376 + x8355 * sc[19] +
                            x8360 * sc[19] - x8362 * sc[19] + x8366 * x7568;
  const amrex::Real x8421 = x6558 * x6554;
  const amrex::Real x8422 = 853156891.321345 * x8421;
  const amrex::Real x8423 = 68975200.0 * x6564;
  const amrex::Real x8424 = x6578 * x8423;
  const amrex::Real x8425 = 0.3052 * x6570 + 2.18 * x6571;
  const amrex::Real x8426 = x6579 * x8425;
  const amrex::Real x8427 = x6567 * x6554;
  const amrex::Real x8428 = 853156891.321345 * x8427;
  const amrex::Real x8429 = x6575 * x8425;
  const amrex::Real x8430 = x6563 * x8423;
  const amrex::Real x8431 = -x8422 + x8424 - x8426 + x8428 + x8429 - x8430;
  const amrex::Real x8432 = 16499000.0 * x6588;
  const amrex::Real x8433 = 16499000.0 * x6592;
  const amrex::Real x8434 = x8432 - x8433;
  const amrex::Real x8435 = (x6524 * x8314 + x6525 * x8313) * x6527;
  const amrex::Real x8436 = x4561 * x3804;
  const amrex::Real x8437 = x4561 * x3803;
  const amrex::Real x8438 = x6192 * x2989;
  const amrex::Real x8439 = x4557 * x3730;
  const amrex::Real x8440 = x4557 * x3731;
  const amrex::Real x8441 = 1.34444444444444e+31 * x6517;
  const amrex::Real x8442 = x6192 * x2960;
  const amrex::Real x8443 = 3.3e+18 * x6537 - 3.3e+18 * x6541 + x8436 - x8437 +
                            x8438 + x8439 - x8440 - x8442 + x4659 * x3858 -
                            x6521 * x8441 - x6529 * x8435 + x6534 * x8435 +
                            x6538 * x8441;
  const amrex::Real x8444 = -x4553 * x3803 + x4553 * x3804;
  const amrex::Real x8445 = -327250000000.0 * x6584 + 327250000000.0 * x6585 +
                            x8444 - x4569 * x3803 + x4569 * x3804 -
                            x4571 * x3803 + x4571 * x3804 - x6911 * x1439 -
                            x6812 * x6912 * refCinv;
  const amrex::Real x8446 = 77000000000.0 * x6601;
  const amrex::Real x8447 = 77000000000.0 * x6597;
  const amrex::Real x8448 = -x8446 + x8447 + x4555 * x3730 - x4555 * x3731;
  const amrex::Real x8449 = x6324 * x2886 + x6325 * x2887;
  const amrex::Real x8450 = x4512 * x3730;
  const amrex::Real x8451 = x5061 * x2989;
  const amrex::Real x8452 = x5061 * x2960;
  const amrex::Real x8453 = x4717 * x3875;
  const amrex::Real x8454 = x4512 * x3731;
  const amrex::Real x8455 =
    -7072500.0 * x6328 + 7072500.0 * x6337 - 8389141509.43396 * x7570 +
    8389141509.43396 * x7572 + x8450 + x8451 - x8452 + x8453 - x8454 +
    x4600 * x3920 - x4600 * x3921 + x6330 * x8449 - x6339 * x8449;
  const amrex::Real x8456 = x4514 * x3731;
  const amrex::Real x8457 = x6207 * x2960;
  const amrex::Real x8458 = x6238 * (3.0 * x6235 + x7550 * x2887);
  const amrex::Real x8459 = x6231 * x8458;
  const amrex::Real x8460 = 3.7155e+21 * x6228;
  const amrex::Real x8461 = x6217 * x8460;
  const amrex::Real x8462 = x4514 * x3730;
  const amrex::Real x8463 = 7.24668779527559e+32 * x6245;
  const amrex::Real x8464 = x6253 * x8458;
  const amrex::Real x8465 = 7.24668779527559e+32 * x6248;
  const amrex::Real x8466 = x6207 * x2989;
  const amrex::Real x8467 = x6255 * x8460;
  const amrex::Real x8468 = -x8456 - x8457 + x8459 - x8461 + x8462 - x8463 -
                            x8464 + x8465 + x8466 + x8467;
  const amrex::Real x8469 = x4620 * x3923;
  const amrex::Real x8470 = x4620 * x3922;
  const amrex::Real x8471 = x4517 * x3805;
  const amrex::Real x8472 = x4636 * x3923;
  const amrex::Real x8473 = x6607 * refCinv;
  const amrex::Real x8474 = x6800 * x8473;
  const amrex::Real x8475 = x4542 * x3806;
  const amrex::Real x8476 = x4539 * x3805;
  const amrex::Real x8477 = x4539 * x3806;
  const amrex::Real x8478 = x4542 * x3805;
  const amrex::Real x8479 = x6112 * x3035;
  const amrex::Real x8480 = x6131 * x3035;
  const amrex::Real x8481 = x6131 * x3022;
  const amrex::Real x8482 = x4726 * x3985;
  const amrex::Real x8483 = x4723 * x3985;
  const amrex::Real x8484 = x4544 * x3806;
  const amrex::Real x8485 = x4723 * x4043;
  const amrex::Real x8486 = x4547 * x3733;
  const amrex::Real x8487 = x4544 * x3805;
  const amrex::Real x8488 = x4638 * x3922;
  const amrex::Real x8489 = x4723 * x4042;
  const amrex::Real x8490 = x6112 * x3022;
  const amrex::Real x8491 = x4687 * x3876;
  const amrex::Real x8492 = x4547 * x3732;
  const amrex::Real x8493 = x4726 * x3984;
  const amrex::Real x8494 = x4636 * x3922;
  const amrex::Real x8495 = x4723 * x3984;
  const amrex::Real x8496 = x4638 * x3923;
  const amrex::Real x8497 = sc[5] * x7391;
  const amrex::Real x8498 = x6607 * x6599;
  const amrex::Real x8499 = x4517 * x3806;
  const amrex::Real x8500 = x4711 * x3876;
  const amrex::Real x8501 = x4522 * x3805;
  const amrex::Real x8502 = x4522 * x3806;
  const amrex::Real x8503 = -x8501 + x8502;
  const amrex::Real x8504 = x4550 * x3805;
  const amrex::Real x8505 = x4550 * x3806;
  const amrex::Real x8506 = -x8504 + x8505;
  const amrex::Real x8507 = x4767 * x4096;
  const amrex::Real x8508 = x4767 * x4097;
  const amrex::Real x8509 = x7455 + x8507 - x8508;
  const amrex::Real x8510 = x4760 * x4042;
  const amrex::Real x8511 = x4760 * x4043;
  const amrex::Real x8512 = -x8510 + x8511;
  const amrex::Real x8513 = x4742 * x3985;
  const amrex::Real x8514 = x4629 * x3922;
  const amrex::Real x8515 = x4742 * x3984;
  const amrex::Real x8516 = x4629 * x3923;
  const amrex::Real x8517 = -x8513 + x8514 + x8515 - x8516;
  const amrex::Real x8518 = x4775 * x4150;
  const amrex::Real x8519 = x4775 * x4151;
  const amrex::Real x8520 =
    x7476 - x8518 + x8519 + x4782 * x4202 - x4782 * x4203;
  const amrex::Real x8521 = x7495 + x4683 * x3876;
  const amrex::Real x8522 = x4745 * x4042;
  const amrex::Real x8523 = x4721 * x3984;
  const amrex::Real x8524 = x4721 * x3985;
  const amrex::Real x8525 = x4745 * x4043;
  const amrex::Real x8526 =
    x7489 - x8522 + x8523 - x8524 + x8525 + x4769 * x4096 - x4769 * x4097;
  const amrex::Real x8527 = x4772 * x4097;
  const amrex::Real x8528 = x4772 * x4096;
  const amrex::Real x8529 =
    x7483 - x8527 + x8528 - x4779 * x4150 + x4779 * x4151;
  const amrex::Real x8530 = sc[1] * x6842;
  const amrex::Real x8531 = sc[1] * x6837;
  const amrex::Real x8532 = sc[1] * x6839;
  const amrex::Real x8533 = -x8530 - x8531 - x8532;
  const amrex::Real x8534 = x4663 * x3876;
  const amrex::Real x8535 = x6154 * x3022;
  const amrex::Real x8536 = x6154 * x3035;
  const amrex::Real x8537 = x4506 * x3733;
  const amrex::Real x8538 = x4506 * x3732;
  const amrex::Real x8539 = x7565 + x8534 - x8535 + x8536 - x8537 + x8538;
  const amrex::Real x8540 = x4582 * x3922;
  const amrex::Real x8541 = x4582 * x3923;
  const amrex::Real x8542 = x8540 - x8541;
  const amrex::Real x8543 = x4508 * x3732 - x4508 * x3733;
  const amrex::Real x8544 = x4576 * x3922;
  const amrex::Real x8545 = x4576 * x3923;
  const amrex::Real x8546 =
    x7567 + x8544 - x8545 - x4756 * x4042 + x4756 * x4043;
  const amrex::Real x8547 = x7569 + x4739 * x3984 - x4739 * x3985;
  const amrex::Real x8548 = 1706313782.64269 * x8421;
  const amrex::Real x8549 = 137950400.0 * x6564;
  const amrex::Real x8550 = x6578 * x8549;
  const amrex::Real x8551 = 1706313782.64269 * x8427;
  const amrex::Real x8552 = 0.6104 * x6570 + 4.36 * x6571;
  const amrex::Real x8553 = x6579 * x8552;
  const amrex::Real x8554 = x6563 * x8549;
  const amrex::Real x8555 = x6575 * x8552;
  const amrex::Real x8556 = -x8548 + x8550 + x8551 - x8553 - x8554 + x8555;
  const amrex::Real x8557 = 33940800.0 * x6592;
  const amrex::Real x8558 = 33940800.0 * x6588;
  const amrex::Real x8559 = -x8557 + x8558;
  const amrex::Real x8560 = -x4553 * x3805 + x4553 * x3806;
  const amrex::Real x8561 = -673200000000.0 * x6584 + 673200000000.0 * x6585 +
                            x8560 - x4569 * x3805 + x4569 * x3806 -
                            x4571 * x3805 + x4571 * x3806;
  const amrex::Real x8562 = x4561 * x3805;
  const amrex::Real x8563 = x6192 * x3035;
  const amrex::Real x8564 = x4557 * x3732;
  const amrex::Real x8565 = x6192 * x3022;
  const amrex::Real x8566 = x4561 * x3806;
  const amrex::Real x8567 = x4557 * x3733;
  const amrex::Real x8568 =
    x8164 - x8562 + x8563 + x8564 - x8565 + x8566 - x8567;
  const amrex::Real x8569 = 158400000000.0 * x6597;
  const amrex::Real x8570 = 158400000000.0 * x6601;
  const amrex::Real x8571 = x8569 - x8570 + x4555 * x3732 - x4555 * x3733;
  const amrex::Real x8572 = x4512 * x3733;
  const amrex::Real x8573 = x5061 * x3022;
  const amrex::Real x8574 = x4717 * x3876;
  const amrex::Real x8575 = x4512 * x3732;
  const amrex::Real x8576 = x5061 * x3035;
  const amrex::Real x8577 = x7573 - x8572 - x8573 + x8574 + x8575 + x8576 +
                            x4600 * x3922 - x4600 * x3923;
  const amrex::Real x8578 = x4514 * x3733;
  const amrex::Real x8579 = x6207 * x3022;
  const amrex::Real x8580 = x6207 * x3035;
  const amrex::Real x8581 = x4514 * x3732;
  const amrex::Real x8582 = x7555 - x8578 - x8579 + x8580 + x8581;
  const amrex::Real x8583 = x4517 * x3808;
  const amrex::Real x8584 = sc[5] * x7384;
  const amrex::Real x8585 = x4711 * x3878;
  const amrex::Real x8586 = x4542 * x3808;
  const amrex::Real x8587 = x4542 * x3807;
  const amrex::Real x8588 = x6112 * x3068;
  const amrex::Real x8589 = x6131 * x3068;
  const amrex::Real x8590 = x6131 * x3049;
  const amrex::Real x8591 = x4687 * x3878;
  const amrex::Real x8592 = x6112 * x3049;
  const amrex::Real x8593 = x4544 * x3808;
  const amrex::Real x8594 = x4547 * x3734;
  const amrex::Real x8595 = x4517 * x3807;
  const amrex::Real x8596 = x4544 * x3807;
  const amrex::Real x8597 = x4539 * x3807;
  const amrex::Real x8598 = x4539 * x3808;
  const amrex::Real x8599 = x4547 * x3735;
  const amrex::Real x8600 = x4522 * x3807;
  const amrex::Real x8601 = x4522 * x3808;
  const amrex::Real x8602 = -x8600 + x8601;
  const amrex::Real x8603 = x4550 * x3807;
  const amrex::Real x8604 = x4550 * x3808;
  const amrex::Real x8605 = -x8603 + x8604;
  const amrex::Real x8606 = -x4553 * x3807 + x4553 * x3808;
  const amrex::Real x8607 = x6154 * x3068;
  const amrex::Real x8608 = x4663 * x3878;
  const amrex::Real x8609 = x4506 * x3735;
  const amrex::Real x8610 = x6154 * x3049;
  const amrex::Real x8611 = x4506 * x3734;
  const amrex::Real x8612 = x8607 + x8608 - x8609 - x8610 + x8611;
  const amrex::Real x8613 = 0.84 * x6645 + 6.0 * x6646;
  const amrex::Real x8614 = 7.695e+21 * x6649 - 5.11338730569948e+35 * x7492 +
                            5.11338730569948e+35 * x7494 - 7.695e+21 * x7698 -
                            x6652 * x8613 + x6660 * x8613;
  const amrex::Real x8615 = x8614 + x4683 * x3878 - x6658 * x3059;
  const amrex::Real x8616 = x4508 * x3734 - x4508 * x3735;
  const amrex::Real x8617 =
    -x4569 * x3807 + x4569 * x3808 - x4571 * x3807 + x4571 * x3808;
  const amrex::Real x8618 = x6192 * x3068;
  const amrex::Real x8619 = x4561 * x3807;
  const amrex::Real x8620 = x4561 * x3808;
  const amrex::Real x8621 = x4557 * x3734;
  const amrex::Real x8622 = x6192 * x3049;
  const amrex::Real x8623 = x4557 * x3735;
  const amrex::Real x8624 = x8618 - x8619 + x8620 + x8621 - x8622 - x8623;
  const amrex::Real x8625 = x4555 * x3734 - x4555 * x3735;
  const amrex::Real x8626 = x4512 * x3735;
  const amrex::Real x8627 = x5061 * x3068;
  const amrex::Real x8628 = x5061 * x3049;
  const amrex::Real x8629 = x4512 * x3734;
  const amrex::Real x8630 = x4717 * x3878;
  const amrex::Real x8631 = -x8626 + x8627 - x8628 + x8629 + x8630;
  const amrex::Real x8632 = x4514 * x3734;
  const amrex::Real x8633 = x6207 * x3068;
  const amrex::Real x8634 = x4514 * x3735;
  const amrex::Real x8635 = x6207 * x3049;
  const amrex::Real x8636 = x6257 + x8632 + x8633 - x8634 - x8635;
  const amrex::Real x8637 = x4629 * x3924;
  const amrex::Real x8638 = -x4605 * x3924;
  const amrex::Real x8639 = x4620 * x3924;
  const amrex::Real x8640 = -x8639;
  const amrex::Real x8641 = x4636 * x3924;
  const amrex::Real x8642 = x4638 * x3924;
  const amrex::Real x8643 = -x8642;
  const amrex::Real x8644 = x4582 * x3924;
  const amrex::Real x8645 = x6159 + x8644;
  const amrex::Real x8646 = x4576 * x3924;
  const amrex::Real x8647 = x6186 + x4756 * x4044;
  const amrex::Real x8648 = x8646 + x8647;
  const amrex::Real x8649 = x6341 + x4600 * x3924;
  const amrex::Real x8650 = x4760 * x4044;
  const amrex::Real x8651 = x4723 * x4044;
  const amrex::Real x8652 = x4723 * x3986;
  const amrex::Real x8653 = x4726 * x3986;
  const amrex::Real x8654 = x4742 * x3986;
  const amrex::Real x8655 = x6351 + x8654;
  const amrex::Real x8656 = x4745 * x4044;
  const amrex::Real x8657 = x4721 * x3986;
  const amrex::Real x8658 = x8656 + x8657;
  const amrex::Real x8659 = x6188 + x4739 * x3986;
  const amrex::Real x8660 = x6352 + x6353 + x6355 + x6356 + x6368 + x8274 +
                            x8650 - x8651 - x8652 - x8653 + x8655 + x8658 +
                            x8659 - x4726 * x4044;
  const amrex::Real x8661 =
    x8637 + x8638 + x8640 + x8641 + x8643 + x8645 + x8648 + x8649 + x8660;
  const amrex::Real x8662 = (6.0 * x6616 + 0.84 * x6617) * x6618;
  const amrex::Real x8663 = x6629 * x8662;
  const amrex::Real x8664 = 4.2e+18 * x7362;
  const amrex::Real x8665 = 4.2e+18 * x6622;
  const amrex::Real x8666 = 9.67105263157895e+29 * x7338;
  const amrex::Real x8667 = 9.67105263157895e+29 * x7368;
  const amrex::Real x8668 = x6614 * x8662;
  const amrex::Real x8669 = x8663 - x8664 + x8665 + x8666 - x8667 - x8668;
  const amrex::Real x8670 = x6611 + x8669;
  const amrex::Real x8671 = x4620 * x3926;
  const amrex::Real x8672 = x4620 * x3927;
  const amrex::Real x8673 = x4517 * x3810;
  const amrex::Real x8674 = x4687 * x3879;
  const amrex::Real x8675 = x4636 * x3927;
  const amrex::Real x8676 = x4539 * x3809;
  const amrex::Real x8677 = x4542 * x3810;
  const amrex::Real x8678 = x4542 * x3809;
  const amrex::Real x8679 = x6112 * x3138;
  const amrex::Real x8680 = x4723 * x3989;
  const amrex::Real x8681 = x6131 * x3121;
  const amrex::Real x8682 = x6131 * x3138;
  const amrex::Real x8683 = x4711 * x3879;
  const amrex::Real x8684 = x4544 * x3809;
  const amrex::Real x8685 = x4544 * x3810;
  const amrex::Real x8686 = x4547 * x3737;
  const amrex::Real x8687 = x4638 * x3927;
  const amrex::Real x8688 = x4723 * x4047;
  const amrex::Real x8689 = x4547 * x3736;
  const amrex::Real x8690 = x4723 * x3988;
  const amrex::Real x8691 = x4517 * x3809;
  const amrex::Real x8692 = x6112 * x3121;
  const amrex::Real x8693 = x4723 * x4046;
  const amrex::Real x8694 = x4726 * x3988;
  const amrex::Real x8695 = x4539 * x3810;
  const amrex::Real x8696 = x4636 * x3926;
  const amrex::Real x8697 = x4726 * x3989;
  const amrex::Real x8698 = sc[5] * x7420;
  const amrex::Real x8699 = x4638 * x3926;
  const amrex::Real x8700 = x4550 * x3809;
  const amrex::Real x8701 = x4550 * x3810;
  const amrex::Real x8702 = -x8700 + x8701;
  const amrex::Real x8703 = x6383 * x4521;
  const amrex::Real x8704 = x4522 * x3809;
  const amrex::Real x8705 = x4522 * x3810;
  const amrex::Real x8706 = x8703 - x8704 + x8705;
  const amrex::Real x8707 = -x4553 * x3809 + x4553 * x3810;
  const amrex::Real x8708 = x4790 * x4361;
  const amrex::Real x8709 = x6704 * x4789;
  const amrex::Real x8710 = x4767 * x4098;
  const amrex::Real x8711 = x4767 * x4099;
  const amrex::Real x8712 = x6680 + x8708 + x8709 + x8710 - x8711;
  const amrex::Real x8713 = x4760 * x4046;
  const amrex::Real x8714 = x6714 * x4762;
  const amrex::Real x8715 = x4760 * x4047;
  const amrex::Real x8716 = x4763 * x4332;
  const amrex::Real x8717 = x4763 * x4333;
  const amrex::Real x8718 =
    x6712 - x8713 + x8714 + x8715 - x8716 + x8717 + x4795 * x4361;
  const amrex::Real x8719 = x4786 * x4361;
  const amrex::Real x8720 = x4775 * x4152;
  const amrex::Real x8721 = x6723 * x4774;
  const amrex::Real x8722 = x4775 * x4153;
  const amrex::Real x8723 =
    x6686 + x8719 - x8720 + x8721 + x8722 + x4782 * x4204 - x4782 * x4205;
  const amrex::Real x8724 = x4742 * x3989;
  const amrex::Real x8725 = x6004 * x4741;
  const amrex::Real x8726 = x4742 * x3988;
  const amrex::Real x8727 = x4629 * x3927;
  const amrex::Real x8728 = x4629 * x3926;
  const amrex::Real x8729 = x6720 - x8724 + x8725 + x8726 - x8727 + x8728 -
                            x4749 * x4332 + x4749 * x4333;
  const amrex::Real x8730 = x4721 * x3989;
  const amrex::Real x8731 = x4721 * x3988;
  const amrex::Real x8732 = x4745 * x4047;
  const amrex::Real x8733 = x4745 * x4046;
  const amrex::Real x8734 = x6164 * x4744;
  const amrex::Real x8735 = x6698 - x8730 + x8731 + x8732 - x8733 + x8734 +
                            x4769 * x4098 - x4769 * x4099;
  const amrex::Real x8736 = x4772 * x4098;
  const amrex::Real x8737 = x6692 * x4771;
  const amrex::Real x8738 = x4752 * x4333;
  const amrex::Real x8739 = x4752 * x4332;
  const amrex::Real x8740 = x4772 * x4099;
  const amrex::Real x8741 = x6728 + x8736 + x8737 + x8738 - x8739 - x8740 -
                            x4779 * x4152 + x4779 * x4153;
  const amrex::Real x8742 = x8614 + x4683 * x3879;
  const amrex::Real x8743 = x4663 * x3879;
  const amrex::Real x8744 = x6154 * x3121;
  const amrex::Real x8745 = x4506 * x3737;
  const amrex::Real x8746 = x4982 * x7114;
  const amrex::Real x8747 = 50000000.0 * x7059;
  const amrex::Real x8748 = x4506 * x3736;
  const amrex::Real x8749 = x6154 * x3138;
  const amrex::Real x8750 =
    x8743 - x8744 - x8745 + x8746 + x8747 + x8748 + x8749;
  const amrex::Real x8751 = x4582 * x3927;
  const amrex::Real x8752 = x4582 * x3926;
  const amrex::Real x8753 = -x8751 + x8752;
  const amrex::Real x8754 = x4508 * x3736 - x4508 * x3737;
  const amrex::Real x8755 = x4576 * x3927;
  const amrex::Real x8756 = 1.6e+16 * x6334;
  const amrex::Real x8757 = x4574 * x8756;
  const amrex::Real x8758 = x4576 * x3926;
  const amrex::Real x8759 =
    -x8755 + x8757 + x8758 - x4756 * x4046 + x4756 * x4047;
  const amrex::Real x8760 = sc[9] * x8052;
  const amrex::Real x8761 = x8760 + x4739 * x3988 - x4739 * x3989;
  const amrex::Real x8762 =
    -x4569 * x3809 + x4569 * x3810 - x4571 * x3809 + x4571 * x3810;
  const amrex::Real x8763 = x4561 * x3809;
  const amrex::Real x8764 = x4561 * x3810;
  const amrex::Real x8765 = x6192 * x3121;
  const amrex::Real x8766 = x6192 * x3138;
  const amrex::Real x8767 = x4557 * x3736;
  const amrex::Real x8768 = x4557 * x3737;
  const amrex::Real x8769 = -x8763 + x8764 - x8765 + x8766 + x8767 - x8768;
  const amrex::Real x8770 = x4555 * x3736 - x4555 * x3737;
  const amrex::Real x8771 = x4514 * x3736;
  const amrex::Real x8772 = x4514 * x3737;
  const amrex::Real x8773 = x6207 * x3138;
  const amrex::Real x8774 = x6207 * x3121;
  const amrex::Real x8775 = x6257 + x8771 - x8772 + x8773 - x8774;
  const amrex::Real x8776 = x4512 * x3736;
  const amrex::Real x8777 = sc[1] * x6957;
  const amrex::Real x8778 = x5061 * x3138;
  const amrex::Real x8779 = x5061 * x3121;
  const amrex::Real x8780 = x4512 * x3737;
  const amrex::Real x8781 = sc[1] * x6955;
  const amrex::Real x8782 = sc[1] * x6959;
  const amrex::Real x8783 = x4717 * x3879;
  const amrex::Real x8784 = x6340 + x8776 - x8777 + x8778 - x8779 - x8780 -
                            x8781 - x8782 + x8783 - sc[1] * x6952 +
                            x4600 * x3926 - x4600 * x3927;
  const amrex::Real x8785 = (6.0 * x7331 + 0.84 * x7580) * x6375;
  const amrex::Real x8786 = x6452 * x8785;
  const amrex::Real x8787 = 2.28028790786948e+47 * x6457;
  const amrex::Real x8788 = x6378 * x8785;
  const amrex::Real x8789 = x4620 * x3929;
  const amrex::Real x8790 = x4517 * x3812;
  const amrex::Real x8791 = x4517 * x3811;
  const amrex::Real x8792 = 1.2288e+21 * x6394;
  const amrex::Real x8793 = 9.6e+15 * x6388;
  const amrex::Real x8794 = x6412 * x3140 + x6413 * x3139;
  const amrex::Real x8795 = x8794 * x7347;
  const amrex::Real x8796 = 4050000000000.0 * x6409;
  const amrex::Real x8797 = 5.01605504587156e+18 * x6385;
  const amrex::Real x8798 = 4050000000000.0 * x7365;
  const amrex::Real x8799 = x6112 * x3232;
  const amrex::Real x8800 = x8794 * x7349;
  const amrex::Real x8801 = x4539 * x3811;
  const amrex::Real x8802 = x4542 * x3811;
  const amrex::Real x8803 = x4544 * x3811;
  const amrex::Real x8804 = x4723 * x4049;
  const amrex::Real x8805 = 1.2288e+21 * x6429;
  const amrex::Real x8806 = 6.0 * x905;
  const amrex::Real x8807 = 0.84 * x905;
  const amrex::Real x8808 = x6397 * x8806 + x6399 * x8807;
  const amrex::Real x8809 = x6405 * x8808;
  const amrex::Real x8810 = x6462 * x8808;
  const amrex::Real x8811 = x4636 * x3929;
  const amrex::Real x8812 = x4544 * x3812;
  const amrex::Real x8813 = x6131 * x3232;
  const amrex::Real x8814 = x4726 * x3990;
  const amrex::Real x8815 = 5.01605504587156e+18 * x6441;
  const amrex::Real x8816 = 2.28028790786948e+47 * x6448;
  const amrex::Real x8817 = x4723 * x3990;
  const amrex::Real x8818 = x6131 * x3208;
  const amrex::Real x8819 = x4547 * x3738;
  const amrex::Real x8820 = 5.97e+29 * x6436;
  const amrex::Real x8821 = x4539 * x3812;
  const amrex::Real x8822 = x4687 * x3880;
  const amrex::Real x8823 = x4711 * x3880;
  const amrex::Real x8824 = x4542 * x3812;
  const amrex::Real x8825 = x4547 * x3739;
  const amrex::Real x8826 = x4723 * x3991;
  const amrex::Real x8827 = x6112 * x3208;
  const amrex::Real x8828 = 9.6e+15 * x6433;
  const amrex::Real x8829 = x4636 * x3928;
  const amrex::Real x8830 = x4638 * x3929;
  const amrex::Real x8831 = x4726 * x3991;
  const amrex::Real x8832 = x6426 * x3222;
  const amrex::Real x8833 = x4638 * x3928;
  const amrex::Real x8834 = x4723 * x4048;
  const amrex::Real x8835 = x4620 * x3928;
  const amrex::Real x8836 = x4522 * x3811;
  const amrex::Real x8837 = x4522 * x3812;
  const amrex::Real x8838 = -x8836 + x8837;
  const amrex::Real x8839 = x4550 * x3811;
  const amrex::Real x8840 = x4550 * x3812;
  const amrex::Real x8841 = -x8839 + x8840;
  const amrex::Real x8842 = 9.03e+36 * x6476;
  const amrex::Real x8843 = x6480 * x8842;
  const amrex::Real x8844 = 7.55008333333333e+65 * x6496;
  const amrex::Real x8845 = x6498 * x8844;
  const amrex::Real x8846 = 0.84 * x6488 + x6485 * x6483 * x3140;
  const amrex::Real x8847 = x8846 * x7436;
  const amrex::Real x8848 = x6507 * x8842;
  const amrex::Real x8849 = x8846 * x7433;
  const amrex::Real x8850 = x6504 * x8844;
  const amrex::Real x8851 = x8843 - x8845 - x8847 - x8848 + x8849 + x8850;
  const amrex::Real x8852 = -x4553 * x3811 + x4553 * x3812;
  const amrex::Real x8853 = x4767 * x4100;
  const amrex::Real x8854 = 8.83930827067669e+46 * x6169;
  const amrex::Real x8855 = x6667 * x8854;
  const amrex::Real x8856 = x4767 * x4101;
  const amrex::Real x8857 = x7450 * x3154;
  const amrex::Real x8858 = x6172 * x3139 + x6173 * x3140;
  const amrex::Real x8859 = x6676 * x8858;
  const amrex::Real x8860 = x4790 * x4362;
  const amrex::Real x8861 = x4737 * x3210;
  const amrex::Real x8862 = x8861 * sc[28];
  const amrex::Real x8863 = 8.83930827067669e+46 * x6178;
  const amrex::Real x8864 = x8863 * sc[28];
  const amrex::Real x8865 = x6181 * x8858;
  const amrex::Real x8866 = x8865 * sc[28];
  const amrex::Real x8867 =
    x8853 - x8855 - x8856 + x8857 - x8859 + x8860 - x8862 + x8864 + x8866;
  const amrex::Real x8868 = x4763 * x4335;
  const amrex::Real x8869 = x4763 * x4334;
  const amrex::Real x8870 = x4760 * x4048;
  const amrex::Real x8871 = x4760 * x4049;
  const amrex::Real x8872 = x8868 - x8869 - x8870 + x8871 + x4795 * x4362 -
                            x6708 * x8858 - x6710 * x8854 + x7458 * x3154 -
                            x8861 * sc[26] + x8863 * sc[26] + x8865 * sc[26];
  const amrex::Real x8873 = x4786 * x4362;
  const amrex::Real x8874 = x4737 * x3154;
  const amrex::Real x8875 = x4775 * x4155;
  const amrex::Real x8876 = x4775 * x4154;
  const amrex::Real x8877 = x6176 * x8858;
  const amrex::Real x8878 = x8873 + x8875 - x8876 + x4782 * x4206 -
                            x4782 * x4207 - x6682 * x8854 - x6683 * x8877 -
                            x8861 * sc[30] + x8863 * sc[30] + x8865 * sc[30] +
                            x8874 * x7475;
  const amrex::Real x8879 = x4742 * x3990;
  const amrex::Real x8880 = x4629 * x3929;
  const amrex::Real x8881 = x4629 * x3928;
  const amrex::Real x8882 = x4742 * x3991;
  const amrex::Real x8883 = x6175 * x8858;
  const amrex::Real x8884 = x8879 - x8880 + x8881 - x8882 - x4737 * x3213 -
                            x4749 * x4334 + x4749 * x4335 - x6716 * x8883 -
                            x6718 * x8854 + x8863 * sc[24] + x8865 * sc[24] +
                            x6714 * x4737 * x3157;
  const amrex::Real x8885 = x8614 + x4683 * x3880;
  const amrex::Real x8886 = x4752 * x4334;
  const amrex::Real x8887 = x4772 * x4100;
  const amrex::Real x8888 = x4752 * x4335;
  const amrex::Real x8889 = x4772 * x4101;
  const amrex::Real x8890 = -x8886 + x8887 + x8888 - x8889 - x4779 * x4154 +
                            x4779 * x4155 - x6724 * x8877 - x6727 * x8854 -
                            x8861 * sc[27] + x8863 * sc[27] + x8865 * sc[27] +
                            x8874 * x7480;
  const amrex::Real x8891 = x4721 * x3990;
  const amrex::Real x8892 = x4721 * x3991;
  const amrex::Real x8893 = x4745 * x4048;
  const amrex::Real x8894 = x4745 * x4049;
  const amrex::Real x8895 = x8891 - x8892 - x8893 + x8894 + x4769 * x4100 -
                            x4769 * x4101 - x6693 * x8854 + x6695 * x8874 -
                            x6696 * x8883 - x8861 * sc[25] + x8863 * sc[25] +
                            x8865 * sc[25];
  const amrex::Real x8896 = x6154 * x3232;
  const amrex::Real x8897 = x6154 * x3208;
  const amrex::Real x8898 = 3.99e+48 * x6304;
  const amrex::Real x8899 = 2.65335e+88 * x6293;
  const amrex::Real x8900 = 3.99e+48 * x7558;
  const amrex::Real x8901 = 2.65335e+88 * x6300;
  const amrex::Real x8902 = (x6309 * x3140 + x6310 * x3139) * x6311;
  const amrex::Real x8903 = x6315 * x8902;
  const amrex::Real x8904 = x4506 * x3738;
  const amrex::Real x8905 = x6307 * x8902;
  const amrex::Real x8906 = x4663 * x3880;
  const amrex::Real x8907 = x4506 * x3739;
  const amrex::Real x8908 = x8896 - x8897 - x8898 - x8899 + x8900 + x8901 -
                            x8903 + x8904 + x8905 + x8906 - x8907;
  const amrex::Real x8909 = x4508 * x3738 - x4508 * x3739;
  const amrex::Real x8910 = x4576 * x3929;
  const amrex::Real x8911 = x4576 * x3928;
  const amrex::Real x8912 = -x8910 + x8911 - x4737 * x3216 - x4756 * x4048 +
                            x4756 * x4049 - x6165 * x8877 - x6167 * x8854 +
                            x8863 * sc[22] + x8865 * sc[22] + x8874 * x7566;
  const amrex::Real x8913 = x4582 * x3928;
  const amrex::Real x8914 = sc[1] * x6896;
  const amrex::Real x8915 = x4582 * x3929;
  const amrex::Real x8916 = x8913 - x8914 - x8915;
  const amrex::Real x8917 = x4739 * x3990 - x4739 * x3991 - x6511 * x8854 -
                            x6515 * x8858 - x8861 * sc[19] + x8863 * sc[19] +
                            x8865 * sc[19] + x8874 * x7568;
  const amrex::Real x8918 =
    -x4569 * x3811 + x4569 * x3812 - x4571 * x3811 + x4571 * x3812;
  const amrex::Real x8919 = (x6524 * x8807 + x6525 * x8806) * x6527;
  const amrex::Real x8920 = x6192 * x3232;
  const amrex::Real x8921 = x4557 * x3738;
  const amrex::Real x8922 = x6192 * x3208;
  const amrex::Real x8923 = x4557 * x3739;
  const amrex::Real x8924 = x4561 * x3811;
  const amrex::Real x8925 = x4561 * x3812;
  const amrex::Real x8926 =
    -2.68888888888889e+31 * x6522 + 2.68888888888889e+31 * x6539 -
    6.6e+18 * x6541 + x8920 + x8921 - x8922 - x8923 - x8924 + x8925 +
    x4659 * x3859 - x6529 * x8919 + x6534 * x8919 + x6536 * x4657 * x3203;
  const amrex::Real x8927 = x4555 * x3738 - x4555 * x3739;
  const amrex::Real x8928 = x4512 * x3738;
  const amrex::Real x8929 = x6324 * x3140 + x6325 * x3139;
  const amrex::Real x8930 = x4512 * x3739;
  const amrex::Real x8931 = x5061 * x3232;
  const amrex::Real x8932 = x5061 * x3208;
  const amrex::Real x8933 = x4717 * x3880;
  const amrex::Real x8934 = -14145000.0 * x6328 - 16778283018.8679 * x7570 +
                            16778283018.8679 * x7572 + x8928 - x8930 + x8931 -
                            x8932 + x8933 + x4600 * x3928 - x4600 * x3929 +
                            x6330 * x8929 + x6336 * x3146 - x6339 * x8929;
  const amrex::Real x8935 = x4514 * x3738;
  const amrex::Real x8936 = x6238 * (0.84 * x6237 + x6234 * x6232 * x3140);
  const amrex::Real x8937 = x6253 * x8936;
  const amrex::Real x8938 = x6207 * x3208;
  const amrex::Real x8939 = x6231 * x8936;
  const amrex::Real x8940 = 1.44933755905512e+33 * x6241;
  const amrex::Real x8941 = x6244 * x8940;
  const amrex::Real x8942 = 7.431e+21 * x6228;
  const amrex::Real x8943 = x6255 * x8942;
  const amrex::Real x8944 = x6247 * x8940;
  const amrex::Real x8945 = x4514 * x3739;
  const amrex::Real x8946 = x6217 * x8942;
  const amrex::Real x8947 = x6207 * x3232;
  const amrex::Real x8948 = x8935 - x8937 - x8938 + x8939 - x8941 + x8943 +
                            x8944 - x8945 - x8946 + x8947;
  const amrex::Real x8949 = x4553 * x3813;
  const amrex::Real x8950 = x4508 * x3740;
  const amrex::Real x8951 = x4687 * x3881;
  const amrex::Real x8952 = x4539 * x3813;
  const amrex::Real x8953 = x4542 * x3813;
  const amrex::Real x8954 = x6112 * x3239;
  const amrex::Real x8955 = x4517 * x3813;
  const amrex::Real x8956 = x4544 * x3813;
  const amrex::Real x8957 = x6131 * x3239;
  const amrex::Real x8958 = x4547 * x3740;
  const amrex::Real x8959 = x4711 * x3881;
  const amrex::Real x8960 = x4522 * x3813;
  const amrex::Real x8961 = x6263 + x8960;
  const amrex::Real x8962 = x4550 * x3813;
  const amrex::Real x8963 = -x4687 + x6261 + x8962;
  const amrex::Real x8964 = x6662 + x4683 * x3881;
  const amrex::Real x8965 = x4663 * x3881;
  const amrex::Real x8966 = x6154 * x3239;
  const amrex::Real x8967 = x4506 * x3740;
  const amrex::Real x8968 = x8965 + x8966 + x8967;
  const amrex::Real x8969 = x4569 * x3813 + x4571 * x3813;
  const amrex::Real x8970 = x6192 * x3239;
  const amrex::Real x8971 = x4561 * x3813;
  const amrex::Real x8972 = x4557 * x3740;
  const amrex::Real x8973 = x6200 + x8970 + x8971 + x8972;
  const amrex::Real x8974 = x6264 + x4555 * x3740;
  const amrex::Real x8975 = x4512 * x3740;
  const amrex::Real x8976 = x5061 * x3239;
  const amrex::Real x8977 = x4717 * x3881;
  const amrex::Real x8978 = x6344 + x8649;
  const amrex::Real x8979 = x8975 + x8976 + x8977 + x8978;
  const amrex::Real x8980 = x4514 * x3740;
  const amrex::Real x8981 = x6207 * x3239;
  const amrex::Real x8982 = x6258 + x8980 + x8981;
  const amrex::Real x8983 = x6317 + x6321;
  const amrex::Real x8984 = x6268 + x6269 + x6271 + x6273 + x6347;
  const amrex::Real x8985 = x6190 + x6265 + x6266 + x6272 + x6274 + x6275 +
                            x6640 + x7093 + x8637 + x8638 + x8640 + x8641 +
                            x8643 + x8645 + x8648 + x8660 + x8983 + x8984;
  const amrex::Real x8986 = x4629 * x3930;
  const amrex::Real x8987 = x4576 * x3930;
  const amrex::Real x8988 = sc[5] * x7512;
  const amrex::Real x8989 = x4620 * x3930;
  const amrex::Real x8990 = x4517 * x3815;
  const amrex::Real x8991 = x4542 * x3814;
  const amrex::Real x8992 = x4539 * x3815;
  const amrex::Real x8993 = x4539 * x3814;
  const amrex::Real x8994 = x6112 * x3247;
  const amrex::Real x8995 = x6131 * x3253;
  const amrex::Real x8996 = x6112 * x3253;
  const amrex::Real x8997 = x4544 * x3815;
  const amrex::Real x8998 = x4687 * x3882;
  const amrex::Real x8999 = x4547 * x3742;
  const amrex::Real x9000 = x4544 * x3814;
  const amrex::Real x9001 = x4517 * x3814;
  const amrex::Real x9002 = x4711 * x3882;
  const amrex::Real x9003 = x4636 * x3930;
  const amrex::Real x9004 = x4547 * x3741;
  const amrex::Real x9005 = x4542 * x3815;
  const amrex::Real x9006 = x4638 * x3930;
  const amrex::Real x9007 = x6131 * x3247;
  const amrex::Real x9008 = x4550 * x3814;
  const amrex::Real x9009 = x4550 * x3815;
  const amrex::Real x9010 = -x9008 + x9009;
  const amrex::Real x9011 = x4522 * x3814;
  const amrex::Real x9012 = x4522 * x3815;
  const amrex::Real x9013 = x4802 - x9011 + x9012;
  const amrex::Real x9014 = -x4553 * x3814 + x4553 * x3815;
  const amrex::Real x9015 = sc[9] * x8015;
  const amrex::Real x9016 = x6510 + x9015;
  const amrex::Real x9017 = x6662 + x4683 * x3882;
  const amrex::Real x9018 = x4582 * x3930;
  const amrex::Real x9019 = x6159 + x9018;
  const amrex::Real x9020 = x4508 * x3741 - x4508 * x3742;
  const amrex::Real x9021 = x4663 * x3882;
  const amrex::Real x9022 = sc[1] * x6889;
  const amrex::Real x9023 = sc[1] * x6883;
  const amrex::Real x9024 = x6154 * x3253;
  const amrex::Real x9025 = x6154 * x3247;
  const amrex::Real x9026 = sc[1] * x6306 * x6295;
  const amrex::Real x9027 = x6885 * x5004;
  const amrex::Real x9028 = x4506 * x3742;
  const amrex::Real x9029 = x4506 * x3741;
  const amrex::Real x9030 =
    x9021 - x9022 - x9023 + x9024 - x9025 - x9026 - x9027 - x9028 + x9029;
  const amrex::Real x9031 =
    -x4569 * x3814 + x4569 * x3815 - x4571 * x3814 + x4571 * x3815;
  const amrex::Real x9032 = x4561 * x3814;
  const amrex::Real x9033 = x6192 * x3247;
  const amrex::Real x9034 = x4561 * x3815;
  const amrex::Real x9035 = x6192 * x3253;
  const amrex::Real x9036 = x4557 * x3741;
  const amrex::Real x9037 = x4557 * x3742;
  const amrex::Real x9038 = -x9032 - x9033 + x9034 + x9035 + x9036 - x9037;
  const amrex::Real x9039 = x4555 * x3741 - x4555 * x3742;
  const amrex::Real x9040 = x4512 * x3742;
  const amrex::Real x9041 = x4512 * x3741;
  const amrex::Real x9042 = x5061 * x3253;
  const amrex::Real x9043 = x5061 * x3247;
  const amrex::Real x9044 = x4717 * x3882;
  const amrex::Real x9045 =
    x6341 - x9040 + x9041 + x9042 - x9043 + x9044 + x4600 * x3930;
  const amrex::Real x9046 = x4514 * x3742;
  const amrex::Real x9047 = x6207 * x3253;
  const amrex::Real x9048 = x4514 * x3741;
  const amrex::Real x9049 = x6207 * x3247;
  const amrex::Real x9050 = x6257 - x9046 + x9047 + x9048 - x9049;
  const amrex::Real x9051 = x8647 + x8660;
  const amrex::Real x9052 = x6459 + x6543;
  const amrex::Real x9053 = x6978 + x9052;
  const amrex::Real x9054 = x8277 + x9053;
  const amrex::Real x9055 = x4620 * x3932;
  const amrex::Real x9056 = x4620 * x3931;
  const amrex::Real x9057 = x4517 * x3817;
  const amrex::Real x9058 = x4517 * x3816;
  const amrex::Real x9059 = x4687 * x3883;
  const amrex::Real x9060 = x4542 * x3817;
  const amrex::Real x9061 = x4542 * x3816;
  const amrex::Real x9062 = x4539 * x3817;
  const amrex::Real x9063 = x4539 * x3816;
  const amrex::Real x9064 = x6112 * x3308;
  const amrex::Real x9065 = sc[2] * x6995;
  const amrex::Real x9066 = 1800000.0 * sc[5];
  const amrex::Real x9067 = x9066 * x1591;
  const amrex::Real x9068 = x4723 * x3992;
  const amrex::Real x9069 = x4723 * x3993;
  const amrex::Real x9070 = x4544 * x3816;
  const amrex::Real x9071 = x4544 * x3817;
  const amrex::Real x9072 = x4636 * x3931;
  const amrex::Real x9073 = x4723 * x4051;
  const amrex::Real x9074 = x4636 * x3932;
  const amrex::Real x9075 = x4711 * x3883;
  const amrex::Real x9076 = x6131 * x3308;
  const amrex::Real x9077 = x6112 * x3292;
  const amrex::Real x9078 = x4723 * x4050;
  const amrex::Real x9079 = x4638 * x3931;
  const amrex::Real x9080 = x6131 * x3292;
  const amrex::Real x9081 = x4726 * x3992;
  const amrex::Real x9082 = x4547 * x3744;
  const amrex::Real x9083 = x4547 * x3743;
  const amrex::Real x9084 = x4638 * x3932;
  const amrex::Real x9085 = x4726 * x3993;
  const amrex::Real x9086 = x4550 * x3816;
  const amrex::Real x9087 = x4550 * x3817;
  const amrex::Real x9088 = -x9086 + x9087;
  const amrex::Real x9089 = x4522 * x3816;
  const amrex::Real x9090 = x4522 * x3817;
  const amrex::Real x9091 = -x9089 + x9090;
  const amrex::Real x9092 = -x4553 * x3816 + x4553 * x3817;
  const amrex::Real x9093 = x4790 * x4363;
  const amrex::Real x9094 = x4767 * x4103;
  const amrex::Real x9095 = x6692 * x4766;
  const amrex::Real x9096 = x4767 * x4102;
  const amrex::Real x9097 = x6680 + x9093 - x9094 + x9095 + x9096;
  const amrex::Real x9098 = x4763 * x4336;
  const amrex::Real x9099 = x4763 * x4337;
  const amrex::Real x9100 = x6164 * x4759;
  const amrex::Real x9101 = x4760 * x4050;
  const amrex::Real x9102 = x4760 * x4051;
  const amrex::Real x9103 =
    x6712 - x9098 + x9099 + x9100 - x9101 + x9102 + x4795 * x4363;
  const amrex::Real x9104 = x6662 + x4683 * x3883;
  const amrex::Real x9105 = x4742 * x3992;
  const amrex::Real x9106 = x4629 * x3932;
  const amrex::Real x9107 = x4742 * x3993;
  const amrex::Real x9108 = x4629 * x3931;
  const amrex::Real x9109 = x4627 * x8756;
  const amrex::Real x9110 = x6720 + x9105 - x9106 - x9107 + x9108 + x9109 -
                            x4749 * x4336 + x4749 * x4337;
  const amrex::Real x9111 = x4775 * x4156;
  const amrex::Real x9112 = x6704 * x4785;
  const amrex::Real x9113 = x4775 * x4157;
  const amrex::Real x9114 = x4786 * x4363;
  const amrex::Real x9115 =
    x6686 - x9111 + x9112 + x9113 + x9114 + x4782 * x4208 - x4782 * x4209;
  const amrex::Real x9116 = x4752 * x4336;
  const amrex::Real x9117 = x4752 * x4337;
  const amrex::Real x9118 = x6714 * x4751;
  const amrex::Real x9119 = x4772 * x4102;
  const amrex::Real x9120 = x4772 * x4103;
  const amrex::Real x9121 = x6728 - x9116 + x9117 + x9118 + x9119 - x9120 -
                            x4779 * x4156 + x4779 * x4157;
  const amrex::Real x9122 = x4721 * x3992;
  const amrex::Real x9123 = x4721 * x3993;
  const amrex::Real x9124 = x4745 * x4051;
  const amrex::Real x9125 = x6004 * x4720;
  const amrex::Real x9126 = x4745 * x4050;
  const amrex::Real x9127 = x6698 + x9122 - x9123 + x9124 + x9125 - x9126 +
                            x4769 * x4102 - x4769 * x4103;
  const amrex::Real x9128 = x4663 * x3883;
  const amrex::Real x9129 = x6154 * x3308;
  const amrex::Real x9130 = x6154 * x3292;
  const amrex::Real x9131 = x4506 * x3744;
  const amrex::Real x9132 = x4506 * x3743;
  const amrex::Real x9133 = x6314 + x9128 + x9129 - x9130 - x9131 + x9132;
  const amrex::Real x9134 = x4582 * x3932;
  const amrex::Real x9135 = x4582 * x3931;
  const amrex::Real x9136 = -x9134 + x9135;
  const amrex::Real x9137 = x4508 * x3743 - x4508 * x3744;
  const amrex::Real x9138 = sc[9] * x8049;
  const amrex::Real x9139 = x4576 * x3932;
  const amrex::Real x9140 = x4576 * x3931;
  const amrex::Real x9141 =
    x9138 - x9139 + x9140 - x4756 * x4050 + x4756 * x4051;
  const amrex::Real x9142 =
    -x4569 * x3816 + x4569 * x3817 - x4571 * x3816 + x4571 * x3817;
  const amrex::Real x9143 = -x6180;
  const amrex::Real x9144 = sc[1] * x6914;
  const amrex::Real x9145 = sc[1] * x6917;
  const amrex::Real x9146 =
    x9143 - x9144 - x9145 + x4739 * x3992 - x4739 * x3993;
  const amrex::Real x9147 = x4561 * x3817;
  const amrex::Real x9148 = x6192 * x3308;
  const amrex::Real x9149 = x4557 * x3744;
  const amrex::Real x9150 = x4557 * x3743;
  const amrex::Real x9151 = x4561 * x3816;
  const amrex::Real x9152 = x6192 * x3292;
  const amrex::Real x9153 =
    x6543 + x9147 + x9148 - x9149 + x9150 - x9151 - x9152;
  const amrex::Real x9154 = x4555 * x3743 - x4555 * x3744;
  const amrex::Real x9155 = x4512 * x3744;
  const amrex::Real x9156 = x4512 * x3743;
  const amrex::Real x9157 = x5061 * x3292;
  const amrex::Real x9158 = x5061 * x3308;
  const amrex::Real x9159 = x4717 * x3883;
  const amrex::Real x9160 =
    -x9155 + x9156 - x9157 + x9158 + x9159 + x4600 * x3931 - x4600 * x3932;
  const amrex::Real x9161 = x4514 * x3743;
  const amrex::Real x9162 = x4514 * x3744;
  const amrex::Real x9163 = x6207 * x3308;
  const amrex::Real x9164 = x6207 * x3292;
  const amrex::Real x9165 = x9161 - x9162 + x9163 - x9164;
  const amrex::Real x9166 = x4553 * x3818;
  const amrex::Real x9167 = x4508 * x3745;
  const amrex::Real x9168 = x4517 * x3818;
  const amrex::Real x9169 = x6765 * x8473;
  const amrex::Real x9170 = x6131 * x3313;
  const amrex::Real x9171 = x4544 * x3818;
  const amrex::Real x9172 = x4687 * x3884;
  const amrex::Real x9173 = x4542 * x3818;
  const amrex::Real x9174 = x6757 * x8473;
  const amrex::Real x9175 = x4711 * x3884;
  const amrex::Real x9176 = x6112 * x3313;
  const amrex::Real x9177 = x4539 * x3818;
  const amrex::Real x9178 = x4547 * x3745;
  const amrex::Real x9179 = x4550 * x3818;
  const amrex::Real x9180 = x6261 + x9179;
  const amrex::Real x9181 = sc[1] * x6822;
  const amrex::Real x9182 = sc[1] * x6825;
  const amrex::Real x9183 = x4522 * x3818;
  const amrex::Real x9184 = x6263 - x9181 - x9182 + x9183;
  const amrex::Real x9185 = x6662 + x4683 * x3884;
  const amrex::Real x9186 = x4663 * x3884;
  const amrex::Real x9187 = x6154 * x3313;
  const amrex::Real x9188 = x4506 * x3745;
  const amrex::Real x9189 = x9186 + x9187 + x9188;
  const amrex::Real x9190 = x4569 * x3818 + x4571 * x3818;
  const amrex::Real x9191 = x4561 * x3818;
  const amrex::Real x9192 = x6192 * x3313;
  const amrex::Real x9193 = x4557 * x3745;
  const amrex::Real x9194 = x6200 + x9191 + x9192 + x9193;
  const amrex::Real x9195 = x6264 + x4555 * x3745;
  const amrex::Real x9196 = x4512 * x3745;
  const amrex::Real x9197 = x4717 * x3884;
  const amrex::Real x9198 = x5061 * x3313;
  const amrex::Real x9199 = x8978 + x9196 + x9197 + x9198;
  const amrex::Real x9200 = x6207 * x3313;
  const amrex::Real x9201 = x4514 * x3745;
  const amrex::Real x9202 = x6258 + x9200 + x9201;
  const amrex::Real x9203 = sc[5] * x7509;
  const amrex::Real x9204 = x4517 * x3820;
  const amrex::Real x9205 = x4517 * x3819;
  const amrex::Real x9206 = x4687 * x3885;
  const amrex::Real x9207 = x4542 * x3820;
  const amrex::Real x9208 = x4542 * x3819;
  const amrex::Real x9209 = x4539 * x3820;
  const amrex::Real x9210 = x6112 * x3324;
  const amrex::Real x9211 = x6112 * x3320;
  const amrex::Real x9212 = x6131 * x3320;
  const amrex::Real x9213 = x4544 * x3819;
  const amrex::Real x9214 = x4544 * x3820;
  const amrex::Real x9215 = x4547 * x3746;
  const amrex::Real x9216 = x4547 * x3747;
  const amrex::Real x9217 = x6131 * x3324;
  const amrex::Real x9218 = x4711 * x3885;
  const amrex::Real x9219 = x4539 * x3819;
  const amrex::Real x9220 = x4550 * x3819;
  const amrex::Real x9221 = x4550 * x3820;
  const amrex::Real x9222 = -x9220 + x9221;
  const amrex::Real x9223 = x4522 * x3819;
  const amrex::Real x9224 = x4522 * x3820;
  const amrex::Real x9225 = -x9223 + x9224;
  const amrex::Real x9226 = -x4553 * x3819 + x4553 * x3820;
  const amrex::Real x9227 = x6662 + x4683 * x3885;
  const amrex::Real x9228 = sc[1] * x6831;
  const amrex::Real x9229 = sc[1] * x6493;
  const amrex::Real x9230 = x6510 - x9228 - x9229;
  const amrex::Real x9231 = x4663 * x3885;
  const amrex::Real x9232 = x6154 * x3324;
  const amrex::Real x9233 = x6154 * x3320;
  const amrex::Real x9234 = x4506 * x3747;
  const amrex::Real x9235 = x4506 * x3746;
  const amrex::Real x9236 = x9231 + x9232 - x9233 - x9234 + x9235;
  const amrex::Real x9237 = x4508 * x3746 - x4508 * x3747;
  const amrex::Real x9238 =
    -x4569 * x3819 + x4569 * x3820 - x4571 * x3819 + x4571 * x3820;
  const amrex::Real x9239 = x6192 * x3320;
  const amrex::Real x9240 = x4561 * x3820;
  const amrex::Real x9241 = x6192 * x3324;
  const amrex::Real x9242 = x4557 * x3747;
  const amrex::Real x9243 = x4557 * x3746;
  const amrex::Real x9244 = x4561 * x3819;
  const amrex::Real x9245 = -x9239 + x9240 + x9241 - x9242 + x9243 - x9244;
  const amrex::Real x9246 = x4555 * x3746 - x4555 * x3747;
  const amrex::Real x9247 = x4512 * x3746;
  const amrex::Real x9248 = x5061 * x3320;
  const amrex::Real x9249 = x5061 * x3324;
  const amrex::Real x9250 = x4512 * x3747;
  const amrex::Real x9251 = x4717 * x3885;
  const amrex::Real x9252 = x9247 - x9248 + x9249 - x9250 + x9251;
  const amrex::Real x9253 = x4514 * x3747;
  const amrex::Real x9254 = x4514 * x3746;
  const amrex::Real x9255 = x6207 * x3320;
  const amrex::Real x9256 = x6207 * x3324;
  const amrex::Real x9257 = -x9253 + x9254 - x9255 + x9256;
  const amrex::Real x9258 = x6257 + x8661;
  const amrex::Real x9259 = x4620 * x3933;
  const amrex::Real x9260 = x4517 * x3822;
  const amrex::Real x9261 = x4517 * x3821;
  const amrex::Real x9262 = x4687 * x3886;
  const amrex::Real x9263 = x9066 * x1575;
  const amrex::Real x9264 = x4542 * x3822;
  const amrex::Real x9265 = x4539 * x3822;
  const amrex::Real x9266 = x6131 * x3352;
  const amrex::Real x9267 = x6131 * x3342;
  const amrex::Real x9268 = x4544 * x3821;
  const amrex::Real x9269 = x6112 * x3352;
  const amrex::Real x9270 = x4723 * x4053;
  const amrex::Real x9271 = x4711 * x3886;
  const amrex::Real x9272 = x4547 * x3749;
  const amrex::Real x9273 = x4723 * x4052;
  const amrex::Real x9274 = x4547 * x3748;
  const amrex::Real x9275 = x4542 * x3821;
  const amrex::Real x9276 = x6112 * x3342;
  const amrex::Real x9277 = x4539 * x3821;
  const amrex::Real x9278 = x4726 * x3995;
  const amrex::Real x9279 = x4620 * x3934;
  const amrex::Real x9280 = x4726 * x3994;
  const amrex::Real x9281 = x4723 * x3995;
  const amrex::Real x9282 = x4636 * x3934;
  const amrex::Real x9283 = x4636 * x3933;
  const amrex::Real x9284 = x4638 * x3933;
  const amrex::Real x9285 = x4723 * x3994;
  const amrex::Real x9286 = x4544 * x3822;
  const amrex::Real x9287 = x4638 * x3934;
  const amrex::Real x9288 = x4522 * x3821;
  const amrex::Real x9289 = x4522 * x3822;
  const amrex::Real x9290 = -x9288 + x9289;
  const amrex::Real x9291 = x4550 * x3821;
  const amrex::Real x9292 = x4550 * x3822;
  const amrex::Real x9293 = -x9291 + x9292;
  const amrex::Real x9294 = -x4553 * x3821 + x4553 * x3822;
  const amrex::Real x9295 = x4767 * x4104;
  const amrex::Real x9296 = x4767 * x4105;
  const amrex::Real x9297 = x9295 - x9296;
  const amrex::Real x9298 = x4742 * x3994;
  const amrex::Real x9299 = x4629 * x3933;
  const amrex::Real x9300 = x4629 * x3934;
  const amrex::Real x9301 = x4742 * x3995;
  const amrex::Real x9302 = x9298 + x9299 - x9300 - x9301;
  const amrex::Real x9303 = x4775 * x4158;
  const amrex::Real x9304 = x4775 * x4159;
  const amrex::Real x9305 = x7092 - x9303 + x9304;
  const amrex::Real x9306 = x4760 * x4052;
  const amrex::Real x9307 = x4760 * x4053;
  const amrex::Real x9308 = -x9306 + x9307;
  const amrex::Real x9309 = x4721 * x3995;
  const amrex::Real x9310 = x4745 * x4052;
  const amrex::Real x9311 = x4745 * x4053;
  const amrex::Real x9312 = x4721 * x3994;
  const amrex::Real x9313 =
    -x9309 - x9310 + x9311 + x9312 + x4769 * x4104 - x4769 * x4105;
  const amrex::Real x9314 = x6662 + x4683 * x3886;
  const amrex::Real x9315 = x4772 * x4105;
  const amrex::Real x9316 = x4772 * x4104;
  const amrex::Real x9317 = -x9315 + x9316 - x4779 * x4158 + x4779 * x4159;
  const amrex::Real x9318 = x6501 + x6510;
  const amrex::Real x9319 = x4663 * x3886;
  const amrex::Real x9320 = x6154 * x3352;
  const amrex::Real x9321 = x6154 * x3342;
  const amrex::Real x9322 = x4506 * x3748;
  const amrex::Real x9323 = x4506 * x3749;
  const amrex::Real x9324 = x9319 + x9320 - x9321 + x9322 - x9323;
  const amrex::Real x9325 = x4582 * x3934;
  const amrex::Real x9326 = x4582 * x3933;
  const amrex::Real x9327 = -x9325 + x9326;
  const amrex::Real x9328 = x4508 * x3748 - x4508 * x3749;
  const amrex::Real x9329 = x4739 * x3994 - x4739 * x3995;
  const amrex::Real x9330 =
    -x4569 * x3821 + x4569 * x3822 - x4571 * x3821 + x4571 * x3822;
  const amrex::Real x9331 = x4576 * x3933;
  const amrex::Real x9332 = sc[1] * x6901;
  const amrex::Real x9333 = x4576 * x3934;
  const amrex::Real x9334 = sc[1] * x6847;
  const amrex::Real x9335 = x9143 + x9331 - x9332 - x9333 - 4.8e+16 * x9334 -
                            x4756 * x4052 + x4756 * x4053;
  const amrex::Real x9336 = x6192 * x3352;
  const amrex::Real x9337 = x6192 * x3342;
  const amrex::Real x9338 = x4561 * x3821;
  const amrex::Real x9339 = x4561 * x3822;
  const amrex::Real x9340 = x4557 * x3749;
  const amrex::Real x9341 = x4557 * x3748;
  const amrex::Real x9342 = x9336 - x9337 - x9338 + x9339 - x9340 + x9341;
  const amrex::Real x9343 = x4555 * x3748 - x4555 * x3749;
  const amrex::Real x9344 = x4512 * x3749;
  const amrex::Real x9345 = x4512 * x3748;
  const amrex::Real x9346 = x5061 * x3342;
  const amrex::Real x9347 = x4717 * x3886;
  const amrex::Real x9348 = x5061 * x3352;
  const amrex::Real x9349 =
    -x9344 + x9345 - x9346 + x9347 + x9348 + x4600 * x3933 - x4600 * x3934;
  const amrex::Real x9350 = x4514 * x3748;
  const amrex::Real x9351 = x4514 * x3749;
  const amrex::Real x9352 = x6207 * x3342;
  const amrex::Real x9353 = x6207 * x3352;
  const amrex::Real x9354 = x9350 - x9351 - x9352 + x9353;
  const amrex::Real x9355 = x6689 + x6698;
  const amrex::Real x9356 = x4620 * x3935;
  const amrex::Real x9357 = x4620 * x3936;
  const amrex::Real x9358 = x4517 * x3824;
  const amrex::Real x9359 = x4687 * x3887;
  const amrex::Real x9360 = x4542 * x3824;
  const amrex::Real x9361 = x4539 * x3823;
  const amrex::Real x9362 = x6112 * x3385;
  const amrex::Real x9363 = x6131 * x3402;
  const amrex::Real x9364 = x4517 * x3823;
  const amrex::Real x9365 = x4636 * x3936;
  const amrex::Real x9366 = x4723 * x3996;
  const amrex::Real x9367 = x4723 * x3997;
  const amrex::Real x9368 = x4547 * x3751;
  const amrex::Real x9369 = x4711 * x3887;
  const amrex::Real x9370 = x4542 * x3823;
  const amrex::Real x9371 = x4723 * x4055;
  const amrex::Real x9372 = x4544 * x3824;
  const amrex::Real x9373 = x4638 * x3935;
  const amrex::Real x9374 = x6131 * x3385;
  const amrex::Real x9375 = x4723 * x4054;
  const amrex::Real x9376 = x4539 * x3824;
  const amrex::Real x9377 = x6112 * x3402;
  const amrex::Real x9378 = x4726 * x3996;
  const amrex::Real x9379 = x4726 * x3997;
  const amrex::Real x9380 = x4636 * x3935;
  const amrex::Real x9381 = x4544 * x3823;
  const amrex::Real x9382 = x4547 * x3750;
  const amrex::Real x9383 = x4638 * x3936;
  const amrex::Real x9384 = x4522 * x3823;
  const amrex::Real x9385 = x4522 * x3824;
  const amrex::Real x9386 = -x9384 + x9385;
  const amrex::Real x9387 = x4550 * x3823;
  const amrex::Real x9388 = x4550 * x3824;
  const amrex::Real x9389 = -x9387 + x9388;
  const amrex::Real x9390 = -x4553 * x3823 + x4553 * x3824;
  const amrex::Real x9391 = x4790 * x4364;
  const amrex::Real x9392 = x4767 * x4106;
  const amrex::Real x9393 = x4767 * x4107;
  const amrex::Real x9394 = x6680 + x9391 + x9392 - x9393;
  const amrex::Real x9395 = x4742 * x3996;
  const amrex::Real x9396 = x4742 * x3997;
  const amrex::Real x9397 = x4629 * x3935;
  const amrex::Real x9398 = x4629 * x3936;
  const amrex::Real x9399 =
    x6720 + x9395 - x9396 + x9397 - x9398 - x4749 * x4338 + x4749 * x4339;
  const amrex::Real x9400 = x4775 * x4161;
  const amrex::Real x9401 = x4786 * x4364;
  const amrex::Real x9402 = x4775 * x4160;
  const amrex::Real x9403 =
    x6686 + x9400 + x9401 - x9402 + x4782 * x4210 - x4782 * x4211;
  const amrex::Real x9404 = x4763 * x4338;
  const amrex::Real x9405 = x4763 * x4339;
  const amrex::Real x9406 = x4760 * x4054;
  const amrex::Real x9407 = x4760 * x4055;
  const amrex::Real x9408 =
    x6712 - x9404 + x9405 - x9406 + x9407 + x4795 * x4364;
  const amrex::Real x9409 = x4721 * x3996;
  const amrex::Real x9410 = x4721 * x3997;
  const amrex::Real x9411 = x4745 * x4054;
  const amrex::Real x9412 = x4745 * x4055;
  const amrex::Real x9413 =
    x6698 + x9409 - x9410 - x9411 + x9412 + x4769 * x4106 - x4769 * x4107;
  const amrex::Real x9414 = x4752 * x4338;
  const amrex::Real x9415 = x4752 * x4339;
  const amrex::Real x9416 = x4772 * x4106;
  const amrex::Real x9417 = x4772 * x4107;
  const amrex::Real x9418 =
    x6728 - x9414 + x9415 + x9416 - x9417 - x4779 * x4160 + x4779 * x4161;
  const amrex::Real x9419 = x6662 + x4683 * x3887;
  const amrex::Real x9420 = x4663 * x3887;
  const amrex::Real x9421 = x4506 * x3751;
  const amrex::Real x9422 = x6154 * x3402;
  const amrex::Real x9423 = x6154 * x3385;
  const amrex::Real x9424 = x4506 * x3750;
  const amrex::Real x9425 = x9420 - x9421 + x9422 - x9423 + x9424;
  const amrex::Real x9426 = x4582 * x3935;
  const amrex::Real x9427 = x4582 * x3936;
  const amrex::Real x9428 = x9426 - x9427;
  const amrex::Real x9429 = x4508 * x3750 - x4508 * x3751;
  const amrex::Real x9430 = x4576 * x3935;
  const amrex::Real x9431 = x4576 * x3936;
  const amrex::Real x9432 = x9430 - x9431 - x4756 * x4054 + x4756 * x4055;
  const amrex::Real x9433 = x4739 * x3996 - x4739 * x3997;
  const amrex::Real x9434 =
    -x4569 * x3823 + x4569 * x3824 - x4571 * x3823 + x4571 * x3824;
  const amrex::Real x9435 = x6192 * x3385;
  const amrex::Real x9436 = x4561 * x3823;
  const amrex::Real x9437 = x4557 * x3750;
  const amrex::Real x9438 = x6192 * x3402;
  const amrex::Real x9439 = x4557 * x3751;
  const amrex::Real x9440 = x4561 * x3824;
  const amrex::Real x9441 = -x9435 - x9436 + x9437 + x9438 - x9439 + x9440;
  const amrex::Real x9442 = x4555 * x3750 - x4555 * x3751;
  const amrex::Real x9443 = x4512 * x3751;
  const amrex::Real x9444 = x4512 * x3750;
  const amrex::Real x9445 = x5061 * x3402;
  const amrex::Real x9446 = x5061 * x3385;
  const amrex::Real x9447 = x4717 * x3887;
  const amrex::Real x9448 =
    -x9443 + x9444 + x9445 - x9446 + x9447 + x4600 * x3935 - x4600 * x3936;
  const amrex::Real x9449 = x4514 * x3751;
  const amrex::Real x9450 = x4514 * x3750;
  const amrex::Real x9451 = x6207 * x3385;
  const amrex::Real x9452 = x6207 * x3402;
  const amrex::Real x9453 = -x9449 + x9450 - x9451 + x9452;
  const amrex::Real x9454 = x4620 * x3937;
  const amrex::Real x9455 = x4517 * x3826;
  const amrex::Real x9456 = x4620 * x3938;
  const amrex::Real x9457 = x4723 * x3999;
  const amrex::Real x9458 = x4542 * x3825;
  const amrex::Real x9459 = x4638 * x3937;
  const amrex::Real x9460 = x6112 * x3434;
  const amrex::Real x9461 = x4726 * x3999;
  const amrex::Real x9462 = x6131 * x3449;
  const amrex::Real x9463 = x4547 * x3752;
  const amrex::Real x9464 = x4723 * x3998;
  const amrex::Real x9465 = x6131 * x3434;
  const amrex::Real x9466 = x4539 * x3826;
  const amrex::Real x9467 = x4544 * x3826;
  const amrex::Real x9468 = x4723 * x4056;
  const amrex::Real x9469 = x4547 * x3753;
  const amrex::Real x9470 = x6112 * x3449;
  const amrex::Real x9471 = x4636 * x3937;
  const amrex::Real x9472 = x4517 * x3825;
  const amrex::Real x9473 = x4544 * x3825;
  const amrex::Real x9474 = x4542 * x3826;
  const amrex::Real x9475 = x4723 * x4057;
  const amrex::Real x9476 = x4539 * x3825;
  const amrex::Real x9477 = x4726 * x3998;
  const amrex::Real x9478 = x4636 * x3938;
  const amrex::Real x9479 = x4638 * x3938;
  const amrex::Real x9480 = x4522 * x3825;
  const amrex::Real x9481 = x4522 * x3826;
  const amrex::Real x9482 = -x9480 + x9481;
  const amrex::Real x9483 = x4550 * x3826;
  const amrex::Real x9484 = x4550 * x3825;
  const amrex::Real x9485 = x9483 - x9484;
  const amrex::Real x9486 = x4790 * x4365;
  const amrex::Real x9487 = x4767 * x4109;
  const amrex::Real x9488 = x4767 * x4108;
  const amrex::Real x9489 = x6680 + x9486 - x9487 + x9488;
  const amrex::Real x9490 = x4786 * x4365;
  const amrex::Real x9491 = x4775 * x4162;
  const amrex::Real x9492 = x4775 * x4163;
  const amrex::Real x9493 =
    x6686 + x9490 - x9491 + x9492 + x4782 * x4212 - x4782 * x4213;
  const amrex::Real x9494 = x4763 * x4340;
  const amrex::Real x9495 = x4760 * x4056;
  const amrex::Real x9496 = x4763 * x4341;
  const amrex::Real x9497 = x4760 * x4057;
  const amrex::Real x9498 =
    x6712 - x9494 - x9495 + x9496 + x9497 + x4795 * x4365;
  const amrex::Real x9499 = x4721 * x3999;
  const amrex::Real x9500 = x4745 * x4056;
  const amrex::Real x9501 = x4745 * x4057;
  const amrex::Real x9502 = x4721 * x3998;
  const amrex::Real x9503 =
    x6698 - x9499 - x9500 + x9501 + x9502 + x4769 * x4108 - x4769 * x4109;
  const amrex::Real x9504 = x4752 * x4341;
  const amrex::Real x9505 = x4752 * x4340;
  const amrex::Real x9506 = x4772 * x4108;
  const amrex::Real x9507 = x4772 * x4109;
  const amrex::Real x9508 =
    x6728 + x9504 - x9505 + x9506 - x9507 - x4779 * x4162 + x4779 * x4163;
  const amrex::Real x9509 = 1.6e+16 * x3937;
  const amrex::Real x9510 = x9509 * x4628;
  const amrex::Real x9511 = x4629 * x3938;
  const amrex::Real x9512 = x4742 * x3999;
  const amrex::Real x9513 = x4742 * x3998;
  const amrex::Real x9514 = x9143 - sc[1] * x6848;
  const amrex::Real x9515 = x6720 + x9510 - x9511 - x9512 + x9513 + x9514 -
                            x4749 * x4340 + x4749 * x4341;
  const amrex::Real x9516 = x6154 * x3434;
  const amrex::Real x9517 = x4506 * x3752;
  const amrex::Real x9518 = x6154 * x3449;
  const amrex::Real x9519 = x4506 * x3753;
  const amrex::Real x9520 = -x9516 + x9517 + x9518 - x9519;
  const amrex::Real x9521 = x4582 * x3937;
  const amrex::Real x9522 = x4582 * x3938;
  const amrex::Real x9523 = x9521 - x9522;
  const amrex::Real x9524 = x4508 * x3752 - x4508 * x3753;
  const amrex::Real x9525 = x9509 * x4575;
  const amrex::Real x9526 = x4576 * x3938;
  const amrex::Real x9527 = x9525 - x9526 - x4756 * x4056 + x4756 * x4057;
  const amrex::Real x9528 = x4739 * x3998 - x4739 * x3999;
  const amrex::Real x9529 = -x4553 * x3825 + x4553 * x3826;
  const amrex::Real x9530 =
    x9529 - x4569 * x3825 + x4569 * x3826 - x4571 * x3825 + x4571 * x3826;
  const amrex::Real x9531 = x6603 + x4555 * x3752 - x4555 * x3753;
  const amrex::Real x9532 = x6192 * x3449;
  const amrex::Real x9533 = x6192 * x3434;
  const amrex::Real x9534 = x4561 * x3825;
  const amrex::Real x9535 = x4557 * x3753;
  const amrex::Real x9536 = x4561 * x3826;
  const amrex::Real x9537 = x4557 * x3752;
  const amrex::Real x9538 = x9532 - x9533 - x9534 - x9535 + x9536 + x9537;
  const amrex::Real x9539 = x4512 * x3752;
  const amrex::Real x9540 = x4512 * x3753;
  const amrex::Real x9541 = x5061 * x3434;
  const amrex::Real x9542 = x5061 * x3449;
  const amrex::Real x9543 =
    x9539 - x9540 - x9541 + x9542 + x4600 * x3937 - x4600 * x3938;
  const amrex::Real x9544 = x4514 * x3753;
  const amrex::Real x9545 = x4514 * x3752;
  const amrex::Real x9546 = x6207 * x3449;
  const amrex::Real x9547 = x6207 * x3434;
  const amrex::Real x9548 = -x9544 + x9545 + x9546 - x9547;
  const amrex::Real x9549 = x6318 + x6979;
  const amrex::Real x9550 = x6184 + x9549;
  const amrex::Real x9551 = x4517 * x3827;
  const amrex::Real x9552 = x4620 * x3940;
  const amrex::Real x9553 = x4726 * x4001;
  const amrex::Real x9554 = x4544 * x3827;
  const amrex::Real x9555 = x4539 * x3827;
  const amrex::Real x9556 = x6112 * x3473;
  const amrex::Real x9557 = x6112 * x3466;
  const amrex::Real x9558 = x4517 * x3828;
  const amrex::Real x9559 = x6131 * x3466;
  const amrex::Real x9560 = x6131 * x3473;
  const amrex::Real x9561 = x4542 * x3828;
  const amrex::Real x9562 = x4723 * x4001;
  const amrex::Real x9563 = x4544 * x3828;
  const amrex::Real x9564 = x4547 * x3755;
  const amrex::Real x9565 = x4723 * x4059;
  const amrex::Real x9566 = x4547 * x3754;
  const amrex::Real x9567 = x4723 * x4058;
  const amrex::Real x9568 = x4638 * x3939;
  const amrex::Real x9569 = x4638 * x3940;
  const amrex::Real x9570 = x4636 * x3939;
  const amrex::Real x9571 = x4636 * x3940;
  const amrex::Real x9572 = x4539 * x3828;
  const amrex::Real x9573 = x4726 * x4000;
  const amrex::Real x9574 = x4723 * x4000;
  const amrex::Real x9575 = x4620 * x3939;
  const amrex::Real x9576 = x4542 * x3827;
  const amrex::Real x9577 = x4550 * x3827;
  const amrex::Real x9578 = x4550 * x3828;
  const amrex::Real x9579 = -x9577 + x9578;
  const amrex::Real x9580 = x4522 * x3827;
  const amrex::Real x9581 = x4522 * x3828;
  const amrex::Real x9582 = -x9580 + x9581;
  const amrex::Real x9583 = x4767 * x4110;
  const amrex::Real x9584 = x4767 * x4111;
  const amrex::Real x9585 = x9583 - x9584;
  const amrex::Real x9586 = x4760 * x4059;
  const amrex::Real x9587 = x4760 * x4058;
  const amrex::Real x9588 = x9586 - x9587;
  const amrex::Real x9589 = x4742 * x4000;
  const amrex::Real x9590 = x4742 * x4001;
  const amrex::Real x9591 = x4629 * x3940;
  const amrex::Real x9592 = 1.6e+16 * x3939;
  const amrex::Real x9593 = x9592 * x4628;
  const amrex::Real x9594 = x9589 - x9590 - x9591 + x9593;
  const amrex::Real x9595 = x4772 * x4111;
  const amrex::Real x9596 = x4772 * x4110;
  const amrex::Real x9597 = x6699 + x8270 - x9595 + x9596;
  const amrex::Real x9598 = x4721 * x4001;
  const amrex::Real x9599 = x4745 * x4058;
  const amrex::Real x9600 = x4745 * x4059;
  const amrex::Real x9601 = x4721 * x4000;
  const amrex::Real x9602 =
    x9514 - x9598 - x9599 + x9600 + x9601 + x4769 * x4110 - x4769 * x4111;
  const amrex::Real x9603 = x6154 * x3466;
  const amrex::Real x9604 = x4506 * x3755;
  const amrex::Real x9605 = x4506 * x3754;
  const amrex::Real x9606 = x6154 * x3473;
  const amrex::Real x9607 = -x9603 - x9604 + x9605 + x9606;
  const amrex::Real x9608 = x4582 * x3939;
  const amrex::Real x9609 = x4582 * x3940;
  const amrex::Real x9610 = x9608 - x9609;
  const amrex::Real x9611 = x4508 * x3754 - x4508 * x3755;
  const amrex::Real x9612 = x9592 * x4575;
  const amrex::Real x9613 = x4576 * x3940;
  const amrex::Real x9614 =
    x6184 + x9612 - x9613 - x4756 * x4058 + x4756 * x4059;
  const amrex::Real x9615 = x4739 * x4000 - x4739 * x4001;
  const amrex::Real x9616 = -x4553 * x3827 + x4553 * x3828;
  const amrex::Real x9617 =
    x9616 - x4569 * x3827 + x4569 * x3828 - x4571 * x3827 + x4571 * x3828;
  const amrex::Real x9618 = x6192 * x3466;
  const amrex::Real x9619 = x4561 * x3828;
  const amrex::Real x9620 = x4557 * x3754;
  const amrex::Real x9621 = x4561 * x3827;
  const amrex::Real x9622 = x4557 * x3755;
  const amrex::Real x9623 = x6192 * x3473;
  const amrex::Real x9624 = -x9618 + x9619 + x9620 - x9621 - x9622 + x9623;
  const amrex::Real x9625 = x4555 * x3754 - x4555 * x3755;
  const amrex::Real x9626 = x5061 * x3466;
  const amrex::Real x9627 = x5061 * x3473;
  const amrex::Real x9628 = x4512 * x3754;
  const amrex::Real x9629 = x4512 * x3755;
  const amrex::Real x9630 =
    -x9626 + x9627 + x9628 - x9629 + x4600 * x3939 - x4600 * x3940;
  const amrex::Real x9631 = x4514 * x3755;
  const amrex::Real x9632 = x4514 * x3754;
  const amrex::Real x9633 = x6207 * x3473;
  const amrex::Real x9634 = x6207 * x3466;
  const amrex::Real x9635 = -x9631 + x9632 + x9633 - x9634;
  const amrex::Real x9636 = x6665 + x9549;
  const amrex::Real x9637 = x4517 * x3829;
  const amrex::Real x9638 = x4539 * x3829;
  const amrex::Real x9639 = x4723 * x4003;
  const amrex::Real x9640 = x6131 * x3504;
  const amrex::Real x9641 = x4542 * x3829;
  const amrex::Real x9642 = x4726 * x4003;
  const amrex::Real x9643 = x4638 * x3941;
  const amrex::Real x9644 = x4539 * x3830;
  const amrex::Real x9645 = x4723 * x4061;
  const amrex::Real x9646 = x6112 * x3504;
  const amrex::Real x9647 = x6131 * x3517;
  const amrex::Real x9648 = x4723 * x4002;
  const amrex::Real x9649 = x4723 * x4060;
  const amrex::Real x9650 = x6112 * x3517;
  const amrex::Real x9651 = x4547 * x3756;
  const amrex::Real x9652 = x4542 * x3830;
  const amrex::Real x9653 = x4620 * x3941;
  const amrex::Real x9654 = x4544 * x3829;
  const amrex::Real x9655 = x4636 * x3942;
  const amrex::Real x9656 = x4636 * x3941;
  const amrex::Real x9657 = x4620 * x3942;
  const amrex::Real x9658 = x4726 * x4002;
  const amrex::Real x9659 = x4547 * x3757;
  const amrex::Real x9660 = x4544 * x3830;
  const amrex::Real x9661 = x4517 * x3830;
  const amrex::Real x9662 = x4638 * x3942;
  const amrex::Real x9663 = x4522 * x3829;
  const amrex::Real x9664 = x4522 * x3830;
  const amrex::Real x9665 = -x9663 + x9664;
  const amrex::Real x9666 = x4550 * x3829;
  const amrex::Real x9667 = x4550 * x3830;
  const amrex::Real x9668 = -x9666 + x9667;
  const amrex::Real x9669 = x4790 * x4366;
  const amrex::Real x9670 = x4767 * x4113;
  const amrex::Real x9671 = x4767 * x4112;
  const amrex::Real x9672 = x6680 + x9669 - x9670 + x9671;
  const amrex::Real x9673 = x4742 * x4003;
  const amrex::Real x9674 = x4629 * x3941;
  const amrex::Real x9675 = x4629 * x3942;
  const amrex::Real x9676 = x4742 * x4002;
  const amrex::Real x9677 =
    x6720 - x9673 + x9674 - x9675 + x9676 - x4749 * x4342 + x4749 * x4343;
  const amrex::Real x9678 = x4786 * x4366;
  const amrex::Real x9679 = x4775 * x4164;
  const amrex::Real x9680 = x4775 * x4165;
  const amrex::Real x9681 =
    x6686 + x9678 - x9679 + x9680 + x4782 * x4214 - x4782 * x4215;
  const amrex::Real x9682 = x4772 * x4112;
  const amrex::Real x9683 = x4752 * x4343;
  const amrex::Real x9684 = x4752 * x4342;
  const amrex::Real x9685 = x4772 * x4113;
  const amrex::Real x9686 =
    x6728 + x9682 + x9683 - x9684 - x9685 - x4779 * x4164 + x4779 * x4165;
  const amrex::Real x9687 = x4721 * x4002;
  const amrex::Real x9688 = x4745 * x4060;
  const amrex::Real x9689 = x4745 * x4061;
  const amrex::Real x9690 = x4721 * x4003;
  const amrex::Real x9691 =
    x6698 + x9687 - x9688 + x9689 - x9690 + x4769 * x4112 - x4769 * x4113;
  const amrex::Real x9692 = x4763 * x4342;
  const amrex::Real x9693 = x4763 * x4343;
  const amrex::Real x9694 = x4760 * x4060;
  const amrex::Real x9695 = x4760 * x4061;
  const amrex::Real x9696 =
    x6712 + x9514 - x9692 + x9693 - x9694 + x9695 + x4795 * x4366;
  const amrex::Real x9697 = x6154 * x3504;
  const amrex::Real x9698 = x6154 * x3517;
  const amrex::Real x9699 = x4506 * x3757;
  const amrex::Real x9700 = x4506 * x3756;
  const amrex::Real x9701 = -x9697 + x9698 - x9699 + x9700;
  const amrex::Real x9702 = x4582 * x3941;
  const amrex::Real x9703 = x4582 * x3942;
  const amrex::Real x9704 = x9702 - x9703;
  const amrex::Real x9705 = x4508 * x3756 - x4508 * x3757;
  const amrex::Real x9706 = x4576 * x3942;
  const amrex::Real x9707 = x4576 * x3941;
  const amrex::Real x9708 = -x9706 + x9707 - x4756 * x4060 + x4756 * x4061;
  const amrex::Real x9709 = x4739 * x4002 - x4739 * x4003;
  const amrex::Real x9710 = -x4553 * x3829 + x4553 * x3830;
  const amrex::Real x9711 =
    x9710 - x4569 * x3829 + x4569 * x3830 - x4571 * x3829 + x4571 * x3830;
  const amrex::Real x9712 = x6192 * x3504;
  const amrex::Real x9713 = x4561 * x3830;
  const amrex::Real x9714 = x4561 * x3829;
  const amrex::Real x9715 = x4557 * x3757;
  const amrex::Real x9716 = x4557 * x3756;
  const amrex::Real x9717 = x6192 * x3517;
  const amrex::Real x9718 = -x9712 + x9713 - x9714 - x9715 + x9716 + x9717;
  const amrex::Real x9719 = x4555 * x3756 - x4555 * x3757;
  const amrex::Real x9720 = x4512 * x3757;
  const amrex::Real x9721 = x5061 * x3517;
  const amrex::Real x9722 = x5061 * x3504;
  const amrex::Real x9723 = x4512 * x3756;
  const amrex::Real x9724 =
    -x9720 + x9721 - x9722 + x9723 + x4600 * x3941 - x4600 * x3942;
  const amrex::Real x9725 = x4514 * x3757;
  const amrex::Real x9726 = x4514 * x3756;
  const amrex::Real x9727 = x6207 * x3517;
  const amrex::Real x9728 = x6207 * x3504;
  const amrex::Real x9729 = -x9725 + x9726 + x9727 - x9728;
  const amrex::Real x9730 = x4767 * x4114;
  const amrex::Real x9731 = x4620 * x3943;
  const amrex::Real x9732 = x4517 * x3832;
  const amrex::Real x9733 = x4517 * x3831;
  const amrex::Real x9734 = x6131 * x3536;
  const amrex::Real x9735 = x4620 * x3944;
  const amrex::Real x9736 = x4542 * x3832;
  const amrex::Real x9737 = x4542 * x3831;
  const amrex::Real x9738 = x6131 * x3548;
  const amrex::Real x9739 = x4539 * x3832;
  const amrex::Real x9740 = x6112 * x3548;
  const amrex::Real x9741 = x4723 * x4004;
  const amrex::Real x9742 = x4723 * x4005;
  const amrex::Real x9743 = x4547 * x3758;
  const amrex::Real x9744 = x4544 * x3832;
  const amrex::Real x9745 = x4723 * x4062;
  const amrex::Real x9746 = x4547 * x3759;
  const amrex::Real x9747 = x4539 * x3831;
  const amrex::Real x9748 = x4726 * x4004;
  const amrex::Real x9749 = x4544 * x3831;
  const amrex::Real x9750 = x4726 * x4005;
  const amrex::Real x9751 = x6112 * x3536;
  const amrex::Real x9752 = x4636 * x3944;
  const amrex::Real x9753 = x4723 * x4063;
  const amrex::Real x9754 = x4638 * x3944;
  const amrex::Real x9755 = x4638 * x3943;
  const amrex::Real x9756 = x4636 * x3943;
  const amrex::Real x9757 = x4522 * x3831;
  const amrex::Real x9758 = x4522 * x3832;
  const amrex::Real x9759 = -x9757 + x9758;
  const amrex::Real x9760 = x4550 * x3831;
  const amrex::Real x9761 = x4550 * x3832;
  const amrex::Real x9762 = -x9760 + x9761;
  const amrex::Real x9763 = x4742 * x4004;
  const amrex::Real x9764 = x4742 * x4005;
  const amrex::Real x9765 = x4629 * x3943;
  const amrex::Real x9766 = x4629 * x3944;
  const amrex::Real x9767 = x9763 - x9764 + x9765 - x9766 + x4749 * x4344;
  const amrex::Real x9768 = x4775 * x4166;
  const amrex::Real x9769 = x9768 + x4782 * x4216;
  const amrex::Real x9770 = x4763 * x4344;
  const amrex::Real x9771 = x4760 * x4062;
  const amrex::Real x9772 = x4760 * x4063;
  const amrex::Real x9773 = x7100 + x9770 - x9771 + x9772;
  const amrex::Real x9774 = x4721 * x4004;
  const amrex::Real x9775 = x4745 * x4063;
  const amrex::Real x9776 = x4745 * x4062;
  const amrex::Real x9777 = x4721 * x4005;
  const amrex::Real x9778 = x9774 + x9775 - x9776 - x9777 + x4769 * x4114;
  const amrex::Real x9779 = x4752 * x4344;
  const amrex::Real x9780 = x4772 * x4114;
  const amrex::Real x9781 = x9514 + x9779 + x9780 + x4779 * x4166;
  const amrex::Real x9782 = x6154 * x3548;
  const amrex::Real x9783 = x6154 * x3536;
  const amrex::Real x9784 = x4506 * x3759;
  const amrex::Real x9785 = x4506 * x3758;
  const amrex::Real x9786 = x9782 - x9783 - x9784 + x9785;
  const amrex::Real x9787 = x4582 * x3944;
  const amrex::Real x9788 = x4582 * x3943;
  const amrex::Real x9789 = -x9787 + x9788;
  const amrex::Real x9790 = x4508 * x3758 - x4508 * x3759;
  const amrex::Real x9791 = x4576 * x3944;
  const amrex::Real x9792 = x4576 * x3943;
  const amrex::Real x9793 = -x9791 + x9792 - x4756 * x4062 + x4756 * x4063;
  const amrex::Real x9794 = x4739 * x4004 - x4739 * x4005;
  const amrex::Real x9795 = -x4553 * x3831 + x4553 * x3832;
  const amrex::Real x9796 =
    x9795 - x4569 * x3831 + x4569 * x3832 - x4571 * x3831 + x4571 * x3832;
  const amrex::Real x9797 = x6192 * x3536;
  const amrex::Real x9798 = x4561 * x3831;
  const amrex::Real x9799 = x4557 * x3759;
  const amrex::Real x9800 = x4561 * x3832;
  const amrex::Real x9801 = x4557 * x3758;
  const amrex::Real x9802 = x6192 * x3548;
  const amrex::Real x9803 = -x9797 - x9798 - x9799 + x9800 + x9801 + x9802;
  const amrex::Real x9804 = x4555 * x3758 - x4555 * x3759;
  const amrex::Real x9805 = x5061 * x3536;
  const amrex::Real x9806 = x4512 * x3759;
  const amrex::Real x9807 = x4512 * x3758;
  const amrex::Real x9808 = x5061 * x3548;
  const amrex::Real x9809 =
    -x9805 - x9806 + x9807 + x9808 + x4600 * x3943 - x4600 * x3944;
  const amrex::Real x9810 = x4514 * x3758;
  const amrex::Real x9811 = x4514 * x3759;
  const amrex::Real x9812 = x6207 * x3548;
  const amrex::Real x9813 = x6207 * x3536;
  const amrex::Real x9814 = x9810 - x9811 + x9812 - x9813;
  const amrex::Real x9815 = x6665 + x7093;
  const amrex::Real x9816 = x4620 * x3946;
  const amrex::Real x9817 = x4517 * x3834;
  const amrex::Real x9818 = x4547 * x3760;
  const amrex::Real x9819 = x4517 * x3833;
  const amrex::Real x9820 = x4542 * x3833;
  const amrex::Real x9821 = x4726 * x4007;
  const amrex::Real x9822 = x4539 * x3834;
  const amrex::Real x9823 = x4539 * x3833;
  const amrex::Real x9824 = x6112 * x3564;
  const amrex::Real x9825 = x6131 * x3580;
  const amrex::Real x9826 = x6131 * x3564;
  const amrex::Real x9827 = x4636 * x3946;
  const amrex::Real x9828 = x4723 * x4006;
  const amrex::Real x9829 = x4544 * x3833;
  const amrex::Real x9830 = x4723 * x4007;
  const amrex::Real x9831 = x4638 * x3946;
  const amrex::Real x9832 = x4547 * x3761;
  const amrex::Real x9833 = x6112 * x3580;
  const amrex::Real x9834 = x4544 * x3834;
  const amrex::Real x9835 = x4620 * x3945;
  const amrex::Real x9836 = x4542 * x3834;
  const amrex::Real x9837 = x4726 * x4006;
  const amrex::Real x9838 = x4723 * x4064;
  const amrex::Real x9839 = x4638 * x3945;
  const amrex::Real x9840 = x4636 * x3945;
  const amrex::Real x9841 = x4522 * x3833;
  const amrex::Real x9842 = x4522 * x3834;
  const amrex::Real x9843 = -x9841 + x9842;
  const amrex::Real x9844 = x4550 * x3833;
  const amrex::Real x9845 = x4550 * x3834;
  const amrex::Real x9846 = -x9844 + x9845;
  const amrex::Real x9847 = x4786 * x4367;
  const amrex::Real x9848 = x4775 * x4167;
  const amrex::Real x9849 = x9847 + x9848 + x4782 * x4217;
  const amrex::Real x9850 = x4763 * x4345;
  const amrex::Real x9851 = x4760 * x4064;
  const amrex::Real x9852 = x9850 + x9851 + x4795 * x4367;
  const amrex::Real x9853 = x4742 * x4006;
  const amrex::Real x9854 = x4742 * x4007;
  const amrex::Real x9855 = x4629 * x3945;
  const amrex::Real x9856 = x4629 * x3946;
  const amrex::Real x9857 = x9853 - x9854 + x9855 - x9856 + x4749 * x4345;
  const amrex::Real x9858 = x4790 * x4367;
  const amrex::Real x9859 = x4767 * x4115;
  const amrex::Real x9860 = x9514 + x9858 + x9859;
  const amrex::Real x9861 = x4745 * x4064;
  const amrex::Real x9862 = x4721 * x4006;
  const amrex::Real x9863 = x4721 * x4007;
  const amrex::Real x9864 = x9861 + x9862 - x9863 + x4769 * x4115;
  const amrex::Real x9865 = x4772 * x4115;
  const amrex::Real x9866 = x4752 * x4345;
  const amrex::Real x9867 = x9865 + x9866 + x4779 * x4167;
  const amrex::Real x9868 = x6154 * x3580;
  const amrex::Real x9869 = x6154 * x3564;
  const amrex::Real x9870 = x4506 * x3761;
  const amrex::Real x9871 = x4506 * x3760;
  const amrex::Real x9872 = x9868 - x9869 - x9870 + x9871;
  const amrex::Real x9873 = x4582 * x3945;
  const amrex::Real x9874 = x4582 * x3946;
  const amrex::Real x9875 = x9873 - x9874;
  const amrex::Real x9876 = x4508 * x3760 - x4508 * x3761;
  const amrex::Real x9877 = x4576 * x3946;
  const amrex::Real x9878 = x4576 * x3945;
  const amrex::Real x9879 = -x9877 + x9878 + x4756 * x4064;
  const amrex::Real x9880 = x4739 * x4006 - x4739 * x4007;
  const amrex::Real x9881 = -x4553 * x3833 + x4553 * x3834;
  const amrex::Real x9882 =
    x9881 - x4569 * x3833 + x4569 * x3834 - x4571 * x3833 + x4571 * x3834;
  const amrex::Real x9883 = x4555 * x3760 - x4555 * x3761;
  const amrex::Real x9884 = x6192 * x3580;
  const amrex::Real x9885 = x6192 * x3564;
  const amrex::Real x9886 = x4561 * x3834;
  const amrex::Real x9887 = x4557 * x3761;
  const amrex::Real x9888 = x4557 * x3760;
  const amrex::Real x9889 = x4561 * x3833;
  const amrex::Real x9890 = x9884 - x9885 + x9886 - x9887 + x9888 - x9889;
  const amrex::Real x9891 = x4512 * x3760;
  const amrex::Real x9892 = x5061 * x3564;
  const amrex::Real x9893 = x5061 * x3580;
  const amrex::Real x9894 = x4512 * x3761;
  const amrex::Real x9895 =
    x9891 - x9892 + x9893 - x9894 + x4600 * x3945 - x4600 * x3946;
  const amrex::Real x9896 = x4514 * x3761;
  const amrex::Real x9897 = x6207 * x3564;
  const amrex::Real x9898 = x6207 * x3580;
  const amrex::Real x9899 = x4514 * x3760;
  const amrex::Real x9900 = -x9896 - x9897 + x9898 + x9899;
  const amrex::Real x9901 = x6185 + x6732;
  const amrex::Real x9902 = x8275 + x9549 + x9901;
  const amrex::Real x9903 = x4620 * x3948;
  const amrex::Real x9904 = x4517 * x3836;
  const amrex::Real x9905 = x4547 * x3762;
  const amrex::Real x9906 = x6112 * x3593;
  const amrex::Real x9907 = x4620 * x3947;
  const amrex::Real x9908 = x4542 * x3836;
  const amrex::Real x9909 = x4723 * x4008;
  const amrex::Real x9910 = x4539 * x3836;
  const amrex::Real x9911 = x4723 * x4009;
  const amrex::Real x9912 = x6131 * x3593;
  const amrex::Real x9913 = x6131 * x3607;
  const amrex::Real x9914 = x4539 * x3835;
  const amrex::Real x9915 = x4726 * x4009;
  const amrex::Real x9916 = x4544 * x3836;
  const amrex::Real x9917 = x4636 * x3948;
  const amrex::Real x9918 = x4723 * x4065;
  const amrex::Real x9919 = x4544 * x3835;
  const amrex::Real x9920 = x4517 * x3835;
  const amrex::Real x9921 = x4542 * x3835;
  const amrex::Real x9922 = x4726 * x4008;
  const amrex::Real x9923 = x4547 * x3763;
  const amrex::Real x9924 = x6112 * x3607;
  const amrex::Real x9925 = x4636 * x3947;
  const amrex::Real x9926 = x4638 * x3947;
  const amrex::Real x9927 = x4638 * x3948;
  const amrex::Real x9928 = x4550 * x3835;
  const amrex::Real x9929 = x4550 * x3836;
  const amrex::Real x9930 = -x9928 + x9929;
  const amrex::Real x9931 = x4522 * x3835;
  const amrex::Real x9932 = x4522 * x3836;
  const amrex::Real x9933 = -x9931 + x9932;
  const amrex::Real x9934 = x4767 * x4116;
  const amrex::Real x9935 = x4790 * x4368;
  const amrex::Real x9936 = x6672 * x4748;
  const amrex::Real x9937 = x9934 + x9935 + x9936;
  const amrex::Real x9938 = x4763 * x4346;
  const amrex::Real x9939 = x4760 * x4065;
  const amrex::Real x9940 = x9938 + x9939 + x4795 * x4368;
  const amrex::Real x9941 = x4786 * x4368;
  const amrex::Real x9942 = x4775 * x4168;
  const amrex::Real x9943 = x9941 + x9942 + x4782 * x4218;
  const amrex::Real x9944 = x4742 * x4008;
  const amrex::Real x9945 = x4629 * x3947;
  const amrex::Real x9946 = x4629 * x3948;
  const amrex::Real x9947 = x4742 * x4009;
  const amrex::Real x9948 = x9944 + x9945 - x9946 - x9947 + x4749 * x4346;
  const amrex::Real x9949 = x4721 * x4008;
  const amrex::Real x9950 = x4721 * x4009;
  const amrex::Real x9951 = x4745 * x4065;
  const amrex::Real x9952 = x9949 - x9950 + x9951 + x4769 * x4116;
  const amrex::Real x9953 = x4752 * x4346;
  const amrex::Real x9954 = x4772 * x4116;
  const amrex::Real x9955 = x9953 + x9954 + x4779 * x4168;
  const amrex::Real x9956 = x6154 * x3593;
  const amrex::Real x9957 = x4506 * x3763;
  const amrex::Real x9958 = x6154 * x3607;
  const amrex::Real x9959 = x4506 * x3762;
  const amrex::Real x9960 = -x9956 - x9957 + x9958 + x9959;
  const amrex::Real x9961 = x4582 * x3948;
  const amrex::Real x9962 = x4582 * x3947;
  const amrex::Real x9963 = -x9961 + x9962;
  const amrex::Real x9964 = x4508 * x3762 - x4508 * x3763;
  const amrex::Real x9965 = x4576 * x3947;
  const amrex::Real x9966 = x4576 * x3948;
  const amrex::Real x9967 = x9965 - x9966 + x4756 * x4065;
  const amrex::Real x9968 = x4739 * x4008 - x4739 * x4009;
  const amrex::Real x9969 = -x4553 * x3835 + x4553 * x3836;
  const amrex::Real x9970 =
    x9969 - x4569 * x3835 + x4569 * x3836 - x4571 * x3835 + x4571 * x3836;
  const amrex::Real x9971 = x6192 * x3607;
  const amrex::Real x9972 = x6192 * x3593;
  const amrex::Real x9973 = x4561 * x3836;
  const amrex::Real x9974 = x4561 * x3835;
  const amrex::Real x9975 = x4557 * x3763;
  const amrex::Real x9976 = x4557 * x3762;
  const amrex::Real x9977 = x9971 - x9972 + x9973 - x9974 - x9975 + x9976;
  const amrex::Real x9978 = x4555 * x3762 - x4555 * x3763;
  const amrex::Real x9979 = x4512 * x3763;
  const amrex::Real x9980 = x4512 * x3762;
  const amrex::Real x9981 = x5061 * x3607;
  const amrex::Real x9982 = x5061 * x3593;
  const amrex::Real x9983 =
    -x9979 + x9980 + x9981 - x9982 + x4600 * x3947 - x4600 * x3948;
  const amrex::Real x9984 = x4514 * x3763;
  const amrex::Real x9985 = x6207 * x3593;
  const amrex::Real x9986 = x6207 * x3607;
  const amrex::Real x9987 = x4514 * x3762;
  const amrex::Real x9988 = -x9984 - x9985 + x9986 + x9987;
  const amrex::Real x9989 = x4517 * x3838;
  const amrex::Real x9990 = x4620 * x3950;
  const amrex::Real x9991 = x4638 * x3949;
  const amrex::Real x9992 = x4620 * x3949;
  const amrex::Real x9993 = x4544 * x3837;
  const amrex::Real x9994 = x4636 * x3950;
  const amrex::Real x9995 = x4542 * x3838;
  const amrex::Real x9996 = x4539 * x3838;
  const amrex::Real x9997 = x6112 * x3635;
  const amrex::Real x9998 = x4542 * x3837;
  const amrex::Real x9999 = x6131 * x3635;
  const amrex::Real x10000 = x4723 * x4010;
  const amrex::Real x10001 = x4636 * x3949;
  const amrex::Real x10002 = x4544 * x3838;
  const amrex::Real x10003 = x4723 * x4066;
  const amrex::Real x10004 = x4547 * x3764;
  const amrex::Real x10005 = x4547 * x3765;
  const amrex::Real x10006 = x6112 * x3621;
  const amrex::Real x10007 = x6131 * x3621;
  const amrex::Real x10008 = x4517 * x3837;
  const amrex::Real x10009 = x4726 * x4010;
  const amrex::Real x10010 = x4638 * x3950;
  const amrex::Real x10011 = x4539 * x3837;
  const amrex::Real x10012 = x4522 * x3837;
  const amrex::Real x10013 = x4522 * x3838;
  const amrex::Real x10014 = -x10012 + x10013;
  const amrex::Real x10015 = x4550 * x3837;
  const amrex::Real x10016 = x4550 * x3838;
  const amrex::Real x10017 = -x10015 + x10016;
  const amrex::Real x10018 = x4790 * x4369;
  const amrex::Real x10019 = x4767 * x4117;
  const amrex::Real x10020 = x10018 + x10019;
  const amrex::Real x10021 = x4763 * x4347;
  const amrex::Real x10022 = x4760 * x4066;
  const amrex::Real x10023 = x10021 + x10022 + x4795 * x4369;
  const amrex::Real x10024 = x4742 * x4010;
  const amrex::Real x10025 = x4629 * x3949;
  const amrex::Real x10026 = x4629 * x3950;
  const amrex::Real x10027 = x10024 + x10025 - x10026 + x6350 + x4749 * x4347;
  const amrex::Real x10028 = x4772 * x4117;
  const amrex::Real x10029 = x4752 * x4347;
  const amrex::Real x10030 = x10028 + x10029 + x4779 * x4169;
  const amrex::Real x10031 = x4721 * x4010;
  const amrex::Real x10032 = x4745 * x4066;
  const amrex::Real x10033 = x10031 + x10032 + x4769 * x4117;
  const amrex::Real x10034 = x4786 * x4369;
  const amrex::Real x10035 = x4775 * x4169;
  const amrex::Real x10036 = x10034 + x10035 + x9514 + x4782 * x4219;
  const amrex::Real x10037 = x4506 * x3765;
  const amrex::Real x10038 = x4506 * x3764;
  const amrex::Real x10039 = x6154 * x3635;
  const amrex::Real x10040 = x6154 * x3621;
  const amrex::Real x10041 = -x10037 + x10038 + x10039 - x10040;
  const amrex::Real x10042 = x4582 * x3950;
  const amrex::Real x10043 = x4582 * x3949;
  const amrex::Real x10044 = -x10042 + x10043;
  const amrex::Real x10045 = x4508 * x3764 - x4508 * x3765;
  const amrex::Real x10046 = x4576 * x3950;
  const amrex::Real x10047 = x4576 * x3949;
  const amrex::Real x10048 = -x10046 + x10047 + x4756 * x4066;
  const amrex::Real x10049 = x6188 + x4739 * x4010;
  const amrex::Real x10050 = -x4553 * x3837 + x4553 * x3838;
  const amrex::Real x10051 =
    x10050 - x4569 * x3837 + x4569 * x3838 - x4571 * x3837 + x4571 * x3838;
  const amrex::Real x10052 = x6192 * x3635;
  const amrex::Real x10053 = x4561 * x3838;
  const amrex::Real x10054 = x4557 * x3764;
  const amrex::Real x10055 = x4561 * x3837;
  const amrex::Real x10056 = x4557 * x3765;
  const amrex::Real x10057 = x6192 * x3621;
  const amrex::Real x10058 =
    x10052 + x10053 + x10054 - x10055 - x10056 - x10057;
  const amrex::Real x10059 = x4555 * x3764 - x4555 * x3765;
  const amrex::Real x10060 = x4512 * x3765;
  const amrex::Real x10061 = x4512 * x3764;
  const amrex::Real x10062 = x5061 * x3635;
  const amrex::Real x10063 = x5061 * x3621;
  const amrex::Real x10064 =
    -x10060 + x10061 + x10062 - x10063 + x6340 + x4600 * x3949 - x4600 * x3950;
  const amrex::Real x10065 = x4514 * x3764;
  const amrex::Real x10066 = x6207 * x3621;
  const amrex::Real x10067 = x4514 * x3765;
  const amrex::Real x10068 = x6207 * x3635;
  const amrex::Real x10069 = x10065 - x10066 - x10067 + x10068 + x6257;
  const amrex::Real x10070 = x4550 * x3839;
  const amrex::Real x10071 = x4522 * x3839;
  const amrex::Real x10072 = x4553 * x3839;
  const amrex::Real x10073 = x4508 * x3766;
  const amrex::Real x10074 = x4555 * x3766;
  const amrex::Real x10075 = x4620 * x3951;
  const amrex::Real x10076 = x4517 * x3839;
  const amrex::Real x10077 = x4636 * x3951;
  const amrex::Real x10078 = x4723 * x4011;
  const amrex::Real x10079 = x6112 * x3651;
  const amrex::Real x10080 = x4539 * x3839;
  const amrex::Real x10081 = x6131 * x3651;
  const amrex::Real x10082 = x4544 * x3839;
  const amrex::Real x10083 = x4547 * x3766;
  const amrex::Real x10084 = x4542 * x3839;
  const amrex::Real x10085 = x4723 * x4067;
  const amrex::Real x10086 = x4638 * x3951;
  const amrex::Real x10087 = x4726 * x4011;
  const amrex::Real x10088 = x4790 * x4370;
  const amrex::Real x10089 = x4767 * x4118;
  const amrex::Real x10090 = x10088 + x10089;
  const amrex::Real x10091 = x4786 * x4370;
  const amrex::Real x10092 = x4775 * x4170;
  const amrex::Real x10093 = x10091 + x10092 + x4782 * x4220;
  const amrex::Real x10094 = x4763 * x4348;
  const amrex::Real x10095 = x4760 * x4067;
  const amrex::Real x10096 = x10094 + x10095 + x4795 * x4370;
  const amrex::Real x10097 = x4742 * x4011;
  const amrex::Real x10098 = x4629 * x3951;
  const amrex::Real x10099 = x10097 + x10098 + x4749 * x4348;
  const amrex::Real x10100 = x4752 * x4348;
  const amrex::Real x10101 = x4772 * x4118;
  const amrex::Real x10102 = x10100 + x10101 + x4779 * x4170;
  const amrex::Real x10103 = x4721 * x4011;
  const amrex::Real x10104 = x4745 * x4067;
  const amrex::Real x10105 = x10103 + x10104 + x4769 * x4118;
  const amrex::Real x10106 = x6154 * x3651;
  const amrex::Real x10107 = x4506 * x3766;
  const amrex::Real x10108 = x10106 + x10107;
  const amrex::Real x10109 = x4582 * x3951;
  const amrex::Real x10110 = x10109 + x6159;
  const amrex::Real x10111 = x4576 * x3951;
  const amrex::Real x10112 = x10111 + x6186 + x4756 * x4067;
  const amrex::Real x10113 = x6188 + x4739 * x4011;
  const amrex::Real x10114 = x4569 * x3839 + x4571 * x3839;
  const amrex::Real x10115 = x6192 * x3651;
  const amrex::Real x10116 = x4561 * x3839;
  const amrex::Real x10117 = x4557 * x3766;
  const amrex::Real x10118 = x10115 + x10116 + x10117;
  const amrex::Real x10119 = x5061 * x3651;
  const amrex::Real x10120 = x4512 * x3766;
  const amrex::Real x10121 = x10119 + x10120 + x4600 * x3951;
  const amrex::Real x10122 = x6207 * x3651;
  const amrex::Real x10123 = x4514 * x3766;
  const amrex::Real x10124 = x10122 + x10123;
  const amrex::Real x10125 = x6200 + x6258 + x6346;
  const amrex::Real x10126 = x4522 * x3840;
  const amrex::Real x10127 = x4550 * x3840;
  const amrex::Real x10128 = x4553 * x3840;
  const amrex::Real x10129 = x4767 * x4119;
  const amrex::Real x10130 = x4760 * x4068;
  const amrex::Real x10131 = x4508 * x3767;
  const amrex::Real x10132 = x4517 * x3840;
  const amrex::Real x10133 = x4620 * x3952;
  const amrex::Real x10134 = x4723 * x4068;
  const amrex::Real x10135 = x4542 * x3840;
  const amrex::Real x10136 = x4544 * x3840;
  const amrex::Real x10137 = x4636 * x3952;
  const amrex::Real x10138 = 16000000.0 * x3767;
  const amrex::Real x10139 = x4546 * x10138;
  const amrex::Real x10140 = x4723 * x4012;
  const amrex::Real x10141 = x4539 * x3840;
  const amrex::Real x10142 = x4726 * x4012;
  const amrex::Real x10143 = x6131 * x3664;
  const amrex::Real x10144 = x6112 * x3664;
  const amrex::Real x10145 = x4638 * x3952;
  const amrex::Real x10146 = x4742 * x4012;
  const amrex::Real x10147 = x4629 * x3952;
  const amrex::Real x10148 = x10146 + x10147 + x6351;
  const amrex::Real x10149 = x4775 * x4171;
  const amrex::Real x10150 = x10149 + x4782 * x4221;
  const amrex::Real x10151 = x4772 * x4119;
  const amrex::Real x10152 = x10151 + x4779 * x4171;
  const amrex::Real x10153 = x4745 * x4068;
  const amrex::Real x10154 = x4721 * x4012;
  const amrex::Real x10155 = x10153 + x10154 + x4769 * x4119;
  const amrex::Real x10156 = x6154 * x3664;
  const amrex::Real x10157 = x4506 * x3767;
  const amrex::Real x10158 = x10156 + x10157;
  const amrex::Real x10159 = x4582 * x3952;
  const amrex::Real x10160 = x10159 + x6159;
  const amrex::Real x10161 = x4576 * x3952;
  const amrex::Real x10162 = x10161 + x6186 + x4756 * x4068;
  const amrex::Real x10163 = x6188 + x4739 * x4012;
  const amrex::Real x10164 = x6190 + x4569 * x3840 + x4571 * x3840;
  const amrex::Real x10165 = x6192 * x3664;
  const amrex::Real x10166 = x4557 * x3767;
  const amrex::Real x10167 = x4561 * x3840;
  const amrex::Real x10168 = x10165 + x10166 + x10167;
  const amrex::Real x10169 = x6265 + x4555 * x3767;
  const amrex::Real x10170 = x4512 * x3767;
  const amrex::Real x10171 = x5061 * x3664;
  const amrex::Real x10172 = x10170 + x10171 + x6345 + x4600 * x3952;
  const amrex::Real x10173 = x6207 * x3664;
  const amrex::Real x10174 = x4514 * x3767;
  const amrex::Real x10175 = x10173 + x10174 + x6258;
  const amrex::Real x10176 =
    x6263 + x6264 + x6266 + x6272 + x6274 + x6275 + x9815;
  const amrex::Real x10177 = x4522 * x3841;
  const amrex::Real x10178 = x4550 * x3841;
  const amrex::Real x10179 = x4553 * x3841;
  const amrex::Real x10180 = x4629 * x3953;
  const amrex::Real x10181 = x4576 * x3953;
  const amrex::Real x10182 = x4555 * x3768;
  const amrex::Real x10183 = x4620 * x3953;
  const amrex::Real x10184 = x4517 * x3841;
  const amrex::Real x10185 = x4539 * x3841;
  const amrex::Real x10186 = x6131 * x3668;
  const amrex::Real x10187 = x6112 * x3668;
  const amrex::Real x10188 = x4544 * x3841;
  const amrex::Real x10189 = x4636 * x3953;
  const amrex::Real x10190 = x4542 * x3841;
  const amrex::Real x10191 = x4638 * x3953;
  const amrex::Real x10192 = x4547 * x3768;
  const amrex::Real x10193 = x6154 * x3668;
  const amrex::Real x10194 = x4506 * x3768;
  const amrex::Real x10195 = x10193 + x10194;
  const amrex::Real x10196 = x4582 * x3953;
  const amrex::Real x10197 = x10196 + x6159;
  const amrex::Real x10198 = x6347 + x4508 * x3768;
  const amrex::Real x10199 = x6190 + x4569 * x3841 + x4571 * x3841;
  const amrex::Real x10200 = x4561 * x3841;
  const amrex::Real x10201 = x6192 * x3668;
  const amrex::Real x10202 = x4557 * x3768;
  const amrex::Real x10203 = x10200 + x10201 + x10202;
  const amrex::Real x10204 = x4512 * x3768;
  const amrex::Real x10205 = x5061 * x3668;
  const amrex::Real x10206 = x10204 + x10205 + x4600 * x3953;
  const amrex::Real x10207 = x6207 * x3668;
  const amrex::Real x10208 = x4514 * x3768;
  const amrex::Real x10209 = x10207 + x10208;
  const amrex::Real x10210 = x4522 * x3842;
  const amrex::Real x10211 = x4553 * x3842;
  const amrex::Real x10212 = x4517 * x3842;
  const amrex::Real x10213 = x6112 * x3677;
  const amrex::Real x10214 = x6131 * x3674;
  const amrex::Real x10215 = x4544 * x3842;
  const amrex::Real x10216 = x4542 * x3842;
  const amrex::Real x10217 = x4547 * x3770;
  const amrex::Real x10218 = x4547 * x3769;
  const amrex::Real x10219 = x6131 * x3677;
  const amrex::Real x10220 = x4539 * x3842;
  const amrex::Real x10221 = x6112 * x3674;
  const amrex::Real x10222 = x4550 * x3842;
  const amrex::Real x10223 = x10222 + x6261;
  const amrex::Real x10224 = x4506 * x3769;
  const amrex::Real x10225 = x4506 * x3770;
  const amrex::Real x10226 = x6154 * x3674;
  const amrex::Real x10227 = x6154 * x3677;
  const amrex::Real x10228 = x10224 - x10225 - x10226 + x10227 + x6318;
  const amrex::Real x10229 = x4508 * x3769 - x4508 * x3770;
  const amrex::Real x10230 = x4569 * x3842 + x4571 * x3842;
  const amrex::Real x10231 = x4555 * x3769 - x4555 * x3770;
  const amrex::Real x10232 = x6192 * x3674;
  const amrex::Real x10233 = x6192 * x3677;
  const amrex::Real x10234 = x4557 * x3770;
  const amrex::Real x10235 = x4561 * x3842;
  const amrex::Real x10236 = x4557 * x3769;
  const amrex::Real x10237 =
    -x10232 + x10233 - x10234 + x10235 + x10236 + x6199;
  const amrex::Real x10238 = x4512 * x3769;
  const amrex::Real x10239 = x4512 * x3770;
  const amrex::Real x10240 = x5061 * x3677;
  const amrex::Real x10241 = x5061 * x3674;
  const amrex::Real x10242 = x10238 - x10239 + x10240 - x10241;
  const amrex::Real x10243 = x4514 * x3770;
  const amrex::Real x10244 = x4514 * x3769;
  const amrex::Real x10245 = x6207 * x3674;
  const amrex::Real x10246 = x6207 * x3677;
  const amrex::Real x10247 = -x10243 + x10244 - x10245 + x10246;
  const amrex::Real x10248 = x4819 * x3891;
  const amrex::Real x10249 = x4815 * x3891;
  const amrex::Real x10250 = x4856 * x3955;
  const amrex::Real x10251 = x4854 * x4018;
  const amrex::Real x10252 = x4854 * x3955;
  const amrex::Real x10253 = x4806 * x3779;
  const amrex::Real x10254 = -956.111665028967 * invT + x4913;
  const amrex::Real x10255 = 4.08 * exp(x10254 - x1257);
  const amrex::Real x10256 = x10255 * sc[12];
  const amrex::Real x10257 = x2033 * x10256;
  const amrex::Real x10258 = x1814 * x10256;
  const amrex::Real x10259 = -x10258;
  const amrex::Real x10260 = x10257 + x10259;
  const amrex::Real x10261 = x4824 * x3894;
  const amrex::Real x10262 = -x10261;
  const amrex::Real x10263 = x4824 * x3891;
  const amrex::Real x10264 = x10262 + x10263;
  const amrex::Real x10265 = x4854 * x3958;
  const amrex::Real x10266 = x4856 * x3958;
  const amrex::Real x10267 = -x10266;
  const amrex::Real x10268 = x4836 * x3863;
  const amrex::Real x10269 = x4851 * x3863;
  const amrex::Real x10270 = x4847 * x3863;
  const amrex::Real x10271 = x4817 * x3846;
  const amrex::Real x10272 = x4830 * x3846;
  const amrex::Real x10273 = pow(sc[2], 2) * x6590;
  const amrex::Real x10274 = exp(x4565 - (2.0 * g_RT[2] + x1625)) * refC;
  const amrex::Real x10275 = sc[8] * x10274;
  const amrex::Real x10276 = -2.79 * tc[0];
  const amrex::Real x10277 =
    1.0 + 86123348.0176211 * exp(-909.312515109128 * invT + x10276) * x6749;
  const amrex::Real x10278 = x6749 / pow(x10277, 2);
  const amrex::Real x10279 = -(x130 + x6834);
  const amrex::Real x10280 = -3018.29356149671 * invT - 5.58 * tc[0];
  const amrex::Real x10281 = exp(x10279 + x10280) * refC * sc[13];
  const amrex::Real x10282 = x10281 * x10278;
  const amrex::Real x10283 = 1.0102268722467e+20 * x10282;
  const amrex::Real x10284 = sc[2] * sc[12];
  const amrex::Real x10285 = exp(x10280) * x10284;
  const amrex::Real x10286 = x10278 * x10285;
  const amrex::Real x10287 = 1.0102268722467e+20 * x10286;
  const amrex::Real x10288 = -2108.98104638758 * invT + x10276;
  const amrex::Real x10289 = exp(x10288);
  const amrex::Real x10290 = x10289 * x10284;
  const amrex::Real x10291 = pow(x10277, -1);
  const amrex::Real x10292 = 1173000000000.0 * x10291;
  const amrex::Real x10293 = x10292 * x10290;
  const amrex::Real x10294 = exp(x10279 + x10288) * refC;
  const amrex::Real x10295 = x10294 * sc[13];
  const amrex::Real x10296 = x10292 * x10295;
  const amrex::Real x10297 = -x10283 + x10287 - x10293 + x10296;
  const amrex::Real x10298 =
    -240000.0 * x10273 + 240000.0 * x10275 + x10297 + x6594;
  const amrex::Real x10299 = -x10271 - x10272 + x10298;
  const amrex::Real x10300 = x10268 + x10269 - x10270 + x10299;
  const amrex::Real x10301 = x10265 + x10267 + x10300;
  const amrex::Real x10302 = x4815 * x3894;
  const amrex::Real x10303 = -x10302;
  const amrex::Real x10304 = x4819 * x3894;
  const amrex::Real x10305 = x4553 * x3706;
  const amrex::Real x10306 = x4854 * x4015;
  const amrex::Real x10307 = -x6272;
  const amrex::Real x10308 = -x6274;
  const amrex::Real x10309 = x4802 * x3774;
  const amrex::Real x10310 = x10307 + x10308 + x10309;
  const amrex::Real x10311 = x10303 + x10304 + x10305 + x10306 + x10310 + x6267;
  const amrex::Real x10312 = x4806 * x3774;
  const amrex::Real x10313 = -x10312;
  const amrex::Real x10314 = x4843 * x3863;
  const amrex::Real x10315 = 0.384 * exp(-x1253 + x4809);
  const amrex::Real x10316 = x10315 * sc[11];
  const amrex::Real x10317 = x1814 * x10316;
  const amrex::Real x10318 = x4811 * x3774;
  const amrex::Real x10319 = -x10318;
  const amrex::Real x10320 = -x10317 + x10319;
  const amrex::Real x10321 = x10314 + x10320;
  const amrex::Real x10322 = x10313 + x10321;
  const amrex::Real x10323 = x2033 * x10316;
  const amrex::Real x10324 = x4811 * x3779;
  const amrex::Real x10325 = x10323 + x10324;
  const amrex::Real x10326 = x4836 * x3864;
  const amrex::Real x10327 = x4851 * x3864;
  const amrex::Real x10328 = 80.0 * x6759;
  const amrex::Real x10329 = x4854 * x3961;
  const amrex::Real x10330 = x4819 * x3898;
  const amrex::Real x10331 = x4854 * x3960;
  const amrex::Real x10332 = x4856 * x3960;
  const amrex::Real x10333 = x4856 * x3961;
  const amrex::Real x10334 = x4817 * x3847;
  const amrex::Real x10335 = x4847 * x3864;
  const amrex::Real x10336 = x4854 * x4020;
  const amrex::Real x10337 = x4830 * x3847;
  const amrex::Real x10338 = x4815 * x3899;
  const amrex::Real x10339 = x4854 * x4019;
  const amrex::Real x10340 = x4815 * x3898;
  const amrex::Real x10341 = x4819 * x3899;
  const amrex::Real x10342 = x2071 * x10256;
  const amrex::Real x10343 = x2106 * x10256;
  const amrex::Real x10344 = -x10342 + x10343;
  const amrex::Real x10345 = x4824 * x3899;
  const amrex::Real x10346 = x4824 * x3898;
  const amrex::Real x10347 = -x10345 + x10346;
  const amrex::Real x10348 = x4806 * x3780;
  const amrex::Real x10349 = x4806 * x3781;
  const amrex::Real x10350 = -x10348 + x10349;
  const amrex::Real x10351 = x2106 * x10316;
  const amrex::Real x10352 = x4843 * x3864;
  const amrex::Real x10353 = x2071 * x10316;
  const amrex::Real x10354 = x4811 * x3780;
  const amrex::Real x10355 = x4811 * x3781;
  const amrex::Real x10356 = x10351 + x10352 - x10353 - x10354 + x10355;
  const amrex::Real x10357 = 24003.4349588851 * invT;
  const amrex::Real x10358 = 1119000.0 * exp(-x10357 - (x6834 + x859));
  const amrex::Real x10359 = x10358 * sc[13];
  const amrex::Real x10360 = -x10359;
  const amrex::Real x10361 = -1997.77016324474 * invT + x4913;
  const amrex::Real x10362 = 9.63 * exp(x10361);
  const amrex::Real x10363 = sc[7] * x10362;
  const amrex::Real x10364 = -x10363;
  const amrex::Real x10365 = 60000000.0 * x6383;
  const amrex::Real x10366 = -x10365;
  const amrex::Real x10367 = -x5101;
  const amrex::Real x10368 = 1.5 * tc[0];
  const amrex::Real x10369 = -4327.66332592059 * invT + x10368;
  const amrex::Real x10370 = 1020.0 * exp(x10369);
  const amrex::Real x10371 = x10370 * sc[10];
  const amrex::Real x10372 = -x10371;
  const amrex::Real x10373 = -x7081;
  const amrex::Real x10374 = x6749 * x10292;
  const amrex::Real x10375 = x10374 * x10289;
  const amrex::Real x10376 = x10375 * sc[12];
  const amrex::Real x10377 = -x10376;
  const amrex::Real x10378 = -x4480;
  const amrex::Real x10379 = x4815 * x3901;
  const amrex::Real x10380 = x4819 * x3901;
  const amrex::Real x10381 = x4856 * x3963;
  const amrex::Real x10382 = x4854 * x3963;
  const amrex::Real x10383 = x4854 * x4022;
  const amrex::Real x10384 = x4854 * x3962;
  const amrex::Real x10385 = 48000000.0 * x1488;
  const amrex::Real x10386 = x4847 * x3865;
  const amrex::Real x10387 = -x7202;
  const amrex::Real x10388 = x4856 * x3962;
  const amrex::Real x10389 = x4854 * x4021;
  const amrex::Real x10390 = 10000000.0 * x1771;
  const amrex::Real x10391 = x4817 * x3848;
  const amrex::Real x10392 = x6519 * x4829;
  const amrex::Real x10393 = 10000000.0 * x6518;
  const amrex::Real x10394 = -x6986;
  const amrex::Real x10395 = -x7071;
  const amrex::Real x10396 = 16040000.0 * x6334;
  const amrex::Real x10397 = x4815 * x3900;
  const amrex::Real x10398 = 48000000.0 * x6624;
  const amrex::Real x10399 = 2.4 * sc[5] + 15.4 * sc[6] + x624;
  const amrex::Real x10400 = x6591 * x10399;
  const amrex::Real x10401 = 96000000.0 * x6164;
  const amrex::Real x10402 = x4830 * x3848;
  const amrex::Real x10403 = 96000000.0 * x6004;
  const amrex::Real x10404 = x4819 * x3900;
  const amrex::Real x10405 = x4836 * x3865;
  const amrex::Real x10406 = 300000.0 * exp(-x1447 + x4834);
  const amrex::Real x10407 = x10406 * sc[17];
  const amrex::Real x10408 = x10405 - x10407;
  const amrex::Real x10409 = x4851 * x3865;
  const amrex::Real x10410 = exp(-x4803);
  const amrex::Real x10411 = 30000000.0 * x10410;
  const amrex::Real x10412 = x10411 * sc[20];
  const amrex::Real x10413 = x10409 - x10412;
  const amrex::Real x10414 = x2141 * x10256;
  const amrex::Real x10415 = 4.08 * exp(x10254);
  const amrex::Real x10416 = x10415 * sc[14];
  const amrex::Real x10417 = x2184 * x10256;
  const amrex::Real x10418 = -x10414 - x10416 + x10417;
  const amrex::Real x10419 = 89.8 * exp(x4822);
  const amrex::Real x10420 = x10419 * sc[16];
  const amrex::Real x10421 = x4824 * x3900;
  const amrex::Real x10422 = x4824 * x3901;
  const amrex::Real x10423 = -x10420 + x10421 - x10422;
  const amrex::Real x10424 = 1061.78716484796 * invT + x4385;
  const amrex::Real x10425 = exp(x10424 - (x6988 + x7111));
  const amrex::Real x10426 = 0.03973 * x10425;
  const amrex::Real x10427 = -x6990 - sc[6] * x10426;
  const amrex::Real x10428 = 2249.3784961471 * invT;
  const amrex::Real x10429 = 26000000.0 * exp(-x10428);
  const amrex::Real x10430 = x10429 * sc[22];
  const amrex::Real x10431 = 2898.52799503519 * invT;
  const amrex::Real x10432 = 15000000.0 * exp(-x10431);
  const amrex::Real x10433 = x10432 * sc[22];
  const amrex::Real x10434 =
    330.0 * exp(202.293099653497 * invT + 1.45 * tc[0]);
  const amrex::Real x10435 = -x10430 - x10433 - x10434 * sc[22];
  const amrex::Real x10436 = 40.0 * x6996;
  const amrex::Real x10437 = -2958.91399493175 * invT + 0.7 * tc[0];
  const amrex::Real x10438 = 180000.0 * exp(x10437);
  const amrex::Real x10439 = x10438 * sc[19];
  const amrex::Real x10440 = 35.0 * exp(489.126599162188 * invT + x6755);
  const amrex::Real x10441 = -x10436 - x10439 - x10440 * sc[19];
  const amrex::Real x10442 = x4806 * x3782;
  const amrex::Real x10443 = 39000000.0 * x10410;
  const amrex::Real x10444 = x10443 * sc[11];
  const amrex::Real x10445 = x4806 * x3784;
  const amrex::Real x10446 = -x10442 - x10444 + x10445;
  const amrex::Real x10447 = 15.1 * exp(x4841);
  const amrex::Real x10448 = x10447 * sc[15];
  const amrex::Real x10449 = x4843 * x3865;
  const amrex::Real x10450 = x2141 * x10316;
  const amrex::Real x10451 = x2184 * x10316;
  const amrex::Real x10452 = exp(x4809);
  const amrex::Real x10453 = x10452 * sc[15];
  const amrex::Real x10454 = x4811 * x3782;
  const amrex::Real x10455 = x4811 * x3784;
  const amrex::Real x10456 =
    -x10448 + x10449 - x10450 + x10451 - 19.584 * x10453 - x10454 + x10455;
  const amrex::Real x10457 = x4836 * x3866;
  const amrex::Real x10458 = 9.63 * exp(x10361 - (x131 + x1383));
  const amrex::Real x10459 = sc[4] * x10458;
  const amrex::Real x10460 = x168 + x251;
  const amrex::Real x10461 = 1020.0 * exp(x10369 - (x10460 + x131));
  const amrex::Real x10462 = sc[9] * x10461;
  const amrex::Real x10463 = x1401 + x59;
  const amrex::Real x10464 = 180000.0 * exp(x10437 - (x10463 + x131));
  const amrex::Real x10465 = x10464 * sc[18];
  const amrex::Real x10466 = exp(x10424) * sc[3];
  const amrex::Real x10467 = 0.07946 * x10466;
  const amrex::Real x10468 = x4854 * x3964;
  const amrex::Real x10469 = x4854 * x3965;
  const amrex::Real x10470 = x4819 * x3902;
  const amrex::Real x10471 = x4819 * x3903;
  const amrex::Real x10472 = x4856 * x3964;
  const amrex::Real x10473 = x4856 * x3965;
  const amrex::Real x10474 = x4854 * x4023;
  const amrex::Real x10475 = x4830 * x3849;
  const amrex::Real x10476 = 40000000.0 * exp(-(x131 + x1626));
  const amrex::Real x10477 = sc[8] * x10476;
  const amrex::Real x10478 = x4847 * x3866;
  const amrex::Real x10479 = x4817 * x3849;
  const amrex::Real x10480 = x4815 * x3902;
  const amrex::Real x10481 = -x7109;
  const amrex::Real x10482 = x4854 * x4024;
  const amrex::Real x10483 = 30000000.0 * x1663;
  const amrex::Real x10484 = x10483 * sc[12];
  const amrex::Real x10485 = x4815 * x3903;
  const amrex::Real x10486 = 10000000.0 * x1767;
  const amrex::Real x10487 = x10486 * sc[11];
  const amrex::Real x10488 = x4851 * x3866;
  const amrex::Real x10489 = x692 * x6625;
  const amrex::Real x10490 = 30000000.0 * x4849 * x10489;
  const amrex::Real x10491 = x10488 + x10490;
  const amrex::Real x10492 = x2259 * x10256;
  const amrex::Real x10493 = x2291 * x10256;
  const amrex::Real x10494 = -x10492 + x10493;
  const amrex::Real x10495 = x4824 * x3902;
  const amrex::Real x10496 = x4824 * x3903;
  const amrex::Real x10497 = x6334 * x4823;
  const amrex::Real x10498 = x10495 - x10496 + x10497;
  const amrex::Real x10499 = x1398 + x293;
  const amrex::Real x10500 = -(x10499 + x131);
  const amrex::Real x10501 = 26000000.0 * exp(-x10428 + x10500);
  const amrex::Real x10502 = x10501 * sc[21];
  const amrex::Real x10503 = 15000000.0 * exp(-x10431 + x10500);
  const amrex::Real x10504 = x10503 * sc[21];
  const amrex::Real x10505 = x10502 + x10504;
  const amrex::Real x10506 = x4806 * x3786;
  const amrex::Real x10507 = x6383 * x4805;
  const amrex::Real x10508 = x4806 * x3785;
  const amrex::Real x10509 = x10506 + x10507 - x10508;
  const amrex::Real x10510 = x2259 * x10316;
  const amrex::Real x10511 = x6625 * x4842;
  const amrex::Real x10512 = x4811 * x3785;
  const amrex::Real x10513 = x4811 * x3786;
  const amrex::Real x10514 = x2291 * x10316;
  const amrex::Real x10515 = x4843 * x3866;
  const amrex::Real x10516 =
    -x10510 + x10511 - x10512 + x10513 + x10514 + x10515;
  const amrex::Real x10517 = x4851 * x3867;
  const amrex::Real x10518 = x4836 * x3867;
  const amrex::Real x10519 = sc[3] * x10458;
  const amrex::Real x10520 = x4819 * x3905;
  const amrex::Real x10521 = x4854 * x4025;
  const amrex::Real x10522 = x4856 * x3967;
  const amrex::Real x10523 = x4847 * x3867;
  const amrex::Real x10524 = 40000000.0 * sc[2];
  const amrex::Real x10525 = -x10524;
  const amrex::Real x10526 = x4854 * x3967;
  const amrex::Real x10527 = x4854 * x4026;
  const amrex::Real x10528 = x4817 * x3850;
  const amrex::Real x10529 = x4830 * x3850;
  const amrex::Real x10530 = x4815 * x3904;
  const amrex::Real x10531 = x4819 * x3904;
  const amrex::Real x10532 = x4815 * x3905;
  const amrex::Real x10533 = x4856 * x3966;
  const amrex::Real x10534 = x4854 * x3966;
  const amrex::Real x10535 = x2351 * x10256;
  const amrex::Real x10536 = x2334 * x10256;
  const amrex::Real x10537 = x10535 - x10536;
  const amrex::Real x10538 = x4824 * x3904;
  const amrex::Real x10539 = x4824 * x3905;
  const amrex::Real x10540 = x10538 - x10539;
  const amrex::Real x10541 = x4806 * x3787;
  const amrex::Real x10542 = x4806 * x3788;
  const amrex::Real x10543 = -x10541 + x10542;
  const amrex::Real x10544 = x2334 * x10316;
  const amrex::Real x10545 = x4843 * x3867;
  const amrex::Real x10546 = x2351 * x10316;
  const amrex::Real x10547 = x4811 * x3788;
  const amrex::Real x10548 = x4811 * x3787;
  const amrex::Real x10549 = -x10544 + x10545 + x10546 + x10547 - x10548;
  const amrex::Real x10550 = x4851 * x3868;
  const amrex::Real x10551 = x4836 * x3868;
  const amrex::Real x10552 = x4830 * x3852;
  const amrex::Real x10553 = x4819 * x3906;
  const amrex::Real x10554 = x4854 * x4028;
  const amrex::Real x10555 = 15000000.0 * x1722;
  const amrex::Real x10556 = x10555 * sc[12];
  const amrex::Real x10557 = x4815 * x3906;
  const amrex::Real x10558 = x4854 * x4027;
  const amrex::Real x10559 = x4847 * x3868;
  const amrex::Real x10560 = x4854 * x3969;
  const amrex::Real x10561 = x4819 * x3907;
  const amrex::Real x10562 = -x7530;
  const amrex::Real x10563 = x4815 * x3907;
  const amrex::Real x10564 = x4817 * x3852;
  const amrex::Real x10565 = x4854 * x3968;
  const amrex::Real x10566 = x4856 * x3969;
  const amrex::Real x10567 = x4856 * x3968;
  const amrex::Real x10568 = x2460 * x10256;
  const amrex::Real x10569 = x2507 * x10256;
  const amrex::Real x10570 = -x10568 + x10569;
  const amrex::Real x10571 = x4824 * x3906;
  const amrex::Real x10572 = x4824 * x3907;
  const amrex::Real x10573 = x10571 - x10572;
  const amrex::Real x10574 = 2.02045374449339e+20 * x10286;
  const amrex::Real x10575 = 2.02045374449339e+20 * x10282;
  const amrex::Real x10576 = x10291 * x10290;
  const amrex::Real x10577 = 2346000000000.0 * x10576;
  const amrex::Real x10578 = x10295 * x10291;
  const amrex::Real x10579 = 2346000000000.0 * x10578;
  const amrex::Real x10580 = x10574 - x10575 - x10577 + x10579;
  const amrex::Real x10581 = x4806 * x3789;
  const amrex::Real x10582 = x4806 * x3790;
  const amrex::Real x10583 = -x10581 + x10582;
  const amrex::Real x10584 = x4843 * x3868;
  const amrex::Real x10585 = x4811 * x3790;
  const amrex::Real x10586 = x2460 * x10316;
  const amrex::Real x10587 = x2507 * x10316;
  const amrex::Real x10588 = x4811 * x3789;
  const amrex::Real x10589 = x10584 + x10585 - x10586 + x10587 - x10588;
  const amrex::Real x10590 = x4836 * x3869;
  const amrex::Real x10591 = x4851 * x3869;
  const amrex::Real x10592 = x4815 * x3908;
  const amrex::Real x10593 = x4854 * x3970;
  const amrex::Real x10594 = x4854 * x3971;
  const amrex::Real x10595 = x4856 * x3970;
  const amrex::Real x10596 = x4819 * x3908;
  const amrex::Real x10597 = x4815 * x3909;
  const amrex::Real x10598 = x4819 * x3909;
  const amrex::Real x10599 = x4854 * x4030;
  const amrex::Real x10600 = x4854 * x4029;
  const amrex::Real x10601 = x4847 * x3869;
  const amrex::Real x10602 = x4830 * x3853;
  const amrex::Real x10603 = x4856 * x3971;
  const amrex::Real x10604 = x4817 * x3853;
  const amrex::Real x10605 = x2614 * x10256;
  const amrex::Real x10606 = x2585 * x10256;
  const amrex::Real x10607 = x10605 - x10606;
  const amrex::Real x10608 = x4824 * x3909;
  const amrex::Real x10609 = x4824 * x3908;
  const amrex::Real x10610 = -x10608 + x10609;
  const amrex::Real x10611 = -x7578 - sc[2] * x10426;
  const amrex::Real x10612 = x4806 * x3792;
  const amrex::Real x10613 = x4806 * x3791;
  const amrex::Real x10614 = x10612 - x10613;
  const amrex::Real x10615 = 14076000000000.0 * x10578;
  const amrex::Real x10616 = 14076000000000.0 * x10576;
  const amrex::Real x10617 = 1.21227224669604e+21 * x10286;
  const amrex::Real x10618 = 1.21227224669604e+21 * x10282;
  const amrex::Real x10619 = x10615 - x10616 + x10617 - x10618;
  const amrex::Real x10620 = x2614 * x10316;
  const amrex::Real x10621 = x2585 * x10316;
  const amrex::Real x10622 = x4843 * x3869;
  const amrex::Real x10623 = x4811 * x3791;
  const amrex::Real x10624 = x4811 * x3792;
  const amrex::Real x10625 = x10620 - x10621 + x10622 - x10623 + x10624;
  const amrex::Real x10626 = x4851 * x3870;
  const amrex::Real x10627 = sc[8] * x3870;
  const amrex::Real x10628 = x4835 * x10627;
  const amrex::Real x10629 = sc[2] * x10362;
  const amrex::Real x10630 = -x10629;
  const amrex::Real x10631 = x4854 * x3972;
  const amrex::Real x10632 = x4815 * x3910;
  const amrex::Real x10633 = x4819 * x3910;
  const amrex::Real x10634 = x4819 * x3911;
  const amrex::Real x10635 = x4856 * x3973;
  const amrex::Real x10636 = x4854 * x4031;
  const amrex::Real x10637 = x4854 * x4032;
  const amrex::Real x10638 = x4847 * x3870;
  const amrex::Real x10639 = x4854 * x3973;
  const amrex::Real x10640 = x4856 * x3972;
  const amrex::Real x10641 = x4815 * x3911;
  const amrex::Real x10642 = x2666 * x10256;
  const amrex::Real x10643 = x2652 * x10256;
  const amrex::Real x10644 = x10642 - x10643;
  const amrex::Real x10645 = x4824 * x3911;
  const amrex::Real x10646 = x4824 * x3910;
  const amrex::Real x10647 = -x10645 + x10646;
  const amrex::Real x10648 = x4806 * x3793;
  const amrex::Real x10649 = x4806 * x3794;
  const amrex::Real x10650 = -x10648 + x10649;
  const amrex::Real x10651 = x2652 * x10316;
  const amrex::Real x10652 = x2666 * x10316;
  const amrex::Real x10653 = x4811 * x3794;
  const amrex::Real x10654 = x4811 * x3793;
  const amrex::Real x10655 = x4843 * x3870;
  const amrex::Real x10656 = -x10651 + x10652 + x10653 - x10654 + x10655;
  const amrex::Real x10657 = x4851 * x3871;
  const amrex::Real x10658 = 1119000.0 * exp(-x10357);
  const amrex::Real x10659 = x10658 * sc[12];
  const amrex::Real x10660 = x4815 * x3912;
  const amrex::Real x10661 = x4815 * x3913;
  const amrex::Real x10662 = x4854 * x3975;
  const amrex::Real x10663 = x4854 * x4034;
  const amrex::Real x10664 = x4819 * x3912;
  const amrex::Real x10665 = x4856 * x3974;
  const amrex::Real x10666 = x4856 * x3975;
  const amrex::Real x10667 = x4819 * x3913;
  const amrex::Real x10668 = x4854 * x3974;
  const amrex::Real x10669 = 30830000.0 * exp(-x4828);
  const amrex::Real x10670 = sc[9] * x10669;
  const amrex::Real x10671 = sc[3] * x10476;
  const amrex::Real x10672 = x4830 * x3854;
  const amrex::Real x10673 = x4847 * x3871;
  const amrex::Real x10674 = x4817 * x3854;
  const amrex::Real x10675 = x10399 * x10274;
  const amrex::Real x10676 = x4854 * x4033;
  const amrex::Real x10677 = x4836 * x3871;
  const amrex::Real x10678 = x6625 * x4835;
  const amrex::Real x10679 = x10677 + x10678;
  const amrex::Real x10680 = x2716 * x10256;
  const amrex::Real x10681 = x2733 * x10256;
  const amrex::Real x10682 = -x10680 + x10681;
  const amrex::Real x10683 = x4824 * x3913;
  const amrex::Real x10684 = x4824 * x3912;
  const amrex::Real x10685 = -x10683 + x10684;
  const amrex::Real x10686 = x4806 * x3795;
  const amrex::Real x10687 = x4806 * x3796;
  const amrex::Real x10688 = -x10686 + x10687;
  const amrex::Real x10689 = x4843 * x3871;
  const amrex::Real x10690 = x4811 * x3795;
  const amrex::Real x10691 = x2716 * x10316;
  const amrex::Real x10692 = x2733 * x10316;
  const amrex::Real x10693 = x4811 * x3796;
  const amrex::Real x10694 = x10689 - x10690 - x10691 + x10692 + x10693;
  const amrex::Real x10695 = x4851 * x3872;
  const amrex::Real x10696 = x4836 * x3872;
  const amrex::Real x10697 = sc[3] * x10461;
  const amrex::Real x10698 = x4815 * x3914;
  const amrex::Real x10699 = x4815 * x3915;
  const amrex::Real x10700 = x4854 * x3977;
  const amrex::Real x10701 = x4819 * x3915;
  const amrex::Real x10702 = -x8060;
  const amrex::Real x10703 = sc[8] * x10669;
  const amrex::Real x10704 = 48000000.0 * x1394;
  const amrex::Real x10705 = x10704 * sc[12];
  const amrex::Real x10706 = x4854 * x4035;
  const amrex::Real x10707 = x4854 * x4036;
  const amrex::Real x10708 = x4847 * x3872;
  const amrex::Real x10709 = x4819 * x3914;
  const amrex::Real x10710 = x4854 * x3976;
  const amrex::Real x10711 = x4817 * x3855;
  const amrex::Real x10712 = x4856 * x3976;
  const amrex::Real x10713 = x4856 * x3977;
  const amrex::Real x10714 = 16040000.0 * x1652;
  const amrex::Real x10715 = x10714 * sc[11];
  const amrex::Real x10716 = x4830 * x3855;
  const amrex::Real x10717 = x2761 * x10256;
  const amrex::Real x10718 = x2780 * x10256;
  const amrex::Real x10719 = -x10717 + x10718;
  const amrex::Real x10720 = x4824 * x3914;
  const amrex::Real x10721 = x4824 * x3915;
  const amrex::Real x10722 = x10720 - x10721;
  const amrex::Real x10723 = x4806 * x3798;
  const amrex::Real x10724 = x4806 * x3797;
  const amrex::Real x10725 = x10723 - x10724;
  const amrex::Real x10726 = x4811 * x3797;
  const amrex::Real x10727 = x2761 * x10316;
  const amrex::Real x10728 = x2780 * x10316;
  const amrex::Real x10729 = x4811 * x3798;
  const amrex::Real x10730 = x6383 * x4810;
  const amrex::Real x10731 = x4843 * x3872;
  const amrex::Real x10732 =
    -x10726 - x10727 + x10728 + x10729 + x10730 + x10731;
  const amrex::Real x10733 = x4836 * x3873;
  const amrex::Real x10734 = x4851 * x3873;
  const amrex::Real x10735 = sc[2] * x10370;
  const amrex::Real x10736 = -x10735;
  const amrex::Real x10737 = x4847 * x3873;
  const amrex::Real x10738 = x4815 * x3916;
  const amrex::Real x10739 = x4854 * x3979;
  const amrex::Real x10740 = x4815 * x3917;
  const amrex::Real x10741 = x4819 * x3916;
  const amrex::Real x10742 = x4819 * x3917;
  const amrex::Real x10743 = x4854 * x4037;
  const amrex::Real x10744 = x4856 * x3979;
  const amrex::Real x10745 = x4854 * x4038;
  const amrex::Real x10746 = x4854 * x3978;
  const amrex::Real x10747 = x4856 * x3978;
  const amrex::Real x10748 = x2818 * x10256;
  const amrex::Real x10749 = x2836 * x10256;
  const amrex::Real x10750 = -x10748 + x10749;
  const amrex::Real x10751 = x4824 * x3916;
  const amrex::Real x10752 = x4824 * x3917;
  const amrex::Real x10753 = x10751 - x10752;
  const amrex::Real x10754 = x4817 * x3856;
  const amrex::Real x10755 = x4830 * x3856;
  const amrex::Real x10756 = -x10754 - x10755;
  const amrex::Real x10757 = x4806 * x3800;
  const amrex::Real x10758 = x4806 * x3799;
  const amrex::Real x10759 = x10757 - x10758;
  const amrex::Real x10760 = x4811 * x3799;
  const amrex::Real x10761 = x2836 * x10316;
  const amrex::Real x10762 = x4843 * x3873;
  const amrex::Real x10763 = x2818 * x10316;
  const amrex::Real x10764 = x4811 * x3800;
  const amrex::Real x10765 = -x10760 + x10761 + x10762 - x10763 + x10764;
  const amrex::Real x10766 = x4851 * x3874;
  const amrex::Real x10767 = x4836 * x3874;
  const amrex::Real x10768 = x4854 * x3981;
  const amrex::Real x10769 = x6334 * x4814;
  const amrex::Real x10770 = x4854 * x3980;
  const amrex::Real x10771 = sc[9] * x10714;
  const amrex::Real x10772 = x4819 * x3919;
  const amrex::Real x10773 = x231 * x10403;
  const amrex::Real x10774 = x4856 * x3981;
  const amrex::Real x10775 = x4815 * x3919;
  const amrex::Real x10776 = sc[3] * x10486;
  const amrex::Real x10777 = x4847 * x3874;
  const amrex::Real x10778 = x4854 * x4039;
  const amrex::Real x10779 = x4856 * x3980;
  const amrex::Real x10780 = x4819 * x3918;
  const amrex::Real x10781 = x4815 * x3918;
  const amrex::Real x10782 = x4817 * x3857;
  const amrex::Real x10783 = x4830 * x3857;
  const amrex::Real x10784 = x2859 * x10256;
  const amrex::Real x10785 = x2883 * x10256;
  const amrex::Real x10786 = -x10784 + x10785;
  const amrex::Real x10787 = x4824 * x3918;
  const amrex::Real x10788 = x4824 * x3919;
  const amrex::Real x10789 = x10787 - x10788;
  const amrex::Real x10790 = x10306 + x5645;
  const amrex::Real x10791 = sc[2] * x10443;
  const amrex::Real x10792 = x4806 * x3802;
  const amrex::Real x10793 = x4806 * x3801;
  const amrex::Real x10794 = -x10791 + x10792 - x10793;
  const amrex::Real x10795 = x2883 * x10316;
  const amrex::Real x10796 = x6392 * x10315;
  const amrex::Real x10797 = x4843 * x3874;
  const amrex::Real x10798 = x2859 * x10316;
  const amrex::Real x10799 = x4811 * x3801;
  const amrex::Real x10800 = x4811 * x3802;
  const amrex::Real x10801 =
    x10795 + x10796 + x10797 - x10798 - x10799 + x10800;
  const amrex::Real x10802 = x4836 * x3875;
  const amrex::Real x10803 = sc[8] * x10658;
  const amrex::Real x10804 = sc[5] * x10555;
  const amrex::Real x10805 = x4854 * x3982;
  const amrex::Real x10806 = x4854 * x3983;
  const amrex::Real x10807 = x4819 * x3920;
  const amrex::Real x10808 = x4854 * x4040;
  const amrex::Real x10809 = x4854 * x4041;
  const amrex::Real x10810 = sc[9] * x10704;
  const amrex::Real x10811 = x4815 * x3921;
  const amrex::Real x10812 = x4847 * x3875;
  const amrex::Real x10813 = x4819 * x3921;
  const amrex::Real x10814 = sc[3] * x10483;
  const amrex::Real x10815 = x4815 * x3920;
  const amrex::Real x10816 = x4817 * x3858;
  const amrex::Real x10817 = x4856 * x3983;
  const amrex::Real x10818 = x4830 * x3858;
  const amrex::Real x10819 = x4856 * x3982;
  const amrex::Real x10820 = x4851 * x3875;
  const amrex::Real x10821 = x6625 * refCinv;
  const amrex::Real x10822 = x4850 * x10821;
  const amrex::Real x10823 = x10820 + x10822;
  const amrex::Real x10824 = x2989 * x10256;
  const amrex::Real x10825 = x6392 * x10255;
  const amrex::Real x10826 = x2960 * x10256;
  const amrex::Real x10827 = x10824 + x10825 - x10826;
  const amrex::Real x10828 = x4824 * x3921;
  const amrex::Real x10829 = x4824 * x3920;
  const amrex::Real x10830 = -x10828 + x10829;
  const amrex::Real x10831 = x4806 * x3804;
  const amrex::Real x10832 = x4806 * x3803;
  const amrex::Real x10833 = x10831 - x10832;
  const amrex::Real x10834 = 2052750000000.0 * x10578;
  const amrex::Real x10835 = 1.76789702643172e+20 * x10278;
  const amrex::Real x10836 = x10835 * x10281;
  const amrex::Real x10837 = sc[2] * x10375;
  const amrex::Real x10838 = x10835 * x10285;
  const amrex::Real x10839 = 2052750000000.0 * x10576;
  const amrex::Real x10840 = x10834 - x10836 - x10837 + x10838 - x10839;
  const amrex::Real x10841 = x4811 * x3804;
  const amrex::Real x10842 = x2960 * x10316;
  const amrex::Real x10843 = x4843 * x3875;
  const amrex::Real x10844 = x2989 * x10316;
  const amrex::Real x10845 = x4811 * x3803;
  const amrex::Real x10846 = x10841 - x10842 + x10843 + x10844 - x10845;
  const amrex::Real x10847 = x4851 * x3876;
  const amrex::Real x10848 = x4836 * x3876;
  const amrex::Real x10849 = sc[2] * x10358;
  const amrex::Real x10850 = -x10849;
  const amrex::Real x10851 = x4815 * x3923;
  const amrex::Real x10852 = x4854 * x3984;
  const amrex::Real x10853 = x4856 * x3984;
  const amrex::Real x10854 = x4847 * x3876;
  const amrex::Real x10855 = x4819 * x3922;
  const amrex::Real x10856 = x4854 * x4043;
  const amrex::Real x10857 = x4819 * x3923;
  const amrex::Real x10858 = x4856 * x3985;
  const amrex::Real x10859 = x4815 * x3922;
  const amrex::Real x10860 = x4854 * x4042;
  const amrex::Real x10861 = x4854 * x3985;
  const amrex::Real x10862 = x3035 * x10256;
  const amrex::Real x10863 = x3022 * x10256;
  const amrex::Real x10864 = x10862 - x10863;
  const amrex::Real x10865 = x4824 * x3922;
  const amrex::Real x10866 = x4824 * x3923;
  const amrex::Real x10867 = x10865 - x10866;
  const amrex::Real x10868 = x4806 * x3805;
  const amrex::Real x10869 = x4806 * x3806;
  const amrex::Real x10870 = -x10868 + x10869;
  const amrex::Real x10871 = 4222800000000.0 * x10291;
  const amrex::Real x10872 = x10871 * x10290;
  const amrex::Real x10873 = x10374 * x10294;
  const amrex::Real x10874 = 3.63681674008811e+20 * x10286;
  const amrex::Real x10875 = x10871 * x10295;
  const amrex::Real x10876 = 3.63681674008811e+20 * x10282;
  const amrex::Real x10877 = -x10872 + x10873 + x10874 + x10875 - x10876;
  const amrex::Real x10878 = x3035 * x10316;
  const amrex::Real x10879 = x4843 * x3876;
  const amrex::Real x10880 = x4811 * x3805;
  const amrex::Real x10881 = x4811 * x3806;
  const amrex::Real x10882 = x3022 * x10316;
  const amrex::Real x10883 = x10878 + x10879 - x10880 + x10881 - x10882;
  const amrex::Real x10884 = x4851 * x3878;
  const amrex::Real x10885 = x4836 * x3878;
  const amrex::Real x10886 = x4847 * x3878;
  const amrex::Real x10887 = x3068 * x10256;
  const amrex::Real x10888 = sc[2] * x10415;
  const amrex::Real x10889 = x3049 * x10256;
  const amrex::Real x10890 = x10887 - x10888 - x10889;
  const amrex::Real x10891 = x4806 * x3807;
  const amrex::Real x10892 = x4806 * x3808;
  const amrex::Real x10893 = -x10891 + x10892;
  const amrex::Real x10894 = x4819 * x3924;
  const amrex::Real x10895 = -x10894;
  const amrex::Real x10896 = x4815 * x3924;
  const amrex::Real x10897 = x4824 * x3924;
  const amrex::Real x10898 = x10262 + x10897;
  const amrex::Real x10899 = x4854 * x4044;
  const amrex::Real x10900 = x4854 * x3986;
  const amrex::Real x10901 = x4856 * x3986;
  const amrex::Real x10902 =
    x10303 + x10304 + x10790 - x10899 - x10900 + x10901;
  const amrex::Real x10903 = x10895 + x10896 + x10898 + x10902;
  const amrex::Real x10904 = x10265 + x10267 + x10299;
  const amrex::Real x10905 = x10903 + x10904;
  const amrex::Real x10906 = x4811 * x3807;
  const amrex::Real x10907 = x4843 * x3878;
  const amrex::Real x10908 = x3049 * x10316;
  const amrex::Real x10909 = x4811 * x3808;
  const amrex::Real x10910 = x3068 * x10316;
  const amrex::Real x10911 = -x10906 + x10907 - x10908 + x10909 + x10910;
  const amrex::Real x10912 = x4836 * x3879;
  const amrex::Real x10913 = x4851 * x3879;
  const amrex::Real x10914 = x4815 * x3927;
  const amrex::Real x10915 = x4854 * x3988;
  const amrex::Real x10916 = x4847 * x3879;
  const amrex::Real x10917 = x4819 * x3926;
  const amrex::Real x10918 = x4856 * x3988;
  const amrex::Real x10919 = x4854 * x4046;
  const amrex::Real x10920 = x4856 * x3989;
  const amrex::Real x10921 = x4854 * x4047;
  const amrex::Real x10922 = x4819 * x3927;
  const amrex::Real x10923 = x4854 * x3989;
  const amrex::Real x10924 = x4815 * x3926;
  const amrex::Real x10925 = x3121 * x10256;
  const amrex::Real x10926 = x3138 * x10256;
  const amrex::Real x10927 = -x10925 + x10926;
  const amrex::Real x10928 = x4824 * x3927;
  const amrex::Real x10929 = x4824 * x3926;
  const amrex::Real x10930 = -x10928 + x10929;
  const amrex::Real x10931 = x4806 * x3809;
  const amrex::Real x10932 = x4806 * x3810;
  const amrex::Real x10933 = -x10931 + x10932;
  const amrex::Real x10934 = x4843 * x3879;
  const amrex::Real x10935 = x3138 * x10316;
  const amrex::Real x10936 = x4811 * x3809;
  const amrex::Real x10937 = sc[2] * x10452;
  const amrex::Real x10938 = sc[2] * x10447;
  const amrex::Real x10939 = x3121 * x10316;
  const amrex::Real x10940 = x4811 * x3810;
  const amrex::Real x10941 =
    x10934 + x10935 - x10936 - 19.584 * x10937 - x10938 - x10939 + x10940;
  const amrex::Real x10942 = x4851 * x3880;
  const amrex::Real x10943 = x4836 * x3880;
  const amrex::Real x10944 = x4815 * x3929;
  const amrex::Real x10945 = x4856 * x3991;
  const amrex::Real x10946 = x4854 * x3990;
  const amrex::Real x10947 = x4815 * x3928;
  const amrex::Real x10948 = x4856 * x3990;
  const amrex::Real x10949 = x4854 * x4049;
  const amrex::Real x10950 = x4854 * x3991;
  const amrex::Real x10951 = x4819 * x3929;
  const amrex::Real x10952 = x4847 * x3880;
  const amrex::Real x10953 = x4819 * x3928;
  const amrex::Real x10954 = x4817 * x3859;
  const amrex::Real x10955 = x4830 * x3859;
  const amrex::Real x10956 = x4854 * x4048;
  const amrex::Real x10957 = x3208 * x10256;
  const amrex::Real x10958 = x3232 * x10256;
  const amrex::Real x10959 = -x10957 + x10958;
  const amrex::Real x10960 = x4824 * x3929;
  const amrex::Real x10961 = x4824 * x3928;
  const amrex::Real x10962 = sc[2] * x10419;
  const amrex::Real x10963 = -x10960 + x10961 - x10962;
  const amrex::Real x10964 = x4806 * x3812;
  const amrex::Real x10965 = x4806 * x3811;
  const amrex::Real x10966 = x10964 - x10965;
  const amrex::Real x10967 = x3208 * x10316;
  const amrex::Real x10968 = x4811 * x3811;
  const amrex::Real x10969 = x3232 * x10316;
  const amrex::Real x10970 = x4843 * x3880;
  const amrex::Real x10971 = x4811 * x3812;
  const amrex::Real x10972 = -x10967 - x10968 + x10969 + x10970 + x10971;
  const amrex::Real x10973 = x4851 * x3881;
  const amrex::Real x10974 = x4847 * x3881;
  const amrex::Real x10975 = x4836 * x3881;
  const amrex::Real x10976 = sc[2] * x10406;
  const amrex::Real x10977 = x10975 - x10976;
  const amrex::Real x10978 = x3239 * x10256;
  const amrex::Real x10979 = x10259 + x10978;
  const amrex::Real x10980 = x4806 * x3813;
  const amrex::Real x10981 = x10313 + x10980;
  const amrex::Real x10982 = x4843 * x3881;
  const amrex::Real x10983 = x3239 * x10316;
  const amrex::Real x10984 = x4811 * x3813;
  const amrex::Real x10985 = x10320 + x10982 + x10983 + x10984;
  const amrex::Real x10986 = x10305 + x10307 + x10308 + x10309 + x10902 + x6267;
  const amrex::Real x10987 = x10895 + x10896 + x10898 + x10904 + x10986;
  const amrex::Real x10988 = x4836 * x3882;
  const amrex::Real x10989 = x4851 * x3882;
  const amrex::Real x10990 = -x4802;
  const amrex::Real x10991 = sc[3] * x10464;
  const amrex::Real x10992 = x4815 * x3930;
  const amrex::Real x10993 = x4819 * x3930;
  const amrex::Real x10994 = x4847 * x3882;
  const amrex::Real x10995 = x3247 * x10256;
  const amrex::Real x10996 = x3253 * x10256;
  const amrex::Real x10997 = -x10995 + x10996;
  const amrex::Real x10998 = x4824 * x3930;
  const amrex::Real x10999 = x10262 + x10998;
  const amrex::Real x11000 = x4806 * x3815;
  const amrex::Real x11001 = x4806 * x3814;
  const amrex::Real x11002 = x11000 - x11001;
  const amrex::Real x11003 = x4843 * x3882;
  const amrex::Real x11004 = x3247 * x10316;
  const amrex::Real x11005 = x4811 * x3814;
  const amrex::Real x11006 = x4811 * x3815;
  const amrex::Real x11007 = x3253 * x10316;
  const amrex::Real x11008 = x11003 - x11004 - x11005 + x11006 + x11007;
  const amrex::Real x11009 = x4836 * x3883;
  const amrex::Real x11010 = x4851 * x3883;
  const amrex::Real x11011 = x4854 * x3993;
  const amrex::Real x11012 = x4819 * x3932;
  const amrex::Real x11013 = x4854 * x3992;
  const amrex::Real x11014 = x4856 * x3992;
  const amrex::Real x11015 = x4854 * x4050;
  const amrex::Real x11016 = x4819 * x3931;
  const amrex::Real x11017 = x4847 * x3883;
  const amrex::Real x11018 = x4815 * x3932;
  const amrex::Real x11019 = x4815 * x3931;
  const amrex::Real x11020 = x4856 * x3993;
  const amrex::Real x11021 = x4854 * x4051;
  const amrex::Real x11022 = x3292 * x10256;
  const amrex::Real x11023 = x3308 * x10256;
  const amrex::Real x11024 = -x11022 + x11023;
  const amrex::Real x11025 = x4824 * x3932;
  const amrex::Real x11026 = x4824 * x3931;
  const amrex::Real x11027 = -x11025 + x11026;
  const amrex::Real x11028 = x4806 * x3817;
  const amrex::Real x11029 = x4806 * x3816;
  const amrex::Real x11030 = x11028 - x11029;
  const amrex::Real x11031 = 40.0 * x9065;
  const amrex::Real x11032 = sc[2] * x10438;
  const amrex::Real x11033 = -x11031 - x11032 - sc[2] * x10440;
  const amrex::Real x11034 = x4811 * x3817;
  const amrex::Real x11035 = x3308 * x10316;
  const amrex::Real x11036 = x3292 * x10316;
  const amrex::Real x11037 = x4843 * x3883;
  const amrex::Real x11038 = x4811 * x3816;
  const amrex::Real x11039 = x11034 + x11035 - x11036 + x11037 - x11038;
  const amrex::Real x11040 = x4836 * x3884;
  const amrex::Real x11041 = 40.0 * x9174;
  const amrex::Real x11042 = x4847 * x3884;
  const amrex::Real x11043 = x4851 * x3884;
  const amrex::Real x11044 = sc[2] * x10411;
  const amrex::Real x11045 = x11043 - x11044;
  const amrex::Real x11046 = x3313 * x10256;
  const amrex::Real x11047 = x10259 + x11046;
  const amrex::Real x11048 = x4806 * x3818;
  const amrex::Real x11049 = x10313 + x11048;
  const amrex::Real x11050 = x3313 * x10316;
  const amrex::Real x11051 = x4843 * x3884;
  const amrex::Real x11052 = x4811 * x3818;
  const amrex::Real x11053 = x10320 + x11050 + x11051 + x11052;
  const amrex::Real x11054 = x4836 * x3885;
  const amrex::Real x11055 = x4851 * x3885;
  const amrex::Real x11056 = x4847 * x3885;
  const amrex::Real x11057 = x3320 * x10256;
  const amrex::Real x11058 = x3324 * x10256;
  const amrex::Real x11059 = -x11057 + x11058;
  const amrex::Real x11060 = sc[3] * x10501;
  const amrex::Real x11061 = sc[3] * x10503;
  const amrex::Real x11062 = x11060 + x11061;
  const amrex::Real x11063 = x4806 * x3819;
  const amrex::Real x11064 = x4806 * x3820;
  const amrex::Real x11065 = -x11063 + x11064;
  const amrex::Real x11066 = x3320 * x10316;
  const amrex::Real x11067 = x3324 * x10316;
  const amrex::Real x11068 = x4843 * x3885;
  const amrex::Real x11069 = x4811 * x3819;
  const amrex::Real x11070 = x4811 * x3820;
  const amrex::Real x11071 = -x11066 + x11067 + x11068 - x11069 + x11070;
  const amrex::Real x11072 = x4851 * x3886;
  const amrex::Real x11073 = x4836 * x3886;
  const amrex::Real x11074 = x4854 * x3995;
  const amrex::Real x11075 = x4815 * x3934;
  const amrex::Real x11076 = x4819 * x3934;
  const amrex::Real x11077 = x4854 * x4053;
  const amrex::Real x11078 = x4854 * x3994;
  const amrex::Real x11079 = x4847 * x3886;
  const amrex::Real x11080 = x4856 * x3994;
  const amrex::Real x11081 = x4856 * x3995;
  const amrex::Real x11082 = x4854 * x4052;
  const amrex::Real x11083 = x4815 * x3933;
  const amrex::Real x11084 = x4819 * x3933;
  const amrex::Real x11085 = x3342 * x10256;
  const amrex::Real x11086 = x3352 * x10256;
  const amrex::Real x11087 = -x11085 + x11086;
  const amrex::Real x11088 = x4824 * x3934;
  const amrex::Real x11089 = x4824 * x3933;
  const amrex::Real x11090 = -x11088 + x11089;
  const amrex::Real x11091 = x4806 * x3821;
  const amrex::Real x11092 = x4806 * x3822;
  const amrex::Real x11093 = -x11091 + x11092;
  const amrex::Real x11094 = sc[2] * x10432;
  const amrex::Real x11095 = sc[2] * x10429;
  const amrex::Real x11096 = -x11094 - x11095 - sc[2] * x10434;
  const amrex::Real x11097 = x3342 * x10316;
  const amrex::Real x11098 = x3352 * x10316;
  const amrex::Real x11099 = x4811 * x3821;
  const amrex::Real x11100 = x4843 * x3886;
  const amrex::Real x11101 = x4811 * x3822;
  const amrex::Real x11102 = -x11097 + x11098 - x11099 + x11100 + x11101;
  const amrex::Real x11103 = x4851 * x3887;
  const amrex::Real x11104 = x4836 * x3887;
  const amrex::Real x11105 = x4815 * x3935;
  const amrex::Real x11106 = x4815 * x3936;
  const amrex::Real x11107 = x4854 * x3996;
  const amrex::Real x11108 = x4854 * x3997;
  const amrex::Real x11109 = x4856 * x3996;
  const amrex::Real x11110 = x4856 * x3997;
  const amrex::Real x11111 = x4854 * x4054;
  const amrex::Real x11112 = x4854 * x4055;
  const amrex::Real x11113 = x4847 * x3887;
  const amrex::Real x11114 = x4819 * x3936;
  const amrex::Real x11115 = x4819 * x3935;
  const amrex::Real x11116 = x3385 * x10256;
  const amrex::Real x11117 = x3402 * x10256;
  const amrex::Real x11118 = -x11116 + x11117;
  const amrex::Real x11119 = x4824 * x3936;
  const amrex::Real x11120 = x4824 * x3935;
  const amrex::Real x11121 = -x11119 + x11120;
  const amrex::Real x11122 = x4806 * x3823;
  const amrex::Real x11123 = x4806 * x3824;
  const amrex::Real x11124 = -x11122 + x11123;
  const amrex::Real x11125 = x4843 * x3887;
  const amrex::Real x11126 = x3385 * x10316;
  const amrex::Real x11127 = x4811 * x3823;
  const amrex::Real x11128 = x4811 * x3824;
  const amrex::Real x11129 = x3402 * x10316;
  const amrex::Real x11130 = x11125 - x11126 - x11127 + x11128 + x11129;
  const amrex::Real x11131 = x4854 * x3999;
  const amrex::Real x11132 = x4819 * x3937;
  const amrex::Real x11133 = x4819 * x3938;
  const amrex::Real x11134 = x4856 * x3999;
  const amrex::Real x11135 = x4854 * x4056;
  const amrex::Real x11136 = x4854 * x4057;
  const amrex::Real x11137 = x4856 * x3998;
  const amrex::Real x11138 = x4854 * x3998;
  const amrex::Real x11139 = x4815 * x3937;
  const amrex::Real x11140 = x4815 * x3938;
  const amrex::Real x11141 = x3434 * x10256;
  const amrex::Real x11142 = x3449 * x10256;
  const amrex::Real x11143 = -x11141 + x11142;
  const amrex::Real x11144 = x4824 * x3937;
  const amrex::Real x11145 = x4824 * x3938;
  const amrex::Real x11146 = x11144 - x11145;
  const amrex::Real x11147 = x10300 + x10314;
  const amrex::Real x11148 = x4806 * x3826;
  const amrex::Real x11149 = x4806 * x3825;
  const amrex::Real x11150 = x11148 - x11149;
  const amrex::Real x11151 = x3434 * x10316;
  const amrex::Real x11152 = x3449 * x10316;
  const amrex::Real x11153 = x4811 * x3826;
  const amrex::Real x11154 = x4811 * x3825;
  const amrex::Real x11155 = -x11151 + x11152 + x11153 - x11154;
  const amrex::Real x11156 = x4854 * x4001;
  const amrex::Real x11157 = x4856 * x4000;
  const amrex::Real x11158 = x4819 * x3939;
  const amrex::Real x11159 = x4819 * x3940;
  const amrex::Real x11160 = x4854 * x4058;
  const amrex::Real x11161 = x4854 * x4059;
  const amrex::Real x11162 = x4854 * x4000;
  const amrex::Real x11163 = x4856 * x4001;
  const amrex::Real x11164 = x4815 * x3940;
  const amrex::Real x11165 = x4815 * x3939;
  const amrex::Real x11166 = x3466 * x10256;
  const amrex::Real x11167 = x3473 * x10256;
  const amrex::Real x11168 = -x11166 + x11167;
  const amrex::Real x11169 = x4824 * x3939;
  const amrex::Real x11170 = x4824 * x3940;
  const amrex::Real x11171 = x11169 - x11170;
  const amrex::Real x11172 = x4806 * x3827;
  const amrex::Real x11173 = x4806 * x3828;
  const amrex::Real x11174 = -x11172 + x11173;
  const amrex::Real x11175 = x4811 * x3827;
  const amrex::Real x11176 = x3466 * x10316;
  const amrex::Real x11177 = x4811 * x3828;
  const amrex::Real x11178 = x3473 * x10316;
  const amrex::Real x11179 = -x11175 - x11176 + x11177 + x11178;
  const amrex::Real x11180 = x4815 * x3942;
  const amrex::Real x11181 = x4854 * x4003;
  const amrex::Real x11182 = x4819 * x3942;
  const amrex::Real x11183 = x4856 * x4002;
  const amrex::Real x11184 = x4854 * x4061;
  const amrex::Real x11185 = x4856 * x4003;
  const amrex::Real x11186 = x4854 * x4060;
  const amrex::Real x11187 = x4854 * x4002;
  const amrex::Real x11188 = x4819 * x3941;
  const amrex::Real x11189 = x4815 * x3941;
  const amrex::Real x11190 = x3517 * x10256;
  const amrex::Real x11191 = x3504 * x10256;
  const amrex::Real x11192 = x11190 - x11191;
  const amrex::Real x11193 = x4824 * x3942;
  const amrex::Real x11194 = x4824 * x3941;
  const amrex::Real x11195 = -x11193 + x11194;
  const amrex::Real x11196 = x4806 * x3830;
  const amrex::Real x11197 = x4806 * x3829;
  const amrex::Real x11198 = x11196 - x11197;
  const amrex::Real x11199 = x4811 * x3830;
  const amrex::Real x11200 = x3517 * x10316;
  const amrex::Real x11201 = x4811 * x3829;
  const amrex::Real x11202 = x3504 * x10316;
  const amrex::Real x11203 = x11199 + x11200 - x11201 - x11202;
  const amrex::Real x11204 = x4815 * x3943;
  const amrex::Real x11205 = x4854 * x4005;
  const amrex::Real x11206 = x4854 * x4004;
  const amrex::Real x11207 = x4815 * x3944;
  const amrex::Real x11208 = x4856 * x4004;
  const amrex::Real x11209 = x4854 * x4062;
  const amrex::Real x11210 = x4854 * x4063;
  const amrex::Real x11211 = x4856 * x4005;
  const amrex::Real x11212 = x4819 * x3943;
  const amrex::Real x11213 = x4819 * x3944;
  const amrex::Real x11214 = x3536 * x10256;
  const amrex::Real x11215 = x3548 * x10256;
  const amrex::Real x11216 = -x11214 + x11215;
  const amrex::Real x11217 = x4824 * x3944;
  const amrex::Real x11218 = x4824 * x3943;
  const amrex::Real x11219 = -x11217 + x11218;
  const amrex::Real x11220 = x4806 * x3831;
  const amrex::Real x11221 = x4806 * x3832;
  const amrex::Real x11222 = -x11220 + x11221;
  const amrex::Real x11223 = x3536 * x10316;
  const amrex::Real x11224 = x4811 * x3831;
  const amrex::Real x11225 = x3548 * x10316;
  const amrex::Real x11226 = x4811 * x3832;
  const amrex::Real x11227 = -x11223 - x11224 + x11225 + x11226;
  const amrex::Real x11228 = x4815 * x3946;
  const amrex::Real x11229 = x4854 * x4007;
  const amrex::Real x11230 = x4854 * x4006;
  const amrex::Real x11231 = x4854 * x4064;
  const amrex::Real x11232 = x4856 * x4007;
  const amrex::Real x11233 = x4819 * x3946;
  const amrex::Real x11234 = x4819 * x3945;
  const amrex::Real x11235 = x4815 * x3945;
  const amrex::Real x11236 = x4856 * x4006;
  const amrex::Real x11237 = x3580 * x10256;
  const amrex::Real x11238 = x3564 * x10256;
  const amrex::Real x11239 = x11237 - x11238;
  const amrex::Real x11240 = x4824 * x3945;
  const amrex::Real x11241 = x4824 * x3946;
  const amrex::Real x11242 = x11240 - x11241;
  const amrex::Real x11243 = x10306 + x11147;
  const amrex::Real x11244 = x4806 * x3833;
  const amrex::Real x11245 = x4806 * x3834;
  const amrex::Real x11246 = -x11244 + x11245;
  const amrex::Real x11247 = x3580 * x10316;
  const amrex::Real x11248 = x4811 * x3833;
  const amrex::Real x11249 = x3564 * x10316;
  const amrex::Real x11250 = x4811 * x3834;
  const amrex::Real x11251 = x11247 - x11248 - x11249 + x11250;
  const amrex::Real x11252 = x4856 * x4008;
  const amrex::Real x11253 = x4854 * x4008;
  const amrex::Real x11254 = x4819 * x3947;
  const amrex::Real x11255 = x4856 * x4009;
  const amrex::Real x11256 = x4854 * x4065;
  const amrex::Real x11257 = x4815 * x3948;
  const amrex::Real x11258 = x4815 * x3947;
  const amrex::Real x11259 = x4819 * x3948;
  const amrex::Real x11260 = x4854 * x4009;
  const amrex::Real x11261 = x3593 * x10256;
  const amrex::Real x11262 = x3607 * x10256;
  const amrex::Real x11263 = -x11261 + x11262;
  const amrex::Real x11264 = x4824 * x3947;
  const amrex::Real x11265 = x4824 * x3948;
  const amrex::Real x11266 = x11264 - x11265;
  const amrex::Real x11267 = x4806 * x3835;
  const amrex::Real x11268 = x4806 * x3836;
  const amrex::Real x11269 = -x11267 + x11268;
  const amrex::Real x11270 = x4811 * x3835;
  const amrex::Real x11271 = x3607 * x10316;
  const amrex::Real x11272 = x3593 * x10316;
  const amrex::Real x11273 = x4811 * x3836;
  const amrex::Real x11274 = -x11270 + x11271 - x11272 + x11273;
  const amrex::Real x11275 = x4815 * x3950;
  const amrex::Real x11276 = x4819 * x3950;
  const amrex::Real x11277 = x4856 * x4010;
  const amrex::Real x11278 = x4815 * x3949;
  const amrex::Real x11279 = x4854 * x4066;
  const amrex::Real x11280 = x4854 * x4010;
  const amrex::Real x11281 = x4819 * x3949;
  const amrex::Real x11282 = x3621 * x10256;
  const amrex::Real x11283 = x3635 * x10256;
  const amrex::Real x11284 = -x11282 + x11283;
  const amrex::Real x11285 = x4824 * x3950;
  const amrex::Real x11286 = x4824 * x3949;
  const amrex::Real x11287 = -x11285 + x11286;
  const amrex::Real x11288 = x10301 + x10314;
  const amrex::Real x11289 = x4806 * x3838;
  const amrex::Real x11290 = x4806 * x3837;
  const amrex::Real x11291 = x11289 - x11290;
  const amrex::Real x11292 = x3621 * x10316;
  const amrex::Real x11293 = x3635 * x10316;
  const amrex::Real x11294 = x4811 * x3838;
  const amrex::Real x11295 = x4811 * x3837;
  const amrex::Real x11296 = -x11292 + x11293 + x11294 - x11295;
  const amrex::Real x11297 = x3651 * x10256;
  const amrex::Real x11298 = x4819 * x3951;
  const amrex::Real x11299 = x4856 * x4011;
  const amrex::Real x11300 = x4815 * x3951;
  const amrex::Real x11301 = x4854 * x4067;
  const amrex::Real x11302 = x4854 * x4011;
  const amrex::Real x11303 = x4806 * x3839;
  const amrex::Real x11304 = x4824 * x3951;
  const amrex::Real x11305 = x10262 + x11304;
  const amrex::Real x11306 = x10259 + x10301;
  const amrex::Real x11307 = x10311 + x11306;
  const amrex::Real x11308 = x4811 * x3839;
  const amrex::Real x11309 = x3651 * x10316;
  const amrex::Real x11310 = x11308 + x11309;
  const amrex::Real x11311 = x3664 * x10256;
  const amrex::Real x11312 = x4854 * x4012;
  const amrex::Real x11313 = x4856 * x4012;
  const amrex::Real x11314 = x4854 * x4068;
  const amrex::Real x11315 = x4819 * x3952;
  const amrex::Real x11316 = x4815 * x3952;
  const amrex::Real x11317 = x4824 * x3952;
  const amrex::Real x11318 = x10262 + x11317;
  const amrex::Real x11319 = x4806 * x3840;
  const amrex::Real x11320 = x10313 + x11319;
  const amrex::Real x11321 = x3664 * x10316;
  const amrex::Real x11322 = x4811 * x3840;
  const amrex::Real x11323 = x10321 + x11321 + x11322;
  const amrex::Real x11324 = x3668 * x10256;
  const amrex::Real x11325 = x4815 * x3953;
  const amrex::Real x11326 = x4819 * x3953;
  const amrex::Real x11327 = x4824 * x3953;
  const amrex::Real x11328 = x10262 + x11327;
  const amrex::Real x11329 = x4806 * x3841;
  const amrex::Real x11330 = x10313 + x11329;
  const amrex::Real x11331 = x3668 * x10316;
  const amrex::Real x11332 = x4811 * x3841;
  const amrex::Real x11333 = x10321 + x11331 + x11332;
  const amrex::Real x11334 = x3674 * x10256;
  const amrex::Real x11335 = x3677 * x10256;
  const amrex::Real x11336 = -x11334 + x11335;
  const amrex::Real x11337 = x4806 * x3842;
  const amrex::Real x11338 = x10313 + x11337;
  const amrex::Real x11339 = x3674 * x10316;
  const amrex::Real x11340 = x4811 * x3842;
  const amrex::Real x11341 = x3677 * x10316;
  const amrex::Real x11342 = x10319 - x11339 + x11340 + x11341;
  const amrex::Real x11343 = x4890 * x3891;
  const amrex::Real x11344 = x4894 * x4018;
  const amrex::Real x11345 = x4894 * x3955;
  const amrex::Real x11346 = 10600000.0 * x6109;
  const amrex::Real x11347 = x4869 * x3779;
  const amrex::Real x11348 = x4867 * x3779;
  const amrex::Real x11349 = x4879 * x3894;
  const amrex::Real x11350 = -x11349;
  const amrex::Real x11351 = x4879 * x3891;
  const amrex::Real x11352 = x11350 + x11351;
  const amrex::Real x11353 = -x10269;
  const amrex::Real x11354 = x11353 + x6264;
  const amrex::Real x11355 = x11354 + x6103;
  const amrex::Real x11356 = 20000000.0 * sc[4];
  const amrex::Real x11357 = x2033 * x11356;
  const amrex::Real x11358 = x4890 * x3955;
  const amrex::Real x11359 = x4861 * x3779;
  const amrex::Real x11360 = x4897 * x3891;
  const amrex::Real x11361 = x4890 * x4018;
  const amrex::Real x11362 = x4926 * x11345;
  const amrex::Real x11363 = x1814 * x11356;
  const amrex::Real x11364 = -x11363;
  const amrex::Real x11365 = x4897 * x3894;
  const amrex::Real x11366 = x4861 * x3774;
  const amrex::Real x11367 = -x11366;
  const amrex::Real x11368 = x4890 * x3958;
  const amrex::Real x11369 = -x11368;
  const amrex::Real x11370 = x4894 * x3958;
  const amrex::Real x11371 = x4926 * x11370;
  const amrex::Real x11372 = x4890 * x4015;
  const amrex::Real x11373 = -x11372;
  const amrex::Real x11374 = x4921 * x3863;
  const amrex::Real x11375 = x10271 - x11374;
  const amrex::Real x11376 = x11373 + x11375;
  const amrex::Real x11377 = x11369 + x11371 + x11376;
  const amrex::Real x11378 = x11365 + x11367 + x11377;
  const amrex::Real x11379 = x11364 + x11378;
  const amrex::Real x11380 =
    x11357 + x11358 + x11359 - x11360 + x11361 - x11362 + x11379;
  const amrex::Real x11381 = x4889 * x3846;
  const amrex::Real x11382 = x11381 + x6603;
  const amrex::Real x11383 = -x4890 * x3894;
  const amrex::Real x11384 = x4867 * x3774;
  const amrex::Real x11385 = x4869 * x3774;
  const amrex::Real x11386 = x4900 * x3863;
  const amrex::Real x11387 = x4905 * x3863;
  const amrex::Real x11388 = x4911 * x3863;
  const amrex::Real x11389 = x4916 * x3863;
  const amrex::Real x11390 = x4883 * x3846;
  const amrex::Real x11391 = x4886 * x3846;
  const amrex::Real x11392 = x24 + x625;
  const amrex::Real x11393 = 1153.87581469022 * invT;
  const amrex::Real x11394 = -0.214 * tc[0] + x11393;
  const amrex::Real x11395 = 0.00181081081081081 * exp(x11394) * x11392;
  const amrex::Real x11396 = log(
    0.2654 * x838 + exp(-5182.0 * invT) +
    0.7346 * exp(-0.000569476082004556 * tc[1]));
  const amrex::Real x11397 = -0.4 + x33 * log(x11395) - x503 * x11396;
  const amrex::Real x11398 = pow(x11397, 2);
  const amrex::Real x11399 = 0.75 - 0.14 * x11397 - x507 * x11396;
  const amrex::Real x11400 = pow(x11399, -2);
  const amrex::Real x11401 = 1.0 + x11400 * x11398;
  const amrex::Real x11402 = pow(10, x33 * x11396 / x11401);
  const amrex::Real x11403 = 1.0 + x11395;
  const amrex::Real x11404 = x11402 * x11392 / pow(x11403, 2);
  const amrex::Real x11405 = 727.945945945946 * x11404;
  const amrex::Real x11406 = -(x136 + x7111);
  const amrex::Real x11407 = 2307.75162938044 * invT - 0.798 * tc[0];
  const amrex::Real x11408 = exp(x11406 + x11407) * refC * sc[7];
  const amrex::Real x11409 = x11405 * x11408;
  const amrex::Real x11410 = x11402 / x11403;
  const amrex::Real x11411 = 402000.0 * x11410;
  const amrex::Real x11412 = -0.584 * tc[0] + x11393;
  const amrex::Real x11413 = exp(x11406 + x11412) * refC;
  const amrex::Real x11414 = sc[7] * x11413;
  const amrex::Real x11415 = x11411 * x11414;
  const amrex::Real x11416 = exp(x11412);
  const amrex::Real x11417 = pow(sc[3], 2);
  const amrex::Real x11418 = x11416 * x11417;
  const amrex::Real x11419 = x11411 * x11418;
  const amrex::Real x11420 = x33 / x11392;
  const amrex::Real x11421 = x11400 * x11420 * x11397;
  const amrex::Real x11422 = x11420 * x11398 / pow(x11399, 3);
  const amrex::Real x11423 = 2.0 * x11421 + 0.28 * x11422;
  const amrex::Real x11424 = x11411 * x11392;
  const amrex::Real x11425 = x11396 / pow(x11401, 2);
  const amrex::Real x11426 = x11414 * x11424 * x11425;
  const amrex::Real x11427 = exp(x11407) * x11417;
  const amrex::Real x11428 = x11405 * x11427;
  const amrex::Real x11429 = x11425 * x11392;
  const amrex::Real x11430 = x11419 * x11429;
  const amrex::Real x11431 = -x11409 + x11415 - x11419 + x11428 - x6589 +
                             x6593 - x11423 * x11426 + x11430 * x11423;
  const amrex::Real x11432 = -x11390 - x11391 + x11431;
  const amrex::Real x11433 =
    -x10314 + x11386 + x11387 - x11388 + x11389 + x11432;
  const amrex::Real x11434 = x4894 * x4015;
  const amrex::Real x11435 = x5186 + x5187;
  const amrex::Real x11436 = x11434 + x11435;
  const amrex::Real x11437 =
    x10261 + x10312 + x11370 + x11383 + x11384 + x11385 + x11433 + x11436;
  const amrex::Real x11438 = x6196 + x6197 - x1814 * x11346;
  const amrex::Real x11439 = -2727.43432866158 * invT + x6739;
  const amrex::Real x11440 = 56.0 * exp(x11439 - x1261);
  const amrex::Real x11441 = sc[6] * x11440;
  const amrex::Real x11442 = x1814 * x11441;
  const amrex::Real x11443 = x4872 * x3706;
  const amrex::Real x11444 = -x11442 - x11443;
  const amrex::Real x11445 = x11444 + x6265;
  const amrex::Real x11446 = x11438 + x11445;
  const amrex::Real x11447 = x4872 * x3703;
  const amrex::Real x11448 = x2033 * x11441;
  const amrex::Real x11449 = x11447 + x11448;
  const amrex::Real x11450 = x4900 * x3864;
  const amrex::Real x11451 = x4905 * x3864;
  const amrex::Real x11452 = 8.4e+26 * x6766;
  const amrex::Real x11453 = x4890 * x3898;
  const amrex::Real x11454 = -x4890 * x3899;
  const amrex::Real x11455 = x4883 * x3847;
  const amrex::Real x11456 = x4867 * x3781;
  const amrex::Real x11457 = x4867 * x3780;
  const amrex::Real x11458 = x4894 * x4019;
  const amrex::Real x11459 = x4894 * x4020;
  const amrex::Real x11460 = x4894 * x3960;
  const amrex::Real x11461 = x4869 * x3781;
  const amrex::Real x11462 = x4911 * x3864;
  const amrex::Real x11463 = x4869 * x3780;
  const amrex::Real x11464 = x4894 * x3961;
  const amrex::Real x11465 = 149700000.0 * x6921;
  const amrex::Real x11466 = x4916 * x3864;
  const amrex::Real x11467 = x4886 * x3847;
  const amrex::Real x11468 = x4879 * x3898;
  const amrex::Real x11469 = x4879 * x3899;
  const amrex::Real x11470 = x11468 - x11469;
  const amrex::Real x11471 = -x10327 + x6746 + x6838 + x6843 + x6844;
  const amrex::Real x11472 = x4897 * x3899;
  const amrex::Real x11473 = x2071 * x11356;
  const amrex::Real x11474 = x4861 * x3780;
  const amrex::Real x11475 = x4861 * x3781;
  const amrex::Real x11476 = x2106 * x11356;
  const amrex::Real x11477 = x4897 * x3898;
  const amrex::Real x11478 = x4926 * x11460;
  const amrex::Real x11479 = x4890 * x3961;
  const amrex::Real x11480 = x4921 * x3864;
  const amrex::Real x11481 = x4890 * x4020;
  const amrex::Real x11482 = x4890 * x4019;
  const amrex::Real x11483 = x4926 * x11464;
  const amrex::Real x11484 = x4890 * x3960;
  const amrex::Real x11485 = x10334 + x11472 - x11473 - x11474 + x11475 +
                             x11476 - x11477 - x11478 - x11479 - x11480 +
                             x11481 - x11482 + x11483 + x11484;
  const amrex::Real x11486 = x11431 + x6603;
  const amrex::Real x11487 = x11435 + x11486;
  const amrex::Real x11488 = x2106 * x11441;
  const amrex::Real x11489 = x4872 * x3708;
  const amrex::Real x11490 = x4872 * x3709;
  const amrex::Real x11491 = x2071 * x11441;
  const amrex::Real x11492 = x11488 + x11489 - x11490 - x11491 -
                             32000000.0 * x1771 - 32000000.0 * x6518 +
                             x4889 * x3847;
  const amrex::Real x11493 = x4900 * x3865;
  const amrex::Real x11494 = x4905 * x3865;
  const amrex::Real x11495 = x4890 * x3900;
  const amrex::Real x11496 = -x4890 * x3901;
  const amrex::Real x11497 = x4916 * x3865;
  const amrex::Real x11498 = x4883 * x3848;
  const amrex::Real x11499 = x4867 * x3784;
  const amrex::Real x11500 = x4894 * x4021;
  const amrex::Real x11501 = x4867 * x3782;
  const amrex::Real x11502 = x4894 * x4022;
  const amrex::Real x11503 = x4869 * x3784;
  const amrex::Real x11504 = x4869 * x3782;
  const amrex::Real x11505 = x4911 * x3865;
  const amrex::Real x11506 = x4886 * x3848;
  const amrex::Real x11507 = x4894 * x3962;
  const amrex::Real x11508 = x4894 * x3963;
  const amrex::Real x11509 = 0.07946 * x10425;
  const amrex::Real x11510 = x10430 + x10433;
  const amrex::Real x11511 = x4879 * x3901;
  const amrex::Real x11512 = x4879 * x3900;
  const amrex::Real x11513 = -x11511 + x11512;
  const amrex::Real x11514 = -x10409 + x10412 + x7031;
  const amrex::Real x11515 = x4890 * x3962;
  const amrex::Real x11516 = x4861 * x3782;
  const amrex::Real x11517 = x2184 * x11356;
  const amrex::Real x11518 = x2141 * x11356;
  const amrex::Real x11519 = x4861 * x3784;
  const amrex::Real x11520 = x4926 * x11507;
  const amrex::Real x11521 = x4897 * x3900;
  const amrex::Real x11522 = x4897 * x3901;
  const amrex::Real x11523 = x4890 * x4021;
  const amrex::Real x11524 = x4921 * x3865;
  const amrex::Real x11525 = x4890 * x3963;
  const amrex::Real x11526 = x4890 * x4022;
  const amrex::Real x11527 = x212 * x4896;
  const amrex::Real x11528 = x3963 * x11527;
  const amrex::Real x11529 =
    -x10390 + x10391 - x10393 + x11515 - x11516 + x11517 - x11518 + x11519 -
    x11520 - x11521 + x11522 - x11523 - x11524 - x11525 + x11526 + x11528;
  const amrex::Real x11530 = x2184 * x11441;
  const amrex::Real x11531 = x4872 * x3710;
  const amrex::Real x11532 = x2141 * x11441;
  const amrex::Real x11533 = x4872 * x3711;
  const amrex::Real x11534 =
    x10371 + x11530 + x11531 - x11532 - x11533 + x4889 * x3848;
  const amrex::Real x11535 = 1006.43333160944 * invT + 4.0 * tc[0];
  const amrex::Real x11536 = 4.83e-10 * exp(x11535);
  const amrex::Real x11537 = x11536 * sc[14];
  const amrex::Real x11538 = -x11537;
  const amrex::Real x11539 = -1570.03599731073 * invT + x6739;
  const amrex::Real x11540 = 100.0 * exp(x11539);
  const amrex::Real x11541 = x11540 * sc[10];
  const amrex::Real x11542 = -x11541;
  const amrex::Real x11543 = -x7108;
  const amrex::Real x11544 = 0.0007 * x5215;
  const amrex::Real x11545 = x11544 * sc[22];
  const amrex::Real x11546 = -x11545;
  const amrex::Real x11547 = 149.958566409806 * invT + x4913;
  const amrex::Real x11548 = 3.1 * exp(x11547);
  const amrex::Real x11549 = x11548 * sc[19];
  const amrex::Real x11550 = -x11549;
  const amrex::Real x11551 = -x7106;
  const amrex::Real x11552 = 18000.0 * exp(-(x1726 + x208 + x637));
  const amrex::Real x11553 = x11552 * sc[11];
  const amrex::Real x11554 = x692 * x11553;
  const amrex::Real x11555 = -x11554;
  const amrex::Real x11556 = -x10477;
  const amrex::Real x11557 = 24000000.0 * x1644;
  const amrex::Real x11558 = -x11557;
  const amrex::Real x11559 = x4890 * x3902;
  const amrex::Real x11560 = -x4890 * x3903;
  const amrex::Real x11561 = x6519 * x4882;
  const amrex::Real x11562 = x4867 * x3786;
  const amrex::Real x11563 = x4867 * x3785;
  const amrex::Real x11564 = 804000.0 * x11410;
  const amrex::Real x11565 = sc[3] * x11416;
  const amrex::Real x11566 = x4894 * x4023;
  const amrex::Real x11567 = 30110000.0 * x1488;
  const amrex::Real x11568 = x4869 * x3785;
  const amrex::Real x11569 = x4869 * x3786;
  const amrex::Real x11570 = 30110000.0 * x6624;
  const amrex::Real x11571 = x4883 * x3849;
  const amrex::Real x11572 = 5000000.0 * x1771;
  const amrex::Real x11573 = x4894 * x4024;
  const amrex::Real x11574 = x4886 * x3849;
  const amrex::Real x11575 = 5000000.0 * x6518;
  const amrex::Real x11576 = 30200000.0 * x6383;
  const amrex::Real x11577 = x4911 * x3866;
  const amrex::Real x11578 = x4894 * x3964;
  const amrex::Real x11579 = x4894 * x3965;
  const amrex::Real x11580 = x6383 * x4866;
  const amrex::Real x11581 = -x3679;
  const amrex::Real x11582 = 89000000000.0 * exp(x11581 - x4874);
  const amrex::Real x11583 = x3678 * x11582;
  const amrex::Real x11584 = x894 * kf_qss[196];
  const amrex::Real x11585 = -x11583 - x11584 * x11583;
  const amrex::Real x11586 = 10000000.0 * x1428;
  const amrex::Real x11587 = x11586 * sc[17];
  const amrex::Real x11588 = x4900 * x3866;
  const amrex::Real x11589 = -x11587 + x11588;
  const amrex::Real x11590 = -11503.0297636301 * invT - 0.41 * tc[0];
  const amrex::Real x11591 = 18200000.0 * exp(x11590 - (x650 + x6763));
  const amrex::Real x11592 = x11591 * sc[20];
  const amrex::Real x11593 = x4905 * x3866;
  const amrex::Real x11594 = 3430.0 * exp(x4859);
  const amrex::Real x11595 = x11594 * sc[20];
  const amrex::Real x11596 = -x11592 + x11593 - x11595;
  const amrex::Real x11597 = -9029.02038003442 * invT + 2.18 * tc[0];
  const amrex::Real x11598 = 0.157 * exp(x11597 - (x209 + x6834));
  const amrex::Real x11599 = x11598 * sc[13];
  const amrex::Real x11600 = -x11599 + x7197;
  const amrex::Real x11601 = -x10502 - x10504;
  const amrex::Real x11602 = -18920.9466342575 * invT - 7.0 * tc[0];
  const amrex::Real x11603 = 2.67e+35 * exp(x11602);
  const amrex::Real x11604 = sc[7] * x11603;
  const amrex::Real x11605 = 214.873516298615 * invT;
  const amrex::Real x11606 = 2000000.0 * exp(-x11605);
  const amrex::Real x11607 = sc[7] * x11606;
  const amrex::Real x11608 = -x11604 - x11607;
  const amrex::Real x11609 = exp(-(x1397 + x1401 + x210));
  const amrex::Real x11610 = x11609 * sc[18];
  const amrex::Real x11611 = 24000000.0 * x2185 * x11610;
  const amrex::Real x11612 = -x11611;
  const amrex::Real x11613 = 4.2e+26 * x7118;
  const amrex::Real x11614 = x11613 * sc[18];
  const amrex::Real x11615 = -x10465 + x11612 - x11614;
  const amrex::Real x11616 = x4879 * x3903;
  const amrex::Real x11617 = 3.54 * exp(x4877);
  const amrex::Real x11618 = x11617 * sc[16];
  const amrex::Real x11619 = x4879 * x3902;
  const amrex::Real x11620 = -x11616 - x11618 + x11619;
  const amrex::Real x11621 = -x10484 - x10488 - x10490 - x7154 - x7156;
  const amrex::Real x11622 = 252.569476734047 * invT;
  const amrex::Real x11623 = 28910000.0 * exp(x11622);
  const amrex::Real x11624 = sc[4] * x11623;
  const amrex::Real x11625 = -x10459 - x11624;
  const amrex::Real x11626 = x4897 * x3903;
  const amrex::Real x11627 = x4890 * x3964;
  const amrex::Real x11628 = x11594 * sc[11];
  const amrex::Real x11629 = x4897 * x3902;
  const amrex::Real x11630 = x2259 * x11356;
  const amrex::Real x11631 = x2291 * x11356;
  const amrex::Real x11632 = x4890 * x3965;
  const amrex::Real x11633 = 4498.75699229419 * invT;
  const amrex::Real x11634 = 36000.0 * exp(-x11633 - (x650 + x6937));
  const amrex::Real x11635 = x11634 * sc[11];
  const amrex::Real x11636 = x6930 * x1773;
  const amrex::Real x11637 = 24000000.0 * x6334;
  const amrex::Real x11638 = x256 * x11637;
  const amrex::Real x11639 = x2185 * x11638;
  const amrex::Real x11640 = x4861 * x3786;
  const amrex::Real x11641 = x4921 * x3866;
  const amrex::Real x11642 = x4890 * x4024;
  const amrex::Real x11643 = x4926 * x11578;
  const amrex::Real x11644 = 6600000.0 * x6625;
  const amrex::Real x11645 = x704 * x11644 * sc[11];
  const amrex::Real x11646 = 24000000.0 * x6004;
  const amrex::Real x11647 = x212 * x11646;
  const amrex::Real x11648 = x2185 * x11647;
  const amrex::Real x11649 = x4861 * x3785;
  const amrex::Real x11650 = x3965 * x11527;
  const amrex::Real x11651 = x4890 * x4023;
  const amrex::Real x11652 =
    x10479 - x10487 + x11626 + x11627 - x11628 - x11629 - x11630 + x11631 -
    x11632 - x11635 - x11636 - x11639 + x11640 - x11641 + x11642 - x11643 -
    x11645 - x11648 - x11649 + x11650 - x11651;
  const amrex::Real x11653 = x4916 * x3866;
  const amrex::Real x11654 = 3.6 * exp(x4914);
  const amrex::Real x11655 = x11654 * sc[15];
  const amrex::Real x11656 = x11653 - x11655;
  const amrex::Real x11657 = 24000000.0 * x6164;
  const amrex::Real x11658 = -x11646 - x11657 - x7114;
  const amrex::Real x11659 = x2259 * x11441;
  const amrex::Real x11660 = x2291 * x11441;
  const amrex::Real x11661 = x4872 * x3712;
  const amrex::Real x11662 = 25010000.0 * sc[9];
  const amrex::Real x11663 = x4872 * x3713;
  const amrex::Real x11664 = 56.0 * exp(x11439);
  const amrex::Real x11665 = sc[9] * x11664;
  const amrex::Real x11666 = -x10462 - x11659 + x11660 + x11661 - x11662 -
                             x11663 - x11665 - x7141 + x4889 * x3849;
  const amrex::Real x11667 = x4905 * x3867;
  const amrex::Real x11668 = -x10517;
  const amrex::Real x11669 = x4890 * x3904;
  const amrex::Real x11670 = -x4890 * x3905;
  const amrex::Real x11671 = x4916 * x3867;
  const amrex::Real x11672 = x4867 * x3788;
  const amrex::Real x11673 = x4894 * x4026;
  const amrex::Real x11674 = x4869 * x3788;
  const amrex::Real x11675 = x4894 * x4025;
  const amrex::Real x11676 = x4867 * x3787;
  const amrex::Real x11677 = x4894 * x3966;
  const amrex::Real x11678 = x4886 * x3850;
  const amrex::Real x11679 = x4911 * x3867;
  const amrex::Real x11680 = x4894 * x3967;
  const amrex::Real x11681 = x4869 * x3787;
  const amrex::Real x11682 = x4883 * x3850;
  const amrex::Real x11683 = 10000000.0 * x6624;
  const amrex::Real x11684 = 10000000.0 * x1488;
  const amrex::Real x11685 = x4900 * x3867;
  const amrex::Real x11686 = -x11683 - x11684 + x11685;
  const amrex::Real x11687 = 0.157 * exp(x11597);
  const amrex::Real x11688 = x11687 * sc[12];
  const amrex::Real x11689 = x11688 + x7297;
  const amrex::Real x11690 = x4879 * x3904;
  const amrex::Real x11691 = x4879 * x3905;
  const amrex::Real x11692 = x11690 - x11691;
  const amrex::Real x11693 = -(x116 + x1383);
  const amrex::Real x11694 = 2000000.0 * exp(-x11605 + x11693);
  const amrex::Real x11695 = sc[6] * x11694;
  const amrex::Real x11696 = 2.67e+35 * exp(x11602 + x11693);
  const amrex::Real x11697 = sc[6] * x11696;
  const amrex::Real x11698 = x11695 + x11697;
  const amrex::Real x11699 = 24000000.0 * sc[21];
  const amrex::Real x11700 = x4897 * x3904;
  const amrex::Real x11701 = x2334 * x11356;
  const amrex::Real x11702 = x2351 * x11356;
  const amrex::Real x11703 = x4890 * x3967;
  const amrex::Real x11704 = x4861 * x3788;
  const amrex::Real x11705 = x3967 * x11527;
  const amrex::Real x11706 = x4897 * x3905;
  const amrex::Real x11707 = x4921 * x3867;
  const amrex::Real x11708 = x4861 * x3787;
  const amrex::Real x11709 = x4890 * x4026;
  const amrex::Real x11710 = x4926 * x11677;
  const amrex::Real x11711 = x4890 * x4025;
  const amrex::Real x11712 = x4890 * x3966;
  const amrex::Real x11713 = 6600000.0 * sc[18] + x10528 + x11646 + x11657 +
                             x11699 - x11700 - x11701 + x11702 - x11703 +
                             x11704 + x11705 + x11706 - x11707 - x11708 +
                             x11709 - x11710 - x11711 + x11712;
  const amrex::Real x11714 = sc[3] * x11623;
  const amrex::Real x11715 = -x10519 - x11714;
  const amrex::Real x11716 = x2334 * x11441;
  const amrex::Real x11717 = x2351 * x11441;
  const amrex::Real x11718 = x4872 * x3714;
  const amrex::Real x11719 = x4872 * x3715;
  const amrex::Real x11720 = -x11716 + x11717 + x11718 - x11719 + x4889 * x3850;
  const amrex::Real x11721 = x4905 * x3868;
  const amrex::Real x11722 = x4900 * x3868;
  const amrex::Real x11723 = -x7324;
  const amrex::Real x11724 = -x4890 * x3907;
  const amrex::Real x11725 = x4890 * x3906;
  const amrex::Real x11726 = x11404 * x11427;
  const amrex::Real x11727 = 4.0 * x11421 + 0.56 * x11422;
  const amrex::Real x11728 = x4869 * x3789;
  const amrex::Real x11729 = x4894 * x4028;
  const amrex::Real x11730 = x4869 * x3790;
  const amrex::Real x11731 = x4894 * x4027;
  const amrex::Real x11732 = x4867 * x3790;
  const amrex::Real x11733 = x11404 * x11408;
  const amrex::Real x11734 = x11418 * x11410;
  const amrex::Real x11735 = x4911 * x3868;
  const amrex::Real x11736 = x4886 * x3852;
  const amrex::Real x11737 = x4894 * x3968;
  const amrex::Real x11738 = x4894 * x3969;
  const amrex::Real x11739 = x4883 * x3852;
  const amrex::Real x11740 = x4867 * x3789;
  const amrex::Real x11741 = x4916 * x3868;
  const amrex::Real x11742 = x4879 * x3907;
  const amrex::Real x11743 = x4879 * x3906;
  const amrex::Real x11744 = -x11742 + x11743;
  const amrex::Real x11745 = -x10550 + x7441;
  const amrex::Real x11746 = x4897 * x3907;
  const amrex::Real x11747 = x4897 * x3906;
  const amrex::Real x11748 = x2460 * x11356;
  const amrex::Real x11749 = x4921 * x3868;
  const amrex::Real x11750 = x4890 * x4028;
  const amrex::Real x11751 = x4890 * x3969;
  const amrex::Real x11752 = x4926 * x11737;
  const amrex::Real x11753 = x4861 * x3790;
  const amrex::Real x11754 = x4890 * x3968;
  const amrex::Real x11755 = x2507 * x11356;
  const amrex::Real x11756 = x3969 * x11527;
  const amrex::Real x11757 = x4861 * x3789;
  const amrex::Real x11758 = x4890 * x4027;
  const amrex::Real x11759 = x10564 + x11746 - x11747 - x11748 - x11749 +
                             x11750 - x11751 - x11752 + x11753 + x11754 +
                             x11755 + x11756 - x11757 - x11758;
  const amrex::Real x11760 = x2460 * x11441;
  const amrex::Real x11761 = x4872 * x3717;
  const amrex::Real x11762 = x4872 * x3716;
  const amrex::Real x11763 = x2507 * x11441;
  const amrex::Real x11764 = -x11760 - x11761 + x11762 + x11763 + x4889 * x3852;
  const amrex::Real x11765 = x4900 * x3869;
  const amrex::Real x11766 = 100.0 * exp(x11539 - (x10460 + x116));
  const amrex::Real x11767 = sc[9] * x11766;
  const amrex::Real x11768 = 0.0007 * exp(x4467 - (x10499 + x116));
  const amrex::Real x11769 = x11768 * sc[21];
  const amrex::Real x11770 = 3.1 * exp(x11547 - (x10463 + x116));
  const amrex::Real x11771 = x11770 * sc[18];
  const amrex::Real x11772 = -x7575;
  const amrex::Real x11773 = 28910000.0 * exp(x11622 - (x116 + x1626));
  const amrex::Real x11774 = sc[8] * x11773;
  const amrex::Real x11775 = -x4890 * x3909;
  const amrex::Real x11776 = x4890 * x3908;
  const amrex::Real x11777 = x4883 * x3853;
  const amrex::Real x11778 = x4867 * x3792;
  const amrex::Real x11779 = x4867 * x3791;
  const amrex::Real x11780 = 12.0 * x11421 + 1.68 * x11422;
  const amrex::Real x11781 = 24000000.0 * x1566;
  const amrex::Real x11782 = x11781 * sc[22];
  const amrex::Real x11783 = x4894 * x4029;
  const amrex::Real x11784 = x4894 * x4030;
  const amrex::Real x11785 = 5000000.0 * x1763;
  const amrex::Real x11786 = x11785 * sc[11];
  const amrex::Real x11787 = x4869 * x3791;
  const amrex::Real x11788 = x4869 * x3792;
  const amrex::Real x11789 = 30110000.0 * x1389;
  const amrex::Real x11790 = x11789 * sc[14];
  const amrex::Real x11791 = 30200000.0 * x1704;
  const amrex::Real x11792 = x11791 * sc[12];
  const amrex::Real x11793 = 24000000.0 * x1595;
  const amrex::Real x11794 = x11793 * sc[19];
  const amrex::Real x11795 = x4894 * x3970;
  const amrex::Real x11796 = x4894 * x3971;
  const amrex::Real x11797 = x4886 * x3853;
  const amrex::Real x11798 = x11414 * x11410;
  const amrex::Real x11799 = x4911 * x3869;
  const amrex::Real x11800 = x4903 * x10489;
  const amrex::Real x11801 = x4905 * x3869;
  const amrex::Real x11802 = x11800 + x11801;
  const amrex::Real x11803 = sc[4] * x11694;
  const amrex::Real x11804 = sc[4] * x11696;
  const amrex::Real x11805 = x11803 + x11804;
  const amrex::Real x11806 = x4879 * x3909;
  const amrex::Real x11807 = x4879 * x3908;
  const amrex::Real x11808 = x6334 * x4878;
  const amrex::Real x11809 = -x11806 + x11807 + x11808;
  const amrex::Real x11810 = -x10591 + x7648;
  const amrex::Real x11811 = x2585 * x11356;
  const amrex::Real x11812 = x4890 * x3970;
  const amrex::Real x11813 = x4897 * x3908;
  const amrex::Real x11814 = x4897 * x3909;
  const amrex::Real x11815 = x4890 * x3971;
  const amrex::Real x11816 = x4861 * x3792;
  const amrex::Real x11817 = x4890 * x4029;
  const amrex::Real x11818 = x6383 * x4860;
  const amrex::Real x11819 = x4926 * x11795;
  const amrex::Real x11820 = x4861 * x3791;
  const amrex::Real x11821 = x4890 * x4030;
  const amrex::Real x11822 = x4921 * x3869;
  const amrex::Real x11823 = x4926 * x11796;
  const amrex::Real x11824 = x2614 * x11356;
  const amrex::Real x11825 = x10604 - x11811 + x11812 - x11813 + x11814 -
                             x11815 + x11816 - x11817 + x11818 - x11819 -
                             x11820 + x11821 - x11822 + x11823 + x11824;
  const amrex::Real x11826 = x6625 * x4915;
  const amrex::Real x11827 = x4916 * x3869;
  const amrex::Real x11828 = x11826 + x11827;
  const amrex::Real x11829 = x2585 * x11441;
  const amrex::Real x11830 = x6392 * x11440;
  const amrex::Real x11831 = x4872 * x3718;
  const amrex::Real x11832 = x4872 * x3719;
  const amrex::Real x11833 = x4871 * x7059;
  const amrex::Real x11834 = x2614 * x11441;
  const amrex::Real x11835 =
    -x11829 + x11830 + x11831 - x11832 + x11833 + x11834 + x4889 * x3853;
  const amrex::Real x11836 = x4905 * x3870;
  const amrex::Real x11837 = x4900 * x3870;
  const amrex::Real x11838 = -x4890 * x3911;
  const amrex::Real x11839 = x4890 * x3910;
  const amrex::Real x11840 = x4867 * x3793;
  const amrex::Real x11841 = x4869 * x3793;
  const amrex::Real x11842 = x4894 * x4032;
  const amrex::Real x11843 = x4869 * x3794;
  const amrex::Real x11844 = x4911 * x3870;
  const amrex::Real x11845 = x4916 * x3870;
  const amrex::Real x11846 = x4894 * x3972;
  const amrex::Real x11847 = x4894 * x3973;
  const amrex::Real x11848 = x4894 * x4031;
  const amrex::Real x11849 = x4867 * x3794;
  const amrex::Real x11850 = x4879 * x3910;
  const amrex::Real x11851 = x4879 * x3911;
  const amrex::Real x11852 = x11850 - x11851;
  const amrex::Real x11853 = sc[3] * x11603;
  const amrex::Real x11854 = sc[3] * x11606;
  const amrex::Real x11855 = -x11853 - x11854;
  const amrex::Real x11856 = -x10626 + x7804;
  const amrex::Real x11857 = x10271 + x11432;
  const amrex::Real x11858 = x11382 + x11857;
  const amrex::Real x11859 = x2666 * x11356;
  const amrex::Real x11860 = x2652 * x11356;
  const amrex::Real x11861 = x4897 * x3911;
  const amrex::Real x11862 = x4890 * x3972;
  const amrex::Real x11863 = x4861 * x3793;
  const amrex::Real x11864 = x4860 * x7845;
  const amrex::Real x11865 = x4897 * x3910;
  const amrex::Real x11866 = x4890 * x4031;
  const amrex::Real x11867 = x4890 * x3973;
  const amrex::Real x11868 = x4890 * x4032;
  const amrex::Real x11869 = x4921 * x3870;
  const amrex::Real x11870 = x4926 * x11846;
  const amrex::Real x11871 = x3973 * x11527;
  const amrex::Real x11872 = x11859 - x11860 + x11861 + x11862 - x11863 +
                             x11864 - x11865 - x11866 - x11867 + x11868 -
                             x11869 - x11870 + x11871;
  const amrex::Real x11873 = x4872 * x3720;
  const amrex::Real x11874 = x2652 * x11441;
  const amrex::Real x11875 = x4872 * x3721;
  const amrex::Real x11876 = x2666 * x11441;
  const amrex::Real x11877 = x11873 - x11874 - x11875 + x11876;
  const amrex::Real x11878 = x4900 * x3871;
  const amrex::Real x11879 = 18000.0 * sc[17];
  const amrex::Real x11880 = x4890 * x3912;
  const amrex::Real x11881 = -x4890 * x3913;
  const amrex::Real x11882 = sc[6] * x11773;
  const amrex::Real x11883 = -x10671;
  const amrex::Real x11884 = x3771 * kf_qss[194];
  const amrex::Real x11885 = -x4875 * x11884;
  const amrex::Real x11886 = x4867 * x3796;
  const amrex::Real x11887 = x4894 * x4033;
  const amrex::Real x11888 = x4867 * x3795;
  const amrex::Real x11889 = x4869 * x3795;
  const amrex::Real x11890 = x4869 * x3796;
  const amrex::Real x11891 = x4886 * x3854;
  const amrex::Real x11892 = x4894 * x4034;
  const amrex::Real x11893 = x4894 * x3975;
  const amrex::Real x11894 = x4883 * x3854;
  const amrex::Real x11895 = x4911 * x3871;
  const amrex::Real x11896 = x4894 * x3974;
  const amrex::Real x11897 = x4916 * x3871;
  const amrex::Real x11898 = x4905 * x3871;
  const amrex::Real x11899 = 18200000.0 * exp(x11590);
  const amrex::Real x11900 = x11899 * sc[18];
  const amrex::Real x11901 = x11898 + x11900;
  const amrex::Real x11902 = x4879 * x3912;
  const amrex::Real x11903 = x4879 * x3913;
  const amrex::Real x11904 = x11902 - x11903;
  const amrex::Real x11905 = -x10657 + x7903;
  const amrex::Real x11906 = x2716 * x11356;
  const amrex::Real x11907 = x4890 * x3974;
  const amrex::Real x11908 = x4897 * x3912;
  const amrex::Real x11909 = x4897 * x3913;
  const amrex::Real x11910 = x4861 * x3796;
  const amrex::Real x11911 = x4921 * x3871;
  const amrex::Real x11912 = x4890 * x3975;
  const amrex::Real x11913 = x4890 * x4034;
  const amrex::Real x11914 = x4861 * x3795;
  const amrex::Real x11915 = x2733 * x11356;
  const amrex::Real x11916 = 36000.0 * exp(-x11633);
  const amrex::Real x11917 = sc[9] * x11916;
  const amrex::Real x11918 = x3975 * x11527;
  const amrex::Real x11919 = x4926 * x11896;
  const amrex::Real x11920 = x4890 * x4033;
  const amrex::Real x11921 = x10674 - x11906 + x11907 - x11908 + x11909 +
                             x11910 - x11911 - x11912 + x11913 - x11914 +
                             x11915 + x11917 + x11918 - x11919 - x11920;
  const amrex::Real x11922 = x2716 * x11441;
  const amrex::Real x11923 = x4872 * x3722;
  const amrex::Real x11924 = x4872 * x3723;
  const amrex::Real x11925 = x2733 * x11441;
  const amrex::Real x11926 = -x11922 + x11923 - x11924 + x11925 + x4889 * x3854;
  const amrex::Real x11927 = x4905 * x3872;
  const amrex::Real x11928 = x4900 * x3872;
  const amrex::Real x11929 = 4.83e-10 * exp(x11535 - (x115 + x1393 + x710));
  const amrex::Real x11930 = x11929 * sc[12];
  const amrex::Real x11931 = sc[6] * x11766;
  const amrex::Real x11932 = x4890 * x3914;
  const amrex::Real x11933 = x4895 * x1643;
  const amrex::Real x11934 = -x11933;
  const amrex::Real x11935 = -x4890 * x3915;
  const amrex::Real x11936 = x4883 * x3855;
  const amrex::Real x11937 = x4867 * x3797;
  const amrex::Real x11938 = x4867 * x3798;
  const amrex::Real x11939 = x4894 * x4035;
  const amrex::Real x11940 = x4916 * x3872;
  const amrex::Real x11941 = x4869 * x3797;
  const amrex::Real x11942 = x4894 * x4036;
  const amrex::Real x11943 = x4911 * x3872;
  const amrex::Real x11944 = x4869 * x3798;
  const amrex::Real x11945 = x4894 * x3977;
  const amrex::Real x11946 = x4894 * x3976;
  const amrex::Real x11947 = x4886 * x3855;
  const amrex::Real x11948 = x4879 * x3915;
  const amrex::Real x11949 = x4879 * x3914;
  const amrex::Real x11950 = -x11948 + x11949;
  const amrex::Real x11951 = -x10695 + x8014;
  const amrex::Real x11952 = x4897 * x3914;
  const amrex::Real x11953 = x2780 * x11356;
  const amrex::Real x11954 = x4890 * x3977;
  const amrex::Real x11955 = x4890 * x3976;
  const amrex::Real x11956 = x4861 * x3797;
  const amrex::Real x11957 = x4861 * x3798;
  const amrex::Real x11958 = x3977 * x11527;
  const amrex::Real x11959 = sc[8] * x11916;
  const amrex::Real x11960 = x2761 * x11356;
  const amrex::Real x11961 = x4921 * x3872;
  const amrex::Real x11962 = x4926 * x11946;
  const amrex::Real x11963 = x4897 * x3915;
  const amrex::Real x11964 = x4890 * x4036;
  const amrex::Real x11965 = x4890 * x4035;
  const amrex::Real x11966 = x10711 - x11952 + x11953 - x11954 + x11955 -
                             x11956 + x11957 + x11958 + x11959 - x11960 -
                             x11961 - x11962 + x11963 + x11964 - x11965;
  const amrex::Real x11967 = x2761 * x11441;
  const amrex::Real x11968 = x2780 * x11441;
  const amrex::Real x11969 = x4872 * x3725;
  const amrex::Real x11970 = 25010000.0 * sc[3];
  const amrex::Real x11971 = sc[3] * x11664;
  const amrex::Real x11972 = x4872 * x3724;
  const amrex::Real x11973 = -x10697 - x11967 + x11968 - x11969 - x11970 -
                             x11971 + x11972 - x7986 + x4889 * x3855;
  const amrex::Real x11974 = x4900 * x3873;
  const amrex::Real x11975 = x4905 * x3873;
  const amrex::Real x11976 = sc[3] * x11540;
  const amrex::Real x11977 = -x11976;
  const amrex::Real x11978 = -x4890 * x3917;
  const amrex::Real x11979 = x4890 * x3916;
  const amrex::Real x11980 = x4867 * x3799;
  const amrex::Real x11981 = x4869 * x3799;
  const amrex::Real x11982 = x4869 * x3800;
  const amrex::Real x11983 = x4894 * x4038;
  const amrex::Real x11984 = x4911 * x3873;
  const amrex::Real x11985 = x4894 * x4037;
  const amrex::Real x11986 = x4894 * x3978;
  const amrex::Real x11987 = x4894 * x3979;
  const amrex::Real x11988 = x4867 * x3800;
  const amrex::Real x11989 = x4916 * x3873;
  const amrex::Real x11990 = x4879 * x3916;
  const amrex::Real x11991 = x4879 * x3917;
  const amrex::Real x11992 = x11990 - x11991;
  const amrex::Real x11993 = -x10734 + x8118;
  const amrex::Real x11994 = x4897 * x3917;
  const amrex::Real x11995 = x2836 * x11356;
  const amrex::Real x11996 = x2818 * x11356;
  const amrex::Real x11997 = x4861 * x3799;
  const amrex::Real x11998 = x4890 * x3978;
  const amrex::Real x11999 = x4921 * x3873;
  const amrex::Real x12000 = x4861 * x3800;
  const amrex::Real x12001 = x4890 * x3979;
  const amrex::Real x12002 = x4926 * x11986;
  const amrex::Real x12003 = x4926 * x11987;
  const amrex::Real x12004 = x4897 * x3916;
  const amrex::Real x12005 = x4890 * x4038;
  const amrex::Real x12006 = x4890 * x4037;
  const amrex::Real x12007 = x10754 + x11994 + x11995 - x11996 - x11997 +
                             x11998 - x11999 + x12000 - x12001 - x12002 +
                             x12003 - x12004 + x12005 - x12006;
  const amrex::Real x12008 = x4886 * x3856;
  const amrex::Real x12009 = x4883 * x3856;
  const amrex::Real x12010 = x4889 * x3856;
  const amrex::Real x12011 = -x12008 - x12009 + x12010;
  const amrex::Real x12012 = x2818 * x11441;
  const amrex::Real x12013 = x4872 * x3726;
  const amrex::Real x12014 = x4872 * x3727;
  const amrex::Real x12015 = x2836 * x11441;
  const amrex::Real x12016 = x10735 - x12012 + x12013 - x12014 + x12015;
  const amrex::Real x12017 = x4905 * x3874;
  const amrex::Real x12018 = x4900 * x3874;
  const amrex::Real x12019 = -x5642;
  const amrex::Real x12020 = -x5643;
  const amrex::Real x12021 = x4883 * x3857;
  const amrex::Real x12022 = x4867 * x3802;
  const amrex::Real x12023 = x4867 * x3801;
  const amrex::Real x12024 = x4894 * x4039;
  const amrex::Real x12025 = x4911 * x3874;
  const amrex::Real x12026 = x4869 * x3801;
  const amrex::Real x12027 = x4886 * x3857;
  const amrex::Real x12028 = x4869 * x3802;
  const amrex::Real x12029 = x4894 * x3980;
  const amrex::Real x12030 = x4894 * x3981;
  const amrex::Real x12031 = sc[6] * x11785;
  const amrex::Real x12032 = x4916 * x3874;
  const amrex::Real x12033 = x4879 * x3919;
  const amrex::Real x12034 = x4879 * x3918;
  const amrex::Real x12035 = -x12033 + x12034;
  const amrex::Real x12036 = x1725 * x11552;
  const amrex::Real x12037 = -x12036;
  const amrex::Real x12038 = -x10766 + x12037 + x8215;
  const amrex::Real x12039 = x11373 + x11436;
  const amrex::Real x12040 = x2859 * x11441;
  const amrex::Real x12041 = x2883 * x11441;
  const amrex::Real x12042 = x4872 * x3728;
  const amrex::Real x12043 = x4872 * x3729;
  const amrex::Real x12044 = -x4890 * x3919;
  const amrex::Real x12045 = x4894 * x2860;
  const amrex::Real x12046 = -x12045;
  const amrex::Real x12047 = x4890 * x3918;
  const amrex::Real x12048 = -x12040 + x12041 + x12042 - x12043 + x12044 +
                             x12046 + x12047 + x4889 * x3857;
  const amrex::Real x12049 = sc[3] * x11594;
  const amrex::Real x12050 = -x12049;
  const amrex::Real x12051 = x4895 * x11610;
  const amrex::Real x12052 = -x12051;
  const amrex::Real x12053 = x4890 * x3980;
  const amrex::Real x12054 = x4861 * x3802;
  const amrex::Real x12055 = x2859 * x11356;
  const amrex::Real x12056 = x206 * x11638;
  const amrex::Real x12057 = x4897 * x3918;
  const amrex::Real x12058 = x4926 * x12029;
  const amrex::Real x12059 = x206 * x11647;
  const amrex::Real x12060 = x4920 * x11644;
  const amrex::Real x12061 = x4890 * x4039;
  const amrex::Real x12062 = x2883 * x11356;
  const amrex::Real x12063 = x4890 * x3981;
  const amrex::Real x12064 = x4897 * x3919;
  const amrex::Real x12065 = x6192 * x1773;
  const amrex::Real x12066 = x4861 * x3801;
  const amrex::Real x12067 = x3981 * x11527;
  const amrex::Real x12068 = x4921 * x3874;
  const amrex::Real x12069 = sc[3] * x11634;
  const amrex::Real x12070 =
    -x10776 + x10782 + x12050 + x12052 + x12053 + x12054 - x12055 - x12056 -
    x12057 - x12058 - x12059 - x12060 + x12061 + x12062 - x12063 + x12064 -
    x12065 - x12066 + x12067 - x12068 - x12069;
  const amrex::Real x12071 = x4900 * x3875;
  const amrex::Real x12072 = sc[9] * x11929;
  const amrex::Real x12073 = x206 * x11553;
  const amrex::Real x12074 = -x12073;
  const amrex::Real x12075 = -x4890 * x3921;
  const amrex::Real x12076 = x4890 * x3920;
  const amrex::Real x12077 = x4867 * x3803;
  const amrex::Real x12078 = 3.5 * x11421 + 0.49 * x11422;
  const amrex::Real x12079 = x4894 * x4040;
  const amrex::Real x12080 = x4894 * x4041;
  const amrex::Real x12081 = x4883 * x3858;
  const amrex::Real x12082 = sc[6] * x11791;
  const amrex::Real x12083 = x4869 * x3803;
  const amrex::Real x12084 = x4869 * x3804;
  const amrex::Real x12085 = x4867 * x3804;
  const amrex::Real x12086 = x4894 * x3982;
  const amrex::Real x12087 = x4911 * x3875;
  const amrex::Real x12088 = x4916 * x3875;
  const amrex::Real x12089 = x4894 * x3983;
  const amrex::Real x12090 = x4886 * x3858;
  const amrex::Real x12091 = x4904 * x10821;
  const amrex::Real x12092 = x4905 * x3875;
  const amrex::Real x12093 = x12091 + x12092;
  const amrex::Real x12094 = sc[4] * x11687;
  const amrex::Real x12095 = x12094 + x8444;
  const amrex::Real x12096 = x4879 * x3920;
  const amrex::Real x12097 = x4879 * x3921;
  const amrex::Real x12098 = x12096 - x12097;
  const amrex::Real x12099 = x4897 * x3921;
  const amrex::Real x12100 = x4897 * x3920;
  const amrex::Real x12101 = x4890 * x3982;
  const amrex::Real x12102 = x4861 * x3804;
  const amrex::Real x12103 = x2960 * x11356;
  const amrex::Real x12104 = x4861 * x3803;
  const amrex::Real x12105 = x4926 * x12086;
  const amrex::Real x12106 = x4921 * x3875;
  const amrex::Real x12107 = x4890 * x3983;
  const amrex::Real x12108 = x2989 * x11356;
  const amrex::Real x12109 = x4890 * x4040;
  const amrex::Real x12110 = x3983 * x11527;
  const amrex::Real x12111 = x4890 * x4041;
  const amrex::Real x12112 = x10816 + x12099 - x12100 + x12101 + x12102 -
                             x12103 - x12104 - x12105 - x12106 - x12107 +
                             x12108 - x12109 + x12110 + x12111;
  const amrex::Real x12113 = -x10814 - x10820 - x10822 + x8279 - x8385 - x8386;
  const amrex::Real x12114 = x2989 * x11441;
  const amrex::Real x12115 = x2960 * x11441;
  const amrex::Real x12116 = x4872 * x3730;
  const amrex::Real x12117 = x4872 * x3731;
  const amrex::Real x12118 = x12114 - x12115 + x12116 - x12117 + x4889 * x3858;
  const amrex::Real x12119 = x4905 * x3876;
  const amrex::Real x12120 = x4900 * x3876;
  const amrex::Real x12121 = x4890 * x3922;
  const amrex::Real x12122 = -x4890 * x3923;
  const amrex::Real x12123 = x4867 * x3806;
  const amrex::Real x12124 = x4867 * x3805;
  const amrex::Real x12125 = 7.2 * x11421 + 1.008 * x11422;
  const amrex::Real x12126 = x4894 * x4043;
  const amrex::Real x12127 = x4869 * x3805;
  const amrex::Real x12128 = x4869 * x3806;
  const amrex::Real x12129 = x4911 * x3876;
  const amrex::Real x12130 = x4894 * x4042;
  const amrex::Real x12131 = x4894 * x3984;
  const amrex::Real x12132 = x4894 * x3985;
  const amrex::Real x12133 = x4916 * x3876;
  const amrex::Real x12134 = sc[3] * x11598;
  const amrex::Real x12135 = -x12134 + x8560;
  const amrex::Real x12136 = x4879 * x3922;
  const amrex::Real x12137 = x4879 * x3923;
  const amrex::Real x12138 = x12136 - x12137;
  const amrex::Real x12139 = -x10847 + x8530 + x8531;
  const amrex::Real x12140 = x3035 * x11356;
  const amrex::Real x12141 = x3022 * x11356;
  const amrex::Real x12142 = x4890 * x3984;
  const amrex::Real x12143 = x4861 * x3805;
  const amrex::Real x12144 = x4861 * x3806;
  const amrex::Real x12145 = x4897 * x3922;
  const amrex::Real x12146 = x4897 * x3923;
  const amrex::Real x12147 = x4921 * x3876;
  const amrex::Real x12148 = x3985 * x11527;
  const amrex::Real x12149 = x4926 * x12131;
  const amrex::Real x12150 = x4890 * x3985;
  const amrex::Real x12151 = x4890 * x4043;
  const amrex::Real x12152 = x4890 * x4042;
  const amrex::Real x12153 = x10754 + x12140 - x12141 + x12142 - x12143 +
                             x12144 - x12145 + x12146 - x12147 + x12148 -
                             x12149 - x12150 + x12151 - x12152;
  const amrex::Real x12154 = x3035 * x11441;
  const amrex::Real x12155 = x3022 * x11441;
  const amrex::Real x12156 = x4872 * x3732;
  const amrex::Real x12157 = x4872 * x3733;
  const amrex::Real x12158 = x12154 - x12155 + x12156 - x12157;
  const amrex::Real x12159 = x4905 * x3878;
  const amrex::Real x12160 = x4900 * x3878;
  const amrex::Real x12161 = sc[3] * x11536;
  const amrex::Real x12162 = -x12161;
  const amrex::Real x12163 = x4867 * x3808;
  const amrex::Real x12164 = x4869 * x3808;
  const amrex::Real x12165 = x4911 * x3878;
  const amrex::Real x12166 = sc[6] * x11789;
  const amrex::Real x12167 = x4916 * x3878;
  const amrex::Real x12168 = x4869 * x3807;
  const amrex::Real x12169 = x4867 * x3807;
  const amrex::Real x12170 = -x10884 + x8606;
  const amrex::Real x12171 = x4861 * x3808;
  const amrex::Real x12172 = x3068 * x11356;
  const amrex::Real x12173 = x3049 * x11356;
  const amrex::Real x12174 = x4921 * x3878;
  const amrex::Real x12175 = x4861 * x3807;
  const amrex::Real x12176 = x4897 * x3924;
  const amrex::Real x12177 = x4890 * x3924;
  const amrex::Real x12178 = x4890 * x3986;
  const amrex::Real x12179 = x4890 * x4044;
  const amrex::Real x12180 = x4894 * x3986;
  const amrex::Real x12181 = x4926 * x12180;
  const amrex::Real x12182 = x12178 + x12179 - x12181;
  const amrex::Real x12183 = -x12176 + x12177 + x12182;
  const amrex::Real x12184 = x11365 + x11369 + x11371;
  const amrex::Real x12185 = x12183 + x12184;
  const amrex::Real x12186 =
    x12171 + x12172 - x12173 - x12174 - x12175 + x12185;
  const amrex::Real x12187 = x3068 * x11441;
  const amrex::Real x12188 = x4872 * x3734;
  const amrex::Real x12189 = x4872 * x3735;
  const amrex::Real x12190 = x3049 * x11441;
  const amrex::Real x12191 = x12187 + x12188 - x12189 - x12190;
  const amrex::Real x12192 = x4879 * x3924;
  const amrex::Real x12193 = x11350 + x12192;
  const amrex::Real x12194 = x4894 * x4044;
  const amrex::Real x12195 = x11382 + x12019 + x12020 + x5653;
  const amrex::Real x12196 = -x12180 - x12194 + x12195;
  const amrex::Real x12197 = -x10897 + x12193 + x12196;
  const amrex::Real x12198 = x10261 + x11370 + x11383 + x11857 + x12039;
  const amrex::Real x12199 = x12197 + x12198;
  const amrex::Real x12200 = x4900 * x3879;
  const amrex::Real x12201 = x4905 * x3879;
  const amrex::Real x12202 = x4890 * x3926;
  const amrex::Real x12203 = -x4890 * x3927;
  const amrex::Real x12204 = x4867 * x3810;
  const amrex::Real x12205 = x4867 * x3809;
  const amrex::Real x12206 = x4894 * x4046;
  const amrex::Real x12207 = x4911 * x3879;
  const amrex::Real x12208 = x4894 * x4047;
  const amrex::Real x12209 = x4869 * x3809;
  const amrex::Real x12210 = x4894 * x3988;
  const amrex::Real x12211 = x4894 * x3989;
  const amrex::Real x12212 = x4869 * x3810;
  const amrex::Real x12213 = x4879 * x3927;
  const amrex::Real x12214 = x4879 * x3926;
  const amrex::Real x12215 = -x12213 + x12214;
  const amrex::Real x12216 = -x10913 + x8707;
  const amrex::Real x12217 = x4897 * x3926;
  const amrex::Real x12218 = x4897 * x3927;
  const amrex::Real x12219 = x4890 * x3989;
  const amrex::Real x12220 = x4890 * x3988;
  const amrex::Real x12221 = x4861 * x3809;
  const amrex::Real x12222 = x4861 * x3810;
  const amrex::Real x12223 = x3121 * x11356;
  const amrex::Real x12224 = x4890 * x4046;
  const amrex::Real x12225 = x4921 * x3879;
  const amrex::Real x12226 = x3138 * x11356;
  const amrex::Real x12227 = x4926 * x12210;
  const amrex::Real x12228 = x4926 * x12211;
  const amrex::Real x12229 = x4890 * x4047;
  const amrex::Real x12230 = -x12217 + x12218 - x12219 + x12220 - x12221 +
                             x12222 - x12223 - x12224 - x12225 + x12226 -
                             x12227 + x12228 + x12229;
  const amrex::Real x12231 = sc[3] * x11654;
  const amrex::Real x12232 = x4916 * x3879;
  const amrex::Real x12233 = -x12231 + x12232;
  const amrex::Real x12234 = x3121 * x11441;
  const amrex::Real x12235 = x3138 * x11441;
  const amrex::Real x12236 = x4872 * x3737;
  const amrex::Real x12237 = x4872 * x3736;
  const amrex::Real x12238 = -x12234 + x12235 - x12236 + x12237;
  const amrex::Real x12239 = x4905 * x3880;
  const amrex::Real x12240 = x4900 * x3880;
  const amrex::Real x12241 = x4890 * x3928;
  const amrex::Real x12242 = -x4890 * x3929;
  const amrex::Real x12243 = x4867 * x3811;
  const amrex::Real x12244 = x4894 * x4049;
  const amrex::Real x12245 = x4883 * x3859;
  const amrex::Real x12246 = x4867 * x3812;
  const amrex::Real x12247 = x4894 * x4048;
  const amrex::Real x12248 = x4911 * x3880;
  const amrex::Real x12249 = x4869 * x3811;
  const amrex::Real x12250 = x4869 * x3812;
  const amrex::Real x12251 = x4894 * x3990;
  const amrex::Real x12252 = x4894 * x3991;
  const amrex::Real x12253 = x4886 * x3859;
  const amrex::Real x12254 = x4916 * x3880;
  const amrex::Real x12255 = x4879 * x3929;
  const amrex::Real x12256 = x4879 * x3928;
  const amrex::Real x12257 = sc[3] * x11617;
  const amrex::Real x12258 = -x12255 + x12256 - x12257;
  const amrex::Real x12259 = -x10942 + x8852;
  const amrex::Real x12260 = x3232 * x11356;
  const amrex::Real x12261 = x3208 * x11356;
  const amrex::Real x12262 = x4897 * x3928;
  const amrex::Real x12263 = x4861 * x3811;
  const amrex::Real x12264 = x4861 * x3812;
  const amrex::Real x12265 = x4890 * x3990;
  const amrex::Real x12266 = x4921 * x3880;
  const amrex::Real x12267 = x4897 * x3929;
  const amrex::Real x12268 = x4926 * x12251;
  const amrex::Real x12269 = x3991 * x11527;
  const amrex::Real x12270 = x4890 * x4049;
  const amrex::Real x12271 = x4890 * x4048;
  const amrex::Real x12272 = x4890 * x3991;
  const amrex::Real x12273 = x10954 + x12260 - x12261 - x12262 - x12263 +
                             x12264 + x12265 - x12266 + x12267 - x12268 +
                             x12269 + x12270 - x12271 - x12272;
  const amrex::Real x12274 = x3232 * x11441;
  const amrex::Real x12275 = x4872 * x3739;
  const amrex::Real x12276 = x3208 * x11441;
  const amrex::Real x12277 = x4872 * x3738;
  const amrex::Real x12278 = x12274 - x12275 - x12276 + x12277 + x4889 * x3859;
  const amrex::Real x12279 = x4905 * x3881;
  const amrex::Real x12280 = 18000.0 * sc[8];
  const amrex::Real x12281 = x4867 * x3813;
  const amrex::Real x12282 = x4911 * x3881;
  const amrex::Real x12283 = x4869 * x3813;
  const amrex::Real x12284 = x4916 * x3881;
  const amrex::Real x12285 = sc[3] * x11586;
  const amrex::Real x12286 = x4900 * x3881;
  const amrex::Real x12287 = -x12285 + x12286;
  const amrex::Real x12288 = -x10973 + x8949;
  const amrex::Real x12289 = x3239 * x11356;
  const amrex::Real x12290 = x4861 * x3813;
  const amrex::Real x12291 = x4921 * x3881;
  const amrex::Real x12292 = x11364 + x11367 + x12185;
  const amrex::Real x12293 = x12289 + x12290 - x12291 + x12292;
  const amrex::Real x12294 = x4872 * x3740;
  const amrex::Real x12295 = x3239 * x11441;
  const amrex::Real x12296 = x12294 + x12295;
  const amrex::Real x12297 = x10312 + x11384 + x11385 + x11446 + x12199;
  const amrex::Real x12298 = x4900 * x3882;
  const amrex::Real x12299 = sc[6] * x11770;
  const amrex::Real x12300 = x4890 * x3930;
  const amrex::Real x12301 = x4867 * x3815;
  const amrex::Real x12302 = x4867 * x3814;
  const amrex::Real x12303 = x4869 * x3814;
  const amrex::Real x12304 = x4911 * x3882;
  const amrex::Real x12305 = x4916 * x3882;
  const amrex::Real x12306 = x4869 * x3815;
  const amrex::Real x12307 = x4905 * x3882;
  const amrex::Real x12308 = sc[8] * x11899;
  const amrex::Real x12309 = x12307 + x12308;
  const amrex::Real x12310 = x4879 * x3930;
  const amrex::Real x12311 = x11350 + x12310;
  const amrex::Real x12312 = sc[3] * x11613;
  const amrex::Real x12313 = x4896 * x11609;
  const amrex::Real x12314 = -x12313;
  const amrex::Real x12315 = -x10991 - x12312 + x12314;
  const amrex::Real x12316 = -x10989 + x9014;
  const amrex::Real x12317 = x4861 * x3814;
  const amrex::Real x12318 = x4897 * x3930;
  const amrex::Real x12319 = x3247 * x11356;
  const amrex::Real x12320 = x4921 * x3882;
  const amrex::Real x12321 = x3253 * x11356;
  const amrex::Real x12322 = x4861 * x3815;
  const amrex::Real x12323 = 6600000.0 * sc[4] + x12182 + x12184 - x12317 -
                             x12318 - x12319 - x12320 + x12321 + x12322;
  const amrex::Real x12324 = x3253 * x11441;
  const amrex::Real x12325 = x3247 * x11441;
  const amrex::Real x12326 = x4872 * x3742;
  const amrex::Real x12327 = x4872 * x3741;
  const amrex::Real x12328 = x12324 - x12325 - x12326 + x12327;
  const amrex::Real x12329 = x4900 * x3883;
  const amrex::Real x12330 = x4905 * x3883;
  const amrex::Real x12331 = sc[3] * x11548;
  const amrex::Real x12332 = -x12331;
  const amrex::Real x12333 = x4890 * x3931;
  const amrex::Real x12334 = -x4890 * x3932;
  const amrex::Real x12335 = x4867 * x3817;
  const amrex::Real x12336 = x4894 * x4051;
  const amrex::Real x12337 = x4869 * x3817;
  const amrex::Real x12338 = x4911 * x3883;
  const amrex::Real x12339 = x4867 * x3816;
  const amrex::Real x12340 = sc[6] * x11793;
  const amrex::Real x12341 = x4869 * x3816;
  const amrex::Real x12342 = x4894 * x3993;
  const amrex::Real x12343 = x4894 * x3992;
  const amrex::Real x12344 = x4894 * x4050;
  const amrex::Real x12345 = x4916 * x3883;
  const amrex::Real x12346 = x4879 * x3931;
  const amrex::Real x12347 = x4879 * x3932;
  const amrex::Real x12348 = x12346 - x12347;
  const amrex::Real x12349 = -x11010 + x9092;
  const amrex::Real x12350 = x4897 * x3932;
  const amrex::Real x12351 = x4897 * x3931;
  const amrex::Real x12352 = x4890 * x3992;
  const amrex::Real x12353 = x4861 * x3816;
  const amrex::Real x12354 = x4861 * x3817;
  const amrex::Real x12355 = x4890 * x3993;
  const amrex::Real x12356 = x3993 * x11527;
  const amrex::Real x12357 = x4926 * x12343;
  const amrex::Real x12358 = x3308 * x11356;
  const amrex::Real x12359 = x3292 * x11356;
  const amrex::Real x12360 = x4890 * x4050;
  const amrex::Real x12361 = x4890 * x4051;
  const amrex::Real x12362 = x4921 * x3883;
  const amrex::Real x12363 = x10271 + x12350 - x12351 + x12352 - x12353 +
                             x12354 - x12355 + x12356 - x12357 + x12358 -
                             x12359 - x12360 + x12361 - x12362;
  const amrex::Real x12364 = x3308 * x11441;
  const amrex::Real x12365 = x4872 * x3744;
  const amrex::Real x12366 = x4872 * x3743;
  const amrex::Real x12367 = x3292 * x11441;
  const amrex::Real x12368 = x12364 - x12365 + x12366 - x12367;
  const amrex::Real x12369 = x4900 * x3884;
  const amrex::Real x12370 = 4.2e+26 * x9169;
  const amrex::Real x12371 = x4867 * x3818;
  const amrex::Real x12372 = x4869 * x3818;
  const amrex::Real x12373 = x4911 * x3884;
  const amrex::Real x12374 = x4916 * x3884;
  const amrex::Real x12375 = sc[3] * x11591;
  const amrex::Real x12376 = x4905 * x3884;
  const amrex::Real x12377 = x12050 - x12375 + x12376;
  const amrex::Real x12378 = -x11043 + x11044 + x9166;
  const amrex::Real x12379 = x4861 * x3818;
  const amrex::Real x12380 = x3313 * x11356;
  const amrex::Real x12381 = x4921 * x3884;
  const amrex::Real x12382 = x12292 + x12379 + x12380 - x12381;
  const amrex::Real x12383 = x3313 * x11441;
  const amrex::Real x12384 = x4872 * x3745;
  const amrex::Real x12385 = x12383 + x12384;
  const amrex::Real x12386 = x4900 * x3885;
  const amrex::Real x12387 = x4905 * x3885;
  const amrex::Real x12388 = sc[6] * x11768;
  const amrex::Real x12389 = x4867 * x3820;
  const amrex::Real x12390 = x4867 * x3819;
  const amrex::Real x12391 = x4911 * x3885;
  const amrex::Real x12392 = x4869 * x3819;
  const amrex::Real x12393 = x4916 * x3885;
  const amrex::Real x12394 = x4869 * x3820;
  const amrex::Real x12395 = -x11060 - x11061;
  const amrex::Real x12396 = -x11055 + x9226;
  const amrex::Real x12397 = x3324 * x11356;
  const amrex::Real x12398 = x3320 * x11356;
  const amrex::Real x12399 = x4861 * x3820;
  const amrex::Real x12400 = x4861 * x3819;
  const amrex::Real x12401 = x4921 * x3885;
  const amrex::Real x12402 =
    x12185 + x12397 - x12398 + x12399 - x12400 - x12401 + x4890;
  const amrex::Real x12403 = x3320 * x11441;
  const amrex::Real x12404 = x3324 * x11441;
  const amrex::Real x12405 = x4872 * x3746;
  const amrex::Real x12406 = x4872 * x3747;
  const amrex::Real x12407 = -x12403 + x12404 + x12405 - x12406;
  const amrex::Real x12408 = x4905 * x3886;
  const amrex::Real x12409 = x4900 * x3886;
  const amrex::Real x12410 = sc[3] * x11544;
  const amrex::Real x12411 = -x12410;
  const amrex::Real x12412 = x4890 * x3933;
  const amrex::Real x12413 = -x4890 * x3934;
  const amrex::Real x12414 = x4867 * x3821;
  const amrex::Real x12415 = sc[6] * x11781;
  const amrex::Real x12416 = x4894 * x4052;
  const amrex::Real x12417 = x4894 * x4053;
  const amrex::Real x12418 = x4911 * x3886;
  const amrex::Real x12419 = x4867 * x3822;
  const amrex::Real x12420 = x4869 * x3822;
  const amrex::Real x12421 = x4894 * x3994;
  const amrex::Real x12422 = x4894 * x3995;
  const amrex::Real x12423 = x4869 * x3821;
  const amrex::Real x12424 = x4916 * x3886;
  const amrex::Real x12425 = x11094 + x11095;
  const amrex::Real x12426 = x4879 * x3933;
  const amrex::Real x12427 = x4879 * x3934;
  const amrex::Real x12428 = x12426 - x12427;
  const amrex::Real x12429 = -x11072 + x9294;
  const amrex::Real x12430 = x4897 * x3934;
  const amrex::Real x12431 = x4897 * x3933;
  const amrex::Real x12432 = x3352 * x11356;
  const amrex::Real x12433 = x4890 * x3995;
  const amrex::Real x12434 = x4890 * x3994;
  const amrex::Real x12435 = x4861 * x3822;
  const amrex::Real x12436 = x4921 * x3886;
  const amrex::Real x12437 = x3995 * x11527;
  const amrex::Real x12438 = x4926 * x12421;
  const amrex::Real x12439 = x4890 * x4053;
  const amrex::Real x12440 = x4861 * x3821;
  const amrex::Real x12441 = x3342 * x11356;
  const amrex::Real x12442 = x4890 * x4052;
  const amrex::Real x12443 = x12430 - x12431 + x12432 - x12433 + x12434 +
                             x12435 - x12436 + x12437 - x12438 + x12439 -
                             x12440 - x12441 - x12442;
  const amrex::Real x12444 = x3352 * x11441;
  const amrex::Real x12445 = x4872 * x3748;
  const amrex::Real x12446 = x4872 * x3749;
  const amrex::Real x12447 = x3342 * x11441;
  const amrex::Real x12448 = x12444 + x12445 - x12446 - x12447;
  const amrex::Real x12449 = x4905 * x3887;
  const amrex::Real x12450 = x4900 * x3887;
  const amrex::Real x12451 = x4890 * x3935;
  const amrex::Real x12452 = -x4890 * x3936;
  const amrex::Real x12453 = x4867 * x3824;
  const amrex::Real x12454 = x4867 * x3823;
  const amrex::Real x12455 = x4894 * x3997;
  const amrex::Real x12456 = x4894 * x4054;
  const amrex::Real x12457 = x4869 * x3824;
  const amrex::Real x12458 = x4894 * x4055;
  const amrex::Real x12459 = x4911 * x3887;
  const amrex::Real x12460 = x4894 * x3996;
  const amrex::Real x12461 = x4869 * x3823;
  const amrex::Real x12462 = x4916 * x3887;
  const amrex::Real x12463 = x4879 * x3935;
  const amrex::Real x12464 = x4879 * x3936;
  const amrex::Real x12465 = x12463 - x12464;
  const amrex::Real x12466 = -x11103 + x9390;
  const amrex::Real x12467 = x4897 * x3936;
  const amrex::Real x12468 = x4897 * x3935;
  const amrex::Real x12469 = x3402 * x11356;
  const amrex::Real x12470 = x4890 * x3997;
  const amrex::Real x12471 = x4890 * x3996;
  const amrex::Real x12472 = x4861 * x3823;
  const amrex::Real x12473 = x4861 * x3824;
  const amrex::Real x12474 = x3385 * x11356;
  const amrex::Real x12475 = x4890 * x4054;
  const amrex::Real x12476 = x4921 * x3887;
  const amrex::Real x12477 = x4890 * x4055;
  const amrex::Real x12478 = x3997 * x11527;
  const amrex::Real x12479 = x4926 * x12460;
  const amrex::Real x12480 = x12467 - x12468 + x12469 - x12470 + x12471 -
                             x12472 + x12473 - x12474 - x12475 - x12476 +
                             x12477 + x12478 - x12479;
  const amrex::Real x12481 = x3385 * x11441;
  const amrex::Real x12482 = x4872 * x3750;
  const amrex::Real x12483 = x4872 * x3751;
  const amrex::Real x12484 = x3402 * x11441;
  const amrex::Real x12485 = -x12481 + x12482 - x12483 + x12484;
  const amrex::Real x12486 = x4867 * x3826;
  const amrex::Real x12487 = x4867 * x3825;
  const amrex::Real x12488 = x4894 * x4056;
  const amrex::Real x12489 = x4894 * x3999;
  const amrex::Real x12490 = x4869 * x3825;
  const amrex::Real x12491 = x4894 * x3998;
  const amrex::Real x12492 = x4869 * x3826;
  const amrex::Real x12493 = x4894 * x4057;
  const amrex::Real x12494 = x4879 * x3937;
  const amrex::Real x12495 = x4879 * x3938;
  const amrex::Real x12496 = x12494 - x12495;
  const amrex::Real x12497 = x3434 * x11441;
  const amrex::Real x12498 = x4872 * x3752;
  const amrex::Real x12499 = x4872 * x3753;
  const amrex::Real x12500 = x4890 * x3937;
  const amrex::Real x12501 = x3449 * x11441;
  const amrex::Real x12502 = -x4890 * x3938;
  const amrex::Real x12503 =
    x11381 - x12497 + x12498 - x12499 + x12500 + x12501 + x12502;
  const amrex::Real x12504 = x4890 * x3999;
  const amrex::Real x12505 = x4861 * x3825;
  const amrex::Real x12506 = x4861 * x3826;
  const amrex::Real x12507 = x4926 * x12491;
  const amrex::Real x12508 = x4890 * x4057;
  const amrex::Real x12509 = x4897 * x3937;
  const amrex::Real x12510 = x3434 * x11356;
  const amrex::Real x12511 = x4897 * x3938;
  const amrex::Real x12512 = x4890 * x4056;
  const amrex::Real x12513 = x3449 * x11356;
  const amrex::Real x12514 = x3999 * x11527;
  const amrex::Real x12515 = x4890 * x3998;
  const amrex::Real x12516 = x11375 - x12504 - x12505 + x12506 - x12507 +
                             x12508 - x12509 - x12510 + x12511 - x12512 +
                             x12513 + x12514 + x12515;
  const amrex::Real x12517 = x11353 + x11433;
  const amrex::Real x12518 = -x4890 * x3940;
  const amrex::Real x12519 = x4890 * x3939;
  const amrex::Real x12520 = x4894 * x4059;
  const amrex::Real x12521 = x4867 * x3827;
  const amrex::Real x12522 = x4869 * x3827;
  const amrex::Real x12523 = x4894 * x4058;
  const amrex::Real x12524 = x4894 * x4000;
  const amrex::Real x12525 = x4894 * x4001;
  const amrex::Real x12526 = x4867 * x3828;
  const amrex::Real x12527 = x4869 * x3828;
  const amrex::Real x12528 = x4879 * x3939;
  const amrex::Real x12529 = x4879 * x3940;
  const amrex::Real x12530 = x12528 - x12529;
  const amrex::Real x12531 = x3473 * x11356;
  const amrex::Real x12532 = x3466 * x11356;
  const amrex::Real x12533 = x4890 * x4001;
  const amrex::Real x12534 = x4861 * x3828;
  const amrex::Real x12535 = x4897 * x3939;
  const amrex::Real x12536 = x4897 * x3940;
  const amrex::Real x12537 = x4861 * x3827;
  const amrex::Real x12538 = x4890 * x4000;
  const amrex::Real x12539 = x4926 * x12524;
  const amrex::Real x12540 = x4890 * x4059;
  const amrex::Real x12541 = x4001 * x11527;
  const amrex::Real x12542 = x4890 * x4058;
  const amrex::Real x12543 = x12531 - x12532 - x12533 + x12534 - x12535 +
                             x12536 - x12537 + x12538 - x12539 + x12540 +
                             x12541 - x12542;
  const amrex::Real x12544 = x11382 + x12517;
  const amrex::Real x12545 = x11375 + x12544;
  const amrex::Real x12546 = x11435 + x12545;
  const amrex::Real x12547 = x3466 * x11441;
  const amrex::Real x12548 = x3473 * x11441;
  const amrex::Real x12549 = x4872 * x3755;
  const amrex::Real x12550 = x4872 * x3754;
  const amrex::Real x12551 = -x12547 + x12548 - x12549 + x12550;
  const amrex::Real x12552 = x4890 * x3941;
  const amrex::Real x12553 = -x4890 * x3942;
  const amrex::Real x12554 = x4867 * x3830;
  const amrex::Real x12555 = x4867 * x3829;
  const amrex::Real x12556 = x4869 * x3830;
  const amrex::Real x12557 = x4894 * x4060;
  const amrex::Real x12558 = x4894 * x4061;
  const amrex::Real x12559 = x4894 * x4002;
  const amrex::Real x12560 = x4894 * x4003;
  const amrex::Real x12561 = x4869 * x3829;
  const amrex::Real x12562 = x4879 * x3942;
  const amrex::Real x12563 = x4879 * x3941;
  const amrex::Real x12564 = -x12562 + x12563;
  const amrex::Real x12565 = x4897 * x3942;
  const amrex::Real x12566 = x3517 * x11356;
  const amrex::Real x12567 = x4890 * x4003;
  const amrex::Real x12568 = x4890 * x4002;
  const amrex::Real x12569 = x4861 * x3829;
  const amrex::Real x12570 = x4897 * x3941;
  const amrex::Real x12571 = x4890 * x4061;
  const amrex::Real x12572 = x3504 * x11356;
  const amrex::Real x12573 = x4926 * x12559;
  const amrex::Real x12574 = x4861 * x3830;
  const amrex::Real x12575 = x4003 * x11527;
  const amrex::Real x12576 = x4890 * x4060;
  const amrex::Real x12577 = x12565 + x12566 - x12567 + x12568 - x12569 -
                             x12570 + x12571 - x12572 - x12573 + x12574 +
                             x12575 - x12576;
  const amrex::Real x12578 = x3517 * x11441;
  const amrex::Real x12579 = x4872 * x3756;
  const amrex::Real x12580 = x4872 * x3757;
  const amrex::Real x12581 = x3504 * x11441;
  const amrex::Real x12582 = x12578 + x12579 - x12580 - x12581;
  const amrex::Real x12583 = -x4890 * x3944;
  const amrex::Real x12584 = x4890 * x3943;
  const amrex::Real x12585 = x4867 * x3832;
  const amrex::Real x12586 = x4867 * x3831;
  const amrex::Real x12587 = x4894 * x4062;
  const amrex::Real x12588 = x4894 * x4063;
  const amrex::Real x12589 = x4869 * x3831;
  const amrex::Real x12590 = x4869 * x3832;
  const amrex::Real x12591 = x4894 * x4005;
  const amrex::Real x12592 = x4894 * x4004;
  const amrex::Real x12593 = x4879 * x3944;
  const amrex::Real x12594 = x4879 * x3943;
  const amrex::Real x12595 = -x12593 + x12594;
  const amrex::Real x12596 = x3548 * x11356;
  const amrex::Real x12597 = x3536 * x11356;
  const amrex::Real x12598 = x4890 * x4004;
  const amrex::Real x12599 = x4861 * x3831;
  const amrex::Real x12600 = x4890 * x4005;
  const amrex::Real x12601 = x4897 * x3943;
  const amrex::Real x12602 = x4926 * x12592;
  const amrex::Real x12603 = x4005 * x11527;
  const amrex::Real x12604 = x4897 * x3944;
  const amrex::Real x12605 = x4890 * x4063;
  const amrex::Real x12606 = x4861 * x3832;
  const amrex::Real x12607 = x4890 * x4062;
  const amrex::Real x12608 = x12596 - x12597 + x12598 - x12599 - x12600 -
                             x12601 - x12602 + x12603 + x12604 + x12605 +
                             x12606 - x12607;
  const amrex::Real x12609 = x3536 * x11441;
  const amrex::Real x12610 = x3548 * x11441;
  const amrex::Real x12611 = x4872 * x3758;
  const amrex::Real x12612 = x4872 * x3759;
  const amrex::Real x12613 = -x12609 + x12610 + x12611 - x12612;
  const amrex::Real x12614 = x4867 * x3834;
  const amrex::Real x12615 = x4867 * x3833;
  const amrex::Real x12616 = x4894 * x4064;
  const amrex::Real x12617 = x4894 * x4007;
  const amrex::Real x12618 = x4869 * x3833;
  const amrex::Real x12619 = x4869 * x3834;
  const amrex::Real x12620 = x4894 * x4006;
  const amrex::Real x12621 = x4879 * x3945;
  const amrex::Real x12622 = x4879 * x3946;
  const amrex::Real x12623 = x12621 - x12622;
  const amrex::Real x12624 = x11436 + x12544;
  const amrex::Real x12625 = x11376 + x12624;
  const amrex::Real x12626 = x3580 * x11441;
  const amrex::Real x12627 = x3564 * x11441;
  const amrex::Real x12628 = x4872 * x3760;
  const amrex::Real x12629 = x4890 * x3945;
  const amrex::Real x12630 = -x4890 * x3946;
  const amrex::Real x12631 = x4872 * x3761;
  const amrex::Real x12632 =
    x12626 - x12627 + x12628 + x12629 + x12630 - x12631;
  const amrex::Real x12633 = x4861 * x3833;
  const amrex::Real x12634 = x4861 * x3834;
  const amrex::Real x12635 = x4897 * x3945;
  const amrex::Real x12636 = x3580 * x11356;
  const amrex::Real x12637 = x3564 * x11356;
  const amrex::Real x12638 = x4897 * x3946;
  const amrex::Real x12639 = x4890 * x4006;
  const amrex::Real x12640 = x4890 * x4007;
  const amrex::Real x12641 = x4890 * x4064;
  const amrex::Real x12642 = x4007 * x11527;
  const amrex::Real x12643 = x4926 * x12620;
  const amrex::Real x12644 = -x12633 + x12634 - x12635 + x12636 - x12637 +
                             x12638 + x12639 - x12640 + x12641 + x12642 -
                             x12643;
  const amrex::Real x12645 = x4890 * x3947;
  const amrex::Real x12646 = -x4890 * x3948;
  const amrex::Real x12647 = x4867 * x3836;
  const amrex::Real x12648 = x4869 * x3835;
  const amrex::Real x12649 = x4867 * x3835;
  const amrex::Real x12650 = x4869 * x3836;
  const amrex::Real x12651 = x4894 * x4008;
  const amrex::Real x12652 = x4894 * x4009;
  const amrex::Real x12653 = x4894 * x4065;
  const amrex::Real x12654 = x4879 * x3947;
  const amrex::Real x12655 = x4879 * x3948;
  const amrex::Real x12656 = x12654 - x12655;
  const amrex::Real x12657 = x4897 * x3947;
  const amrex::Real x12658 = x4890 * x4008;
  const amrex::Real x12659 = x4861 * x3835;
  const amrex::Real x12660 = x4890 * x4009;
  const amrex::Real x12661 = x3607 * x11356;
  const amrex::Real x12662 = x4009 * x11527;
  const amrex::Real x12663 = x4897 * x3948;
  const amrex::Real x12664 = x3593 * x11356;
  const amrex::Real x12665 = x4926 * x12651;
  const amrex::Real x12666 = x4861 * x3836;
  const amrex::Real x12667 = x4890 * x4065;
  const amrex::Real x12668 = -x12657 + x12658 - x12659 - x12660 + x12661 +
                             x12662 + x12663 - x12664 - x12665 + x12666 +
                             x12667;
  const amrex::Real x12669 = x3593 * x11441;
  const amrex::Real x12670 = x3607 * x11441;
  const amrex::Real x12671 = x4872 * x3762;
  const amrex::Real x12672 = x4872 * x3763;
  const amrex::Real x12673 = -x12669 + x12670 + x12671 - x12672;
  const amrex::Real x12674 = -x4890 * x3950;
  const amrex::Real x12675 = x4890 * x3949;
  const amrex::Real x12676 = x4867 * x3838;
  const amrex::Real x12677 = x4867 * x3837;
  const amrex::Real x12678 = x4869 * x3838;
  const amrex::Real x12679 = x4894 * x4066;
  const amrex::Real x12680 = x4894 * x4010;
  const amrex::Real x12681 = x4869 * x3837;
  const amrex::Real x12682 = x4879 * x3950;
  const amrex::Real x12683 = x4879 * x3949;
  const amrex::Real x12684 = -x12682 + x12683;
  const amrex::Real x12685 = x4897 * x3950;
  const amrex::Real x12686 = x4897 * x3949;
  const amrex::Real x12687 = x3621 * x11356;
  const amrex::Real x12688 = x4890 * x4010;
  const amrex::Real x12689 = x4861 * x3837;
  const amrex::Real x12690 = x4861 * x3838;
  const amrex::Real x12691 = x3635 * x11356;
  const amrex::Real x12692 = x4890 * x4066;
  const amrex::Real x12693 = x4926 * x12680;
  const amrex::Real x12694 = x11377 + x12685 - x12686 - x12687 + x12688 -
                             x12689 + x12690 + x12691 + x12692 - x12693;
  const amrex::Real x12695 = x3621 * x11441;
  const amrex::Real x12696 = x3635 * x11441;
  const amrex::Real x12697 = x4872 * x3764;
  const amrex::Real x12698 = x4872 * x3765;
  const amrex::Real x12699 = -x12695 + x12696 + x12697 - x12698;
  const amrex::Real x12700 = x4890 * x3951;
  const amrex::Real x12701 = x4867 * x3839;
  const amrex::Real x12702 = x4894 * x4067;
  const amrex::Real x12703 = x4894 * x4011;
  const amrex::Real x12704 = x4869 * x3839;
  const amrex::Real x12705 = x4879 * x3951;
  const amrex::Real x12706 = x11350 + x12705;
  const amrex::Real x12707 = x10072 + x11354;
  const amrex::Real x12708 = x3651 * x11356;
  const amrex::Real x12709 = x4890 * x4011;
  const amrex::Real x12710 = x4861 * x3839;
  const amrex::Real x12711 = x4897 * x3951;
  const amrex::Real x12712 = x4890 * x4067;
  const amrex::Real x12713 = x4926 * x12703;
  const amrex::Real x12714 =
    x12708 + x12709 + x12710 - x12711 + x12712 - x12713;
  const amrex::Real x12715 = x11379 + x11437 + x11438;
  const amrex::Real x12716 = x11382 + x12715;
  const amrex::Real x12717 = x4872 * x3766;
  const amrex::Real x12718 = x3651 * x11441;
  const amrex::Real x12719 = x12717 + x12718;
  const amrex::Real x12720 = x4890 * x3952;
  const amrex::Real x12721 = x4894 * x4068;
  const amrex::Real x12722 = x4894 * x4012;
  const amrex::Real x12723 = x4869 * x3840;
  const amrex::Real x12724 = x4867 * x3840;
  const amrex::Real x12725 = x4879 * x3952;
  const amrex::Real x12726 = x11350 + x12725;
  const amrex::Real x12727 = x10128 + x11354;
  const amrex::Real x12728 = x4897 * x3952;
  const amrex::Real x12729 = x3664 * x11356;
  const amrex::Real x12730 = x4890 * x4012;
  const amrex::Real x12731 = x4926 * x12722;
  const amrex::Real x12732 = x4861 * x3840;
  const amrex::Real x12733 = x4890 * x4068;
  const amrex::Real x12734 =
    -x12728 + x12729 + x12730 - x12731 + x12732 + x12733;
  const amrex::Real x12735 = x3664 * x11441;
  const amrex::Real x12736 = x4872 * x3767;
  const amrex::Real x12737 = x11444 + x12735 + x12736;
  const amrex::Real x12738 = x4890 * x3953;
  const amrex::Real x12739 = exp(-21167.8090470755 * invT);
  const amrex::Real x12740 = 1.8e+15 * x12739;
  const amrex::Real x12741 = x4869 * x3841;
  const amrex::Real x12742 = x4867 * x3841;
  const amrex::Real x12743 = x206 * x11582;
  const amrex::Real x12744 = -x12743 - x11584 * x12743;
  const amrex::Real x12745 = x4879 * x3953;
  const amrex::Real x12746 = x11350 + x12745;
  const amrex::Real x12747 = x10179 + x11354;
  const amrex::Real x12748 = x3668 * x11356;
  const amrex::Real x12749 = x4861 * x3841;
  const amrex::Real x12750 = x4897 * x3953;
  const amrex::Real x12751 = x12182 + x12748 + x12749 - x12750;
  const amrex::Real x12752 = x4872 * x3768;
  const amrex::Real x12753 = x3668 * x11441;
  const amrex::Real x12754 = x12752 + x12753;
  const amrex::Real x12755 = x4867 * x3842;
  const amrex::Real x12756 = x4869 * x3842;
  const amrex::Real x12757 = x10211 + x11354;
  const amrex::Real x12758 = x3674 * x11441;
  const amrex::Real x12759 = x3677 * x11441;
  const amrex::Real x12760 = x4872 * x3769;
  const amrex::Real x12761 = x4872 * x3770;
  const amrex::Real x12762 = -x12758 + x12759 + x12760 - x12761;
  const amrex::Real x12763 = x4861 * x3842;
  const amrex::Real x12764 = x3677 * x11356;
  const amrex::Real x12765 = x3674 * x11356;
  const amrex::Real x12766 = x11378 + x12183 + x12763 + x12764 - x12765;
  const amrex::Real x12767 = x4938 * x3779;
  const amrex::Real x12768 = x4984 * x1877;
  const amrex::Real x12769 = x4984 * x1886;
  const amrex::Real x12770 = x4266 * x4984;
  const amrex::Real x12771 = x4233 * x4984;
  const amrex::Real x12772 = x4263 * x4984;
  const amrex::Real x12773 = -x12771 - x12772;
  const amrex::Real x12774 = -x12768 + x12769 + x12770 + x12773;
  const amrex::Real x12775 = x4947 * x3894;
  const amrex::Real x12776 = -x12775;
  const amrex::Real x12777 = x4947 * x3891;
  const amrex::Real x12778 = x12776 + x12777;
  const amrex::Real x12779 = x4015 * x4989;
  const amrex::Real x12780 = -x12779;
  const amrex::Real x12781 = x4018 * x4989;
  const amrex::Real x12782 = x12780 + x12781;
  const amrex::Real x12783 = x4987 * x3958;
  const amrex::Real x12784 = -x12783;
  const amrex::Real x12785 = x4987 * x3955;
  const amrex::Real x12786 = x12784 + x12785;
  const amrex::Real x12787 = x4942 * x3774;
  const amrex::Real x12788 = -x12787;
  const amrex::Real x12789 = x4942 * x3779;
  const amrex::Real x12790 = x12788 + x12789;
  const amrex::Real x12791 = -x11365;
  const amrex::Real x12792 = x4938 * x3774;
  const amrex::Real x12793 = x4954 * x3894;
  const amrex::Real x12794 = x6559 + x6566 - x6568 - x6576 + x6580 - x6581;
  const amrex::Real x12795 = x11390 + x12794;
  const amrex::Real x12796 = x11372 + x12795;
  const amrex::Real x12797 = x11368 - x11371 + x12796;
  const amrex::Real x12798 = x11363 + x12791 + x12792 + x12793 + x12797;
  const amrex::Real x12799 = x5198 + x5199;
  const amrex::Real x12800 = x4966 * x3863;
  const amrex::Real x12801 = x4973 * x3863;
  const amrex::Real x12802 = x11374 - x11386 + x12800 - x12801;
  const amrex::Real x12803 = x12799 + x12802;
  const amrex::Real x12804 = x4933 * x3779;
  const amrex::Real x12805 = x4933 * x3774;
  const amrex::Real x12806 = x4960 * x3846;
  const amrex::Real x12807 = -x12805 + x12806;
  const amrex::Real x12808 = x12804 + x12807;
  const amrex::Real x12809 = x4950 * x3891;
  const amrex::Real x12810 = x4950 * x3894;
  const amrex::Real x12811 = -x12810;
  const amrex::Real x12812 = x4977 * x3863;
  const amrex::Real x12813 = x12811 + x12812;
  const amrex::Real x12814 = x12809 + x12813;
  const amrex::Real x12815 = x4966 * x3864;
  const amrex::Real x12816 = x4938 * x3781;
  const amrex::Real x12817 = x4973 * x3864;
  const amrex::Real x12818 = x4938 * x3780;
  const amrex::Real x12819 = x4267 * x4984;
  const amrex::Real x12820 = x4984 * x2084;
  const amrex::Real x12821 = x4984 * x5252;
  const amrex::Real x12822 = x12821 * kf_qss[163];
  const amrex::Real x12823 = x12773 + x12819 + x12820 - x12822;
  const amrex::Real x12824 = x4947 * x3898;
  const amrex::Real x12825 = x4947 * x3899;
  const amrex::Real x12826 = x12824 - x12825;
  const amrex::Real x12827 = x4019 * x4989;
  const amrex::Real x12828 = x4020 * x4989;
  const amrex::Real x12829 = -x12827 + x12828;
  const amrex::Real x12830 = x4942 * x3781;
  const amrex::Real x12831 = x4942 * x3780;
  const amrex::Real x12832 = x12830 - x12831;
  const amrex::Real x12833 = x4987 * x3960;
  const amrex::Real x12834 = x4987 * x3961;
  const amrex::Real x12835 = x12833 - x12834;
  const amrex::Real x12836 = x4933 * x3781;
  const amrex::Real x12837 = x4933 * x3780;
  const amrex::Real x12838 = x4960 * x3847;
  const amrex::Real x12839 = x12836 - x12837 + x12838;
  const amrex::Real x12840 = x4950 * x3898;
  const amrex::Real x12841 = x4950 * x3899;
  const amrex::Real x12842 = x4977 * x3864;
  const amrex::Real x12843 = x12840 - x12841 + x12842;
  const amrex::Real x12844 = x4966 * x3865;
  const amrex::Real x12845 = x4973 * x3865;
  const amrex::Real x12846 = x4938 * x3782;
  const amrex::Real x12847 = x4938 * x3784;
  const amrex::Real x12848 = x4984 * x2159;
  const amrex::Real x12849 = x4269 * x4984;
  const amrex::Real x12850 = x12821 * kf_qss[166];
  const amrex::Real x12851 = x12848 + x12849 - x12850;
  const amrex::Real x12852 = x4947 * x3901;
  const amrex::Real x12853 = x4947 * x3900;
  const amrex::Real x12854 = -x12852 + x12853;
  const amrex::Real x12855 = x4022 * x4989;
  const amrex::Real x12856 = x4021 * x4989;
  const amrex::Real x12857 = x12855 - x12856;
  const amrex::Real x12858 = x4987 * x3962;
  const amrex::Real x12859 = x4987 * x3963;
  const amrex::Real x12860 = x12858 - x12859;
  const amrex::Real x12861 = x4942 * x3784;
  const amrex::Real x12862 = x4942 * x3782;
  const amrex::Real x12863 = x12861 - x12862;
  const amrex::Real x12864 = x12773 + x12799;
  const amrex::Real x12865 = x12794 + x12864;
  const amrex::Real x12866 = x4933 * x3784;
  const amrex::Real x12867 = x4933 * x3782;
  const amrex::Real x12868 = x4960 * x3848;
  const amrex::Real x12869 = x12866 - x12867 + x12868;
  const amrex::Real x12870 = x4950 * x3900;
  const amrex::Real x12871 = x4950 * x3901;
  const amrex::Real x12872 = x4977 * x3865;
  const amrex::Real x12873 = x12870 - x12871 + x12872;
  const amrex::Real x12874 = x4966 * x3866;
  const amrex::Real x12875 = x4938 * x3786;
  const amrex::Real x12876 = x4938 * x3785;
  const amrex::Real x12877 = x4973 * x3866;
  const amrex::Real x12878 = x4238 * x4984;
  const amrex::Real x12879 = x4275 * x4984;
  const amrex::Real x12880 = x4270 * x4984;
  const amrex::Real x12881 = x4235 * x4984;
  const amrex::Real x12882 = x4223 * x4984;
  const amrex::Real x12883 = x12878 + x12879 - x12880 - x12881 + x12882;
  const amrex::Real x12884 = x11641 + x11645;
  const amrex::Real x12885 = x4947 * x3903;
  const amrex::Real x12886 = x4947 * x3902;
  const amrex::Real x12887 = -x12885 + x12886;
  const amrex::Real x12888 = x4023 * x4989;
  const amrex::Real x12889 = x4024 * x4989;
  const amrex::Real x12890 = -x12888 + x12889;
  const amrex::Real x12891 = x4987 * x3964;
  const amrex::Real x12892 = x4987 * x3965;
  const amrex::Real x12893 = x12891 - x12892;
  const amrex::Real x12894 = x11604 + x11607;
  const amrex::Real x12895 = x4942 * x3786;
  const amrex::Real x12896 = x4942 * x3785;
  const amrex::Real x12897 = x11599 + x12895 - x12896;
  const amrex::Real x12898 = x11561 + x11571;
  const amrex::Real x12899 = x4933 * x3786;
  const amrex::Real x12900 = x4933 * x3785;
  const amrex::Real x12901 = x4960 * x3849;
  const amrex::Real x12902 = x12899 - x12900 + x12901;
  const amrex::Real x12903 = x4950 * x3903;
  const amrex::Real x12904 = x4950 * x3902;
  const amrex::Real x12905 = x4977 * x3866;
  const amrex::Real x12906 = -x12903 + x12904 + x12905;
  const amrex::Real x12907 = -2606.66232886845 * invT + 2.47 * tc[0];
  const amrex::Real x12908 = 0.0245 * exp(x12907 - (x1383 + x170));
  const amrex::Real x12909 = x12908 * sc[10];
  const amrex::Real x12910 = -x12909;
  const amrex::Real x12911 = -x7224;
  const amrex::Real x12912 = x4938 * x3788;
  const amrex::Real x12913 = x4938 * x3787;
  const amrex::Real x12914 = 820.243165261693 * invT;
  const amrex::Real x12915 = exp(x12914) * sc[4];
  const amrex::Real x12916 = x6383 * x4937;
  const amrex::Real x12917 = x4973 * x3867;
  const amrex::Real x12918 = 6038.59998965664 * invT;
  const amrex::Real x12919 = exp(-x12918) * sc[4];
  const amrex::Real x12920 = x6625 * x4972;
  const amrex::Real x12921 = 948000.0 * exp(-9812.72498319203 * invT);
  const amrex::Real x12922 = x12921 * sc[31];
  const amrex::Real x12923 = x4277 * x4984;
  const amrex::Real x12924 = x4240 * x4984;
  const amrex::Real x12925 = x4239 * x4984;
  const amrex::Real x12926 = x4276 * x4984;
  const amrex::Real x12927 = x4224 * x4984;
  const amrex::Real x12928 =
    -x12922 + x12923 + x12924 - x12925 - x12926 + x12927;
  const amrex::Real x12929 = 20000000.0 * exp(x4478 - (x10499 + x158));
  const amrex::Real x12930 = x12929 * sc[21];
  const amrex::Real x12931 = -x11699 - x12930;
  const amrex::Real x12932 = 1.34 * exp(-x1435 + x4964);
  const amrex::Real x12933 = x12932 * sc[14];
  const amrex::Real x12934 = x4966 * x3867;
  const amrex::Real x12935 = -x12933 + x12934;
  const amrex::Real x12936 = -9260000.0 * sc[18] + x11707;
  const amrex::Real x12937 = x4947 * x3905;
  const amrex::Real x12938 = x4947 * x3904;
  const amrex::Real x12939 = 8700.0 * exp(-x1616 - x4945);
  const amrex::Real x12940 = x12939 * sc[16];
  const amrex::Real x12941 = -x12937 + x12938 - x12940;
  const amrex::Real x12942 = -x11695 - x11697;
  const amrex::Real x12943 = 270000.0 * x1571;
  const amrex::Real x12944 = x12943 * sc[22];
  const amrex::Real x12945 = 7216.12698763968 * invT;
  const amrex::Real x12946 = exp(-x12945);
  const amrex::Real x12947 = 1000000.0 * x12946 * sc[22];
  const amrex::Real x12948 = x4025 * x4989;
  const amrex::Real x12949 = x4026 * x4989;
  const amrex::Real x12950 = -x12944 - x12947 - x12948 + x12949;
  const amrex::Real x12951 = x4987 * x3967;
  const amrex::Real x12952 = 0.0096 * x5207;
  const amrex::Real x12953 = x12952 * sc[19];
  const amrex::Real x12954 = x4987 * x3966;
  const amrex::Real x12955 = 90000.0 * x1603;
  const amrex::Real x12956 = x12955 * sc[19];
  const amrex::Real x12957 = -x12951 - x12953 + x12954 - x12956;
  const amrex::Real x12958 = 12040.0 * exp(-x1684 + x4940);
  const amrex::Real x12959 = x12958 * sc[12];
  const amrex::Real x12960 = x4942 * x3787;
  const amrex::Real x12961 = x4942 * x3788;
  const amrex::Real x12962 = -x11688 - x12959 - x12960 + x12961;
  const amrex::Real x12963 = x4933 * x3788;
  const amrex::Real x12964 = exp(-x4931);
  const amrex::Real x12965 = 1000000.0 * x12964 * sc[11];
  const amrex::Real x12966 = x4960 * x3850;
  const amrex::Real x12967 = 4.28e-19 * exp(-x1750 + x4958);
  const amrex::Real x12968 = x12967 * sc[11];
  const amrex::Real x12969 = x4933 * x3787;
  const amrex::Real x12970 = x12963 - x12965 + x12966 - x12968 - x12969;
  const amrex::Real x12971 = 20000.0 * x1622;
  const amrex::Real x12972 = x12971 * sc[15];
  const amrex::Real x12973 = x4950 * x3905;
  const amrex::Real x12974 = x4950 * x3904;
  const amrex::Real x12975 = x4977 * x3867;
  const amrex::Real x12976 = 12100.0 * exp(-x1385 + x4975);
  const amrex::Real x12977 = x12976 * sc[15];
  const amrex::Real x12978 = -x12972 - x12973 + x12974 + x12975 - x12977;
  const amrex::Real x12979 = -14400000.0 * sc[9] + x11682;
  const amrex::Real x12980 = x4966 * x3868;
  const amrex::Real x12981 = -x7321;
  const amrex::Real x12982 = x4938 * x3789;
  const amrex::Real x12983 = x4938 * x3790;
  const amrex::Real x12984 = x4973 * x3868;
  const amrex::Real x12985 = x4241 * x4984;
  const amrex::Real x12986 = x4278 * x4984;
  const amrex::Real x12987 = x4279 * x4984;
  const amrex::Real x12988 = x4242 * x4984;
  const amrex::Real x12989 = x4225 * x4984;
  const amrex::Real x12990 = -x12985 - x12986 + x12987 + x12988 + x12989;
  const amrex::Real x12991 = x4947 * x3906;
  const amrex::Real x12992 = x4947 * x3907;
  const amrex::Real x12993 = x12991 - x12992;
  const amrex::Real x12994 = x4027 * x4989;
  const amrex::Real x12995 = x4028 * x4989;
  const amrex::Real x12996 = -x12994 + x12995;
  const amrex::Real x12997 = x4987 * x3969;
  const amrex::Real x12998 = x4987 * x3968;
  const amrex::Real x12999 = -x12997 + x12998;
  const amrex::Real x13000 = x4942 * x3789;
  const amrex::Real x13001 = x4942 * x3790;
  const amrex::Real x13002 = -x13000 + x13001;
  const amrex::Real x13003 = x4933 * x3790;
  const amrex::Real x13004 = x4960 * x3852;
  const amrex::Real x13005 = x4933 * x3789;
  const amrex::Real x13006 = x13003 + x13004 - x13005;
  const amrex::Real x13007 = x4950 * x3906;
  const amrex::Real x13008 = x4977 * x3868;
  const amrex::Real x13009 = x4950 * x3907;
  const amrex::Real x13010 = x13007 + x13008 - x13009;
  const amrex::Real x13011 = x4966 * x3869;
  const amrex::Real x13012 = x4973 * x3869;
  const amrex::Real x13013 = x4938 * x3792;
  const amrex::Real x13014 = x4938 * x3791;
  const amrex::Real x13015 = x4244 * x4984;
  const amrex::Real x13016 = x4243 * x4984;
  const amrex::Real x13017 = x4281 * x4984;
  const amrex::Real x13018 = x4280 * x4984;
  const amrex::Real x13019 = x4226 * x4984;
  const amrex::Real x13020 = x13015 - x13016 + x13017 - x13018 + x13019;
  const amrex::Real x13021 = x4947 * x3909;
  const amrex::Real x13022 = x4947 * x3908;
  const amrex::Real x13023 = -x13021 + x13022;
  const amrex::Real x13024 = x4030 * x4989;
  const amrex::Real x13025 = x4029 * x4989;
  const amrex::Real x13026 = x13024 - x13025;
  const amrex::Real x13027 = x4987 * x3971;
  const amrex::Real x13028 = x4987 * x3970;
  const amrex::Real x13029 = -x13027 + x13028;
  const amrex::Real x13030 = x4942 * x3791;
  const amrex::Real x13031 = x4942 * x3792;
  const amrex::Real x13032 = -x13030 + x13031;
  const amrex::Real x13033 = -x11803 - x11804;
  const amrex::Real x13034 = x4933 * x3791;
  const amrex::Real x13035 = x4933 * x3792;
  const amrex::Real x13036 = x4960 * x3853;
  const amrex::Real x13037 = -x13034 + x13035 + x13036;
  const amrex::Real x13038 = x4950 * x3909;
  const amrex::Real x13039 = x4950 * x3908;
  const amrex::Real x13040 = x4977 * x3869;
  const amrex::Real x13041 = -x13038 + x13039 + x13040;
  const amrex::Real x13042 = x4965 * x10627;
  const amrex::Real x13043 = 0.0245 * exp(x12907);
  const amrex::Real x13044 = sc[9] * x13043;
  const amrex::Real x13045 = -(2.0 * g_RT[4] + x136 + x1625);
  const amrex::Real x13046 = exp(x12914 + x13045);
  const amrex::Real x13047 = 260000.0 * x13046;
  const amrex::Real x13048 = x4938 * x3794;
  const amrex::Real x13049 = 300000.0 * x1630;
  const amrex::Real x13050 = x13049 * sc[15];
  const amrex::Real x13051 = x4973 * x3870;
  const amrex::Real x13052 = exp(-x12918 + x13045);
  const amrex::Real x13053 = 731600000.0 * x13052;
  const amrex::Real x13054 = x4938 * x3793;
  const amrex::Real x13055 = x4246 * x4984;
  const amrex::Real x13056 = x4245 * x4984;
  const amrex::Real x13057 = x4227 * x4984;
  const amrex::Real x13058 = x4282 * x4984;
  const amrex::Real x13059 = x4283 * x4984;
  const amrex::Real x13060 = x13055 - x13056 + x13057 - x13058 + x13059;
  const amrex::Real x13061 = x6334 * x4946;
  const amrex::Real x13062 = x4947 * x3911;
  const amrex::Real x13063 = x4947 * x3910;
  const amrex::Real x13064 = x13061 - x13062 + x13063;
  const amrex::Real x13065 = x11853 + x11854;
  const amrex::Real x13066 = x4032 * x4989;
  const amrex::Real x13067 = 1000000.0 * exp(-x12945 - (x10499 + x138));
  const amrex::Real x13068 = x13067 * sc[21];
  const amrex::Real x13069 = x4031 * x4989;
  const amrex::Real x13070 = x13066 + x13068 - x13069;
  const amrex::Real x13071 = x4987 * x3972;
  const amrex::Real x13072 = x4987 * x3973;
  const amrex::Real x13073 = 0.0096 * exp(x4380 - (x10463 + x138));
  const amrex::Real x13074 = x13073 * sc[18];
  const amrex::Real x13075 = x13071 - x13072 + x13074;
  const amrex::Real x13076 = x4942 * x3794;
  const amrex::Real x13077 = x4942 * x3793;
  const amrex::Real x13078 = x13076 - x13077;
  const amrex::Real x13079 = x12795 + x12806;
  const amrex::Real x13080 = x4933 * x3793;
  const amrex::Real x13081 = x4933 * x3794;
  const amrex::Real x13082 = x6383 * x4932;
  const amrex::Real x13083 = -x13080 + x13081 + x13082;
  const amrex::Real x13084 = x6625 * x4976;
  const amrex::Real x13085 = x4950 * x3911;
  const amrex::Real x13086 = x4977 * x3870;
  const amrex::Real x13087 = x4950 * x3910;
  const amrex::Real x13088 = x13084 - x13085 + x13086 + x13087;
  const amrex::Real x13089 = 20000000.0 * x5193;
  const amrex::Real x13090 = x13089 * sc[22];
  const amrex::Real x13091 = x4973 * x3871;
  const amrex::Real x13092 = 300000.0 * x1627;
  const amrex::Real x13093 = x13092 * sc[16];
  const amrex::Real x13094 = 42200000.0 * exp(-x4971);
  const amrex::Real x13095 = x13094 * sc[15];
  const amrex::Real x13096 = x4938 * x3796;
  const amrex::Real x13097 = 100000000.0 * exp(-x4936);
  const amrex::Real x13098 = x13097 * sc[11];
  const amrex::Real x13099 = x4938 * x3795;
  const amrex::Real x13100 = x4983 * x5354;
  const amrex::Real x13101 = x4285 * x4984;
  const amrex::Real x13102 = x4983 * x5350;
  const amrex::Real x13103 = x4983 * x5358;
  const amrex::Real x13104 = x4248 * x4984;
  const amrex::Real x13105 = x4284 * x4984;
  const amrex::Real x13106 = x4247 * x4984;
  const amrex::Real x13107 = x4228 * x4984;
  const amrex::Real x13108 =
    x13100 + x13101 + x13102 + x13103 + x13104 - x13105 - x13106 + x13107;
  const amrex::Real x13109 = x4966 * x3871;
  const amrex::Real x13110 = x6625 * x4965;
  const amrex::Real x13111 = x13109 + x13110;
  const amrex::Real x13112 = 2660000.0 * exp(-(x1626 + x1695));
  const amrex::Real x13113 = x13112 * sc[19];
  const amrex::Real x13114 = x11911 + x13113;
  const amrex::Real x13115 = x4947 * x3913;
  const amrex::Real x13116 = x4947 * x3912;
  const amrex::Real x13117 = -x13115 + x13116;
  const amrex::Real x13118 = 270000.0 * x6164;
  const amrex::Real x13119 = x4034 * x4989;
  const amrex::Real x13120 = x4033 * x4989;
  const amrex::Real x13121 = x13118 + x13119 - x13120;
  const amrex::Real x13122 = 90000.0 * x6004;
  const amrex::Real x13123 = x4987 * x3975;
  const amrex::Real x13124 = x4987 * x3974;
  const amrex::Real x13125 = x13122 - x13123 + x13124;
  const amrex::Real x13126 = x6383 * x4941;
  const amrex::Real x13127 = x4942 * x3796;
  const amrex::Real x13128 = x4942 * x3795;
  const amrex::Real x13129 = x13126 + x13127 - x13128;
  const amrex::Real x13130 = x4933 * x3795;
  const amrex::Real x13131 = x4933 * x3796;
  const amrex::Real x13132 = x4960 * x3854;
  const amrex::Real x13133 = x6519 * x4959;
  const amrex::Real x13134 = -x13130 + x13131 + x13132 + x13133;
  const amrex::Real x13135 = 1000000.0 * exp(-(x1626 + x170));
  const amrex::Real x13136 = x13135 * sc[10];
  const amrex::Real x13137 = x11894 + x13136;
  const amrex::Real x13138 = x4950 * x3912;
  const amrex::Real x13139 = x4977 * x3871;
  const amrex::Real x13140 = 20000.0 * x6334;
  const amrex::Real x13141 = x4950 * x3913;
  const amrex::Real x13142 = x13138 + x13139 + x13140 - x13141;
  const amrex::Real x13143 = x4966 * x3872;
  const amrex::Real x13144 = sc[7] * x13043;
  const amrex::Real x13145 = x4938 * x3797;
  const amrex::Real x13146 = x4973 * x3872;
  const amrex::Real x13147 = x4938 * x3798;
  const amrex::Real x13148 = x4984 * x2765;
  const amrex::Real x13149 = x4286 * x4984;
  const amrex::Real x13150 = x12821 * kf_qss[178];
  const amrex::Real x13151 = x13148 + x13149 - x13150;
  const amrex::Real x13152 = x4947 * x3915;
  const amrex::Real x13153 = x4947 * x3914;
  const amrex::Real x13154 = -x13152 + x13153;
  const amrex::Real x13155 = x4036 * x4989;
  const amrex::Real x13156 = x4035 * x4989;
  const amrex::Real x13157 = x13155 - x13156;
  const amrex::Real x13158 = x4987 * x3977;
  const amrex::Real x13159 = x4987 * x3976;
  const amrex::Real x13160 = -x13158 + x13159;
  const amrex::Real x13161 = x4942 * x3797;
  const amrex::Real x13162 = x4942 * x3798;
  const amrex::Real x13163 = -x13161 + x13162;
  const amrex::Real x13164 = -14400000.0 * sc[4] + x11936;
  const amrex::Real x13165 = x4933 * x3797;
  const amrex::Real x13166 = x4933 * x3798;
  const amrex::Real x13167 = x4960 * x3855;
  const amrex::Real x13168 = -x13165 + x13166 + x13167;
  const amrex::Real x13169 = x4950 * x3915;
  const amrex::Real x13170 = x4950 * x3914;
  const amrex::Real x13171 = x4977 * x3872;
  const amrex::Real x13172 = -x13169 + x13170 + x13171;
  const amrex::Real x13173 = x4966 * x3873;
  const amrex::Real x13174 = sc[4] * x12908;
  const amrex::Real x13175 = -x13174;
  const amrex::Real x13176 = x4938 * x3799;
  const amrex::Real x13177 = sc[8] * x13135;
  const amrex::Real x13178 = x4938 * x3800;
  const amrex::Real x13179 = x4973 * x3873;
  const amrex::Real x13180 = x4249 * x4984;
  const amrex::Real x13181 = x4288 * x4984;
  const amrex::Real x13182 = x4287 * x4984;
  const amrex::Real x13183 = x4250 * x4984;
  const amrex::Real x13184 = x4229 * x4984;
  const amrex::Real x13185 = -x13180 + x13181 - x13182 + x13183 + x13184;
  const amrex::Real x13186 = x4947 * x3917;
  const amrex::Real x13187 = x4947 * x3916;
  const amrex::Real x13188 = -x13186 + x13187;
  const amrex::Real x13189 = x4037 * x4989;
  const amrex::Real x13190 = x4038 * x4989;
  const amrex::Real x13191 = -x13189 + x13190;
  const amrex::Real x13192 = x4987 * x3979;
  const amrex::Real x13193 = x4987 * x3978;
  const amrex::Real x13194 = -x13192 + x13193;
  const amrex::Real x13195 = x4942 * x3799;
  const amrex::Real x13196 = x4942 * x3800;
  const amrex::Real x13197 = -x13195 + x13196;
  const amrex::Real x13198 = x4960 * x3856;
  const amrex::Real x13199 = x12009 + x13198;
  const amrex::Real x13200 = x4933 * x3800;
  const amrex::Real x13201 = x4933 * x3799;
  const amrex::Real x13202 = x13200 - x13201;
  const amrex::Real x13203 = x4950 * x3917;
  const amrex::Real x13204 = x4950 * x3916;
  const amrex::Real x13205 = x4977 * x3873;
  const amrex::Real x13206 = -x13203 + x13204 + x13205;
  const amrex::Real x13207 = x4966 * x3874;
  const amrex::Real x13208 = x4039 * x4989;
  const amrex::Real x13209 = x4938 * x3802;
  const amrex::Real x13210 = x4938 * x3801;
  const amrex::Real x13211 = sc[8] * x13097;
  const amrex::Real x13212 = x4973 * x3874;
  const amrex::Real x13213 = x12060 + x12068;
  const amrex::Real x13214 = x4947 * x3918;
  const amrex::Real x13215 = x4947 * x3919;
  const amrex::Real x13216 = x13214 - x13215;
  const amrex::Real x13217 = x4987 * x3981;
  const amrex::Real x13218 = x4987 * x3980;
  const amrex::Real x13219 = -x13217 + x13218;
  const amrex::Real x13220 = x4289 * x4984;
  const amrex::Real x13221 = x4984 * x2862;
  const amrex::Real x13222 = x12864 + x13221 - x5639;
  const amrex::Real x13223 = x13220 + x13222 - x5638 + x5649;
  const amrex::Real x13224 = x4942 * x3802;
  const amrex::Real x13225 = x4942 * x3801;
  const amrex::Real x13226 = x13224 - x13225;
  const amrex::Real x13227 = x4950 * x3918;
  const amrex::Real x13228 = x4977 * x3874;
  const amrex::Real x13229 = x4950 * x3919;
  const amrex::Real x13230 = x13227 + x13228 - x13229;
  const amrex::Real x13231 = x4933 * x3801;
  const amrex::Real x13232 = 1000000.0 * sc[4];
  const amrex::Real x13233 = x13232 * x12964;
  const amrex::Real x13234 = sc[4] * x12967;
  const amrex::Real x13235 = x4933 * x3802;
  const amrex::Real x13236 = x4960 * x3857;
  const amrex::Real x13237 = -x13231 - x13233 - x13234 + x13235 + x13236;
  const amrex::Real x13238 = x4966 * x3875;
  const amrex::Real x13239 = x4973 * x3875;
  const amrex::Real x13240 = x4938 * x3804;
  const amrex::Real x13241 = x4938 * x3803;
  const amrex::Real x13242 = x4252 * x4984;
  const amrex::Real x13243 = x4292 * x4984;
  const amrex::Real x13244 = x4984 * x2969;
  const amrex::Real x13245 = x4291 * x4984;
  const amrex::Real x13246 = -x13242 + x13243 + x13244 - x13245;
  const amrex::Real x13247 = x4947 * x3921;
  const amrex::Real x13248 = x4947 * x3920;
  const amrex::Real x13249 = -x13247 + x13248;
  const amrex::Real x13250 = x4040 * x4989;
  const amrex::Real x13251 = x4041 * x4989;
  const amrex::Real x13252 = -x13250 + x13251;
  const amrex::Real x13253 = x4987 * x3983;
  const amrex::Real x13254 = x4987 * x3982;
  const amrex::Real x13255 = -x13253 + x13254;
  const amrex::Real x13256 = x4933 * x3804;
  const amrex::Real x13257 = x4933 * x3803;
  const amrex::Real x13258 = x4960 * x3858;
  const amrex::Real x13259 = x13256 - x13257 + x13258;
  const amrex::Real x13260 = x4950 * x3920;
  const amrex::Real x13261 = x4977 * x3875;
  const amrex::Real x13262 = x4950 * x3921;
  const amrex::Real x13263 = x13260 + x13261 - x13262;
  const amrex::Real x13264 = x4942 * x3804;
  const amrex::Real x13265 = sc[4] * x12958;
  const amrex::Real x13266 = x4942 * x3803;
  const amrex::Real x13267 = -x12094 + x13264 - x13265 - x13266;
  const amrex::Real x13268 = x4966 * x3876;
  const amrex::Real x13269 = x4938 * x3806;
  const amrex::Real x13270 = x4973 * x3876;
  const amrex::Real x13271 = x4938 * x3805;
  const amrex::Real x13272 = x4984 * x3024;
  const amrex::Real x13273 = x4294 * x4984;
  const amrex::Real x13274 = x4253 * x4984;
  const amrex::Real x13275 = x4293 * x4984;
  const amrex::Real x13276 = x13272 + x13273 - x13274 - x13275;
  const amrex::Real x13277 = x4947 * x3923;
  const amrex::Real x13278 = x4947 * x3922;
  const amrex::Real x13279 = -x13277 + x13278;
  const amrex::Real x13280 = x4042 * x4989;
  const amrex::Real x13281 = x4043 * x4989;
  const amrex::Real x13282 = -x13280 + x13281;
  const amrex::Real x13283 = x4987 * x3985;
  const amrex::Real x13284 = x4987 * x3984;
  const amrex::Real x13285 = -x13283 + x13284;
  const amrex::Real x13286 = x4942 * x3806;
  const amrex::Real x13287 = x4942 * x3805;
  const amrex::Real x13288 = x12134 + x13286 - x13287;
  const amrex::Real x13289 = x4933 * x3806;
  const amrex::Real x13290 = x4933 * x3805;
  const amrex::Real x13291 = x13289 - x13290;
  const amrex::Real x13292 = x4950 * x3922;
  const amrex::Real x13293 = x4950 * x3923;
  const amrex::Real x13294 = x4977 * x3876;
  const amrex::Real x13295 = x13292 - x13293 + x13294;
  const amrex::Real x13296 = x4973 * x3878;
  const amrex::Real x13297 = x4977 * x3878;
  const amrex::Real x13298 = x4938 * x3808;
  const amrex::Real x13299 = x4938 * x3807;
  const amrex::Real x13300 = x4966 * x3878;
  const amrex::Real x13301 = sc[4] * x12932;
  const amrex::Real x13302 = x13300 - x13301;
  const amrex::Real x13303 = x4942 * x3808;
  const amrex::Real x13304 = x4942 * x3807;
  const amrex::Real x13305 = x13303 - x13304;
  const amrex::Real x13306 = x4950 * x3924;
  const amrex::Real x13307 = x12811 + x13306;
  const amrex::Real x13308 = x4947 * x3924;
  const amrex::Real x13309 = x12776 + x13308;
  const amrex::Real x13310 = x4044 * x4989;
  const amrex::Real x13311 = x12780 + x13310;
  const amrex::Real x13312 = x4987 * x3986;
  const amrex::Real x13313 = x12784 + x13312;
  const amrex::Real x13314 =
    -x12178 - x12179 + x12181 + x13223 + x13311 + x13313;
  const amrex::Real x13315 = x12176 + x13309 + x13314 - x4954 * x3924;
  const amrex::Real x13316 = x12791 + x12793 + x12797;
  const amrex::Real x13317 = x13307 + x13315 + x13316;
  const amrex::Real x13318 = x12806 + x13317;
  const amrex::Real x13319 = x4933 * x3807;
  const amrex::Real x13320 = x4933 * x3808;
  const amrex::Real x13321 = -x13319 + x13320;
  const amrex::Real x13322 = x4966 * x3879;
  const amrex::Real x13323 = x4973 * x3879;
  const amrex::Real x13324 = x4938 * x3809;
  const amrex::Real x13325 = sc[8] * x13094;
  const amrex::Real x13326 = sc[7] * x13049;
  const amrex::Real x13327 = x4938 * x3810;
  const amrex::Real x13328 = x4254 * x4984;
  const amrex::Real x13329 = x4296 * x4984;
  const amrex::Real x13330 = x4295 * x4984;
  const amrex::Real x13331 = x4255 * x4984;
  const amrex::Real x13332 = -x13328 + x13329 - x13330 + x13331;
  const amrex::Real x13333 = x4947 * x3926;
  const amrex::Real x13334 = x4947 * x3927;
  const amrex::Real x13335 = x13333 - x13334;
  const amrex::Real x13336 = x4046 * x4989;
  const amrex::Real x13337 = x4047 * x4989;
  const amrex::Real x13338 = -x13336 + x13337;
  const amrex::Real x13339 = x4987 * x3988;
  const amrex::Real x13340 = x4987 * x3989;
  const amrex::Real x13341 = x13339 - x13340;
  const amrex::Real x13342 = x4942 * x3810;
  const amrex::Real x13343 = x4942 * x3809;
  const amrex::Real x13344 = x13342 - x13343;
  const amrex::Real x13345 = x4933 * x3809;
  const amrex::Real x13346 = x4933 * x3810;
  const amrex::Real x13347 = -x13345 + x13346;
  const amrex::Real x13348 = x4950 * x3926;
  const amrex::Real x13349 = x4977 * x3879;
  const amrex::Real x13350 = x4950 * x3927;
  const amrex::Real x13351 = sc[4] * x12971;
  const amrex::Real x13352 = sc[4] * x12976;
  const amrex::Real x13353 = x13348 + x13349 - x13350 - x13351 - x13352;
  const amrex::Real x13354 = x4966 * x3880;
  const amrex::Real x13355 = sc[8] * x13092;
  const amrex::Real x13356 = x4938 * x3812;
  const amrex::Real x13357 = x4938 * x3811;
  const amrex::Real x13358 = x4973 * x3880;
  const amrex::Real x13359 = x4984 * x3217;
  const amrex::Real x13360 = x4256 * x4984;
  const amrex::Real x13361 = x4298 * x4984;
  const amrex::Real x13362 = x4297 * x4984;
  const amrex::Real x13363 = x13359 - x13360 + x13361 - x13362;
  const amrex::Real x13364 = x4049 * x4989;
  const amrex::Real x13365 = x4048 * x4989;
  const amrex::Real x13366 = x13364 - x13365;
  const amrex::Real x13367 = x4947 * x3928;
  const amrex::Real x13368 = x4947 * x3929;
  const amrex::Real x13369 = sc[4] * x12939;
  const amrex::Real x13370 = x13367 - x13368 - x13369;
  const amrex::Real x13371 = x4987 * x3990;
  const amrex::Real x13372 = x4987 * x3991;
  const amrex::Real x13373 = x13371 - x13372;
  const amrex::Real x13374 = x4942 * x3811;
  const amrex::Real x13375 = x4942 * x3812;
  const amrex::Real x13376 = -x13374 + x13375;
  const amrex::Real x13377 = x4933 * x3812;
  const amrex::Real x13378 = x4933 * x3811;
  const amrex::Real x13379 = x4960 * x3859;
  const amrex::Real x13380 = x13377 - x13378 + x13379;
  const amrex::Real x13381 = x4950 * x3928;
  const amrex::Real x13382 = x4950 * x3929;
  const amrex::Real x13383 = x4977 * x3880;
  const amrex::Real x13384 = x13381 - x13382 + x13383;
  const amrex::Real x13385 = x4966 * x3881;
  const amrex::Real x13386 = x4942 * x3813;
  const amrex::Real x13387 = x4938 * x3813;
  const amrex::Real x13388 = x4973 * x3881;
  const amrex::Real x13389 = x12788 + x12798;
  const amrex::Real x13390 = x13315 + x13389;
  const amrex::Real x13391 = x4933 * x3813;
  const amrex::Real x13392 = x12807 + x13391;
  const amrex::Real x13393 = x4977 * x3881;
  const amrex::Real x13394 = x13307 + x13393;
  const amrex::Real x13395 = x4966 * x3882;
  const amrex::Real x13396 = sc[7] * x13073;
  const amrex::Real x13397 = x4938 * x3815;
  const amrex::Real x13398 = x4938 * x3814;
  const amrex::Real x13399 = x4973 * x3882;
  const amrex::Real x13400 = x4947 * x3930;
  const amrex::Real x13401 = x12776 + x13400;
  const amrex::Real x13402 = -9260000.0 * sc[4] + x12320;
  const amrex::Real x13403 = x4942 * x3814;
  const amrex::Real x13404 = x4942 * x3815;
  const amrex::Real x13405 = -x13403 + x13404;
  const amrex::Real x13406 = x12811 + x13314;
  const amrex::Real x13407 = x4977 * x3882;
  const amrex::Real x13408 = x4950 * x3930;
  const amrex::Real x13409 = x13407 + x13408;
  const amrex::Real x13410 = x4933 * x3815;
  const amrex::Real x13411 = x4933 * x3814;
  const amrex::Real x13412 = x12806 + x13410 - x13411;
  const amrex::Real x13413 = x4966 * x3883;
  const amrex::Real x13414 = x4938 * x3817;
  const amrex::Real x13415 = x4938 * x3816;
  const amrex::Real x13416 = x4973 * x3883;
  const amrex::Real x13417 = x4257 * x4984;
  const amrex::Real x13418 = x4300 * x4984;
  const amrex::Real x13419 = x4299 * x4984;
  const amrex::Real x13420 = x4984 * x3298;
  const amrex::Real x13421 = x425 * x4984;
  const amrex::Real x13422 = x3296 * x13421;
  const amrex::Real x13423 = -x13417 + x13418 - x13419 + x13420 - x13422;
  const amrex::Real x13424 = sc[8] * x13112;
  const amrex::Real x13425 = x12362 + x13424;
  const amrex::Real x13426 = x4947 * x3932;
  const amrex::Real x13427 = x4947 * x3931;
  const amrex::Real x13428 = -x13426 + x13427;
  const amrex::Real x13429 = x4051 * x4989;
  const amrex::Real x13430 = x4050 * x4989;
  const amrex::Real x13431 = x13429 - x13430;
  const amrex::Real x13432 = x4942 * x3816;
  const amrex::Real x13433 = x4942 * x3817;
  const amrex::Real x13434 = -x13432 + x13433;
  const amrex::Real x13435 = x4933 * x3816;
  const amrex::Real x13436 = x4933 * x3817;
  const amrex::Real x13437 = -x13435 + x13436;
  const amrex::Real x13438 = x4950 * x3932;
  const amrex::Real x13439 = x4950 * x3931;
  const amrex::Real x13440 = x4977 * x3883;
  const amrex::Real x13441 = -x13438 + x13439 + x13440;
  const amrex::Real x13442 = sc[4] * x12952;
  const amrex::Real x13443 = x4987 * x3992;
  const amrex::Real x13444 = x4987 * x3993;
  const amrex::Real x13445 = sc[4] * x12955;
  const amrex::Real x13446 = -x13442 + x13443 - x13444 - x13445;
  const amrex::Real x13447 = x4966 * x3884;
  const amrex::Real x13448 = x4942 * x3818;
  const amrex::Real x13449 = x4938 * x3818;
  const amrex::Real x13450 = x4973 * x3884;
  const amrex::Real x13451 = x4933 * x3818;
  const amrex::Real x13452 = x12807 + x13451;
  const amrex::Real x13453 = x4977 * x3884;
  const amrex::Real x13454 = x13307 + x13453;
  const amrex::Real x13455 = x4966 * x3885;
  const amrex::Real x13456 = sc[7] * x13067;
  const amrex::Real x13457 = x4938 * x3819;
  const amrex::Real x13458 = x4938 * x3820;
  const amrex::Real x13459 = x4977 * x3885;
  const amrex::Real x13460 = x4973 * x3885;
  const amrex::Real x13461 = sc[4] * x12929;
  const amrex::Real x13462 = -x13461 - x4890;
  const amrex::Real x13463 = x4942 * x3820;
  const amrex::Real x13464 = x4942 * x3819;
  const amrex::Real x13465 = x13463 - x13464;
  const amrex::Real x13466 = x4933 * x3820;
  const amrex::Real x13467 = x4933 * x3819;
  const amrex::Real x13468 = x13466 - x13467;
  const amrex::Real x13469 = x4984 * x5837;
  const amrex::Real x13470 = -x13469;
  const amrex::Real x13471 = x4966 * x3886;
  const amrex::Real x13472 = sc[8] * x13089;
  const amrex::Real x13473 = x4938 * x3822;
  const amrex::Real x13474 = x4938 * x3821;
  const amrex::Real x13475 = x4973 * x3886;
  const amrex::Real x13476 = x4947 * x3934;
  const amrex::Real x13477 = x4947 * x3933;
  const amrex::Real x13478 = -x13476 + x13477;
  const amrex::Real x13479 = x4987 * x3994;
  const amrex::Real x13480 = x4987 * x3995;
  const amrex::Real x13481 = x13479 - x13480;
  const amrex::Real x13482 = x4942 * x3822;
  const amrex::Real x13483 = x4942 * x3821;
  const amrex::Real x13484 = x13482 - x13483;
  const amrex::Real x13485 = x4933 * x3822;
  const amrex::Real x13486 = x4933 * x3821;
  const amrex::Real x13487 = x13485 - x13486;
  const amrex::Real x13488 = x4977 * x3886;
  const amrex::Real x13489 = x4950 * x3934;
  const amrex::Real x13490 = x4950 * x3933;
  const amrex::Real x13491 = x13488 - x13489 + x13490;
  const amrex::Real x13492 = x4053 * x4989;
  const amrex::Real x13493 = x4052 * x4989;
  const amrex::Real x13494 = x13232 * x12946;
  const amrex::Real x13495 = sc[4] * x12943;
  const amrex::Real x13496 = x13492 - x13493 - x13494 - x13495;
  const amrex::Real x13497 = x4966 * x3887;
  const amrex::Real x13498 = x4938 * x3824;
  const amrex::Real x13499 = x4973 * x3887;
  const amrex::Real x13500 = x4938 * x3823;
  const amrex::Real x13501 = x4984 * x3390;
  const amrex::Real x13502 = x4301 * x4984;
  const amrex::Real x13503 = x4302 * x4984;
  const amrex::Real x13504 = x4258 * x4984;
  const amrex::Real x13505 = x13501 - x13502 + x13503 - x13504;
  const amrex::Real x13506 = x4947 * x3935;
  const amrex::Real x13507 = x4947 * x3936;
  const amrex::Real x13508 = x13506 - x13507;
  const amrex::Real x13509 = x4055 * x4989;
  const amrex::Real x13510 = x4054 * x4989;
  const amrex::Real x13511 = x13509 - x13510;
  const amrex::Real x13512 = x4987 * x3996;
  const amrex::Real x13513 = x4987 * x3997;
  const amrex::Real x13514 = x13512 - x13513;
  const amrex::Real x13515 = x4942 * x3823;
  const amrex::Real x13516 = x4942 * x3824;
  const amrex::Real x13517 = -x13515 + x13516;
  const amrex::Real x13518 = x4933 * x3823;
  const amrex::Real x13519 = x4933 * x3824;
  const amrex::Real x13520 = -x13518 + x13519;
  const amrex::Real x13521 = x4977 * x3887;
  const amrex::Real x13522 = x4950 * x3936;
  const amrex::Real x13523 = x4950 * x3935;
  const amrex::Real x13524 = x13521 - x13522 + x13523;
  const amrex::Real x13525 = x4938 * x3825;
  const amrex::Real x13526 = x4938 * x3826;
  const amrex::Real x13527 = x4984 * x3438;
  const amrex::Real x13528 = x4259 * x4984;
  const amrex::Real x13529 = x4304 * x4984;
  const amrex::Real x13530 = x4303 * x4984;
  const amrex::Real x13531 = x13527 - x13528 + x13529 - x13530;
  const amrex::Real x13532 = x4947 * x3937;
  const amrex::Real x13533 = x4947 * x3938;
  const amrex::Real x13534 = x13532 - x13533;
  const amrex::Real x13535 = x4056 * x4989;
  const amrex::Real x13536 = x4057 * x4989;
  const amrex::Real x13537 = -x13535 + x13536;
  const amrex::Real x13538 = x4987 * x3998;
  const amrex::Real x13539 = x4987 * x3999;
  const amrex::Real x13540 = x13538 - x13539;
  const amrex::Real x13541 = x4942 * x3825;
  const amrex::Real x13542 = x4942 * x3826;
  const amrex::Real x13543 = -x13541 + x13542;
  const amrex::Real x13544 = x12802 + x12812;
  const amrex::Real x13545 = x13079 + x13544;
  const amrex::Real x13546 = x4933 * x3825;
  const amrex::Real x13547 = x4933 * x3826;
  const amrex::Real x13548 = -x13546 + x13547;
  const amrex::Real x13549 = x4950 * x3937;
  const amrex::Real x13550 = x4950 * x3938;
  const amrex::Real x13551 = x13549 - x13550;
  const amrex::Real x13552 = x4305 * x4984;
  const amrex::Real x13553 = x4938 * x3827;
  const amrex::Real x13554 = x4938 * x3828;
  const amrex::Real x13555 = x4947 * x3939;
  const amrex::Real x13556 = x4947 * x3940;
  const amrex::Real x13557 = x13555 - x13556;
  const amrex::Real x13558 = x4058 * x4989;
  const amrex::Real x13559 = x4059 * x4989;
  const amrex::Real x13560 = -x13558 + x13559;
  const amrex::Real x13561 = x4001 * x4987;
  const amrex::Real x13562 = x4000 * x4987;
  const amrex::Real x13563 = -x13561 + x13562;
  const amrex::Real x13564 = x4942 * x3827;
  const amrex::Real x13565 = x4942 * x3828;
  const amrex::Real x13566 = -x13564 + x13565;
  const amrex::Real x13567 = x4933 * x3827;
  const amrex::Real x13568 = x4933 * x3828;
  const amrex::Real x13569 = -x13567 + x13568;
  const amrex::Real x13570 = x4950 * x3939;
  const amrex::Real x13571 = x4950 * x3940;
  const amrex::Real x13572 = x13570 - x13571;
  const amrex::Real x13573 = x4938 * x3830;
  const amrex::Real x13574 = x4938 * x3829;
  const amrex::Real x13575 = x4307 * x4984;
  const amrex::Real x13576 = x4984 * x3508;
  const amrex::Real x13577 = x4306 * x4984;
  const amrex::Real x13578 = x4260 * x4984;
  const amrex::Real x13579 = x13575 + x13576 - x13577 - x13578;
  const amrex::Real x13580 = x4947 * x3942;
  const amrex::Real x13581 = x4947 * x3941;
  const amrex::Real x13582 = -x13580 + x13581;
  const amrex::Real x13583 = x4061 * x4989;
  const amrex::Real x13584 = x4060 * x4989;
  const amrex::Real x13585 = x13583 - x13584;
  const amrex::Real x13586 = x4002 * x4987;
  const amrex::Real x13587 = x4003 * x4987;
  const amrex::Real x13588 = x13586 - x13587;
  const amrex::Real x13589 = x4942 * x3830;
  const amrex::Real x13590 = x4942 * x3829;
  const amrex::Real x13591 = x13589 - x13590;
  const amrex::Real x13592 = x4933 * x3829;
  const amrex::Real x13593 = x4933 * x3830;
  const amrex::Real x13594 = -x13592 + x13593;
  const amrex::Real x13595 = x4950 * x3942;
  const amrex::Real x13596 = x4950 * x3941;
  const amrex::Real x13597 = -x13595 + x13596;
  const amrex::Real x13598 = x4938 * x3832;
  const amrex::Real x13599 = x4938 * x3831;
  const amrex::Real x13600 = x4984 * x3539;
  const amrex::Real x13601 = x4308 * x4984;
  const amrex::Real x13602 = x13600 + x13601;
  const amrex::Real x13603 = x4947 * x3943;
  const amrex::Real x13604 = x4947 * x3944;
  const amrex::Real x13605 = x13603 - x13604;
  const amrex::Real x13606 = x4063 * x4989;
  const amrex::Real x13607 = x4062 * x4989;
  const amrex::Real x13608 = x13606 - x13607;
  const amrex::Real x13609 = x4005 * x4987;
  const amrex::Real x13610 = x4004 * x4987;
  const amrex::Real x13611 = -x13609 + x13610;
  const amrex::Real x13612 = x4942 * x3831;
  const amrex::Real x13613 = x4942 * x3832;
  const amrex::Real x13614 = -x13612 + x13613;
  const amrex::Real x13615 = x4933 * x3832;
  const amrex::Real x13616 = x4933 * x3831;
  const amrex::Real x13617 = x13615 - x13616;
  const amrex::Real x13618 = x4950 * x3943;
  const amrex::Real x13619 = x4950 * x3944;
  const amrex::Real x13620 = x13618 - x13619;
  const amrex::Real x13621 = x4064 * x4989;
  const amrex::Real x13622 = x4938 * x3833;
  const amrex::Real x13623 = x4938 * x3834;
  const amrex::Real x13624 = x4984 * x3568;
  const amrex::Real x13625 = x4309 * x4984;
  const amrex::Real x13626 = x12773 + x13624 + x13625;
  const amrex::Real x13627 = x4947 * x3945;
  const amrex::Real x13628 = x4947 * x3946;
  const amrex::Real x13629 = x13627 - x13628;
  const amrex::Real x13630 = x4006 * x4987;
  const amrex::Real x13631 = x4007 * x4987;
  const amrex::Real x13632 = x13630 - x13631;
  const amrex::Real x13633 = x4942 * x3834;
  const amrex::Real x13634 = x4942 * x3833;
  const amrex::Real x13635 = x13633 - x13634;
  const amrex::Real x13636 = x4933 * x3833;
  const amrex::Real x13637 = x4933 * x3834;
  const amrex::Real x13638 = x12806 - x13636 + x13637;
  const amrex::Real x13639 = x4950 * x3945;
  const amrex::Real x13640 = x4950 * x3946;
  const amrex::Real x13641 = x12812 + x13639 - x13640;
  const amrex::Real x13642 = x12780 + x12803;
  const amrex::Real x13643 = x12796 + x13642;
  const amrex::Real x13644 = x4065 * x4989;
  const amrex::Real x13645 = x4938 * x3835;
  const amrex::Real x13646 = x4938 * x3836;
  const amrex::Real x13647 = x4984 * x3598;
  const amrex::Real x13648 = x1548 * x13421;
  const amrex::Real x13649 = x4310 * x4984;
  const amrex::Real x13650 = x12773 + x13647 - x13648 + x13649;
  const amrex::Real x13651 = x4947 * x3948;
  const amrex::Real x13652 = x4947 * x3947;
  const amrex::Real x13653 = -x13651 + x13652;
  const amrex::Real x13654 = x4008 * x4987;
  const amrex::Real x13655 = x4009 * x4987;
  const amrex::Real x13656 = x13654 - x13655;
  const amrex::Real x13657 = x4942 * x3835;
  const amrex::Real x13658 = x4942 * x3836;
  const amrex::Real x13659 = -x13657 + x13658;
  const amrex::Real x13660 = x12806 + x12812;
  const amrex::Real x13661 = x4933 * x3836;
  const amrex::Real x13662 = x4933 * x3835;
  const amrex::Real x13663 = x13661 - x13662;
  const amrex::Real x13664 = x4950 * x3948;
  const amrex::Real x13665 = x4950 * x3947;
  const amrex::Real x13666 = -x13664 + x13665;
  const amrex::Real x13667 = x4066 * x4989;
  const amrex::Real x13668 = x4938 * x3838;
  const amrex::Real x13669 = x4938 * x3837;
  const amrex::Real x13670 = x4984 * x3625;
  const amrex::Real x13671 = x4311 * x4984;
  const amrex::Real x13672 = x12773 + x13670 + x13671;
  const amrex::Real x13673 = x4947 * x3949;
  const amrex::Real x13674 = x4947 * x3950;
  const amrex::Real x13675 = x13673 - x13674;
  const amrex::Real x13676 = x4010 * x4987;
  const amrex::Real x13677 = x12784 + x13676;
  const amrex::Real x13678 = x4942 * x3837;
  const amrex::Real x13679 = x4942 * x3838;
  const amrex::Real x13680 = -x13678 + x13679;
  const amrex::Real x13681 = x4933 * x3838;
  const amrex::Real x13682 = x4933 * x3837;
  const amrex::Real x13683 = x13681 - x13682;
  const amrex::Real x13684 = x4950 * x3949;
  const amrex::Real x13685 = x4950 * x3950;
  const amrex::Real x13686 = x13684 - x13685;
  const amrex::Real x13687 = x4942 * x3839;
  const amrex::Real x13688 = x4938 * x3839;
  const amrex::Real x13689 = x4312 * x4984;
  const amrex::Real x13690 = x4984 * x3641;
  const amrex::Real x13691 = sc[4] * x12921;
  const amrex::Real x13692 = x6052 * x4984;
  const amrex::Real x13693 = x12773 + x13689 + x13690 - x13691 - x13692;
  const amrex::Real x13694 = x4947 * x3951;
  const amrex::Real x13695 = x12776 + x13694;
  const amrex::Real x13696 = x4067 * x4989;
  const amrex::Real x13697 = x12780 + x13696;
  const amrex::Real x13698 = x4011 * x4987;
  const amrex::Real x13699 = x12784 + x13698;
  const amrex::Real x13700 = x4933 * x3839;
  const amrex::Real x13701 = x12807 + x13700;
  const amrex::Real x13702 = x4950 * x3951;
  const amrex::Real x13703 = x12813 + x13702;
  const amrex::Real x13704 = x4933 * x3840;
  const amrex::Real x13705 = x4938 * x3840;
  const amrex::Real x13706 = x4984 * x3655;
  const amrex::Real x13707 = x4313 * x4984;
  const amrex::Real x13708 = x6078 * x4984;
  const amrex::Real x13709 = x13706 + x13707 - x13708;
  const amrex::Real x13710 = x4947 * x3952;
  const amrex::Real x13711 = x12776 + x13710;
  const amrex::Real x13712 = x4068 * x4989;
  const amrex::Real x13713 = x12780 + x13712;
  const amrex::Real x13714 = x4012 * x4987;
  const amrex::Real x13715 = x12784 + x13714;
  const amrex::Real x13716 = x4942 * x3840;
  const amrex::Real x13717 = x12788 + x13716;
  const amrex::Real x13718 = x12807 + x13544;
  const amrex::Real x13719 = x12798 + x13718;
  const amrex::Real x13720 = x4950 * x3952;
  const amrex::Real x13721 = x12811 + x13720;
  const amrex::Real x13722 = x4950 * x3953;
  const amrex::Real x13723 = x4933 * x3841;
  const amrex::Real x13724 = x4938 * x3841;
  const amrex::Real x13725 = x4947 * x3953;
  const amrex::Real x13726 = x12776 + x13725;
  const amrex::Real x13727 = x4942 * x3841;
  const amrex::Real x13728 = x12788 + x13727;
  const amrex::Real x13729 = x4933 * x3842;
  const amrex::Real x13730 = x4938 * x3842;
  const amrex::Real x13731 = x4942 * x3842;
  const amrex::Real x13732 = x12788 + x13731;
  const amrex::Real x13733 = sc[5] * sc[12];
  const amrex::Real x13734 = -40056.0465980557 * invT + x10368;
  const amrex::Real x13735 = -x13734;
  const amrex::Real x13736 = -82502.3723586838 * invT + x13735 - x4821;
  const amrex::Real x13737 = exp(x13736);
  const amrex::Real x13738 = -42446.3257606281 * invT - 3.42 * tc[0] + x13735;
  const amrex::Real x13739 = 117906976744186. * exp(x13738) * x26;
  const amrex::Real x13740 = log(
    exp(-10300.0 * invT) +
    0.0679999999999999 * exp(-0.0050761421319797 * tc[1]) +
    0.932 * exp(-0.000649350649350649 * tc[1]));
  const amrex::Real x13741 = -0.4 + x33 * log(x13739) - x503 * x13740;
  const amrex::Real x13742 = 0.75 - 0.14 * x13741 - x507 * x13740;
  const amrex::Real x13743 = pow(x13742, -2);
  const amrex::Real x13744 = pow(x13741, 2);
  const amrex::Real x13745 = 1.0 + x13744 * x13743;
  const amrex::Real x13746 = pow(10, x33 * x13740 / x13745);
  const amrex::Real x13747 = 1.0 + x13739;
  const amrex::Real x13748 = x13746 / x13747;
  const amrex::Real x13749 = 5.07e+15 * x13748;
  const amrex::Real x13750 = x13749 * x13737;
  const amrex::Real x13751 = x13733 * x13750;
  const amrex::Real x13752 = x13746 / pow(x13747, 2);
  const amrex::Real x13753 = 5.97788372093023e+29 * x13752;
  const amrex::Real x13754 = -(x142 + x208 + x564);
  const amrex::Real x13755 =
    -124948.698119312 * invT - 5.34 * tc[0] - 2 * x13734;
  const amrex::Real x13756 = exp(x13754 + x13755) * x6439;
  const amrex::Real x13757 = x13753 * x13756;
  const amrex::Real x13758 = exp(x13736 + x13754);
  const amrex::Real x13759 = x1677 * x13758;
  const amrex::Real x13760 = x13749 * x13759;
  const amrex::Real x13761 = 1;
  const amrex::Real x13762 = x13744 * x13761 / pow(x13742, 3);
  const amrex::Real x13763 = x905 * x13762;
  const amrex::Real x13764 = x13743 * x13741 * x13761;
  const amrex::Real x13765 = 0.28 * x13763 + x6398 * x13764;
  const amrex::Real x13766 = x13740 / pow(x13745, 2);
  const amrex::Real x13767 = x914 * x13749 * x13758;
  const amrex::Real x13768 = x13767 * sc[11];
  const amrex::Real x13769 = x13766 * x13768;
  const amrex::Real x13770 = x13765 * x13769;
  const amrex::Real x13771 = exp(x13755) * x26 * x13733;
  const amrex::Real x13772 = x13753 * x13771;
  const amrex::Real x13773 = x26 * x13751;
  const amrex::Real x13774 = x13773 * x13766;
  const amrex::Real x13775 = x13774 * x13765;
  const amrex::Real x13776 =
    -x13751 - x13757 + x13760 - x13770 + x13772 + x13775;
  const amrex::Real x13777 = x13776 - x6275;
  const amrex::Real x13778 = x13777 + x6347;
  const amrex::Real x13779 = x5246 + x5247;
  const amrex::Real x13780 = x5004 * x3846;
  const amrex::Real x13781 = 1780000.0 * x6605;
  const amrex::Real x13782 = 1780000.0 * x6608 - sc[5] * x13781;
  const amrex::Real x13783 = x13780 + x13782;
  const amrex::Real x13784 = x13783 - x6641 + x6643;
  const amrex::Real x13785 = x13779 + x13784;
  const amrex::Real x13786 = x13785 + x6198 + x6210 + x6211;
  const amrex::Real x13787 = -x6358;
  const amrex::Real x13788 = -x6366;
  const amrex::Real x13789 = x13787 + x13788;
  const amrex::Real x13790 = x13786 + x13789 + x6158;
  const amrex::Real x13791 = x13778 + x13790;
  const amrex::Real x13792 = x6104 + x6114;
  const amrex::Real x13793 = -x6356;
  const amrex::Real x13794 = x13793 + x6134;
  const amrex::Real x13795 = 180000.0 * sc[5];
  const amrex::Real x13796 = x6760 - x6761 - x6762;
  const amrex::Real x13797 = x13776 + x13782;
  const amrex::Real x13798 = x13779 + x13797;
  const amrex::Real x13799 = x6784 + x6788 - x6803;
  const amrex::Real x13800 = x6747 + x6748 + x6778 + x6779 - x6814;
  const amrex::Real x13801 = -x6794 + x6796 + x6797;
  const amrex::Real x13802 =
    -20000000.0 * x1771 - 20000000.0 * x6518 + x5004 * x3847;
  const amrex::Real x13803 = x6795 - x6799 + x6815;
  const amrex::Real x13804 = x5004 * x3848;
  const amrex::Real x13805 = -x7010 + x7011;
  const amrex::Real x13806 = x7007 - x7008;
  const amrex::Real x13807 = -x6999 + x7013;
  const amrex::Real x13808 = x7003 - x7012 + x7060;
  const amrex::Real x13809 = x5004 * x3849;
  const amrex::Real x13810 = x7133 - x7143;
  const amrex::Real x13811 = x7129 - x7130;
  const amrex::Real x13812 = x7127 - x7145;
  const amrex::Real x13813 = x7131 - x7144 + x7190;
  const amrex::Real x13814 = x5004 * x3850;
  const amrex::Real x13815 = x7234 - x7247;
  const amrex::Real x13816 = x7238 - x7239;
  const amrex::Real x13817 = x7250 - x7252;
  const amrex::Real x13818 = -x7240 + x7242 + x7292;
  const amrex::Real x13819 = -x7510;
  const amrex::Real x13820 = -x7513;
  const amrex::Real x13821 = -x7328;
  const amrex::Real x13822 = -x7323;
  const amrex::Real x13823 = 56240000.0 * x7415;
  const amrex::Real x13824 = 32000000.0 * x1799;
  const amrex::Real x13825 = -x7385 + x7399 - x13824 * sc[14];
  const amrex::Real x13826 = x7404 - x7412 - x7423;
  const amrex::Real x13827 = x7388 - x7410 - x7418;
  const amrex::Real x13828 = x26 * x13750;
  const amrex::Real x13829 = x13828 * sc[12];
  const amrex::Real x13830 = x7354 * x13764 + x7355 * x13762;
  const amrex::Real x13831 = x13830 * x13769;
  const amrex::Real x13832 = x13830 * x13774;
  const amrex::Real x13833 = x13748 * x13759;
  const amrex::Real x13834 = 1.014e+16 * x13833;
  const amrex::Real x13835 = x13752 * x13771;
  const amrex::Real x13836 = 1.19557674418605e+30 * x13835;
  const amrex::Real x13837 = x13748 * x13737 * x13733;
  const amrex::Real x13838 = 1.014e+16 * x13837;
  const amrex::Real x13839 = x13756 * x13752;
  const amrex::Real x13840 = 1.19557674418605e+30 * x13839;
  const amrex::Real x13841 =
    -x13831 + x13832 + x13834 + x13836 - x13838 - x13840;
  const amrex::Real x13842 =
    -x10556 - x13829 + x13841 + x7325 + x7326 - x7395 - x7396 + x7397;
  const amrex::Real x13843 = -x7400 + x5004 * x3852;
  const amrex::Real x13844 = -x7413 + x7419 - x7421;
  const amrex::Real x13845 = x5004 * x3853;
  const amrex::Real x13846 = -x7614 + x7615;
  const amrex::Real x13847 = x7610 - x7621;
  const amrex::Real x13848 = x7636 - x7641;
  const amrex::Real x13849 = 3.042e+16 * x13833;
  const amrex::Real x13850 = x13766 * (1.68 * x13763 + x7630 * x13764);
  const amrex::Real x13851 = x13850 * x13768;
  const amrex::Real x13852 = 3.042e+16 * x13837;
  const amrex::Real x13853 = 3.58673023255814e+30 * x13752;
  const amrex::Real x13854 = x13853 * x13756;
  const amrex::Real x13855 = x13850 * x13773;
  const amrex::Real x13856 = x13853 * x13771;
  const amrex::Real x13857 =
    x13849 - x13851 - x13852 - x13854 + x13855 + x13856 + x7611 - x7625 + x7717;
  const amrex::Real x13858 = x13776 + x13783;
  const amrex::Real x13859 = -x7782 + x7787;
  const amrex::Real x13860 = x7783 - x7784;
  const amrex::Real x13861 = -x7795 + x7796;
  const amrex::Real x13862 = -x7785 + x7786 + x7837;
  const amrex::Real x13863 = -x7867;
  const amrex::Real x13864 = x5004 * x3854;
  const amrex::Real x13865 = x7877 - x7893;
  const amrex::Real x13866 = x7879 - x7885;
  const amrex::Real x13867 = -x7894 + x7895;
  const amrex::Real x13868 = -x7880 + x7881 + x7936;
  const amrex::Real x13869 = -x7975;
  const amrex::Real x13870 = x5004 * x3855;
  const amrex::Real x13871 = -x7991 + x7992;
  const amrex::Real x13872 = x7979 - x8000;
  const amrex::Real x13873 = -x8002 + x8006;
  const amrex::Real x13874 = -x7988 + x7989 + x8046;
  const amrex::Real x13875 = x5004 * x3856;
  const amrex::Real x13876 = x13841 + x13875;
  const amrex::Real x13877 = -x8086 + x8111;
  const amrex::Real x13878 = x8097 - x8104;
  const amrex::Real x13879 = -x8105 + x8110;
  const amrex::Real x13880 = -x8098 + x8109 + x8152;
  const amrex::Real x13881 = -x5659;
  const amrex::Real x13882 = x13881 - x5658;
  const amrex::Real x13883 = x13788 + x8198;
  const amrex::Real x13884 = -x8193 + x8196;
  const amrex::Real x13885 = x8206 - x8207;
  const amrex::Real x13886 = -x8186 + x5004 * x3857;
  const amrex::Real x13887 = x13767 - x8197 + x8203 + x8235;
  const amrex::Real x13888 = x5004 * x3858;
  const amrex::Real x13889 = -x8309 + x8322;
  const amrex::Real x13890 = x8302 - x8324;
  const amrex::Real x13891 = -x8325 + x8332;
  const amrex::Real x13892 = 8.96682558139535e+29 * x13839;
  const amrex::Real x13893 = 8.96682558139535e+29 * x13835;
  const amrex::Real x13894 = x8313 * x13764 + x8314 * x13762;
  const amrex::Real x13895 = x13894 * x13774;
  const amrex::Real x13896 = 7.605e+15 * x13837;
  const amrex::Real x13897 = x13894 * x13769;
  const amrex::Real x13898 = sc[5] * x13828;
  const amrex::Real x13899 = 7.605e+15 * x13833;
  const amrex::Real x13900 = -x10804 - x13892 + x13893 + x13895 - x13896 -
                             x13897 - x13898 + x13899 - x8303 - x8304 + x8305 +
                             x8416;
  const amrex::Real x13901 = x8485 - x8489;
  const amrex::Real x13902 = -x8483 + x8495;
  const amrex::Real x13903 = x8488 - x8496;
  const amrex::Real x13904 = x8484 - x8487 + x8543;
  const amrex::Real x13905 = -x8584 + x8591 - sc[5] * x13824;
  const amrex::Real x13906 = -x8644;
  const amrex::Real x13907 = x13793 + x8642;
  const amrex::Real x13908 = x13788 + x8651;
  const amrex::Real x13909 = x13787 + x8652;
  const amrex::Real x13910 = x13882 + x13908 + x13909 + x6158;
  const amrex::Real x13911 = x13779 + x13910;
  const amrex::Real x13912 = x13906 + x13907 + x13911;
  const amrex::Real x13913 = x13858 + x13912;
  const amrex::Real x13914 = x8593 - x8596 + x8616;
  const amrex::Real x13915 = x8688 - x8693;
  const amrex::Real x13916 = -x8680 + x8690;
  const amrex::Real x13917 = -x8687 - x8698 + x8699;
  const amrex::Real x13918 = -x8684 + x8685 + x8754;
  const amrex::Real x13919 = x5004 * x3859;
  const amrex::Real x13920 = x8804 - x8834;
  const amrex::Real x13921 = x8817 - x8826;
  const amrex::Real x13922 = -x8830 + x8833;
  const amrex::Real x13923 = 1.521e+16 * x13833;
  const amrex::Real x13924 = 0.84 * x13763 + x8806 * x13764;
  const amrex::Real x13925 = x13774 * x13924;
  const amrex::Real x13926 = x13769 * x13924;
  const amrex::Real x13927 = 1.521e+16 * x13837;
  const amrex::Real x13928 = 1.79336511627907e+30 * x13839;
  const amrex::Real x13929 = 1.79336511627907e+30 * x13835;
  const amrex::Real x13930 =
    x13923 + x13925 - x13926 - x13927 - x13928 + x13929 - x8803 + x8812 + x8909;
  const amrex::Real x13931 = x13783 + x13912 + x6198 + x6210 + x6211;
  const amrex::Real x13932 = x13778 + x8950 + x8956;
  const amrex::Real x13933 = -x8988;
  const amrex::Real x13934 = x13793 + x9006;
  const amrex::Real x13935 = x8997 - x9000 + x9020;
  const amrex::Real x13936 = x9073 - x9078;
  const amrex::Real x13937 = x9079 - x9084;
  const amrex::Real x13938 = -x9067 + x9068 - x9069;
  const amrex::Real x13939 = -x9070 + x9071 + x9137;
  const amrex::Real x13940 = x13778 + x9167 + x9171;
  const amrex::Real x13941 = -x9203;
  const amrex::Real x13942 = -x9213 + x9214 + x9237;
  const amrex::Real x13943 = -x9281 + x9285;
  const amrex::Real x13944 = x9284 - x9287;
  const amrex::Real x13945 = -x9263 + x9270 - x9273;
  const amrex::Real x13946 = -x9268 + x9286 + x9328;
  const amrex::Real x13947 = x9371 - x9375;
  const amrex::Real x13948 = x9366 - x9367;
  const amrex::Real x13949 = x9373 - x9383;
  const amrex::Real x13950 = x9372 - x9381 + x9429;
  const amrex::Real x13951 = x13776 + x13784;
  const amrex::Real x13952 = -x9468 + x9475;
  const amrex::Real x13953 = -x9457 + x9464;
  const amrex::Real x13954 = x9459 - x9479;
  const amrex::Real x13955 = x9467 - x9473 + x9524;
  const amrex::Real x13956 = x13776 + x13785;
  const amrex::Real x13957 = x9565 - x9567;
  const amrex::Real x13958 = -x9562 + x9574;
  const amrex::Real x13959 = x9568 - x9569;
  const amrex::Real x13960 = -x9554 + x9563 + x9611;
  const amrex::Real x13961 = x9645 - x9649;
  const amrex::Real x13962 = -x9639 + x9648;
  const amrex::Real x13963 = x9643 - x9662;
  const amrex::Real x13964 = -x9654 + x9660 + x9705;
  const amrex::Real x13965 = -x9745 + x9753;
  const amrex::Real x13966 = x9741 - x9742;
  const amrex::Real x13967 = -x9754 + x9755;
  const amrex::Real x13968 = x9744 - x9749 + x9790;
  const amrex::Real x13969 = x13788 + x9838;
  const amrex::Real x13970 = x9828 - x9830;
  const amrex::Real x13971 = -x9831 + x9839;
  const amrex::Real x13972 = -x9829 + x9834 + x9876;
  const amrex::Real x13973 = x13788 + x9918;
  const amrex::Real x13974 = x9909 - x9911;
  const amrex::Real x13975 = x9926 - x9927;
  const amrex::Real x13976 = x9916 - x9919 + x9964;
  const amrex::Real x13977 = -x10010 + x9991;
  const amrex::Real x13978 = x10002 + x10045 - x9993;
  const amrex::Real x13979 = x10086 + x13793;
  const amrex::Real x13980 = x10073 + x10082;
  const amrex::Real x13981 = x10145 + x13793;
  const amrex::Real x13982 = x10131 + x10136 + x13778;
  const amrex::Real x13983 = x10191 + x13793;
  const amrex::Real x13984 = x10188 + x10198 + x13777;
  const amrex::Real x13985 = x10215 + x10229 + x13777;
  const amrex::Real x13986 = -x11434;
  const amrex::Real x13987 = -x11370;
  const amrex::Real x13988 = x13986 + x13987;
  const amrex::Real x13989 = -x11387;
  const amrex::Real x13990 = -x6598 + x6602;
  const amrex::Real x13991 = x11391 + x13990 + x5010 * x3846;
  const amrex::Real x13992 = x5222 + x5223;
  const amrex::Real x13993 = x13991 + x13992;
  const amrex::Real x13994 = x11388 - x11389;
  const amrex::Real x13995 = x13993 + x13994;
  const amrex::Real x13996 = x13989 + x13995;
  const amrex::Real x13997 = x13988 + x13996;
  const amrex::Real x13998 = x11349 + x13997;
  const amrex::Real x13999 = -x11385;
  const amrex::Real x14000 = x11366 + x11442 + x11443 + x6270 - x5008 * x3706;
  const amrex::Real x14001 = x13999 + x14000;
  const amrex::Real x14002 = x13998 + x14001;
  const amrex::Real x14003 = x13990 + x13992;
  const amrex::Real x14004 = -x11458 + x11459;
  const amrex::Real x14005 = x11460 - x11464;
  const amrex::Real x14006 = -x11451 + x11461 - x11463;
  const amrex::Real x14007 = -x11500 + x11502;
  const amrex::Real x14008 = x11507 - x11508;
  const amrex::Real x14009 = -x11494 + x11503 - x11504;
  const amrex::Real x14010 = -x11567 - x11570 + x11577;
  const amrex::Real x14011 = -x11566 + x11573 + x11657;
  const amrex::Real x14012 = x11578 - x11579 + x11646;
  const amrex::Real x14013 = -x11572 + x11574 - x11575;
  const amrex::Real x14014 = -x11568 + x11569 + x11576 - x11593 + x11595;
  const amrex::Real x14015 = x11673 - x11675;
  const amrex::Real x14016 = x11677 - x11680;
  const amrex::Real x14017 = -x11667 + x11674 - x11681;
  const amrex::Real x14018 = x11729 - x11731;
  const amrex::Real x14019 = x11737 - x11738;
  const amrex::Real x14020 = -x11721 - x11728 + x11730;
  const amrex::Real x14021 = -x11769;
  const amrex::Real x14022 = -x11771;
  const amrex::Real x14023 = -x11774;
  const amrex::Real x14024 = -x11767;
  const amrex::Real x14025 = -x11790 + x11799;
  const amrex::Real x14026 = -x11782 - x11783 + x11784;
  const amrex::Real x14027 = -x11794 + x11795 - x11796;
  const amrex::Real x14028 = 12000000.0 * x1745;
  const amrex::Real x14029 = x14028 * sc[12];
  const amrex::Real x14030 =
    -x11787 + x11788 - x11792 - x11800 - x11801 - x14029;
  const amrex::Real x14031 = -x11786 + x11797;
  const amrex::Real x14032 = x11842 - x11848;
  const amrex::Real x14033 = x11846 - x11847;
  const amrex::Real x14034 = -x11836 - x11841 + x11843;
  const amrex::Real x14035 = -x11882;
  const amrex::Real x14036 = -x11887 + x11892;
  const amrex::Real x14037 = -x11893 + x11896;
  const amrex::Real x14038 = -x11889 + x11890 - x11898;
  const amrex::Real x14039 = -x11931;
  const amrex::Real x14040 = -x11939 + x11942;
  const amrex::Real x14041 = -x11945 + x11946;
  const amrex::Real x14042 = -x11927 - x11941 + x11944;
  const amrex::Real x14043 = x12008 + x5010 * x3856;
  const amrex::Real x14044 = x11983 - x11985;
  const amrex::Real x14045 = x11986 - x11987;
  const amrex::Real x14046 = -x11975 - x11981 + x11982;
  const amrex::Real x14047 = -x5651;
  const amrex::Real x14048 = x14047 - x5650;
  const amrex::Real x14049 = x12024 + x13986;
  const amrex::Real x14050 = x12029 - x12030;
  const amrex::Real x14051 = x12027 - x12031;
  const amrex::Real x14052 = -x12017 - x12026 + x12028;
  const amrex::Real x14053 = -x12079 + x12080;
  const amrex::Real x14054 = x12086 - x12089;
  const amrex::Real x14055 = sc[6] * x14028;
  const amrex::Real x14056 =
    -x12082 - x12083 + x12084 - x12091 - x12092 - x14055;
  const amrex::Real x14057 = x12126 - x12130;
  const amrex::Real x14058 = x12131 - x12132;
  const amrex::Real x14059 = -x12119 - x12127 + x12128;
  const amrex::Real x14060 = x12165 - x12166;
  const amrex::Real x14061 = -x12192;
  const amrex::Real x14062 = x13993 + x14048;
  const amrex::Real x14063 = x11349 + x12180 + x12194 + x13988 + x14062;
  const amrex::Real x14064 = x14061 + x14063;
  const amrex::Real x14065 = -x12159 + x12164 - x12168;
  const amrex::Real x14066 = -x12206 + x12208;
  const amrex::Real x14067 = x12210 - x12211;
  const amrex::Real x14068 = -x12201 - x12209 + x12212;
  const amrex::Real x14069 = x12244 - x12247;
  const amrex::Real x14070 = x12251 - x12252;
  const amrex::Real x14071 = -x12239 - x12249 + x12250;
  const amrex::Real x14072 = -x12279 + x12283 + x13999;
  const amrex::Real x14073 = x14000 + x14064;
  const amrex::Real x14074 = -x12299;
  const amrex::Real x14075 = -x12303 + x12306 - x12307;
  const amrex::Real x14076 = x12336 - x12344;
  const amrex::Real x14077 = -x12330 + x12337 - x12341;
  const amrex::Real x14078 = -x12340 - x12342 + x12343;
  const amrex::Real x14079 = x12049 + x12372 - x12376 + x13999;
  const amrex::Real x14080 = -x12388;
  const amrex::Real x14081 = -x12387 - x12392 + x12394;
  const amrex::Real x14082 = x12421 - x12422;
  const amrex::Real x14083 = -x12408 + x12420 - x12423;
  const amrex::Real x14084 = -x12415 - x12416 + x12417;
  const amrex::Real x14085 = -x12456 + x12458;
  const amrex::Real x14086 = -x12455 + x12460;
  const amrex::Real x14087 = -x12449 + x12457 - x12461;
  const amrex::Real x14088 = x13989 + x13991 + x13994;
  const amrex::Real x14089 = -x12488 + x12493;
  const amrex::Real x14090 = -x12489 + x12491;
  const amrex::Real x14091 = -x12490 + x12492;
  const amrex::Real x14092 = x12520 - x12523;
  const amrex::Real x14093 = x12524 - x12525;
  const amrex::Real x14094 = -x12522 + x12527;
  const amrex::Real x14095 = -x12557 + x12558;
  const amrex::Real x14096 = x12559 - x12560;
  const amrex::Real x14097 = x12556 - x12561;
  const amrex::Real x14098 = -x12587 + x12588;
  const amrex::Real x14099 = -x12591 + x12592;
  const amrex::Real x14100 = -x12589 + x12590;
  const amrex::Real x14101 = x12616 + x13986;
  const amrex::Real x14102 = -x12617 + x12620;
  const amrex::Real x14103 = -x12618 + x12619 + x13989;
  const amrex::Real x14104 = x12653 + x13986;
  const amrex::Real x14105 = x12651 - x12652;
  const amrex::Real x14106 = -x12648 + x12650;
  const amrex::Real x14107 = x12678 - x12681;
  const amrex::Real x14108 = x12180 + x12194 + x13998 + x14048;
  const amrex::Real x14109 = x12756 + x13999;
  const amrex::Real x14110 = x5013 * x3891;
  const amrex::Real x14111 = -x5013 * x3894;
  const amrex::Real x14112 = 201000.0 * x11734;
  const amrex::Real x14113 = x14112 * x11429;
  const amrex::Real x14114 = 201000.0 * x11798;
  const amrex::Real x14115 = x14114 * x11429;
  const amrex::Real x14116 = -363.972972972973 * x11726 +
                             363.972972972973 * x11733 + x14112 - x14114 -
                             x14113 * x11423 + x14115 * x11423;
  const amrex::Real x14117 = -x12812 + x14116;
  const amrex::Real x14118 = x5210 + x5211;
  const amrex::Real x14119 = x14117 + x14118;
  const amrex::Real x14120 = x12775 + x12805 + x14119;
  const amrex::Real x14121 = x14111 + x14120;
  const amrex::Real x14122 = x14116 + x14118;
  const amrex::Real x14123 = x5013 * x3898 - x5013 * x3899;
  const amrex::Real x14124 = x5013 * x3900 - x5013 * x3901;
  const amrex::Real x14125 = x5013 * x3902 - x5013 * x3903;
  const amrex::Real x14126 = 300000.0 * x6334;
  const amrex::Real x14127 = x14126 + x5013 * x3904 - x5013 * x3905;
  const amrex::Real x14128 = 260000.0 * x12915 + 731600000.0 * x12919 + x14127;
  const amrex::Real x14129 = x5013 * x3906 - x5013 * x3907;
  const amrex::Real x14130 = x5013 * x3908 - x5013 * x3909;
  const amrex::Real x14131 = -x13068;
  const amrex::Real x14132 = -x13074;
  const amrex::Real x14133 = -x13044;
  const amrex::Real x14134 = x5013 * x3910 - x5013 * x3911;
  const amrex::Real x14135 = -x13050 + x14134;
  const amrex::Real x14136 = 365800000.0 * x13052;
  const amrex::Real x14137 = 130000.0 * x13046;
  const amrex::Real x14138 = -sc[8] * x14136 - sc[8] * x14137;
  const amrex::Real x14139 = x5013 * x3912 - x5013 * x3913;
  const amrex::Real x14140 = x14139 - sc[7] * x14136 - sc[7] * x14137;
  const amrex::Real x14141 = -x13144;
  const amrex::Real x14142 = x5013 * x3914 - x5013 * x3915;
  const amrex::Real x14143 = x5013 * x3916 - x5013 * x3917;
  const amrex::Real x14144 = -x5646;
  const amrex::Real x14145 = -x5647;
  const amrex::Real x14146 = x14122 + x14145;
  const amrex::Real x14147 = x14144 + x14146;
  const amrex::Real x14148 = x5013 * x3918 - x5013 * x3919;
  const amrex::Real x14149 = x5013 * x3920 - x5013 * x3921;
  const amrex::Real x14150 = x5013 * x3922 - x5013 * x3923;
  const amrex::Real x14151 = x12775 + x14144;
  const amrex::Real x14152 = x14111 + x5013 * x3924;
  const amrex::Real x14153 = -x13308 + x14152;
  const amrex::Real x14154 = x14146 + x14153;
  const amrex::Real x14155 = x14151 + x14154;
  const amrex::Real x14156 = x5013 * x3926 - x5013 * x3927;
  const amrex::Real x14157 = -x13326 + x14156;
  const amrex::Real x14158 = x5013 * x3928 - x5013 * x3929;
  const amrex::Real x14159 = x12805 + x14151;
  const amrex::Real x14160 = x14154 + x14159;
  const amrex::Real x14161 = -x13396;
  const amrex::Real x14162 = x14111 + x5013 * x3930;
  const amrex::Real x14163 = x5013 * x3931 - x5013 * x3932;
  const amrex::Real x14164 = -x13456;
  const amrex::Real x14165 = x5013 * x3933 - x5013 * x3934;
  const amrex::Real x14166 = x5013 * x3935 - x5013 * x3936;
  const amrex::Real x14167 = x5013 * x3937 - x5013 * x3938;
  const amrex::Real x14168 = x14119 + x14145;
  const amrex::Real x14169 = x5013 * x3939 - x5013 * x3940;
  const amrex::Real x14170 = x5013 * x3941 - x5013 * x3942;
  const amrex::Real x14171 = x5013 * x3943 - x5013 * x3944;
  const amrex::Real x14172 = x5013 * x3945 - x5013 * x3946;
  const amrex::Real x14173 = x5013 * x3947 - x5013 * x3948;
  const amrex::Real x14174 = x5013 * x3949 - x5013 * x3950;
  const amrex::Real x14175 = x14111 + x5013 * x3951;
  const amrex::Real x14176 = x5013 * x3952;
  const amrex::Real x14177 = x14111 + x5013 * x3953;
  const amrex::Real x14178 = x14159 + x14168;
  const amrex::Real x14179 = x5020 * x3779;
  const amrex::Real x14180 = x5032 * x1877;
  const amrex::Real x14181 = x5016 * x3703;
  const amrex::Real x14182 = 13240000.0 * x6109;
  const amrex::Real x14183 = x5032 * x1886;
  const amrex::Real x14184 = x4266 * x5032;
  const amrex::Real x14185 = x14110 + x14111;
  const amrex::Real x14186 = -x12792;
  const amrex::Real x14187 = x12779 + x12801;
  const amrex::Real x14188 = -x11384;
  const amrex::Real x14189 = x5020 * x3774;
  const amrex::Real x14190 = -x14189;
  const amrex::Real x14191 = x4263 * x5032;
  const amrex::Real x14192 = x4233 * x5032;
  const amrex::Real x14193 = x12771 + x12772 + x14191 + x14192;
  const amrex::Real x14194 = x5029 * x3863;
  const amrex::Real x14195 = 120000.0 * x10273 - 120000.0 * x10275;
  const amrex::Real x14196 = x14195 + x6582;
  const amrex::Real x14197 = x10272 - x12806 + x14196;
  const amrex::Real x14198 = -x10268 - x12800 - x14194 + x14197;
  const amrex::Real x14199 = x14193 + x14198;
  const amrex::Real x14200 = x12783 + x14199;
  const amrex::Real x14201 = x12787 + x14188 + x14190 + x14200;
  const amrex::Real x14202 = x5016 * x3706;
  const amrex::Real x14203 = x14202 + x1814 * x14182;
  const amrex::Real x14204 = x14201 + x14203;
  const amrex::Real x14205 = x12810 + x14187 + x14204;
  const amrex::Real x14206 = x14186 + x14205;
  const amrex::Real x14207 = x5029 * x3864;
  const amrex::Real x14208 = x5020 * x3781;
  const amrex::Real x14209 = x4267 * x5032;
  const amrex::Real x14210 = x425 * x5032;
  const amrex::Real x14211 = sc[0] * x14210;
  const amrex::Real x14212 = x14211 * kf_qss[163];
  const amrex::Real x14213 = x5016 * x3708;
  const amrex::Real x14214 = x5016 * x3709;
  const amrex::Real x14215 = x5020 * x3780;
  const amrex::Real x14216 = x5032 * x2084;
  const amrex::Real x14217 = 5280000.0 * x6801;
  const amrex::Real x14218 = x14193 + x14196;
  const amrex::Real x14219 = x12816 - x12818;
  const amrex::Real x14220 = x12817 + x14123;
  const amrex::Real x14221 = x5020 * x3782;
  const amrex::Real x14222 = x5029 * x3865;
  const amrex::Real x14223 = x5016 * x3711;
  const amrex::Real x14224 = x14211 * kf_qss[166];
  const amrex::Real x14225 = x4269 * x5032;
  const amrex::Real x14226 = x5016 * x3710;
  const amrex::Real x14227 = x5020 * x3784;
  const amrex::Real x14228 = x5032 * x2159;
  const amrex::Real x14229 = -x12846 + x12847;
  const amrex::Real x14230 = x12845 + x14124;
  const amrex::Real x14231 = x10392 + x10402;
  const amrex::Real x14232 = x5020 * x3785;
  const amrex::Real x14233 = x5020 * x3786;
  const amrex::Real x14234 = x5029 * x3866;
  const amrex::Real x14235 = 25100000000000.0 * exp(x11581 - x5023) * x11584;
  const amrex::Real x14236 = x4270 * x5032;
  const amrex::Real x14237 = x4223 * x5032;
  const amrex::Real x14238 = x5016 * x3712;
  const amrex::Real x14239 = x5016 * x3713;
  const amrex::Real x14240 = x3678 * kf_qss[196];
  const amrex::Real x14241 = 46000.0 * x3688;
  const amrex::Real x14242 = sc[8] * x14241;
  const amrex::Real x14243 = x3689 * x3680 * x14242;
  const amrex::Real x14244 = x4275 * x5032;
  const amrex::Real x14245 = x4238 * x5032;
  const amrex::Real x14246 = x4235 * x5032;
  const amrex::Real x14247 = x12875 - x12876;
  const amrex::Real x14248 = x12877 + x14125;
  const amrex::Real x14249 = x10475 + x11635;
  const amrex::Real x14250 = 1000000.0 * sc[9];
  const amrex::Real x14251 = 2660000.0 * sc[18];
  const amrex::Real x14252 = x4239 * x5032;
  const amrex::Real x14253 = x5016 * x3715;
  const amrex::Real x14254 = x5029 * x3867;
  const amrex::Real x14255 = x4224 * x5032;
  const amrex::Real x14256 = x5016 * x3714;
  const amrex::Real x14257 = x5020 * x3788;
  const amrex::Real x14258 = x4277 * x5032;
  const amrex::Real x14259 = x4240 * x5032;
  const amrex::Real x14260 = x4276 * x5032;
  const amrex::Real x14261 = x5020 * x3787;
  const amrex::Real x14262 = x12917 + x12920;
  const amrex::Real x14263 = x12912 - x12913 + x12916;
  const amrex::Real x14264 = x5029 * x3868;
  const amrex::Real x14265 = x4279 * x5032;
  const amrex::Real x14266 = x5020 * x3789;
  const amrex::Real x14267 = x4278 * x5032;
  const amrex::Real x14268 = x4225 * x5032;
  const amrex::Real x14269 = x5016 * x3716;
  const amrex::Real x14270 = x5020 * x3790;
  const amrex::Real x14271 = x4242 * x5032;
  const amrex::Real x14272 = x4241 * x5032;
  const amrex::Real x14273 = x5016 * x3717;
  const amrex::Real x14274 = -x12982 + x12983;
  const amrex::Real x14275 = x12984 + x14129;
  const amrex::Real x14276 = x5020 * x3791;
  const amrex::Real x14277 = x5020 * x3792;
  const amrex::Real x14278 = x5029 * x3869;
  const amrex::Real x14279 = x4226 * x5032;
  const amrex::Real x14280 = x4281 * x5032;
  const amrex::Real x14281 = x5016 * x3719;
  const amrex::Real x14282 = x5016 * x3718;
  const amrex::Real x14283 = x4244 * x5032;
  const amrex::Real x14284 = x4280 * x5032;
  const amrex::Real x14285 = x4243 * x5032;
  const amrex::Real x14286 = x13013 - x13014;
  const amrex::Real x14287 = x13012 + x14130;
  const amrex::Real x14288 = x5029 * x3870;
  const amrex::Real x14289 = x4245 * x5032;
  const amrex::Real x14290 = x4227 * x5032;
  const amrex::Real x14291 = x4283 * x5032;
  const amrex::Real x14292 = x4282 * x5032;
  const amrex::Real x14293 = x5016 * x3720;
  const amrex::Real x14294 = x5016 * x3721;
  const amrex::Real x14295 = x5020 * x3794;
  const amrex::Real x14296 = x5020 * x3793;
  const amrex::Real x14297 = x4246 * x5032;
  const amrex::Real x14298 = x13048 - x13054;
  const amrex::Real x14299 = -x11879;
  const amrex::Real x14300 = -x11900;
  const amrex::Real x14301 = -x13136;
  const amrex::Real x14302 = -x13093;
  const amrex::Real x14303 = -x13090;
  const amrex::Real x14304 = -x13113;
  const amrex::Real x14305 = -x10659;
  const amrex::Real x14306 = x5020 * x3796;
  const amrex::Real x14307 = 50000000.0 * x5357;
  const amrex::Real x14308 = 50000000.0 * x5354;
  const amrex::Real x14309 = x4285 * x5032;
  const amrex::Real x14310 = x5020 * x3795;
  const amrex::Real x14311 = x4284 * x5032;
  const amrex::Real x14312 = x5029 * x3871;
  const amrex::Real x14313 = x5016 * x3723;
  const amrex::Real x14314 = 40000000.0 * x7059;
  const amrex::Real x14315 = 46000.0 * sc[8];
  const amrex::Real x14316 = x5016 * x3722;
  const amrex::Real x14317 = x4228 * x5032;
  const amrex::Real x14318 = x6625 * x5028;
  const amrex::Real x14319 = 50000000.0 * x1554;
  const amrex::Real x14320 = 50000000.0 * x5350;
  const amrex::Real x14321 = x4248 * x5032;
  const amrex::Real x14322 = x4247 * x5032;
  const amrex::Real x14323 = x13096 - x13098 - x13099;
  const amrex::Real x14324 = x13091 - x13095;
  const amrex::Real x14325 = -x10670 + x10672 - x11917;
  const amrex::Real x14326 = x5020 * x3797;
  const amrex::Real x14327 = x5020 * x3798;
  const amrex::Real x14328 = x5029 * x3872;
  const amrex::Real x14329 = x4286 * x5032;
  const amrex::Real x14330 = x5016 * x3724;
  const amrex::Real x14331 = x5016 * x3725;
  const amrex::Real x14332 = x14211 * kf_qss[178];
  const amrex::Real x14333 = x5032 * x2765;
  const amrex::Real x14334 = -x13145 + x13147;
  const amrex::Real x14335 = x13146 + x14142;
  const amrex::Real x14336 = -x10703 + x10716 - x11959;
  const amrex::Real x14337 = -x13177;
  const amrex::Real x14338 = x5020 * x3799;
  const amrex::Real x14339 = x5020 * x3800;
  const amrex::Real x14340 = x5029 * x3873;
  const amrex::Real x14341 = x4249 * x5032;
  const amrex::Real x14342 = x4288 * x5032;
  const amrex::Real x14343 = x4229 * x5032;
  const amrex::Real x14344 = x5016 * x3726;
  const amrex::Real x14345 = x4287 * x5032;
  const amrex::Real x14346 = x5016 * x3727;
  const amrex::Real x14347 = x4250 * x5032;
  const amrex::Real x14348 = x10755 - x13198;
  const amrex::Real x14349 = -x13176 + x13178;
  const amrex::Real x14350 = x13179 + x14143;
  const amrex::Real x14351 = x6383 * x5019;
  const amrex::Real x14352 = x5020 * x3801;
  const amrex::Real x14353 = 40000000.0 * x8241;
  const amrex::Real x14354 = x5020 * x3802;
  const amrex::Real x14355 = x5029 * x3874;
  const amrex::Real x14356 = x5016 * x3729;
  const amrex::Real x14357 = -x13220;
  const amrex::Real x14358 = x4289 * x5032;
  const amrex::Real x14359 = -x14358;
  const amrex::Real x14360 = -x13221;
  const amrex::Real x14361 = x5032 * x2862;
  const amrex::Real x14362 = -x14361;
  const amrex::Real x14363 = x12779 + x14357 + x14359 + x14360 + x14362 + x5641;
  const amrex::Real x14364 = x13212 + x14148;
  const amrex::Real x14365 = x10783 + x12069;
  const amrex::Real x14366 = x13209 - x13210 - x13211;
  const amrex::Real x14367 = x5020 * x3803;
  const amrex::Real x14368 = x5020 * x3804;
  const amrex::Real x14369 = x4291 * x5032;
  const amrex::Real x14370 = x5029 * x3875;
  const amrex::Real x14371 = x4292 * x5032;
  const amrex::Real x14372 = x5016 * x3731;
  const amrex::Real x14373 = x5016 * x3730;
  const amrex::Real x14374 = x5032 * x2969;
  const amrex::Real x14375 = x4252 * x5032;
  const amrex::Real x14376 = -x10803;
  const amrex::Real x14377 = x13240 - x13241;
  const amrex::Real x14378 = x13239 + x14149;
  const amrex::Real x14379 = x5020 * x3805;
  const amrex::Real x14380 = 2640000.0 * x8474;
  const amrex::Real x14381 = x5016 * x3732;
  const amrex::Real x14382 = x4294 * x5032;
  const amrex::Real x14383 = x4293 * x5032;
  const amrex::Real x14384 = x5016 * x3733;
  const amrex::Real x14385 = x5020 * x3806;
  const amrex::Real x14386 = x4253 * x5032;
  const amrex::Real x14387 = x5029 * x3876;
  const amrex::Real x14388 = x5032 * x3024;
  const amrex::Real x14389 = x13269 - x13271;
  const amrex::Real x14390 = x13270 + x14150;
  const amrex::Real x14391 = x5020 * x3807;
  const amrex::Real x14392 = x5029 * x3878;
  const amrex::Real x14393 = x5020 * x3808;
  const amrex::Real x14394 = x5016 * x3735;
  const amrex::Real x14395 = x5016 * x3734;
  const amrex::Real x14396 = x12810 - x13310 - x13312 + x14363;
  const amrex::Real x14397 = -x13306 + x14396;
  const amrex::Real x14398 = x14193 + x14197;
  const amrex::Real x14399 = x12783 + x14398;
  const amrex::Real x14400 = x14397 + x14399;
  const amrex::Real x14401 = x14152 + x14400;
  const amrex::Real x14402 = x13298 - x13299;
  const amrex::Real x14403 = x5020 * x3810;
  const amrex::Real x14404 = x5020 * x3809;
  const amrex::Real x14405 = x4296 * x5032;
  const amrex::Real x14406 = x4255 * x5032;
  const amrex::Real x14407 = x5016 * x3737;
  const amrex::Real x14408 = x4295 * x5032;
  const amrex::Real x14409 = x4254 * x5032;
  const amrex::Real x14410 = x5029 * x3879;
  const amrex::Real x14411 = x5016 * x3736;
  const amrex::Real x14412 = -x13324 + x13327;
  const amrex::Real x14413 = x13323 - x13325;
  const amrex::Real x14414 = x5020 * x3811;
  const amrex::Real x14415 = x4298 * x5032;
  const amrex::Real x14416 = x4297 * x5032;
  const amrex::Real x14417 = x5020 * x3812;
  const amrex::Real x14418 = x5016 * x3739;
  const amrex::Real x14419 = x5016 * x3738;
  const amrex::Real x14420 = x5029 * x3880;
  const amrex::Real x14421 = x5032 * x3217;
  const amrex::Real x14422 = x4256 * x5032;
  const amrex::Real x14423 = -x13355 + x14158;
  const amrex::Real x14424 = x13356 - x13357;
  const amrex::Real x14425 = -x12280;
  const amrex::Real x14426 = x5016 * x3740;
  const amrex::Real x14427 = x5020 * x3813;
  const amrex::Real x14428 = x5029 * x3881;
  const amrex::Real x14429 = x12787 + x14188 + x14190 + x14203 + x14400;
  const amrex::Real x14430 = x13387 + x14186;
  const amrex::Real x14431 = x13388 + x14152;
  const amrex::Real x14432 = -x12308;
  const amrex::Real x14433 = x5020 * x3814;
  const amrex::Real x14434 = x5029 * x3882;
  const amrex::Real x14435 = x5020 * x3815;
  const amrex::Real x14436 = x5016 * x3742;
  const amrex::Real x14437 = x5016 * x3741;
  const amrex::Real x14438 = 2660000.0 * sc[4];
  const amrex::Real x14439 = x13397 - x13398;
  const amrex::Real x14440 = x13399 + x14162;
  const amrex::Real x14441 = x5020 * x3816;
  const amrex::Real x14442 = x5029 * x3883;
  const amrex::Real x14443 = x5020 * x3817;
  const amrex::Real x14444 = x4300 * x5032;
  const amrex::Real x14445 = x5016 * x3743;
  const amrex::Real x14446 = x5016 * x3744;
  const amrex::Real x14447 = x4257 * x5032;
  const amrex::Real x14448 = x3296 * x14210;
  const amrex::Real x14449 = -x13424;
  const amrex::Real x14450 = x5032 * x3298;
  const amrex::Real x14451 = x4299 * x5032;
  const amrex::Real x14452 = x13414 - x13415;
  const amrex::Real x14453 = x13416 + x14163;
  const amrex::Real x14454 = x5029 * x3884;
  const amrex::Real x14455 = x5020 * x3818;
  const amrex::Real x14456 = x5016 * x3745;
  const amrex::Real x14457 = x13449 + x14186;
  const amrex::Real x14458 = x13450 + x14152;
  const amrex::Real x14459 = x5020 * x3820;
  const amrex::Real x14460 = x5020 * x3819;
  const amrex::Real x14461 = x5016 * x3746;
  const amrex::Real x14462 = x5016 * x3747;
  const amrex::Real x14463 = x5029 * x3885;
  const amrex::Real x14464 = -x13457 + x13458;
  const amrex::Real x14465 = x5020 * x3821;
  const amrex::Real x14466 = x5020 * x3822;
  const amrex::Real x14467 = x5836 * x14210;
  const amrex::Real x14468 = x5016 * x3748;
  const amrex::Real x14469 = x5029 * x3886;
  const amrex::Real x14470 = -x13472;
  const amrex::Real x14471 = x5016 * x3749;
  const amrex::Real x14472 = x14360 + x14362;
  const amrex::Real x14473 = x13473 - x13474;
  const amrex::Real x14474 = x13475 + x14165;
  const amrex::Real x14475 = x5020 * x3823;
  const amrex::Real x14476 = x4302 * x5032;
  const amrex::Real x14477 = x5016 * x3750;
  const amrex::Real x14478 = x5016 * x3751;
  const amrex::Real x14479 = x4301 * x5032;
  const amrex::Real x14480 = x5020 * x3824;
  const amrex::Real x14481 = x5032 * x3390;
  const amrex::Real x14482 = x5029 * x3887;
  const amrex::Real x14483 = x4258 * x5032;
  const amrex::Real x14484 = x13498 - x13500;
  const amrex::Real x14485 = x13499 + x14166;
  const amrex::Real x14486 = x5020 * x3825;
  const amrex::Real x14487 = x4304 * x5032;
  const amrex::Real x14488 = x5016 * x3752;
  const amrex::Real x14489 = x5016 * x3753;
  const amrex::Real x14490 = x4303 * x5032;
  const amrex::Real x14491 = x5020 * x3826;
  const amrex::Real x14492 = x5032 * x3438;
  const amrex::Real x14493 = x4259 * x5032;
  const amrex::Real x14494 = x12801 + x14198;
  const amrex::Real x14495 = -x13525 + x13526;
  const amrex::Real x14496 = x5020 * x3828;
  const amrex::Real x14497 = x5016 * x3754;
  const amrex::Real x14498 = x5016 * x3755;
  const amrex::Real x14499 = x5020 * x3827;
  const amrex::Real x14500 = x4305 * x5032;
  const amrex::Real x14501 = x12801 + x14199;
  const amrex::Real x14502 = -x13553 + x13554;
  const amrex::Real x14503 = x4307 * x5032;
  const amrex::Real x14504 = x4306 * x5032;
  const amrex::Real x14505 = x5020 * x3830;
  const amrex::Real x14506 = x5016 * x3756;
  const amrex::Real x14507 = x5016 * x3757;
  const amrex::Real x14508 = x4260 * x5032;
  const amrex::Real x14509 = x5020 * x3829;
  const amrex::Real x14510 = x5032 * x3508;
  const amrex::Real x14511 = x13573 - x13574;
  const amrex::Real x14512 = x5020 * x3831;
  const amrex::Real x14513 = x5016 * x3758;
  const amrex::Real x14514 = x5020 * x3832;
  const amrex::Real x14515 = x5016 * x3759;
  const amrex::Real x14516 = x4308 * x5032;
  const amrex::Real x14517 = x5032 * x3539;
  const amrex::Real x14518 = x13598 - x13599;
  const amrex::Real x14519 = x5020 * x3834;
  const amrex::Real x14520 = x5020 * x3833;
  const amrex::Real x14521 = x5016 * x3760;
  const amrex::Real x14522 = x4309 * x5032;
  const amrex::Real x14523 = x5032 * x3568;
  const amrex::Real x14524 = x5016 * x3761;
  const amrex::Real x14525 = -x13622 + x13623;
  const amrex::Real x14526 = x14187 + x14199;
  const amrex::Real x14527 = x5020 * x3835;
  const amrex::Real x14528 = x4310 * x5032;
  const amrex::Real x14529 = x1548 * x14210;
  const amrex::Real x14530 = x5016 * x3762;
  const amrex::Real x14531 = x5016 * x3763;
  const amrex::Real x14532 = x5020 * x3836;
  const amrex::Real x14533 = x5032 * x3598;
  const amrex::Real x14534 = -x13645 + x13646;
  const amrex::Real x14535 = x5020 * x3838;
  const amrex::Real x14536 = x4311 * x5032;
  const amrex::Real x14537 = x5020 * x3837;
  const amrex::Real x14538 = x5016 * x3764;
  const amrex::Real x14539 = x5016 * x3765;
  const amrex::Real x14540 = x5032 * x3625;
  const amrex::Real x14541 = x13668 - x13669;
  const amrex::Real x14542 = x5020 * x3839;
  const amrex::Real x14543 = x6052 * x5032;
  const amrex::Real x14544 = x4312 * x5032;
  const amrex::Real x14545 = x5032 * x3641;
  const amrex::Real x14546 = x5016 * x3766;
  const amrex::Real x14547 = x13688 + x14186;
  const amrex::Real x14548 = x5020 * x3840;
  const amrex::Real x14549 = x5016 * x3767;
  const amrex::Real x14550 = x6078 * x5032;
  const amrex::Real x14551 = x4313 * x5032;
  const amrex::Real x14552 = 82500000000000.0 * x5024;
  const amrex::Real x14553 = x5032 * x3655;
  const amrex::Real x14554 = x14111 + x14176;
  const amrex::Real x14555 = x5016 * x3768;
  const amrex::Real x14556 = x5020 * x3841;
  const amrex::Real x14557 = x206 * kf_qss[196];
  const amrex::Real x14558 = x13724 + x14186;
  const amrex::Real x14559 = x12801 + x14177;
  const amrex::Real x14560 = x5020 * x3842;
  const amrex::Real x14561 = x5016 * x3769;
  const amrex::Real x14562 = x5016 * x3770;
  const amrex::Real x14563 = x13730 + x14186;
  const amrex::Real x14564 = x12801 + x14152;
  const amrex::Real x14565 = -4161.60182620503 * invT + x4913;
  const amrex::Real x14566 = exp(x14565);
  const amrex::Real x14567 = x14566 * sc[10];
  const amrex::Real x14568 = 4.92 * x14567;
  const amrex::Real x14569 = -x1814 * x14568;
  const amrex::Real x14570 = -x6269;
  const amrex::Real x14571 = x5049 * x3706;
  const amrex::Real x14572 = -x14571;
  const amrex::Real x14573 = -x5046 * x3706;
  const amrex::Real x14574 = x5092 * x3955;
  const amrex::Real x14575 = x5062 * x3891;
  const amrex::Real x14576 = x5051 * x3779;
  const amrex::Real x14577 = x5049 * x3703;
  const amrex::Real x14578 = x4018 * x5092;
  const amrex::Real x14579 = x5055 * x3894;
  const amrex::Real x14580 = -x14579;
  const amrex::Real x14581 = x5055 * x3891;
  const amrex::Real x14582 = x14580 + x14581;
  const amrex::Real x14583 = x5042 * x3779;
  const amrex::Real x14584 = x5042 * x3774;
  const amrex::Real x14585 = -x10304 + x11383;
  const amrex::Real x14586 = -x14584 + x14585;
  const amrex::Real x14587 = x10248 + x11343 + x14583 + x14586;
  const amrex::Real x14588 = -x5090 * x3958;
  const amrex::Real x14589 = x14588 + x5090 * x3955;
  const amrex::Real x14590 = x5051 * x3774;
  const amrex::Real x14591 = x10318 + x14590 + x6260;
  const amrex::Real x14592 = x5092 * x3958;
  const amrex::Real x14593 = x4015 * x5092;
  const amrex::Real x14594 = -x6389;
  const amrex::Real x14595 = -x6463;
  const amrex::Real x14596 = -x6395;
  const amrex::Real x14597 = -311.994332798926 * invT - 0.97 * tc[0];
  const amrex::Real x14598 = -x14597;
  const amrex::Real x14599 = -3130.00766130536 * invT - 9.67 * tc[0] + x14598;
  const amrex::Real x14600 = 8.34905660377359e+27 * exp(x14599) * x26;
  const amrex::Real x14601 = log(
    exp(-4970.0 * invT) + 0.4675 * exp(-0.00662251655629139 * tc[1]) +
    0.5325 * exp(-0.000963391136801541 * tc[1]));
  const amrex::Real x14602 = -0.4 + x33 * log(x14600) - x503 * x14601;
  const amrex::Real x14603 = 0.75 - 0.14 * x14602 - x507 * x14601;
  const amrex::Real x14604 = pow(x14603, -2);
  const amrex::Real x14605 = pow(x14602, 2);
  const amrex::Real x14606 = 1.0 + x14605 * x14604;
  const amrex::Real x14607 = pow(10, x33 * x14601 / x14606);
  const amrex::Real x14608 = 1.0 + x14600;
  const amrex::Real x14609 = pow(x14608, -1);
  const amrex::Real x14610 = x14607 * x14609;
  const amrex::Real x14611 = -(x1614 + x553);
  const amrex::Real x14612 = -3442.00199410428 * invT - 10.64 * tc[0] + x14598;
  const amrex::Real x14613 = exp(x14611 + x14612);
  const amrex::Real x14614 = x1633 * x14613;
  const amrex::Real x14615 = x14614 * x14610;
  const amrex::Real x14616 = 3.54e+38 * x14615;
  const amrex::Real x14617 = pow(x14608, -2);
  const amrex::Real x14618 =
    -6572.00965540964 * invT - 20.31 * tc[0] - 2 * x14597;
  const amrex::Real x14619 = pow(sc[9], 2) * x14607;
  const amrex::Real x14620 = exp(x14618) * x26 * x14619;
  const amrex::Real x14621 = x14620 * x14617;
  const amrex::Real x14622 = 2.95556603773585e+66 * x14621;
  const amrex::Real x14623 = 1;
  const amrex::Real x14624 = x14623 * x14605 / pow(x14603, 3);
  const amrex::Real x14625 = x14623 * x14604 * x14602;
  const amrex::Real x14626 = x6398 * x14625 + x6400 * x14624;
  const amrex::Real x14627 = exp(x14612);
  const amrex::Real x14628 = x14627 * x14619;
  const amrex::Real x14629 = x14628 * x14609;
  const amrex::Real x14630 = 3.54e+38 * x14629;
  const amrex::Real x14631 = x14601 / pow(x14606, 2);
  const amrex::Real x14632 = x26 * x14631;
  const amrex::Real x14633 = x14632 * x14630;
  const amrex::Real x14634 = x14633 * x14626;
  const amrex::Real x14635 = exp(x14611 + x14618) * x6446 * x14607;
  const amrex::Real x14636 = x14635 * x14617;
  const amrex::Real x14637 = 2.95556603773585e+66 * x14636;
  const amrex::Real x14638 = -x14637;
  const amrex::Real x14639 = -x14630;
  const amrex::Real x14640 = 3.54e+38 * x14610;
  const amrex::Real x14641 = x914 * x14613;
  const amrex::Real x14642 = x14641 * x14640;
  const amrex::Real x14643 = x14631 * sc[16];
  const amrex::Real x14644 = x14643 * x14642;
  const amrex::Real x14645 = -x14644 * x14626;
  const amrex::Real x14646 = -(x1578 + x702);
  const amrex::Real x14647 = 131.993731440578 * invT - 0.32 * tc[0];
  const amrex::Real x14648 = -x14647;
  const amrex::Real x14649 = -3013.11042983892 * invT - 13.13 * tc[0] + x14648;
  const amrex::Real x14650 = exp(x14646 + x14649);
  const amrex::Real x14651 = -3145.1041612795 * invT - 12.81 * tc[0] + x14648;
  const amrex::Real x14652 = 3.91e+40 * exp(x14651) * x26;
  const amrex::Real x14653 = log(
    0.104 * x726 + exp(-6118.4 * invT) +
    0.896 * exp(-0.00062266500622665 * tc[1]));
  const amrex::Real x14654 = -0.4 + x33 * log(x14652) - x503 * x14653;
  const amrex::Real x14655 = pow(x14654, 2);
  const amrex::Real x14656 = 0.75 - 0.14 * x14654 - x507 * x14653;
  const amrex::Real x14657 = pow(x14656, -2);
  const amrex::Real x14658 = 1.0 + x14655 * x14657;
  const amrex::Real x14659 = pow(10, x33 * x14653 / x14658);
  const amrex::Real x14660 = 1.0 + x14652;
  const amrex::Real x14661 = x14659 / x14660;
  const amrex::Real x14662 = 3.91e+48 * x14661;
  const amrex::Real x14663 = x14662 * x14650;
  const amrex::Real x14664 = x1833 * x14663;
  const amrex::Real x14665 = x14659 / pow(x14660, 2);
  const amrex::Real x14666 = 1.52881e+89 * x14665;
  const amrex::Real x14667 =
    -6158.21459111842 * invT - 25.94 * tc[0] - 2 * x14647;
  const amrex::Real x14668 = exp(x14646 + x14667) * x1835;
  const amrex::Real x14669 = x14666 * x14668;
  const amrex::Real x14670 = 1;
  const amrex::Real x14671 = x14670 * x14654 * x14657;
  const amrex::Real x14672 = x14670 * x14655 / pow(x14656, 3);
  const amrex::Real x14673 = x1080 * x14671 + x1083 * x14672;
  const amrex::Real x14674 = x14653 / pow(x14658, 2);
  const amrex::Real x14675 = x914 * x14663;
  const amrex::Real x14676 = x14675 * sc[22];
  const amrex::Real x14677 = x14676 * x14674;
  const amrex::Real x14678 = x14673 * x14677;
  const amrex::Real x14679 = exp(x14649);
  const amrex::Real x14680 = sc[9] * sc[18];
  const amrex::Real x14681 = x14679 * x14680;
  const amrex::Real x14682 = x14662 * x14681;
  const amrex::Real x14683 = exp(x14667) * x26 * x14680;
  const amrex::Real x14684 = x14666 * x14683;
  const amrex::Real x14685 = x26 * x14682;
  const amrex::Real x14686 = x14674 * x14685;
  const amrex::Real x14687 = x14673 * x14686;
  const amrex::Real x14688 =
    x14664 - x14669 - x14678 - x14682 + x14684 + x14687;
  const amrex::Real x14689 = x10272 + x11381 + x11390 + x14594 + x14595 +
                             x14596 + x14616 + x14622 + x14634 + x14638 +
                             x14639 + x14645 + x14688 + x6406 + x6430 + x6434;
  const amrex::Real x14690 = x14592 + x14593 + x14689 - x6357;
  const amrex::Real x14691 = x6625 * x5083;
  const amrex::Real x14692 = x723 * x14691;
  const amrex::Real x14693 = sc[9] * x14692;
  const amrex::Real x14694 = x5079 / pow(x5077, 3);
  const amrex::Real x14695 = x1207 * x14694;
  const amrex::Real x14696 = x5076 * x5078;
  const amrex::Real x14697 = x1207 * x14696;
  const amrex::Real x14698 = x727 / pow(x5080, 2);
  const amrex::Real x14699 = (0.28 * x14695 + 2.0 * x14697) * x14698;
  const amrex::Real x14700 = x14693 * x14699;
  const amrex::Real x14701 = x5083 * x1986;
  const amrex::Real x14702 = x1215 * x14691;
  const amrex::Real x14703 = 4.27e+46 * x14702;
  const amrex::Real x14704 = x5081 / pow(x5082, 2);
  const amrex::Real x14705 = x6636 * x1222;
  const amrex::Real x14706 = x14705 * x14704;
  const amrex::Real x14707 = 7.29316e+85 * x14706;
  const amrex::Real x14708 = x5083 * x1413;
  const amrex::Real x14709 = x14708 * sc[19];
  const amrex::Real x14710 = x14699 * x14709;
  const amrex::Real x14711 = x1982 * x14704;
  const amrex::Real x14712 = 7.29316e+85 * x14711;
  const amrex::Real x14713 =
    x14700 + x14701 - x14703 + x14707 - x14710 - x14712;
  const amrex::Real x14714 = x14690 + x14713;
  const amrex::Real x14715 = x5072 * x3863;
  const amrex::Real x14716 = x5084 * x3863;
  const amrex::Real x14717 = -x14716;
  const amrex::Real x14718 = -x6276;
  const amrex::Real x14719 = x5086 * x3863;
  const amrex::Real x14720 = -x14719;
  const amrex::Real x14721 = x10270 + x14715 + x14717 + x14718 + x14720;
  const amrex::Real x14722 = x14714 + x14721;
  const amrex::Real x14723 = -x5059 * x3894;
  const amrex::Real x14724 = x5062 * x3894;
  const amrex::Real x14725 = x14723 + x14724 + x6354;
  const amrex::Real x14726 = x14722 + x14725;
  const amrex::Real x14727 = 3.2e+16 * x6900;
  const amrex::Real x14728 = x5092 * x3960;
  const amrex::Real x14729 = x5092 * x3961;
  const amrex::Real x14730 = x5051 * x3780;
  const amrex::Real x14731 = x4020 * x5092;
  const amrex::Real x14732 = x5062 * x3899;
  const amrex::Real x14733 = x5062 * x3898;
  const amrex::Real x14734 = x4019 * x5092;
  const amrex::Real x14735 = x5086 * x3864;
  const amrex::Real x14736 = x5049 * x3708;
  const amrex::Real x14737 = x5049 * x3709;
  const amrex::Real x14738 = x5051 * x3781;
  const amrex::Real x14739 = x5084 * x3864;
  const amrex::Real x14740 = x5055 * x3898;
  const amrex::Real x14741 = x5055 * x3899;
  const amrex::Real x14742 = x14740 - x14741;
  const amrex::Real x14743 = x5042 * x3781;
  const amrex::Real x14744 = x5042 * x3780;
  const amrex::Real x14745 =
    x10330 - x10341 + x11453 + x11454 + x14743 - x14744;
  const amrex::Real x14746 = x14713 + x6257;
  const amrex::Real x14747 = x14594 + x14595 + x14596 + x14616 + x14622 +
                             x14634 + x14638 + x14639 + x14645 + x14688 +
                             x14746 + x6406 + x6430 + x6434;
  const amrex::Real x14748 = x5072 * x3864;
  const amrex::Real x14749 = x14748 + x6915 + x5090 * x3960 - x5090 * x3961;
  const amrex::Real x14750 = x5049 * x3710;
  const amrex::Real x14751 = x5051 * x3782;
  const amrex::Real x14752 = x5092 * x3963;
  const amrex::Real x14753 = x5062 * x3901;
  const amrex::Real x14754 = x5062 * x3900;
  const amrex::Real x14755 = x5051 * x3784;
  const amrex::Real x14756 = x4021 * x5092;
  const amrex::Real x14757 = x5049 * x3711;
  const amrex::Real x14758 = x5084 * x3865;
  const amrex::Real x14759 = x5086 * x3865;
  const amrex::Real x14760 = x5092 * x3962;
  const amrex::Real x14761 = x4022 * x5092;
  const amrex::Real x14762 = x5055 * x3900;
  const amrex::Real x14763 = x5055 * x3901;
  const amrex::Real x14764 = x14762 - x14763;
  const amrex::Real x14765 = -x10385 + x10386 - x10398;
  const amrex::Real x14766 = x5042 * x3784;
  const amrex::Real x14767 = x5042 * x3782;
  const amrex::Real x14768 =
    -x10380 + x10396 + x10404 + x11495 + x11496 + x14766 - x14767;
  const amrex::Real x14769 = x5072 * x3865;
  const amrex::Real x14770 = x14769 + x5090 * x3962 - x5090 * x3963;
  const amrex::Real x14771 = x5092 * x3964;
  const amrex::Real x14772 = x5051 * x3785;
  const amrex::Real x14773 = x5092 * x3965;
  const amrex::Real x14774 = x4023 * x5092;
  const amrex::Real x14775 = x5062 * x3903;
  const amrex::Real x14776 = x5062 * x3902;
  const amrex::Real x14777 = x5084 * x3866;
  const amrex::Real x14778 = x5086 * x3866;
  const amrex::Real x14779 = x5049 * x3713;
  const amrex::Real x14780 = x5049 * x3712;
  const amrex::Real x14781 = x4024 * x5092;
  const amrex::Real x14782 = x5051 * x3786;
  const amrex::Real x14783 = x5055 * x3902;
  const amrex::Real x14784 = x5055 * x3903;
  const amrex::Real x14785 = x14783 - x14784;
  const amrex::Real x14786 = x10478 + x11537;
  const amrex::Real x14787 = x5042 * x3785;
  const amrex::Real x14788 = x5042 * x3786;
  const amrex::Real x14789 =
    x10470 - x10471 + x11558 + x11559 + x11560 - x14787 + x14788;
  const amrex::Real x14790 = x5072 * x3866;
  const amrex::Real x14791 = x14790 + x5090 * x3964 - x5090 * x3965;
  const amrex::Real x14792 = x5092 * x3967;
  const amrex::Real x14793 = x5051 * x3788;
  const amrex::Real x14794 = x5062 * x3905;
  const amrex::Real x14795 = x5062 * x3904;
  const amrex::Real x14796 = x5051 * x3787;
  const amrex::Real x14797 = x5092 * x3966;
  const amrex::Real x14798 = x5086 * x3867;
  const amrex::Real x14799 = x5049 * x3715;
  const amrex::Real x14800 = x5049 * x3714;
  const amrex::Real x14801 = x5084 * x3867;
  const amrex::Real x14802 = x4026 * x5092;
  const amrex::Real x14803 = x4025 * x5092;
  const amrex::Real x14804 = x5055 * x3904;
  const amrex::Real x14805 = x5055 * x3905;
  const amrex::Real x14806 = x14804 - x14805;
  const amrex::Real x14807 = x5042 * x3787;
  const amrex::Real x14808 = x5042 * x3788;
  const amrex::Real x14809 =
    -x10520 + x10531 + x11637 + x11669 + x11670 - x14807 + x14808;
  const amrex::Real x14810 = x5072 * x3867;
  const amrex::Real x14811 = x14810 + x5090 * x3966 - x5090 * x3967;
  const amrex::Real x14812 = x5092 * x3968;
  const amrex::Real x14813 = x5092 * x3969;
  const amrex::Real x14814 = x5051 * x3789;
  const amrex::Real x14815 = x5062 * x3907;
  const amrex::Real x14816 = x5062 * x3906;
  const amrex::Real x14817 = x5086 * x3868;
  const amrex::Real x14818 = x5049 * x3717;
  const amrex::Real x14819 = x5049 * x3716;
  const amrex::Real x14820 = x5084 * x3868;
  const amrex::Real x14821 = x4027 * x5092;
  const amrex::Real x14822 = x4028 * x5092;
  const amrex::Real x14823 = x5051 * x3790;
  const amrex::Real x14824 = x5055 * x3907;
  const amrex::Real x14825 = x5055 * x3906;
  const amrex::Real x14826 = -x14824 + x14825;
  const amrex::Real x14827 = x5042 * x3789;
  const amrex::Real x14828 = x5042 * x3790;
  const amrex::Real x14829 =
    x10553 - x10561 + x11724 + x11725 - x14827 + x14828;
  const amrex::Real x14830 = x5072 * x3868;
  const amrex::Real x14831 = x14830 + x5090 * x3968 - x5090 * x3969;
  const amrex::Real x14832 = 5.9111320754717e+66 * x14617;
  const amrex::Real x14833 = x7354 * x14625 + x7355 * x14624;
  const amrex::Real x14834 = (0.56 * x14695 + 4.0 * x14697) * x14698;
  const amrex::Real x14835 = x14693 * x14834;
  const amrex::Real x14836 = x5083 * x2493;
  const amrex::Real x14837 = 8.54e+46 * x14836;
  const amrex::Real x14838 = 8.54e+46 * x14702;
  const amrex::Real x14839 = 1.458632e+86 * x14704;
  const amrex::Real x14840 = x1982 * x14839;
  const amrex::Real x14841 = x14834 * x14709;
  const amrex::Real x14842 = x14839 * x14705;
  const amrex::Real x14843 = x14665 * x14668;
  const amrex::Real x14844 = 3.05762e+89 * x14843;
  const amrex::Real x14845 = x14661 * x14681;
  const amrex::Real x14846 = 7.82e+48 * x14845;
  const amrex::Real x14847 = x14665 * x14683;
  const amrex::Real x14848 = 3.05762e+89 * x14847;
  const amrex::Real x14849 = x1833 * x14650;
  const amrex::Real x14850 = x14661 * x14849;
  const amrex::Real x14851 = 7.82e+48 * x14850;
  const amrex::Real x14852 = x2353 * x14671 + x2354 * x14672;
  const amrex::Real x14853 = x14677 * x14852;
  const amrex::Real x14854 = x14686 * x14852;
  const amrex::Real x14855 =
    -x14844 - x14846 + x14848 + x14851 - x14853 + x14854;
  const amrex::Real x14856 =
    7.08e+38 * x14615 - 7.08e+38 * x14629 + x14835 + x14837 - x14838 - x14840 -
    x14841 + x14842 + x14855 - x7342 - x7353 - x7357 + x7360 + x7375 + x7379 +
    x14620 * x14832 + x14633 * x14833 - x14635 * x14832 - x14644 * x14833;
  const amrex::Real x14857 = x5092 * x3970;
  const amrex::Real x14858 = x5062 * x3908;
  const amrex::Real x14859 = x2508 * x14624 + x2509 * x14625;
  const amrex::Real x14860 = x5086 * x3869;
  const amrex::Real x14861 = x5049 * x3718;
  const amrex::Real x14862 = 2.562e+47 * x14836;
  const amrex::Real x14863 = (1.68 * x14695 + 12.0 * x14697) * x14698;
  const amrex::Real x14864 = x14863 * x14709;
  const amrex::Real x14865 = x14693 * x14863;
  const amrex::Real x14866 = x5084 * x3869;
  const amrex::Real x14867 = 4.375896e+86 * x14706;
  const amrex::Real x14868 = 4.375896e+86 * x14711;
  const amrex::Real x14869 = x4030 * x5092;
  const amrex::Real x14870 = 2.562e+47 * x14702;
  const amrex::Real x14871 = x5051 * x3791;
  const amrex::Real x14872 = x5051 * x3792;
  const amrex::Real x14873 = x4029 * x5092;
  const amrex::Real x14874 = x5062 * x3909;
  const amrex::Real x14875 = x5049 * x3719;
  const amrex::Real x14876 = x5092 * x3971;
  const amrex::Real x14877 = x2508 * x14672 + x2509 * x14671;
  const amrex::Real x14878 = x14677 * x14877;
  const amrex::Real x14879 = 2.346e+49 * x14850;
  const amrex::Real x14880 = 9.17286e+89 * x14843;
  const amrex::Real x14881 = 2.346e+49 * x14845;
  const amrex::Real x14882 = 9.17286e+89 * x14847;
  const amrex::Real x14883 = x14686 * x14877;
  const amrex::Real x14884 =
    -x14878 + x14879 - x14880 - x14881 + x14882 + x14883;
  const amrex::Real x14885 = x5055 * x3909;
  const amrex::Real x14886 = x5055 * x3908;
  const amrex::Real x14887 = -x14885 + x14886;
  const amrex::Real x14888 = x5042 * x3791;
  const amrex::Real x14889 = x5042 * x3792;
  const amrex::Real x14890 =
    x10596 - x10598 + x11775 + x11776 - x14888 + x14889;
  const amrex::Real x14891 = x5072 * x3869;
  const amrex::Real x14892 = x14891 + x5090 * x3970 - x5090 * x3971;
  const amrex::Real x14893 = x5051 * x3793;
  const amrex::Real x14894 = x5051 * x3794;
  const amrex::Real x14895 = x5092 * x3972;
  const amrex::Real x14896 = x5062 * x3910;
  const amrex::Real x14897 = x5049 * x3721;
  const amrex::Real x14898 = x5092 * x3973;
  const amrex::Real x14899 = x5062 * x3911;
  const amrex::Real x14900 = x5086 * x3870;
  const amrex::Real x14901 = x5084 * x3870;
  const amrex::Real x14902 = x5049 * x3720;
  const amrex::Real x14903 = x4031 * x5092;
  const amrex::Real x14904 = x4032 * x5092;
  const amrex::Real x14905 = x5055 * x3910;
  const amrex::Real x14906 = x5055 * x3911;
  const amrex::Real x14907 = x14905 - x14906;
  const amrex::Real x14908 = x5042 * x3794;
  const amrex::Real x14909 = x5042 * x3793;
  const amrex::Real x14910 =
    x10633 - x10634 + x11838 + x11839 + x14908 - x14909;
  const amrex::Real x14911 = x5072 * x3870;
  const amrex::Real x14912 = x14911 + x5090 * x3972 - x5090 * x3973;
  const amrex::Real x14913 = x14689 + x14746;
  const amrex::Real x14914 = x5092 * x3974;
  const amrex::Real x14915 = x5062 * x3913;
  const amrex::Real x14916 = x5062 * x3912;
  const amrex::Real x14917 = x5051 * x3795;
  const amrex::Real x14918 = x5092 * x3975;
  const amrex::Real x14919 = x5086 * x3871;
  const amrex::Real x14920 = x5049 * x3722;
  const amrex::Real x14921 = x5051 * x3796;
  const amrex::Real x14922 = x4034 * x5092;
  const amrex::Real x14923 = x5084 * x3871;
  const amrex::Real x14924 = x5049 * x3723;
  const amrex::Real x14925 = x4033 * x5092;
  const amrex::Real x14926 = x5055 * x3912;
  const amrex::Real x14927 = x5055 * x3913;
  const amrex::Real x14928 = x14926 - x14927;
  const amrex::Real x14929 = x5042 * x3795;
  const amrex::Real x14930 = x5042 * x3796;
  const amrex::Real x14931 =
    x10664 - x10667 + x11880 + x11881 - x14929 + x14930;
  const amrex::Real x14932 = x5072 * x3871;
  const amrex::Real x14933 = x14932 + x5090 * x3974 - x5090 * x3975;
  const amrex::Real x14934 = -17979.9314692026 * invT - 12.82 * tc[0];
  const amrex::Real x14935 = 2.68e+47 * exp(x14934);
  const amrex::Real x14936 = x14935 * sc[14];
  const amrex::Real x14937 = -x14936;
  const amrex::Real x14938 = 4.5e-07 * x5227;
  const amrex::Real x14939 = x14938 * sc[22];
  const amrex::Real x14940 = -x14939;
  const amrex::Real x14941 = x5092 * x3976;
  const amrex::Real x14942 = 11000000.0 * x6004;
  const amrex::Real x14943 = x5051 * x3798;
  const amrex::Real x14944 = x5062 * x3915;
  const amrex::Real x14945 = x5086 * x3872;
  const amrex::Real x14946 = 8480000.0 * x6383;
  const amrex::Real x14947 = 392000.0 * x1488;
  const amrex::Real x14948 = 40000000.0 * x6334 * x5060;
  const amrex::Real x14949 = x5051 * x3797;
  const amrex::Real x14950 = x5084 * x3872;
  const amrex::Real x14951 = x5049 * x3724;
  const amrex::Real x14952 = 392000.0 * x6624;
  const amrex::Real x14953 = x5049 * x3725;
  const amrex::Real x14954 = x6969 * x14627;
  const amrex::Real x14955 = x4035 * x5092;
  const amrex::Real x14956 = exp(x14565 - x1787) * sc[9];
  const amrex::Real x14957 = x5062 * x3914;
  const amrex::Real x14958 = exp(-x1731 + x4510) * sc[9];
  const amrex::Real x14959 = x4036 * x5092;
  const amrex::Real x14960 = x5092 * x3977;
  const amrex::Real x14961 = 11000000.0 * x6164;
  const amrex::Real x14962 =
    3.9e+26 * exp(-9937.0194996458 * invT - 5.22 * tc[0] - x1475);
  const amrex::Real x14963 = x14679 * x14662;
  const amrex::Real x14964 = x26 * x14963 * sc[18];
  const amrex::Real x14965 = -x14964 - x8016 - x14962 * sc[18];
  const amrex::Real x14966 = x5055 * x3915;
  const amrex::Real x14967 = 6.14 * exp(x5053);
  const amrex::Real x14968 = x14967 * sc[16];
  const amrex::Real x14969 = x5055 * x3914;
  const amrex::Real x14970 = -x14966 - x14968 + x14969;
  const amrex::Real x14971 = -2855.75457844178 * invT + 3.5 * tc[0];
  const amrex::Real x14972 = 2.2e-06 * exp(x14971);
  const amrex::Real x14973 = x14972 * sc[19];
  const amrex::Real x14974 = -x14973 - x8050;
  const amrex::Real x14975 = -23600.8616262414 * invT - 9.147 * tc[0];
  const amrex::Real x14976 = 7.8e+41 * exp(x14975 - (x1393 + x637));
  const amrex::Real x14977 = x692 * x14976;
  const amrex::Real x14978 = -x10705 + x10708 - x11930 - x14977;
  const amrex::Real x14979 = x5042 * x3798;
  const amrex::Real x14980 = 0.00332 * exp(x5040);
  const amrex::Real x14981 = x14980 * sc[11];
  const amrex::Real x14982 = x5042 * x3797;
  const amrex::Real x14983 = -x10701 + x10709 - x10715 + x11932 + x11934 +
                             x11935 + x14979 - x14981 - x14982;
  const amrex::Real x14984 = 96000000000000.0 * exp(-x1600 - x5089);
  const amrex::Real x14985 = x5072 * x3872;
  const amrex::Real x14986 = 0.227 * exp(x5070);
  const amrex::Real x14987 = x14986 * sc[15];
  const amrex::Real x14988 =
    x14985 - x14987 - x8053 - x1598 * x14984 + x5090 * x3976 - x5090 * x3977;
  const amrex::Real x14989 = 4.5e-07 * exp(x4484 - (x10499 + x170));
  const amrex::Real x14990 = x14989 * sc[21];
  const amrex::Real x14991 = 2.2e-06 * exp(x14971 - (x1402 + x169 + x59));
  const amrex::Real x14992 = x14991 * sc[18];
  const amrex::Real x14993 = 11000000.0 * x1588;
  const amrex::Real x14994 = x14993 * sc[19];
  const amrex::Real x14995 = x5092 * x3978;
  const amrex::Real x14996 = x5092 * x3979;
  const amrex::Real x14997 = x5051 * x3799;
  const amrex::Real x14998 = x5051 * x3800;
  const amrex::Real x14999 = x6392 * x14566;
  const amrex::Real x15000 = 392000.0 * x1431;
  const amrex::Real x15001 = x15000 * sc[14];
  const amrex::Real x15002 = x5062 * x3917;
  const amrex::Real x15003 = x5062 * x3916;
  const amrex::Real x15004 = x5086 * x3873;
  const amrex::Real x15005 = x5084 * x3873;
  const amrex::Real x15006 = 8480000.0 * x1691;
  const amrex::Real x15007 = x15006 * sc[12];
  const amrex::Real x15008 = x5049 * x3726;
  const amrex::Real x15009 = x5049 * x3727;
  const amrex::Real x15010 = 11000000.0 * x1579;
  const amrex::Real x15011 = x15010 * sc[22];
  const amrex::Real x15012 = x4037 * x5092;
  const amrex::Real x15013 = x4038 * x5092;
  const amrex::Real x15014 = x6334 * x5054;
  const amrex::Real x15015 = x5055 * x3916;
  const amrex::Real x15016 = x5055 * x3917;
  const amrex::Real x15017 = x15014 + x15015 - x15016;
  const amrex::Real x15018 = x5042 * x3800;
  const amrex::Real x15019 = x5042 * x3799;
  const amrex::Real x15020 = x6383 * x5041;
  const amrex::Real x15021 =
    x10741 - x10742 + x11978 + x11979 + x15018 - x15019 + x15020;
  const amrex::Real x15022 = x6625 * x5071;
  const amrex::Real x15023 = x5072 * x3873;
  const amrex::Real x15024 = x15022 + x15023 + x5090 * x3978 - x5090 * x3979;
  const amrex::Real x15025 = x10755 + x12009 + x12010 + x14856;
  const amrex::Real x15026 = x5092 * x3980;
  const amrex::Real x15027 = x5092 * x3981;
  const amrex::Real x15028 = x5051 * x3802;
  const amrex::Real x15029 = x5049 * x3728;
  const amrex::Real x15030 = x5086 * x3874;
  const amrex::Real x15031 = x5049 * x3729;
  const amrex::Real x15032 = x4039 * x5092;
  const amrex::Real x15033 = x5062 * x3918;
  const amrex::Real x15034 = x5062 * x3919;
  const amrex::Real x15035 = x5084 * x3874;
  const amrex::Real x15036 = x5051 * x3801;
  const amrex::Real x15037 = x5055 * x3918;
  const amrex::Real x15038 = x5055 * x3919;
  const amrex::Real x15039 = x15037 - x15038;
  const amrex::Real x15040 = x5072 * x3874;
  const amrex::Real x15041 = x15040 + x5090 * x3980 - x5090 * x3981;
  const amrex::Real x15042 = x5042 * x3801;
  const amrex::Real x15043 = x5042 * x3802;
  const amrex::Real x15044 = sc[9] * x14980;
  const amrex::Real x15045 =
    -x10771 - x10772 + x10780 - x15042 + x15043 - x15044;
  const amrex::Real x15046 = x5092 * x3983;
  const amrex::Real x15047 = x15006 * sc[10];
  const amrex::Real x15048 = x5051 * x3803;
  const amrex::Real x15049 = x5051 * x3804;
  const amrex::Real x15050 = 4.43334905660377e+66 * x14636;
  const amrex::Real x15051 = x2886 * x14625 + x2887 * x14624;
  const amrex::Real x15052 = 4.43334905660377e+66 * x14621;
  const amrex::Real x15053 = x5049 * x3731;
  const amrex::Real x15054 = 1.093974e+86 * x14704;
  const amrex::Real x15055 = x14705 * x15054;
  const amrex::Real x15056 = x5084 * x3875;
  const amrex::Real x15057 = x5062 * x3920;
  const amrex::Real x15058 = x5049 * x3730;
  const amrex::Real x15059 = x5092 * x3982;
  const amrex::Real x15060 = x4040 * x5092;
  const amrex::Real x15061 = 5.31e+38 * x14629;
  const amrex::Real x15062 = 6.405e+46 * x14702;
  const amrex::Real x15063 = x1982 * x15054;
  const amrex::Real x15064 = x5062 * x3921;
  const amrex::Real x15065 = x5086 * x3875;
  const amrex::Real x15066 = x14698 * (0.42 * x14695 + x2943 * x14696);
  const amrex::Real x15067 = x14693 * x15066;
  const amrex::Real x15068 = 6.405e+46 * x14836;
  const amrex::Real x15069 = x4041 * x5092;
  const amrex::Real x15070 = x14709 * x15066;
  const amrex::Real x15071 = 5.31e+38 * x14615;
  const amrex::Real x15072 = x2886 * x14671 + x2887 * x14672;
  const amrex::Real x15073 = x14686 * x15072;
  const amrex::Real x15074 = 5.865e+48 * x14850;
  const amrex::Real x15075 = 2.293215e+89 * x14665;
  const amrex::Real x15076 = x14668 * x15075;
  const amrex::Real x15077 = 5.865e+48 * x14845;
  const amrex::Real x15078 = x14683 * x15075;
  const amrex::Real x15079 = x14677 * x15072;
  const amrex::Real x15080 =
    x15073 + x15074 - x15076 - x15077 + x15078 - x15079;
  const amrex::Real x15081 = x5055 * x3921;
  const amrex::Real x15082 = x5055 * x3920;
  const amrex::Real x15083 = -x15081 + x15082;
  const amrex::Real x15084 = x5042 * x3804;
  const amrex::Real x15085 = x5042 * x3803;
  const amrex::Real x15086 =
    x10807 - x10813 + x12075 + x12076 + x15084 - x15085;
  const amrex::Real x15087 = x1640 * x14976;
  const amrex::Real x15088 = -x10810 + x10812 - x12072 - x15087;
  const amrex::Real x15089 = x5072 * x3875;
  const amrex::Real x15090 = x15089 + x5090 * x3982 - x5090 * x3983;
  const amrex::Real x15091 = x5051 * x3805;
  const amrex::Real x15092 = x5051 * x3806;
  const amrex::Real x15093 = x5092 * x3985;
  const amrex::Real x15094 = x5062 * x3923;
  const amrex::Real x15095 = x4042 * x5092;
  const amrex::Real x15096 = x5049 * x3733;
  const amrex::Real x15097 = x5086 * x3876;
  const amrex::Real x15098 = x5049 * x3732;
  const amrex::Real x15099 = x5092 * x3984;
  const amrex::Real x15100 = x5062 * x3922;
  const amrex::Real x15101 = x4043 * x5092;
  const amrex::Real x15102 = x5084 * x3876;
  const amrex::Real x15103 = x5055 * x3922;
  const amrex::Real x15104 = x5055 * x3923;
  const amrex::Real x15105 = x15103 - x15104;
  const amrex::Real x15106 = x5042 * x3805;
  const amrex::Real x15107 = x5042 * x3806;
  const amrex::Real x15108 =
    x10855 - x10857 + x12121 + x12122 - x15106 + x15107;
  const amrex::Real x15109 = x5072 * x3876;
  const amrex::Real x15110 = x15109 + x5090 * x3984 - x5090 * x3985;
  const amrex::Real x15111 = sc[9] * x14935;
  const amrex::Real x15112 = -x15111;
  const amrex::Real x15113 = x5072 * x3878;
  const amrex::Real x15114 = x5092 * x3986;
  const amrex::Real x15115 = -x15114;
  const amrex::Real x15116 = x4044 * x5092;
  const amrex::Real x15117 = -x15116;
  const amrex::Real x15118 = x5051 * x3808;
  const amrex::Real x15119 = x5051 * x3807;
  const amrex::Real x15120 = x5086 * x3878;
  const amrex::Real x15121 = x5049 * x3734;
  const amrex::Real x15122 = x5084 * x3878;
  const amrex::Real x15123 = x15000 * sc[10];
  const amrex::Real x15124 = x5049 * x3735;
  const amrex::Real x15125 = x10886 + x12161;
  const amrex::Real x15126 = x5042 * x3808;
  const amrex::Real x15127 = x5042 * x3807;
  const amrex::Real x15128 = x10894 + x14585;
  const amrex::Real x15129 = x15126 - x15127 + x15128;
  const amrex::Real x15130 = x14588 + x5090 * x3986;
  const amrex::Real x15131 = x5062 * x3924;
  const amrex::Real x15132 = x5055 * x3924;
  const amrex::Real x15133 = x14580 + x15132;
  const amrex::Real x15134 = x12177 - x15131 + x15133 - x8641 + x5059 * x3924;
  const amrex::Real x15135 = x5083 * x3060;
  const amrex::Real x15136 = x14698 * (6.0 * x14697 + x3038 * x14694);
  const amrex::Real x15137 = x14693 * x15136;
  const amrex::Real x15138 = x14709 * x15136;
  const amrex::Real x15139 = 2.187948e+86 * x14706;
  const amrex::Real x15140 = 1.281e+47 * x14702;
  const amrex::Real x15141 = 2.187948e+86 * x14711;
  const amrex::Real x15142 =
    x15135 + x15137 - x15138 + x15139 - x15140 - x15141;
  const amrex::Real x15143 = x5092 * x3988;
  const amrex::Real x15144 = x5092 * x3989;
  const amrex::Real x15145 = x5051 * x3809;
  const amrex::Real x15146 = x5051 * x3810;
  const amrex::Real x15147 = x5062 * x3927;
  const amrex::Real x15148 = x5062 * x3926;
  const amrex::Real x15149 = x5086 * x3879;
  const amrex::Real x15150 = x4046 * x5092;
  const amrex::Real x15151 = x5049 * x3736;
  const amrex::Real x15152 = x5084 * x3879;
  const amrex::Real x15153 = x5049 * x3737;
  const amrex::Real x15154 = x4047 * x5092;
  const amrex::Real x15155 = x5055 * x3926;
  const amrex::Real x15156 = x5055 * x3927;
  const amrex::Real x15157 = x15155 - x15156;
  const amrex::Real x15158 = x5042 * x3809;
  const amrex::Real x15159 = x5042 * x3810;
  const amrex::Real x15160 =
    x10917 - x10922 + x12202 + x12203 - x15158 + x15159;
  const amrex::Real x15161 = x5072 * x3879;
  const amrex::Real x15162 = sc[9] * x14986;
  const amrex::Real x15163 =
    x15161 - x15162 - x8760 - x1640 * x14984 + x5090 * x3988 - x5090 * x3989;
  const amrex::Real x15164 = x5051 * x3812;
  const amrex::Real x15165 = x5051 * x3811;
  const amrex::Real x15166 = x5062 * x3929;
  const amrex::Real x15167 = x5092 * x3991;
  const amrex::Real x15168 = x5062 * x3928;
  const amrex::Real x15169 = 8.86669811320755e+66 * x14636;
  const amrex::Real x15170 = x3139 * x14624 + x3140 * x14625;
  const amrex::Real x15171 = x5049 * x3738;
  const amrex::Real x15172 = x5048 * x14314;
  const amrex::Real x15173 = x5049 * x3739;
  const amrex::Real x15174 = x5086 * x3880;
  const amrex::Real x15175 = x5084 * x3880;
  const amrex::Real x15176 = 1.062e+39 * x14629;
  const amrex::Real x15177 = x4048 * x5092;
  const amrex::Real x15178 = 8.86669811320755e+66 * x14621;
  const amrex::Real x15179 = x4049 * x5092;
  const amrex::Real x15180 = x5092 * x3990;
  const amrex::Real x15181 = 1.062e+39 * x14615;
  const amrex::Real x15182 = (x3139 * x14672 + x3140 * x14671) * x14674;
  const amrex::Real x15183 = x14685 * x15182;
  const amrex::Real x15184 = 1.173e+49 * x14661;
  const amrex::Real x15185 = x14849 * x15184;
  const amrex::Real x15186 = 4.58643e+89 * x14843;
  const amrex::Real x15187 = x14681 * x15184;
  const amrex::Real x15188 = 4.58643e+89 * x14847;
  const amrex::Real x15189 = x14676 * x15182;
  const amrex::Real x15190 =
    x15183 + x15185 - x15186 - x15187 + x15188 - x15189;
  const amrex::Real x15191 = x5055 * x3928;
  const amrex::Real x15192 = sc[9] * x14967;
  const amrex::Real x15193 = x5055 * x3929;
  const amrex::Real x15194 = x15191 - x15192 - x15193;
  const amrex::Real x15195 = x5042 * x3812;
  const amrex::Real x15196 = x5042 * x3811;
  const amrex::Real x15197 =
    -x10951 + x10953 + x12241 + x12242 + x15195 - x15196;
  const amrex::Real x15198 = x5072 * x3880;
  const amrex::Real x15199 = x15198 + x5090 * x3990 - x5090 * x3991;
  const amrex::Real x15200 = x5051 * x3813;
  const amrex::Real x15201 = x5049 * x3740;
  const amrex::Real x15202 = x5084 * x3881;
  const amrex::Real x15203 = x5086 * x3881;
  const amrex::Real x15204 = 7.8e+41 * exp(x14975);
  const amrex::Real x15205 = x10974 + x15204;
  const amrex::Real x15206 = x5042 * x3813;
  const amrex::Real x15207 = x10894 + x15206;
  const amrex::Real x15208 = x5072 * x3881;
  const amrex::Real x15209 = x15130 + x15208;
  const amrex::Real x15210 =
    x14714 + x14723 + x14724 + x15115 + x15117 + x5657 + x6354 + x8653;
  const amrex::Real x15211 = x15134 + x15210;
  const amrex::Real x15212 = x10318 + x14569 + x14570 + x14572 + x14573 +
                             x14586 + x14590 + x6260 + x6342 + x6343;
  const amrex::Real x15213 = x11444 + x15212;
  const amrex::Real x15214 = x15211 + x15213;
  const amrex::Real x15215 = 2.68e+47 * exp(x14934 - (x1402 + x710)) * refC;
  const amrex::Real x15216 = x14991 * sc[10];
  const amrex::Real x15217 = x5051 * x3814;
  const amrex::Real x15218 = x5051 * x3815;
  const amrex::Real x15219 = x5049 * x3742;
  const amrex::Real x15220 = x5086 * x3882;
  const amrex::Real x15221 = x5049 * x3741;
  const amrex::Real x15222 = x5084 * x3882;
  const amrex::Real x15223 = x5062 * x3930;
  const amrex::Real x15224 = x5055 * x3930;
  const amrex::Real x15225 = x14580 + x15224;
  const amrex::Real x15226 = x6969 * x14963;
  const amrex::Real x15227 = -x15226 - x9015 - sc[9] * x14962;
  const amrex::Real x15228 = x5042 * x3815;
  const amrex::Real x15229 = x5042 * x3814;
  const amrex::Real x15230 = x10993 + x12300 + x14585 + x15228 - x15229;
  const amrex::Real x15231 = x5072 * x3882;
  const amrex::Real x15232 = x15130 + x15231;
  const amrex::Real x15233 = x5092 * x3993;
  const amrex::Real x15234 = x5051 * x3817;
  const amrex::Real x15235 = x5062 * x3932;
  const amrex::Real x15236 = x5062 * x3931;
  const amrex::Real x15237 = x5092 * x3992;
  const amrex::Real x15238 = x5086 * x3883;
  const amrex::Real x15239 = x5084 * x3883;
  const amrex::Real x15240 = x5049 * x3743;
  const amrex::Real x15241 = x5049 * x3744;
  const amrex::Real x15242 = x5051 * x3816;
  const amrex::Real x15243 = x4051 * x5092;
  const amrex::Real x15244 = x14993 * sc[10];
  const amrex::Real x15245 = x4050 * x5092;
  const amrex::Real x15246 = x5055 * x3932;
  const amrex::Real x15247 = x5055 * x3931;
  const amrex::Real x15248 = -x15246 + x15247;
  const amrex::Real x15249 = sc[9] * x14972;
  const amrex::Real x15250 = -x15249 - x9138;
  const amrex::Real x15251 = x5042 * x3816;
  const amrex::Real x15252 = x5042 * x3817;
  const amrex::Real x15253 =
    -x11012 + x11016 + x12333 + x12334 - x15251 + x15252;
  const amrex::Real x15254 = x5072 * x3883;
  const amrex::Real x15255 = x15254 + x9144 + x5090 * x3992 - x5090 * x3993;
  const amrex::Real x15256 = x5051 * x3818;
  const amrex::Real x15257 = x5086 * x3884;
  const amrex::Real x15258 = x5084 * x3884;
  const amrex::Real x15259 = x5049 * x3745;
  const amrex::Real x15260 = x5042 * x3818;
  const amrex::Real x15261 = x10894 + x15260;
  const amrex::Real x15262 = x5072 * x3884;
  const amrex::Real x15263 = x15130 + x15262;
  const amrex::Real x15264 = x14989 * sc[10];
  const amrex::Real x15265 = x5072 * x3885;
  const amrex::Real x15266 = x5051 * x3820;
  const amrex::Real x15267 = x5051 * x3819;
  const amrex::Real x15268 = x5049 * x3746;
  const amrex::Real x15269 = x5086 * x3885;
  const amrex::Real x15270 = x5049 * x3747;
  const amrex::Real x15271 = x5084 * x3885;
  const amrex::Real x15272 = x5042 * x3820;
  const amrex::Real x15273 = x5042 * x3819;
  const amrex::Real x15274 = x15128 + x15272 - x15273;
  const amrex::Real x15275 = x15211 + x6257;
  const amrex::Real x15276 = 3.2e+16 * x9334;
  const amrex::Real x15277 = sc[9] * x14938;
  const amrex::Real x15278 = -x15277;
  const amrex::Real x15279 = x5092 * x3994;
  const amrex::Real x15280 = x5092 * x3995;
  const amrex::Real x15281 = x5062 * x3934;
  const amrex::Real x15282 = x5062 * x3933;
  const amrex::Real x15283 = x5051 * x3821;
  const amrex::Real x15284 = x15010 * sc[10];
  const amrex::Real x15285 = x5049 * x3748;
  const amrex::Real x15286 = x5051 * x3822;
  const amrex::Real x15287 = x5084 * x3886;
  const amrex::Real x15288 = x5049 * x3749;
  const amrex::Real x15289 = x4053 * x5092;
  const amrex::Real x15290 = x5086 * x3886;
  const amrex::Real x15291 = x4052 * x5092;
  const amrex::Real x15292 = x5055 * x3934;
  const amrex::Real x15293 = x5055 * x3933;
  const amrex::Real x15294 = -x15292 + x15293;
  const amrex::Real x15295 = x5042 * x3821;
  const amrex::Real x15296 = x5042 * x3822;
  const amrex::Real x15297 =
    -x11076 + x11084 + x12412 + x12413 - x15295 + x15296;
  const amrex::Real x15298 = x5072 * x3886;
  const amrex::Real x15299 = x15298 + x5090 * x3994 - x5090 * x3995;
  const amrex::Real x15300 = x5051 * x3823;
  const amrex::Real x15301 = x5051 * x3824;
  const amrex::Real x15302 = x5092 * x3997;
  const amrex::Real x15303 = x5062 * x3936;
  const amrex::Real x15304 = x5062 * x3935;
  const amrex::Real x15305 = x5092 * x3996;
  const amrex::Real x15306 = x5049 * x3751;
  const amrex::Real x15307 = x5086 * x3887;
  const amrex::Real x15308 = x5049 * x3750;
  const amrex::Real x15309 = x5084 * x3887;
  const amrex::Real x15310 = x4055 * x5092;
  const amrex::Real x15311 = x4054 * x5092;
  const amrex::Real x15312 = x5055 * x3936;
  const amrex::Real x15313 = x5055 * x3935;
  const amrex::Real x15314 = -x15312 + x15313;
  const amrex::Real x15315 = x5042 * x3824;
  const amrex::Real x15316 = x5042 * x3823;
  const amrex::Real x15317 =
    -x11114 + x11115 + x12451 + x12452 + x15315 - x15316;
  const amrex::Real x15318 = x5072 * x3887;
  const amrex::Real x15319 = x15318 + x5090 * x3996 - x5090 * x3997;
  const amrex::Real x15320 = x5051 * x3825;
  const amrex::Real x15321 = x5062 * x3938;
  const amrex::Real x15322 = x5062 * x3937;
  const amrex::Real x15323 = x5049 * x3753;
  const amrex::Real x15324 = x5049 * x3752;
  const amrex::Real x15325 = x5092 * x3998;
  const amrex::Real x15326 = x5051 * x3826;
  const amrex::Real x15327 = x4056 * x5092;
  const amrex::Real x15328 = x4057 * x5092;
  const amrex::Real x15329 = x5092 * x3999;
  const amrex::Real x15330 = x5055 * x3937;
  const amrex::Real x15331 = x5055 * x3938;
  const amrex::Real x15332 = x15330 - x15331;
  const amrex::Real x15333 = x5042 * x3826;
  const amrex::Real x15334 = x5042 * x3825;
  const amrex::Real x15335 = x11132 - x11133 + x15333 - x15334;
  const amrex::Real x15336 = x5090 * x3998 - x5090 * x3999;
  const amrex::Real x15337 = x4000 * x5092;
  const amrex::Real x15338 = x4001 * x5092;
  const amrex::Real x15339 = x5051 * x3827;
  const amrex::Real x15340 = x5062 * x3939;
  const amrex::Real x15341 = x5062 * x3940;
  const amrex::Real x15342 = x5049 * x3754;
  const amrex::Real x15343 = x4059 * x5092;
  const amrex::Real x15344 = x5049 * x3755;
  const amrex::Real x15345 = x5051 * x3828;
  const amrex::Real x15346 = x4058 * x5092;
  const amrex::Real x15347 = x5055 * x3939;
  const amrex::Real x15348 = x5055 * x3940;
  const amrex::Real x15349 = x15347 - x15348;
  const amrex::Real x15350 = x5042 * x3827;
  const amrex::Real x15351 = x5042 * x3828;
  const amrex::Real x15352 =
    x11158 - x11159 + x12518 + x12519 - x15350 + x15351;
  const amrex::Real x15353 = x4000 * x5090 - x4001 * x5090;
  const amrex::Real x15354 = x14721 + x14913;
  const amrex::Real x15355 = x4002 * x5092;
  const amrex::Real x15356 = x4003 * x5092;
  const amrex::Real x15357 = x5051 * x3829;
  const amrex::Real x15358 = x5062 * x3941;
  const amrex::Real x15359 = x5051 * x3830;
  const amrex::Real x15360 = x5062 * x3942;
  const amrex::Real x15361 = x5049 * x3757;
  const amrex::Real x15362 = x5049 * x3756;
  const amrex::Real x15363 = x4061 * x5092;
  const amrex::Real x15364 = x4060 * x5092;
  const amrex::Real x15365 = x5055 * x3941;
  const amrex::Real x15366 = x5055 * x3942;
  const amrex::Real x15367 = x15365 - x15366;
  const amrex::Real x15368 = x5042 * x3829;
  const amrex::Real x15369 = x5042 * x3830;
  const amrex::Real x15370 =
    -x11182 + x11188 + x12552 + x12553 - x15368 + x15369;
  const amrex::Real x15371 = x4002 * x5090 - x4003 * x5090;
  const amrex::Real x15372 = x5051 * x3832;
  const amrex::Real x15373 = x4004 * x5092;
  const amrex::Real x15374 = x5051 * x3831;
  const amrex::Real x15375 = x4005 * x5092;
  const amrex::Real x15376 = x5049 * x3759;
  const amrex::Real x15377 = x5062 * x3943;
  const amrex::Real x15378 = x5049 * x3758;
  const amrex::Real x15379 = x5062 * x3944;
  const amrex::Real x15380 = x4062 * x5092;
  const amrex::Real x15381 = x4063 * x5092;
  const amrex::Real x15382 = x5055 * x3944;
  const amrex::Real x15383 = x5055 * x3943;
  const amrex::Real x15384 = -x15382 + x15383;
  const amrex::Real x15385 = x5042 * x3832;
  const amrex::Real x15386 = x5042 * x3831;
  const amrex::Real x15387 =
    x11212 - x11213 + x12583 + x12584 + x15385 - x15386;
  const amrex::Real x15388 = x4004 * x5090 - x4005 * x5090;
  const amrex::Real x15389 = x4006 * x5092;
  const amrex::Real x15390 = x5051 * x3833;
  const amrex::Real x15391 = x5051 * x3834;
  const amrex::Real x15392 = x4007 * x5092;
  const amrex::Real x15393 = x5062 * x3946;
  const amrex::Real x15394 = x5049 * x3760;
  const amrex::Real x15395 = x4064 * x5092;
  const amrex::Real x15396 = x5062 * x3945;
  const amrex::Real x15397 = x5049 * x3761;
  const amrex::Real x15398 = x5055 * x3945;
  const amrex::Real x15399 = x5055 * x3946;
  const amrex::Real x15400 = x15398 - x15399;
  const amrex::Real x15401 = x5042 * x3833;
  const amrex::Real x15402 = x5042 * x3834;
  const amrex::Real x15403 = -x11233 + x11234 - x15401 + x15402;
  const amrex::Real x15404 = x4006 * x5090 - x4007 * x5090;
  const amrex::Real x15405 = x14593 + x15354;
  const amrex::Real x15406 = x4009 * x5092;
  const amrex::Real x15407 = x5051 * x3836;
  const amrex::Real x15408 = x4008 * x5092;
  const amrex::Real x15409 = x5062 * x3947;
  const amrex::Real x15410 = x5049 * x3763;
  const amrex::Real x15411 = x5049 * x3762;
  const amrex::Real x15412 = x4065 * x5092;
  const amrex::Real x15413 = x5051 * x3835;
  const amrex::Real x15414 = x5062 * x3948;
  const amrex::Real x15415 = x5055 * x3948;
  const amrex::Real x15416 = x5055 * x3947;
  const amrex::Real x15417 = -x15415 + x15416;
  const amrex::Real x15418 = x5042 * x3835;
  const amrex::Real x15419 = x5042 * x3836;
  const amrex::Real x15420 =
    x11254 - x11259 + x12645 + x12646 - x15418 + x15419;
  const amrex::Real x15421 = x4008 * x5090 - x4009 * x5090;
  const amrex::Real x15422 = x5051 * x3837;
  const amrex::Real x15423 = x5051 * x3838;
  const amrex::Real x15424 = x4010 * x5092;
  const amrex::Real x15425 = x5049 * x3765;
  const amrex::Real x15426 = x5049 * x3764;
  const amrex::Real x15427 = x5062 * x3949;
  const amrex::Real x15428 = x4066 * x5092;
  const amrex::Real x15429 = x5062 * x3950;
  const amrex::Real x15430 = x5055 * x3949;
  const amrex::Real x15431 = x5055 * x3950;
  const amrex::Real x15432 = x15430 - x15431;
  const amrex::Real x15433 = x5042 * x3837;
  const amrex::Real x15434 = x5042 * x3838;
  const amrex::Real x15435 =
    -x11276 + x11281 + x12674 + x12675 - x15433 + x15434;
  const amrex::Real x15436 = x14588 + x4010 * x5090;
  const amrex::Real x15437 = x5051 * x3839;
  const amrex::Real x15438 = x5049 * x3766;
  const amrex::Real x15439 = x4067 * x5092;
  const amrex::Real x15440 = x4011 * x5092;
  const amrex::Real x15441 = x5062 * x3951;
  const amrex::Real x15442 = x5055 * x3951;
  const amrex::Real x15443 = x14580 + x15442;
  const amrex::Real x15444 = x5042 * x3839;
  const amrex::Real x15445 = x11298 + x12700 + x15444;
  const amrex::Real x15446 = x14588 + x4011 * x5090;
  const amrex::Real x15447 = x15213 + x6258;
  const amrex::Real x15448 = x4012 * x5092;
  const amrex::Real x15449 = x5051 * x3840;
  const amrex::Real x15450 = x5062 * x3952;
  const amrex::Real x15451 = x5049 * x3767;
  const amrex::Real x15452 = x4068 * x5092;
  const amrex::Real x15453 = x5055 * x3952;
  const amrex::Real x15454 = x14580 + x15453;
  const amrex::Real x15455 = x5042 * x3840;
  const amrex::Real x15456 = x11315 + x12720 + x15455;
  const amrex::Real x15457 = x14588 + x4012 * x5090;
  const amrex::Real x15458 = x5051 * x3841;
  const amrex::Real x15459 = x5062 * x3953;
  const amrex::Real x15460 = x5049 * x3768;
  const amrex::Real x15461 = x5055 * x3953;
  const amrex::Real x15462 = x14580 + x15461;
  const amrex::Real x15463 = x5042 * x3841;
  const amrex::Real x15464 = x11326 + x12738 + x15463;
  const amrex::Real x15465 = x14715 + x15130;
  const amrex::Real x15466 = x10270 + x14717 + x14718 + x14720 + x15465;
  const amrex::Real x15467 = x5051 * x3842;
  const amrex::Real x15468 = x5049 * x3769;
  const amrex::Real x15469 = x5049 * x3770;
  const amrex::Real x15470 = x5042 * x3842;
  const amrex::Real x15471 = x10894 + x15470;
  const amrex::Real x15472 = 2.46 * x14567;
  const amrex::Real x15473 = -x14590;
  const amrex::Real x15474 = x5096 * x3706;
  const amrex::Real x15475 = x1814 * x15472;
  const amrex::Real x15476 = x6230 - x6240 + x6246 - x6249 + x6254 - x6256;
  const amrex::Real x15477 = -x14715 + x14719 + x15476;
  const amrex::Real x15478 = x5234 + x5235;
  const amrex::Real x15479 = x15477 + x15478;
  const amrex::Real x15480 = -x14593;
  const amrex::Real x15481 = -x14592;
  const amrex::Real x15482 = x15480 + x15481;
  const amrex::Real x15483 = x15479 + x15482;
  const amrex::Real x15484 = x14584 + x15474 + x15475 + x15483;
  const amrex::Real x15485 = x14579 + x15484;
  const amrex::Real x15486 = x15473 + x15485;
  const amrex::Real x15487 = x15476 + x15478;
  const amrex::Real x15488 = x14731 - x14734;
  const amrex::Real x15489 = -x14730 + x14738;
  const amrex::Real x15490 = x14728 - x14729;
  const amrex::Real x15491 = -x14756 + x14761;
  const amrex::Real x15492 = -x14752 + x14760;
  const amrex::Real x15493 = -x14751 + x14755;
  const amrex::Real x15494 = -x14774 + x14781;
  const amrex::Real x15495 = x14771 - x14773;
  const amrex::Real x15496 = -x14772 + x14782;
  const amrex::Real x15497 = x14802 - x14803;
  const amrex::Real x15498 = -x14792 + x14797;
  const amrex::Real x15499 = x14793 - x14796;
  const amrex::Real x15500 = -x7547 - x7548 + x7549 - x7552 + x7553 + x7554;
  const amrex::Real x15501 = -x14821 + x14822;
  const amrex::Real x15502 = x14812 - x14813;
  const amrex::Real x15503 = -x14814 + x14823;
  const amrex::Real x15504 = x14869 - x14873;
  const amrex::Real x15505 = x14857 - x14876;
  const amrex::Real x15506 = -x14871 + x14872;
  const amrex::Real x15507 = -x14903 + x14904;
  const amrex::Real x15508 = x14895 - x14898;
  const amrex::Real x15509 = -x14893 + x14894;
  const amrex::Real x15510 = x14922 - x14925;
  const amrex::Real x15511 = x14914 - x14918;
  const amrex::Real x15512 = -x14917 + x14921;
  const amrex::Real x15513 = x14945 - x14947 - x14952;
  const amrex::Real x15514 = -x14955 + x14959 + x14961;
  const amrex::Real x15515 = x14941 + x14942 - x14960;
  const amrex::Real x15516 = x14943 + x14946 - x14949;
  const amrex::Real x15517 = -x14990;
  const amrex::Real x15518 = -x14992;
  const amrex::Real x15519 = -x15001 + x15004;
  const amrex::Real x15520 = -x15011 - x15012 + x15013;
  const amrex::Real x15521 = -x14994 + x14995 - x14996;
  const amrex::Real x15522 = -x14997 + x14998 - x15007;
  const amrex::Real x15523 = -x5655;
  const amrex::Real x15524 = x15523 - x5654;
  const amrex::Real x15525 = x15487 + x15524;
  const amrex::Real x15526 = x15032 + x15480;
  const amrex::Real x15527 = x15026 - x15027;
  const amrex::Real x15528 = x15028 - x15036;
  const amrex::Real x15529 = -x15060 + x15069;
  const amrex::Real x15530 = -x15046 + x15059;
  const amrex::Real x15531 = -x15047 - x15048 + x15049;
  const amrex::Real x15532 = -x15095 + x15101;
  const amrex::Real x15533 = -x15093 + x15099;
  const amrex::Real x15534 = -x15091 + x15092;
  const amrex::Real x15535 = -x15132;
  const amrex::Real x15536 = x14579 + x15114 + x15116 + x15524;
  const amrex::Real x15537 = x15482 + x15487;
  const amrex::Real x15538 = x15536 + x15537;
  const amrex::Real x15539 = x15535 + x15538;
  const amrex::Real x15540 = x15120 - x15123;
  const amrex::Real x15541 = x15118 - x15119;
  const amrex::Real x15542 = -x15150 + x15154;
  const amrex::Real x15543 = x15143 - x15144;
  const amrex::Real x15544 = -x15145 + x15146;
  const amrex::Real x15545 = -x15177 + x15179;
  const amrex::Real x15546 = -x15167 + x15180;
  const amrex::Real x15547 = x15164 - x15165;
  const amrex::Real x15548 = x14584 + x15535 + x15536;
  const amrex::Real x15549 = x15474 + x15475 + x15537 + x15548;
  const amrex::Real x15550 = x15200 + x15473;
  const amrex::Real x15551 = -x15216;
  const amrex::Real x15552 = -x15217 + x15218;
  const amrex::Real x15553 = x15243 - x15245;
  const amrex::Real x15554 = x15234 - x15242;
  const amrex::Real x15555 = -x15233 + x15237 - x15244;
  const amrex::Real x15556 = x15256 + x15473;
  const amrex::Real x15557 = -x15264;
  const amrex::Real x15558 = x15266 - x15267;
  const amrex::Real x15559 = x15279 - x15280;
  const amrex::Real x15560 = -x15283 + x15286;
  const amrex::Real x15561 = -x15284 + x15289 - x15291;
  const amrex::Real x15562 = x15310 - x15311;
  const amrex::Real x15563 = -x15302 + x15305;
  const amrex::Real x15564 = -x15300 + x15301;
  const amrex::Real x15565 = -x15327 + x15328;
  const amrex::Real x15566 = x15325 - x15329;
  const amrex::Real x15567 = -x15320 + x15326;
  const amrex::Real x15568 = x15343 - x15346;
  const amrex::Real x15569 = x15337 - x15338;
  const amrex::Real x15570 = -x15339 + x15345;
  const amrex::Real x15571 = x15363 - x15364;
  const amrex::Real x15572 = x15355 - x15356;
  const amrex::Real x15573 = -x15357 + x15359;
  const amrex::Real x15574 = -x15380 + x15381;
  const amrex::Real x15575 = x15373 - x15375;
  const amrex::Real x15576 = x15372 - x15374;
  const amrex::Real x15577 = x15479 + x15480;
  const amrex::Real x15578 = x15389 - x15392;
  const amrex::Real x15579 = -x15390 + x15391;
  const amrex::Real x15580 = -x15406 + x15408;
  const amrex::Real x15581 = x15407 - x15413;
  const amrex::Real x15582 = -x15422 + x15423;
  const amrex::Real x15583 = x15437 + x15473;
  const amrex::Real x15584 = x15458 + x15473;
  const amrex::Real x15585 = x15467 + x15473;
  const amrex::Real x15586 = x5099 * x3706;
  const amrex::Real x15587 = -x15586;
  const amrex::Real x15588 = x5099 * x3703;
  const amrex::Real x15589 = x15587 + x15588;
  const amrex::Real x15590 = -x6266;
  const amrex::Real x15591 = x13751 + x13757 - x13760 + x13770 - x13772 -
                             x13775 - x6386 - x6410 + x6418 - x6423 + x6424 +
                             x6442;
  const amrex::Real x15592 = x11391 + x13780 + x15591;
  const amrex::Real x15593 = -x10306;
  const amrex::Real x15594 = x14194 + x6543;
  const amrex::Real x15595 = x15593 + x15594;
  const amrex::Real x15596 = x15592 + x15595;
  const amrex::Real x15597 = -x10265 + x10266;
  const amrex::Real x15598 = x10302 + x15597;
  const amrex::Real x15599 = x14189 + x15590 + x15596 + x15598;
  const amrex::Real x15600 = x10317 + x15599;
  const amrex::Real x15601 = x10313 + x15600;
  const amrex::Real x15602 = x5099 * x3708;
  const amrex::Real x15603 = x5099 * x3709;
  const amrex::Real x15604 = x15602 - x15603;
  const amrex::Real x15605 = x15591 + x6542;
  const amrex::Real x15606 = x5099 * x3711;
  const amrex::Real x15607 = x5099 * x3710;
  const amrex::Real x15608 = -x15606 + x15607;
  const amrex::Real x15609 = x5099 * x3713;
  const amrex::Real x15610 = x5099 * x3712;
  const amrex::Real x15611 = x11555 - x15609 + x15610;
  const amrex::Real x15612 = x15605 + x7114;
  const amrex::Real x15613 = x5099 * x3714;
  const amrex::Real x15614 = x5099 * x3715;
  const amrex::Real x15615 = x15613 - x15614;
  const amrex::Real x15616 = x5099 * x3717;
  const amrex::Real x15617 = x5099 * x3716;
  const amrex::Real x15618 = -x15616 + x15617;
  const amrex::Real x15619 = x13831 - x13832 - x13834 - x13836 + x13838 +
                             x13840 - x7343 - x7345 - x7348 + x7350 + x7358 +
                             x7366;
  const amrex::Real x15620 = x5099 * x3718;
  const amrex::Real x15621 = x5099 * x3719;
  const amrex::Real x15622 = x15620 - x15621;
  const amrex::Real x15623 = x5099 * x3721;
  const amrex::Real x15624 = x5099 * x3720;
  const amrex::Real x15625 = -x15623 + x15624;
  const amrex::Real x15626 = x12806 + x15592;
  const amrex::Real x15627 = x10271 + x6543;
  const amrex::Real x15628 = x15626 + x15627;
  const amrex::Real x15629 = x5099 * x3723;
  const amrex::Real x15630 = x5099 * x3722;
  const amrex::Real x15631 = x11879 - x15629 + x15630;
  const amrex::Real x15632 = x5099 * x3725;
  const amrex::Real x15633 = x5099 * x3724;
  const amrex::Real x15634 = -x15632 + x15633;
  const amrex::Real x15635 = x5099 * x3727;
  const amrex::Real x15636 = x5099 * x3726;
  const amrex::Real x15637 = -x15635 + x15636;
  const amrex::Real x15638 = x12008 + x13198 + x13875 + x15619;
  const amrex::Real x15639 = x5099 * x3729;
  const amrex::Real x15640 = x5099 * x3728;
  const amrex::Real x15641 = 14000000.0 * x1738;
  const amrex::Real x15642 = x15641 * sc[12];
  const amrex::Real x15643 = -x15639 + x15640 - x15642;
  const amrex::Real x15644 = x11373 + x15593;
  const amrex::Real x15645 = x15641 * sc[11];
  const amrex::Real x15646 = x5099 * x3730;
  const amrex::Real x15647 = x5099 * x3731;
  const amrex::Real x15648 = x12074 - x15645 + x15646 - x15647;
  const amrex::Real x15649 = 14000000.0 * x7059;
  const amrex::Real x15650 = x5099 * x3733;
  const amrex::Real x15651 = x5099 * x3732;
  const amrex::Real x15652 = x15649 - x15650 + x15651;
  const amrex::Real x15653 = x5099 * x3735;
  const amrex::Real x15654 = x5099 * x3734;
  const amrex::Real x15655 = -x15653 + x15654;
  const amrex::Real x15656 = -x10896;
  const amrex::Real x15657 = x10899 + x10900 - x10901;
  const amrex::Real x15658 = x15598 + x15628 + x15644 + x15656 + x15657;
  const amrex::Real x15659 = x5099 * x3737;
  const amrex::Real x15660 = x5099 * x3736;
  const amrex::Real x15661 = -x15659 + x15660;
  const amrex::Real x15662 = x5099 * x3738;
  const amrex::Real x15663 = x5099 * x3739;
  const amrex::Real x15664 = x15662 - x15663;
  const amrex::Real x15665 = x5099 * x3740;
  const amrex::Real x15666 = x12280 + x15665;
  const amrex::Real x15667 = x14586 + x15587;
  const amrex::Real x15668 = x15592 + x15598 + x15627 + x15644 + x15657;
  const amrex::Real x15669 =
    x10317 + x14189 + x15590 + x15656 + x15667 + x15668;
  const amrex::Real x15670 = x5099 * x3742;
  const amrex::Real x15671 = x5099 * x3741;
  const amrex::Real x15672 = -x15670 + x15671;
  const amrex::Real x15673 = x5099 * x3743;
  const amrex::Real x15674 = x5099 * x3744;
  const amrex::Real x15675 = x15673 - x15674;
  const amrex::Real x15676 = x5099 * x3745;
  const amrex::Real x15677 = x5099 * x3747;
  const amrex::Real x15678 = x5099 * x3746;
  const amrex::Real x15679 = -x15677 + x15678;
  const amrex::Real x15680 = x5099 * x3749;
  const amrex::Real x15681 = x5099 * x3748;
  const amrex::Real x15682 = -x15680 + x15681;
  const amrex::Real x15683 = x5099 * x3751;
  const amrex::Real x15684 = x5099 * x3750;
  const amrex::Real x15685 = -x15683 + x15684;
  const amrex::Real x15686 = x5099 * x3753;
  const amrex::Real x15687 = x5099 * x3752;
  const amrex::Real x15688 = -x15686 + x15687;
  const amrex::Real x15689 = x15594 + x15626;
  const amrex::Real x15690 = x5099 * x3755;
  const amrex::Real x15691 = x5099 * x3754;
  const amrex::Real x15692 = -x15690 + x15691;
  const amrex::Real x15693 = x11375 + x15689;
  const amrex::Real x15694 = x5099 * x3756;
  const amrex::Real x15695 = x5099 * x3757;
  const amrex::Real x15696 = x15694 - x15695;
  const amrex::Real x15697 = x5099 * x3759;
  const amrex::Real x15698 = x5099 * x3758;
  const amrex::Real x15699 = -x15697 + x15698;
  const amrex::Real x15700 = x5099 * x3761;
  const amrex::Real x15701 = x5099 * x3760;
  const amrex::Real x15702 = -x15700 + x15701;
  const amrex::Real x15703 = x5099 * x3763;
  const amrex::Real x15704 = x5099 * x3762;
  const amrex::Real x15705 = -x15703 + x15704;
  const amrex::Real x15706 = x15595 + x15626;
  const amrex::Real x15707 = x5099 * x3764;
  const amrex::Real x15708 = x5099 * x3765;
  const amrex::Real x15709 = x15707 - x15708;
  const amrex::Real x15710 = x5099 * x3766;
  const amrex::Real x15711 = x11379 + x6200;
  const amrex::Real x15712 = x5099 * x3767;
  const amrex::Real x15713 = x15587 + x15712;
  const amrex::Real x15714 = x12807 + x14586;
  const amrex::Real x15715 = x15600 + x15711;
  const amrex::Real x15716 = x5099 * x3768;
  const amrex::Real x15717 = x15587 + x15716;
  const amrex::Real x15718 = x15657 + x15714;
  const amrex::Real x15719 = x5099 * x3770;
  const amrex::Real x15720 = x5099 * x3769;
  const amrex::Real x15721 = -x15719 + x15720;
  const amrex::Real x15722 = x5120 * x3891;
  const amrex::Real x15723 = x5115 * x3779;
  const amrex::Real x15724 = x5107 * x3779;
  const amrex::Real x15725 = x5109 * x3774;
  const amrex::Real x15726 = -x15725;
  const amrex::Real x15727 = x5109 * x3779;
  const amrex::Real x15728 = x15726 + x15727;
  const amrex::Real x15729 = x5101 * x3774;
  const amrex::Real x15730 = -x15729;
  const amrex::Real x15731 = x5101 * x3779;
  const amrex::Real x15732 = x15730 + x15731;
  const amrex::Real x15733 = x5125 * x3863;
  const amrex::Real x15734 = x10270 - x15733;
  const amrex::Real x15735 = x13989 + x15734;
  const amrex::Real x15736 = x5120 * x3894;
  const amrex::Real x15737 = x5115 * x3774;
  const amrex::Real x15738 = -x15737;
  const amrex::Real x15739 = x5107 * x3774;
  const amrex::Real x15740 = -x15739;
  const amrex::Real x15741 = x10297 + x6586;
  const amrex::Real x15742 =
    x10258 - x14202 + x15736 + x15738 + x15740 + x15741;
  const amrex::Real x15743 = x13999 + x15735 + x15742;
  const amrex::Real x15744 = x15473 + x15743;
  const amrex::Real x15745 = x5120 * x3898;
  const amrex::Real x15746 = x5107 * x3781;
  const amrex::Real x15747 = x5107 * x3780;
  const amrex::Real x15748 = x5115 * x3780;
  const amrex::Real x15749 = x5115 * x3781;
  const amrex::Real x15750 = x5120 * x3899;
  const amrex::Real x15751 = x5125 * x3864;
  const amrex::Real x15752 = x5109 * x3781;
  const amrex::Real x15753 = x5109 * x3780;
  const amrex::Real x15754 = x15752 - x15753;
  const amrex::Real x15755 = x13776 + x15741;
  const amrex::Real x15756 = x5101 * x3780;
  const amrex::Real x15757 = x5101 * x3781;
  const amrex::Real x15758 = -x15756 + x15757;
  const amrex::Real x15759 = x5120 * x3900;
  const amrex::Real x15760 = x5107 * x3782;
  const amrex::Real x15761 = x5115 * x3782;
  const amrex::Real x15762 = x5115 * x3784;
  const amrex::Real x15763 = x5107 * x3784;
  const amrex::Real x15764 = x5125 * x3865;
  const amrex::Real x15765 = x5120 * x3901;
  const amrex::Real x15766 = x5109 * x3784;
  const amrex::Real x15767 = x5109 * x3782;
  const amrex::Real x15768 = x15766 - x15767;
  const amrex::Real x15769 = x5101 * x3782;
  const amrex::Real x15770 = x5101 * x3784;
  const amrex::Real x15771 = -x15769 + x15770;
  const amrex::Real x15772 = x5120 * x3903;
  const amrex::Real x15773 = x5120 * x3902;
  const amrex::Real x15774 = x5107 * x3785;
  const amrex::Real x15775 = x5115 * x3786;
  const amrex::Real x15776 = x5107 * x3786;
  const amrex::Real x15777 = x5125 * x3866;
  const amrex::Real x15778 = x5115 * x3785;
  const amrex::Real x15779 = x5109 * x3786;
  const amrex::Real x15780 = x5109 * x3785;
  const amrex::Real x15781 = x15779 - x15780;
  const amrex::Real x15782 = x5101 * x3785;
  const amrex::Real x15783 = x5101 * x3786;
  const amrex::Real x15784 = -x15782 + x15783;
  const amrex::Real x15785 = x5120 * x3904;
  const amrex::Real x15786 = x5107 * x3787;
  const amrex::Real x15787 = x5125 * x3867;
  const amrex::Real x15788 = x5120 * x3905;
  const amrex::Real x15789 = x5115 * x3787;
  const amrex::Real x15790 = x5115 * x3788;
  const amrex::Real x15791 = x5107 * x3788;
  const amrex::Real x15792 = x5109 * x3788;
  const amrex::Real x15793 = x5109 * x3787;
  const amrex::Real x15794 = x15792 - x15793;
  const amrex::Real x15795 = x5101 * x3787;
  const amrex::Real x15796 = x5101 * x3788;
  const amrex::Real x15797 = -x15795 + x15796;
  const amrex::Real x15798 = x5120 * x3907;
  const amrex::Real x15799 = x5120 * x3906;
  const amrex::Real x15800 = x5125 * x3868;
  const amrex::Real x15801 = x5107 * x3790;
  const amrex::Real x15802 = x5107 * x3789;
  const amrex::Real x15803 = x5115 * x3789;
  const amrex::Real x15804 = x5115 * x3790;
  const amrex::Real x15805 = x5109 * x3790;
  const amrex::Real x15806 = x5109 * x3789;
  const amrex::Real x15807 = x15805 - x15806;
  const amrex::Real x15808 = x5101 * x3790;
  const amrex::Real x15809 = x5101 * x3789;
  const amrex::Real x15810 = x15808 - x15809;
  const amrex::Real x15811 = x5120 * x3909;
  const amrex::Real x15812 = x5120 * x3908;
  const amrex::Real x15813 = x5107 * x3792;
  const amrex::Real x15814 = x5107 * x3791;
  const amrex::Real x15815 = x5115 * x3792;
  const amrex::Real x15816 = x5115 * x3791;
  const amrex::Real x15817 = x5125 * x3869;
  const amrex::Real x15818 = x5109 * x3792;
  const amrex::Real x15819 = x5109 * x3791;
  const amrex::Real x15820 = x15818 - x15819;
  const amrex::Real x15821 = x5101 * x3792;
  const amrex::Real x15822 = x5101 * x3791;
  const amrex::Real x15823 = x15821 - x15822;
  const amrex::Real x15824 = x5120 * x3911;
  const amrex::Real x15825 = x5120 * x3910;
  const amrex::Real x15826 = x5107 * x3794;
  const amrex::Real x15827 = x5107 * x3793;
  const amrex::Real x15828 = x5115 * x3793;
  const amrex::Real x15829 = x5125 * x3870;
  const amrex::Real x15830 = x5115 * x3794;
  const amrex::Real x15831 = x5109 * x3794;
  const amrex::Real x15832 = x5109 * x3793;
  const amrex::Real x15833 = x15831 - x15832;
  const amrex::Real x15834 = x5101 * x3793;
  const amrex::Real x15835 = x5101 * x3794;
  const amrex::Real x15836 = -x15834 + x15835;
  const amrex::Real x15837 = x5107 * x3796;
  const amrex::Real x15838 = x5120 * x3913;
  const amrex::Real x15839 = x5107 * x3795;
  const amrex::Real x15840 = x5125 * x3871;
  const amrex::Real x15841 = x5115 * x3796;
  const amrex::Real x15842 = x5120 * x3912;
  const amrex::Real x15843 = x5115 * x3795;
  const amrex::Real x15844 = x5109 * x3796;
  const amrex::Real x15845 = x5109 * x3795;
  const amrex::Real x15846 = x15844 - x15845;
  const amrex::Real x15847 = x5101 * x3796;
  const amrex::Real x15848 = x5101 * x3795;
  const amrex::Real x15849 = x15847 - x15848;
  const amrex::Real x15850 = x5120 * x3915;
  const amrex::Real x15851 = x5120 * x3914;
  const amrex::Real x15852 = x5107 * x3798;
  const amrex::Real x15853 = x5107 * x3797;
  const amrex::Real x15854 = x5115 * x3797;
  const amrex::Real x15855 = x5115 * x3798;
  const amrex::Real x15856 = x5125 * x3872;
  const amrex::Real x15857 = x5109 * x3798;
  const amrex::Real x15858 = x5109 * x3797;
  const amrex::Real x15859 = x15857 - x15858;
  const amrex::Real x15860 = x5101 * x3797;
  const amrex::Real x15861 = x5101 * x3798;
  const amrex::Real x15862 = -x15860 + x15861;
  const amrex::Real x15863 = x5120 * x3917;
  const amrex::Real x15864 = x5120 * x3916;
  const amrex::Real x15865 = x5115 * x3800;
  const amrex::Real x15866 = x5107 * x3800;
  const amrex::Real x15867 = x5125 * x3873;
  const amrex::Real x15868 = x5115 * x3799;
  const amrex::Real x15869 = x5107 * x3799;
  const amrex::Real x15870 = x5109 * x3800;
  const amrex::Real x15871 = x5109 * x3799;
  const amrex::Real x15872 = x15870 - x15871;
  const amrex::Real x15873 = x5101 * x3800;
  const amrex::Real x15874 = x5101 * x3799;
  const amrex::Real x15875 = x15873 - x15874;
  const amrex::Real x15876 = x5120 * x3918;
  const amrex::Real x15877 = x5120 * x3919;
  const amrex::Real x15878 = x5115 * x3801;
  const amrex::Real x15879 = x5125 * x3874;
  const amrex::Real x15880 = x5107 * x3802;
  const amrex::Real x15881 = x5115 * x3802;
  const amrex::Real x15882 = x5107 * x3801;
  const amrex::Real x15883 = x5109 * x3802;
  const amrex::Real x15884 = x5109 * x3801;
  const amrex::Real x15885 = x15883 - x15884;
  const amrex::Real x15886 = x5101 * x3801;
  const amrex::Real x15887 = x5101 * x3802;
  const amrex::Real x15888 = -x15886 + x15887;
  const amrex::Real x15889 = x6334 * x5119;
  const amrex::Real x15890 = x5120 * x3920;
  const amrex::Real x15891 = 90330000.0 * x1479;
  const amrex::Real x15892 = -x15891 * sc[15];
  const amrex::Real x15893 = x6625 * x5124;
  const amrex::Real x15894 = x5120 * x3921;
  const amrex::Real x15895 = x5125 * x3875;
  const amrex::Real x15896 = x5115 * x3804;
  const amrex::Real x15897 = x5107 * x3803;
  const amrex::Real x15898 = x5107 * x3804;
  const amrex::Real x15899 = x5115 * x3803;
  const amrex::Real x15900 = x5109 * x3804;
  const amrex::Real x15901 = x5109 * x3803;
  const amrex::Real x15902 = 60000000.0 * x1707;
  const amrex::Real x15903 = x15902 * sc[22];
  const amrex::Real x15904 = x15900 - x15901 - x15903;
  const amrex::Real x15905 = x5101 * x3803;
  const amrex::Real x15906 = x5101 * x3804;
  const amrex::Real x15907 = 60000000.0 * x1696;
  const amrex::Real x15908 = x15907 * sc[19];
  const amrex::Real x15909 = -x15905 + x15906 - x15908;
  const amrex::Real x15910 = x5120 * x3922;
  const amrex::Real x15911 = x5107 * x3806;
  const amrex::Real x15912 = x5107 * x3805;
  const amrex::Real x15913 = x5115 * x3806;
  const amrex::Real x15914 = x5125 * x3876;
  const amrex::Real x15915 = x5115 * x3805;
  const amrex::Real x15916 = x5120 * x3923;
  const amrex::Real x15917 = x5109 * x3805;
  const amrex::Real x15918 = x5109 * x3806;
  const amrex::Real x15919 = -x15917 + x15918;
  const amrex::Real x15920 = x5101 * x3806;
  const amrex::Real x15921 = x5101 * x3805;
  const amrex::Real x15922 = x15920 - x15921;
  const amrex::Real x15923 = x5107 * x3808;
  const amrex::Real x15924 = 10.0 * x6383;
  const amrex::Real x15925 = x5105 * x15924;
  const amrex::Real x15926 = x5107 * x3807;
  const amrex::Real x15927 = x5115 * x3808;
  const amrex::Real x15928 = x5125 * x3878;
  const amrex::Real x15929 = x5115 * x3807;
  const amrex::Real x15930 = x5109 * x3808;
  const amrex::Real x15931 = x5109 * x3807;
  const amrex::Real x15932 = x15930 - x15931;
  const amrex::Real x15933 = x5101 * x3808;
  const amrex::Real x15934 = x5101 * x3807;
  const amrex::Real x15935 = x15933 - x15934;
  const amrex::Real x15936 = x5120 * x3924;
  const amrex::Real x15937 = -x15936;
  const amrex::Real x15938 = x15736 + x15937;
  const amrex::Real x15939 = x15755 + x15938;
  const amrex::Real x15940 = -x15891 * sc[12];
  const amrex::Real x15941 = x5120 * x3926;
  const amrex::Real x15942 = x5120 * x3927;
  const amrex::Real x15943 = x5115 * x3810;
  const amrex::Real x15944 = x5107 * x3810;
  const amrex::Real x15945 = x5115 * x3809;
  const amrex::Real x15946 = x5113 * x15924;
  const amrex::Real x15947 = x5107 * x3809;
  const amrex::Real x15948 = x5125 * x3879;
  const amrex::Real x15949 = x5109 * x3810;
  const amrex::Real x15950 = x5109 * x3809;
  const amrex::Real x15951 = x15949 - x15950;
  const amrex::Real x15952 = x5101 * x3810;
  const amrex::Real x15953 = x5101 * x3809;
  const amrex::Real x15954 = x15952 - x15953;
  const amrex::Real x15955 = x5120 * x3929;
  const amrex::Real x15956 = x5120 * x3928;
  const amrex::Real x15957 = x5107 * x3812;
  const amrex::Real x15958 = x5107 * x3811;
  const amrex::Real x15959 = x5115 * x3812;
  const amrex::Real x15960 = x5115 * x3811;
  const amrex::Real x15961 = x5125 * x3880;
  const amrex::Real x15962 = x5109 * x3812;
  const amrex::Real x15963 = x5109 * x3811;
  const amrex::Real x15964 = x15962 - x15963;
  const amrex::Real x15965 = x5101 * x3812;
  const amrex::Real x15966 = x5101 * x3811;
  const amrex::Real x15967 = x15965 - x15966;
  const amrex::Real x15968 = x5109 * x3813;
  const amrex::Real x15969 = x5101 * x3813;
  const amrex::Real x15970 = x5115 * x3813;
  const amrex::Real x15971 = x5107 * x3813;
  const amrex::Real x15972 = x5125 * x3881;
  const amrex::Real x15973 = x15726 + x6190;
  const amrex::Real x15974 = x12788 + x15587;
  const amrex::Real x15975 = x15730 + x15742 + x15937 + x6264;
  const amrex::Real x15976 = x5120 * x3930;
  const amrex::Real x15977 = x5107 * x3814;
  const amrex::Real x15978 = x5107 * x3815;
  const amrex::Real x15979 = x5125 * x3882;
  const amrex::Real x15980 = x5115 * x3815;
  const amrex::Real x15981 = x5115 * x3814;
  const amrex::Real x15982 = x5109 * x3814;
  const amrex::Real x15983 = x5109 * x3815;
  const amrex::Real x15984 = -x15982 + x15983;
  const amrex::Real x15985 = x5101 * x3815;
  const amrex::Real x15986 = x5101 * x3814;
  const amrex::Real x15987 = x10365 + x15985 - x15986;
  const amrex::Real x15988 = x5120 * x3932;
  const amrex::Real x15989 = x5120 * x3931;
  const amrex::Real x15990 = x5107 * x3817;
  const amrex::Real x15991 = x5107 * x3816;
  const amrex::Real x15992 = x5115 * x3816;
  const amrex::Real x15993 = x5115 * x3817;
  const amrex::Real x15994 = x5125 * x3883;
  const amrex::Real x15995 = x5109 * x3817;
  const amrex::Real x15996 = x5109 * x3816;
  const amrex::Real x15997 = x15995 - x15996;
  const amrex::Real x15998 = x15907 * sc[12];
  const amrex::Real x15999 = x5101 * x3816;
  const amrex::Real x16000 = x5101 * x3817;
  const amrex::Real x16001 = -x15998 - x15999 + x16000;
  const amrex::Real x16002 = x5101 * x3818;
  const amrex::Real x16003 = x5107 * x3818;
  const amrex::Real x16004 = x5125 * x3884;
  const amrex::Real x16005 = x5115 * x3818;
  const amrex::Real x16006 = x5109 * x3818;
  const amrex::Real x16007 = x15726 + x16006;
  const amrex::Real x16008 = x15974 + x6190;
  const amrex::Real x16009 = x5125 * x3885;
  const amrex::Real x16010 = x5115 * x3820;
  const amrex::Real x16011 = x5107 * x3819;
  const amrex::Real x16012 = x5115 * x3819;
  const amrex::Real x16013 = x5107 * x3820;
  const amrex::Real x16014 = x5101 * x3820;
  const amrex::Real x16015 = x5101 * x3819;
  const amrex::Real x16016 = x16014 - x16015;
  const amrex::Real x16017 = x5109 * x3820;
  const amrex::Real x16018 = x5109 * x3819;
  const amrex::Real x16019 = x10365 + x16017 - x16018;
  const amrex::Real x16020 = x5120 * x3934;
  const amrex::Real x16021 = x5120 * x3933;
  const amrex::Real x16022 = x5125 * x3886;
  const amrex::Real x16023 = x5115 * x3822;
  const amrex::Real x16024 = x5107 * x3821;
  const amrex::Real x16025 = x5107 * x3822;
  const amrex::Real x16026 = x5115 * x3821;
  const amrex::Real x16027 = x5101 * x3822;
  const amrex::Real x16028 = x5101 * x3821;
  const amrex::Real x16029 = x16027 - x16028;
  const amrex::Real x16030 = x15902 * sc[12];
  const amrex::Real x16031 = x5109 * x3822;
  const amrex::Real x16032 = x5109 * x3821;
  const amrex::Real x16033 = -x16030 + x16031 - x16032;
  const amrex::Real x16034 = x5120 * x3936;
  const amrex::Real x16035 = x5120 * x3935;
  const amrex::Real x16036 = x5107 * x3823;
  const amrex::Real x16037 = x5107 * x3824;
  const amrex::Real x16038 = x5115 * x3823;
  const amrex::Real x16039 = x5115 * x3824;
  const amrex::Real x16040 = x5125 * x3887;
  const amrex::Real x16041 = x5109 * x3824;
  const amrex::Real x16042 = x5109 * x3823;
  const amrex::Real x16043 = x16041 - x16042;
  const amrex::Real x16044 = x5101 * x3824;
  const amrex::Real x16045 = x5101 * x3823;
  const amrex::Real x16046 = x16044 - x16045;
  const amrex::Real x16047 = x5107 * x3826;
  const amrex::Real x16048 = x5107 * x3825;
  const amrex::Real x16049 = x5115 * x3826;
  const amrex::Real x16050 = x5115 * x3825;
  const amrex::Real x16051 = x5120 * x3937;
  const amrex::Real x16052 = x5120 * x3938;
  const amrex::Real x16053 = x5109 * x3826;
  const amrex::Real x16054 = x5109 * x3825;
  const amrex::Real x16055 = x16053 - x16054;
  const amrex::Real x16056 = x5101 * x3826;
  const amrex::Real x16057 = x5101 * x3825;
  const amrex::Real x16058 = x16056 - x16057;
  const amrex::Real x16059 = x11353 + x15755;
  const amrex::Real x16060 = x15735 + x16059;
  const amrex::Real x16061 = x5120 * x3940;
  const amrex::Real x16062 = x5120 * x3939;
  const amrex::Real x16063 = x5115 * x3828;
  const amrex::Real x16064 = x5107 * x3827;
  const amrex::Real x16065 = x5115 * x3827;
  const amrex::Real x16066 = x5107 * x3828;
  const amrex::Real x16067 = x5109 * x3828;
  const amrex::Real x16068 = x5109 * x3827;
  const amrex::Real x16069 = x16067 - x16068;
  const amrex::Real x16070 = x5101 * x3828;
  const amrex::Real x16071 = x5101 * x3827;
  const amrex::Real x16072 = x16070 - x16071;
  const amrex::Real x16073 = x5120 * x3941;
  const amrex::Real x16074 = x5115 * x3830;
  const amrex::Real x16075 = x5107 * x3829;
  const amrex::Real x16076 = x5115 * x3829;
  const amrex::Real x16077 = x5120 * x3942;
  const amrex::Real x16078 = x5107 * x3830;
  const amrex::Real x16079 = x5109 * x3830;
  const amrex::Real x16080 = x5109 * x3829;
  const amrex::Real x16081 = x16079 - x16080;
  const amrex::Real x16082 = x5101 * x3830;
  const amrex::Real x16083 = x5101 * x3829;
  const amrex::Real x16084 = x16082 - x16083;
  const amrex::Real x16085 = x5107 * x3831;
  const amrex::Real x16086 = x5120 * x3944;
  const amrex::Real x16087 = x5115 * x3832;
  const amrex::Real x16088 = x5107 * x3832;
  const amrex::Real x16089 = x5115 * x3831;
  const amrex::Real x16090 = x5120 * x3943;
  const amrex::Real x16091 = x5109 * x3831;
  const amrex::Real x16092 = x5109 * x3832;
  const amrex::Real x16093 = -x16091 + x16092;
  const amrex::Real x16094 = x5101 * x3832;
  const amrex::Real x16095 = x5101 * x3831;
  const amrex::Real x16096 = x16094 - x16095;
  const amrex::Real x16097 = x5115 * x3833;
  const amrex::Real x16098 = x5120 * x3945;
  const amrex::Real x16099 = x5107 * x3833;
  const amrex::Real x16100 = x5115 * x3834;
  const amrex::Real x16101 = x5120 * x3946;
  const amrex::Real x16102 = x5107 * x3834;
  const amrex::Real x16103 = x5109 * x3834;
  const amrex::Real x16104 = x5109 * x3833;
  const amrex::Real x16105 = x16103 - x16104;
  const amrex::Real x16106 = x5101 * x3834;
  const amrex::Real x16107 = x5101 * x3833;
  const amrex::Real x16108 = x16106 - x16107;
  const amrex::Real x16109 = x5120 * x3948;
  const amrex::Real x16110 = x5107 * x3836;
  const amrex::Real x16111 = x5115 * x3836;
  const amrex::Real x16112 = x5120 * x3947;
  const amrex::Real x16113 = x5115 * x3835;
  const amrex::Real x16114 = x5107 * x3835;
  const amrex::Real x16115 = x5109 * x3836;
  const amrex::Real x16116 = x5109 * x3835;
  const amrex::Real x16117 = x16115 - x16116;
  const amrex::Real x16118 = x5101 * x3836;
  const amrex::Real x16119 = x5101 * x3835;
  const amrex::Real x16120 = x16118 - x16119;
  const amrex::Real x16121 = x5120 * x3950;
  const amrex::Real x16122 = x5120 * x3949;
  const amrex::Real x16123 = x5107 * x3837;
  const amrex::Real x16124 = x5115 * x3837;
  const amrex::Real x16125 = x5107 * x3838;
  const amrex::Real x16126 = x5115 * x3838;
  const amrex::Real x16127 = x5109 * x3838;
  const amrex::Real x16128 = x5109 * x3837;
  const amrex::Real x16129 = x16127 - x16128;
  const amrex::Real x16130 = x5101 * x3838;
  const amrex::Real x16131 = x5101 * x3837;
  const amrex::Real x16132 = x16130 - x16131;
  const amrex::Real x16133 = x5120 * x3951;
  const amrex::Real x16134 = x5107 * x3839;
  const amrex::Real x16135 = x5115 * x3839;
  const amrex::Real x16136 = x5109 * x3839;
  const amrex::Real x16137 = x15726 + x16136;
  const amrex::Real x16138 = x5101 * x3839;
  const amrex::Real x16139 = x15730 + x16138;
  const amrex::Real x16140 = x5120 * x3952;
  const amrex::Real x16141 = 10.0 * x3840;
  const amrex::Real x16142 = x5106 * x16141;
  const amrex::Real x16143 = x5114 * x16141;
  const amrex::Real x16144 = x5109 * x3840;
  const amrex::Real x16145 = x15726 + x16144;
  const amrex::Real x16146 = x5101 * x3840;
  const amrex::Real x16147 = x15730 + x16146;
  const amrex::Real x16148 = x5107 * x3841;
  const amrex::Real x16149 = x5120 * x3953;
  const amrex::Real x16150 = x5115 * x3841;
  const amrex::Real x16151 = x5109 * x3841;
  const amrex::Real x16152 = x15726 + x16151;
  const amrex::Real x16153 = x5101 * x3841;
  const amrex::Real x16154 = x15730 + x16153;
  const amrex::Real x16155 = x5109 * x3842;
  const amrex::Real x16156 = x5107 * x3842;
  const amrex::Real x16157 = x5115 * x3842;
  const amrex::Real x16158 = x5101 * x3842;
  const amrex::Real x16159 = x15730 + x16158;
  const amrex::Real x16160 = 2640000.0 * x6109;
  const amrex::Real x16161 = x10283 - x10287 + x10293 - x10296;
  const amrex::Real x16162 = x16161 + x6264;
  const amrex::Real x16163 = x15586 + x16162 - x1814 * x16160;
  const amrex::Real x16164 = x11388 + x12800 + x14719 + x15733 + x6643 + x6663;
  const amrex::Real x16165 = x15739 + x16164;
  const amrex::Real x16166 = 960000.0 * x1377;
  const amrex::Real x16167 = -x16166 * sc[15];
  const amrex::Real x16168 = -x16166 * sc[14];
  const amrex::Real x16169 = x10259 + x16165;
  const amrex::Real x16170 = x4354 * x5134;
  const amrex::Real x16171 = x16170 * sc[15];
  const amrex::Real x16172 = -x15736;
  const amrex::Real x16173 = x4122 * x5135;
  const amrex::Real x16174 = -x4233 * x5142;
  const amrex::Real x16175 = x4178 * x5135;
  const amrex::Real x16176 = -x4178 * x5141;
  const amrex::Real x16177 = -x4122 * x5140;
  const amrex::Real x16178 = x16173 + x16174 + x16175 + x16176 + x16177 +
                             x6690 + x6700 + x4073 * x5135 - x4073 * x5139;
  const amrex::Real x16179 = x16178 + x6360 + x4015 * x5135;
  const amrex::Real x16180 = x16179 + x6349 + x5135 * x3958;
  const amrex::Real x16181 =
    x15737 + x16172 + x16180 + x6163 + x6262 + x6319 + x6320;
  const amrex::Real x16182 = x5130 * x3863;
  const amrex::Real x16183 = x11389 - x16182 + x6641 + x6642;
  const amrex::Real x16184 = x16181 + x16183 + x6345;
  const amrex::Real x16185 = x4316 * x5135;
  const amrex::Real x16186 = -x4316 * x5138;
  const amrex::Real x16187 = x16185 + x16186 + x6703;
  const amrex::Real x16188 = x6620 - x6623 + x6628 - x6630 + x6635 - x6638;
  const amrex::Real x16189 = x12801 + x14715;
  const amrex::Real x16190 = x16188 + x16189;
  const amrex::Real x16191 = x16187 + x16190;
  const amrex::Real x16192 = x10321 + x16184 + x16191;
  const amrex::Real x16193 = x4355 * x5134;
  const amrex::Real x16194 = x16193 * sc[15];
  const amrex::Real x16195 = x5130 * x3864;
  const amrex::Real x16196 = x16178 + x6340;
  const amrex::Real x16197 = x5130 * x3865;
  const amrex::Real x16198 = -x7099;
  const amrex::Real x16199 = x4357 * x5144;
  const amrex::Real x16200 = x4323 * x5138;
  const amrex::Real x16201 = x4357 * x5134;
  const amrex::Real x16202 = x16201 * sc[15];
  const amrex::Real x16203 = -x16202;
  const amrex::Real x16204 = -x4323 * x5135;
  const amrex::Real x16205 = -x7094;
  const amrex::Real x16206 = x16185 + x16186 + x16188 + x16198 + x16199 +
                             x16200 + x16203 + x16204 + x16205 + x6703;
  const amrex::Real x16207 = x16196 + x16206;
  const amrex::Real x16208 = x5130 * x3866;
  const amrex::Real x16209 = x16206 + x6340;
  const amrex::Real x16210 = x5130 * x3867;
  const amrex::Real x16211 = x5130 * x3868;
  const amrex::Real x16212 = x4358 * x5134;
  const amrex::Real x16213 = x16212 * sc[15];
  const amrex::Real x16214 = -x16213 - x7339 - x7344 + x7363 + x7369 - x7372 +
                             x7377 - x7444 - x7457 + x7459 + x4325 * x5135 -
                             x4325 * x5138 - x4326 * x5135 + x4326 * x5138 +
                             x4358 * x5144;
  const amrex::Real x16215 = x16214 + x7573;
  const amrex::Real x16216 = x5130 * x3869;
  const amrex::Real x16217 = x4359 * x5134;
  const amrex::Real x16218 = x16217 * sc[15];
  const amrex::Real x16219 = x5130 * x3870;
  const amrex::Real x16220 = x5130 * x3871;
  const amrex::Real x16221 = x5130 * x3872;
  const amrex::Real x16222 = x5130 * x3873;
  const amrex::Real x16223 = x5130 * x3874;
  const amrex::Real x16224 = x4092 * x5139;
  const amrex::Real x16225 = -x8271;
  const amrex::Real x16226 = -x4092 * x5135;
  const amrex::Real x16227 = -x4146 * x5135;
  const amrex::Real x16228 = -x8268;
  const amrex::Real x16229 = x4146 * x5140;
  const amrex::Real x16230 = x5142 * x2862;
  const amrex::Real x16231 = -x4198 * x5135;
  const amrex::Real x16232 = x4198 * x5141;
  const amrex::Real x16233 = x16206 + x16230 + x16231 + x16232;
  const amrex::Real x16234 = x16227 + x16228 + x16229 + x16233;
  const amrex::Real x16235 = x16224 + x16225 + x16226 + x16234;
  const amrex::Real x16236 = x16179 + x6340;
  const amrex::Real x16237 = x5130 * x3875;
  const amrex::Real x16238 = x4360 * x5134;
  const amrex::Real x16239 = x16238 * sc[15];
  const amrex::Real x16240 = x5130 * x3876;
  const amrex::Real x16241 = x5130 * x3878;
  const amrex::Real x16242 = -x5135 * x3986;
  const amrex::Real x16243 = -x8654;
  const amrex::Real x16244 = -x8656;
  const amrex::Real x16245 = -x4044 * x5135;
  const amrex::Real x16246 =
    x13907 + x15936 + x16242 + x16243 + x16244 + x16245 - x8646;
  const amrex::Real x16247 = x16172 + x16180 + x6163;
  const amrex::Real x16248 = x13307 + x16247 + x8649;
  const amrex::Real x16249 = -x8663 + x8664 - x8665 - x8666 + x8667 + x8668;
  const amrex::Real x16250 = x16199 + x16203 + x16205;
  const amrex::Real x16251 = x14152 + x15130;
  const amrex::Real x16252 = -x6004 * x5134;
  const amrex::Real x16253 = x6704 * x5134;
  const amrex::Real x16254 = -x16253;
  const amrex::Real x16255 = -x6714 * x5134;
  const amrex::Real x16256 = -x6692 * x5134;
  const amrex::Real x16257 = -x6164 * x5134;
  const amrex::Real x16258 = -x6723 * x5134;
  const amrex::Real x16259 = x4361 * x5134;
  const amrex::Real x16260 = x16259 * sc[15];
  const amrex::Real x16261 = x5130 * x3879;
  const amrex::Real x16262 = x6625 * x5129;
  const amrex::Real x16263 = x4362 * x5134;
  const amrex::Real x16264 = x16263 * sc[15];
  const amrex::Real x16265 = x5130 * x3880;
  const amrex::Real x16266 = x5130 * x3881;
  const amrex::Real x16267 = x16235 + x16246;
  const amrex::Real x16268 = x16181 + x16267;
  const amrex::Real x16269 = x5130 * x3882;
  const amrex::Real x16270 = x16235 + x16242 + x16243 + x16244 + x16245;
  const amrex::Real x16271 = x4363 * x5134;
  const amrex::Real x16272 = x16271 * sc[15];
  const amrex::Real x16273 = x5130 * x3883;
  const amrex::Real x16274 = x16188 + x6340;
  const amrex::Real x16275 = x5130 * x3884;
  const amrex::Real x16276 = 7.93e+32 * exp(-x1399 + x5128) * refC;
  const amrex::Real x16277 = x5130 * x3885;
  const amrex::Real x16278 = x16248 + x16267;
  const amrex::Real x16279 = 1.6e+16 * x6847;
  const amrex::Real x16280 = sc[1] * x16279;
  const amrex::Real x16281 = x5130 * x3886;
  const amrex::Real x16282 = x16174 + x16175 + x16176 + x6340;
  const amrex::Real x16283 = exp(-15106.1214767918 * invT);
  const amrex::Real x16284 = 25000000000000.0 * x16283;
  const amrex::Real x16285 = x5130 * x3887;
  const amrex::Real x16286 = x4364 * x5134;
  const amrex::Real x16287 = x16286 * sc[15];
  const amrex::Real x16288 = x4365 * x5134;
  const amrex::Real x16289 = x16288 * sc[15];
  const amrex::Real x16290 = x12812 + x16183;
  const amrex::Real x16291 = x10314 + x16290;
  const amrex::Real x16292 = x16291 + x9144;
  const amrex::Real x16293 = x16190 + x16292 + x6340;
  const amrex::Real x16294 = x4366 * x5134;
  const amrex::Real x16295 = x16294 * sc[15];
  const amrex::Real x16296 = x16191 + x16292;
  const amrex::Real x16297 = x4367 * x5134;
  const amrex::Real x16298 = x16297 * sc[15];
  const amrex::Real x16299 = x16191 + x16236;
  const amrex::Real x16300 = x4368 * x5134;
  const amrex::Real x16301 = x16300 * sc[15];
  const amrex::Real x16302 = exp(-x1495 + x5136) * x5137;
  const amrex::Real x16303 = x4369 * x5134;
  const amrex::Real x16304 = x16303 * sc[15];
  const amrex::Real x16305 = x4370 * x5134;
  const amrex::Real x16306 = x16305 * sc[15];
  const amrex::Real x16307 = x4068 * x5134;
  const amrex::Real x16308 = 1.77e+38 * x14641 * x14610;
  const amrex::Real x16309 = x14643 * x16308;
  const amrex::Real x16310 = 1.77e+38 * x14629;
  const amrex::Real x16311 = x14632 * x16310;
  const amrex::Real x16312 =
    -1.77e+38 * x14615 - 1.47778301886792e+66 * x14621 +
    1.47778301886792e+66 * x14636 + x16310 - x6380 - x6427 + x6437 + x6449 +
    x6454 - x6458 + x14626 * x16309 - x14626 * x16311;
  const amrex::Real x16313 = -x14724 + x16312 - x6353;
  const amrex::Real x16314 = x14571 + x16313;
  const amrex::Real x16315 = -x14616 - x14622 + x14630 + x14637 - x7329 +
                             x7333 - x7336 - x7337 + x7340 + x7373 +
                             x14833 * x16309 - x14833 * x16311;
  const amrex::Real x16316 = 2.655e+38 * x14609;
  const amrex::Real x16317 =
    x10898 + x12193 + x13309 + x14152 + x15131 + x15133 + x8639 + x8645;
  const amrex::Real x16318 = x16313 + x16317;
  const amrex::Real x16319 = x16314 + x16317;
  const amrex::Real x16320 = x10268 + x11386;
  const amrex::Real x16321 = x16320 + x6261;
  const amrex::Real x16322 = x14688 + x15729;
  const amrex::Real x16323 = x11374 + x16322;
  const amrex::Real x16324 = x16323 + x6322;
  const amrex::Real x16325 = x14688 + x6317;
  const amrex::Real x16326 = x14855 + x7565;
  const amrex::Real x16327 = x16322 + x8983;
  const amrex::Real x16328 = x11374 + x14688 + x6318;
  const amrex::Real x16329 = -x5146 * x1877;
  const amrex::Real x16330 = x14716 + x6516;
  const amrex::Real x16331 = x13987 + x15481 + x16330 + x6359;
  const amrex::Real x16332 = x16331 + x6348;
  const amrex::Real x16333 = x6294 - x6298 - x6301 + x6305 - x6313 + x6316;
  const amrex::Real x16334 =
    -x14700 - x14701 + x14703 - x14707 + x14710 + x14712;
  const amrex::Real x16335 = x16333 + x16334;
  const amrex::Real x16336 = x6687 + x6722;
  const amrex::Real x16337 = x16336 + x6364;
  const amrex::Real x16338 = x16335 + x16337;
  const amrex::Real x16339 = x13787 + x16338;
  const amrex::Real x16340 = x16332 + x16339;
  const amrex::Real x16341 = x5252 * x5146;
  const amrex::Real x16342 = -x16341 * kf_qss[163];
  const amrex::Real x16343 = x16335 + x6516;
  const amrex::Real x16344 = -x16341 * kf_qss[166];
  const amrex::Real x16345 = -x7096;
  const amrex::Real x16346 = -x7091;
  const amrex::Real x16347 = x16336 + x16346;
  const amrex::Real x16348 = x16345 + x16347;
  const amrex::Real x16349 = x16343 + x16348;
  const amrex::Real x16350 = x4223 * x5146;
  const amrex::Real x16351 = x16345 + x16346 + x6722;
  const amrex::Real x16352 = x16343 + x16351;
  const amrex::Real x16353 = x4224 * x5146;
  const amrex::Real x16354 = x4225 * x5146;
  const amrex::Real x16355 = -x14835 - x14837 + x14838 + x14840 + x14841 -
                             x14842 - x7474 - x7481 + x7482 + x7557 - x7559 -
                             x7560 + x7561 - x7563 + x7564;
  const amrex::Real x16356 = x16355 + x7569;
  const amrex::Real x16357 = x4226 * x5146;
  const amrex::Real x16358 = x4227 * x5146;
  const amrex::Real x16359 = x4228 * x5146;
  const amrex::Real x16360 = -x16341 * kf_qss[178];
  const amrex::Real x16361 = x4229 * x5146;
  const amrex::Real x16362 =
    x16333 + x16345 + x16346 + x6364 + x6687 + x6722 - x8265;
  const amrex::Real x16363 = x16334 + x16362;
  const amrex::Real x16364 =
    x12180 + x13313 + x13909 + x15114 - x8650 - x8657 + x8659;
  const amrex::Real x16365 =
    -x15135 - x15137 + x15138 - x15139 + x15140 + x15141;
  const amrex::Real x16366 = x16365 + x6516;
  const amrex::Real x16367 = -x8637;
  const amrex::Real x16368 = x13987 + x15481 + x6348 + x6359;
  const amrex::Real x16369 = x16367 + x16368;
  const amrex::Real x16370 = x16363 + x16364;
  const amrex::Real x16371 = x16370 + x6516;
  const amrex::Real x16372 = x16369 + x16371;
  const amrex::Real x16373 = x15730 + x16372;
  const amrex::Real x16374 = x425 * x5146;
  const amrex::Real x16375 = -x3296 * x16374 - x5134 * sc[29];
  const amrex::Real x16376 = -x5146 * x5837;
  const amrex::Real x16377 = x16280 + x16330 + x16335;
  const amrex::Real x16378 = -x1548 * x16374 - x5134 * sc[19];
  const amrex::Real x16379 = -x6052 * x5146;
  const amrex::Real x16380 = -x6078 * x5146;
  const amrex::Real x16381 = x16332 + x16370;
  const amrex::Real x16382 = x10269 + x11387;
  const amrex::Real x16383 = x16382 + x6263;
  const amrex::Real x16384 = x16182 + x6510;
  const amrex::Real x16385 = x15725 + x16384;
  const amrex::Real x16386 = x15725 + x6510;
  const amrex::Real x16387 = 1.03333333333333e+37 * x1457;
  const amrex::Real x16388 = x1460 + x33 * log(x16387);
  const amrex::Real x16389 = x1462 - 0.14 * x16388;
  const amrex::Real x16390 = pow(x16389, -2);
  const amrex::Real x16391 = pow(x16388, 2);
  const amrex::Real x16392 = 1.0 + x16390 * x16391;
  const amrex::Real x16393 = pow(10, x1467 / x16392);
  const amrex::Real x16394 = 1.0 + x16387;
  const amrex::Real x16395 = pow(x16394, -1);
  const amrex::Real x16396 = x1455 * x16395;
  const amrex::Real x16397 = x914 * x16393;
  const amrex::Real x16398 = x1834 * x16397 * sc[22] / pow(x16394, 2);
  const amrex::Real x16399 = x1828 * x16391 / pow(x16389, 3);
  const amrex::Real x16400 = x16390 * x16388;
  const amrex::Real x16401 = x1828 * x16400;
  const amrex::Real x16402 = x16396 * x16397;
  const amrex::Real x16403 = x1459 * x16402 * sc[22] / pow(x16392, 2);
  const amrex::Real x16404 = -x14664 + x14669 + x14678 + x14682 - x14684 -
                             x14687 + 1.60166666666667e+81 * x16398 - x6482 -
                             x6495 + x6500 + x6503 - x6506 + x6509 +
                             (x6398 * x16401 + x6400 * x16399) * x16403 -
                             x1833 * x16393 * x16396;
  const amrex::Real x16405 = x16404 + x4122 * x5148;
  const amrex::Real x16406 = x13986 + x15480;
  const amrex::Real x16407 = x13788 + x16406;
  const amrex::Real x16408 = x16405 + x16407;
  const amrex::Real x16409 = x5252 * x5149;
  const amrex::Real x16410 = x16405 + x6184;
  const amrex::Real x16411 = x16404 + x6184;
  const amrex::Real x16412 = x16393 * x16395;
  const amrex::Real x16413 =
    x14844 + x14846 - x14848 - x14851 + x14853 - x14854 +
    3.20333333333333e+81 * x16398 - x7430 - x7434 + x7435 + x7437 - x7438 +
    x7439 - x2464 * x16412 + (x7354 * x16401 + x7355 * x16399) * x16403;
  const amrex::Real x16414 = x16413 + x7567;
  const amrex::Real x16415 = x16405 - x4146 * x5148;
  const amrex::Real x16416 = x12780 + x6185;
  const amrex::Real x16417 = x2463 * x16412;
  const amrex::Real x16418 =
    x12194 + x13311 + x13908 + x15116 + x16406 + x16415;
  const amrex::Real x16419 = x16418 + x8648;
  const amrex::Real x16420 = x15726 + x16419;
  const amrex::Real x16421 = x16418 + x8647;
  const amrex::Real x16422 = x425 * x5149;
  const amrex::Real x16423 = x16405 + x16416;
  const amrex::Real x16424 = x15480 + x16423;
  const amrex::Real x16425 = x4354 * x5152;
  const amrex::Real x16426 = x4355 * x5152;
  const amrex::Real x16427 = x4357 * x5152;
  const amrex::Real x16428 = -x16427;
  const amrex::Real x16429 = x4358 * x5152;
  const amrex::Real x16430 = -x16429;
  const amrex::Real x16431 = x4359 * x5152;
  const amrex::Real x16432 = x4360 * x5152;
  const amrex::Real x16433 = x4361 * x5152;
  const amrex::Real x16434 = x4362 * x5152;
  const amrex::Real x16435 = x4363 * x5152;
  const amrex::Real x16436 = x6704 * x5151;
  const amrex::Real x16437 = x4364 * x5152;
  const amrex::Real x16438 = x4365 * x5152;
  const amrex::Real x16439 = x4366 * x5152;
  const amrex::Real x16440 = x4367 * x5152;
  const amrex::Real x16441 = x4368 * x5152;
  const amrex::Real x16442 = x4369 * x5152;
  const amrex::Real x16443 = 3.5e+16 * exp(-x5150);
  const amrex::Real x16444 = x4370 * x5152;
  const amrex::Real x16445 = x6721 - x4263 * x5156;
  const amrex::Real x16446 = x16445 + x6351;
  const amrex::Real x16447 = -x16201 * sc[24];
  const amrex::Real x16448 = x16447 + x7098;
  const amrex::Real x16449 = x16445 + x16448;
  const amrex::Real x16450 = x16448 + x6721;
  const amrex::Real x16451 = x7463 - x16212 * sc[24];
  const amrex::Real x16452 = x16449 + x4289 * x5156;
  const amrex::Real x16453 = x16452 + x8655;
  const amrex::Real x16454 = x16453 + x8637;
  const amrex::Real x16455 = x4313 * x5137;
  const amrex::Real x16456 = x6698 - x4263 * x5159;
  const amrex::Real x16457 = x16456 + x4073 * x5160;
  const amrex::Real x16458 = x16457 + x6363;
  const amrex::Real x16459 = x16457 + x6361;
  const amrex::Real x16460 = x16457 + x6362;
  const amrex::Real x16461 = x4289 * x5159;
  const amrex::Real x16462 = x16461 + x8266 - x4092 * x5160;
  const amrex::Real x16463 = x16458 + x16462 + x8658;
  const amrex::Real x16464 = x6713 + x4316 * x5163;
  const amrex::Real x16465 = x16464 - x4263 * x5162;
  const amrex::Real x16466 = x16465 + x6365;
  const amrex::Real x16467 = x7101 - x4323 * x5163;
  const amrex::Real x16468 = x16465 + x16467;
  const amrex::Real x16469 = x16464 + x16467;
  const amrex::Real x16470 = x7460 + x4325 * x5163 - x4326 * x5163;
  const amrex::Real x16471 = x4289 * x5162;
  const amrex::Real x16472 = x16466 + x16467;
  const amrex::Real x16473 = x16471 + x16472;
  const amrex::Real x16474 = x16473 + x8650;
  const amrex::Real x16475 = x4298 * x5137;
  const amrex::Real x16476 = x6701 + x4015 * x5166;
  const amrex::Real x16477 = -x4263 * x5165;
  const amrex::Real x16478 = x16477 + x6729;
  const amrex::Real x16479 = x16476 + x16478;
  const amrex::Real x16480 = x16478 + x6701;
  const amrex::Real x16481 = x16477 + x7097;
  const amrex::Real x16482 = x16481 + x6701;
  const amrex::Real x16483 = x4289 * x5165;
  const amrex::Real x16484 = x16476 + x16481;
  const amrex::Real x16485 = x16483 + x16484 + x8272;
  const amrex::Real x16486 = x16485 - x4044 * x5166;
  const amrex::Real x16487 = x6680 - x4263 * x5168;
  const amrex::Real x16488 = x6688 + x5169 * x3958;
  const amrex::Real x16489 = x16487 + x16488;
  const amrex::Real x16490 = x16487 + x6688;
  const amrex::Real x16491 = x16487 + x7094;
  const amrex::Real x16492 = x16491 + x6688;
  const amrex::Real x16493 = x16491 + x4289 * x5168;
  const amrex::Real x16494 = x16493 + x8265;
  const amrex::Real x16495 = x16488 + x16494 - x5169 * x3986;
  const amrex::Real x16496 = x6669 - x6671 - x6674 + x6677 + x6678 - x6679;
  const amrex::Real x16497 = x16496 + x5173;
  const amrex::Real x16498 = x16202 + x16496;
  const amrex::Real x16499 =
    x16213 + x7445 - x7447 - x7449 - x7451 + x7453 + x7454;
  const amrex::Real x16500 = x16498 + x5173;
  const amrex::Real x16501 = x16500 - x5727;
  const amrex::Real x16502 = x5170 * x3894;
  const amrex::Real x16503 = x6689 - x4263 * x5172;
  const amrex::Real x16504 = x16503 + x6691;
  const amrex::Real x16505 = x16504 + x6686;
  const amrex::Real x16506 = x16502 + x16505;
  const amrex::Real x16507 = x16504 + x7092;
  const amrex::Real x16508 = x8267 + x4289 * x5172;
  const amrex::Real x16509 = x16508 + x8268;
  const amrex::Real x16510 = x16502 + x16507;
  const amrex::Real x16511 = x16509 + x16510;
  const amrex::Real x16512 = x16511 - x5170 * x3924;
  const amrex::Real x16513 = x12773 + x16427;
  const amrex::Real x16514 = x13221 + x16513;
  const amrex::Real x16515 = x13220 + x16514;
  const amrex::Real x16516 = -x14191 - x14192;
  const amrex::Real x16517 = 5786.99165675428 * invT;
  const amrex::Real x16518 = 100000000000.0 * exp(x11581 - x16517) * x3690;
  const amrex::Real x16519 = 100000000000.0 * exp(-x16517);
  const amrex::Real x16520 = x14361 + x16516;
  const amrex::Real x16521 = x14358 + x16520;
  // Write base terms for dscqssdscqss, dscqssdsc, dwdotdscqss, and dwdotdsc...
  const amrex::Real dscqss1dscqss0 = x891;
  const amrex::Real dscqss17dscqss16 = -x897;
  const amrex::Real dscqss2dscqss0 = -x898;
  const amrex::Real dscqss2dscqss1 = x899;
  const amrex::Real dscqss3dscqss1 = -x869;
  const amrex::Real dscqss4dscqss2 = -x791;
  const amrex::Real dscqss5dscqss1 = -x591;
  const amrex::Real dscqss5dscqss2 = -x796;
  const amrex::Real dscqss6dscqss5 = x900;
  const amrex::Real dscqss7dscqss6 = x901;
  const amrex::Real dscqss9dscqss7 = x902;
  const amrex::Real dscqss11dscqss9 = -x435;
  const amrex::Real dscqss12dscqss11 = -x374;
  const amrex::Real dscqss14dscqss11 = -x427;
  const amrex::Real dscqss13dscqss12 = -x344;
  const amrex::Real dscqss15dscqss9 = -x273;
  const amrex::Real dscqss15dscqss6 = x903;
  const amrex::Real dscqss15dscqss7 = -x464;
  const amrex::Real dscqss15dscqss5 = -x584;
  const amrex::Real dscqss15dscqss13 = -x314;
  const amrex::Real dscqss8dscqss6 = -x484;
  const amrex::Real dscqss8dscqss15 = x904;
  const amrex::Real dscqss10dscqss8 = -x109;
  const amrex::Real dscqss10dscqss15 = -x67;
  const amrex::Real dscqss0dsc0 = x1815 + x2033;
  const amrex::Real dscqss0dsc1 = -x2071 + x2106;
  const amrex::Real dscqss0dsc2 = -x2141 + x2184;
  const amrex::Real dscqss0dsc3 = -x2259 + x2291;
  const amrex::Real dscqss0dsc4 = -x2334 + x2351;
  const amrex::Real dscqss0dsc5 = -x2460 + x2507;
  const amrex::Real dscqss0dsc6 = -x2585 + x2614;
  const amrex::Real dscqss0dsc7 = -x2652 + x2666;
  const amrex::Real dscqss0dsc8 = -x2716 + x2733;
  const amrex::Real dscqss0dsc9 = -x2761 + x2780;
  const amrex::Real dscqss0dsc10 = -x2818 + x2836;
  const amrex::Real dscqss0dsc11 = -x2859 + x2883;
  const amrex::Real dscqss0dsc12 = -x2960 + x2989;
  const amrex::Real dscqss0dsc13 = -x3022 + x3035;
  const amrex::Real dscqss0dsc14 = -x3049 + x3068;
  const amrex::Real dscqss0dsc15 = -x3121 + x3138;
  const amrex::Real dscqss0dsc16 = -x3208 + x3232;
  const amrex::Real dscqss0dsc17 = x1815 + x3239;
  const amrex::Real dscqss0dsc18 = -x3247 + x3253;
  const amrex::Real dscqss0dsc19 = -x3292 + x3308;
  const amrex::Real dscqss0dsc20 = x1815 + x3313;
  const amrex::Real dscqss0dsc21 = -x3320 + x3324;
  const amrex::Real dscqss0dsc22 = -x3342 + x3352;
  const amrex::Real dscqss0dsc23 = -x3385 + x3402;
  const amrex::Real dscqss0dsc24 = -x3434 + x3449;
  const amrex::Real dscqss0dsc25 = -x3466 + x3473;
  const amrex::Real dscqss0dsc26 = -x3504 + x3517;
  const amrex::Real dscqss0dsc27 = -x3536 + x3548;
  const amrex::Real dscqss0dsc28 = -x3564 + x3580;
  const amrex::Real dscqss0dsc29 = -x3593 + x3607;
  const amrex::Real dscqss0dsc30 = -x3621 + x3635;
  const amrex::Real dscqss0dsc31 = x1815 + x3651;
  const amrex::Real dscqss0dsc32 = x1815 + x3664;
  const amrex::Real dscqss0dsc33 = x1815 + x3668;
  const amrex::Real dscqss0dsc34 = -x3674 + x3677;
  const amrex::Real dscqss16dsc0 = 0;
  const amrex::Real dscqss16dsc1 = 0;
  const amrex::Real dscqss16dsc2 = 0;
  const amrex::Real dscqss16dsc3 = x3682 * x3690;
  const amrex::Real dscqss16dsc4 = 0;
  const amrex::Real dscqss16dsc5 = 0;
  const amrex::Real dscqss16dsc6 = 0;
  const amrex::Real dscqss16dsc7 = 0;
  const amrex::Real dscqss16dsc8 = x3696 - x3698;
  const amrex::Real dscqss16dsc9 = 0;
  const amrex::Real dscqss16dsc10 = 0;
  const amrex::Real dscqss16dsc11 = 0;
  const amrex::Real dscqss16dsc12 = 0;
  const amrex::Real dscqss16dsc13 = 0;
  const amrex::Real dscqss16dsc14 = 0;
  const amrex::Real dscqss16dsc15 = 0;
  const amrex::Real dscqss16dsc16 = 0;
  const amrex::Real dscqss16dsc17 = 0;
  const amrex::Real dscqss16dsc18 = 0;
  const amrex::Real dscqss16dsc19 = 0;
  const amrex::Real dscqss16dsc20 = 0;
  const amrex::Real dscqss16dsc21 = 0;
  const amrex::Real dscqss16dsc22 = 0;
  const amrex::Real dscqss16dsc23 = 0;
  const amrex::Real dscqss16dsc24 = 0;
  const amrex::Real dscqss16dsc25 = 0;
  const amrex::Real dscqss16dsc26 = 0;
  const amrex::Real dscqss16dsc27 = 0;
  const amrex::Real dscqss16dsc28 = 0;
  const amrex::Real dscqss16dsc29 = 0;
  const amrex::Real dscqss16dsc30 = 0;
  const amrex::Real dscqss16dsc31 = 0;
  const amrex::Real dscqss16dsc32 = -1.0 * x3700;
  const amrex::Real dscqss16dsc33 = x3701 * x3690;
  const amrex::Real dscqss16dsc34 = 0;
  const amrex::Real dscqss1dsc0 = x3703 + x3707;
  const amrex::Real dscqss1dsc1 = x3708 - x3709;
  const amrex::Real dscqss1dsc2 = x3710 - x3711;
  const amrex::Real dscqss1dsc3 = x3712 - x3713;
  const amrex::Real dscqss1dsc4 = x3714 - x3715;
  const amrex::Real dscqss1dsc5 = x3716 - x3717;
  const amrex::Real dscqss1dsc6 = x3718 - x3719;
  const amrex::Real dscqss1dsc7 = x3720 - x3721;
  const amrex::Real dscqss1dsc8 = x3722 - x3723;
  const amrex::Real dscqss1dsc9 = x3724 - x3725;
  const amrex::Real dscqss1dsc10 = x3726 - x3727;
  const amrex::Real dscqss1dsc11 = x3728 - x3729;
  const amrex::Real dscqss1dsc12 = x3730 - x3731;
  const amrex::Real dscqss1dsc13 = x3732 - x3733;
  const amrex::Real dscqss1dsc14 = x3734 - x3735;
  const amrex::Real dscqss1dsc15 = x3736 - x3737;
  const amrex::Real dscqss1dsc16 = x3738 - x3739;
  const amrex::Real dscqss1dsc17 = x3707 + x3740;
  const amrex::Real dscqss1dsc18 = x3741 - x3742;
  const amrex::Real dscqss1dsc19 = x3743 - x3744;
  const amrex::Real dscqss1dsc20 = x3707 + x3745;
  const amrex::Real dscqss1dsc21 = x3746 - x3747;
  const amrex::Real dscqss1dsc22 = x3748 - x3749;
  const amrex::Real dscqss1dsc23 = x3750 - x3751;
  const amrex::Real dscqss1dsc24 = x3752 - x3753;
  const amrex::Real dscqss1dsc25 = x3754 - x3755;
  const amrex::Real dscqss1dsc26 = x3756 - x3757;
  const amrex::Real dscqss1dsc27 = x3758 - x3759;
  const amrex::Real dscqss1dsc28 = x3760 - x3761;
  const amrex::Real dscqss1dsc29 = x3762 - x3763;
  const amrex::Real dscqss1dsc30 = x3764 - x3765;
  const amrex::Real dscqss1dsc31 = x3707 + x3766;
  const amrex::Real dscqss1dsc32 = x3707 + x3767;
  const amrex::Real dscqss1dsc33 = x3707 + x3768;
  const amrex::Real dscqss1dsc34 = x3769 - x3770;
  const amrex::Real dscqss17dsc0 = 0;
  const amrex::Real dscqss17dsc1 = 0;
  const amrex::Real dscqss17dsc2 = 0;
  const amrex::Real dscqss17dsc3 = -x894 * x3682;
  const amrex::Real dscqss17dsc4 = 0;
  const amrex::Real dscqss17dsc5 = 0;
  const amrex::Real dscqss17dsc6 = 0;
  const amrex::Real dscqss17dsc7 = 0;
  const amrex::Real dscqss17dsc8 = -x3692 * x3771;
  const amrex::Real dscqss17dsc9 = 0;
  const amrex::Real dscqss17dsc10 = 0;
  const amrex::Real dscqss17dsc11 = 0;
  const amrex::Real dscqss17dsc12 = 0;
  const amrex::Real dscqss17dsc13 = 0;
  const amrex::Real dscqss17dsc14 = 0;
  const amrex::Real dscqss17dsc15 = 0;
  const amrex::Real dscqss17dsc16 = 0;
  const amrex::Real dscqss17dsc17 = 0;
  const amrex::Real dscqss17dsc18 = 0;
  const amrex::Real dscqss17dsc19 = 0;
  const amrex::Real dscqss17dsc20 = 0;
  const amrex::Real dscqss17dsc21 = 0;
  const amrex::Real dscqss17dsc22 = 0;
  const amrex::Real dscqss17dsc23 = 0;
  const amrex::Real dscqss17dsc24 = 0;
  const amrex::Real dscqss17dsc25 = 0;
  const amrex::Real dscqss17dsc26 = 0;
  const amrex::Real dscqss17dsc27 = 0;
  const amrex::Real dscqss17dsc28 = 0;
  const amrex::Real dscqss17dsc29 = 0;
  const amrex::Real dscqss17dsc30 = 0;
  const amrex::Real dscqss17dsc31 = 0;
  const amrex::Real dscqss17dsc32 = 0;
  const amrex::Real dscqss17dsc33 = -x894 * x3701;
  const amrex::Real dscqss17dsc34 = 0;
  const amrex::Real dscqss2dsc0 = x3775 + x3779;
  const amrex::Real dscqss2dsc1 = -x3780 + x3781;
  const amrex::Real dscqss2dsc2 = -x3782 + x3784;
  const amrex::Real dscqss2dsc3 = -x3785 + x3786;
  const amrex::Real dscqss2dsc4 = -x3787 + x3788;
  const amrex::Real dscqss2dsc5 = -x3789 + x3790;
  const amrex::Real dscqss2dsc6 = -x3791 + x3792;
  const amrex::Real dscqss2dsc7 = -x3793 + x3794;
  const amrex::Real dscqss2dsc8 = -x3795 + x3796;
  const amrex::Real dscqss2dsc9 = -x3797 + x3798;
  const amrex::Real dscqss2dsc10 = -x3799 + x3800;
  const amrex::Real dscqss2dsc11 = -x3801 + x3802;
  const amrex::Real dscqss2dsc12 = -x3803 + x3804;
  const amrex::Real dscqss2dsc13 = -x3805 + x3806;
  const amrex::Real dscqss2dsc14 = -x3807 + x3808;
  const amrex::Real dscqss2dsc15 = -x3809 + x3810;
  const amrex::Real dscqss2dsc16 = -x3811 + x3812;
  const amrex::Real dscqss2dsc17 = x3775 + x3813;
  const amrex::Real dscqss2dsc18 = -x3814 + x3815;
  const amrex::Real dscqss2dsc19 = -x3816 + x3817;
  const amrex::Real dscqss2dsc20 = x3775 + x3818;
  const amrex::Real dscqss2dsc21 = -x3819 + x3820;
  const amrex::Real dscqss2dsc22 = -x3821 + x3822;
  const amrex::Real dscqss2dsc23 = -x3823 + x3824;
  const amrex::Real dscqss2dsc24 = -x3825 + x3826;
  const amrex::Real dscqss2dsc25 = -x3827 + x3828;
  const amrex::Real dscqss2dsc26 = -x3829 + x3830;
  const amrex::Real dscqss2dsc27 = -x3831 + x3832;
  const amrex::Real dscqss2dsc28 = -x3833 + x3834;
  const amrex::Real dscqss2dsc29 = -x3835 + x3836;
  const amrex::Real dscqss2dsc30 = -x3837 + x3838;
  const amrex::Real dscqss2dsc31 = x3775 + x3839;
  const amrex::Real dscqss2dsc32 = x3775 + x3840;
  const amrex::Real dscqss2dsc33 = x3775 + x3841;
  const amrex::Real dscqss2dsc34 = x3775 + x3842;
  const amrex::Real dscqss3dsc0 = x3846;
  const amrex::Real dscqss3dsc1 = x3847;
  const amrex::Real dscqss3dsc2 = x3848;
  const amrex::Real dscqss3dsc3 = x3849;
  const amrex::Real dscqss3dsc4 = x3850;
  const amrex::Real dscqss3dsc5 = x3852;
  const amrex::Real dscqss3dsc6 = x3853;
  const amrex::Real dscqss3dsc7 = x3846;
  const amrex::Real dscqss3dsc8 = x3854;
  const amrex::Real dscqss3dsc9 = x3855;
  const amrex::Real dscqss3dsc10 = x3856;
  const amrex::Real dscqss3dsc11 = x3857;
  const amrex::Real dscqss3dsc12 = x3858;
  const amrex::Real dscqss3dsc13 = x3856;
  const amrex::Real dscqss3dsc14 = x3846;
  const amrex::Real dscqss3dsc15 = x3846;
  const amrex::Real dscqss3dsc16 = x3859;
  const amrex::Real dscqss3dsc17 = x3846;
  const amrex::Real dscqss3dsc18 = x3846;
  const amrex::Real dscqss3dsc19 = x3846;
  const amrex::Real dscqss3dsc20 = x3846;
  const amrex::Real dscqss3dsc21 = x3846;
  const amrex::Real dscqss3dsc22 = x3846;
  const amrex::Real dscqss3dsc23 = x3846;
  const amrex::Real dscqss3dsc24 = x3846;
  const amrex::Real dscqss3dsc25 = x3846;
  const amrex::Real dscqss3dsc26 = x3846;
  const amrex::Real dscqss3dsc27 = x3846;
  const amrex::Real dscqss3dsc28 = x3846;
  const amrex::Real dscqss3dsc29 = x3846;
  const amrex::Real dscqss3dsc30 = x3846;
  const amrex::Real dscqss3dsc31 = x3846;
  const amrex::Real dscqss3dsc32 = x3846;
  const amrex::Real dscqss3dsc33 = x3846;
  const amrex::Real dscqss3dsc34 = x3846;
  const amrex::Real dscqss4dsc0 = x3863;
  const amrex::Real dscqss4dsc1 = x3864;
  const amrex::Real dscqss4dsc2 = x3865;
  const amrex::Real dscqss4dsc3 = x3866;
  const amrex::Real dscqss4dsc4 = x3867;
  const amrex::Real dscqss4dsc5 = x3868;
  const amrex::Real dscqss4dsc6 = x3869;
  const amrex::Real dscqss4dsc7 = x3870;
  const amrex::Real dscqss4dsc8 = x3871;
  const amrex::Real dscqss4dsc9 = x3872;
  const amrex::Real dscqss4dsc10 = x3873;
  const amrex::Real dscqss4dsc11 = x3874;
  const amrex::Real dscqss4dsc12 = x3875;
  const amrex::Real dscqss4dsc13 = x3876;
  const amrex::Real dscqss4dsc14 = x3878;
  const amrex::Real dscqss4dsc15 = x3879;
  const amrex::Real dscqss4dsc16 = x3880;
  const amrex::Real dscqss4dsc17 = x3881;
  const amrex::Real dscqss4dsc18 = x3882;
  const amrex::Real dscqss4dsc19 = x3883;
  const amrex::Real dscqss4dsc20 = x3884;
  const amrex::Real dscqss4dsc21 = x3885;
  const amrex::Real dscqss4dsc22 = x3886;
  const amrex::Real dscqss4dsc23 = x3887;
  const amrex::Real dscqss4dsc24 = x3863;
  const amrex::Real dscqss4dsc25 = x3863;
  const amrex::Real dscqss4dsc26 = x3863;
  const amrex::Real dscqss4dsc27 = x3863;
  const amrex::Real dscqss4dsc28 = x3863;
  const amrex::Real dscqss4dsc29 = x3863;
  const amrex::Real dscqss4dsc30 = x3863;
  const amrex::Real dscqss4dsc31 = x3863;
  const amrex::Real dscqss4dsc32 = x3863;
  const amrex::Real dscqss4dsc33 = x3863;
  const amrex::Real dscqss4dsc34 = x3863;
  const amrex::Real dscqss5dsc0 = x3891 + x3895;
  const amrex::Real dscqss5dsc1 = x3898 - x3899;
  const amrex::Real dscqss5dsc2 = x3900 - x3901;
  const amrex::Real dscqss5dsc3 = x3902 - x3903;
  const amrex::Real dscqss5dsc4 = x3904 - x3905;
  const amrex::Real dscqss5dsc5 = x3906 - x3907;
  const amrex::Real dscqss5dsc6 = x3908 - x3909;
  const amrex::Real dscqss5dsc7 = x3910 - x3911;
  const amrex::Real dscqss5dsc8 = x3912 - x3913;
  const amrex::Real dscqss5dsc9 = x3914 - x3915;
  const amrex::Real dscqss5dsc10 = x3916 - x3917;
  const amrex::Real dscqss5dsc11 = x3918 - x3919;
  const amrex::Real dscqss5dsc12 = x3920 - x3921;
  const amrex::Real dscqss5dsc13 = x3922 - x3923;
  const amrex::Real dscqss5dsc14 = x3925;
  const amrex::Real dscqss5dsc15 = x3926 - x3927;
  const amrex::Real dscqss5dsc16 = x3928 - x3929;
  const amrex::Real dscqss5dsc17 = x3925;
  const amrex::Real dscqss5dsc18 = x3895 + x3930;
  const amrex::Real dscqss5dsc19 = x3931 - x3932;
  const amrex::Real dscqss5dsc20 = x3925;
  const amrex::Real dscqss5dsc21 = x3925;
  const amrex::Real dscqss5dsc22 = x3933 - x3934;
  const amrex::Real dscqss5dsc23 = x3935 - x3936;
  const amrex::Real dscqss5dsc24 = x3937 - x3938;
  const amrex::Real dscqss5dsc25 = x3939 - x3940;
  const amrex::Real dscqss5dsc26 = x3941 - x3942;
  const amrex::Real dscqss5dsc27 = x3943 - x3944;
  const amrex::Real dscqss5dsc28 = x3945 - x3946;
  const amrex::Real dscqss5dsc29 = x3947 - x3948;
  const amrex::Real dscqss5dsc30 = x3949 - x3950;
  const amrex::Real dscqss5dsc31 = x3895 + x3951;
  const amrex::Real dscqss5dsc32 = x3895 + x3952;
  const amrex::Real dscqss5dsc33 = x3895 + x3953;
  const amrex::Real dscqss5dsc34 = x3925;
  const amrex::Real dscqss6dsc0 = x3955 + x3959;
  const amrex::Real dscqss6dsc1 = x3960 - x3961;
  const amrex::Real dscqss6dsc2 = x3962 - x3963;
  const amrex::Real dscqss6dsc3 = x3964 - x3965;
  const amrex::Real dscqss6dsc4 = x3966 - x3967;
  const amrex::Real dscqss6dsc5 = x3968 - x3969;
  const amrex::Real dscqss6dsc6 = x3970 - x3971;
  const amrex::Real dscqss6dsc7 = x3972 - x3973;
  const amrex::Real dscqss6dsc8 = x3974 - x3975;
  const amrex::Real dscqss6dsc9 = x3976 - x3977;
  const amrex::Real dscqss6dsc10 = x3978 - x3979;
  const amrex::Real dscqss6dsc11 = x3980 - x3981;
  const amrex::Real dscqss6dsc12 = x3982 - x3983;
  const amrex::Real dscqss6dsc13 = x3984 - x3985;
  const amrex::Real dscqss6dsc14 = x3987;
  const amrex::Real dscqss6dsc15 = x3988 - x3989;
  const amrex::Real dscqss6dsc16 = x3990 - x3991;
  const amrex::Real dscqss6dsc17 = x3987;
  const amrex::Real dscqss6dsc18 = x3987;
  const amrex::Real dscqss6dsc19 = x3992 - x3993;
  const amrex::Real dscqss6dsc20 = x3987;
  const amrex::Real dscqss6dsc21 = x3987;
  const amrex::Real dscqss6dsc22 = x3994 - x3995;
  const amrex::Real dscqss6dsc23 = x3996 - x3997;
  const amrex::Real dscqss6dsc24 = x3998 - x3999;
  const amrex::Real dscqss6dsc25 = x4000 - x4001;
  const amrex::Real dscqss6dsc26 = x4002 - x4003;
  const amrex::Real dscqss6dsc27 = x4004 - x4005;
  const amrex::Real dscqss6dsc28 = x4006 - x4007;
  const amrex::Real dscqss6dsc29 = x4008 - x4009;
  const amrex::Real dscqss6dsc30 = x3959 + x4010;
  const amrex::Real dscqss6dsc31 = x3959 + x4011;
  const amrex::Real dscqss6dsc32 = x3959 + x4012;
  const amrex::Real dscqss6dsc33 = x3987;
  const amrex::Real dscqss6dsc34 = x3987;
  const amrex::Real dscqss7dsc0 = x4016 + x4018;
  const amrex::Real dscqss7dsc1 = -x4019 + x4020;
  const amrex::Real dscqss7dsc2 = -x4021 + x4022;
  const amrex::Real dscqss7dsc3 = -x4023 + x4024;
  const amrex::Real dscqss7dsc4 = -x4025 + x4026;
  const amrex::Real dscqss7dsc5 = -x4027 + x4028;
  const amrex::Real dscqss7dsc6 = -x4029 + x4030;
  const amrex::Real dscqss7dsc7 = -x4031 + x4032;
  const amrex::Real dscqss7dsc8 = -x4033 + x4034;
  const amrex::Real dscqss7dsc9 = -x4035 + x4036;
  const amrex::Real dscqss7dsc10 = -x4037 + x4038;
  const amrex::Real dscqss7dsc11 = x4016 + x4039;
  const amrex::Real dscqss7dsc12 = -x4040 + x4041;
  const amrex::Real dscqss7dsc13 = -x4042 + x4043;
  const amrex::Real dscqss7dsc14 = x4045;
  const amrex::Real dscqss7dsc15 = -x4046 + x4047;
  const amrex::Real dscqss7dsc16 = -x4048 + x4049;
  const amrex::Real dscqss7dsc17 = x4045;
  const amrex::Real dscqss7dsc18 = x4045;
  const amrex::Real dscqss7dsc19 = -x4050 + x4051;
  const amrex::Real dscqss7dsc20 = x4045;
  const amrex::Real dscqss7dsc21 = x4045;
  const amrex::Real dscqss7dsc22 = -x4052 + x4053;
  const amrex::Real dscqss7dsc23 = -x4054 + x4055;
  const amrex::Real dscqss7dsc24 = -x4056 + x4057;
  const amrex::Real dscqss7dsc25 = -x4058 + x4059;
  const amrex::Real dscqss7dsc26 = -x4060 + x4061;
  const amrex::Real dscqss7dsc27 = -x4062 + x4063;
  const amrex::Real dscqss7dsc28 = x4016 + x4064;
  const amrex::Real dscqss7dsc29 = x4016 + x4065;
  const amrex::Real dscqss7dsc30 = x4016 + x4066;
  const amrex::Real dscqss7dsc31 = x4016 + x4067;
  const amrex::Real dscqss7dsc32 = x4016 + x4068;
  const amrex::Real dscqss7dsc33 = x4045;
  const amrex::Real dscqss7dsc34 = x4045;
  const amrex::Real dscqss9dsc0 = x4070 + x4074;
  const amrex::Real dscqss9dsc1 = x4074 + x4075;
  const amrex::Real dscqss9dsc2 = x4074 + x4076;
  const amrex::Real dscqss9dsc3 = x4077 - x4078;
  const amrex::Real dscqss9dsc4 = x4079 - x4080;
  const amrex::Real dscqss9dsc5 = x4081 - x4082;
  const amrex::Real dscqss9dsc6 = x4083 - x4084;
  const amrex::Real dscqss9dsc7 = x4085 - x4086;
  const amrex::Real dscqss9dsc8 = x4087 - x4088;
  const amrex::Real dscqss9dsc9 = x4074 + x4089;
  const amrex::Real dscqss9dsc10 = x4090 - x4091;
  const amrex::Real dscqss9dsc11 = x4093;
  const amrex::Real dscqss9dsc12 = x4094 - x4095;
  const amrex::Real dscqss9dsc13 = x4096 - x4097;
  const amrex::Real dscqss9dsc14 = x4093;
  const amrex::Real dscqss9dsc15 = x4098 - x4099;
  const amrex::Real dscqss9dsc16 = x4100 - x4101;
  const amrex::Real dscqss9dsc17 = x4093;
  const amrex::Real dscqss9dsc18 = x4093;
  const amrex::Real dscqss9dsc19 = x4102 - x4103;
  const amrex::Real dscqss9dsc20 = x4093;
  const amrex::Real dscqss9dsc21 = x4093;
  const amrex::Real dscqss9dsc22 = x4104 - x4105;
  const amrex::Real dscqss9dsc23 = x4106 - x4107;
  const amrex::Real dscqss9dsc24 = x4108 - x4109;
  const amrex::Real dscqss9dsc25 = x4110 - x4111;
  const amrex::Real dscqss9dsc26 = x4112 - x4113;
  const amrex::Real dscqss9dsc27 = x4074 + x4114;
  const amrex::Real dscqss9dsc28 = x4074 + x4115;
  const amrex::Real dscqss9dsc29 = x4074 + x4116;
  const amrex::Real dscqss9dsc30 = x4074 + x4117;
  const amrex::Real dscqss9dsc31 = x4074 + x4118;
  const amrex::Real dscqss9dsc32 = x4074 + x4119;
  const amrex::Real dscqss9dsc33 = x4093;
  const amrex::Real dscqss9dsc34 = x4093;
  const amrex::Real dscqss11dsc0 = x4123 + x4127;
  const amrex::Real dscqss11dsc1 = x4123 + x4128;
  const amrex::Real dscqss11dsc2 = x4123 + x4129;
  const amrex::Real dscqss11dsc3 = -x4130 + x4131;
  const amrex::Real dscqss11dsc4 = -x4132 + x4133;
  const amrex::Real dscqss11dsc5 = -x4134 + x4136;
  const amrex::Real dscqss11dsc6 = -x4137 + x4138;
  const amrex::Real dscqss11dsc7 = -x4139 + x4140;
  const amrex::Real dscqss11dsc8 = -x4141 + x4142;
  const amrex::Real dscqss11dsc9 = x4123 + x4143;
  const amrex::Real dscqss11dsc10 = -x4144 + x4145;
  const amrex::Real dscqss11dsc11 = x4147;
  const amrex::Real dscqss11dsc12 = -x4148 + x4149;
  const amrex::Real dscqss11dsc13 = -x4150 + x4151;
  const amrex::Real dscqss11dsc14 = x4147;
  const amrex::Real dscqss11dsc15 = -x4152 + x4153;
  const amrex::Real dscqss11dsc16 = -x4154 + x4155;
  const amrex::Real dscqss11dsc17 = x4147;
  const amrex::Real dscqss11dsc18 = x4147;
  const amrex::Real dscqss11dsc19 = -x4156 + x4157;
  const amrex::Real dscqss11dsc20 = x4147;
  const amrex::Real dscqss11dsc21 = x4147;
  const amrex::Real dscqss11dsc22 = -x4158 + x4159;
  const amrex::Real dscqss11dsc23 = -x4160 + x4161;
  const amrex::Real dscqss11dsc24 = -x4162 + x4163;
  const amrex::Real dscqss11dsc25 = x4147;
  const amrex::Real dscqss11dsc26 = -x4164 + x4165;
  const amrex::Real dscqss11dsc27 = x4123 + x4166;
  const amrex::Real dscqss11dsc28 = x4123 + x4167;
  const amrex::Real dscqss11dsc29 = x4123 + x4168;
  const amrex::Real dscqss11dsc30 = x4123 + x4169;
  const amrex::Real dscqss11dsc31 = x4123 + x4170;
  const amrex::Real dscqss11dsc32 = x4123 + x4171;
  const amrex::Real dscqss11dsc33 = x4147;
  const amrex::Real dscqss11dsc34 = x4147;
  const amrex::Real dscqss12dsc0 = x4175 + x4179;
  const amrex::Real dscqss12dsc1 = x4179 + x4180;
  const amrex::Real dscqss12dsc2 = x4179 + x4181;
  const amrex::Real dscqss12dsc3 = x4182 - x4183;
  const amrex::Real dscqss12dsc4 = x4184 - x4185;
  const amrex::Real dscqss12dsc5 = x4187 - x4188;
  const amrex::Real dscqss12dsc6 = x4189 - x4190;
  const amrex::Real dscqss12dsc7 = x4191 - x4192;
  const amrex::Real dscqss12dsc8 = x4193 - x4194;
  const amrex::Real dscqss12dsc9 = x4179 + x4195;
  const amrex::Real dscqss12dsc10 = x4196 - x4197;
  const amrex::Real dscqss12dsc11 = x4199;
  const amrex::Real dscqss12dsc12 = x4200 - x4201;
  const amrex::Real dscqss12dsc13 = x4202 - x4203;
  const amrex::Real dscqss12dsc14 = x4199;
  const amrex::Real dscqss12dsc15 = x4204 - x4205;
  const amrex::Real dscqss12dsc16 = x4206 - x4207;
  const amrex::Real dscqss12dsc17 = x4199;
  const amrex::Real dscqss12dsc18 = x4199;
  const amrex::Real dscqss12dsc19 = x4208 - x4209;
  const amrex::Real dscqss12dsc20 = x4199;
  const amrex::Real dscqss12dsc21 = x4199;
  const amrex::Real dscqss12dsc22 = x4199;
  const amrex::Real dscqss12dsc23 = x4210 - x4211;
  const amrex::Real dscqss12dsc24 = x4212 - x4213;
  const amrex::Real dscqss12dsc25 = x4199;
  const amrex::Real dscqss12dsc26 = x4214 - x4215;
  const amrex::Real dscqss12dsc27 = x4179 + x4216;
  const amrex::Real dscqss12dsc28 = x4179 + x4217;
  const amrex::Real dscqss12dsc29 = x4179 + x4218;
  const amrex::Real dscqss12dsc30 = x4179 + x4219;
  const amrex::Real dscqss12dsc31 = x4179 + x4220;
  const amrex::Real dscqss12dsc32 = x4179 + x4221;
  const amrex::Real dscqss12dsc33 = x4199;
  const amrex::Real dscqss12dsc34 = x4199;
  const amrex::Real dscqss14dsc0 = -x1877;
  const amrex::Real dscqss14dsc1 = -x2088;
  const amrex::Real dscqss14dsc2 = -x2158;
  const amrex::Real dscqss14dsc3 = x4223;
  const amrex::Real dscqss14dsc4 = x4224;
  const amrex::Real dscqss14dsc5 = x4225;
  const amrex::Real dscqss14dsc6 = x4226;
  const amrex::Real dscqss14dsc7 = x4227;
  const amrex::Real dscqss14dsc8 = x4228;
  const amrex::Real dscqss14dsc9 = -x2764;
  const amrex::Real dscqss14dsc10 = x4229;
  const amrex::Real dscqss14dsc11 = 0;
  const amrex::Real dscqss14dsc12 = 0;
  const amrex::Real dscqss14dsc13 = 0;
  const amrex::Real dscqss14dsc14 = 0;
  const amrex::Real dscqss14dsc15 = 0;
  const amrex::Real dscqss14dsc16 = 0;
  const amrex::Real dscqss14dsc17 = 0;
  const amrex::Real dscqss14dsc18 = 0;
  const amrex::Real dscqss14dsc19 = -x3297;
  const amrex::Real dscqss14dsc20 = 0;
  const amrex::Real dscqss14dsc21 = 0;
  const amrex::Real dscqss14dsc22 = -x3326 * sc_qss[11];
  const amrex::Real dscqss14dsc23 = 0;
  const amrex::Real dscqss14dsc24 = 0;
  const amrex::Real dscqss14dsc25 = 0;
  const amrex::Real dscqss14dsc26 = 0;
  const amrex::Real dscqss14dsc27 = 0;
  const amrex::Real dscqss14dsc28 = 0;
  const amrex::Real dscqss14dsc29 = -x3597;
  const amrex::Real dscqss14dsc30 = 0;
  const amrex::Real dscqss14dsc31 = -x3640;
  const amrex::Real dscqss14dsc32 = -x3654;
  const amrex::Real dscqss14dsc33 = 0;
  const amrex::Real dscqss14dsc34 = 0;
  const amrex::Real dscqss13dsc0 = x1886 + x4234;
  const amrex::Real dscqss13dsc1 = x2084 + x4234;
  const amrex::Real dscqss13dsc2 = x2159 + x4234;
  const amrex::Real dscqss13dsc3 = -x4235 + x4238;
  const amrex::Real dscqss13dsc4 = -x4239 + x4240;
  const amrex::Real dscqss13dsc5 = -x4241 + x4242;
  const amrex::Real dscqss13dsc6 = -x4243 + x4244;
  const amrex::Real dscqss13dsc7 = -x4245 + x4246;
  const amrex::Real dscqss13dsc8 = -x4247 + x4248;
  const amrex::Real dscqss13dsc9 = x2765 + x4234;
  const amrex::Real dscqss13dsc10 = -x4249 + x4250;
  const amrex::Real dscqss13dsc11 = x4251;
  const amrex::Real dscqss13dsc12 = x2969 - x4252;
  const amrex::Real dscqss13dsc13 = x3024 - x4253;
  const amrex::Real dscqss13dsc14 = x4251;
  const amrex::Real dscqss13dsc15 = -x4254 + x4255;
  const amrex::Real dscqss13dsc16 = x3217 - x4256;
  const amrex::Real dscqss13dsc17 = x4251;
  const amrex::Real dscqss13dsc18 = x4251;
  const amrex::Real dscqss13dsc19 = x3298 - x4257;
  const amrex::Real dscqss13dsc20 = x4251;
  const amrex::Real dscqss13dsc21 = x4251;
  const amrex::Real dscqss13dsc22 = x4251;
  const amrex::Real dscqss13dsc23 = x3390 - x4258;
  const amrex::Real dscqss13dsc24 = x3438 - x4259;
  const amrex::Real dscqss13dsc25 = x4251;
  const amrex::Real dscqss13dsc26 = x3508 - x4260;
  const amrex::Real dscqss13dsc27 = x3539 + x4234;
  const amrex::Real dscqss13dsc28 = x3568 + x4234;
  const amrex::Real dscqss13dsc29 = x3598 + x4234;
  const amrex::Real dscqss13dsc30 = x3625 + x4234;
  const amrex::Real dscqss13dsc31 = x3641 + x4234;
  const amrex::Real dscqss13dsc32 = x3655 + x4234;
  const amrex::Real dscqss13dsc33 = x4251;
  const amrex::Real dscqss13dsc34 = x4251;
  const amrex::Real dscqss15dsc0 = x4264 + x4266;
  const amrex::Real dscqss15dsc1 = x4264 + x4267;
  const amrex::Real dscqss15dsc2 = x4264 + x4269;
  const amrex::Real dscqss15dsc3 = -x4270 + x4275;
  const amrex::Real dscqss15dsc4 = -x4276 + x4277;
  const amrex::Real dscqss15dsc5 = -x4278 + x4279;
  const amrex::Real dscqss15dsc6 = -x4280 + x4281;
  const amrex::Real dscqss15dsc7 = -x4282 + x4283;
  const amrex::Real dscqss15dsc8 = -x4284 + x4285;
  const amrex::Real dscqss15dsc9 = x4264 + x4286;
  const amrex::Real dscqss15dsc10 = -x4287 + x4288;
  const amrex::Real dscqss15dsc11 = x4290;
  const amrex::Real dscqss15dsc12 = -x4291 + x4292;
  const amrex::Real dscqss15dsc13 = -x4293 + x4294;
  const amrex::Real dscqss15dsc14 = x4290;
  const amrex::Real dscqss15dsc15 = -x4295 + x4296;
  const amrex::Real dscqss15dsc16 = -x4297 + x4298;
  const amrex::Real dscqss15dsc17 = x4290;
  const amrex::Real dscqss15dsc18 = x4290;
  const amrex::Real dscqss15dsc19 = -x4299 + x4300;
  const amrex::Real dscqss15dsc20 = x4290;
  const amrex::Real dscqss15dsc21 = x4290;
  const amrex::Real dscqss15dsc22 = x4290;
  const amrex::Real dscqss15dsc23 = -x4301 + x4302;
  const amrex::Real dscqss15dsc24 = -x4303 + x4304;
  const amrex::Real dscqss15dsc25 = x4264 + x4305;
  const amrex::Real dscqss15dsc26 = -x4306 + x4307;
  const amrex::Real dscqss15dsc27 = x4264 + x4308;
  const amrex::Real dscqss15dsc28 = x4264 + x4309;
  const amrex::Real dscqss15dsc29 = x4264 + x4310;
  const amrex::Real dscqss15dsc30 = x4264 + x4311;
  const amrex::Real dscqss15dsc31 = x4264 + x4312;
  const amrex::Real dscqss15dsc32 = x4264 + x4313;
  const amrex::Real dscqss15dsc33 = x4290;
  const amrex::Real dscqss15dsc34 = x4290;
  const amrex::Real dscqss8dsc0 = x4317 + x4321;
  const amrex::Real dscqss8dsc1 = x4317 + x4322;
  const amrex::Real dscqss8dsc2 = x4324;
  const amrex::Real dscqss8dsc3 = x4324;
  const amrex::Real dscqss8dsc4 = x4324;
  const amrex::Real dscqss8dsc5 = x4327;
  const amrex::Real dscqss8dsc6 = -x4328 + x4329;
  const amrex::Real dscqss8dsc7 = x4324;
  const amrex::Real dscqss8dsc8 = x4324;
  const amrex::Real dscqss8dsc9 = x4324;
  const amrex::Real dscqss8dsc10 = x4327;
  const amrex::Real dscqss8dsc11 = x4324;
  const amrex::Real dscqss8dsc12 = -x4330 + x4331;
  const amrex::Real dscqss8dsc13 = x4327;
  const amrex::Real dscqss8dsc14 = x4324;
  const amrex::Real dscqss8dsc15 = -x4332 + x4333;
  const amrex::Real dscqss8dsc16 = -x4334 + x4335;
  const amrex::Real dscqss8dsc17 = x4324;
  const amrex::Real dscqss8dsc18 = x4324;
  const amrex::Real dscqss8dsc19 = -x4336 + x4337;
  const amrex::Real dscqss8dsc20 = x4324;
  const amrex::Real dscqss8dsc21 = x4324;
  const amrex::Real dscqss8dsc22 = x4324;
  const amrex::Real dscqss8dsc23 = -x4338 + x4339;
  const amrex::Real dscqss8dsc24 = -x4340 + x4341;
  const amrex::Real dscqss8dsc25 = x4324;
  const amrex::Real dscqss8dsc26 = -x4342 + x4343;
  const amrex::Real dscqss8dsc27 = x4317 + x4344;
  const amrex::Real dscqss8dsc28 = x4317 + x4345;
  const amrex::Real dscqss8dsc29 = x4317 + x4346;
  const amrex::Real dscqss8dsc30 = x4317 + x4347;
  const amrex::Real dscqss8dsc31 = x4317 + x4348;
  const amrex::Real dscqss8dsc32 = x4324;
  const amrex::Real dscqss8dsc33 = x4324;
  const amrex::Real dscqss8dsc34 = x4324;
  const amrex::Real dscqss10dsc0 = x4354;
  const amrex::Real dscqss10dsc1 = x4355;
  const amrex::Real dscqss10dsc2 = x4357;
  const amrex::Real dscqss10dsc3 = x4357;
  const amrex::Real dscqss10dsc4 = x4357;
  const amrex::Real dscqss10dsc5 = x4358;
  const amrex::Real dscqss10dsc6 = x4359;
  const amrex::Real dscqss10dsc7 = x4357;
  const amrex::Real dscqss10dsc8 = x4357;
  const amrex::Real dscqss10dsc9 = x4357;
  const amrex::Real dscqss10dsc10 = x4358;
  const amrex::Real dscqss10dsc11 = x4357;
  const amrex::Real dscqss10dsc12 = x4360;
  const amrex::Real dscqss10dsc13 = x4358;
  const amrex::Real dscqss10dsc14 = x4357;
  const amrex::Real dscqss10dsc15 = x4361;
  const amrex::Real dscqss10dsc16 = x4362;
  const amrex::Real dscqss10dsc17 = x4357;
  const amrex::Real dscqss10dsc18 = x4357;
  const amrex::Real dscqss10dsc19 = x4363;
  const amrex::Real dscqss10dsc20 = x4357;
  const amrex::Real dscqss10dsc21 = x4357;
  const amrex::Real dscqss10dsc22 = x4357;
  const amrex::Real dscqss10dsc23 = x4364;
  const amrex::Real dscqss10dsc24 = x4365;
  const amrex::Real dscqss10dsc25 = x4357;
  const amrex::Real dscqss10dsc26 = x4366;
  const amrex::Real dscqss10dsc27 = x4357;
  const amrex::Real dscqss10dsc28 = x4367;
  const amrex::Real dscqss10dsc29 = x4368;
  const amrex::Real dscqss10dsc30 = x4369;
  const amrex::Real dscqss10dsc31 = x4370;
  const amrex::Real dscqss10dsc32 = x4357;
  const amrex::Real dscqss10dsc33 = x4357;
  const amrex::Real dscqss10dsc34 = x4357;
  const amrex::Real dwdot0dscqss0 = 0;
  const amrex::Real dwdot0dscqss16 = 0;
  const amrex::Real dwdot0dscqss1 = 0;
  const amrex::Real dwdot0dscqss17 = 0;
  const amrex::Real dwdot0dscqss2 = 0;
  const amrex::Real dwdot0dscqss3 = 0;
  const amrex::Real dwdot0dscqss4 = 0;
  const amrex::Real dwdot0dscqss5 =
    x4374 + x4379 + x4384 + x4390 + x4395 + x4401 + x4407;
  const amrex::Real dwdot0dscqss6 =
    x4408 + x4409 + x4410 + x4411 + x4412 + x4413;
  const amrex::Real dwdot0dscqss7 =
    x4415 + x4417 + x4419 + x4421 + x4423 + x4425;
  const amrex::Real dwdot0dscqss9 =
    x4427 + x4429 + x4431 + x4433 + x4435 + x4437;
  const amrex::Real dwdot0dscqss11 =
    x4441 + x4445 + x4449 + x4453 + x4457 + x4461;
  const amrex::Real dwdot0dscqss12 =
    x4466 + x4471 + x4476 + x4483 + x4488 + x4493;
  const amrex::Real dwdot0dscqss14 = 0;
  const amrex::Real dwdot0dscqss13 =
    x4495 + x4497 + x4499 + x4501 + x4503 + x4505;
  const amrex::Real dwdot0dscqss15 = 0;
  const amrex::Real dwdot0dscqss8 = 0;
  const amrex::Real dwdot0dscqss10 = 0;
  const amrex::Real dwdot1dscqss0 = x4507 + x4509 + x4513 + x4515 + x4518 +
                                    x4524 + x4540 + x4543 + x4545 + x4548 +
                                    x4552 + x4556 + x4563 + x4572;
  const amrex::Real dwdot1dscqss16 = 0;
  const amrex::Real dwdot1dscqss1 =
    x4578 + x4584 + x4601 + x4621 - x4622 + x4623 - x4624 - x4625 - x4626 +
    x4631 + x4633 - x4637 + x4639 + x4641 + x4660 + x591 * x4605 + x869 * x4632;
  const amrex::Real dwdot1dscqss17 = 0;
  const amrex::Real dwdot1dscqss2 = x4665 + x4684 + x4686 + x4688 + x4690 +
                                    x4691 + x4692 - x4693 + x4712 + x4714 +
                                    x4719 + x796 * x4605;
  const amrex::Real dwdot1dscqss3 = 0;
  const amrex::Real dwdot1dscqss4 = 0;
  const amrex::Real dwdot1dscqss5 =
    x4390 + x4722 - x4724 - x4727 + x4740 + x4743;
  const amrex::Real dwdot1dscqss6 =
    x4412 + x4746 + x4750 + x4754 + x4757 - x4758 + x4765 - x901 * x4726;
  const amrex::Real dwdot1dscqss7 = x4423 + x4768 + x4770 + x4773;
  const amrex::Real dwdot1dscqss9 = x4435 + x4777 + x4780;
  const amrex::Real dwdot1dscqss11 = x4457 + x4783;
  const amrex::Real dwdot1dscqss12 = x4466;
  const amrex::Real dwdot1dscqss14 = 0;
  const amrex::Real dwdot1dscqss13 = x4503;
  const amrex::Real dwdot1dscqss15 = x4784 + x4788 + x4792 + x4793 + x4796;
  const amrex::Real dwdot1dscqss8 = x4798 + x4799 + x4801;
  const amrex::Real dwdot1dscqss10 = 0;
  const amrex::Real dwdot2dscqss0 =
    -x4518 - x4543 + x4808 + x4813 - x891 * x4553 + x898 * x4802;
  const amrex::Real dwdot2dscqss16 = 0;
  const amrex::Real dwdot2dscqss1 = x4622 + x4624 - x4816 + x4818 + x4820 +
                                    x4826 + x4827 + x4831 + x4832 -
                                    x899 * x4802;
  const amrex::Real dwdot2dscqss17 = 0;
  const amrex::Real dwdot2dscqss2 =
    -x4833 + x4838 + x4840 + x4845 + x4846 + x4848 + x4853;
  const amrex::Real dwdot2dscqss3 = 0;
  const amrex::Real dwdot2dscqss4 = 0;
  const amrex::Real dwdot2dscqss5 = x4395 - x4855 + x4857;
  const amrex::Real dwdot2dscqss6 = x4409 - x4858;
  const amrex::Real dwdot2dscqss7 = x4415;
  const amrex::Real dwdot2dscqss9 = x4431;
  const amrex::Real dwdot2dscqss11 = x4449;
  const amrex::Real dwdot2dscqss12 = x4476;
  const amrex::Real dwdot2dscqss14 = 0;
  const amrex::Real dwdot2dscqss13 = x4495;
  const amrex::Real dwdot2dscqss15 = 0;
  const amrex::Real dwdot2dscqss8 = 0;
  const amrex::Real dwdot2dscqss10 = 0;
  const amrex::Real dwdot3dscqss0 =
    x4556 - x4558 + x4807 + x4863 + x4868 + x4870 + x4873;
  const amrex::Real dwdot3dscqss16 = x4876;
  const amrex::Real dwdot3dscqss1 = x4640 + x4825 - x4832 + x4881 + x4884 -
                                    x4885 + x4887 - x4888 + x4892 + x4899;
  const amrex::Real dwdot3dscqss17 = 0;
  const amrex::Real dwdot3dscqss2 = x4839 + x4844 + x4852 + x4902 + x4907 +
                                    x4908 + x4910 + x4912 + x4918 + x4923;
  const amrex::Real dwdot3dscqss3 = 0;
  const amrex::Real dwdot3dscqss4 = 0;
  const amrex::Real dwdot3dscqss5 = x4394 + x4407 - x4924 + x4928;
  const amrex::Real dwdot3dscqss6 = -x4409 + x4413 - x4929 + x4930;
  const amrex::Real dwdot3dscqss7 = x4414 + x4425;
  const amrex::Real dwdot3dscqss9 = x4430 + x4437;
  const amrex::Real dwdot3dscqss11 = x4445 + x4448;
  const amrex::Real dwdot3dscqss12 = x4471 + x4475;
  const amrex::Real dwdot3dscqss14 = 0;
  const amrex::Real dwdot3dscqss13 = x4494 + x4505;
  const amrex::Real dwdot3dscqss15 = 0;
  const amrex::Real dwdot3dscqss8 = 0;
  const amrex::Real dwdot3dscqss10 = 0;
  const amrex::Real dwdot4dscqss0 = x4935 + x4939 + x4944;
  const amrex::Real dwdot4dscqss16 = 0;
  const amrex::Real dwdot4dscqss1 =
    -x4898 + x4949 + x4952 + x4953 + x4955 - x4956 + x4962 + x591 * x4954;
  const amrex::Real dwdot4dscqss17 = 0;
  const amrex::Real dwdot4dscqss2 =
    x4901 - x4919 + x4963 + x4968 + x4970 + x4974 + x4980 + x796 * x4954;
  const amrex::Real dwdot4dscqss3 = 0;
  const amrex::Real dwdot4dscqss4 = 0;
  const amrex::Real dwdot4dscqss5 =
    x4384 + x4400 - x4925 + x4927 + x4986 + x4988;
  const amrex::Real dwdot4dscqss6 = x4410 - x4411 - x4930 + x4990 + x4991;
  const amrex::Real dwdot4dscqss7 = x4419 + x4420 + x4993;
  const amrex::Real dwdot4dscqss9 = x4428 + x4433 + x4995;
  const amrex::Real dwdot4dscqss11 = x4440 + x4461 + x4997;
  const amrex::Real dwdot4dscqss12 = x4482 + x4493 + x4999;
  const amrex::Real dwdot4dscqss14 = 0;
  const amrex::Real dwdot4dscqss13 = x4496 + x4501 + x5001;
  const amrex::Real dwdot4dscqss15 = 0;
  const amrex::Real dwdot4dscqss8 = 0;
  const amrex::Real dwdot4dscqss10 = 0;
  const amrex::Real dwdot5dscqss0 = -x4515 + x4562 + x5002;
  const amrex::Real dwdot5dscqss16 = 0;
  const amrex::Real dwdot5dscqss1 = x4583 + x4625 - x4642 + x5003 + x5005;
  const amrex::Real dwdot5dscqss17 = 0;
  const amrex::Real dwdot5dscqss2 = x4685 + x4718 + x5006 + x5007;
  const amrex::Real dwdot5dscqss3 = 0;
  const amrex::Real dwdot5dscqss4 = 0;
  const amrex::Real dwdot5dscqss5 = x4389 + x4724;
  const amrex::Real dwdot5dscqss6 = -x4412 + x4758;
  const amrex::Real dwdot5dscqss7 = x4422;
  const amrex::Real dwdot5dscqss9 = x4434;
  const amrex::Real dwdot5dscqss11 = x4456;
  const amrex::Real dwdot5dscqss12 = x4465;
  const amrex::Real dwdot5dscqss14 = 0;
  const amrex::Real dwdot5dscqss13 = x4502;
  const amrex::Real dwdot5dscqss15 = 0;
  const amrex::Real dwdot5dscqss8 = 0;
  const amrex::Real dwdot5dscqss10 = 0;
  const amrex::Real dwdot6dscqss0 =
    -x4548 + x4862 - x4873 + x5009 + x891 * x5008;
  const amrex::Real dwdot6dscqss16 = 0;
  const amrex::Real dwdot6dscqss1 =
    x4880 + x4885 - x4893 + x5011 - x869 * x5010;
  const amrex::Real dwdot6dscqss17 = 0;
  const amrex::Real dwdot6dscqss2 = x4906 + x4909 + x4917 + x5012;
  const amrex::Real dwdot6dscqss3 = 0;
  const amrex::Real dwdot6dscqss4 = 0;
  const amrex::Real dwdot6dscqss5 = x4406 + x4924;
  const amrex::Real dwdot6dscqss6 = -x4413 + x4929;
  const amrex::Real dwdot6dscqss7 = x4424;
  const amrex::Real dwdot6dscqss9 = x4436;
  const amrex::Real dwdot6dscqss11 = x4444;
  const amrex::Real dwdot6dscqss12 = x4470;
  const amrex::Real dwdot6dscqss14 = 0;
  const amrex::Real dwdot6dscqss13 = x4504;
  const amrex::Real dwdot6dscqss15 = 0;
  const amrex::Real dwdot6dscqss8 = 0;
  const amrex::Real dwdot6dscqss10 = 0;
  const amrex::Real dwdot7dscqss0 = x4934;
  const amrex::Real dwdot7dscqss16 = 0;
  const amrex::Real dwdot7dscqss1 = x4948 - x4957 + x5014;
  const amrex::Real dwdot7dscqss17 = 0;
  const amrex::Real dwdot7dscqss2 = x4969 + x4978 + x5015;
  const amrex::Real dwdot7dscqss3 = 0;
  const amrex::Real dwdot7dscqss4 = 0;
  const amrex::Real dwdot7dscqss5 = x4383;
  const amrex::Real dwdot7dscqss6 = -x4410;
  const amrex::Real dwdot7dscqss7 = x4418;
  const amrex::Real dwdot7dscqss9 = x4432;
  const amrex::Real dwdot7dscqss11 = x4460;
  const amrex::Real dwdot7dscqss12 = x4492;
  const amrex::Real dwdot7dscqss14 = 0;
  const amrex::Real dwdot7dscqss13 = x4500;
  const amrex::Real dwdot7dscqss15 = 0;
  const amrex::Real dwdot7dscqss8 = 0;
  const amrex::Real dwdot7dscqss10 = 0;
  const amrex::Real dwdot8dscqss0 = -x4868 + x4943 - x5017 - x5021 + x5022;
  const amrex::Real dwdot8dscqss16 = -x897 * x5025;
  const amrex::Real dwdot8dscqss1 =
    x4888 + x4951 - x4955 + x4956 + x4961 + x5014 + x5026 + x5027;
  const amrex::Real dwdot8dscqss17 = 0;
  const amrex::Real dwdot8dscqss2 = x4837 + x4967 + x4979 + x5030 + x5031;
  const amrex::Real dwdot8dscqss3 = 0;
  const amrex::Real dwdot8dscqss4 = 0;
  const amrex::Real dwdot8dscqss5 = x4401 + x4985 - x4988 + x5033;
  const amrex::Real dwdot8dscqss6 = x4411 - x4990 - x4991 - x5034;
  const amrex::Real dwdot8dscqss7 = x4421 + x4992 + x5035;
  const amrex::Real dwdot8dscqss9 = x4429 + x4994 + x5036;
  const amrex::Real dwdot8dscqss11 = x4441 + x4996 + x5037;
  const amrex::Real dwdot8dscqss12 = x4483 + x4998 + x5038;
  const amrex::Real dwdot8dscqss14 = 0;
  const amrex::Real dwdot8dscqss13 = x4497 + x5000 + x5039;
  const amrex::Real dwdot8dscqss15 = 0;
  const amrex::Real dwdot8dscqss8 = 0;
  const amrex::Real dwdot8dscqss10 = 0;
  const amrex::Real dwdot9dscqss0 = -x4513 + x4515 + x4551 + x4812 + x4873 +
                                    x5044 + x5050 + x5052 + x891 * x5046;
  const amrex::Real dwdot9dscqss16 = 0;
  const amrex::Real dwdot9dscqss1 = -x4633 + x4637 - x4827 + x4892 + x4953 +
                                    x5027 + x5057 - x5058 + x5063 + x5065 -
                                    x591 * x5059;
  const amrex::Real dwdot9dscqss17 = 0;
  const amrex::Real dwdot9dscqss2 = x4664 + x4693 + x5066 + x5068 + x5069 +
                                    x5074 + x5085 + x5087 + x5088 -
                                    x796 * x5059;
  const amrex::Real dwdot9dscqss3 = 0;
  const amrex::Real dwdot9dscqss4 = 0;
  const amrex::Real dwdot9dscqss5 = x4379 + x4727 + x5091 - x5093;
  const amrex::Real dwdot9dscqss6 = x4408 - x5094;
  const amrex::Real dwdot9dscqss7 = x4417;
  const amrex::Real dwdot9dscqss9 = x4427;
  const amrex::Real dwdot9dscqss11 = x4453;
  const amrex::Real dwdot9dscqss12 = x4488;
  const amrex::Real dwdot9dscqss14 = 0;
  const amrex::Real dwdot9dscqss13 = x4499;
  const amrex::Real dwdot9dscqss15 = 0;
  const amrex::Real dwdot9dscqss8 = 0;
  const amrex::Real dwdot9dscqss10 = 0;
  const amrex::Real dwdot10dscqss0 = x5043 + x5097 - x891 * x5096;
  const amrex::Real dwdot10dscqss16 = 0;
  const amrex::Real dwdot10dscqss1 = x5056 + x5058 - x5064;
  const amrex::Real dwdot10dscqss17 = 0;
  const amrex::Real dwdot10dscqss2 = x5067 + x5073 + x5098;
  const amrex::Real dwdot10dscqss3 = 0;
  const amrex::Real dwdot10dscqss4 = 0;
  const amrex::Real dwdot10dscqss5 = x4378 + x5093;
  const amrex::Real dwdot10dscqss6 = -x4408 + x5094;
  const amrex::Real dwdot10dscqss7 = x4416;
  const amrex::Real dwdot10dscqss9 = x4426;
  const amrex::Real dwdot10dscqss11 = x4452;
  const amrex::Real dwdot10dscqss12 = x4487;
  const amrex::Real dwdot10dscqss14 = 0;
  const amrex::Real dwdot10dscqss13 = x4498;
  const amrex::Real dwdot10dscqss15 = 0;
  const amrex::Real dwdot10dscqss8 = 0;
  const amrex::Real dwdot10dscqss10 = 0;
  const amrex::Real dwdot11dscqss0 =
    -x4540 + x4563 + x4808 + x4863 + x4935 + x5021 + x5022 + x5044 + x5100;
  const amrex::Real dwdot11dscqss16 = 0;
  const amrex::Real dwdot11dscqss1 = x4626 + x4660 + x4816 + x4832 + x4891 +
                                     x4899 + x4956 + x4962 + x5005 + x5011 -
                                     x5026 + x5065;
  const amrex::Real dwdot11dscqss17 = 0;
  const amrex::Real dwdot11dscqss2 = x4833 + x4923 - x5030 + x5088;
  const amrex::Real dwdot11dscqss3 = 0;
  const amrex::Real dwdot11dscqss4 = 0;
  const amrex::Real dwdot11dscqss5 = x4855 - x4857 + x4928;
  const amrex::Real dwdot11dscqss6 = x4858 + x4930;
  const amrex::Real dwdot11dscqss7 = 0;
  const amrex::Real dwdot11dscqss9 = 0;
  const amrex::Real dwdot11dscqss11 = 0;
  const amrex::Real dwdot11dscqss12 = 0;
  const amrex::Real dwdot11dscqss14 = 0;
  const amrex::Real dwdot11dscqss13 = 0;
  const amrex::Real dwdot11dscqss15 = 0;
  const amrex::Real dwdot11dscqss8 = 0;
  const amrex::Real dwdot11dscqss10 = 0;
  const amrex::Real dwdot12dscqss0 = x4554 + x4572 + x4944 + x5002 + x5009 +
                                     x5017 + x5097 + x5100 + x5103 - x5108 +
                                     x5111 - x5116;
  const amrex::Real dwdot12dscqss16 = 0;
  const amrex::Real dwdot12dscqss1 = x4625 + x4641 + x4885 + x4955 + x5058 +
                                     x5117 + x5118 + x5121 + x5122 + x5123;
  const amrex::Real dwdot12dscqss17 = 0;
  const amrex::Real dwdot12dscqss2 = x4852 + x4906 + x5066 + x5126 + x5127;
  const amrex::Real dwdot12dscqss3 = 0;
  const amrex::Real dwdot12dscqss4 = 0;
  const amrex::Real dwdot12dscqss5 = 0;
  const amrex::Real dwdot12dscqss6 = 0;
  const amrex::Real dwdot12dscqss7 = 0;
  const amrex::Real dwdot12dscqss9 = 0;
  const amrex::Real dwdot12dscqss11 = 0;
  const amrex::Real dwdot12dscqss12 = 0;
  const amrex::Real dwdot12dscqss14 = 0;
  const amrex::Real dwdot12dscqss13 = 0;
  const amrex::Real dwdot12dscqss15 = 0;
  const amrex::Real dwdot12dscqss8 = 0;
  const amrex::Real dwdot12dscqss10 = 0;
  const amrex::Real dwdot13dscqss0 = x4554 - x5100;
  const amrex::Real dwdot13dscqss16 = 0;
  const amrex::Real dwdot13dscqss1 = x4640;
  const amrex::Real dwdot13dscqss17 = 0;
  const amrex::Real dwdot13dscqss2 = 0;
  const amrex::Real dwdot13dscqss3 = 0;
  const amrex::Real dwdot13dscqss4 = 0;
  const amrex::Real dwdot13dscqss5 = 0;
  const amrex::Real dwdot13dscqss6 = 0;
  const amrex::Real dwdot13dscqss7 = 0;
  const amrex::Real dwdot13dscqss9 = 0;
  const amrex::Real dwdot13dscqss11 = 0;
  const amrex::Real dwdot13dscqss12 = 0;
  const amrex::Real dwdot13dscqss14 = 0;
  const amrex::Real dwdot13dscqss13 = 0;
  const amrex::Real dwdot13dscqss15 = 0;
  const amrex::Real dwdot13dscqss8 = 0;
  const amrex::Real dwdot13dscqss10 = 0;
  const amrex::Real dwdot14dscqss0 = x5108;
  const amrex::Real dwdot14dscqss16 = 0;
  const amrex::Real dwdot14dscqss1 = -x5122;
  const amrex::Real dwdot14dscqss17 = 0;
  const amrex::Real dwdot14dscqss2 =
    x4684 + x4968 + x5007 + x5012 + x5098 - x5126;
  const amrex::Real dwdot14dscqss3 = 0;
  const amrex::Real dwdot14dscqss4 = 0;
  const amrex::Real dwdot14dscqss5 = 0;
  const amrex::Real dwdot14dscqss6 = 0;
  const amrex::Real dwdot14dscqss7 = 0;
  const amrex::Real dwdot14dscqss9 = 0;
  const amrex::Real dwdot14dscqss11 = 0;
  const amrex::Real dwdot14dscqss12 = 0;
  const amrex::Real dwdot14dscqss14 = 0;
  const amrex::Real dwdot14dscqss13 = 0;
  const amrex::Real dwdot14dscqss15 = 0;
  const amrex::Real dwdot14dscqss8 = 0;
  const amrex::Real dwdot14dscqss10 = 0;
  const amrex::Real dwdot15dscqss0 = -x4507 + x4513 + x4523 + x4813 + x5116;
  const amrex::Real dwdot15dscqss16 = 0;
  const amrex::Real dwdot15dscqss1 =
    x4577 + x4601 - x4623 + x4827 + x4952 + x5003 + x5014 - x5121 - x5123;
  const amrex::Real dwdot15dscqss17 = 0;
  const amrex::Real dwdot15dscqss2 = -x4712 + x4713 + x4719 + x4845 + x4918 +
                                     x4980 + x5006 + x5031 + x5074 - x5127 +
                                     x5131;
  const amrex::Real dwdot15dscqss3 = 0;
  const amrex::Real dwdot15dscqss4 = 0;
  const amrex::Real dwdot15dscqss5 = -x4743 + x5091 - x900 * x5135;
  const amrex::Real dwdot15dscqss6 =
    -x4746 + x4764 + x484 * x5135 - x484 * x5138 - x901 * x5135;
  const amrex::Real dwdot15dscqss7 = -x4773 - x902 * x5135 + x902 * x5139;
  const amrex::Real dwdot15dscqss9 = x4776 + x435 * x5135 - x435 * x5140;
  const amrex::Real dwdot15dscqss11 = x374 * x5135 - x374 * x5141;
  const amrex::Real dwdot15dscqss12 = -x344 * x5142;
  const amrex::Real dwdot15dscqss14 = 0;
  const amrex::Real dwdot15dscqss13 = 0;
  const amrex::Real dwdot15dscqss15 =
    x4791 - x4794 + x5143 - x67 * x5144 - x904 * x5135 + x904 * x5138;
  const amrex::Real dwdot15dscqss8 = x4800 + x5145 - x109 * x5144;
  const amrex::Real dwdot15dscqss10 = 0;
  const amrex::Real dwdot16dscqss0 = -x5050;
  const amrex::Real dwdot16dscqss16 = 0;
  const amrex::Real dwdot16dscqss1 =
    x4584 - x4621 + x4826 + x4881 + x4949 + x5014 + x5057 - x5063;
  const amrex::Real dwdot16dscqss17 = 0;
  const amrex::Real dwdot16dscqss2 =
    x4686 - x4692 + x4840 + x4910 + x4970 + x5015 + x5068 - x5069;
  const amrex::Real dwdot16dscqss3 = 0;
  const amrex::Real dwdot16dscqss4 = 0;
  const amrex::Real dwdot16dscqss5 = 0;
  const amrex::Real dwdot16dscqss6 = 0;
  const amrex::Real dwdot16dscqss7 = 0;
  const amrex::Real dwdot16dscqss9 = 0;
  const amrex::Real dwdot16dscqss11 = 0;
  const amrex::Real dwdot16dscqss12 = 0;
  const amrex::Real dwdot16dscqss14 = 0;
  const amrex::Real dwdot16dscqss13 = 0;
  const amrex::Real dwdot16dscqss15 = 0;
  const amrex::Real dwdot16dscqss8 = 0;
  const amrex::Real dwdot16dscqss10 = 0;
  const amrex::Real dwdot17dscqss0 = x4552;
  const amrex::Real dwdot17dscqss16 = 0;
  const amrex::Real dwdot17dscqss1 = x4633;
  const amrex::Real dwdot17dscqss17 = 0;
  const amrex::Real dwdot17dscqss2 = x4838 + x4902;
  const amrex::Real dwdot17dscqss3 = 0;
  const amrex::Real dwdot17dscqss4 = 0;
  const amrex::Real dwdot17dscqss5 = 0;
  const amrex::Real dwdot17dscqss6 = 0;
  const amrex::Real dwdot17dscqss7 = 0;
  const amrex::Real dwdot17dscqss9 = 0;
  const amrex::Real dwdot17dscqss11 = 0;
  const amrex::Real dwdot17dscqss12 = 0;
  const amrex::Real dwdot17dscqss14 = 0;
  const amrex::Real dwdot17dscqss13 = 0;
  const amrex::Real dwdot17dscqss15 = 0;
  const amrex::Real dwdot17dscqss8 = 0;
  const amrex::Real dwdot17dscqss10 = 0;
  const amrex::Real dwdot18dscqss0 = x4507 + x5102;
  const amrex::Real dwdot18dscqss16 = 0;
  const amrex::Real dwdot18dscqss1 = -x5118;
  const amrex::Real dwdot18dscqss17 = 0;
  const amrex::Real dwdot18dscqss2 = x4665 + x4963;
  const amrex::Real dwdot18dscqss3 = 0;
  const amrex::Real dwdot18dscqss4 = 0;
  const amrex::Real dwdot18dscqss5 = 0;
  const amrex::Real dwdot18dscqss6 = 0;
  const amrex::Real dwdot18dscqss7 = 0;
  const amrex::Real dwdot18dscqss9 = 0;
  const amrex::Real dwdot18dscqss11 = 0;
  const amrex::Real dwdot18dscqss12 = 0;
  const amrex::Real dwdot18dscqss14 = 0;
  const amrex::Real dwdot18dscqss13 = 0;
  const amrex::Real dwdot18dscqss15 = 0;
  const amrex::Real dwdot18dscqss8 = 0;
  const amrex::Real dwdot18dscqss10 = 0;
  const amrex::Real dwdot19dscqss0 = x5103;
  const amrex::Real dwdot19dscqss16 = 0;
  const amrex::Real dwdot19dscqss1 = x4630 + x5118;
  const amrex::Real dwdot19dscqss17 = 0;
  const amrex::Real dwdot19dscqss2 = x4689 - x5085;
  const amrex::Real dwdot19dscqss3 = 0;
  const amrex::Real dwdot19dscqss4 = 0;
  const amrex::Real dwdot19dscqss5 =
    -x4722 + x4724 + x4740 + x4924 + x4988 + x5093;
  const amrex::Real dwdot19dscqss6 = x4753 - x4761;
  const amrex::Real dwdot19dscqss7 = -x4768;
  const amrex::Real dwdot19dscqss9 = 0;
  const amrex::Real dwdot19dscqss11 = x5147;
  const amrex::Real dwdot19dscqss12 = 0;
  const amrex::Real dwdot19dscqss14 = 0;
  const amrex::Real dwdot19dscqss13 = 0;
  const amrex::Real dwdot19dscqss15 = x4787 - x4793;
  const amrex::Real dwdot19dscqss8 = x4797;
  const amrex::Real dwdot19dscqss10 = 0;
  const amrex::Real dwdot20dscqss0 = x4524;
  const amrex::Real dwdot20dscqss16 = 0;
  const amrex::Real dwdot20dscqss1 = x4623;
  const amrex::Real dwdot20dscqss17 = 0;
  const amrex::Real dwdot20dscqss2 = x4853 + x4907;
  const amrex::Real dwdot20dscqss3 = 0;
  const amrex::Real dwdot20dscqss4 = 0;
  const amrex::Real dwdot20dscqss5 = 0;
  const amrex::Real dwdot20dscqss6 = 0;
  const amrex::Real dwdot20dscqss7 = 0;
  const amrex::Real dwdot20dscqss9 = 0;
  const amrex::Real dwdot20dscqss11 = 0;
  const amrex::Real dwdot20dscqss12 = 0;
  const amrex::Real dwdot20dscqss14 = 0;
  const amrex::Real dwdot20dscqss13 = 0;
  const amrex::Real dwdot20dscqss15 = 0;
  const amrex::Real dwdot20dscqss8 = 0;
  const amrex::Real dwdot20dscqss10 = 0;
  const amrex::Real dwdot21dscqss0 = x5110;
  const amrex::Real dwdot21dscqss16 = 0;
  const amrex::Real dwdot21dscqss1 = -x5117;
  const amrex::Real dwdot21dscqss17 = 0;
  const amrex::Real dwdot21dscqss2 = -x5131;
  const amrex::Real dwdot21dscqss3 = 0;
  const amrex::Real dwdot21dscqss4 = 0;
  const amrex::Real dwdot21dscqss5 = 0;
  const amrex::Real dwdot21dscqss6 = 0;
  const amrex::Real dwdot21dscqss7 = 0;
  const amrex::Real dwdot21dscqss9 = 0;
  const amrex::Real dwdot21dscqss11 = 0;
  const amrex::Real dwdot21dscqss12 = 0;
  const amrex::Real dwdot21dscqss14 = 0;
  const amrex::Real dwdot21dscqss13 = 0;
  const amrex::Real dwdot21dscqss15 = 0;
  const amrex::Real dwdot21dscqss8 = 0;
  const amrex::Real dwdot21dscqss10 = 0;
  const amrex::Real dwdot22dscqss0 = x5111;
  const amrex::Real dwdot22dscqss16 = 0;
  const amrex::Real dwdot22dscqss1 = x4578 + x5117;
  const amrex::Real dwdot22dscqss17 = 0;
  const amrex::Real dwdot22dscqss2 = x4714;
  const amrex::Real dwdot22dscqss3 = 0;
  const amrex::Real dwdot22dscqss4 = 0;
  const amrex::Real dwdot22dscqss5 = 0;
  const amrex::Real dwdot22dscqss6 = x4757 + x4758 + x4929 + x4990 + x5094;
  const amrex::Real dwdot22dscqss7 = 0;
  const amrex::Real dwdot22dscqss9 = x435 * x5148;
  const amrex::Real dwdot22dscqss11 = -x427 * x5149;
  const amrex::Real dwdot22dscqss12 = 0;
  const amrex::Real dwdot22dscqss14 = 0;
  const amrex::Real dwdot22dscqss13 = 0;
  const amrex::Real dwdot22dscqss15 = 0;
  const amrex::Real dwdot22dscqss8 = 0;
  const amrex::Real dwdot22dscqss10 = 0;
  const amrex::Real dwdot23dscqss0 = 0;
  const amrex::Real dwdot23dscqss16 = 0;
  const amrex::Real dwdot23dscqss1 = 0;
  const amrex::Real dwdot23dscqss17 = 0;
  const amrex::Real dwdot23dscqss2 = 0;
  const amrex::Real dwdot23dscqss3 = 0;
  const amrex::Real dwdot23dscqss4 = 0;
  const amrex::Real dwdot23dscqss5 = 0;
  const amrex::Real dwdot23dscqss6 = 0;
  const amrex::Real dwdot23dscqss7 = 0;
  const amrex::Real dwdot23dscqss9 = 0;
  const amrex::Real dwdot23dscqss11 = 0;
  const amrex::Real dwdot23dscqss12 = 0;
  const amrex::Real dwdot23dscqss14 = 0;
  const amrex::Real dwdot23dscqss13 = 0;
  const amrex::Real dwdot23dscqss15 = x5153;
  const amrex::Real dwdot23dscqss8 = x5154;
  const amrex::Real dwdot23dscqss10 = 0;
  const amrex::Real dwdot24dscqss0 = 0;
  const amrex::Real dwdot24dscqss16 = 0;
  const amrex::Real dwdot24dscqss1 = x4631;
  const amrex::Real dwdot24dscqss17 = 0;
  const amrex::Real dwdot24dscqss2 = x4690;
  const amrex::Real dwdot24dscqss3 = 0;
  const amrex::Real dwdot24dscqss4 = 0;
  const amrex::Real dwdot24dscqss5 = x4743 - x584 * x5156;
  const amrex::Real dwdot24dscqss6 = x4750 + x903 * x5156;
  const amrex::Real dwdot24dscqss7 = -x464 * x5156;
  const amrex::Real dwdot24dscqss9 = -x273 * x5156;
  const amrex::Real dwdot24dscqss11 = 0;
  const amrex::Real dwdot24dscqss12 = 0;
  const amrex::Real dwdot24dscqss14 = 0;
  const amrex::Real dwdot24dscqss13 = -x314 * x5156;
  const amrex::Real dwdot24dscqss15 = x4784 + x67 * x5157;
  const amrex::Real dwdot24dscqss8 = x109 * x5157;
  const amrex::Real dwdot24dscqss10 = 0;
  const amrex::Real dwdot25dscqss0 = 0;
  const amrex::Real dwdot25dscqss16 = 0;
  const amrex::Real dwdot25dscqss1 = 0;
  const amrex::Real dwdot25dscqss17 = 0;
  const amrex::Real dwdot25dscqss2 = 0;
  const amrex::Real dwdot25dscqss3 = 0;
  const amrex::Real dwdot25dscqss4 = 0;
  const amrex::Real dwdot25dscqss5 = x4722 - x584 * x5159;
  const amrex::Real dwdot25dscqss6 = x4746 + x903 * x5159;
  const amrex::Real dwdot25dscqss7 = x4770 - x464 * x5159 - x902 * x5160;
  const amrex::Real dwdot25dscqss9 = -x273 * x5159;
  const amrex::Real dwdot25dscqss11 = 0;
  const amrex::Real dwdot25dscqss12 = 0;
  const amrex::Real dwdot25dscqss14 = 0;
  const amrex::Real dwdot25dscqss13 = -x314 * x5159;
  const amrex::Real dwdot25dscqss15 = 0;
  const amrex::Real dwdot25dscqss8 = 0;
  const amrex::Real dwdot25dscqss10 = 0;
  const amrex::Real dwdot26dscqss0 = 0;
  const amrex::Real dwdot26dscqss16 = 0;
  const amrex::Real dwdot26dscqss1 = 0;
  const amrex::Real dwdot26dscqss17 = 0;
  const amrex::Real dwdot26dscqss2 = 0;
  const amrex::Real dwdot26dscqss3 = 0;
  const amrex::Real dwdot26dscqss4 = 0;
  const amrex::Real dwdot26dscqss5 = -x584 * x5162;
  const amrex::Real dwdot26dscqss6 = x4765 + x484 * x5163 + x903 * x5162;
  const amrex::Real dwdot26dscqss7 = -x464 * x5162;
  const amrex::Real dwdot26dscqss9 = -x273 * x5162;
  const amrex::Real dwdot26dscqss11 = 0;
  const amrex::Real dwdot26dscqss12 = 0;
  const amrex::Real dwdot26dscqss14 = 0;
  const amrex::Real dwdot26dscqss13 = -x314 * x5162;
  const amrex::Real dwdot26dscqss15 = x4796 - x904 * x5163;
  const amrex::Real dwdot26dscqss8 = x4799;
  const amrex::Real dwdot26dscqss10 = 0;
  const amrex::Real dwdot27dscqss0 = 0;
  const amrex::Real dwdot27dscqss16 = 0;
  const amrex::Real dwdot27dscqss1 = 0;
  const amrex::Real dwdot27dscqss17 = 0;
  const amrex::Real dwdot27dscqss2 = 0;
  const amrex::Real dwdot27dscqss3 = 0;
  const amrex::Real dwdot27dscqss4 = 0;
  const amrex::Real dwdot27dscqss5 = -x584 * x5165;
  const amrex::Real dwdot27dscqss6 = x4754 - x901 * x5166 + x903 * x5165;
  const amrex::Real dwdot27dscqss7 = x4773 - x464 * x5165;
  const amrex::Real dwdot27dscqss9 = x4780 - x273 * x5165;
  const amrex::Real dwdot27dscqss11 = 0;
  const amrex::Real dwdot27dscqss12 = 0;
  const amrex::Real dwdot27dscqss14 = 0;
  const amrex::Real dwdot27dscqss13 = -x314 * x5165;
  const amrex::Real dwdot27dscqss15 = x4793;
  const amrex::Real dwdot27dscqss8 = 0;
  const amrex::Real dwdot27dscqss10 = 0;
  const amrex::Real dwdot28dscqss0 = 0;
  const amrex::Real dwdot28dscqss16 = 0;
  const amrex::Real dwdot28dscqss1 = 0;
  const amrex::Real dwdot28dscqss17 = 0;
  const amrex::Real dwdot28dscqss2 = 0;
  const amrex::Real dwdot28dscqss3 = 0;
  const amrex::Real dwdot28dscqss4 = 0;
  const amrex::Real dwdot28dscqss5 = -x584 * x5168 - x900 * x5169;
  const amrex::Real dwdot28dscqss6 = x903 * x5168;
  const amrex::Real dwdot28dscqss7 = x4768 - x464 * x5168;
  const amrex::Real dwdot28dscqss9 = -x273 * x5168;
  const amrex::Real dwdot28dscqss11 = 0;
  const amrex::Real dwdot28dscqss12 = 0;
  const amrex::Real dwdot28dscqss14 = 0;
  const amrex::Real dwdot28dscqss13 = -x314 * x5168;
  const amrex::Real dwdot28dscqss15 = x4792;
  const amrex::Real dwdot28dscqss8 = x4801;
  const amrex::Real dwdot28dscqss10 = 0;
  const amrex::Real dwdot29dscqss0 = 0;
  const amrex::Real dwdot29dscqss16 = 0;
  const amrex::Real dwdot29dscqss1 = 0;
  const amrex::Real dwdot29dscqss17 = 0;
  const amrex::Real dwdot29dscqss2 = 0;
  const amrex::Real dwdot29dscqss3 = 0;
  const amrex::Real dwdot29dscqss4 = 0;
  const amrex::Real dwdot29dscqss5 = -x4374;
  const amrex::Real dwdot29dscqss6 = 0;
  const amrex::Real dwdot29dscqss7 = 0;
  const amrex::Real dwdot29dscqss9 = 0;
  const amrex::Real dwdot29dscqss11 = x5147;
  const amrex::Real dwdot29dscqss12 = 0;
  const amrex::Real dwdot29dscqss14 = 0;
  const amrex::Real dwdot29dscqss13 = 0;
  const amrex::Real dwdot29dscqss15 = -x5143;
  const amrex::Real dwdot29dscqss8 = -x5145;
  const amrex::Real dwdot29dscqss10 = 0;
  const amrex::Real dwdot30dscqss0 = 0;
  const amrex::Real dwdot30dscqss16 = 0;
  const amrex::Real dwdot30dscqss1 = x591 * x5170;
  const amrex::Real dwdot30dscqss17 = 0;
  const amrex::Real dwdot30dscqss2 = x796 * x5170;
  const amrex::Real dwdot30dscqss3 = 0;
  const amrex::Real dwdot30dscqss4 = 0;
  const amrex::Real dwdot30dscqss5 = -x584 * x5172;
  const amrex::Real dwdot30dscqss6 = x903 * x5172;
  const amrex::Real dwdot30dscqss7 = -x464 * x5172;
  const amrex::Real dwdot30dscqss9 = x4777 - x273 * x5172;
  const amrex::Real dwdot30dscqss11 = x4783;
  const amrex::Real dwdot30dscqss12 = 0;
  const amrex::Real dwdot30dscqss14 = 0;
  const amrex::Real dwdot30dscqss13 = -x314 * x5172;
  const amrex::Real dwdot30dscqss15 = x4788;
  const amrex::Real dwdot30dscqss8 = x4798;
  const amrex::Real dwdot30dscqss10 = 0;
  const amrex::Real dwdot31dscqss0 = 0;
  const amrex::Real dwdot31dscqss16 = 0;
  const amrex::Real dwdot31dscqss1 = 0;
  const amrex::Real dwdot31dscqss17 = 0;
  const amrex::Real dwdot31dscqss2 = 0;
  const amrex::Real dwdot31dscqss3 = 0;
  const amrex::Real dwdot31dscqss4 = 0;
  const amrex::Real dwdot31dscqss5 = x4986;
  const amrex::Real dwdot31dscqss6 = x4991;
  const amrex::Real dwdot31dscqss7 = x4993;
  const amrex::Real dwdot31dscqss9 = x4995;
  const amrex::Real dwdot31dscqss11 = x4997;
  const amrex::Real dwdot31dscqss12 = x4999;
  const amrex::Real dwdot31dscqss14 = 0;
  const amrex::Real dwdot31dscqss13 = x5001;
  const amrex::Real dwdot31dscqss15 = -x5153;
  const amrex::Real dwdot31dscqss8 = -x5154;
  const amrex::Real dwdot31dscqss10 = 0;
  const amrex::Real dwdot32dscqss0 = 0;
  const amrex::Real dwdot32dscqss16 = 0;
  const amrex::Real dwdot32dscqss1 = 0;
  const amrex::Real dwdot32dscqss17 = 0;
  const amrex::Real dwdot32dscqss2 = 0;
  const amrex::Real dwdot32dscqss3 = 0;
  const amrex::Real dwdot32dscqss4 = 0;
  const amrex::Real dwdot32dscqss5 = -x5033;
  const amrex::Real dwdot32dscqss6 = x5034;
  const amrex::Real dwdot32dscqss7 = -x5035;
  const amrex::Real dwdot32dscqss9 = -x5036;
  const amrex::Real dwdot32dscqss11 = -x5037;
  const amrex::Real dwdot32dscqss12 = -x5038;
  const amrex::Real dwdot32dscqss14 = 0;
  const amrex::Real dwdot32dscqss13 = -x5039;
  const amrex::Real dwdot32dscqss15 = 0;
  const amrex::Real dwdot32dscqss8 = 0;
  const amrex::Real dwdot32dscqss10 = 0;
  const amrex::Real dwdot33dscqss0 = 0;
  const amrex::Real dwdot33dscqss16 = x4876;
  const amrex::Real dwdot33dscqss1 = 0;
  const amrex::Real dwdot33dscqss17 = 0;
  const amrex::Real dwdot33dscqss2 = 0;
  const amrex::Real dwdot33dscqss3 = 0;
  const amrex::Real dwdot33dscqss4 = 0;
  const amrex::Real dwdot33dscqss5 = 0;
  const amrex::Real dwdot33dscqss6 = 0;
  const amrex::Real dwdot33dscqss7 = 0;
  const amrex::Real dwdot33dscqss9 = 0;
  const amrex::Real dwdot33dscqss11 = 0;
  const amrex::Real dwdot33dscqss12 = 0;
  const amrex::Real dwdot33dscqss14 = 0;
  const amrex::Real dwdot33dscqss13 = 0;
  const amrex::Real dwdot33dscqss15 = 0;
  const amrex::Real dwdot33dscqss8 = 0;
  const amrex::Real dwdot33dscqss10 = 0;
  const amrex::Real dwdot34dscqss0 = 0;
  const amrex::Real dwdot34dscqss16 = 0;
  const amrex::Real dwdot34dscqss1 = 0;
  const amrex::Real dwdot34dscqss17 = 0;
  const amrex::Real dwdot34dscqss2 = 0;
  const amrex::Real dwdot34dscqss3 = 0;
  const amrex::Real dwdot34dscqss4 = 0;
  const amrex::Real dwdot34dscqss5 = 0;
  const amrex::Real dwdot34dscqss6 = 0;
  const amrex::Real dwdot34dscqss7 = 0;
  const amrex::Real dwdot34dscqss9 = 0;
  const amrex::Real dwdot34dscqss11 = 0;
  const amrex::Real dwdot34dscqss12 = 0;
  const amrex::Real dwdot34dscqss14 = 0;
  const amrex::Real dwdot34dscqss13 = 0;
  const amrex::Real dwdot34dscqss15 = 0;
  const amrex::Real dwdot34dscqss8 = 0;
  const amrex::Real dwdot34dscqss10 = 0;
  const amrex::Real dwdot0dsc0 =
    x5174 + x5175 - x5178 + x5189 + x5201 + x5213 + x5225 + x5237 + x5249 -
    exp(-x1498 + x5176) * x5177 - exp(-x1534 + x5176) * x5177 -
    exp(-x1542 + x5176) * x5177 - exp(-x1559 + x5176) * x5177;
  const amrex::Real dwdot0dsc1 =
    -x5250 + x5251 + x5257 + x5262 + x5267 + x5273 + x5278 + x5285;
  const amrex::Real dwdot0dsc2 =
    -x5286 + x5287 + x5291 + x5295 + x5299 + x5303 + x5307 + x5313;
  const amrex::Real dwdot0dsc3 =
    -x5314 + x5315 + x5321 + x5327 + x5333 + x5339 + x5347 + x5360;
  const amrex::Real dwdot0dsc4 =
    x5361 - x5362 + x5368 + x5374 + x5380 + x5386 + x5394 + x5403;
  const amrex::Real dwdot0dsc5 =
    -x5404 + x5405 + x5411 + x5417 + x5423 + x5429 + x5435 + x5444;
  const amrex::Real dwdot0dsc6 =
    -x5445 + x5446 + x5452 + x5458 + x5464 + x5470 + x5476 + x5485;
  const amrex::Real dwdot0dsc7 =
    -x5486 + x5487 + x5493 + x5499 + x5505 + x5511 + x5517 + x5526;
  const amrex::Real dwdot0dsc8 =
    -x5527 + x5528 + x5534 + x5540 + x5546 + x5552 + x5558 + x5566;
  const amrex::Real dwdot0dsc9 =
    x5567 - x5568 + x5572 + x5576 + x5580 + x5584 + x5588 + x5594;
  const amrex::Real dwdot0dsc10 =
    x5595 - x5596 + x5602 + x5608 + x5614 + x5620 + x5626 + x5635;
  const amrex::Real dwdot0dsc11 = -x5636 + x5637 + x5662;
  const amrex::Real dwdot0dsc12 =
    -x5663 + x5664 + x5669 + x5674 + x5679 + x5684 + x5689 + x5694;
  const amrex::Real dwdot0dsc13 =
    -x5695 + x5696 + x5701 + x5706 + x5711 + x5716 + x5721 + x5726;
  const amrex::Real dwdot0dsc14 = x5728;
  const amrex::Real dwdot0dsc15 =
    x5729 - x5730 + x5735 + x5740 + x5745 + x5750 + x5755 + x5760;
  const amrex::Real dwdot0dsc16 =
    -x5761 + x5762 + x5767 + x5772 + x5777 + x5782 + x5787 + x5792;
  const amrex::Real dwdot0dsc17 = x5728;
  const amrex::Real dwdot0dsc18 = x5728;
  const amrex::Real dwdot0dsc19 =
    -x5793 + x5794 + x5801 + x5808 + x5815 + x5821 + x5828 + x5835;
  const amrex::Real dwdot0dsc20 = x5728;
  const amrex::Real dwdot0dsc21 = x5728;
  const amrex::Real dwdot0dsc22 =
    x5662 + x5839 + x5840 + x5842 + x5844 + x5846 + x5848 - x5849 + x5851;
  const amrex::Real dwdot0dsc23 =
    x5852 - x5853 + x5858 + x5863 + x5868 + x5873 + x5878 + x5883;
  const amrex::Real dwdot0dsc24 =
    -x5884 + x5885 + x5890 + x5895 + x5900 + x5905 + x5910 + x5915;
  const amrex::Real dwdot0dsc25 =
    -x5916 + x5917 + x5919 + x5921 + x5923 + x5925 + x5927 + x5929;
  const amrex::Real dwdot0dsc26 =
    -x5930 + x5931 + x5936 + x5941 + x5946 + x5951 + x5956 + x5961;
  const amrex::Real dwdot0dsc27 =
    x5962 - x5963 + x5966 + x5969 + x5972 + x5975 + x5978 + x5981;
  const amrex::Real dwdot0dsc28 =
    -x5982 + x5983 + x5986 + x5989 + x5992 + x5995 + x5998 + x6001;
  const amrex::Real dwdot0dsc29 =
    x6002 - x6003 + x6005 + x6009 + x6013 + x6017 + x6021 + x6025 + x6029;
  const amrex::Real dwdot0dsc30 =
    x5174 + x6030 + x6033 + x6036 + x6039 + x6042 + x6045 + x6048;
  const amrex::Real dwdot0dsc31 =
    x5174 + x6049 + x6054 + x6058 + x6062 + x6066 + x6070 + x6074;
  const amrex::Real dwdot0dsc32 =
    x5174 + x6075 + x6080 + x6084 + x6088 + x6092 + x6096 + x6100;
  const amrex::Real dwdot0dsc33 = x5728;
  const amrex::Real dwdot0dsc34 = x5728;
  const amrex::Real dwdot1dsc0 =
    x5249 + x6101 + x6102 + x6103 + x6104 + x6105 - x6106 - x6107 - x6111 +
    x6113 - x6114 - x6115 - x6116 + x6117 + x6118 - x6132 - x6133 - x6134 -
    x6135 + x6138 + x6141 + x6144 + x6147 + x6150 + x6153 + x6157 + x6161 +
    x6187 + x6189 + x6191 + x6201 + x6204 + x6259 + x6346 + x6733 -
    x4605 * x3891 - x4726 * x4018 + x6110 * x2033;
  const amrex::Real dwdot1dsc1 =
    68000000.0 * x1771 + x5285 + 68000000.0 * x6518 + x6731 + x6737 + x6743 +
    x6746 + x6747 + x6748 + x6752 - x6753 - x6754 - 160.0 * x6759 - x6760 +
    x6761 + x6762 - 1.68e+27 * x6766 - x6771 - x6772 - x6773 -
    2200000000.0 * x6774 - x6775 - x6776 - x6777 - x6778 - x6779 - x6780 +
    x6781 - x6782 + x6783 - x6784 - x6785 - x6786 - 4990000.0 * x6787 - x6788 +
    x6789 - 7120000.0 * x6792 + x6793 + x6794 - x6795 - x6796 - x6797 - x6798 +
    x6799 - 10560000.0 * x6801 - x6802 + x6803 - x6804 - x6805 - x6806 + x6807 +
    x6808 + x6809 - 224960000.0 * x6813 + x6814 - x6815 + x6816 + x6817 +
    x6821 + x6828 + x6833 + x6845 + x6852 + x6855 + x6859 + x6864 + x6867 +
    x6872 + x6873 + x6880 + x6893 + x6898 + x6904 + x6910 + x6913 + x6919 +
    x6929 + x6945 + x6951 + x6964 + x6976 + x6977 + x6983 - x4605 * x3898 +
    x4605 * x3899 - x4632 * x3847 + x4726 * x4019 - x4726 * x4020 -
    x6110 * x2071 + x6110 * x2106 - x6164 * x4725 - x6767 * x6770;
  const amrex::Real dwdot1dsc2 =
    x5307 + x6984 + x6986 + x6990 + x6992 + x6993 + x6994 + 80.0 * x6996 -
    x6997 + x6998 + x6999 + x7000 - x7001 - x7002 - x7003 + x7004 + x7005 +
    x7006 - x7007 + x7008 - x7009 + x7010 - x7011 + x7012 - x7013 + x7014 +
    x7015 - x7016 - x7017 - x7019 - x7020 - x7021 - x7022 - x7023 + x7024 +
    x7027 + x7030 + x7031 + x7036 + x7038 + x7041 + x7046 + x7048 + x7049 +
    x7055 + x7058 + x7060 + x7063 + x7064 + x7065 + x7073 + x7079 + x7082 +
    x7087 + x7090 + x7104 - x4605 * x3900 + x4605 * x3901 - x4632 * x3848 +
    x4726 * x4021 - x4726 * x4022 - x6110 * x2141 + x6110 * x2184;
  const amrex::Real dwdot1dsc3 =
    x5339 + x7106 + x7108 + x7109 + x7110 + x7113 + x7114 + x7115 + x7116 -
    x7117 - x7120 - x7121 + x7122 + x7123 - x7124 - x7125 + x7126 - x7127 +
    x7128 - x7129 + x7130 - x7131 - x7132 - x7133 - x7134 - x7135 + x7136 +
    x7137 + x7138 - x7139 + x7141 - x7142 + x7143 + x7144 + x7145 - x7146 +
    x7149 + x7152 + x7157 + x7160 + x7163 + x7166 + x7171 + x7174 + x7179 +
    x7180 + x7186 + x7189 + x7190 + x7193 + x7194 + x7198 + x7206 + x7212 +
    x7217 + x7220 + x7222 - x4605 * x3902 + x4605 * x3903 - x4632 * x3849 +
    x4726 * x4023 - x4726 * x4024 - x6110 * x2259 + x6110 * x2291 +
    x7119 * sc[18];
  const amrex::Real dwdot1dsc4 =
    x5386 + x7222 + x7224 + x7225 + x7226 - x7227 + x7228 - x7229 + x7230 +
    x7231 - x7232 - x7233 - x7234 + x7235 - x7236 - x7237 - x7238 + x7239 +
    x7240 + x7241 - x7242 + x7243 + x7244 - x7245 + x7246 + x7247 - x7248 -
    x7249 - x7250 - x7251 + x7252 - x7253 + x7256 + x7259 + x7262 + x7267 +
    x7270 + x7273 + x7276 + x7281 + x7282 + x7288 + x7291 + x7292 + x7295 +
    x7296 + x7298 + x7305 + x7311 + x7312 + x7317 + x7320 - x4605 * x3904 +
    x4605 * x3905 - x4632 * x3850 + x4726 * x4025 - x4726 * x4026 -
    x6110 * x2334 + x6110 * x2351;
  const amrex::Real dwdot1dsc5 =
    x5444 + x6582 + x7321 + x7323 + x7324 + x7325 + x7326 + x7328 + x7329 +
    x7334 + x7336 + x7337 + x7339 + x7341 + x7342 + x7343 + x7344 + x7345 +
    x7348 + x7351 + x7353 + x7357 + x7359 + x7361 + x7364 + x7367 + x7370 +
    x7372 + x7374 + x7376 + x7378 + x7380 + x7381 - x7382 + x7383 + x7385 -
    180000.0 * x7387 - x7388 + x7389 - x7390 + 1100000000.0 * x7392 + x7393 +
    x7395 + x7396 - x7397 - x7398 - x7399 + x7400 - x7401 + x7402 - x7403 -
    x7404 + x7405 + x7406 - x7407 - x7408 - x7409 + x7410 + x7411 + x7412 +
    x7413 - x7414 - x7417 + x7418 - x7419 + x7421 + x7422 + x7423 + x7426 +
    x7429 + x7440 + x7441 + x7456 + x7460 + x7463 + x7468 + x7471 + x7477 +
    x7484 + x7490 + x7496 + x7502 + x7506 + x7511 + x7514 + x7515 + x7518 +
    x7528 + x7532 + x7539 + x7556 + x7574 + sc[6] * x7416 - x4605 * x3906 +
    x4605 * x3907 - x4632 * x3852 + x4726 * x4027 - x4726 * x4028 -
    x6110 * x2460 + x6110 * x2507 + x6606 * x6790 + x6767 * x7386;
  const amrex::Real dwdot1dsc6 =
    x5476 + x7575 + x7577 + x7578 + x7579 - x7582 + x7583 + x7584 + x7585 -
    x7586 + x7587 + x7588 + x7589 + x7590 - x7591 + x7592 + x7593 + x7595 -
    x7596 - x7597 - x7598 - x7599 + x7600 + x7601 - x7602 - x7603 - x7604 -
    x7605 - x7606 - x7608 - x7609 - x7610 - x7611 - x7612 + x7613 + x7614 -
    x7615 + x7616 + x7618 - x7619 - 112480000.0 * x7620 + x7621 - x7622 +
    x7624 + x7625 + x7626 - x7627 - x7628 + x7629 + x7633 - x7634 - x7635 -
    x7636 - x7637 + x7638 + x7639 - x7640 + x7641 + x7644 + x7647 + x7648 +
    x7656 + x7670 + x7676 + x7681 + x7686 + x7691 + x7696 + x7699 + x7713 +
    x7716 + x7717 + x7720 + x7721 + x7731 + x7734 + x7735 + x7744 + x7751 +
    x7765 + x7769 + sc[5] * x7416 - x4605 * x3908 + x4605 * x3909 -
    x4632 * x3853 + x4726 * x4029 - x4726 * x4030 - x6110 * x2585 +
    x6110 * x2614;
  const amrex::Real dwdot1dsc7 =
    x5517 + x7102 - x7770 + x7771 - x7772 + x7773 + x7774 - x7775 - x7776 +
    x7777 + x7778 - x7779 + x7780 - x7781 + x7782 - x7783 + x7784 + x7785 -
    x7786 - x7787 + x7788 - x7789 - x7790 - x7791 - x7792 + x7793 + x7794 +
    x7795 - x7796 - x7797 + x7800 + x7803 + x7804 + x7807 + x7812 + x7815 +
    x7818 + x7819 + x7824 + x7827 + x7833 + x7836 + x7837 + x7840 + x7843 +
    x7844 + x7846 + x7853 + x7854 + x7860 + x7865 + x7866 - x4605 * x3910 +
    x4605 * x3911 + x4726 * x4031 - x4726 * x4032 - x6110 * x2652 +
    x6110 * x2666;
  const amrex::Real dwdot1dsc8 =
    x5558 + x6603 + x6981 + x7221 + x7867 + x7868 - x7869 + x7870 - x7871 -
    x7872 + x7873 + x7874 - x7875 + x7876 - x7877 - x7878 - x7879 + x7880 -
    x7881 - x7882 - x7883 + x7884 + x7885 - x7886 - x7887 + 5280000.0 * x7888 -
    x7889 + x7890 - x7891 + x7892 + x7893 + x7894 - x7895 + x7896 + x7899 +
    x7902 + x7903 + x7906 + x7909 + x7912 + x7917 + x7920 + x7925 + x7926 +
    x7932 + x7935 + x7936 + x7939 + x7940 + x7941 + x7948 + x7949 + x7955 +
    x7967 + x7972 + x7973 - x4605 * x3912 + x4605 * x3913 - x4632 * x3854 +
    x4726 * x4033 - x4726 * x4034 - x6110 * x2716 + x6110 * x2733;
  const amrex::Real dwdot1dsc9 =
    x5588 + x6403 + x6983 + x7104 + x7974 + x7975 + x7976 + x7977 - x7978 -
    x7979 - x7980 + x7981 - x7982 + x7983 - x7984 - x7985 + x7986 + x7987 +
    x7988 - x7989 - x7990 + x7991 - x7992 + x7993 - x7994 - x7995 + x7996 -
    x7997 + x7998 + x7999 + x8000 + 9980000.0 * x8001 + x8002 - x8003 + x8004 -
    x8005 - x8006 + x8009 + x8013 + x8014 + x8017 + x8020 + x8025 + x8027 +
    x8032 + x8034 + x8035 + x8042 + x8045 + x8046 + x8051 + x8054 + x8055 +
    x8063 + x8064 + x8073 + x8081 - x4605 * x3914 + x4605 * x3915 -
    x4632 * x3855 + x4726 * x4035 - x4726 * x4036 - x6110 * x2761 +
    x6110 * x2780;
  const amrex::Real dwdot1dsc10 =
    x5626 + x6610 + x7574 + x8083 - x8084 + x8085 + x8086 + x8087 + x8088 -
    x8089 + x8090 - x8091 + x8092 - x8093 + x8094 - x8095 - x8096 - x8097 +
    x8098 - x8099 - x8100 - x8101 + x8102 - x8103 + x8104 + x8105 + x8106 -
    x8107 + x8108 - x8109 - x8110 - x8111 + x8114 + x8117 + x8118 + x8121 +
    x8124 + x8127 + x8133 + x8138 + x8141 + x8142 + x8148 + x8151 + x8152 +
    x8155 + x8156 + x8157 + x8165 + x8166 + x8172 + x8178 + x8179 -
    x4605 * x3916 + x4605 * x3917 + x4726 * x4037 - x4726 * x4038 -
    x6110 * x2818 + x6110 * x2836;
  const amrex::Real dwdot1dsc11 =
    x6185 + x6416 + x6542 + x6979 + x7088 + x8180 - x8181 + x8182 + x8183 -
    x8184 + x8185 + x8186 + x8187 - x8188 + x8189 - x8190 + x8191 - x8192 +
    x8193 - x8194 - x8195 - x8196 + x8197 - x8198 - x8199 - x8200 + x8201 +
    x8202 - x8203 - x8204 - x8205 - x8206 + x8207 + x8208 + x8211 + x8214 +
    x8215 + x8220 + x8221 + x8225 + x8231 + x8234 + x8235 + x8238 + x8239 +
    x8240 + x8242 + x8248 + x8253 + x8264 + x8274 + x8275 + x8277 -
    x4605 * x3918 + x4605 * x3919 - x4632 * x3857 - x4726 * x4039 -
    x6110 * x2859 + x6110 * x2883;
  const amrex::Real dwdot1dsc12 =
    x5694 + x6609 + x8279 + x8280 - x8281 - x8282 + x8283 + x8284 - x8285 +
    x8287 - x8288 + x8289 + x8290 - x8292 - x8293 + x8294 + x8295 - x8296 +
    x8297 + x8298 - x8299 + x8300 - x8301 - x8302 + x8303 + x8304 - x8305 -
    x8306 - x8307 + x8308 + x8309 - x8310 - x8312 - x8316 - x8317 - x8318 -
    x8319 - x8320 + x8321 - x8322 + x8323 + x8324 + x8325 + x8326 + x8328 +
    x8329 + x8330 - x8331 - x8332 + x8333 - x8334 - x8335 - x8336 + x8337 +
    x8338 - x8339 + x8342 + x8345 + x8353 + x8368 + x8373 + x8379 + x8384 +
    x8387 + x8392 + x8397 + x8399 + x8412 + x8415 + x8416 + x8419 + x8420 +
    x8431 + x8434 + x8443 + x8445 + x8448 + x8455 + x8468 - x4605 * x3920 +
    x4605 * x3921 - x4632 * x3858 + x4726 * x4040 - x4726 * x4041 -
    x6110 * x2960 + x6110 * x2989;
  const amrex::Real dwdot1dsc13 =
    x5726 + x8179 + x8469 - x8470 + x8471 - x8472 - 5280000.0 * x8474 - x8475 +
    x8476 - x8477 + x8478 + x8479 - x8480 + x8481 + x8482 + x8483 - x8484 -
    x8485 - x8486 + x8487 - x8488 + x8489 - x8490 - x8491 + x8492 - x8493 +
    x8494 - x8495 + x8496 + 1100000000.0 * x8497 - 1100000000.0 * x8498 -
    x8499 - x8500 + x8503 + x8506 + x8509 + x8512 + x8517 + x8520 + x8521 +
    x8526 + x8529 + x8533 + x8539 + x8542 + x8543 + x8546 + x8547 + x8556 +
    x8559 + x8561 + x8568 + x8571 + x8577 + x8582 - x4605 * x3922 +
    x4605 * x3923 + x4726 * x4042 - x4726 * x4043 - x6110 * x3022 +
    x6110 * x3035;
  const amrex::Real dwdot1dsc14 =
    x8276 - x8583 + x8584 - x8585 - x8586 + x8587 + x8588 - x8589 + x8590 -
    x8591 - x8592 - x8593 + x8594 + x8595 + x8596 + x8597 - x8598 - x8599 +
    x8602 + x8605 + x8606 + x8612 + x8615 + x8616 + x8617 + x8624 + x8625 +
    x8631 + x8636 + x8661 + x8670 - x6110 * x3049 + x6110 * x3068;
  const amrex::Real dwdot1dsc15 =
    x5760 + x6613 + x6980 + x8670 - x8671 + x8672 - x8673 - x8674 - x8675 +
    x8676 - x8677 + x8678 + x8679 + x8680 + x8681 - x8682 - x8683 + x8684 -
    x8685 - x8686 + x8687 - x8688 + x8689 - x8690 + x8691 - x8692 + x8693 -
    x8694 - x8695 + x8696 + x8697 + x8698 - x8699 + x8702 + x8706 + x8707 +
    x8712 + x8718 + x8723 + x8729 + x8735 + x8741 + x8742 + x8750 + x8753 +
    x8754 + x8759 + x8761 + x8762 + x8769 + x8770 + x8775 + x8784 -
    x4605 * x3926 + x4605 * x3927 + x4726 * x4046 - x4726 * x4047 -
    x6110 * x3121 + x6110 * x3138;
  const amrex::Real dwdot1dsc16 =
    x5792 + x6451 + x6610 + x8669 - x8786 + x8787 + x8788 + x8789 - x8790 +
    x8791 + x8792 + x8793 + x8795 + x8796 + x8797 - x8798 + x8799 - x8800 +
    x8801 + x8802 + x8803 - x8804 - x8805 - x8809 + x8810 - x8811 - x8812 -
    x8813 - x8814 - x8815 - x8816 - x8817 + x8818 + x8819 - x8820 - x8821 -
    x8822 - x8823 - x8824 - x8825 + x8826 - x8827 - x8828 + x8829 + x8830 +
    x8831 + x8832 - x8833 + x8834 - x8835 + x8838 + x8841 + x8851 + x8852 +
    x8867 + x8872 + x8878 + x8884 + x8885 + x8890 + x8895 + x8908 + x8909 +
    x8912 + x8916 + x8917 + x8918 + x8926 + x8927 + x8934 + x8948 -
    x4605 * x3928 + x4605 * x3929 - x4632 * x3859 + x4726 * x4048 -
    x4726 * x4049 - x6110 * x3208 + x6110 * x3232;
  const amrex::Real dwdot1dsc17 =
    x8949 + x8950 - x8951 - x8952 - x8953 + x8954 - x8955 - x8956 - x8957 +
    x8958 - x8959 + x8961 + x8963 + x8964 + x8968 + x8969 + x8973 + x8974 +
    x8979 + x8982 + x8985 + x6110 * x3239;
  const amrex::Real dwdot1dsc18 =
    x8986 + x8987 + x8988 - x8989 - x8990 + x8991 - x8992 + x8993 - x8994 -
    x8995 + x8996 - x8997 - x8998 - x8999 + x9000 + x9001 - x9002 + x9003 +
    x9004 - x9005 - x9006 + x9007 + x9010 + x9013 + x9014 + x9016 + x9017 +
    x9019 + x9020 + x9030 + x9031 + x9038 + x9039 + x9045 + x9050 + x9051 +
    x9054 + sc[3] * x7119 - x4605 * x3930 - x6110 * x3247 + x6110 * x3253;
  const amrex::Real dwdot1dsc19 =
    x5835 + x6459 + x7090 + x9055 - x9056 - x9057 + x9058 - x9059 - x9060 +
    x9061 - x9062 + x9063 + x9064 + 80.0 * x9065 + x9067 - x9068 + x9069 +
    x9070 - x9071 + x9072 - x9073 - x9074 - x9075 - x9076 - x9077 + x9078 -
    x9079 + x9080 - x9081 - x9082 + x9083 + x9084 + x9085 + x9088 + x9091 +
    x9092 + x9097 + x9103 + x9104 + x9110 + x9115 + x9121 + x9127 + x9133 +
    x9136 + x9137 + x9141 + x9142 + x9146 + x9153 + x9154 + x9160 + x9165 -
    x4605 * x3931 + x4605 * x3932 + x4726 * x4050 - x4726 * x4051 -
    x6110 * x3292 + x6110 * x3308;
  const amrex::Real dwdot1dsc20 =
    x8985 + x9166 + x9167 - x9168 - 8.4e+26 * x9169 - x9170 - x9171 - x9172 -
    x9173 - 80.0 * x9174 - x9175 + x9176 - x9177 + x9178 + x9180 + x9184 +
    x9185 + x9189 + x9190 + x9194 + x9195 + x9199 + x9202 + x6110 * x3313;
  const amrex::Real dwdot1dsc21 =
    x9054 + x9203 - x9204 + x9205 - x9206 - x9207 + x9208 - x9209 + x9210 -
    x9211 + x9212 + x9213 - x9214 + x9215 - x9216 - x9217 - x9218 + x9219 +
    x9222 + x9225 + x9226 + x9227 + x9230 + x9236 + x9237 + x9238 + x9245 +
    x9246 + x9252 + x9257 + x9258 - x6110 * x3320 + x6110 * x3324;
  const amrex::Real dwdot1dsc22 =
    x5844 + x6982 + x8267 + x8273 + x9053 - x9259 - x9260 + x9261 - x9262 +
    x9263 - x9264 - x9265 - x9266 + x9267 + x9268 + x9269 - x9270 - x9271 -
    x9272 + x9273 + x9274 + x9275 - x9276 + x9277 + x9278 + x9279 - x9280 +
    x9281 - x9282 + x9283 - x9284 - x9285 - x9286 + x9287 + x9290 + x9293 +
    x9294 + x9297 + x9302 + x9305 + x9308 + x9313 + x9314 + x9317 + x9318 +
    x9324 + x9327 + x9328 + x9329 + x9330 + x9335 + x9342 + x9343 + x9349 +
    x9354 + x9355 - x4605 * x3933 + x4605 * x3934 + x4726 * x4052 -
    x4726 * x4053 - x6110 * x3342 + x6110 * x3352;
  const amrex::Real dwdot1dsc23 =
    x5883 + x7866 - x9356 + x9357 - x9358 - x9359 - x9360 + x9361 - x9362 -
    x9363 + x9364 - x9365 - x9366 + x9367 - x9368 - x9369 + x9370 - x9371 -
    x9372 - x9373 + x9374 + x9375 - x9376 + x9377 - x9378 + x9379 + x9380 +
    x9381 + x9382 + x9383 + x9386 + x9389 + x9390 + x9394 + x9399 + x9403 +
    x9408 + x9413 + x9418 + x9419 + x9425 + x9428 + x9429 + x9432 + x9433 +
    x9434 + x9441 + x9442 + x9448 + x9453 - x4605 * x3935 + x4605 * x3936 +
    x4726 * x4054 - x4726 * x4055 - x6110 * x3385 + x6110 * x3402;
  const amrex::Real dwdot1dsc24 =
    x5915 + x6582 + x6664 + x7973 + x9052 - x9454 - x9455 + x9456 + x9457 +
    x9458 - x9459 - x9460 + x9461 - x9462 + x9463 - x9464 + x9465 - x9466 -
    x9467 + x9468 - x9469 + x9470 + x9471 + x9472 + x9473 - x9474 - x9475 +
    x9476 - x9477 - x9478 + x9479 + x9482 + x9485 + x9489 + x9493 + x9498 +
    x9503 + x9508 + x9515 + x9520 + x9523 + x9524 + x9527 + x9528 + x9530 +
    x9531 + x9538 + x9543 + x9548 + x9550 - x4605 * x3937 + x4605 * x3938 +
    x4726 * x4056 - x4726 * x4057 - x6110 * x3434 + x6110 * x3449;
  const amrex::Real dwdot1dsc25 =
    x5929 + x6691 + x7092 + x7103 + x8269 + x9355 + x9551 + x9552 + x9553 +
    x9554 + x9555 + x9556 - x9557 - x9558 + x9559 - x9560 - x9561 + x9562 -
    x9563 - x9564 - x9565 + x9566 + x9567 - x9568 + x9569 + x9570 - x9571 -
    x9572 - x9573 - x9574 - x9575 + x9576 + x9579 + x9582 + x9585 + x9588 +
    x9594 + x9597 + x9602 + x9607 + x9610 + x9611 + x9614 + x9615 + x9617 +
    x9624 + x9625 + x9630 + x9635 + x9636 - x4605 * x3939 + x4605 * x3940 +
    x4726 * x4058 - x4726 * x4059 - x6110 * x3466 + x6110 * x3473;
  const amrex::Real dwdot1dsc26 =
    x5961 + x6184 + x9636 + x9637 + x9638 + x9639 + x9640 + x9641 + x9642 -
    x9643 - x9644 - x9645 - x9646 - x9647 - x9648 + x9649 + x9650 + x9651 -
    x9652 - x9653 + x9654 - x9655 + x9656 + x9657 - x9658 - x9659 - x9660 -
    x9661 + x9662 + x9665 + x9668 + x9672 + x9677 + x9681 + x9686 + x9691 +
    x9696 + x9701 + x9704 + x9705 + x9708 + x9709 + x9711 + x9718 + x9719 +
    x9724 + x9729 - x4605 * x3941 + x4605 * x3942 + x4726 * x4060 -
    x4726 * x4061 - x6110 * x3504 + x6110 * x3517;
  const amrex::Real dwdot1dsc27 =
    x5981 + x6361 + x6730 + x7095 + x9550 + x9730 - x9731 - x9732 + x9733 +
    x9734 + x9735 - x9736 + x9737 - x9738 - x9739 + x9740 - x9741 + x9742 +
    x9743 - x9744 + x9745 - x9746 + x9747 - x9748 + x9749 + x9750 - x9751 -
    x9752 - x9753 + x9754 - x9755 + x9756 + x9759 + x9762 + x9767 + x9769 +
    x9773 + x9778 + x9781 + x9786 + x9789 + x9790 + x9793 + x9794 + x9796 +
    x9803 + x9804 + x9809 + x9814 + x9815 - x4605 * x3943 + x4605 * x3944 +
    x4726 * x4062 - x4726 * x4063 - x6110 * x3536 + x6110 * x3548;
  const amrex::Real dwdot1dsc28 =
    x6001 + x9816 - x9817 + x9818 + x9819 + x9820 + x9821 - x9822 + x9823 -
    x9824 - x9825 + x9826 - x9827 - x9828 + x9829 + x9830 + x9831 - x9832 +
    x9833 - x9834 - x9835 - x9836 - x9837 - x9838 - x9839 + x9840 + x9843 +
    x9846 + x9849 + x9852 + x9857 + x9860 + x9864 + x9867 + x9872 + x9875 +
    x9876 + x9879 + x9880 + x9882 + x9883 + x9890 + x9895 + x9900 + x9902 -
    x4605 * x3945 + x4605 * x3946 - x4726 * x4064 - x6110 * x3564 +
    x6110 * x3580;
  const amrex::Real dwdot1dsc29 =
    x6029 + x9902 + x9903 - x9904 + x9905 - x9906 - x9907 - x9908 - x9909 -
    x9910 + x9911 + x9912 - x9913 + x9914 + x9915 - x9916 - x9917 - x9918 +
    x9919 + x9920 + x9921 - x9922 - x9923 + x9924 + x9925 - x9926 + x9927 +
    x9930 + x9933 + x9937 + x9940 + x9943 + x9948 + x9952 + x9955 + x9960 +
    x9963 + x9964 + x9967 + x9968 + x9970 + x9977 + x9978 + x9983 + x9988 -
    x4605 * x3947 + x4605 * x3948 - x4726 * x4065 - x6110 * x3593 +
    x6110 * x3607;
  const amrex::Real dwdot1dsc30 =
    -x10000 + x10001 - x10002 - x10003 + x10004 - x10005 - x10006 + x10007 +
    x10008 - x10009 + x10010 + x10011 + x10014 + x10017 + x10020 + x10023 +
    x10027 + x10030 + x10033 + x10036 + x10041 + x10044 + x10045 + x10048 +
    x10049 + x10051 + x10058 + x10059 + x10064 + x10069 + x6048 + x6318 +
    x6368 + x9901 - x9989 + x9990 - x9991 - x9992 + x9993 - x9994 - x9995 -
    x9996 + x9997 + x9998 - x9999 - x4605 * x3949 + x4605 * x3950 -
    x4726 * x4066 - x6110 * x3621 + x6110 * x3635;
  const amrex::Real dwdot1dsc31 =
    x10070 + x10071 + x10072 + x10073 + x10074 - x10075 - x10076 + x10077 -
    x10078 + x10079 - x10080 - x10081 - x10082 + x10083 - x10084 - x10085 -
    x10086 - x10087 + x10090 + x10093 + x10096 + x10099 + x10102 + x10105 +
    x10108 + x10110 + x10112 + x10113 + x10114 + x10118 + x10121 + x10124 +
    x10125 + x6074 + x6190 + x6733 - x4605 * x3951 - x4726 * x4067 +
    x6110 * x3651;
  const amrex::Real dwdot1dsc32 =
    x10126 + x10127 + x10128 + x10129 + x10130 + x10131 - x10132 - x10133 -
    x10134 - x10135 - x10136 + x10137 + x10139 - x10140 - x10141 - x10142 -
    x10143 + x10144 - x10145 + x10148 + x10150 + x10152 + x10155 + x10158 +
    x10160 + x10162 + x10163 + x10164 + x10168 + x10169 + x10172 + x10175 +
    x10176 + x6100 + x6200 + x6261 + x6322 + x6369 + x7103 + x8984 -
    x4605 * x3952 - x4726 * x4068 + x6110 * x3664;
  const amrex::Real dwdot1dsc33 =
    x10125 + x10177 + x10178 + x10179 + x10180 + x10181 + x10182 - x10183 -
    x10184 - x10185 - x10186 + x10187 - x10188 + x10189 - x10190 - x10191 +
    x10192 + x10195 + x10197 + x10198 + x10199 + x10203 + x10206 + x10209 +
    x9051 + x9815 - x4605 * x3953 + x6110 * x3668;
  const amrex::Real dwdot1dsc34 =
    x10176 + x10210 + x10211 - x10212 + x10213 + x10214 - x10215 - x10216 -
    x10217 + x10218 - x10219 - x10220 - x10221 + x10223 + x10228 + x10229 +
    x10230 + x10231 + x10237 + x10242 + x10247 + x6190 + x9258 - x6110 * x3674 +
    x6110 * x3677;
  const amrex::Real dwdot2dsc0 = -x10248 + x10249 + x10250 - x10251 - x10252 +
                                 x10253 + x10260 + x10264 + x10301 + x10311 +
                                 x10322 + x10325 + x5189 + x6107 - x6113 +
                                 x6116 - x4553 * x3703 - x4802 * x3779;
  const amrex::Real dwdot2dsc1 =
    x10298 + x10326 + x10327 + x10328 + x10329 - x10330 - x10331 + x10332 -
    x10333 - x10334 - x10335 - x10336 - x10337 - x10338 + x10339 + x10340 +
    x10341 + x10344 + x10347 + x10350 + x10356 + x5262 + x6752 + x6754 + x6771 +
    x6772 + x6780 - x6783 + x6786 - x6808 - x6816 + x6823 + x6840 + x6909 +
    x6928 + x6939 + x6948 - x4553 * x3708 + x4553 * x3709 + x4802 * x3780 -
    x4802 * x3781;
  const amrex::Real dwdot2dsc2 =
    x10298 + x10360 + x10364 + x10366 + x10367 + x10372 + x10373 + x10377 +
    x10378 - x10379 + x10380 - x10381 + x10382 - x10383 - x10384 + x10385 -
    x10386 + x10387 + x10388 + x10389 + x10390 - x10391 - x10392 + x10393 +
    x10394 + x10395 - x10396 + x10397 + x10398 - 480000.0 * x10400 - x10401 -
    x10402 - x10403 - x10404 + x10408 + x10413 + x10418 + x10423 + x10427 +
    x10435 + x10441 + x10446 + x10456 + x5313 + x6992 - x6994 - x6998 + x7002 -
    x7005 - x7006 + x7009 + x7021 - x4553 * x3710 + x4553 * x3711 +
    x4802 * x3782 - x4802 * x3784;
  const amrex::Real dwdot2dsc3 =
    x10298 + x10457 + x10459 + x10462 + x10465 + x10467 - x10468 + x10469 -
    x10470 + x10471 + x10472 - x10473 + x10474 - x10475 + x10477 - x10478 -
    x10479 + x10480 + x10481 - x10482 + x10484 - x10485 + x10487 + x10491 +
    x10494 + x10498 + x10505 + x10509 + x10516 + x5360 + x7110 - x7115 - x7123 +
    x7124 - x7136 + x7139 + x7142 + x7218 - x4553 * x3712 + x4553 * x3713 +
    x4802 * x3785 - x4802 * x3786;
  const amrex::Real dwdot2dsc4 =
    x10298 + x10517 + x10518 + x10519 + x10520 + x10521 - x10522 - x10523 +
    x10525 + x10526 - x10527 - x10528 - x10529 + x10530 - x10531 - x10532 +
    x10533 - x10534 + x10537 + x10540 + x10543 + x10549 + x5368 - x7228 -
    x7230 - x7231 + x7232 + x7233 + x7253 + x7319 - x4553 * x3714 +
    x4553 * x3715 + x4802 * x3787 - x4802 * x3788;
  const amrex::Real dwdot2dsc5 =
    -576000.0 * x10273 + 576000.0 * x10275 + x10550 + x10551 - x10552 - x10553 -
    x10554 + x10556 + x10557 + x10558 - x10559 + x10560 + x10561 + x10562 -
    x10563 - x10564 - x10565 - x10566 + x10567 + x10570 + x10573 + x10580 +
    x10583 + x10589 + x5417 + x7382 - x7383 - x7389 - x7393 + x7398 + x7409 +
    x7518 - x4553 * x3716 + x4553 * x3717 + x4802 * x3789 - x4802 * x3790;
  const amrex::Real dwdot2dsc6 =
    -3696000.0 * x10273 + 3696000.0 * x10275 + x10590 + x10591 + x10592 -
    x10593 + x10594 + x10595 - x10596 - x10597 + x10598 - x10599 + x10600 -
    x10601 - x10602 - x10603 - x10604 + x10607 + x10610 + x10611 + x10614 +
    x10619 + x10625 + x5458 - x7587 + x7591 - x7592 - x7601 + x7602 + x7605 +
    x7734 - x4553 * x3718 + x4553 * x3719 + x4802 * x3791 - x4802 * x3792;
  const amrex::Real dwdot2dsc7 =
    x10299 + x10626 + x10628 + x10630 - x10631 + x10632 - x10633 + x10634 -
    x10635 + x10636 - x10637 - x10638 + x10639 + x10640 - x10641 + x10644 +
    x10647 + x10650 + x10656 + x5493 + x7772 - x7774 + x7776 - x7777 - x7778 +
    x7779 - x4553 * x3720 + x4553 * x3721 + x4802 * x3793 - x4802 * x3794;
  const amrex::Real dwdot2dsc8 =
    x10298 + x10657 + x10659 + x10660 - x10661 + x10662 - x10663 - x10664 +
    x10665 - x10666 + x10667 - x10668 + x10670 + x10671 - x10672 - x10673 -
    x10674 + 240000.0 * x10675 + x10676 + x10679 + x10682 + x10685 + x10688 +
    x10694 + x5534 + x7869 - x7870 + x7872 - x7874 + x7875 - x7884 + x7964 -
    x4553 * x3722 + x4553 * x3723 + x4802 * x3795 - x4802 * x3796;
  const amrex::Real dwdot2dsc9 =
    x10298 + x10695 + x10696 + x10697 + x10698 - x10699 + x10700 + x10701 +
    x10702 + x10703 + x10705 + x10706 - x10707 - x10708 - x10709 - x10710 -
    x10711 + x10712 - x10713 + x10715 - x10716 + x10719 + x10722 + x10725 +
    x10732 + x5576 - x7977 - x7981 + x7984 + x7990 + x7995 - x8004 -
    x4553 * x3724 + x4553 * x3725 + x4802 * x3797 - x4802 * x3798;
  const amrex::Real dwdot2dsc10 =
    x10298 + x10733 + x10734 + x10736 - x10737 + x10738 + x10739 - x10740 -
    x10741 + x10742 + x10743 - x10744 - x10745 - x10746 + x10747 + x10750 +
    x10753 + x10756 + x10759 + x10765 + x5608 - x8085 - x8087 - x8092 + x8093 +
    x8096 + x8101 - x4553 * x3726 + x4553 * x3727 + x4802 * x3799 -
    x4802 * x3800;
  const amrex::Real dwdot2dsc11 =
    x10298 + x10766 + x10767 + x10768 + x10769 - x10770 + x10771 + x10772 +
    x10773 - x10774 - x10775 + x10776 - x10777 - x10778 + x10779 - x10780 +
    x10781 - x10782 - x10783 + x10786 + x10789 + x10790 + x10794 + x10801 -
    x8183 - x8185 - x8189 + x8190 + x8194 + x8195 + x8260 - x4553 * x3728 +
    x4553 * x3729 + x4802 * x3801 - x4802 * x3802;
  const amrex::Real dwdot2dsc12 =
    -420000.0 * x10273 + 420000.0 * x10275 + x10802 + x10803 + x10804 - x10805 +
    x10806 - x10807 + x10808 - x10809 + x10810 - x10811 - x10812 + x10813 +
    x10814 + x10815 - x10816 - x10817 - x10818 + x10819 + x10823 + x10827 +
    x10830 + x10833 + x10840 + x10846 + x5679 + x8282 - x8283 + x8285 - x8289 -
    x8295 + x8331 + x8434 - x4553 * x3730 + x4553 * x3731 + x4802 * x3803 -
    x4802 * x3804;
  const amrex::Real dwdot2dsc13 =
    -864000.0 * x10273 + 864000.0 * x10275 + x10756 + x10847 + x10848 + x10850 -
    x10851 - x10852 + x10853 - x10854 - x10855 - x10856 + x10857 - x10858 +
    x10859 + x10860 + x10861 + x10864 + x10867 + x10870 + x10877 + x10883 +
    x5706 - x8471 + x8475 - x8478 - x8479 + x8490 + x8499 + x8532 + x8559 -
    x4553 * x3732 + x4553 * x3733 + x4802 * x3805 - x4802 * x3806;
  const amrex::Real dwdot2dsc14 = x10884 + x10885 - x10886 + x10890 + x10893 +
                                  x10905 + x10911 + x8583 + x8586 - x8587 -
                                  x8588 + x8592 - x8595 - x4553 * x3734 +
                                  x4553 * x3735 + x4802 * x3807 - x4802 * x3808;
  const amrex::Real dwdot2dsc15 =
    x10299 + x10912 + x10913 - x10914 - x10915 - x10916 - x10917 + x10918 +
    x10919 - x10920 - x10921 + x10922 + x10923 + x10924 + x10927 + x10930 +
    x10933 + x10941 + x5740 + x8673 + x8677 - x8678 - x8679 - x8691 + x8692 -
    x4553 * x3736 + x4553 * x3737 + x4802 * x3809 - x4802 * x3810;
  const amrex::Real dwdot2dsc16 =
    x10298 + x10942 + x10943 - x10944 - x10945 - x10946 + x10947 + x10948 -
    x10949 + x10950 + x10951 - x10952 - x10953 - x10954 - x10955 + x10956 +
    x10959 + x10963 + x10966 + x10972 + x5772 + x8790 - x8791 - x8799 - x8802 +
    x8824 + x8827 - x4553 * x3738 + x4553 * x3739 + x4802 * x3811 -
    x4802 * x3812;
  const amrex::Real dwdot2dsc17 = x10973 - x10974 + x10977 + x10979 + x10981 +
                                  x10985 + x10987 + x8953 - x8954 + x8955 -
                                  x4553 * x3740 - x4802 * x3813;
  const amrex::Real dwdot2dsc18 =
    x10902 + x10904 + x10988 + x10989 + x10990 + x10991 + x10992 - x10993 -
    x10994 + x10997 + x10999 + x11002 + x11008 + x8990 - x8991 + x8994 - x8996 -
    x9001 + x9005 - x4553 * x3741 + x4553 * x3742 + x4802 * x3814 -
    x4802 * x3815;
  const amrex::Real dwdot2dsc19 =
    x10299 + x11009 + x11010 + x11011 + x11012 - x11013 + x11014 + x11015 -
    x11016 - x11017 - x11018 + x11019 - x11020 - x11021 + x11024 + x11027 +
    x11030 + x11033 + x11039 + x5808 + x9057 - x9058 + x9060 - x9061 - x9064 +
    x9077 - x4553 * x3743 + x4553 * x3744 + x4802 * x3816 - x4802 * x3817;
  const amrex::Real dwdot2dsc20 = x10987 + x11040 + x11041 - x11042 + x11045 +
                                  x11047 + x11049 + x11053 + x9168 + x9173 -
                                  x9176 + x9181 - x4553 * x3745 - x4802 * x3818;
  const amrex::Real dwdot2dsc21 =
    x10905 + x11054 + x11055 - x11056 + x11059 + x11062 + x11065 + x11071 +
    x9204 - x9205 + x9207 - x9208 - x9210 + x9211 - x4553 * x3746 +
    x4553 * x3747 + x4802 * x3819 - x4802 * x3820;
  const amrex::Real dwdot2dsc22 =
    x10299 + x11072 + x11073 + x11074 - x11075 + x11076 - x11077 - x11078 -
    x11079 + x11080 - x11081 + x11082 + x11083 - x11084 + x11087 + x11090 +
    x11093 + x11096 + x11102 + x5645 + x5846 + x9260 - x9261 + x9264 - x9269 -
    x9275 + x9276 - x4553 * x3748 + x4553 * x3749 + x4802 * x3821 -
    x4802 * x3822;
  const amrex::Real dwdot2dsc23 =
    x10299 + x11103 + x11104 + x11105 - x11106 - x11107 + x11108 + x11109 -
    x11110 + x11111 - x11112 - x11113 + x11114 - x11115 + x11118 + x11121 +
    x11124 + x11130 + x5863 + x9358 + x9360 + x9362 - x9364 - x9370 - x9377 -
    x4553 * x3750 + x4553 * x3751 + x4802 * x3823 - x4802 * x3824;
  const amrex::Real dwdot2dsc24 =
    x11131 - x11132 + x11133 - x11134 + x11135 - x11136 + x11137 - x11138 +
    x11139 - x11140 + x11143 + x11146 + x11147 + x11150 + x11155 + x5895 +
    x9455 - x9458 + x9460 - x9470 - x9472 + x9474 - x4553 * x3752 +
    x4553 * x3753 + x4802 * x3825 - x4802 * x3826;
  const amrex::Real dwdot2dsc25 =
    x11147 + x11156 + x11157 - x11158 + x11159 + x11160 - x11161 - x11162 -
    x11163 - x11164 + x11165 + x11168 + x11171 + x11174 + x11179 + x5921 -
    x9551 - x9556 + x9557 + x9558 + x9561 - x9576 - x4553 * x3754 +
    x4553 * x3755 + x4802 * x3827 - x4802 * x3828;
  const amrex::Real dwdot2dsc26 =
    x11147 - x11180 + x11181 + x11182 + x11183 - x11184 - x11185 + x11186 -
    x11187 - x11188 + x11189 + x11192 + x11195 + x11198 + x11203 + x5941 -
    x9637 - x9641 + x9646 - x9650 + x9652 + x9661 - x4553 * x3756 +
    x4553 * x3757 + x4802 * x3829 - x4802 * x3830;
  const amrex::Real dwdot2dsc27 =
    x11147 + x11204 + x11205 - x11206 - x11207 + x11208 + x11209 - x11210 -
    x11211 - x11212 + x11213 + x11216 + x11219 + x11222 + x11227 + x5969 +
    x9732 - x9733 + x9736 - x9737 - x9740 + x9751 - x4553 * x3758 +
    x4553 * x3759 + x4802 * x3831 - x4802 * x3832;
  const amrex::Real dwdot2dsc28 =
    -x11228 + x11229 - x11230 - x11231 - x11232 + x11233 - x11234 + x11235 +
    x11236 + x11239 + x11242 + x11243 + x11246 + x11251 + x5989 + x9817 -
    x9819 - x9820 + x9824 - x9833 + x9836 - x4553 * x3760 + x4553 * x3761 +
    x4802 * x3833 - x4802 * x3834;
  const amrex::Real dwdot2dsc29 =
    x11243 + x11252 - x11253 - x11254 - x11255 - x11256 - x11257 + x11258 +
    x11259 + x11260 + x11263 + x11266 + x11269 + x11274 + x6009 + x9904 +
    x9906 + x9908 - x9920 - x9921 - x9924 - x4553 * x3762 + x4553 * x3763 +
    x4802 * x3835 - x4802 * x3836;
  const amrex::Real dwdot2dsc30 =
    x10006 - x10008 + x10306 - x11275 + x11276 + x11277 + x11278 - x11279 -
    x11280 - x11281 + x11284 + x11287 + x11288 + x11291 + x11296 + x6036 +
    x9989 + x9995 - x9997 - x9998 - x4553 * x3764 + x4553 * x3765 +
    x4802 * x3837 - x4802 * x3838;
  const amrex::Real dwdot2dsc31 = x10076 - x10079 + x10084 + x10322 + x11297 -
                                  x11298 + x11299 + x11300 - x11301 - x11302 +
                                  x11303 + x11305 + x11307 + x11310 + x6054 -
                                  x4553 * x3766 - x4802 * x3839;
  const amrex::Real dwdot2dsc32 = x10132 + x10135 - x10144 + x11307 + x11311 -
                                  x11312 + x11313 - x11314 - x11315 + x11316 +
                                  x11318 + x11320 + x11323 + x6080 -
                                  x4553 * x3767 - x4802 * x3840;
  const amrex::Real dwdot2dsc33 = x10184 - x10187 + x10190 + x10986 + x11306 +
                                  x11324 + x11325 - x11326 + x11328 + x11330 +
                                  x11333 - x4553 * x3768 - x4802 * x3841;
  const amrex::Real dwdot2dsc34 = x10212 - x10213 + x10216 + x10221 + x10310 +
                                  x10903 + x11288 + x11336 + x11338 + x11342 -
                                  x4553 * x3769 + x4553 * x3770 - x4802 * x3842;
  const amrex::Real dwdot3dsc0 =
    -x10253 - x10263 + x11343 - x11344 - x11345 - x11347 - x11348 + x11352 +
    x11355 + x11380 + x11382 + x11437 + x11446 + x11449 + x5180 - x5181 +
    x5182 - x5183 + x5185 + x5225 + x6105 - x6193 - x6195 + x2033 * x11346;
  const amrex::Real dwdot3dsc1 =
    x10345 - x10346 + x10348 - x10349 - x10352 + x11450 + x11451 + x11452 +
    x11453 + x11454 - x11455 - x11456 + x11457 + x11458 - x11459 - x11460 -
    x11461 - x11462 + x11463 + x11464 + x11466 - x11467 + x11470 + x11471 +
    x11485 + x11487 + x11492 - x5258 + x5260 - x5261 + x5273 + x6742 + x6751 +
    x6876 + x6909 + x6931 + x6932 - x6940 + x6941 - x6942 + x6944 + x6951 +
    sc[4] * x11465 - x2071 * x11346 + x2106 * x11346;
  const amrex::Real dwdot3dsc2 =
    x10363 + x10394 + x10420 - x10421 + x10422 + x10439 + x10442 + x10444 -
    x10445 + x10448 - x10449 + x11487 + x11493 + x11494 + x11495 + x11496 +
    x11497 - x11498 - x11499 + x11500 + x11501 - x11502 - x11503 + x11504 -
    x11505 - x11506 - x11507 + x11508 + x11510 + x11513 + x11514 + x11529 +
    x11534 + x4480 + x5299 - x5308 + x5309 - x5310 + x5311 + x5312 + x6991 +
    x7066 + x7069 - x7070 - x7072 + x7082 + sc[6] * x11509 - x2141 * x11346 +
    x2184 * x11346;
  const amrex::Real dwdot3dsc3 =
    x10387 - 0.15892 * x10466 + x10481 - x10495 + x10496 - x10497 - x10506 -
    x10507 + x10508 - x10511 - x10515 + x11486 + x11538 + x11542 + x11543 +
    x11546 + x11550 + x11551 + x11555 + x11556 + x11558 + x11559 + x11560 -
    x11561 - x11562 + x11563 + x11566 + x11567 + x11568 - x11569 + x11570 -
    x11571 + x11572 - x11573 - x11574 + x11575 - x11576 - x11577 - x11578 +
    x11579 - x11580 + x11585 + x11589 + x11596 + x11600 + x11601 + x11608 +
    x11615 + x11620 + x11621 + x11625 + x11652 + x11656 + x11658 + x11666 +
    x5347 + x5348 - x5349 - x5351 - x5352 - x5353 - x5355 + x5356 - x5359 -
    x7110 - 299400000.0 * x7112 + x7196 - x7199 + x7203 - x7204 + x7205 +
    x7220 - x2259 * x11346 + x2291 * x11346 - x11565 * x11564 * x11392;
  const amrex::Real dwdot3dsc4 =
    13400000.0 * sc[9] + x10524 - x10538 + x10539 + x10541 - x10542 - x10545 +
    x11486 + x11637 + x11667 + x11668 + x11669 + x11670 + x11671 - x11672 -
    x11673 - x11674 + x11675 + x11676 - x11677 - x11678 - x11679 + x11680 +
    x11681 - x11682 + x11686 + x11689 + x11692 + x11698 + x11713 + x11715 +
    x11720 + x5363 - x5364 - x5365 + x5366 - x5367 + x5374 + x7114 - x7299 +
    x7301 + x7302 - x7303 + x7312 + sc[1] * x11465 - x2334 * x11346 +
    x2351 * x11346;
  const amrex::Real dwdot3dsc5 =
    -x10571 + x10572 + x10581 - x10582 - x10584 + x11721 + x11722 + x11723 +
    x11724 + x11725 + 1455.89189189189 * x11726 + x11728 - x11729 - x11730 +
    x11731 - x11732 - 1455.89189189189 * x11733 - 804000.0 * x11734 - x11735 -
    x11736 - x11737 + x11738 - x11739 + x11740 + x11741 + x11744 + x11745 +
    x11759 + x11764 + x5412 + x5413 - x5414 - x5415 - x5416 + x5429 - x7516 +
    x7517 - x7519 + x7520 + x7524 - x7525 + x7532 + x11564 * x11414 -
    x11727 * x11426 + x11727 * x11430 - x2460 * x11346 + x2507 * x11346;
  const amrex::Real dwdot3dsc6 =
    x10608 - x10609 - x10612 + x10613 - x10622 + 4367.67567567568 * x11726 -
    4367.67567567568 * x11733 - 2412000.0 * x11734 + x11765 + x11767 + x11769 +
    x11771 + x11772 + x11774 + x11775 + x11776 - x11777 - x11778 + x11779 +
    x11782 + x11783 - x11784 + x11786 + x11787 - x11788 + x11790 + x11792 +
    x11794 - x11795 + x11796 - x11797 + 2412000.0 * x11798 - x11799 + x11802 +
    x11805 + x11809 + x11810 + x11825 + x11828 + x11835 - x5453 - x5454 -
    x5455 + x5456 + x5457 + x5485 + x7576 + x7732 - x7733 - x7738 - x7740 +
    x7741 + x7743 + x7769 + sc[2] * x11509 - x11780 * x11426 + x11780 * x11430 -
    x2585 * x11346 + x2614 * x11346;
  const amrex::Real dwdot3dsc7 =
    x10629 + x10645 - x10646 + x10648 - x10649 - x10655 + x11836 + x11837 +
    x11838 + x11839 + x11840 + x11841 - x11842 - x11843 - x11844 + x11845 -
    x11846 + x11847 + x11848 - x11849 + x11852 + x11855 + x11856 + x11858 +
    x11872 + x11877 - x5488 + x5489 + x5490 - x5491 - x5492 + x5505 + x7838 +
    x7849 - x7850 - x7851 + x7852 + x7854 + x11413 * x11424 - x2652 * x11346 +
    x2666 * x11346;
  const amrex::Real dwdot3dsc8 =
    x10683 - x10684 + x10686 - x10687 - x10689 + x11486 + x11878 + x11879 +
    x11880 + x11881 + x11882 + x11883 + x11885 - x11886 + x11887 + x11888 +
    x11889 - x11890 - x11891 - x11892 + x11893 - x11894 - x11895 - x11896 +
    x11897 + x11901 + x11904 + x11905 + x11921 + x11926 - x5529 + x5530 -
    x5531 - x5532 + x5533 + x5546 + 10600000.0 * x7888 + x7942 + x7944 - x7945 -
    x7947 + x7949 + x7964 - x2716 * x11346 + x2733 * x11346;
  const amrex::Real dwdot3dsc9 =
    13400000.0 * sc[4] - x10720 + x10721 - x10723 + x10724 - x10731 + x11487 +
    x11927 + x11928 + x11930 + x11931 + x11932 + x11934 + x11935 - x11936 +
    x11937 - x11938 + x11939 + x11940 + x11941 - x11942 - x11943 - x11944 +
    x11945 - x11946 - x11947 + x11950 + x11951 + x11966 + x11973 - x5573 +
    x5574 - x5575 + x5584 - x8056 + x8057 + x8061 - x8062 + x8064 -
    x2761 * x11346 + x2780 * x11346;
  const amrex::Real dwdot3dsc10 =
    -x10751 + x10752 - x10757 + x10758 - x10762 + x11486 + x11974 + x11975 +
    x11977 + x11978 + x11979 + x11980 + x11981 - x11982 - x11983 - x11984 +
    x11985 - x11986 + x11987 - x11988 + x11989 + x11992 + x11993 + x12007 +
    x12011 + x12016 - x5603 + x5604 - x5605 + x5606 - x5607 + x5620 - x8158 +
    x8160 + x8161 - x8163 + x8166 - x2818 * x11346 + x2836 * x11346;
  const amrex::Real dwdot3dsc11 =
    -x10787 + x10788 + x10791 - x10792 + x10793 - x10797 + x11486 + x12017 +
    x12018 + x12019 + x12020 - x12021 - x12022 + x12023 - x12024 - x12025 +
    x12026 - x12027 - x12028 - x12029 + x12030 + x12031 + x12032 + x12035 +
    x12038 + x12039 + x12048 + x12070 + x5653 + x8242 - x8254 + x8255 + x8258 +
    x8261 + x8262 - x8263 - x2859 * x11346 + x2883 * x11346;
  const amrex::Real dwdot3dsc12 =
    x10828 - x10829 - x10831 + x10832 - x10843 + 1273.90540540541 * x11726 -
    1273.90540540541 * x11733 - 703500.0 * x11734 + 703500.0 * x11798 + x12071 +
    x12072 + x12074 + x12075 + x12076 + x12077 + x12079 - x12080 - x12081 +
    x12082 + x12083 - x12084 - x12085 - x12086 - x12087 + x12088 + x12089 -
    x12090 + x12093 + x12095 + x12098 + x12112 + x12113 + x12118 - x5675 +
    x5676 - x5677 + x5678 + x5684 - x8432 + x8433 - x8438 - x8439 + x8440 +
    x8442 + x8448 - x11426 * x12078 + x11430 * x12078 - x2960 * x11346 +
    x2989 * x11346;
  const amrex::Real dwdot3dsc13 =
    -x10865 + x10866 + x10868 - x10869 - x10879 + 2620.60540540541 * x11726 -
    2620.60540540541 * x11733 - 1447200.0 * x11734 + 1447200.0 * x11798 +
    x12011 + x12119 + x12120 + x12121 + x12122 - x12123 + x12124 - x12126 +
    x12127 - x12128 - x12129 + x12130 - x12131 + x12132 + x12133 + x12135 +
    x12138 + x12139 + x12153 + x12158 - x5702 + x5703 + x5704 - x5705 + x5716 +
    x8557 - x8558 - x8563 - x8564 + x8565 + x8567 + x8571 - x11426 * x12125 +
    x11430 * x12125 - x3022 * x11346 + x3035 * x11346;
  const amrex::Real dwdot3dsc14 =
    x10891 - x10892 - x10907 + x12159 + x12160 + x12162 - x12163 - x12164 -
    x12165 + x12166 + x12167 + x12168 + x12169 + x12170 + x12186 + x12191 +
    x12199 - x8618 - x8621 + x8622 + x8623 + x8625 - x3049 * x11346 +
    x3068 * x11346;
  const amrex::Real dwdot3dsc15 =
    x10928 - x10929 + x10931 - x10932 - x10934 + x10938 + x11858 + x12200 +
    x12201 + x12202 + x12203 - x12204 + x12205 + x12206 - x12207 - x12208 +
    x12209 - x12210 + x12211 - x12212 + x12215 + x12216 + x12230 + x12233 +
    x12238 - x5736 + x5737 - x5738 + x5739 + x5750 + x8765 - x8766 - x8767 +
    x8768 + x8770 - x3121 * x11346 + x3138 * x11346;
  const amrex::Real dwdot3dsc16 =
    x10960 - x10961 + x10962 - x10964 + x10965 - x10970 + x11486 + x12239 +
    x12240 + x12241 + x12242 + x12243 - x12244 - x12245 - x12246 + x12247 -
    x12248 + x12249 - x12250 - x12251 + x12252 - x12253 + x12254 + x12258 +
    x12259 + x12273 + x12278 - x5768 - x5769 + x5770 + x5771 + x5782 - x8920 -
    x8921 + x8922 + x8923 + x8927 - x3208 * x11346 + x3232 * x11346;
  const amrex::Real dwdot3dsc17 = -x10980 - x10982 + x12279 + x12280 - x12281 -
                                  x12282 - x12283 + x12284 + x12287 + x12288 +
                                  x12293 + x12296 + x12297 - x8970 - x8972 +
                                  x8974 + x3239 * x11346;
  const amrex::Real dwdot3dsc18 =
    -x10998 - x11000 + x11001 - x11003 + x12196 + x12198 + x12298 + x12299 +
    x12300 - x12301 + x12302 + x12303 - x12304 + x12305 - x12306 + x12309 +
    x12311 + x12315 + x12316 + x12323 + x12328 + x9033 - x9035 - x9036 + x9037 +
    x9039 - x3247 * x11346 + x3253 * x11346;
  const amrex::Real dwdot3dsc19 =
    x11025 - x11026 - x11028 + x11029 + x11032 - x11037 + x11382 + x11432 +
    x12329 + x12330 + x12332 + x12333 + x12334 - x12335 - x12336 - x12337 -
    x12338 + x12339 + x12340 + x12341 + x12342 - x12343 + x12344 + x12345 +
    x12348 + x12349 + x12363 + x12368 + x5802 + x5804 - x5805 - x5806 + x5807 +
    x5821 - x9148 + x9149 - x9150 + x9152 + x9154 - x3292 * x11346 +
    x3308 * x11346;
  const amrex::Real dwdot3dsc20 = -x11048 - x11051 + x12297 + x12369 + x12370 -
                                  x12371 - x12372 - x12373 + x12374 + x12377 +
                                  x12378 + x12382 + x12385 - x9192 - x9193 +
                                  x9195 + x3313 * x11346;
  const amrex::Real dwdot3dsc21 =
    x11063 - x11064 - x11068 + x12199 + x12386 + x12387 + x12388 - x12389 +
    x12390 - x12391 + x12392 + x12393 - x12394 + x12395 + x12396 + x12402 +
    x12407 + x9239 - x9241 + x9242 - x9243 + x9246 - x3320 * x11346 +
    x3324 * x11346;
  const amrex::Real dwdot3dsc22 =
    x11088 - x11089 + x11091 - x11092 - x11100 + x11435 + x11857 + x12195 +
    x12408 + x12409 + x12411 + x12412 + x12413 + x12414 + x12415 + x12416 -
    x12417 - x12418 - x12419 - x12420 - x12421 + x12422 + x12423 + x12424 +
    x12425 + x12428 + x12429 + x12443 + x12448 + x5842 + x5845 - x9336 + x9337 +
    x9340 - x9341 + x9343 - x3342 * x11346 + x3352 * x11346;
  const amrex::Real dwdot3dsc23 =
    x11119 - x11120 + x11122 - x11123 - x11125 + x11858 + x12449 + x12450 +
    x12451 + x12452 - x12453 + x12454 + x12455 + x12456 - x12457 - x12458 -
    x12459 - x12460 + x12461 + x12462 + x12465 + x12466 + x12480 + x12485 +
    x5859 + x5860 - x5861 - x5862 + x5873 + x9435 - x9437 - x9438 + x9439 +
    x9442 - x3385 * x11346 + x3402 * x11346;
  const amrex::Real dwdot3dsc24 =
    -x11144 + x11145 - x11148 + x11149 - x12486 + x12487 + x12488 + x12489 +
    x12490 - x12491 - x12492 - x12493 + x12496 + x12503 + x12516 + x12517 -
    x5891 + x5892 - x5893 + x5894 + x5905 + x9529 + x9531 - x9532 + x9533 +
    x9535 - x9537 - x3434 * x11346 + x3449 * x11346;
  const amrex::Real dwdot3dsc25 =
    -x11169 + x11170 + x11172 - x11173 + x12020 + x12518 + x12519 - x12520 +
    x12521 + x12522 + x12523 - x12524 + x12525 - x12526 - x12527 + x12530 +
    x12543 + x12546 + x12551 - x5920 + x5925 + x9616 + x9618 - x9620 + x9622 -
    x9623 + x9625 - x3466 * x11346 + x3473 * x11346;
  const amrex::Real dwdot3dsc26 =
    x11193 - x11194 - x11196 + x11197 + x12545 + x12552 + x12553 - x12554 +
    x12555 - x12556 + x12557 - x12558 - x12559 + x12560 + x12561 + x12564 +
    x12577 + x12582 + x5937 - x5938 - x5939 + x5940 + x5951 + x9710 + x9712 +
    x9715 - x9716 - x9717 + x9719 - x3504 * x11346 + x3517 * x11346;
  const amrex::Real dwdot3dsc27 =
    x11217 - x11218 + x11220 - x11221 + x12546 + x12583 + x12584 - x12585 +
    x12586 + x12587 - x12588 + x12589 - x12590 + x12591 - x12592 + x12595 +
    x12608 + x12613 - x5967 - x5968 + x5975 + x9795 + x9797 + x9799 - x9801 -
    x9802 + x9804 - x3536 * x11346 + x3548 * x11346;
  const amrex::Real dwdot3dsc28 =
    -x11240 + x11241 + x11244 - x11245 - x12614 + x12615 - x12616 + x12617 +
    x12618 - x12619 - x12620 + x12623 + x12625 + x12632 + x12644 - x5987 -
    x5988 + x5995 + x9881 + x9883 - x9884 + x9885 + x9887 - x9888 -
    x3564 * x11346 + x3580 * x11346;
  const amrex::Real dwdot3dsc29 =
    -x11264 + x11265 + x11267 - x11268 + x12625 + x12645 + x12646 - x12647 +
    x12648 + x12649 - x12650 - x12651 + x12652 - x12653 + x12656 + x12668 +
    x12673 - x6006 - x6007 + x6008 + x6021 + x9969 - x9971 + x9972 + x9975 -
    x9976 + x9978 - x3593 * x11346 + x3607 * x11346;
  const amrex::Real dwdot3dsc30 =
    x10050 - x10052 - x10054 + x10056 + x10057 + x10059 + x11285 - x11286 -
    x11289 + x11290 + x11370 + x12624 + x12674 + x12675 - x12676 + x12677 -
    x12678 - x12679 - x12680 + x12681 + x12684 + x12694 + x12699 - x6034 -
    x6035 + x6042 - x3621 * x11346 + x3635 * x11346;
  const amrex::Real dwdot3dsc31 =
    x10074 - x10115 - x10117 - x11303 - x11304 + x11445 + x12700 - x12701 -
    x12702 - x12703 - x12704 + x12706 + x12707 + x12714 + x12716 + x12719 -
    x6050 - x6051 + x6053 + x6066 + x3651 * x11346;
  const amrex::Real dwdot3dsc32 =
    -x10165 - x10166 + x10169 - x11317 - x11319 + x12716 + x12720 - x12721 -
    x12722 - x12723 - x12724 + x12726 + x12727 + x12734 + x12737 - x6076 -
    x6077 + x6079 + x6092 + x3664 * x11346;
  const amrex::Real dwdot3dsc33 = x10182 - x10201 - x10202 - x11327 - x11329 +
                                  x11445 + x12196 + x12715 + x12738 + x12740 -
                                  x12741 - x12742 + x12744 + x12746 + x12747 +
                                  x12751 + x12754 + x3668 * x11346;
  const amrex::Real dwdot3dsc34 = x10231 + x10232 - x10233 + x10234 - x10236 -
                                  x11337 + x11437 + x12197 - x12755 - x12756 +
                                  x12757 + x12762 + x12766 - x3674 * x11346 +
                                  x3677 * x11346;
  const amrex::Real dwdot4dsc0 =
    -x11357 - x11358 + x11360 - x11361 + x11362 - x12767 + x12774 + x12778 +
    x12782 + x12786 + x12790 + x12798 + x12803 + x12808 + x12814 + x5190 -
    x5191 - x5192 + x5195 + x5197 + x5213 - x4954 * x3891;
  const amrex::Real dwdot4dsc1 =
    -x11450 + x11455 - x11472 + x11473 - x11476 + x11477 + x11478 + x11479 +
    x11480 - x11481 + x11482 - x11483 - x11484 + x12794 + x12799 + x12815 -
    x12816 - x12817 + x12818 + x12823 + x12826 + x12829 + x12832 + x12835 +
    x12839 + x12843 + x5254 - x5255 - x5256 + x5267 + x6879 + x6906 + x6929 -
    x4954 * x3898 + x4954 * x3899;
  const amrex::Real dwdot4dsc2 =
    x10363 + x10378 - x11493 + x11498 - x11515 - x11517 + x11518 + x11520 +
    x11521 - x11522 + x11523 + x11524 + x11525 - x11526 - x11528 + x12844 -
    x12845 + x12846 - x12847 + x12851 + x12854 + x12857 + x12860 + x12863 +
    x12865 + x12869 + x12873 + x5288 - x5289 - x5290 + x5295 + x6990 -
    x4954 * x3900 + x4954 * x3901;
  const amrex::Real dwdot4dsc3 =
    x10477 + x11557 + x11587 - x11588 + x11611 + x11625 - x11626 - x11627 +
    x11629 + x11630 - x11631 + x11632 + x11636 + x11639 - x11642 + x11643 +
    x11648 - x11650 + x11651 + x12794 + x12874 - x12875 + x12876 - x12877 +
    x12883 + x12884 + x12887 + x12890 + x12893 + x12894 + x12897 + x12898 +
    x12902 + x12906 - x5316 + x5317 - x5318 - x5319 + x5320 + x5327 + x7113 -
    x4954 * x3902 + x4954 * x3903;
  const amrex::Real dwdot4dsc4 =
    x10525 + x11658 + x11683 + x11684 - x11685 + x11700 + x11701 - x11702 +
    x11703 - x11705 - x11706 - x11709 + x11710 + x11711 - x11712 + x11715 +
    x12794 + x12910 + x12911 - x12912 + x12913 - 520000.0 * x12915 - x12916 -
    x12917 - 1463200000.0 * x12919 - x12920 + x12928 + x12931 + x12935 +
    x12936 + x12941 + x12942 + x12950 + x12957 + x12962 + x12970 + x12978 +
    x12979 + x5394 - x5395 + x5396 - x5397 - x5398 + x5399 - x5400 - x5401 -
    x5402 - 24600000.0 * x6334 - x7225 + x7320 - x4954 * x3904 + x4954 * x3905;
  const amrex::Real dwdot4dsc5 =
    -x11722 + x11739 - x11746 + x11747 + x11748 + x11749 - x11750 + x11751 +
    x11752 - x11754 - x11755 - x11756 + x11758 + x12794 + x12980 + x12981 +
    x12982 - x12983 - x12984 + x12990 + x12993 + x12996 + x12999 + x13002 +
    x13006 + x13010 - x5406 + x5407 - x5408 - x5409 + x5410 + x5423 + x7328 -
    x4954 * x3906 + x4954 * x3907;
  const amrex::Real dwdot4dsc6 =
    -x11765 + x11774 + x11777 + x11811 - x11812 + x11813 - x11814 + x11815 +
    x11817 + x11819 - x11821 + x11822 - x11823 - x11824 + x13011 - x13012 -
    x13013 + x13014 + x13020 + x13023 + x13026 + x13029 + x13032 + x13033 +
    x13037 + x13041 - x5447 + x5448 - x5449 - x5450 + x5451 + x5464 + x7578 +
    x7723 + x7725 - x7727 - x7728 + x7729 - x7730 - x4954 * x3908 +
    x4954 * x3909;
  const amrex::Real dwdot4dsc7 =
    x10629 - x11837 - x11859 + x11860 - x11861 - x11862 + x11865 + x11866 +
    x11867 - x11868 + x11869 + x11870 - x11871 + x13042 + x13044 - x13048 +
    x13050 - x13051 + x13054 + x13060 + x13064 + x13065 + x13070 + x13075 +
    x13078 + x13079 + x13083 + x13088 - x5494 - x5495 + x5496 + x5497 - x5498 +
    x5526 + x7839 + sc[8] * x13047 + sc[8] * x13053 - x4954 * x3910 +
    x4954 * x3911;
  const amrex::Real dwdot4dsc8 =
    x10671 - x11878 + x11882 + x11906 - x11907 + x11908 - x11909 + x11912 -
    x11913 - x11915 - x11918 + x11919 + x11920 + x13090 - x13091 + x13093 +
    x13095 - x13096 + x13098 + x13099 + x13108 + x13111 + x13114 + x13117 +
    x13121 + x13125 + x13129 + x13134 + x13137 + x13142 + x5540 - x5559 -
    x5560 + x5561 + x5562 + x5563 + x5564 - x5565 + x7867 + x7957 - x7959 +
    x7960 + x7961 - x7963 + x7965 - x7966 + sc[7] * x13047 + sc[7] * x13053 -
    x4954 * x3912 + x4954 * x3913;
  const amrex::Real dwdot4dsc9 =
    -x11928 + x11933 + x11952 - x11953 + x11954 - x11955 - x11958 + x11960 +
    x11961 + x11962 - x11963 - x11964 + x11965 + x12865 + x13143 + x13144 +
    x13145 - x13146 - x13147 + x13151 + x13154 + x13157 + x13160 + x13163 +
    x13164 + x13168 + x13172 - x5569 - x5570 + x5571 + x5580 - x4954 * x3914 +
    x4954 * x3915;
  const amrex::Real dwdot4dsc10 =
    -x11974 - x11994 - x11995 + x11996 - x11998 + x11999 + x12001 + x12002 -
    x12003 + x12004 - x12005 + x12006 + x12794 + x13173 + x13175 + x13176 +
    x13177 - x13178 - x13179 + x13185 + x13188 + x13191 + x13194 + x13197 +
    x13199 + x13202 + x13206 - x5597 - x5598 + x5599 - x5600 + x5601 + x5614 -
    x4954 * x3916 + x4954 * x3917;
  const amrex::Real dwdot4dsc11 =
    x11372 - x12018 + x12021 + x12045 + x12051 - x12053 + x12055 + x12056 +
    x12057 + x12058 + x12059 - x12061 - x12062 + x12063 - x12064 + x12065 -
    x12067 + x12780 + x12794 + x13207 + x13208 - x13209 + x13210 + x13211 -
    x13212 + x13213 + x13216 + x13219 + x13223 + x13226 + x13230 + x13237 -
    x4954 * x3918 + x4954 * x3919;
  const amrex::Real dwdot4dsc12 =
    -x12071 + x12081 - x12099 + x12100 - x12101 + x12103 + x12105 + x12106 +
    x12107 - x12108 + x12109 - x12110 - x12111 + x13238 - x13239 - x13240 +
    x13241 + x13246 + x13249 + x13252 + x13255 + x13259 + x13263 + x13267 -
    x5665 + x5666 - x5667 + x5668 + x5674 + x8422 - x8424 + x8426 - x8428 -
    x8429 + x8430 - x4954 * x3920 + x4954 * x3921;
  const amrex::Real dwdot4dsc13 =
    -x12120 - x12140 + x12141 - x12142 + x12145 - x12146 + x12147 - x12148 +
    x12149 + x12150 - x12151 + x12152 + x13199 + x13268 - x13269 - x13270 +
    x13271 + x13276 + x13279 + x13282 + x13285 + x13288 + x13291 + x13295 -
    x5697 + x5698 + x5699 - x5700 + x5711 + x8548 - x8550 - x8551 + x8553 +
    x8554 - x8555 - x4954 * x3922 + x4954 * x3923;
  const amrex::Real dwdot4dsc14 = -x12160 - x12172 + x12173 + x12174 - x13296 +
                                  x13297 - x13298 + x13299 + x13302 + x13305 +
                                  x13318 + x13321;
  const amrex::Real dwdot4dsc15 =
    -x12200 + x12217 - x12218 + x12219 - x12220 + x12223 + x12224 + x12225 -
    x12226 + x12227 - x12228 - x12229 + x13079 + x13322 - x13323 + x13324 +
    x13325 + x13326 - x13327 + x13332 + x13335 + x13338 + x13341 + x13344 +
    x13347 + x13353 - x5731 + x5732 - x5733 + x5734 + x5745 - x4954 * x3926 +
    x4954 * x3927;
  const amrex::Real dwdot4dsc16 =
    -x12240 + x12245 - x12260 + x12261 + x12262 - x12265 + x12266 - x12267 +
    x12268 - x12269 - x12270 + x12271 + x12272 + x12794 + x13354 + x13355 -
    x13356 + x13357 - x13358 + x13363 + x13366 + x13370 + x13373 + x13376 +
    x13380 + x13384 + x5763 - x5764 - x5765 + x5766 + x5777 - x4954 * x3928 +
    x4954 * x3929;
  const amrex::Real dwdot4dsc17 = x12285 - x12286 - x12289 + x12291 + x13385 +
                                  x13386 - x13387 - x13388 + x13390 + x13392 +
                                  x13394;
  const amrex::Real dwdot4dsc18 = -x12298 + x12313 + x12318 + x12319 - x12321 +
                                  x13316 + x13395 + x13396 - x13397 + x13398 -
                                  x13399 + x13401 + x13402 + x13405 + x13406 +
                                  x13409 + x13412 - x4954 * x3930;
  const amrex::Real dwdot4dsc19 =
    -x12329 - x12350 + x12351 - x12352 + x12355 - x12356 + x12357 - x12358 +
    x12359 + x12360 - x12361 + x13079 + x13413 - x13414 + x13415 - x13416 +
    x13423 + x13425 + x13428 + x13431 + x13434 + x13437 + x13441 + x13446 -
    x5795 - x5796 + x5797 + x5798 + x5800 + x5815 - x4954 * x3931 +
    x4954 * x3932;
  const amrex::Real dwdot4dsc20 = -x12369 - x12380 + x12381 + x13390 + x13447 +
                                  x13448 - x13449 - x13450 + x13452 + x13454;
  const amrex::Real dwdot4dsc21 = -x12386 - x12397 + x12398 + x12401 + x13318 +
                                  x13455 + x13456 + x13457 - x13458 + x13459 -
                                  x13460 + x13462 + x13465 + x13468;
  const amrex::Real dwdot4dsc22 =
    -x12409 - x12430 + x12431 - x12432 + x12433 - x12434 + x12436 - x12437 +
    x12438 - x12439 + x12441 + x12442 + x13079 + x13223 + x13470 + x13471 +
    x13472 - x13473 + x13474 - x13475 + x13478 + x13481 + x13484 + x13487 +
    x13491 + x13496 + x5838 + x5851 - x4954 * x3933 + x4954 * x3934;
  const amrex::Real dwdot4dsc23 =
    -x12450 - x12467 + x12468 - x12469 + x12470 - x12471 + x12474 + x12475 +
    x12476 - x12477 - x12478 + x12479 + x13079 + x13497 - x13498 - x13499 +
    x13500 + x13505 + x13508 + x13511 + x13514 + x13517 + x13520 + x13524 -
    x5854 + x5855 - x5856 + x5857 + x5868 - x4954 * x3935 + x4954 * x3936;
  const amrex::Real dwdot4dsc24 =
    x12504 + x12507 - x12508 + x12509 + x12510 - x12511 + x12512 - x12513 -
    x12514 - x12515 + x13525 - x13526 + x13531 + x13534 + x13537 + x13540 +
    x13543 + x13545 + x13548 + x13551 - x5886 + x5887 + x5888 - x5889 + x5900 -
    x4954 * x3937 + x4954 * x3938;
  const amrex::Real dwdot4dsc25 =
    -x12531 + x12532 + x12533 + x12535 - x12536 - x12538 + x12539 - x12540 -
    x12541 + x12542 + x13222 + x13545 + x13552 + x13553 - x13554 + x13557 +
    x13560 + x13563 + x13566 + x13569 + x13572 - x5918 + x5923 - x4954 * x3939 +
    x4954 * x3940;
  const amrex::Real dwdot4dsc26 =
    -x12565 - x12566 + x12567 - x12568 + x12570 - x12571 + x12572 + x12573 -
    x12575 + x12576 + x13545 - x13573 + x13574 + x13579 + x13582 + x13585 +
    x13588 + x13591 + x13594 + x13597 - x5932 + x5933 - x5934 + x5935 + x5946 -
    x4954 * x3941 + x4954 * x3942;
  const amrex::Real dwdot4dsc27 =
    -x12596 + x12597 - x12598 + x12600 + x12601 + x12602 - x12603 - x12604 -
    x12605 + x12607 + x12864 + x13545 - x13598 + x13599 + x13602 + x13605 +
    x13608 + x13611 + x13614 + x13617 + x13620 - x5964 - x5965 + x5972 -
    x4954 * x3943 + x4954 * x3944;
  const amrex::Real dwdot4dsc28 = x12635 - x12636 + x12637 - x12638 - x12639 +
                                  x12640 - x12641 - x12642 + x12643 + x13621 +
                                  x13622 - x13623 + x13626 + x13629 + x13632 +
                                  x13635 + x13638 + x13641 + x13643 - x5984 -
                                  x5985 + x5992 - x4954 * x3945 + x4954 * x3946;
  const amrex::Real dwdot4dsc29 =
    x12657 - x12658 + x12660 - x12661 - x12662 - x12663 + x12664 + x12665 -
    x12667 + x13643 + x13644 + x13645 - x13646 + x13650 + x13653 + x13656 +
    x13659 + x13660 + x13663 + x13666 + x6010 - x6011 - x6012 + x6017 -
    x4954 * x3947 + x4954 * x3948;
  const amrex::Real dwdot4dsc30 = -x12685 + x12686 + x12687 - x12688 - x12691 -
                                  x12692 + x12693 + x12797 + x13642 + x13660 +
                                  x13667 - x13668 + x13669 + x13672 + x13675 +
                                  x13677 + x13680 + x13683 + x13686 - x6031 -
                                  x6032 + x6039 - x4954 * x3949 + x4954 * x3950;
  const amrex::Real dwdot4dsc31 = -x12708 - x12709 + x12711 - x12712 + x12713 +
                                  x12803 + x13389 + x13687 - x13688 + x13693 +
                                  x13695 + x13697 + x13699 + x13701 + x13703 +
                                  x6055 - x6056 - x6057 + x6062 - x4954 * x3951;
  const amrex::Real dwdot4dsc32 = x12728 - x12729 - x12730 + x12731 - x12733 +
                                  x12864 + x13704 - x13705 + x13709 + x13711 +
                                  x13713 + x13715 + x13717 + x13719 + x13721 -
                                  x6081 + x6082 - x6083 + x6088 - x4954 * x3952;
  const amrex::Real dwdot4dsc33 = -x12748 + x12750 + x13406 + x13719 + x13722 +
                                  x13723 - x13724 + x13726 + x13728 -
                                  x4954 * x3953;
  const amrex::Real dwdot4dsc34 =
    -x12764 + x12765 + x12792 + x13317 + x13718 + x13729 - x13730 + x13732;
  const amrex::Real dwdot5dsc0 = x13791 + x13792 + x13794 - x5238 + x5241 +
                                 x5242 + x5244 - x5245 + x6111 + x6115 - x6160 -
                                 x6194 - x6208 - x6209;
  const amrex::Real dwdot5dsc1 =
    x13796 + x13798 + x13799 + x13800 + x13801 + x13802 + x13803 - x5279 +
    x5280 - x5281 + x5283 + x5284 + x6736 + x6742 + 1100000000.0 * x6774 +
    3560000.0 * x6792 + 112480000.0 * x6813 + x6879 + x6894 - x6895 + x6897 +
    x6902 + x6918 + x6925 + x6933 + x6935 - x6936 + x6948 + x6960 - x6961 -
    x6965 + x6966 + x6968 + x6972 + x6974 - x6975 + x6770 * x13795;
  const amrex::Real dwdot5dsc2 = x10373 + x13798 + x13804 + x13805 + x13806 +
                                 x13807 + x13808 - x5304 - x5305 + x5306 +
                                 x6997 + x7056 - x7057 + x7067 - x7068 - x7074 +
                                 x7083 + x7084 - x7085 - x7086;
  const amrex::Real dwdot5dsc3 =
    x11543 + x13797 + x13809 + x13810 + x13811 + x13812 + x13813 + x5334 -
    x5335 - x5336 + x5337 - x5338 + x7117 - x7187 + x7188 + x7200 - x7201 -
    x7209 - x7213 + x7214 - x7215 + x7216 + x7218;
  const amrex::Real dwdot5dsc4 =
    x12911 + x13797 + x13814 + x13815 + x13816 + x13817 + x13818 - x5381 +
    x5382 - x5383 - x5384 + x5385 + x7229 - x7289 + x7290 + x7300 - x7304 -
    x7308 + x7313 - x7314 - x7315 + x7316 + x7318;
  const amrex::Real dwdot5dsc5 =
    x10562 + x11723 + x12981 + x13819 + x13820 + x13821 + x13822 + x13825 +
    x13826 + x13827 + x13842 + x13843 + x13844 + x5436 - x5437 - x5438 - x5439 +
    x5440 - x5441 - x5442 - x5443 + 90000.0 * x7387 - 550000000.0 * x7392 -
    x7503 - x7504 + x7505 + x7521 - x7522 - x7523 - x7536 - x7538 + x7540 -
    x7541 - x7542 + x7543 - x7544 - x7545 - sc[6] * x13823 - x6790 * x13781 -
    x7386 * x13795;
  const amrex::Real dwdot5dsc6 =
    x13845 + x13846 + x13847 + x13848 + x13857 - x5471 - x5472 + x5473 - x5474 +
    x5475 + x7576 + x7586 + 56240000.0 * x7620 - x7714 + x7715 - x7739 + x7742 -
    x7747 - x7752 - x7753 + x7754 + x7757 - sc[5] * x13823;
  const amrex::Real dwdot5dsc7 = x13858 + x13859 + x13860 + x13861 + x13862 +
                                 x5512 - x5513 - x5514 + x5515 - x5516 + x7790 -
                                 x7834 + x7835 + x7839 + x7847 - x7848 - x7858 +
                                 x7861 - x7862 + x7863 - x7864;
  const amrex::Real dwdot5dsc8 = x13797 + x13863 + x13864 + x13865 + x13866 +
                                 x13867 + x13868 + x5553 - x5554 - x5555 +
                                 x5556 - x5557 + x7871 - x7933 + x7934 - x7943 +
                                 x7946 - x7952 - x7968 + x7969 + x7970 - x7971;
  const amrex::Real dwdot5dsc9 = x13798 + x13869 + x13870 + x13871 + x13872 +
                                 x13873 + x13874 - x5585 - x5586 + x5587 +
                                 x7978 - x8043 + x8044 + x8058 - x8059 - x8070 +
                                 x8074 + x8075 - x8076 - x8077 + x8078 + x8080;
  const amrex::Real dwdot5dsc10 =
    x13782 + x13876 + x13877 + x13878 + x13879 + x13880 + x5621 - x5622 -
    x5623 + x5624 - x5625 + x8082 + x8100 + x8149 - x8150 + x8159 - x8162 -
    x8171 - x8173 + x8174 - x8175 + x8177;
  const amrex::Real dwdot5dsc11 = x13798 + x13882 + x13883 + x13884 + x13885 +
                                  x13886 + x13887 + x8184 + x8232 - x8233 -
                                  x8246 - x8249 + x8250 - x8251 + x8252 +
                                  x8256 + x8257 - x8259;
  const amrex::Real dwdot5dsc12 = x13782 + x13888 + x13889 + x13890 + x13891 +
                                  x13900 + x5690 - x5691 - x5692 + x5693 +
                                  x8301 - x8413 + x8414 - x8436 + x8437 -
                                  x8453 + x8456 + x8457 - x8462 - x8466;
  const amrex::Real dwdot5dsc13 =
    x13876 + x13901 + x13902 + x13903 + x13904 + x5722 - x5723 + x5724 - x5725 +
    x8491 - 550000000.0 * x8497 + 550000000.0 * x8498 - x8540 + x8541 + x8562 -
    x8566 - x8574 + x8578 + x8579 - x8580 - x8581;
  const amrex::Real dwdot5dsc14 = x13905 + x13913 + x13914 + x8619 - x8620 -
                                  x8630 - x8632 - x8633 + x8634 + x8635;
  const amrex::Real dwdot5dsc15 = x13858 + x13915 + x13916 + x13917 + x13918 -
                                  x5756 + x5757 - x5758 + x5759 + x8674 +
                                  x8751 - x8752 + x8763 - x8764 - x8771 +
                                  x8772 - x8773 + x8774 + x8782 - x8783;
  const amrex::Real dwdot5dsc16 = x13782 + x13919 + x13920 + x13921 + x13922 +
                                  x13930 + x5788 + x5789 - x5790 - x5791 +
                                  x8822 - x8913 + x8914 + x8915 + x8924 -
                                  x8925 - x8933 - x8935 + x8938 + x8945 - x8947;
  const amrex::Real dwdot5dsc17 =
    x13931 + x13932 + x8951 - x8971 - x8977 - x8980 - x8981;
  const amrex::Real dwdot5dsc18 = x13858 + x13911 + x13933 + x13934 + x13935 +
                                  x8998 - x9018 + x9032 - x9034 - x9044 +
                                  x9046 - x9047 - x9048 + x9049;
  const amrex::Real dwdot5dsc19 = x13858 + x13936 + x13937 + x13938 + x13939 +
                                  x5829 - x5830 + x5831 - x5832 + x5834 +
                                  x9059 + x9134 - x9135 + x9145 - x9147 +
                                  x9151 - x9159 - x9161 + x9162 - x9163 + x9164;
  const amrex::Real dwdot5dsc20 =
    x13931 + x13940 + x9172 - x9191 - x9197 - x9200 - x9201;
  const amrex::Real dwdot5dsc21 = x13913 + x13941 + x13942 + x9206 - x9240 +
                                  x9244 - x9251 + x9253 - x9254 + x9255 - x9256;
  const amrex::Real dwdot5dsc22 = x13779 + x13858 + x13882 + x13943 + x13944 +
                                  x13945 + x13946 + x5843 + x9262 + x9325 -
                                  x9326 + x9332 + x9338 - x9339 - x9347 -
                                  x9350 + x9351 + x9352 - x9353;
  const amrex::Real dwdot5dsc23 = x13858 + x13947 + x13948 + x13949 + x13950 +
                                  x5879 - x5880 - x5881 + x5882 + x9359 -
                                  x9426 + x9427 + x9436 - x9440 - x9447 +
                                  x9449 - x9450 + x9451 - x9452;
  const amrex::Real dwdot5dsc24 =
    x13951 + x13952 + x13953 + x13954 + x13955 + x5911 - x5912 + x5913 - x5914 -
    x9521 + x9522 + x9534 - x9536 + x9544 - x9545 - x9546 + x9547;
  const amrex::Real dwdot5dsc25 = x13881 + x13956 + x13957 + x13958 + x13959 +
                                  x13960 - x5928 - x9608 + x9609 - x9619 +
                                  x9621 + x9631 - x9632 - x9633 + x9634;
  const amrex::Real dwdot5dsc26 =
    x13951 + x13961 + x13962 + x13963 + x13964 - x5957 + x5958 + x5959 - x5960 -
    x9702 + x9703 - x9713 + x9714 + x9725 - x9726 - x9727 + x9728;
  const amrex::Real dwdot5dsc27 = x13956 + x13965 + x13966 + x13967 + x13968 -
                                  x5979 - x5980 + x9787 - x9788 + x9798 -
                                  x9800 - x9810 + x9811 - x9812 + x9813;
  const amrex::Real dwdot5dsc28 = x13956 + x13969 + x13970 + x13971 + x13972 -
                                  x5999 - x6000 - x9873 + x9874 - x9886 +
                                  x9889 + x9896 + x9897 - x9898 - x9899;
  const amrex::Real dwdot5dsc29 = x13956 + x13973 + x13974 + x13975 + x13976 -
                                  x6026 + x6027 - x6028 + x9961 - x9962 -
                                  x9973 + x9974 + x9984 + x9985 - x9986 - x9987;
  const amrex::Real dwdot5dsc30 =
    x10000 + x10003 + x10042 - x10043 - x10053 + x10055 - x10065 + x10066 +
    x10067 - x10068 + x13789 + x13956 + x13977 + x13978 - x6046 - x6047;
  const amrex::Real dwdot5dsc31 = x10078 + x10085 - x10109 - x10116 - x10122 -
                                  x10123 + x13791 + x13979 + x13980 - x6071 -
                                  x6072 + x6073;
  const amrex::Real dwdot5dsc32 = x10134 + x10140 - x10159 - x10167 - x10173 -
                                  x10174 + x13790 + x13981 + x13982 - x6097 -
                                  x6098 + x6099;
  const amrex::Real dwdot5dsc33 =
    -x10196 - x10200 - x10207 - x10208 + x13786 + x13910 + x13983 + x13984;
  const amrex::Real dwdot5dsc34 = -x10235 + x10243 - x10244 + x10245 - x10246 +
                                  x13785 + x13906 + x13907 + x13910 + x13985 +
                                  x6198;
  const amrex::Real dwdot6dsc0 = x11344 + x11345 + x11347 - x11351 - x11359 -
                                 x11447 - x11448 + x14002 + x5214 + x5217 -
                                 x5218 - x5219 + x5221 - x6118 + x5008 * x3703;
  const amrex::Real dwdot6dsc1 =
    x11462 - x11466 + x11467 - x11468 + x11469 + x11474 - x11475 - x11488 -
    x11489 + x11490 + x11491 + x14003 + x14004 + x14005 + x14006 -
    16000000.0 * x1771 + x5270 - x5271 - x5272 - 16000000.0 * x6518 + x6743 -
    x6793 + x6806 + x6876 + x6928 + x6950 + x5008 * x3708 - x5008 * x3709 +
    x5010 * x3847;
  const amrex::Real dwdot6dsc2 =
    x10427 - x11497 + x11505 + x11506 + x11511 - x11512 + x11516 - x11519 -
    x11530 - x11531 + x11532 + x11533 + x14003 + x14007 + x14008 + x14009 +
    x5296 - x5297 - x5298 - x7000 + x7022 + x5008 * x3710 - x5008 * x3711 +
    x5010 * x3848;
  const amrex::Real dwdot6dsc3 =
    x10467 + x11541 + x11545 + x11549 + x11551 + x11616 + x11618 - x11619 +
    x11624 + x11628 - x11640 + x11649 - x11653 + x11655 + x11659 - x11660 -
    x11661 + x11662 + x11663 + x11665 + x12894 + x13990 + x14010 + x14011 +
    x14012 + x14013 + x14014 + x5340 + x5341 + x5342 - x5343 - x5344 + x5345 -
    x5346 + x7108 + x7134 - x7137 + x7219 + x5008 * x3712 - x5008 * x3713 +
    x5010 * x3849;
  const amrex::Real dwdot6dsc4 =
    -x11671 + x11678 + x11679 - x11690 + x11691 - x11704 + x11708 + x11714 +
    x11716 - x11717 - x11718 + x11719 + x12942 + x13990 + x14015 + x14016 +
    x14017 - x5369 + x5370 - x5371 + x5372 - x5373 + x7237 - x7241 + x7319 +
    x5008 * x3714 - x5008 * x3715 + x5010 * x3850;
  const amrex::Real dwdot6dsc5 =
    x11735 + x11736 - x11741 + x11742 - x11743 - x11753 + x11757 + x11760 +
    x11761 - x11762 - x11763 + x14018 + x14019 + x14020 - x5424 + x5425 -
    x5426 + x5427 - x5428 + x7324 - x7402 + x7403 + x7529 - x7531 +
    x5008 * x3716 - x5008 * x3717 + x5010 * x3852;
  const amrex::Real dwdot6dsc6 =
    x10611 + x11772 + x11806 - x11807 - x11808 - x11816 - x11818 + x11820 -
    x11826 - x11827 + x11829 - x11830 - x11831 + x11832 - x11833 - x11834 +
    x13033 + x14021 + x14022 + x14023 + x14024 + x14025 + x14026 + x14027 +
    x14030 + x14031 - x5477 - x5478 - x5479 - x5480 + x5481 - x5482 - x5483 +
    x5484 + x7577 - x7616 - x7618 + x7640 + x7766 - x7767 - x7768 +
    x5008 * x3718 - x5008 * x3719 + x5010 * x3853;
  const amrex::Real dwdot6dsc7 = x11844 - x11845 - x11850 + x11851 + x11863 -
                                 x11864 - x11873 + x11874 + x11875 - x11876 +
                                 x13065 + x13991 + x14032 + x14033 + x14034 -
                                 x5500 + x5501 - x5502 + x5503 - x5504 - x7788 +
                                 x7789 + x7838 + x5008 * x3720 - x5008 * x3721;
  const amrex::Real dwdot6dsc8 =
    x11891 + x11895 - x11897 - x11902 + x11903 - x11910 + x11914 + x11922 -
    x11923 + x11924 - x11925 + x13990 + x14035 + x14036 + x14037 + x14038 -
    x5541 - x5542 + x5543 + x5544 - x5545 + x7882 - x7896 + x8065 +
    x5008 * x3722 - x5008 * x3723 + x5010 * x3854;
  const amrex::Real dwdot6dsc9 =
    -x11940 + x11943 + x11947 + x11948 - x11949 + x11956 - x11957 + x11967 -
    x11968 + x11969 + x11970 + x11971 - x11972 + x14003 + x14039 + x14040 +
    x14041 + x14042 + x5581 - x5582 - x5583 - x7993 + x7994 + x5008 * x3724 -
    x5008 * x3725 + x5010 * x3855;
  const amrex::Real dwdot6dsc10 =
    x11976 + x11984 - x11989 - x11990 + x11991 + x11997 - x12000 + x12012 -
    x12013 + x12014 - x12015 + x13990 + x14043 + x14044 + x14045 + x14046 -
    x5615 + x5616 - x5617 + x5618 - x5619 + x8099 - x8108 + x5008 * x3726 -
    x5008 * x3727;
  const amrex::Real dwdot6dsc11 =
    x12025 - x12032 + x12033 - x12034 + x12040 - x12041 - x12042 + x12043 +
    x12049 - x12054 + x12066 + x14003 + x14048 + x14049 + x14050 + x14051 +
    x14052 - x8191 + x8200 + 12000000.0 * x8241 - x5008 * x3729 + x5010 * x3857;
  const amrex::Real dwdot6dsc12 =
    x12087 - x12088 + x12090 - x12096 + x12097 - x12102 + x12104 - x12114 +
    x12115 - x12116 + x12117 + x14053 + x14054 + x14056 + x5680 - x5681 -
    x5682 + x5683 - x8308 + x8310 + x8446 - x8447 + x5008 * x3730 -
    x5008 * x3731 + x5010 * x3858;
  const amrex::Real dwdot6dsc13 = x12129 - x12133 - x12136 + x12137 + x12143 -
                                  x12144 - x12154 + x12155 - x12156 + x12157 +
                                  x14043 + x14057 + x14058 + x14059 + x5712 -
                                  x5713 + x5714 - x5715 + x8486 - x8492 -
                                  x8569 + x8570 + x5008 * x3732 - x5008 * x3733;
  const amrex::Real dwdot6dsc14 = -x12167 - x12171 + x12175 - x12187 - x12188 +
                                  x12189 + x12190 + x14060 + x14064 + x14065 -
                                  x8594 + x8599 + x5008 * x3734 - x5008 * x3735;
  const amrex::Real dwdot6dsc15 =
    x12207 + x12213 - x12214 + x12221 - x12222 + x12231 - x12232 + x12234 -
    x12235 + x12236 - x12237 + x13991 + x14066 + x14067 + x14068 + x5746 -
    x5747 + x5748 - x5749 + x8686 - x8689 + x5008 * x3736 - x5008 * x3737;
  const amrex::Real dwdot6dsc16 =
    x12248 + x12253 - x12254 + x12255 - x12256 + x12257 + x12263 - x12264 -
    x12274 + x12275 + x12276 - x12277 + x13990 + x14069 + x14070 + x14071 -
    x5778 + x5779 + x5780 - x5781 - x8819 + x8825 + x5008 * x3738 -
    x5008 * x3739 + x5010 * x3859;
  const amrex::Real dwdot6dsc17 = x12282 - x12284 - x12290 - x12294 - x12295 +
                                  x14072 + x14073 - x8958 + x5008 * x3740;
  const amrex::Real dwdot6dsc18 = x12304 - x12305 - x12310 + x12317 - x12322 -
                                  x12324 + x12325 + x12326 - x12327 + x14063 +
                                  x14074 + x14075 + x8999 - x9004 +
                                  x5008 * x3741 - x5008 * x3742;
  const amrex::Real dwdot6dsc19 = x12331 + x12338 - x12345 - x12346 + x12347 +
                                  x12353 - x12354 - x12364 + x12365 - x12366 +
                                  x12367 + x13991 + x14076 + x14077 + x14078 +
                                  x5816 + x5817 + x5818 - x5819 - x5820 +
                                  x9082 - x9083 + x5008 * x3743 - x5008 * x3744;
  const amrex::Real dwdot6dsc20 = x12373 - x12374 - x12379 - x12383 - x12384 +
                                  x14073 + x14079 - x9178 + x5008 * x3745;
  const amrex::Real dwdot6dsc21 =
    x12391 - x12393 - x12399 + x12400 + x12403 - x12404 - x12405 + x12406 +
    x14064 + x14080 + x14081 - x9215 + x9216 + x5008 * x3746 - x5008 * x3747;
  const amrex::Real dwdot6dsc22 =
    x12410 + x12418 - x12424 - x12426 + x12427 - x12435 + x12440 - x12444 -
    x12445 + x12446 + x12447 + x14062 + x14082 + x14083 + x14084 + x5841 +
    x9272 - x9274 + x5008 * x3748 - x5008 * x3749;
  const amrex::Real dwdot6dsc23 =
    x12459 - x12462 - x12463 + x12464 + x12472 - x12473 + x12481 - x12482 +
    x12483 - x12484 + x13991 + x14085 + x14086 + x14087 + x5869 - x5870 +
    x5871 - x5872 + x9368 - x9382 + x5008 * x3750 - x5008 * x3751;
  const amrex::Real dwdot6dsc24 =
    -x12494 + x12495 + x12497 - x12498 + x12499 - x12501 + x12505 - x12506 +
    x14088 + x14089 + x14090 + x14091 - x5901 + x5902 + x5903 - x5904 - x9463 +
    x9469 + x5008 * x3752 - x5008 * x3753;
  const amrex::Real dwdot6dsc25 = -x12528 + x12529 - x12534 + x12537 + x12547 -
                                  x12548 + x12549 - x12550 + x13996 + x14047 +
                                  x14092 + x14093 + x14094 - x5924 + x9564 -
                                  x9566 + x5008 * x3754 - x5008 * x3755;
  const amrex::Real dwdot6dsc26 =
    x12562 - x12563 + x12569 - x12574 - x12578 - x12579 + x12580 + x12581 +
    x14088 + x14095 + x14096 + x14097 + x5947 - x5948 - x5949 + x5950 - x9651 +
    x9659 + x5008 * x3756 - x5008 * x3757;
  const amrex::Real dwdot6dsc27 = x12593 - x12594 + x12599 - x12606 + x12609 -
                                  x12610 - x12611 + x12612 + x13996 + x14098 +
                                  x14099 + x14100 - x5973 - x5974 - x9743 +
                                  x9746 + x5008 * x3758 - x5008 * x3759;
  const amrex::Real dwdot6dsc28 = -x12621 + x12622 - x12626 + x12627 - x12628 +
                                  x12631 + x12633 - x12634 + x13995 + x14101 +
                                  x14102 + x14103 - x5993 - x5994 - x9818 +
                                  x9832 + x5008 * x3760 - x5008 * x3761;
  const amrex::Real dwdot6dsc29 = -x12654 + x12655 + x12659 - x12666 + x12669 -
                                  x12670 - x12671 + x12672 + x13996 + x14104 +
                                  x14105 + x14106 - x6018 + x6019 - x6020 -
                                  x9905 + x9923 + x5008 * x3762 - x5008 * x3763;
  const amrex::Real dwdot6dsc30 = -x10004 + x10005 + x12679 + x12680 + x12682 -
                                  x12683 + x12689 - x12690 + x12695 - x12696 -
                                  x12697 + x12698 + x13997 + x14107 - x6040 -
                                  x6041 + x5008 * x3764 - x5008 * x3765;
  const amrex::Real dwdot6dsc31 = -x10083 + x12702 + x12703 + x12704 - x12705 -
                                  x12710 - x12717 - x12718 + x14002 + x6063 -
                                  x6064 - x6065 + x5008 * x3766;
  const amrex::Real dwdot6dsc32 = -x10139 + x12721 + x12722 + x12723 - x12725 -
                                  x12732 - x12735 - x12736 + x14002 + x6089 -
                                  x6090 - x6091 + x5008 * x3767;
  const amrex::Real dwdot6dsc33 = -x10192 + x12741 - x12745 - x12749 - x12752 -
                                  x12753 + x14001 + x14108 + x5008 * x3768;
  const amrex::Real dwdot6dsc34 = x10217 - x10218 + x11366 + x12758 - x12759 -
                                  x12760 + x12761 - x12763 + x14061 + x14108 +
                                  x14109 + x5008 * x3769 - x5008 * x3770;
  const amrex::Real dwdot7dsc0 =
    -x12777 - x12804 + x14110 + x14121 - x5202 + x5203 + x5205 - x5206 + x5209;
  const amrex::Real dwdot7dsc1 = -x12824 + x12825 - x12836 + x12837 - x12842 +
                                 x14122 + x14123 - x5263 - x5264 + x5266 +
                                 x6880;
  const amrex::Real dwdot7dsc2 = x10364 + x12852 - x12853 - x12866 + x12867 -
                                 x12872 + x14122 + x14124 - x5292 - x5293 +
                                 x5294;
  const amrex::Real dwdot7dsc3 =
    x10459 + x11608 + x12885 - x12886 - x12899 + x12900 - x12905 + x14116 +
    x14125 + x5322 - x5323 + x5324 - x5325 - x5326 + x7106 + x11565 * x11424;
  const amrex::Real dwdot7dsc4 =
    x10519 + x11698 + x12909 + x12937 - x12938 + x12940 + x12947 + x12953 -
    x12963 + x12965 + x12969 - x12975 + x12977 + x14116 + x14128 - x5387 +
    x5388 + x5389 + x5390 - x5391 - x5392 + x5393 + x7224;
  const amrex::Real dwdot7dsc5 = x11409 - x11415 + x11419 - x11428 - x12991 +
                                 x12992 - x13003 + x13005 - x13008 + x14129 +
                                 x5418 - x5419 - x5420 - x5421 + x5422 + x7321 -
                                 x14113 * x11727 + x14115 * x11727;
  const amrex::Real dwdot7dsc6 =
    -2183.83783783784 * x11726 + 2183.83783783784 * x11733 +
    1206000.0 * x11734 - 1206000.0 * x11798 + x11805 + x13021 - x13022 +
    x13034 - x13035 - x13040 + x14130 - x5459 + x5460 - x5461 + x5462 - x5463 +
    x7575 - x14113 * x11780 + x14115 * x11780;
  const amrex::Real dwdot7dsc7 =
    x10630 + x11855 - x13061 + x13062 - x13063 + x13080 - x13081 - x13082 -
    x13084 - x13086 + x14116 + x14131 + x14132 + x14133 + x14135 + x14138 +
    x5518 - x5519 - x5520 + x5521 - x5522 - x5523 - x5524 - x5525 + x7840 -
    201000.0 * x11413 * x11410 * x11392;
  const amrex::Real dwdot7dsc8 = x13115 - x13116 + x13130 - x13131 - x13139 +
                                 x14116 + x14140 + x5535 + x5536 - x5537 -
                                 x5538 - x5539;
  const amrex::Real dwdot7dsc9 = x13152 - x13153 + x13165 - x13166 - x13171 +
                                 x14122 + x14141 + x14142 - x5577 - x5578 +
                                 x5579;
  const amrex::Real dwdot7dsc10 = x13174 + x13186 - x13187 - x13200 + x13201 -
                                  x13205 + x14116 + x14143 - x5609 + x5610 +
                                  x5611 - x5612 - x5613;
  const amrex::Real dwdot7dsc11 =
    -x13214 + x13215 - x13228 + x13231 + x13233 - x13235 + x14147 + x14148;
  const amrex::Real dwdot7dsc12 =
    -636.952702702703 * x11726 + 636.952702702703 * x11733 + 351750.0 * x11734 -
    351750.0 * x11798 + x13247 - x13248 - x13256 + x13257 - x13261 + x14149 +
    x5670 - x5671 + x5672 - x5673 - x14113 * x12078 + x14115 * x12078;
  const amrex::Real dwdot7dsc13 =
    -1310.3027027027 * x11726 + 1310.3027027027 * x11733 + 723600.0 * x11734 -
    723600.0 * x11798 + x13277 - x13278 - x13289 + x13290 - x13294 + x14150 +
    x5707 - x5708 + x5709 - x5710 - x14113 * x12125 + x14115 * x12125;
  const amrex::Real dwdot7dsc14 = -x13297 + x13319 - x13320 + x14155;
  const amrex::Real dwdot7dsc15 = -x13333 + x13334 + x13345 - x13346 - x13349 +
                                  x13352 + x14116 + x14157 + x5741 + x5742 -
                                  x5743 - x5744;
  const amrex::Real dwdot7dsc16 = -x13367 + x13368 + x13369 - x13377 + x13378 -
                                  x13383 + x14116 + x14158 - x5773 + x5774 -
                                  x5775 + x5776;
  const amrex::Real dwdot7dsc17 = -x13391 - x13393 + x14160;
  const amrex::Real dwdot7dsc18 =
    -x13400 - x13407 - x13410 + x13411 + x14146 + x14151 + x14161 + x14162;
  const amrex::Real dwdot7dsc19 = x13426 - x13427 + x13435 - x13436 - x13440 +
                                  x13442 + x14116 + x14163 + x5810 - x5811 +
                                  x5812 - x5813 + x5814;
  const amrex::Real dwdot7dsc20 = -x13451 - x13453 + x14160;
  const amrex::Real dwdot7dsc21 = -x13459 - x13466 + x13467 + x14155 + x14164;
  const amrex::Real dwdot7dsc22 = x13476 - x13477 - x13485 + x13486 - x13488 +
                                  x13494 + x14147 + x14165 + x5850;
  const amrex::Real dwdot7dsc23 = -x13506 + x13507 + x13518 - x13519 - x13521 +
                                  x14116 + x14166 + x5864 - x5865 + x5866 -
                                  x5867;
  const amrex::Real dwdot7dsc24 = -x13532 + x13533 + x13546 - x13547 + x14117 +
                                  x14167 + x5896 + x5897 - x5898 - x5899;
  const amrex::Real dwdot7dsc25 =
    -x13555 + x13556 + x13567 - x13568 + x14168 + x14169 - x5922;
  const amrex::Real dwdot7dsc26 = x13580 - x13581 + x13592 - x13593 + x14117 +
                                  x14170 + x5942 - x5943 + x5944 - x5945;
  const amrex::Real dwdot7dsc27 =
    -x13603 + x13604 - x13615 + x13616 + x14119 + x14171 - x5970 - x5971;
  const amrex::Real dwdot7dsc28 =
    -x13627 + x13628 + x13636 - x13637 + x14119 + x14172 - x5990 - x5991;
  const amrex::Real dwdot7dsc29 =
    x13651 - x13652 - x13661 + x13662 + x14119 + x14173 - x6014 - x6015 + x6016;
  const amrex::Real dwdot7dsc30 =
    -x13673 + x13674 - x13681 + x13682 + x14119 + x14174 - x6037 - x6038;
  const amrex::Real dwdot7dsc31 =
    -x13694 - x13700 + x14120 + x14175 - x6059 + x6060 - x6061;
  const amrex::Real dwdot7dsc32 =
    -x13704 - x13710 + x14121 + x14176 - x6085 - x6086 + x6087;
  const amrex::Real dwdot7dsc33 = -x13723 - x13725 + x14177 + x14178;
  const amrex::Real dwdot7dsc34 = -x13729 + x14153 + x14178;
  const amrex::Real dwdot8dsc0 = x11348 + x12767 + x12768 - x12769 - x12770 -
                                 x12781 - x12785 - x12789 - x12809 + x14179 +
                                 x14180 - x14181 - x14183 - x14184 + x14185 +
                                 x14206 + x5201 - x2033 * x14182;
  const amrex::Real dwdot8dsc1 =
    -x10326 + x10337 + x11456 - x11457 - x12815 - x12819 - x12820 + x12822 +
    x12827 - x12828 - x12830 + x12831 - x12833 + x12834 - x12838 - x12840 +
    x12841 - x14207 + x14208 - x14209 + x14212 - x14213 + x14214 - x14215 -
    x14216 + x14217 + x14218 + x14219 + x14220 + x5257 + x6745 + x6910 + x6925 +
    x2071 * x14182 - x2106 * x14182;
  const amrex::Real dwdot8dsc2 =
    x10359 + 240000.0 * x10400 - x10405 + x10407 + x11499 - x11501 - x12844 -
    x12848 - x12849 + x12850 - x12855 + x12856 - x12858 + x12859 - x12861 +
    x12862 - x12868 - x12870 + x12871 + x14218 - x14221 - x14222 + x14223 +
    x14224 - x14225 - x14226 + x14227 - x14228 + x14229 + x14230 + x14231 +
    x4480 + x5291 + x6986 + x2141 * x14182 - x2184 * x14182;
  const amrex::Real dwdot8dsc3 =
    -x10457 + x11554 + x11556 + x11562 - x11563 + x11580 + x11592 + x11624 -
    x12874 - x12878 - x12879 + x12880 + x12881 - x12882 + x12888 - x12889 -
    x12891 + x12892 - x12895 + x12896 - x12901 + x12903 - x12904 + x14196 -
    x14232 + x14233 - x14234 + x14236 - x14237 - x14238 + x14239 - x14244 -
    x14245 + x14246 + x14247 + x14248 + x14249 + x5321 + x7109 + x7195 -
    x14240 * x14243 + x2259 * x14182 - x2291 * x14182 - x3678 * x14235;
  const amrex::Real dwdot8dsc4 =
    -x10518 + x10524 + x10529 + x11672 - x11676 + x11714 + x12922 - x12923 -
    x12924 + x12925 + x12926 - x12927 + x12930 + x12933 - x12934 + x12944 +
    x12948 - x12949 + x12951 - x12954 + x12956 + x12959 + x12960 - x12961 -
    x12966 + x12968 + x12972 + x12973 - x12974 + x14128 + x14196 + x14250 +
    x14251 + x14252 + x14253 - x14254 - x14255 - x14256 + x14257 - x14258 -
    x14259 + x14260 - x14261 + x14262 + x14263 + x5403 + x7225 + x7318 +
    x2334 * x14182 - x2351 * x14182;
  const amrex::Real dwdot8dsc5 =
    288000.0 * x10273 - 288000.0 * x10275 - x10551 + x10552 + x11732 - x11740 -
    x12980 + x12985 + x12986 - x12987 - x12988 - x12989 + x12994 - x12995 +
    x12997 - x12998 + x13000 - x13001 - x13004 - x13007 + x13009 + x13821 -
    x14264 - x14265 - x14266 + x14267 - x14268 - x14269 + x14270 - x14271 +
    x14272 + x14273 + x14274 + x14275 + x5411 + x6582 + x2460 * x14182 -
    x2507 * x14182;
  const amrex::Real dwdot8dsc6 =
    1848000.0 * x10273 - 1848000.0 * x10275 - x10590 + x10602 + x11778 -
    x11779 - x13011 - x13015 + x13016 - x13017 + x13018 - x13019 - x13024 +
    x13025 + x13027 - x13028 + x13030 - x13031 - x13036 + x13038 - x13039 +
    x14023 + x14029 - x14276 + x14277 - x14278 - x14279 - x14280 + x14281 -
    x14282 - x14283 + x14284 + x14285 + x14286 + x14287 + x5452 + x7731 +
    x2585 * x14182 - x2614 * x14182;
  const amrex::Real dwdot8dsc7 =
    -x10628 - x11840 + x11849 - x13042 + x13051 - x13055 + x13056 - x13057 +
    x13058 - x13059 - x13066 + x13069 - x13071 + x13072 - x13076 + x13077 +
    x13085 - x13087 + x14134 + x14138 + x14197 - x14288 + x14289 - x14290 -
    x14291 + x14292 - x14293 + x14294 + x14295 - x14296 - x14297 + x14298 +
    x5499 + x2652 * x14182 - x2666 * x14182;
  const amrex::Real dwdot8dsc8 =
    -120000.0 * x10675 - x10677 - x10678 + x11883 + x11886 - x11888 - x13100 -
    x13101 - x13102 - x13103 - x13104 + x13105 + x13106 - x13107 - x13109 -
    x13110 - x13118 - x13119 + x13120 - x13122 + x13123 - x13124 - x13126 -
    x13127 + x13128 - x13132 - x13133 - x13138 - x13140 + x13141 + x13863 +
    x14035 + x14140 + x14195 + x14299 + x14300 + x14301 + x14302 + x14303 +
    x14304 + x14305 + x14306 + x14307 - x14308 - x14309 - x14310 + x14311 -
    x14312 + x14313 - x14314 - x14316 - x14317 - x14318 + x14319 - x14320 -
    x14321 + x14322 + x14323 + x14324 + x14325 + x5566 - 13240000.0 * x7888 +
    x7967 + x2716 * x14182 - x2733 * x14182 - x3696 * x14315 - x3697 * x14241 +
    x3698 * x14315 - x5025 * x11884;
  const amrex::Real dwdot8dsc9 =
    -x10696 - x11937 + x11938 - x13143 - x13148 - x13149 + x13150 - x13155 +
    x13156 + x13158 - x13159 + x13161 - x13162 - x13167 + x13169 - x13170 +
    x13232 + x14218 - x14326 + x14327 - x14328 - x14329 - x14330 + x14331 +
    x14332 - x14333 + x14334 + x14335 + x14336 + x5572 + x2761 * x14182 -
    x2780 * x14182;
  const amrex::Real dwdot8dsc10 =
    -x10733 - x11980 + x11988 - x13173 + x13180 - x13181 + x13182 - x13183 -
    x13184 + x13189 - x13190 + x13192 - x13193 + x13195 - x13196 + x13203 -
    x13204 + x14196 + x14337 - x14338 + x14339 - x14340 + x14341 - x14342 -
    x14343 - x14344 + x14345 + x14346 - x14347 + x14348 + x14349 + x14350 +
    x5602 + x2818 * x14182 - x2836 * x14182;
  const amrex::Real dwdot8dsc11 =
    -x10767 + x12022 - x12023 + x12036 - x13207 - x13208 + x13217 - x13218 -
    x13224 + x13225 - x13227 + x13229 + x13234 - x13236 + x14218 + x14351 -
    x14352 - x14353 + x14354 - x14355 + x14356 + x14363 + x14364 + x14365 +
    x14366 + x2859 * x14182 - x2883 * x14182;
  const amrex::Real dwdot8dsc12 =
    210000.0 * x10273 - 210000.0 * x10275 - x10802 + x10818 + x12073 - x12077 +
    x12085 - x13238 + x13242 - x13243 - x13244 + x13245 + x13250 - x13251 +
    x13253 - x13254 - x13258 - x13260 + x13262 - x13264 + x13265 + x13266 +
    x14055 - x14367 + x14368 + x14369 - x14370 - x14371 + x14372 - x14373 -
    x14374 + x14375 + x14376 + x14377 + x14378 + x5669 + x8278 + x8431 +
    x2960 * x14182 - x2989 * x14182;
  const amrex::Real dwdot8dsc13 =
    432000.0 * x10273 - 432000.0 * x10275 - x10848 + x10849 + x12123 - x12124 -
    x13268 - x13272 - x13273 + x13274 + x13275 + x13280 - x13281 + x13283 -
    x13284 - x13286 + x13287 - x13292 + x13293 + x14348 - x14379 + x14380 -
    x14381 - x14382 + x14383 + x14384 + x14385 + x14386 - x14387 - x14388 +
    x14389 + x14390 + x5701 + x8556 + x3022 * x14182 - x3035 * x14182;
  const amrex::Real dwdot8dsc14 = -x10885 + x12163 - x12169 + x13296 - x13300 +
                                  x13301 - x13303 + x13304 - x14391 - x14392 +
                                  x14393 + x14394 - x14395 + x14401 + x14402 +
                                  x3049 * x14182 - x3068 * x14182;
  const amrex::Real dwdot8dsc15 =
    -x10912 + x12204 - x12205 - x13322 + x13328 - x13329 + x13330 - x13331 +
    x13336 - x13337 - x13339 + x13340 - x13342 + x13343 - x13348 + x13350 +
    x13351 + x14156 + x14197 + x14403 - x14404 - x14405 - x14406 + x14407 +
    x14408 + x14409 - x14410 - x14411 + x14412 + x14413 + x5735 +
    x3121 * x14182 - x3138 * x14182;
  const amrex::Real dwdot8dsc16 =
    -x10943 + x10955 - x12243 + x12246 - x13354 + x13358 - x13359 + x13360 -
    x13361 + x13362 - x13364 + x13365 - x13371 + x13372 + x13374 - x13375 -
    x13379 - x13381 + x13382 + x14196 - x14414 - x14415 + x14416 + x14417 +
    x14418 - x14419 - x14420 - x14421 + x14422 + x14423 + x14424 + x5767 +
    x3208 * x14182 - x3232 * x14182;
  const amrex::Real dwdot8dsc17 = -x10975 + x10976 + x12281 - x13385 - x13386 +
                                  x14425 - x14426 + x14427 - x14428 + x14429 +
                                  x14430 + x14431 - x3239 * x14182;
  const amrex::Real dwdot8dsc18 =
    -x10988 + x12301 - x12302 - x13395 + x13403 - x13404 - x13408 + x14396 +
    x14399 + x14432 - x14433 - x14434 + x14435 + x14436 - x14437 + x14438 +
    x14439 + x14440 + x3247 * x14182 - x3253 * x14182;
  const amrex::Real dwdot8dsc19 =
    -x11009 + x12335 - x12339 - x13413 + x13417 - x13418 + x13419 - x13420 +
    x13422 - x13429 + x13430 + x13432 - x13433 + x13438 - x13439 - x13443 +
    x13444 + x13445 + x14197 - x14441 - x14442 + x14443 - x14444 - x14445 +
    x14446 + x14447 + x14448 + x14449 - x14450 + x14451 + x14452 + x14453 +
    x5801 + x3292 * x14182 - x3308 * x14182;
  const amrex::Real dwdot8dsc20 = -x11040 + x12371 + x12375 - x13447 - x13448 +
                                  x14429 - x14454 + x14455 - x14456 + x14457 +
                                  x14458 - x3313 * x14182;
  const amrex::Real dwdot8dsc21 = -x11054 + x12389 - x12390 - x13455 + x13460 +
                                  x13461 - x13463 + x13464 + x14401 + x14459 -
                                  x14460 - x14461 + x14462 - x14463 + x14464 +
                                  x3320 * x14182 - x3324 * x14182;
  const amrex::Real dwdot8dsc22 =
    -x11073 - x12414 + x12419 + x13469 - x13471 - x13479 + x13480 - x13482 +
    x13483 + x13489 - x13490 - x13492 + x13493 + x13495 + x14357 + x14359 +
    x14398 - x14465 + x14466 + x14467 - x14468 - x14469 + x14470 + x14471 +
    x14472 + x14473 + x14474 + x5641 + x5839 + x3342 * x14182 - x3352 * x14182;
  const amrex::Real dwdot8dsc23 =
    -x11104 + x12453 - x12454 - x13497 - x13501 + x13502 - x13503 + x13504 -
    x13509 + x13510 - x13512 + x13513 + x13515 - x13516 + x13522 - x13523 +
    x14197 - x14475 - x14476 - x14477 + x14478 + x14479 + x14480 - x14481 -
    x14482 + x14483 + x14484 + x14485 + x5858 + x3385 * x14182 - x3402 * x14182;
  const amrex::Real dwdot8dsc24 =
    x12486 - x12487 - x13527 + x13528 - x13529 + x13530 + x13535 - x13536 -
    x13538 + x13539 + x13541 - x13542 - x13549 + x13550 + x14167 - x14486 -
    x14487 - x14488 + x14489 + x14490 + x14491 - x14492 + x14493 + x14494 +
    x14495 + x5890 + x3434 * x14182 - x3449 * x14182;
  const amrex::Real dwdot8dsc25 =
    -x12521 + x12526 - x13552 + x13558 - x13559 + x13561 - x13562 + x13564 -
    x13565 - x13570 + x13571 + x14169 + x14472 + x14496 - x14497 + x14498 -
    x14499 - x14500 + x14501 + x14502 + x5919 + x3466 * x14182 - x3473 * x14182;
  const amrex::Real dwdot8dsc26 =
    x12554 - x12555 - x13575 - x13576 + x13577 + x13578 - x13583 + x13584 -
    x13586 + x13587 - x13589 + x13590 + x13595 - x13596 + x14170 + x14494 -
    x14503 + x14504 + x14505 - x14506 + x14507 + x14508 - x14509 - x14510 +
    x14511 + x5936 + x3504 * x14182 - x3517 * x14182;
  const amrex::Real dwdot8dsc27 =
    x12585 - x12586 - x13600 - x13601 - x13606 + x13607 + x13609 - x13610 +
    x13612 - x13613 - x13618 + x13619 + x14171 + x14501 - x14512 - x14513 +
    x14514 + x14515 - x14516 - x14517 + x14518 + x5966 + x3536 * x14182 -
    x3548 * x14182;
  const amrex::Real dwdot8dsc28 =
    x12614 - x12615 - x13621 - x13624 - x13625 - x13630 + x13631 - x13633 +
    x13634 - x13639 + x13640 + x14172 + x14519 - x14520 - x14521 - x14522 -
    x14523 + x14524 + x14525 + x14526 + x5986 + x3564 * x14182 - x3580 * x14182;
  const amrex::Real dwdot8dsc29 =
    x12647 - x12649 - x13644 - x13647 + x13648 - x13649 - x13654 + x13655 +
    x13657 - x13658 + x13664 - x13665 + x14173 + x14526 - x14527 - x14528 +
    x14529 - x14530 + x14531 + x14532 - x14533 + x14534 + x6013 +
    x3593 * x14182 - x3607 * x14182;
  const amrex::Real dwdot8dsc30 =
    x12676 - x12677 - x13667 - x13670 - x13671 - x13676 + x13678 - x13679 -
    x13684 + x13685 + x14174 + x14187 + x14200 + x14535 - x14536 - x14537 -
    x14538 + x14539 - x14540 + x14541 + x6033 + x3621 * x14182 - x3635 * x14182;
  const amrex::Real dwdot8dsc31 = x12701 - x13687 - x13689 - x13690 + x13691 +
                                  x13692 - x13696 - x13698 - x13702 + x14175 +
                                  x14205 + x14542 + x14543 - x14544 - x14545 -
                                  x14546 + x14547 + x6058 - x3651 * x14182;
  const amrex::Real dwdot8dsc32 =
    x12724 + x13705 - x13706 - x13707 + x13708 - x13712 - x13714 - x13716 -
    x13720 + x14206 + x14548 - x14549 + x14550 - x14551 + x14552 - x14553 +
    x14554 + x6084 - x3664 * x14182 + x3699 * x14242;
  const amrex::Real dwdot8dsc33 =
    x12742 - x13722 - x13727 + x14204 + x14396 - x14555 + x14556 + x14558 +
    x14559 - x14243 * x14557 - x206 * x14235 - x3668 * x14182;
  const amrex::Real dwdot8dsc34 = x12755 - x13731 + x14201 + x14397 + x14560 -
                                  x14561 + x14562 + x14563 + x14564 +
                                  x3674 * x14182 - x3677 * x14182;
  const amrex::Real dwdot9dsc0 =
    -x10324 + x11444 + x11449 + x14569 + x14570 + x14572 + x14573 - x14574 -
    x14575 - x14576 + x14577 - x14578 + x14582 + x14587 + x14589 + x14591 +
    x14726 + x5237 - x6101 - x6117 + x6132 + x6133 - x6202 - x6203 + x6259 +
    x6342 + x6343 + x2033 * x14568 + x5046 * x3703 + x5059 * x3891;
  const amrex::Real dwdot9dsc1 =
    x10335 + x10337 + x10354 - x10355 + x11455 + x11492 + x14727 - x14728 +
    x14729 + x14730 - x14731 + x14732 - x14733 + x14734 - x14735 + x14736 -
    x14737 - x14738 - x14739 + x14742 + x14745 + x14747 + x14749 + x5278 +
    x6736 + x6777 - x6781 + x6785 + 9980000.0 * x6787 + x6802 + x6804 + x6805 -
    x6807 - x6817 + x6818 + x6819 - x6820 + x6832 - x6888 + x6890 + x6939 +
    x6953 - x6954 + x6956 + x6958 + x6962 - x6963 + x6976 - x2071 * x14568 +
    x2106 * x14568 + x5046 * x3708 - x5046 * x3709 + x5059 * x3898 -
    x5059 * x3899;
  const amrex::Real dwdot9dsc2 =
    x10395 + 19.2 * x10453 + x10454 - x10455 + x11498 + x11534 + x14231 +
    x14747 + x14750 + x14751 + x14752 + x14753 - x14754 - x14755 + x14756 -
    x14757 - x14758 - x14759 - x14760 - x14761 + x14764 + x14765 + x14768 +
    x14770 + x5303 + x7001 - x7014 - x7015 + x7020 + x7023 - x7024 + x7025 -
    x7026 - x7054 - x7075 + x7076 + x7077 - x7078 + x7087 - x2141 * x14568 +
    x2184 * x14568 + x5046 * x3710 - x5046 * x3711 + x5059 * x3900 -
    x5059 * x3901;
  const amrex::Real dwdot9dsc3 =
    x10512 - x10513 + x11541 + x11666 + x12898 + x14249 + x14747 - x14771 +
    x14772 + x14773 + x14774 + x14775 - x14776 - x14777 - x14778 - x14779 +
    x14780 - x14781 - x14782 + x14785 + x14786 + x14789 + x14791 + x5333 +
    x7121 - x7122 - x7128 + x7132 - x7138 + x7146 + x7147 - x7148 - x7181 +
    x7207 - x7208 + x7210 - x7211 + x7217 - x2259 * x14568 + x2291 * x14568 +
    x5046 * x3712 - x5046 * x3713 + x5059 * x3902 - x5059 * x3903;
  const amrex::Real dwdot9dsc4 =
    x10523 + x10529 - x10547 + x10548 + x11720 + x12909 + x12979 + x14747 +
    x14792 - x14793 + x14794 - x14795 + x14796 - x14797 - x14798 - x14799 +
    x14800 - x14801 - x14802 + x14803 + x14806 + x14809 + x14811 + x5380 -
    x7235 + x7236 - x7243 - x7244 + x7248 + x7251 - x7257 + x7258 - x7286 +
    x7306 - x7307 + x7309 - x7310 + x7317 - x2334 * x14568 + x2351 * x14568 +
    x5046 * x3714 - x5046 * x3715 + x5059 * x3904 - x5059 * x3905;
  const amrex::Real dwdot9dsc5 =
    x10552 + x10559 - x10585 + x10588 + x11739 + x11764 + x13822 - x14812 +
    x14813 + x14814 + x14815 - x14816 - x14817 - x14818 + x14819 - x14820 +
    x14821 - x14822 - x14823 + x14826 + x14829 + x14831 + x14856 + x5435 +
    x7401 - x7406 - x7411 + x7414 + x7417 - x7422 + x7427 - x7428 - x7497 +
    x7533 + x7534 - x7535 - x7537 + x7556 - x2460 * x14568 + x2507 * x14568 +
    x5046 * x3716 - x5046 * x3717 + x5059 * x3906 - x5059 * x3907;
  const amrex::Real dwdot9dsc6 =
    x10601 + x10602 + x10623 - x10624 + x11777 + x11835 + x14024 +
    2.124e+39 * x14615 + 1.77333962264151e+67 * x14621 - 2.124e+39 * x14629 -
    1.77333962264151e+67 * x14636 - x14857 - x14858 - x14860 + x14861 + x14862 -
    x14864 + x14865 - x14866 + x14867 - x14868 - x14869 - x14870 + x14871 -
    x14872 + x14873 + x14874 - x14875 + x14876 + x14884 + x14887 + x14890 +
    x14892 + x5470 - x7588 - x7590 - x7593 + x7596 + x7603 + x7604 + x7606 +
    x7628 - x7629 - x7633 + x7634 - x7639 + x7642 - x7643 - x7700 - x7746 +
    x7748 - x7749 + x7750 + x7765 + x14633 * x14859 - x14644 * x14859 -
    x2585 * x14568 + x2614 * x14568 + x5046 * x3718 - x5046 * x3719 +
    x5059 * x3908 - x5059 * x3909;
  const amrex::Real dwdot9dsc7 =
    x10638 - x10653 + x10654 + x11877 + x14133 + x14893 - x14894 - x14895 -
    x14896 - x14897 + x14898 + x14899 - x14900 - x14901 + x14902 + x14903 -
    x14904 + x14907 + x14910 + x14912 + x14913 + x5511 - x7780 + x7781 + x7792 -
    x7793 - x7794 + x7797 + x7801 - x7802 - x7832 + x7855 - x7856 + x7857 -
    x7859 + x7865 - x2652 * x14568 + x2666 * x14568 + x5046 * x3720 -
    x5046 * x3721 + x5059 * x3910 - x5059 * x3911;
  const amrex::Real dwdot9dsc8 =
    x10673 + x10690 - x10693 + x11926 + x13137 + x14325 + x14747 - x14914 +
    x14915 - x14916 + x14917 + x14918 - x14919 + x14920 - x14921 - x14922 -
    x14923 - x14924 + x14925 + x14928 + x14931 + x14933 + x5552 - x7876 +
    x7878 + x7887 + x7889 - x7890 - x7892 + x7900 - x7901 - x7930 + x7950 -
    x7951 - x7953 + x7954 + x7972 - x2716 * x14568 + x2733 * x14568 +
    x5046 * x3722 - x5046 * x3723 + x5059 * x3912 - x5059 * x3913;
  const amrex::Real dwdot9dsc9 =
    x10702 + x10726 - x10729 - x10730 + x11973 + x13164 + x13869 + x14039 +
    x14141 + x14336 - x14692 + x14747 + x14937 + x14940 - x14941 - x14942 -
    x14943 + x14944 - x14945 - x14946 + x14947 - x14948 + x14949 - x14950 +
    x14951 + x14952 - x14953 + x14955 - 9.84 * x14956 - x14957 -
    64000000.0 * x14958 - x14959 + x14960 - x14961 + x14965 + x14970 + x14974 +
    x14978 + x14983 + x14988 + x5594 - x6403 + x7985 - x7987 - x7996 - x7998 -
    x7999 - 19960000.0 * x8001 + x8003 + x8005 + x8010 - x8011 - x8012 - x8036 -
    x8037 - x8066 - x8067 - x8068 + x8069 + x8071 - x8072 + x8081 -
    7.08e+38 * x14610 * x14954 - x2761 * x14568 + x2780 * x14568 +
    x5046 * x3724 - x5046 * x3725 + x5059 * x3914 - x5059 * x3915;
  const amrex::Real dwdot9dsc10 =
    x10737 + x10760 - x10764 + x11976 + x12016 + x13174 + x13177 + x14990 +
    x14992 + x14994 - x14995 + x14996 + x14997 - x14998 + 4.92 * x14999 +
    x15001 + x15002 - x15003 - x15004 - x15005 + x15007 + x15008 - x15009 +
    x15011 + x15012 - x15013 + x15017 + x15021 + x15024 + x15025 + x5635 +
    x8082 + x8089 - x8094 + x8095 - x8102 - x8106 + x8107 - x8112 + x8113 -
    x8143 - x8167 - x8168 + x8169 + x8170 + x8178 - x2818 * x14568 +
    x2836 * x14568 + x5046 * x3726 - x5046 * x3727 + x5059 * x3916 -
    x5059 * x3917 + x7059 * x5045;
  const amrex::Real dwdot9dsc11 =
    x10777 + x10799 - x10800 + x12021 + x12048 + x14365 + x14593 + x14747 -
    x15026 + x15027 - x15028 + x15029 - x15030 - x15031 - x15032 - x15033 +
    x15034 - x15035 + x15036 + x15039 + x15041 + x15045 + x5657 + x8192 -
    x8201 - x8202 + x8204 + x8205 - x8208 + x8212 - x8213 - x8229 + x8243 -
    x8244 + x8245 - x8247 + x8253 + x8260 - x2859 * x14568 + x2883 * x14568 +
    x5046 * x3728 - x5046 * x3729 + x5059 * x3918 - x5059 * x3919;
  const amrex::Real dwdot9dsc12 =
    x10818 - x10841 + x10845 + x12081 + x12118 + x15046 + x15047 + x15048 -
    x15049 - x15050 + x15052 - x15053 + x15055 - x15056 - x15057 + x15058 -
    x15059 + x15060 - x15061 - x15062 - x15063 + x15064 - x15065 + x15067 +
    x15068 - x15069 - x15070 + x15071 + x15080 + x15083 + x15086 + x15088 +
    x15090 + x5689 + x8296 - x8297 - x8298 + x8299 + x8316 + x8317 + x8318 -
    x8323 - x8326 - x8329 - x8330 + x8339 + x8340 - x8341 - x8400 - x8450 -
    x8451 + x8452 + x8454 + x8468 + x14633 * x15051 - x14644 * x15051 -
    x2960 * x14568 + x2989 * x14568 + x5046 * x3730 - x5046 * x3731 +
    x5059 * x3920 - x5059 * x3921;
  const amrex::Real dwdot9dsc13 =
    x10854 + x10880 - x10881 + x12158 + x15025 + x15091 - x15092 + x15093 +
    x15094 + x15095 - x15096 - x15097 + x15098 - x15099 - x15100 - x15101 -
    x15102 + x15105 + x15108 + x15110 + x5721 + x8472 + x8480 - x8481 - x8482 +
    x8493 - x8494 + x8504 - x8505 - x8534 + x8572 + x8573 - x8575 - x8576 +
    x8582 - x3022 * x14568 + x3035 * x14568 + x5046 * x3732 - x5046 * x3733 +
    x5059 * x3922 - x5059 * x3923;
  const amrex::Real dwdot9dsc14 =
    x10906 - x10909 + x12191 + x14690 + x14725 + x15112 + x15113 + x15115 +
    x15117 - x15118 + x15119 - x15120 + x15121 - x15122 + x15123 - x15124 +
    x15125 + x15129 + x15130 + x15134 + x15142 + x5657 + x8589 - x8590 + x8603 -
    x8604 - x8608 + x8626 - x8627 + x8628 - x8629 + x8636 + x8653 -
    x3049 * x14568 + x3068 * x14568 + x5046 * x3734 - x5046 * x3735;
  const amrex::Real dwdot9dsc15 =
    x10916 + x10936 + 19.2 * x10937 - x10940 + x12238 + x14689 + x15142 -
    x15143 + x15144 + x15145 - x15146 + x15147 - x15148 - x15149 + x15150 +
    x15151 - x15152 - x15153 - x15154 + x15157 + x15160 + x15163 + x5755 +
    x8675 - x8681 + x8682 + x8694 - x8696 - x8697 + x8700 - x8701 - x8743 +
    x8775 - x8776 + x8777 - x8778 + x8779 + x8780 + x8781 - x3121 * x14568 +
    x3138 * x14568 + x5046 * x3736 - x5046 * x3737 + x5059 * x3926 -
    x5059 * x3927;
  const amrex::Real dwdot9dsc16 =
    x10952 + x10955 + x10968 - x10971 + x12245 + x12278 + x14642 + x15142 -
    x15164 + x15165 + x15166 + x15167 - x15168 - x15169 + x15171 + x15172 -
    x15173 - x15174 - x15175 - x15176 + x15177 + x15178 - x15179 - x15180 +
    x15181 + x15190 + x15194 + x15197 + x15199 + x5787 - x8792 - x8793 + x8805 +
    x8809 - x8810 + x8811 + x8813 + x8814 - x8818 + x8828 - x8829 - x8831 +
    x8839 - x8840 - x8906 - x8928 + x8930 - x8931 + x8932 + x8948 +
    x14633 * x15170 - x14644 * x15170 - x3208 * x14568 + x3232 * x14568 +
    x5046 * x3738 - x5046 * x3739 + x5059 * x3928 - x5059 * x3929;
  const amrex::Real dwdot9dsc17 =
    -x10984 + x12296 - x15200 + x15201 - x15202 - x15203 + x15205 + x15207 +
    x15209 + x15214 + x4687 + x8957 - x8962 - x8965 - x8975 - x8976 + x8982 +
    x3239 * x14568 + x5046 * x3740;
  const amrex::Real dwdot9dsc18 =
    x10994 + x11005 - x11006 + x12328 + x15210 + x15215 + x15216 + x15217 -
    x15218 - x15219 - x15220 + x15221 - x15222 - x15223 + x15225 + x15227 +
    x15230 + x15232 + x8995 - x9003 - x9007 + x9008 - x9009 - x9021 + x9022 +
    x9040 - x9041 - x9042 + x9043 + x9050 - x3247 * x14568 + x3253 * x14568 +
    x5046 * x3741 - x5046 * x3742 + x5059 * x3930;
  const amrex::Real dwdot9dsc19 =
    x11017 - x11034 + x11038 + x12368 + x14708 + x14913 + x15233 - x15234 +
    x15235 - x15236 - x15237 - x15238 - x15239 + x15240 - x15241 + x15242 -
    x15243 + x15244 + x15245 + x15248 + x15250 + x15253 + x15255 + x5828 -
    x9072 + x9074 + x9076 - x9080 + x9081 - x9085 + x9086 - x9087 - x9128 +
    x9155 - x9156 + x9157 - x9158 + x9165 - x3292 * x14568 + x3308 * x14568 +
    x5046 * x3743 - x5046 * x3744 + x5059 * x3931 - x5059 * x3932;
  const amrex::Real dwdot9dsc20 = x11042 - x11052 + x12385 + x15214 - x15256 -
                                  x15257 - x15258 + x15259 + x15261 + x15263 +
                                  x9170 - x9179 - x9186 - x9196 - x9198 +
                                  x9202 + x3313 * x14568 + x5046 * x3745;
  const amrex::Real dwdot9dsc21 =
    x11056 + x11069 - x11070 + x12407 + x15130 + x15264 + x15265 - x15266 +
    x15267 + x15268 - x15269 - x15270 - x15271 + x15274 + x15275 - x9212 +
    x9217 + x9220 - x9221 + x9228 - x9231 - x9247 + x9248 - x9249 + x9250 +
    x9257 - x3320 * x14568 + x3324 * x14568 + x5046 * x3746 - x5046 * x3747;
  const amrex::Real dwdot9dsc22 =
    x11079 + x11099 - x11101 + x12448 + x14675 + x14913 + x15276 + x15278 -
    x15279 + x15280 + x15281 - x15282 + x15283 + x15284 + x15285 - x15286 -
    x15287 - x15288 - x15289 - x15290 + x15291 + x15294 + x15297 + x15299 +
    x5657 + x5848 + x9266 - x9267 - x9278 + x9280 + x9282 - x9283 + x9291 -
    x9292 - x9319 + x9344 - x9345 + x9346 - x9348 + x9354 - x3342 * x14568 +
    x3352 * x14568 + x5046 * x3748 - x5046 * x3749 + x5059 * x3933 -
    x5059 * x3934;
  const amrex::Real dwdot9dsc23 =
    x11113 + x11127 - x11128 + x12485 + x14913 + x15300 - x15301 + x15302 +
    x15303 - x15304 - x15305 - x15306 - x15307 + x15308 - x15309 - x15310 +
    x15311 + x15314 + x15317 + x15319 + x5878 + x9363 + x9365 - x9374 + x9378 -
    x9379 - x9380 + x9387 - x9388 - x9420 + x9443 - x9444 - x9445 + x9446 +
    x9453 - x3385 * x14568 + x3402 * x14568 + x5046 * x3750 - x5046 * x3751 +
    x5059 * x3935 - x5059 * x3936;
  const amrex::Real dwdot9dsc24 =
    x10272 - x11153 + x11154 + x11390 + x12503 + x14721 + x14747 + x15320 +
    x15321 - x15322 - x15323 + x15324 - x15325 - x15326 + x15327 - x15328 +
    x15329 + x15332 + x15335 + x15336 + x5910 - x9461 + x9462 - x9465 - x9471 +
    x9477 + x9478 - x9483 + x9484 - x9539 + x9540 + x9541 - x9542 + x9548 -
    x3434 * x14568 + x3449 * x14568 + x5046 * x3752 - x5046 * x3753 +
    x5059 * x3937 - x5059 * x3938;
  const amrex::Real dwdot9dsc25 =
    x11175 - x11177 + x12551 - x15337 + x15338 + x15339 - x15340 + x15341 +
    x15342 - x15343 - x15344 - x15345 + x15346 + x15349 + x15352 + x15353 +
    x15354 + x5927 - x9553 - x9559 + x9560 - x9570 + x9571 + x9573 + x9577 -
    x9578 + x9626 - x9627 - x9628 + x9629 + x9635 - x3466 * x14568 +
    x3473 * x14568 + x5046 * x3754 - x5046 * x3755 + x5059 * x3939 -
    x5059 * x3940;
  const amrex::Real dwdot9dsc26 =
    -x11199 + x11201 + x12582 + x15354 - x15355 + x15356 + x15357 - x15358 -
    x15359 + x15360 - x15361 + x15362 - x15363 + x15364 + x15367 + x15370 +
    x15371 + x5956 - x9640 - x9642 + x9647 + x9655 - x9656 + x9658 + x9666 -
    x9667 + x9720 - x9721 + x9722 - x9723 + x9729 - x3504 * x14568 +
    x3517 * x14568 + x5046 * x3756 - x5046 * x3757 + x5059 * x3941 -
    x5059 * x3942;
  const amrex::Real dwdot9dsc27 =
    x11224 - x11226 + x12613 + x15354 - x15372 - x15373 + x15374 + x15375 -
    x15376 - x15377 + x15378 + x15379 + x15380 - x15381 + x15384 + x15387 +
    x15388 + x5978 - x9734 + x9738 + x9748 - x9750 + x9752 - x9756 + x9760 -
    x9761 + x9805 + x9806 - x9807 - x9808 + x9814 - x3536 * x14568 +
    x3548 * x14568 + x5046 * x3758 - x5046 * x3759 + x5059 * x3943 -
    x5059 * x3944;
  const amrex::Real dwdot9dsc28 =
    x11248 - x11250 + x12632 - x15389 + x15390 - x15391 + x15392 + x15393 +
    x15394 - x15395 - x15396 - x15397 + x15400 + x15403 + x15404 + x15405 +
    x5998 - x9821 + x9825 - x9826 + x9827 + x9837 - x9840 + x9844 - x9845 -
    x9891 + x9892 - x9893 + x9894 + x9900 - x3564 * x14568 + x3580 * x14568 +
    x5046 * x3760 - x5046 * x3761 + x5059 * x3945 - x5059 * x3946;
  const amrex::Real dwdot9dsc29 =
    x11270 - x11273 + x12673 + x15405 + x15406 - x15407 - x15408 - x15409 -
    x15410 + x15411 - x15412 + x15413 + x15414 + x15417 + x15420 + x15421 +
    x6025 - x9912 + x9913 - x9915 + x9917 + x9922 - x9925 + x9928 - x9929 +
    x9979 - x9980 - x9981 + x9982 + x9988 - x3593 * x14568 + x3607 * x14568 +
    x5046 * x3762 - x5046 * x3763 + x5059 * x3947 - x5059 * x3948;
  const amrex::Real dwdot9dsc30 =
    -x10001 - x10007 + x10009 + x10015 - x10016 + x10060 - x10061 - x10062 +
    x10063 + x10069 - x11294 + x11295 + x12699 + x14722 + x15422 - x15423 -
    x15424 - x15425 + x15426 - x15427 - x15428 + x15429 + x15432 + x15435 +
    x15436 + x6045 + x9994 + x9999 - x3621 * x14568 + x3635 * x14568 +
    x5046 * x3764 - x5046 * x3765 + x5059 * x3949 - x5059 * x3950;
  const amrex::Real dwdot9dsc31 =
    -x10070 - x10077 + x10081 + x10087 - x10119 - x10120 + x10124 - x11308 +
    x12719 + x14726 - x15437 + x15438 - x15439 - x15440 - x15441 + x15443 +
    x15445 + x15446 + x15447 + x6070 + x3651 * x14568 + x5046 * x3766 +
    x5059 * x3951;
  const amrex::Real dwdot9dsc32 =
    -x10127 - x10137 + x10142 + x10143 - x10170 - x10171 + x10175 - x11322 +
    x12737 + x14726 + x15212 - x15448 - x15449 - x15450 + x15451 - x15452 +
    x15454 + x15456 + x15457 + x6096 + x3664 * x14568 + x5046 * x3767 +
    x5059 * x3952;
  const amrex::Real dwdot9dsc33 =
    -x10178 + x10186 - x10189 - x10204 - x10205 + x10209 - x11332 + x12754 +
    x15210 + x15447 - x15458 - x15459 + x15460 + x15462 + x15464 + x15466 +
    x3668 * x14568 + x5046 * x3768 + x5059 * x3953;
  const amrex::Real dwdot9dsc34 =
    -x10214 + x10219 - x10222 - x10238 + x10239 - x10240 + x10241 + x10247 -
    x11340 + x12762 + x14586 + x14591 + x15275 + x15466 - x15467 + x15468 -
    x15469 + x15471 - x3674 * x14568 + x3677 * x14568 + x5046 * x3769 -
    x5046 * x3770;
  const amrex::Real dwdot10dsc0 = x14574 + x14576 + x14578 - x14581 - x14583 +
                                  x15486 - x5226 + x5229 - x5230 + x5231 +
                                  x5233 - x2033 * x15472 - x5096 * x3703;
  const amrex::Real dwdot10dsc1 =
    x14735 - x14740 + x14741 - x14743 + x14744 - x14748 + x15487 + x15488 +
    x15489 + x15490 - x5274 + x5276 - x5277 + x6737 + x6971 + x2071 * x15472 -
    x2106 * x15472 - x5096 * x3708 + x5096 * x3709;
  const amrex::Real dwdot10dsc2 =
    x10372 + x14759 - x14762 + x14763 - x14766 + x14767 - x14769 + x15487 +
    x15491 + x15492 + x15493 - x5300 - x5301 + x5302 + x2141 * x15472 -
    x2184 * x15472 - x5096 * x3710 + x5096 * x3711;
  const amrex::Real dwdot10dsc3 =
    x10462 + x11542 + x14778 - x14783 + x14784 + x14787 - x14788 - x14790 +
    x15476 + x15494 + x15495 + x15496 - x5328 + x5329 - x5330 + x5331 - x5332 +
    x2259 * x15472 - x2291 * x15472 - x5096 * x3712 + x5096 * x3713;
  const amrex::Real dwdot10dsc4 =
    x12910 + x14250 + x14798 - x14804 + x14805 + x14807 - x14808 - x14810 +
    x15476 + x15497 + x15498 + x15499 + x5375 + x5376 - x5377 - x5378 - x5379 +
    x2334 * x15472 - x2351 * x15472 - x5096 * x3714 + x5096 * x3715;
  const amrex::Real dwdot10dsc5 =
    x14817 + x14824 - x14825 + x14827 - x14828 - x14830 + x15500 + x15501 +
    x15502 + x15503 + x5430 - x5431 - x5432 + x5433 - x5434 + x7323 +
    x2460 * x15472 - x2507 * x15472 - x5096 * x3716 + x5096 * x3717;
  const amrex::Real dwdot10dsc6 =
    x11767 + x14860 + x14885 - x14886 + x14888 - x14889 - x14891 + x15504 +
    x15505 + x15506 + x5465 - x5466 - x5467 + x5468 - x5469 + x7756 + x7759 -
    x7760 + x7762 - x7763 - x7764 + x2585 * x15472 - x2614 * x15472 -
    x5096 * x3718 + x5096 * x3719;
  const amrex::Real dwdot10dsc7 =
    x13044 + x14900 - x14905 + x14906 - x14908 + x14909 - x14911 + x15476 +
    x15507 + x15508 + x15509 - x5506 + x5507 + x5508 - x5509 - x5510 +
    x2652 * x15472 - x2666 * x15472 - x5096 * x3720 + x5096 * x3721;
  const amrex::Real dwdot10dsc8 =
    x14301 + x14919 - x14926 + x14927 + x14929 - x14930 - x14932 + x15476 +
    x15510 + x15511 + x15512 + x5547 - x5548 + x5549 - x5550 - x5551 +
    x2716 * x15472 - x2733 * x15472 - x5096 * x3722 + x5096 * x3723;
  const amrex::Real dwdot10dsc9 =
    x10697 + x11931 + x13144 + x13232 + x14939 + 4.92 * x14956 +
    32000000.0 * x14958 + x14966 + x14968 - x14969 + x14973 - x14979 + x14981 +
    x14982 - x14985 + x14987 + x15487 + x15513 + x15514 + x15515 + x15516 -
    x5589 - x5590 + x5591 + x5592 + x5593 + x7975 + x8079 + x2761 * x15472 -
    x2780 * x15472 - x5096 * x3724 + x5096 * x3725;
  const amrex::Real dwdot10dsc10 =
    x10736 + x11977 + x13175 + x14337 - 2.46 * x14999 - x15014 - x15015 +
    x15016 - x15018 + x15019 - x15020 - x15022 - x15023 + x15500 + x15517 +
    x15518 + x15519 + x15520 + x15521 + x15522 - x5627 - x5628 + x5629 - x5630 -
    x5631 + x5632 - x5633 - x5634 + x8083 - x8176 + x2818 * x15472 -
    x2836 * x15472 - x4511 * x7617 - x5096 * x3726 + x5096 * x3727;
  const amrex::Real dwdot10dsc11 = x15030 - x15037 + x15038 - x15040 + x15042 -
                                   x15043 + x15044 + x15525 + x15526 + x15527 +
                                   x15528 + x2859 * x15472 - x2883 * x15472 -
                                   x5096 * x3728 + x5096 * x3729;
  const amrex::Real dwdot10dsc12 =
    x15065 + x15081 - x15082 - x15084 + x15085 - x15089 + x15529 + x15530 +
    x15531 - x5685 - x5686 + x5687 + x5688 - x8459 + x8461 + x8463 + x8464 -
    x8465 - x8467 + x2960 * x15472 - x2989 * x15472 - x5096 * x3730 +
    x5096 * x3731;
  const amrex::Real dwdot10dsc13 =
    x15097 - x15103 + x15104 + x15106 - x15107 - x15109 + x15500 + x15532 +
    x15533 + x15534 + x5717 - x5718 + x5719 - x5720 + x3022 * x15472 -
    x3035 * x15472 - x5096 * x3732 + x5096 * x3733;
  const amrex::Real dwdot10dsc14 = -x15113 - x15126 + x15127 + x15539 + x15540 +
                                   x15541 + x3049 * x15472 - x3068 * x15472 -
                                   x5096 * x3734 + x5096 * x3735;
  const amrex::Real dwdot10dsc15 =
    x15149 - x15155 + x15156 + x15158 - x15159 - x15161 + x15162 + x15476 +
    x15542 + x15543 + x15544 + x5751 - x5752 + x5753 - x5754 + x3121 * x15472 -
    x3138 * x15472 - x5096 * x3736 + x5096 * x3737;
  const amrex::Real dwdot10dsc16 =
    x15174 - x15191 + x15192 + x15193 - x15195 + x15196 - x15198 + x15545 +
    x15546 + x15547 + x5783 - x5784 + x5785 - x5786 + x8937 - x8939 + x8941 -
    x8943 - x8944 + x8946 + x3208 * x15472 - x3232 * x15472 - x5096 * x3738 +
    x5096 * x3739;
  const amrex::Real dwdot10dsc17 =
    x15203 - x15206 - x15208 + x15549 + x15550 - x3239 * x15472 - x5096 * x3740;
  const amrex::Real dwdot10dsc18 =
    x15220 - x15224 - x15228 + x15229 - x15231 + x15538 + x15551 + x15552 +
    x3247 * x15472 - x3253 * x15472 - x5096 * x3741 + x5096 * x3742;
  const amrex::Real dwdot10dsc19 =
    x15238 + x15246 - x15247 + x15249 + x15251 - x15252 - x15254 + x15476 +
    x15553 + x15554 + x15555 - x5822 + x5823 - x5824 + x5825 + x5827 +
    x3292 * x15472 - x3308 * x15472 - x5096 * x3743 + x5096 * x3744;
  const amrex::Real dwdot10dsc20 =
    x15257 - x15260 - x15262 + x15549 + x15556 - x3313 * x15472 - x5096 * x3745;
  const amrex::Real dwdot10dsc21 =
    -x15265 + x15269 - x15272 + x15273 + x15539 + x15557 + x15558 +
    x3320 * x15472 - x3324 * x15472 - x5096 * x3746 + x5096 * x3747;
  const amrex::Real dwdot10dsc22 =
    x15277 + x15290 + x15292 - x15293 + x15295 - x15296 - x15298 + x15525 +
    x15559 + x15560 + x15561 + x5847 + x3342 * x15472 - x3352 * x15472 -
    x5096 * x3748 + x5096 * x3749;
  const amrex::Real dwdot10dsc23 =
    x15307 + x15312 - x15313 - x15315 + x15316 - x15318 + x15476 + x15562 +
    x15563 + x15564 - x5874 - x5875 + x5876 + x5877 + x3385 * x15472 -
    x3402 * x15472 - x5096 * x3750 + x5096 * x3751;
  const amrex::Real dwdot10dsc24 =
    -x15330 + x15331 - x15333 + x15334 + x15477 + x15565 + x15566 + x15567 -
    x5906 + x5907 + x5908 - x5909 + x3434 * x15472 - x3449 * x15472 -
    x5096 * x3752 + x5096 * x3753;
  const amrex::Real dwdot10dsc25 = -x15347 + x15348 + x15350 - x15351 + x15479 +
                                   x15523 + x15568 + x15569 + x15570 - x5926 +
                                   x3466 * x15472 - x3473 * x15472 -
                                   x5096 * x3754 + x5096 * x3755;
  const amrex::Real dwdot10dsc26 =
    -x15365 + x15366 + x15368 - x15369 + x15477 + x15571 + x15572 + x15573 +
    x5952 - x5953 - x5954 + x5955 + x3504 * x15472 - x3517 * x15472 -
    x5096 * x3756 + x5096 * x3757;
  const amrex::Real dwdot10dsc27 = x15382 - x15383 - x15385 + x15386 + x15479 +
                                   x15574 + x15575 + x15576 - x5976 - x5977 +
                                   x3536 * x15472 - x3548 * x15472 -
                                   x5096 * x3758 + x5096 * x3759;
  const amrex::Real dwdot10dsc28 = x15395 - x15398 + x15399 + x15401 - x15402 +
                                   x15577 + x15578 + x15579 - x5996 - x5997 +
                                   x3564 * x15472 - x3580 * x15472 -
                                   x5096 * x3760 + x5096 * x3761;
  const amrex::Real dwdot10dsc29 = x15412 + x15415 - x15416 + x15418 - x15419 +
                                   x15577 + x15580 + x15581 - x6022 + x6023 -
                                   x6024 + x3593 * x15472 - x3607 * x15472 -
                                   x5096 * x3762 + x5096 * x3763;
  const amrex::Real dwdot10dsc30 = x15424 + x15428 - x15430 + x15431 + x15433 -
                                   x15434 + x15483 + x15582 - x6043 - x6044 +
                                   x3621 * x15472 - x3635 * x15472 -
                                   x5096 * x3764 + x5096 * x3765;
  const amrex::Real dwdot10dsc31 = x15439 + x15440 - x15442 - x15444 + x15485 +
                                   x15583 - x6067 - x6068 + x6069 -
                                   x3651 * x15472 - x5096 * x3766;
  const amrex::Real dwdot10dsc32 = x15448 + x15449 + x15452 - x15453 - x15455 +
                                   x15486 - x6093 + x6094 - x6095 -
                                   x3664 * x15472 - x5095 * x10138;
  const amrex::Real dwdot10dsc33 = -x15461 - x15463 + x15484 + x15536 + x15584 -
                                   x3668 * x15472 - x5096 * x3768;
  const amrex::Real dwdot10dsc34 = -x15470 + x15483 + x15548 + x15585 +
                                   x3674 * x15472 - x3677 * x15472 -
                                   x5096 * x3769 + x5096 * x3770;
  const amrex::Real dwdot11dsc0 =
    -x10249 - x10250 + x10251 + x10252 + x10253 - x10323 + x11380 + x12767 +
    x12808 - x14179 + x14186 + x14587 + x15589 + x15601 + x6135 + x6201;
  const amrex::Real dwdot11dsc1 =
    -x10329 + x10331 - x10332 + x10333 + x10336 + x10338 - x10339 - x10340 +
    x10350 - x10351 + x10353 + x11467 + x11485 + x12839 + x13802 + x14207 -
    x14208 + x14215 + x14219 + x14745 + x15604 + x15605 + x6775 + x6776 -
    x6789 + x6945;
  const amrex::Real dwdot11dsc2 =
    x10379 + x10381 - x10382 + x10383 + x10384 - x10388 - x10389 - x10397 +
    x10401 + x10403 + x10446 + x10450 - x10451 + 0.384 * x10453 + x11506 +
    x11529 + x12869 + x13804 + x14221 + x14222 - x14227 + x14229 + x14768 +
    x15605 + x15608 - x7004 + x7017 + x7073;
  const amrex::Real dwdot11dsc3 =
    x10468 - x10469 - x10472 + x10473 - x10474 - x10480 + x10482 + x10485 +
    x10509 + x10510 - x10514 + x11612 + x11652 + x12902 + x13809 + x14013 +
    x14232 - x14233 + x14234 + x14247 + x14789 + x15611 + x15612 + x7125 -
    x7126 + x7206;
  const amrex::Real dwdot11dsc4 =
    -x10521 + x10522 - x10526 + x10527 - x10530 + x10532 - x10533 + x10534 +
    x10543 + x10544 - x10546 + x11678 + x11713 + x12970 + x13814 + x14254 -
    x14257 + x14261 + x14263 + x14809 + x15612 + x15615 - x7246 + x7249 + x7305;
  const amrex::Real dwdot11dsc5 =
    x10554 - x10557 - x10558 - x10560 + x10563 + x10565 + x10566 - x10567 +
    x10583 + x10586 - x10587 + x11736 + x11759 + x13006 + x13829 + x13843 +
    x14264 + x14266 - x14270 + x14274 + x14829 + x15618 + x15619 + x7390 -
    x7405 + x7528;
  const amrex::Real dwdot11dsc6 =
    -x10592 + x10593 - x10594 - x10595 + x10597 + x10599 - x10600 + x10603 +
    x10614 - x10620 + x10621 + x11825 + x13037 + x13845 - x13849 + x13851 +
    x13852 + x13854 - x13855 - x13856 + x14031 + x14276 - x14277 + x14278 +
    x14286 + x14890 + x15622 - x7595 + x7597 + x7598 + x7599 - x7600 + x7608 -
    x7613 - x7638 + x7744;
  const amrex::Real dwdot11dsc7 =
    x10631 - x10632 + x10635 - x10636 + x10637 - x10639 - x10640 + x10641 +
    x10650 + x10651 - x10652 + x11872 + x13083 + x14288 - x14295 + x14296 +
    x14298 + x14910 + x15625 + x15628 - x7773 + x7775 + x7853;
  const amrex::Real dwdot11dsc8 =
    -x10660 + x10661 - x10662 + x10663 - x10665 + x10666 + x10668 - x10676 +
    x10688 + x10691 - x10692 + x11891 + x11921 + x13134 + x13864 - x14306 +
    x14310 + x14312 + x14318 + x14323 + x14931 + x15605 + x15631 - x7873 +
    x7891 + x7948;
  const amrex::Real dwdot11dsc9 =
    -x10698 + x10699 - x10700 - x10706 + x10707 + x10710 - x10712 + x10713 +
    x10725 + x10727 - x10728 + x11947 + x11966 + x13168 + x13870 + x14326 -
    x14327 + x14328 + x14334 + x14983 + x15605 + x15634 + x7982 - x7983 + x8063;
  const amrex::Real dwdot11dsc10 =
    -x10738 - x10739 + x10740 - x10743 + x10744 + x10745 + x10746 - x10747 +
    x10759 - x10761 + x10763 + x12007 + x13202 + x14338 - x14339 + x14340 +
    x14349 + x15021 + x15637 + x15638 - x8090 + x8091 + x8165;
  const amrex::Real dwdot11dsc11 =
    -x10768 - x10769 + x10770 - x10773 + x10774 + x10775 + x10778 - x10779 -
    x10781 + x10794 - x10795 - x10796 + x10798 + x12037 + x12044 + x12046 +
    x12047 + x12070 + x13237 - x13767 + x13886 + x14051 - x14351 + x14352 -
    x14354 + x14355 + x14366 + x15045 + x15605 + x15643 + x15644 - x6416 -
    x8187 + x8188 + x8264;
  const amrex::Real dwdot11dsc12 =
    x10805 - x10806 - x10808 + x10809 + x10811 - x10815 + x10817 - x10819 +
    x10833 + x10842 - x10844 + x12090 + x12112 + x13259 + x13888 + x13892 -
    x13893 - x13895 + x13896 + x13897 + x13898 - x13899 + x14367 - x14368 +
    x14370 + x14377 + x15086 + x15648 - x8290 + x8292 + x8293 - x8294 - x8300 +
    x8306 - x8333 + x8335 + x8443;
  const amrex::Real dwdot11dsc13 =
    x10851 + x10852 - x10853 + x10856 + x10858 - x10859 - x10860 - x10861 +
    x10870 - x10878 + x10882 + x12153 + x13291 + x14379 - x14385 + x14387 +
    x14389 + x15108 + x15638 + x15652 - x8476 + x8477 + x8568;
  const amrex::Real dwdot11dsc14 = x10893 + x10908 - x10910 + x12186 + x13321 +
                                   x14391 + x14392 - x14393 + x14402 + x15129 +
                                   x15655 + x15658 - x8597 + x8598 + x8624;
  const amrex::Real dwdot11dsc15 =
    x10914 + x10915 - x10918 - x10919 + x10920 + x10921 - x10923 - x10924 +
    x10933 - x10935 + 0.384 * x10937 + x10939 + x12230 + x13347 - x14403 +
    x14404 + x14410 + x14412 + x15160 + x15628 + x15661 - x8676 + x8695 + x8769;
  const amrex::Real dwdot11dsc16 =
    x10944 + x10945 + x10946 - x10947 - x10948 + x10949 - x10950 - x10956 +
    x10966 + x10967 - x10969 + x12253 + x12273 + x13380 + x13919 - x13923 -
    x13925 + x13926 + x13927 + x13928 - x13929 + x14414 - x14417 + x14420 +
    x14424 + x15197 + x15664 - x8795 - x8796 - x8797 + x8798 + x8800 - x8801 +
    x8815 + x8821 + x8926;
  const amrex::Real dwdot11dsc17 = x10981 - x10983 + x12293 + x13392 - x14427 +
                                   x14428 + x14430 + x15207 + x15666 + x15669 +
                                   x8952 + x8973;
  const amrex::Real dwdot11dsc18 =
    -x10992 + x11002 + x11004 - x11007 + x12314 + x12323 + x13412 + x14433 +
    x14434 - x14435 + x14439 + x15230 + x15668 + x15672 + x8992 - x8993 + x9038;
  const amrex::Real dwdot11dsc19 =
    -x11011 + x11013 - x11014 - x11015 + x11018 - x11019 + x11020 + x11021 +
    x11030 - x11035 + x11036 + x12363 + x13437 + x14441 + x14442 - x14443 +
    x14452 + x15253 + x15626 + x15675 + x9062 - x9063 + x9153;
  const amrex::Real dwdot11dsc20 = x11049 - x11050 + x12382 + x13452 + x14454 -
                                   x14455 + x14457 + x15261 + x15669 + x15676 +
                                   x9177 + x9194;
  const amrex::Real dwdot11dsc21 = x11065 + x11066 - x11067 + x12402 + x13468 -
                                   x14459 + x14460 + x14463 + x14464 + x15274 +
                                   x15658 + x15679 + x9209 - x9219 + x9245;
  const amrex::Real dwdot11dsc22 =
    -x11074 + x11075 + x11077 + x11078 - x11080 + x11081 - x11082 - x11083 +
    x11093 + x11097 - x11098 + x12443 + x13487 + x14465 - x14466 + x14469 +
    x14473 + x15297 + x15628 + x15682 + x9265 - x9277 + x9342;
  const amrex::Real dwdot11dsc23 =
    -x11105 + x11106 + x11107 - x11108 - x11109 + x11110 - x11111 + x11112 +
    x11124 + x11126 - x11129 + x12480 + x13520 + x14475 - x14480 + x14482 +
    x14484 + x15317 + x15628 + x15685 - x9361 + x9376 + x9441;
  const amrex::Real dwdot11dsc24 =
    -x11131 + x11134 - x11135 + x11136 - x11137 + x11138 - x11139 + x11140 +
    x11150 + x11151 - x11152 + x12500 + x12502 + x12516 + x13548 + x14486 -
    x14491 + x14495 + x15335 + x15688 + x15689 + x9466 - x9476 + x9538;
  const amrex::Real dwdot11dsc25 =
    -x11156 - x11157 - x11160 + x11161 + x11162 + x11163 + x11164 - x11165 +
    x11174 + x11176 - x11178 + x12543 + x13569 - x14496 + x14499 + x14502 +
    x15352 + x15692 + x15693 - x9555 + x9572 + x9624;
  const amrex::Real dwdot11dsc26 =
    x11180 - x11181 - x11183 + x11184 + x11185 - x11186 + x11187 - x11189 +
    x11198 - x11200 + x11202 + x12577 + x13594 - x14505 + x14509 + x14511 +
    x15370 + x15693 + x15696 - x9638 + x9644 + x9718;
  const amrex::Real dwdot11dsc27 =
    -x11204 - x11205 + x11206 + x11207 - x11208 - x11209 + x11210 + x11211 +
    x11222 + x11223 - x11225 + x12608 + x13617 + x14512 - x14514 + x14518 +
    x15387 + x15693 + x15699 + x9739 - x9747 + x9803;
  const amrex::Real dwdot11dsc28 =
    x11228 - x11229 + x11230 + x11231 + x11232 - x11235 - x11236 + x11246 -
    x11247 + x11249 + x11376 + x12629 + x12630 + x12644 + x13638 - x14519 +
    x14520 + x14525 + x15403 + x15596 + x15702 + x9822 - x9823 + x9890;
  const amrex::Real dwdot11dsc29 =
    -x11252 + x11253 + x11255 + x11256 + x11257 - x11258 - x11260 + x11269 -
    x11271 + x11272 + x11376 + x12668 + x13663 + x14527 - x14532 + x14534 +
    x15420 + x15705 + x15706 + x9910 - x9914 + x9977;
  const amrex::Real dwdot11dsc30 = -x10011 + x10058 + x11275 - x11277 - x11278 +
                                   x11279 + x11280 + x11291 + x11292 - x11293 +
                                   x12694 + x13683 - x14535 + x14537 + x14541 +
                                   x15435 + x15597 + x15706 + x15709 + x9996;
  const amrex::Real dwdot11dsc31 = x10080 + x10118 - x11299 - x11300 + x11301 +
                                   x11302 + x11303 - x11309 + x12714 + x13701 -
                                   x14542 + x14547 + x15445 + x15601 + x15667 +
                                   x15710 + x15711;
  const amrex::Real dwdot11dsc32 = x10141 + x10168 + x11312 - x11313 + x11314 -
                                   x11316 + x11320 - x11321 + x12734 + x13704 +
                                   x13705 + x14186 - x14548 + x15456 + x15713 +
                                   x15714 + x15715;
  const amrex::Real dwdot11dsc33 = x10185 + x10203 - x11325 + x11330 - x11331 +
                                   x12751 + x13723 - x14556 + x14558 + x15464 +
                                   x15715 + x15717 + x15718;
  const amrex::Real dwdot11dsc34 = x10220 + x10237 + x11338 + x11339 - x11341 +
                                   x12766 + x13729 - x14560 + x14563 + x15471 +
                                   x15599 + x15656 + x15718 + x15721;
  const amrex::Real dwdot12dsc0 =
    -x10257 + x11347 + x11355 + x12790 + x13778 + x13792 + x14181 + x14576 +
    x15589 - x15722 + x15723 + x15724 + x15728 + x15732 + x15744 + x6191;
  const amrex::Real dwdot12dsc1 =
    x10335 + x10342 - x10343 + x11471 + x12832 + x13800 + x14006 + x14213 -
    x14214 + x15489 + x15604 - x15745 + x15746 - x15747 - x15748 + x15749 +
    x15750 - x15751 + x15754 + x15755 + x15758 + x6913;
  const amrex::Real dwdot12dsc2 = x10359 + x10377 + x10414 + x10416 - x10417 +
                                  x11514 + x12863 + x13808 + x14009 - x14223 +
                                  x14226 + x14765 + x15493 + x15608 + x15755 -
                                  x15759 - x15760 - x15761 + x15762 + x15763 -
                                  x15764 + x15765 + x15768 + x15771 + x7065;
  const amrex::Real dwdot12dsc3 =
    x10492 - x10493 + x11621 + x12897 + x13813 + x14014 + x14238 - x14239 +
    x14786 + x15496 + x15611 + x15755 + x15772 - x15773 - x15774 + x15775 +
    x15776 - x15777 - x15778 + x15781 + x15784 + x7198;
  const amrex::Real dwdot12dsc4 =
    x10523 - x10535 + x10536 + x11668 + x12962 + x13818 + x14017 - x14253 +
    x14256 + x15499 + x15615 + x15755 - x15785 - x15786 - x15787 + x15788 -
    x15789 + x15790 + x15791 + x15794 + x15797 + x7298;
  const amrex::Real dwdot12dsc5 =
    x10559 + x10568 - x10569 + x10580 + x11745 + x13002 + x13842 + x14020 +
    x14269 - x14273 + x15503 + x15618 + x15798 - x15799 - x15800 + x15801 -
    x15802 - x15803 + x15804 + x15807 + x15810 + x7515;
  const amrex::Real dwdot12dsc6 =
    x10601 - x10605 + x10606 + x10619 + x11810 + x13032 + x13857 + x14030 -
    x14281 + x14282 + x15506 + x15622 + x15811 - x15812 + x15813 - x15814 +
    x15815 - x15816 - x15817 + x15820 + x15823 + x7735;
  const amrex::Real dwdot12dsc7 =
    x10638 - x10642 + x10643 + x11856 + x13078 + x13862 + x14034 + x14293 -
    x14294 + x15509 + x15625 + x15755 + x15824 - x15825 + x15826 - x15827 -
    x15828 - x15829 + x15830 + x15833 + x15836 + x7846;
  const amrex::Real dwdot12dsc8 =
    x10673 + x10680 - x10681 + x11905 + x13129 + x13868 + x14038 + x14305 -
    x14313 + x14314 + x14316 + x15512 + x15631 + x15755 + x15837 + x15838 -
    x15839 - x15840 + x15841 - x15842 - x15843 + x15846 + x15849 + x7941;
  const amrex::Real dwdot12dsc9 =
    x10717 - x10718 + x11951 + x13163 + x13874 + x14042 + x14330 - x14331 +
    x14978 + x15516 + x15634 + x15755 + x15850 - x15851 + x15852 - x15853 -
    x15854 + x15855 - x15856 + x15859 + x15862 + x8055;
  const amrex::Real dwdot12dsc10 =
    x10737 + x10748 - x10749 + x11993 + x13197 + x13841 + x13880 + x14046 +
    x14344 - x14346 + x15522 + x15637 + x15741 + x15863 - x15864 + x15865 +
    x15866 - x15867 - x15868 - x15869 + x15872 + x15875 + x8157;
  const amrex::Real dwdot12dsc11 =
    x10777 + x10784 - x10785 + x12038 + x13226 + x13887 + x14052 + x14353 -
    x14356 + x15528 + x15643 + x15755 - x15876 + x15877 - x15878 - x15879 +
    x15880 + x15881 - x15882 + x15885 + x15888 + x8240;
  const amrex::Real dwdot12dsc12 =
    -x10824 - x10825 + x10826 + x10840 + x12113 + x13267 + x13900 + x14056 -
    x14372 + x14373 + x14376 + x15088 + x15531 + x15648 - x15889 - x15890 +
    x15892 - x15893 + x15894 - x15895 + x15896 - x15897 + x15898 - x15899 +
    x15904 + x15909 + x8445;
  const amrex::Real dwdot12dsc13 =
    x10849 + x10854 - x10862 + x10863 + x10877 + x12139 + x13288 + x13841 +
    x13904 + x14059 + x14381 - x14384 + x15534 + x15652 - x15910 + x15911 -
    x15912 + x15913 - x15914 - x15915 + x15916 + x15919 + x15922 + x8561;
  const amrex::Real dwdot12dsc14 =
    -x10887 + x10888 + x10889 + x12170 + x13305 + x13914 + x14065 - x14394 +
    x14395 + x15125 + x15541 + x15655 + x15923 + x15925 - x15926 + x15927 -
    x15928 - x15929 + x15932 + x15935 + x15939 + x8617;
  const amrex::Real dwdot12dsc15 =
    x10916 + x10925 - x10926 + x12216 + x13344 + x13918 + x14068 - x14407 +
    x14411 + x15544 + x15661 + x15755 + x15940 - x15941 + x15942 + x15943 +
    x15944 - x15945 + x15946 - x15947 - x15948 + x15951 + x15954 + x8762;
  const amrex::Real dwdot12dsc16 =
    x10952 + x10957 - x10958 + x12259 + x13376 + x13930 + x14071 - x14418 +
    x14419 + x15547 + x15664 + x15741 + x15955 - x15956 + x15957 - x15958 +
    x15959 - x15960 - x15961 + x15964 + x15967 + x8918;
  const amrex::Real dwdot12dsc17 = -x10978 + x12288 + x13386 + x13932 + x14072 +
                                   x14426 + x15205 + x15550 + x15666 + x15968 +
                                   x15969 + x15970 + x15971 - x15972 + x15973 +
                                   x15974 + x15975 + x8969;
  const amrex::Real dwdot12dsc18 =
    x10994 + x10995 - x10996 + x12316 + x13405 + x13935 + x14075 - x14436 +
    x14437 + x15552 + x15672 + x15736 + x15755 - x15976 - x15977 + x15978 -
    x15979 + x15980 - x15981 + x15984 + x15987 + x9031;
  const amrex::Real dwdot12dsc19 =
    x11017 + x11022 - x11023 + x12349 + x13434 + x13939 + x14077 + x14445 -
    x14446 + x15554 + x15675 + x15755 + x15988 - x15989 + x15990 - x15991 -
    x15992 + x15993 - x15994 + x15997 + x16001 + x9142;
  const amrex::Real dwdot12dsc20 = x11042 - x11046 + x12378 + x13448 + x13940 +
                                   x14079 + x14456 + x15556 + x15676 + x15975 +
                                   x16002 + x16003 - x16004 + x16005 + x16007 +
                                   x16008 + x9190;
  const amrex::Real dwdot12dsc21 = x11056 + x11057 - x11058 + x12396 + x13465 +
                                   x13942 + x14081 + x14461 - x14462 + x15558 +
                                   x15679 + x15939 - x16009 + x16010 - x16011 -
                                   x16012 + x16013 + x16016 + x16019 + x9238;
  const amrex::Real dwdot12dsc22 =
    x11079 + x11085 - x11086 + x12429 + x13484 + x13946 + x14083 + x14468 -
    x14471 + x15560 + x15682 + x15755 + x16020 - x16021 - x16022 + x16023 -
    x16024 + x16025 - x16026 + x16029 + x16033 + x9330;
  const amrex::Real dwdot12dsc23 =
    x11113 + x11116 - x11117 + x12466 + x13517 + x13950 + x14087 + x14477 -
    x14478 + x15564 + x15685 + x15755 + x16034 - x16035 - x16036 + x16037 -
    x16038 + x16039 - x16040 + x16043 + x16046 + x9434;
  const amrex::Real dwdot12dsc24 = x11141 - x11142 + x13543 + x13955 + x14091 +
                                   x14488 - x14489 + x15567 + x15688 + x16047 -
                                   x16048 + x16049 - x16050 - x16051 + x16052 +
                                   x16055 + x16058 + x16060 + x9530;
  const amrex::Real dwdot12dsc25 = x11166 - x11167 + x13566 + x13960 + x14094 +
                                   x14497 - x14498 + x15570 + x15692 + x16060 +
                                   x16061 - x16062 + x16063 - x16064 - x16065 +
                                   x16066 + x16069 + x16072 + x9617;
  const amrex::Real dwdot12dsc26 = -x11190 + x11191 + x13591 + x13964 + x14097 +
                                   x14506 - x14507 + x15573 + x15696 + x16060 -
                                   x16073 + x16074 - x16075 - x16076 + x16077 +
                                   x16078 + x16081 + x16084 + x9711;
  const amrex::Real dwdot12dsc27 = x11214 - x11215 + x13614 + x13968 + x14100 +
                                   x14513 - x14515 + x15576 + x15699 + x16060 -
                                   x16085 + x16086 + x16087 + x16088 - x16089 -
                                   x16090 + x16093 + x16096 + x9796;
  const amrex::Real dwdot12dsc28 = -x11237 + x11238 + x13635 + x13972 + x14103 +
                                   x14521 - x14524 + x15579 + x15702 + x15734 +
                                   x16059 - x16097 - x16098 - x16099 + x16100 +
                                   x16101 + x16102 + x16105 + x16108 + x9882;
  const amrex::Real dwdot12dsc29 = x11261 - x11262 + x13659 + x13976 + x14106 +
                                   x14530 - x14531 + x15581 + x15705 + x16060 +
                                   x16109 + x16110 + x16111 - x16112 - x16113 -
                                   x16114 + x16117 + x16120 + x9970;
  const amrex::Real dwdot12dsc30 = x10051 + x11282 - x11283 + x13680 + x13978 +
                                   x14107 + x14538 - x14539 + x15582 + x15709 +
                                   x16060 + x16121 - x16122 - x16123 - x16124 +
                                   x16125 + x16126 + x16129 + x16132;
  const amrex::Real dwdot12dsc31 = x10114 - x11297 + x12704 + x12707 + x13687 +
                                   x13778 + x13980 + x14546 + x15583 + x15710 +
                                   x15743 + x16008 - x16133 + x16134 + x16135 +
                                   x16137 + x16139;
  const amrex::Real dwdot12dsc32 = x10164 - x11311 + x12723 + x12727 + x13717 +
                                   x13982 + x14549 + x15449 + x15713 + x15744 -
                                   x16140 + x16142 + x16143 + x16145 + x16147;
  const amrex::Real dwdot12dsc33 = x10199 - x11324 + x12741 + x12747 + x13728 +
                                   x13984 + x14555 + x15584 + x15717 + x15743 +
                                   x16148 - x16149 + x16150 + x16152 + x16154;
  const amrex::Real dwdot12dsc34 =
    x10230 + x11334 - x11335 + x12757 + x13732 + x13985 + x14109 + x14561 -
    x14562 + x15585 + x15721 + x15735 + x15738 + x15740 + x15741 + x15938 +
    x15973 + x16155 + x16156 + x16157 + x16159;
  const amrex::Real dwdot13dsc0 = -x15588 + x16163 + x6103 + x2033 * x16160;
  const amrex::Real dwdot13dsc1 = -x14217 - x15602 + x15603 + x16161 + x6845 -
                                  x2071 * x16160 + x2106 * x16160;
  const amrex::Real dwdot13dsc2 = x10360 + x10376 + x15606 - x15607 + x16161 +
                                  x7031 - x2141 * x16160 + x2184 * x16160;
  const amrex::Real dwdot13dsc3 =
    x11600 + x15609 - x15610 + x16161 + x7157 - x2259 * x16160 + x2291 * x16160;
  const amrex::Real dwdot13dsc4 =
    x11689 - x15613 + x15614 + x16161 - x2334 * x16160 + x2351 * x16160;
  const amrex::Real dwdot13dsc5 = -x10574 + x10575 + x10577 - x10579 + x15616 -
                                  x15617 + x7441 - x2460 * x16160 +
                                  x2507 * x16160;
  const amrex::Real dwdot13dsc6 = -x10615 + x10616 - x10617 + x10618 - x15620 +
                                  x15621 + x7648 - x2585 * x16160 +
                                  x2614 * x16160;
  const amrex::Real dwdot13dsc7 =
    x15623 - x15624 + x16161 + x7804 - x2652 * x16160 + x2666 * x16160;
  const amrex::Real dwdot13dsc8 = x10659 + x15629 - x15630 + x16161 +
                                  2640000.0 * x7888 + x7903 - x2716 * x16160 +
                                  x2733 * x16160;
  const amrex::Real dwdot13dsc9 =
    x15632 - x15633 + x16161 + x8014 - x2761 * x16160 + x2780 * x16160;
  const amrex::Real dwdot13dsc10 =
    x15635 - x15636 + x16161 + x8118 - x2818 * x16160 + x2836 * x16160;
  const amrex::Real dwdot13dsc11 =
    x15639 - x15640 + x15642 + x16161 + x8215 - x2859 * x16160 + x2883 * x16160;
  const amrex::Real dwdot13dsc12 = x10803 - x10834 + x10836 + x10837 - x10838 +
                                   x10839 + x12095 + x15645 - x15646 + x15647 +
                                   x8387 - x2960 * x16160 + x2989 * x16160;
  const amrex::Real dwdot13dsc13 =
    x10850 + x10872 - x10873 - x10874 - x10875 + x10876 + x12135 - x14380 -
    x15649 + x15650 - x15651 + x8533 - x3022 * x16160 + x3035 * x16160;
  const amrex::Real dwdot13dsc14 =
    x15653 - x15654 + x16161 + x8606 - x3049 * x16160 + x3068 * x16160;
  const amrex::Real dwdot13dsc15 =
    x15659 - x15660 + x16161 + x8707 - x3121 * x16160 + x3138 * x16160;
  const amrex::Real dwdot13dsc16 =
    -x15662 + x15663 + x16161 + x8852 - x3208 * x16160 + x3232 * x16160;
  const amrex::Real dwdot13dsc17 = -x15665 + x16163 + x8949 + x3239 * x16160;
  const amrex::Real dwdot13dsc18 =
    x15670 - x15671 + x16161 + x9014 - x3247 * x16160 + x3253 * x16160;
  const amrex::Real dwdot13dsc19 =
    -x15673 + x15674 + x16161 + x9092 - x3292 * x16160 + x3308 * x16160;
  const amrex::Real dwdot13dsc20 = -x15676 + x16163 + x9166 + x3313 * x16160;
  const amrex::Real dwdot13dsc21 =
    x15677 - x15678 + x16161 + x9226 - x3320 * x16160 + x3324 * x16160;
  const amrex::Real dwdot13dsc22 =
    x15680 - x15681 + x16161 + x9294 - x3342 * x16160 + x3352 * x16160;
  const amrex::Real dwdot13dsc23 =
    x15683 - x15684 + x16161 + x9390 - x3385 * x16160 + x3402 * x16160;
  const amrex::Real dwdot13dsc24 =
    x15686 - x15687 + x16161 + x9529 - x3434 * x16160 + x3449 * x16160;
  const amrex::Real dwdot13dsc25 =
    x15690 - x15691 + x16161 + x9616 - x3466 * x16160 + x3473 * x16160;
  const amrex::Real dwdot13dsc26 =
    -x15694 + x15695 + x16161 + x9710 - x3504 * x16160 + x3517 * x16160;
  const amrex::Real dwdot13dsc27 =
    x15697 - x15698 + x16161 + x9795 - x3536 * x16160 + x3548 * x16160;
  const amrex::Real dwdot13dsc28 =
    x15700 - x15701 + x16161 + x9881 - x3564 * x16160 + x3580 * x16160;
  const amrex::Real dwdot13dsc29 =
    x15703 - x15704 + x16161 + x9969 - x3593 * x16160 + x3607 * x16160;
  const amrex::Real dwdot13dsc30 =
    x10050 - x15707 + x15708 + x16161 - x3621 * x16160 + x3635 * x16160;
  const amrex::Real dwdot13dsc31 = x10072 - x15710 + x16163 + x3651 * x16160;
  const amrex::Real dwdot13dsc32 = x10128 - x15712 + x16163 + x3664 * x16160;
  const amrex::Real dwdot13dsc33 = x10179 - x15716 + x16163 + x3668 * x16160;
  const amrex::Real dwdot13dsc34 =
    x10211 + x15719 - x15720 + x16162 - x3674 * x16160 + x3677 * x16160;
  const amrex::Real dwdot14dsc0 = x10260 - x15724 + x16165;
  const amrex::Real dwdot14dsc1 = x10344 + x11462 + x12815 + x13796 + x14735 -
                                  x15746 + x15747 + x15751 + x6873;
  const amrex::Real dwdot14dsc2 = x10418 + x11505 + x12844 + x14759 + x15760 -
                                  x15763 + x15764 + x6997 + x7049;
  const amrex::Real dwdot14dsc3 = x10494 + x11538 + x12874 + x14010 + x14778 +
                                  x15774 - x15776 + x15777 + x7117 + x7180;
  const amrex::Real dwdot14dsc4 = x10537 + x11679 + x12935 + x14798 + x15786 +
                                  x15787 - x15791 + x7229 + x7282;
  const amrex::Real dwdot14dsc5 = x10570 + x11735 + x12980 + x13825 + x14817 +
                                  x15800 - x15801 + x15802 + x7496;
  const amrex::Real dwdot14dsc6 = x10607 + x13011 + x14025 + x14860 - x15813 +
                                  x15814 + x15817 + x7586 + x7699;
  const amrex::Real dwdot14dsc7 = x10644 + x11844 + x13042 + x14900 - x15826 +
                                  x15827 + x15829 + x7790 + x7819;
  const amrex::Real dwdot14dsc8 = x10682 + x11895 + x13111 + x14919 - x15837 +
                                  x15839 + x15840 + x7871 + x7926;
  const amrex::Real dwdot14dsc9 = x10719 + x11930 + x11943 + x13143 + x14937 +
                                  x15513 - x15852 + x15853 + x15856 + x7978 +
                                  x8035;
  const amrex::Real dwdot14dsc10 = x10750 + x11984 + x13173 + x15519 - x15866 +
                                   x15867 + x15869 + x8100 + x8142;
  const amrex::Real dwdot14dsc11 = x10786 + x12025 + x13207 + x15030 + x15879 -
                                   x15880 + x15882 + x8184 + x8221;
  const amrex::Real dwdot14dsc12 = x10827 + x12072 + x12087 + x13238 + x15065 +
                                   x15893 + x15895 + x15897 - x15898 + x8301 +
                                   x8399;
  const amrex::Real dwdot14dsc13 = x10864 + x12129 + x13268 + x15097 - x15911 +
                                   x15912 + x15914 + x8491 + x8521;
  const amrex::Real dwdot14dsc14 = x10890 + x12162 + x13302 + x13905 + x14060 +
                                   x15112 + x15540 - x15923 - x15925 + x15926 +
                                   x15928 + x16167 + x8615;
  const amrex::Real dwdot14dsc15 = x10927 + x12207 + x13322 + x15149 - x15944 +
                                   x15947 + x15948 + x16168 + x8674 + x8742;
  const amrex::Real dwdot14dsc16 = x10959 + x12248 + x13354 + x15174 - x15957 +
                                   x15958 + x15961 + x8822 + x8885;
  const amrex::Real dwdot14dsc17 = x10979 + x12282 + x13385 + x15203 + x15739 -
                                   x15971 + x15972 + x8951 + x8964;
  const amrex::Real dwdot14dsc18 = x10997 + x12304 + x13395 + x15215 + x15220 +
                                   x15977 - x15978 + x15979 + x8998 + x9017;
  const amrex::Real dwdot14dsc19 = x11024 + x12338 + x13413 + x15238 - x15990 +
                                   x15991 + x15994 + x9059 + x9104;
  const amrex::Real dwdot14dsc20 = x11047 + x12373 + x13447 + x15257 + x15739 -
                                   x16003 + x16004 + x9172 + x9185;
  const amrex::Real dwdot14dsc21 = x11059 + x12391 + x13455 + x15269 + x16009 +
                                   x16011 - x16013 + x9206 + x9227;
  const amrex::Real dwdot14dsc22 = x11087 + x12418 + x13471 + x15290 + x16022 +
                                   x16024 - x16025 + x9262 + x9314;
  const amrex::Real dwdot14dsc23 = x11118 + x12459 + x13497 + x15307 + x16036 -
                                   x16037 + x16040 + x9359 + x9419;
  const amrex::Real dwdot14dsc24 = x11143 - x16047 + x16048 + x16164;
  const amrex::Real dwdot14dsc25 = x11168 + x16064 - x16066 + x16164;
  const amrex::Real dwdot14dsc26 = x11192 + x16075 - x16078 + x16164;
  const amrex::Real dwdot14dsc27 = x11216 + x16085 - x16088 + x16164;
  const amrex::Real dwdot14dsc28 = x11239 + x16099 - x16102 + x16164;
  const amrex::Real dwdot14dsc29 = x11263 - x16110 + x16114 + x16164;
  const amrex::Real dwdot14dsc30 = x11284 + x16123 - x16125 + x16164;
  const amrex::Real dwdot14dsc31 = x11297 - x16134 + x16169;
  const amrex::Real dwdot14dsc32 = x11311 - x16142 + x16169;
  const amrex::Real dwdot14dsc33 = x11324 - x16148 + x16169;
  const amrex::Real dwdot14dsc34 = x11336 - x16156 + x16165;
  const amrex::Real dwdot15dsc0 =
    x10325 + x12814 + x13794 + x14185 + x14589 + x15722 - x15723 - x16171 +
    x16192 - x6102 - x6136 - x6140 - x6142 - x6145 - x6148 - x6152 - x6155 -
    x6156 - x6162 + x6204 - x4018 * x5135 - x4070 * x5135 + x4070 * x5139 -
    x4127 * x5135 + x4127 * x5140 - x4175 * x5135 + x4175 * x5141 -
    x4321 * x5135 + x4321 * x5138 + x4354 * x5144 - x5135 * x3955 +
    x5142 * x1886;
  const amrex::Real dwdot15dsc1 =
    x10356 + x11466 + x12843 + x13803 + x14220 + x14749 + x15745 + x15748 -
    x15749 - x15750 + x16187 + x16188 - x16194 - x16195 + x16196 + x6782 +
    x6798 + x6824 + x6826 - x6827 - x6846 - x6854 - x6856 - x6860 + x6863 -
    x6865 + x6870 - x6871 - x6881 + x6882 + x6884 + x6886 - x6887 + x6891 -
    x6899 + 1.6e+16 * x6900 + x6903 + x6964 + x4019 * x5135 - x4020 * x5135 -
    x4075 * x5135 + x4075 * x5139 - x4128 * x5135 + x4128 * x5140 -
    x4180 * x5135 + x4180 * x5141 - x4322 * x5135 + x4322 * x5138 +
    x4355 * x5144 - x5135 * x3960 + x5135 * x3961 + x5142 * x2084 +
    x6914 * sc[24] + x6914 * sc[25] + x6914 * sc[26] + x6914 * sc[27] +
    x6914 * sc[28] + x6914 * sc[30];
  const amrex::Real dwdot15dsc2 =
    x10456 + x11497 + x12873 + x13807 + x14230 + x14770 + x15759 + x15761 -
    x15762 - x15765 - x16197 + x16207 + x7019 + x7028 - x7029 - x7032 + x7033 -
    x7037 - x7044 + x7045 - x7047 - x7050 + x7051 + x7052 - x7053 + x7061 -
    x7062 + x7079 + x4021 * x5135 - x4022 * x5135 - x4076 * x5135 +
    x4076 * x5139 - x4129 * x5135 + x4129 * x5140 - x4181 * x5135 +
    x4181 * x5141 - x5135 * x3962 + x5135 * x3963 + x5142 * x2159;
  const amrex::Real dwdot15dsc3 =
    x10516 + x11656 + x12906 + x13812 + x14248 + x14791 - x15772 + x15773 -
    x15775 + x15778 - x16208 + x16209 + x7135 + x7150 - x7151 + x7161 - x7162 -
    x7167 + x7168 - x7172 + x7173 + x7177 - x7178 - x7182 + x7183 - x7184 +
    x7185 + x7191 - x7192 + x7212 + x4023 * x5135 - x4024 * x5135 -
    x4077 * x5135 + x4077 * x5139 + x4078 * x5135 - x4078 * x5139 +
    x4130 * x5135 - x4130 * x5140 - x4131 * x5135 + x4131 * x5140 -
    x4182 * x5135 + x4182 * x5141 + x4183 * x5135 - x4183 * x5141 -
    x4235 * x5142 + x4238 * x5142 - x5135 * x3964 + x5135 * x3965;
  const amrex::Real dwdot15dsc4 =
    x10549 + x11671 + x12978 + x13817 + x14127 + x14262 + x14811 + x15785 -
    x15788 + x15789 - x15790 + x16209 - x16210 + x7245 + x7254 - x7255 - x7263 +
    x7264 + x7268 - x7269 + x7274 - x7275 - x7279 + x7280 + x7283 - x7284 +
    x7285 - x7287 - x7293 + x7294 + x7311 + x4025 * x5135 - x4026 * x5135 -
    x4079 * x5135 + x4079 * x5139 + x4080 * x5135 - x4080 * x5139 +
    x4132 * x5135 - x4132 * x5140 - x4133 * x5135 + x4133 * x5140 -
    x4184 * x5135 + x4184 * x5141 + x4185 * x5135 - x4185 * x5141 -
    x4239 * x5142 + x4240 * x5142 - x5135 * x3966 + x5135 * x3967;
  const amrex::Real dwdot15dsc5 =
    x10589 + x11741 + x13010 + x13844 + x14275 + x14831 - x15798 + x15799 +
    x15803 - x15804 - x16211 + x16215 + x7407 + x7424 - x7425 - x7464 + x7465 -
    x7472 + x7473 - x7478 + x7479 + x7486 - x7488 - x7498 + x7499 + x7500 -
    x7501 - x7507 + x7508 + x7539 + x4027 * x5135 - x4028 * x5135 -
    x4081 * x5135 + x4081 * x5139 + x4082 * x5135 - x4082 * x5139 +
    x4134 * x5135 - x4134 * x5140 - x4136 * x5135 + x4136 * x5140 -
    x4187 * x5135 + x4187 * x5141 + x4188 * x5135 - x4188 * x5141 -
    x4241 * x5142 + x4242 * x5142 - x5135 * x3968 + x5135 * x3969;
  const amrex::Real dwdot15dsc6 =
    x10625 + x11828 + x13041 + x13848 + x14287 + x14892 - x15811 + x15812 -
    x15815 + x15816 - x16216 - x16218 - x7589 + x7619 + x7622 - x7624 - x7626 +
    x7627 + x7635 + x7645 - x7646 - x7658 + x7673 - x7675 - x7677 + x7680 -
    x7682 + x7683 - x7688 + x7690 + x7693 - x7694 + x7701 + x7703 - x7704 -
    x7710 - x7718 + x7719 + x7751 + x4029 * x5135 - x4030 * x5135 -
    x4083 * x5135 + x4083 * x5139 + x4084 * x5135 - x4084 * x5139 +
    x4137 * x5135 - x4137 * x5140 - x4138 * x5135 + x4138 * x5140 -
    x4189 * x5135 + x4189 * x5141 + x4190 * x5135 - x4190 * x5141 -
    x4243 * x5142 + x4244 * x5142 + x4328 * x5135 - x4328 * x5138 -
    x4329 * x5135 + x4329 * x5138 + x4359 * x5144 - x5135 * x3970 +
    x5135 * x3971;
  const amrex::Real dwdot15dsc7 =
    x10656 + x11845 + x13051 + x13088 + x13861 + x14135 + x14912 - x15824 +
    x15825 + x15828 - x15830 + x16209 - x16219 + x7791 + x7798 - x7799 - x7808 +
    x7811 + x7816 - x7817 + x7820 - x7821 - x7825 + x7826 - x7828 + x7829 +
    x7830 - x7831 + x7841 - x7842 + x7860 + x4031 * x5135 - x4032 * x5135 -
    x4085 * x5135 + x4085 * x5139 + x4086 * x5135 - x4086 * x5139 +
    x4139 * x5135 - x4139 * x5140 - x4140 * x5135 + x4140 * x5140 -
    x4191 * x5135 + x4191 * x5141 + x4192 * x5135 - x4192 * x5141 -
    x4245 * x5142 + x4246 * x5142 - x5135 * x3972 + x5135 * x3973;
  const amrex::Real dwdot15dsc8 =
    x10694 + x11897 + x13142 + x13867 + x14139 + x14324 + x14933 - x15838 -
    x15841 + x15842 + x15843 + x16209 - x16220 + x7886 + x7897 - x7898 - x7910 +
    x7911 - x7913 + x7915 - x7918 + x7919 + x7923 - x7924 - x7927 + x7928 -
    x7929 + x7931 - x7937 + x7938 + x7955 + x4033 * x5135 - x4034 * x5135 -
    x4087 * x5135 + x4087 * x5139 + x4088 * x5135 - x4088 * x5139 +
    x4141 * x5135 - x4141 * x5140 - x4142 * x5135 + x4142 * x5140 -
    x4193 * x5135 + x4193 * x5141 + x4194 * x5135 - x4194 * x5141 -
    x4247 * x5142 + x4248 * x5142 - x5135 * x3974 + x5135 * x3975;
  const amrex::Real dwdot15dsc9 =
    x10732 + x11940 + x13172 + x13873 + x14335 + x14988 - x15850 + x15851 +
    x15854 - x15855 + x16207 - x16221 + x7997 + x8007 - x8008 - x8021 + x8022 -
    x8026 - x8029 + x8030 - x8033 + x8038 + x8039 - x8040 - x8041 + x8047 -
    x8048 + x8073 + x4035 * x5135 - x4036 * x5135 - x4089 * x5135 +
    x4089 * x5139 - x4143 * x5135 + x4143 * x5140 - x4195 * x5135 +
    x4195 * x5141 - x5135 * x3976 + x5135 * x3977 + x5142 * x2765;
  const amrex::Real dwdot15dsc10 =
    x10765 + x11989 + x13206 + x13879 + x14350 + x15024 - x15863 + x15864 -
    x15865 + x15868 + x16215 - x16222 + x8103 + x8115 - x8116 - x8125 + x8126 -
    x8128 + x8129 + x8136 - x8137 + x8139 - x8140 - x8144 + x8145 + x8146 -
    x8147 + x8153 - x8154 + x8172 + x4037 * x5135 - x4038 * x5135 -
    x4090 * x5135 + x4090 * x5139 + x4091 * x5135 - x4091 * x5139 +
    x4144 * x5135 - x4144 * x5140 - x4145 * x5135 + x4145 * x5140 -
    x4196 * x5135 + x4196 * x5141 + x4197 * x5135 - x4197 * x5141 -
    x4249 * x5142 + x4250 * x5142 - x5135 * x3978 + x5135 * x3979;
  const amrex::Real dwdot15dsc11 =
    x10801 + x12032 + x13230 + x13885 + x14364 + x15041 + x15876 - x15877 +
    x15878 - x15881 - x16223 + x16235 + x16236 + x8199 + x8209 - x8210 + x8217 -
    x8219 - x8224 + x8226 - x8227 + x8228 - x8230 + x8236 - x8237 + x8248 -
    x4039 * x5135 - x5135 * x3980 + x5135 * x3981;
  const amrex::Real dwdot15dsc12 =
    x10846 + x12088 + x13263 + x13891 + x14378 + x15090 + x15889 + x15890 +
    x15892 - x15894 - x15896 + x15899 - x16237 - x16239 - x8287 + x8288 +
    x8312 + x8319 + x8320 - x8321 - x8337 + x8343 - x8344 - x8359 + x8369 -
    x8370 + x8375 - x8377 - x8381 + x8382 - x8388 + x8390 + x8394 - x8395 -
    x8401 + x8404 + x8406 - x8408 - x8417 + x8418 + x8455 + x4040 * x5135 -
    x4041 * x5135 - x4094 * x5135 + x4094 * x5139 + x4095 * x5135 -
    x4095 * x5139 + x4148 * x5135 - x4148 * x5140 - x4149 * x5135 +
    x4149 * x5140 - x4200 * x5135 + x4200 * x5141 + x4201 * x5135 -
    x4201 * x5141 - x4252 * x5142 + x4330 * x5135 - x4330 * x5138 -
    x4331 * x5135 + x4331 * x5138 + x4360 * x5144 - x5135 * x3982 +
    x5135 * x3983 + x5142 * x2969;
  const amrex::Real dwdot15dsc13 =
    x10883 + x12133 + x13295 + x13903 + x14390 + x15110 + x15910 - x15913 +
    x15915 - x15916 + x16214 - x16240 + x8500 + x8501 - x8502 + x8513 - x8515 +
    x8518 - x8519 + x8522 - x8525 + x8527 - x8528 + x8535 - x8536 + x8537 -
    x8538 - x8544 + x8545 + x8577 + x4042 * x5135 - x4043 * x5135 -
    x4096 * x5135 + x4096 * x5139 + x4097 * x5135 - x4097 * x5139 +
    x4150 * x5135 - x4150 * x5140 - x4151 * x5135 + x4151 * x5140 -
    x4202 * x5135 + x4202 * x5141 + x4203 * x5135 - x4203 * x5141 -
    x4253 * x5142 - x5135 * x3984 + x5135 * x3985 + x5142 * x3024;
  const amrex::Real dwdot15dsc14 =
    x10911 + x12167 + x13296 + x13297 + x15113 - x15927 + x15929 + x16167 +
    x16187 + x16198 + x16200 + x16204 + x16224 + x16225 + x16226 + x16227 +
    x16228 + x16229 + x16230 + x16231 + x16232 - x16241 + x16246 + x16248 +
    x16249 + x16250 + x16251 + x8585 + x8600 - x8601 - x8607 + x8609 + x8610 -
    x8611 + x8631;
  const amrex::Real dwdot15dsc15 =
    x10941 + x12233 + x13353 + x13917 + x14157 + x14413 + x15163 + x15940 +
    x15941 - x15942 - x15943 + x15945 - x15946 + x16168 + x16249 + x16252 +
    x16254 + x16255 + x16256 + x16257 + x16258 - x16260 - x16261 - x16262 -
    x6613 + x8683 - x8703 + x8704 - x8705 - x8708 - x8709 - x8714 + x8716 -
    x8717 + x8720 - x8721 - x8722 + x8724 - x8725 - x8726 - x8732 + x8733 -
    x8734 - x8736 - x8737 + x8740 + x8744 + x8745 - x8746 - x8747 - x8748 -
    x8749 + x8755 - x8757 - x8758 + x8784 + x4046 * x5135 - x4047 * x5135 -
    x4098 * x5135 + x4098 * x5139 + x4099 * x5135 - x4099 * x5139 +
    x4152 * x5135 - x4152 * x5140 - x4153 * x5135 + x4153 * x5140 -
    x4204 * x5135 + x4204 * x5141 + x4205 * x5135 - x4205 * x5141 -
    x4254 * x5142 + x4255 * x5142 + x4332 * x5135 - x4332 * x5138 -
    x4333 * x5135 + x4333 * x5138 + x4361 * x5144 - x5135 * x3988 +
    x5135 * x3989 - x6681 * x5134;
  const amrex::Real dwdot15dsc16 =
    x10972 + x12254 + x13358 + x13384 + x13922 + x14158 + x15199 - x15955 +
    x15956 - x15959 + x15960 + x16249 - x16264 - x16265 + x8823 + x8836 -
    x8837 - x8860 - x8868 + x8869 - x8875 + x8876 - x8879 + x8882 - x8887 +
    x8889 + x8893 - x8894 - x8896 + x8897 - x8904 + x8907 + x8910 - x8911 +
    x8934 + x4048 * x5135 - x4049 * x5135 - x4100 * x5135 + x4100 * x5139 +
    x4101 * x5135 - x4101 * x5139 + x4154 * x5135 - x4154 * x5140 -
    x4155 * x5135 + x4155 * x5140 - x4206 * x5135 + x4206 * x5141 +
    x4207 * x5135 - x4207 * x5141 - x4256 * x5142 + x4334 * x5135 -
    x4334 * x5138 - x4335 * x5135 + x4335 * x5138 + x4362 * x5144 -
    x5135 * x3990 + x5135 * x3991 + x5142 * x3217;
  const amrex::Real dwdot15dsc17 = x10985 + x12284 + x13394 + x14431 + x15209 -
                                   x15970 - x16266 + x16268 + x8959 - x8960 -
                                   x8966 - x8967 + x8979;
  const amrex::Real dwdot15dsc18 =
    x11008 + x12305 + x12811 + x13409 + x13934 + x14440 + x15232 + x15976 -
    x15980 + x15981 + x16247 - x16269 + x16270 - x8987 + x9002 + x9011 - x9012 +
    x9023 - x9024 + x9025 + x9027 + x9028 - x9029 + x9045;
  const amrex::Real dwdot15dsc19 =
    x11039 + x12345 + x13441 + x13937 + x14453 + x15255 - x15988 + x15989 +
    x15992 - x15993 - x16272 - x16273 + x16274 + x9075 + x9089 - x9090 - x9093 +
    x9098 - x9099 - x9105 + x9107 + x9111 - x9113 - x9119 + x9120 - x9124 +
    x9126 - x9129 + x9130 + x9131 - x9132 + x9139 - x9140 + x9160 +
    x4050 * x5135 - x4051 * x5135 - x4102 * x5135 + x4102 * x5139 +
    x4103 * x5135 - x4103 * x5139 + x4156 * x5135 - x4156 * x5140 -
    x4157 * x5135 + x4157 * x5140 - x4208 * x5135 + x4208 * x5141 +
    x4209 * x5135 - x4209 * x5141 - x4257 * x5142 + x4336 * x5135 -
    x4336 * x5138 - x4337 * x5135 + x4337 * x5138 + x4363 * x5144 -
    x5135 * x3992 + x5135 * x3993 + x5142 * x3298;
  const amrex::Real dwdot15dsc20 = x11053 + x12374 + x13454 + x14458 + x15263 -
                                   x16005 + x16268 - x16275 + x9175 + x9182 -
                                   x9183 - x9187 - x9188 + x9199;
  const amrex::Real dwdot15dsc21 = x11071 + x12393 + x13459 + x13460 + x15265 -
                                   x16010 + x16012 + x16251 + x16276 - x16277 +
                                   x16278 + x9218 + x9223 - x9224 - x9232 +
                                   x9233 + x9234 - x9235 + x9252;
  const amrex::Real dwdot15dsc22 =
    x11102 + x12424 + x13491 + x13944 + x14474 + x15299 - x16020 + x16021 -
    x16023 + x16026 + x16233 + x16280 - x16281 + x16282 + x9271 + x9288 -
    x9289 - x9298 + x9301 + x9303 - x9304 + x9310 - x9311 + x9315 - x9316 -
    x9320 + x9321 - x9322 + x9323 - x9331 + x9333 + x9349 + x4052 * x5135 -
    x4053 * x5135 - x4104 * x5135 + x4104 * x5139 + x4105 * x5135 -
    x4105 * x5139 + x4158 * x5135 - x4158 * x5140 - x4159 * x5135 +
    x4159 * x5140 - x5135 * x3994 + x5135 * x3995;
  const amrex::Real dwdot15dsc23 =
    x11130 + x12462 + x13524 + x13949 + x14485 + x15319 - x16034 + x16035 +
    x16038 - x16039 + x16274 + x16284 - x16285 - x16287 + x9369 + x9384 -
    x9385 - x9391 - x9395 + x9396 - x9400 + x9402 + x9404 - x9405 + x9411 -
    x9412 - x9416 + x9417 + x9421 - x9422 + x9423 - x9424 - x9430 + x9431 +
    x9448 + x4054 * x5135 - x4055 * x5135 - x4106 * x5135 + x4106 * x5139 +
    x4107 * x5135 - x4107 * x5139 + x4160 * x5135 - x4160 * x5140 -
    x4161 * x5135 + x4161 * x5140 - x4210 * x5135 + x4210 * x5141 +
    x4211 * x5135 - x4211 * x5141 - x4258 * x5142 + x4338 * x5135 -
    x4338 * x5138 - x4339 * x5135 + x4339 * x5138 + x4364 * x5144 -
    x5135 * x3996 + x5135 * x3997 + x5142 * x3390;
  const amrex::Real dwdot15dsc24 =
    x11155 + x13551 + x13954 + x14167 + x15336 - x16049 + x16050 + x16051 -
    x16052 - x16289 + x16293 + x9480 - x9481 - x9486 + x9491 - x9492 + x9494 -
    x9496 + x9500 - x9501 - x9506 + x9507 + x9512 - x9513 + x9516 - x9517 -
    x9518 + x9519 - x9525 + x9526 + x9543 + x4056 * x5135 - x4057 * x5135 -
    x4108 * x5135 + x4108 * x5139 + x4109 * x5135 - x4109 * x5139 +
    x4162 * x5135 - x4162 * x5140 - x4163 * x5135 + x4163 * x5140 -
    x4212 * x5135 + x4212 * x5141 + x4213 * x5135 - x4213 * x5141 -
    x4259 * x5142 + x4340 * x5135 - x4340 * x5138 - x4341 * x5135 +
    x4341 * x5138 + x4365 * x5144 - x5135 * x3998 + x5135 * x3999 +
    x5142 * x3438;
  const amrex::Real dwdot15dsc25 =
    x11179 + x13572 + x13959 + x14169 + x15353 - x16061 + x16062 - x16063 +
    x16065 + x16173 + x16177 + x16189 + x16234 + x16282 + x16292 + x6690 +
    x9580 - x9581 - x9589 + x9590 + x9595 - x9596 + x9599 - x9600 + x9603 +
    x9604 - x9605 - x9606 - x9612 + x9613 + x9630 - x4000 * x5135 +
    x4001 * x5135 + x4058 * x5135 - x4059 * x5135 - x4110 * x5135 +
    x4110 * x5139 + x4111 * x5135 - x4111 * x5139;
  const amrex::Real dwdot15dsc26 =
    x11203 + x13597 + x13963 + x14170 + x15371 + x16073 - x16074 + x16076 -
    x16077 + x16293 - x16295 + x9663 - x9664 - x9669 + x9673 - x9676 + x9679 -
    x9680 - x9682 + x9685 + x9688 - x9689 + x9692 - x9693 + x9697 - x9698 +
    x9699 - x9700 + x9706 - x9707 + x9724 - x4002 * x5135 + x4003 * x5135 +
    x4060 * x5135 - x4061 * x5135 - x4112 * x5135 + x4112 * x5139 +
    x4113 * x5135 - x4113 * x5139 + x4164 * x5135 - x4164 * x5140 -
    x4165 * x5135 + x4165 * x5140 - x4214 * x5135 + x4214 * x5141 +
    x4215 * x5135 - x4215 * x5141 - x4260 * x5142 + x4342 * x5135 -
    x4342 * x5138 - x4343 * x5135 + x4343 * x5138 + x4366 * x5144 +
    x5142 * x3508;
  const amrex::Real dwdot15dsc27 =
    x11227 + x13620 + x13967 + x14171 + x15388 - x16086 - x16087 + x16089 +
    x16090 + x16196 + x16250 + x16296 + x9757 - x9758 - x9763 + x9764 - x9768 -
    x9770 - x9775 + x9776 - x9780 - x9782 + x9783 + x9784 - x9785 + x9791 -
    x9792 + x9809 - x4004 * x5135 + x4005 * x5135 + x4062 * x5135 -
    x4063 * x5135 - x4114 * x5135 + x4114 * x5139 - x4166 * x5135 +
    x4166 * x5140 - x4216 * x5135 + x4216 * x5141 - x4344 * x5135 +
    x4344 * x5138 + x5142 * x3539;
  const amrex::Real dwdot15dsc28 =
    x10314 + x11251 + x13641 + x13971 + x14172 + x15404 + x16097 + x16098 -
    x16100 - x16101 + x16183 - x16298 + x16299 + x9144 + x9841 - x9842 - x9848 -
    x9850 - x9853 + x9854 - x9858 - x9861 - x9865 - x9868 + x9869 + x9870 -
    x9871 + x9877 - x9878 + x9895 - x4006 * x5135 + x4007 * x5135 -
    x4064 * x5135 - x4115 * x5135 + x4115 * x5139 - x4167 * x5135 +
    x4167 * x5140 - x4217 * x5135 + x4217 * x5141 - x4345 * x5135 +
    x4345 * x5138 + x4367 * x5144 + x5142 * x3568;
  const amrex::Real dwdot15dsc29 =
    x11274 + x13666 + x13975 + x14173 + x15421 - x16109 - x16111 + x16112 +
    x16113 + x16291 + x16299 - x16301 + x16302 + x9931 - x9932 - x9935 - x9938 -
    x9942 - x9944 + x9947 - x9951 - x9954 + x9956 + x9957 - x9958 - x9959 -
    x9965 + x9966 + x9983 - x4008 * x5135 + x4009 * x5135 - x4065 * x5135 -
    x4116 * x5135 + x4116 * x5139 - x4168 * x5135 + x4168 * x5140 -
    x4218 * x5135 + x4218 * x5141 - x4346 * x5135 + x4346 * x5138 +
    x4368 * x5144 + x5142 * x3598;
  const amrex::Real dwdot15dsc30 =
    x10012 - x10013 - x10018 - x10021 - x10024 - x10028 - x10032 - x10035 +
    x10037 - x10038 - x10039 + x10040 + x10046 - x10047 + x10064 + x11296 +
    x13686 + x13977 + x14174 + x15436 - x16121 + x16122 + x16124 - x16126 +
    x16180 + x16296 - x16304 - x4010 * x5135 - x4066 * x5135 - x4117 * x5135 +
    x4117 * x5139 - x4169 * x5135 + x4169 * x5140 - x4219 * x5135 +
    x4219 * x5141 - x4347 * x5135 + x4347 * x5138 + x4369 * x5144 +
    x5142 * x3625;
  const amrex::Real dwdot15dsc31 =
    -x10071 - x10088 - x10092 - x10094 - x10097 - x10101 - x10104 - x10106 -
    x10107 - x10111 + x10121 + x11310 + x13703 + x13979 + x14175 + x15446 +
    x16133 - x16135 + x16192 - x16306 - x4011 * x5135 - x4067 * x5135 -
    x4118 * x5135 + x4118 * x5139 - x4170 * x5135 + x4170 * x5140 -
    x4220 * x5135 + x4220 * x5141 - x4348 * x5135 + x4348 * x5138 +
    x4370 * x5144 + x5142 * x3641;
  const amrex::Real dwdot15dsc32 =
    -x10126 - x10146 - x10149 - x10151 - x10153 - x10156 - x10157 - x10161 +
    x10172 + x11323 + x13721 + x13981 + x14554 + x15457 + x16140 - x16143 +
    x16181 + x16189 + x16206 + x16290 - x16307 * sc[15] - x4012 * x5135 -
    x4119 * x5135 + x4119 * x5139 - x4171 * x5135 + x4171 * x5140 -
    x4221 * x5135 + x4221 * x5141 + x5142 * x3655;
  const amrex::Real dwdot15dsc33 = -x10177 - x10181 - x10193 - x10194 + x10206 +
                                   x11333 + 5.4e+15 * x12739 + x12813 + x13722 +
                                   x13983 + x14559 + x15465 + x16149 - x16150 +
                                   x16184 + x16270;
  const amrex::Real dwdot15dsc34 = -x10210 - x10224 + x10225 + x10226 - x10227 +
                                   x10242 + x11342 + x14564 + x15465 + x15737 -
                                   x16157 + x16278 + x16291 + x6262;
  const amrex::Real dwdot16dsc0 = x10264 + x11352 + x12778 + x14185 + x14575 -
                                  x14577 + x14582 + x16314 + x6106 + x6161;
  const amrex::Real dwdot16dsc1 = x10347 + x11470 + x12826 + x14123 - x14732 +
                                  x14733 - x14736 + x14737 + x14742 + x16312 +
                                  x6753 + x6773 - x6809 + x6898;
  const amrex::Real dwdot16dsc2 = x10423 + x11513 + x12854 + x14124 - x14750 -
                                  x14753 + x14754 + x14757 + x14764 + x16312 -
                                  x6993 + x7016 + x7058;
  const amrex::Real dwdot16dsc3 = x10498 + x11620 + x12887 + x14125 - x14775 +
                                  x14776 + x14779 - x14780 + x14785 + x16312 -
                                  x7116 + x7120 + x7189;
  const amrex::Real dwdot16dsc4 = x10540 + x11692 + x12941 + x14127 - x14794 +
                                  x14795 + x14799 - x14800 + x14806 + x16312 -
                                  x7226 + x7227 + x7291;
  const amrex::Real dwdot16dsc5 = x10573 + x11744 + x12993 + x14129 - x14815 +
                                  x14816 + x14818 - x14819 + x14826 + x16315 -
                                  x7381 + x7408 + x7506;
  const amrex::Real dwdot16dsc6 =
    x10610 + x11809 + x13023 + x14130 + x14858 - x14861 - x14874 + x14875 +
    x14887 + x15169 + x15176 - x15178 - x15181 - x7579 + x7582 - x7583 - x7584 -
    x7585 + x7609 + x7612 + x7637 + x7716 + x14859 * x16309 - x14859 * x16311;
  const amrex::Real dwdot16dsc7 = x10647 + x11852 + x13064 + x14134 + x14896 +
                                  x14897 - x14899 - x14902 + x14907 + x16312 +
                                  x7770 - x7771 + x7836;
  const amrex::Real dwdot16dsc8 = x10685 + x11904 + x13117 + x14139 + x14302 -
                                  x14915 + x14916 - x14920 + x14924 + x14928 +
                                  x16312 - x7868 + x7883 + x7935;
  const amrex::Real dwdot16dsc9 =
    x10722 + x11950 + x13154 + x14142 - x14944 + x14948 - x14951 + x14953 +
    x14957 + x14970 + x16312 - x7976 + x7980 + x8045 + x14640 * x14954;
  const amrex::Real dwdot16dsc10 = x10753 + x11992 + x13188 + x14143 - x15002 +
                                   x15003 - x15008 + x15009 + x15017 + x16315 +
                                   x8084 - x8088 + x8151;
  const amrex::Real dwdot16dsc11 = x10789 + x12035 + x13216 + x14148 - x15029 +
                                   x15031 + x15033 - x15034 + x15039 + x16312 +
                                   x8181 - x8182 + x8234;
  const amrex::Real dwdot16dsc12 =
    x10830 + x12098 + x13249 + x14149 - 2.21667452830189e+66 * x14621 +
    2.21667452830189e+66 * x14636 + x15053 + x15057 - x15058 - x15064 + x15083 -
    x8280 + x8281 - x8284 + x8307 - x8328 + x8334 + x8336 - x8338 + x8415 +
    x14628 * x16316 + x15051 * x16309 - x15051 * x16311 -
    x14614 * x14607 * x16316;
  const amrex::Real dwdot16dsc13 = x10867 + x12138 + x13279 + x14150 - x15094 +
                                   x15096 - x15098 + x15100 + x15105 + x16315 -
                                   x8469 + x8470 + x8542;
  const amrex::Real dwdot16dsc14 = -x15121 + x15124 + x16318;
  const amrex::Real dwdot16dsc15 = x10930 + x12215 + x13335 + x14156 - x15147 +
                                   x15148 - x15151 + x15153 + x15157 + x16312 +
                                   x8671 - x8672 + x8753;
  const amrex::Real dwdot16dsc16 =
    x10963 + x12258 + x13370 + x14423 + x15050 - x15052 + x15061 - x15071 -
    x15166 + x15168 - x15171 - x15172 + x15173 + x15194 - x16308 - x6451 +
    x8786 - x8787 - x8788 - x8789 + x8816 + x8820 - x8832 + x8835 + x8916 +
    x15170 * x16309 - x15170 * x16311;
  const amrex::Real dwdot16dsc17 = -x15201 + x16319;
  const amrex::Real dwdot16dsc18 = x10999 + x12311 + x13401 + x14162 + x15219 -
                                   x15221 + x15223 + x15225 + x16313 + x8989 +
                                   x9019;
  const amrex::Real dwdot16dsc19 = x11027 + x12348 + x13428 + x14163 - x15235 +
                                   x15236 - x15240 + x15241 + x15248 + x16312 -
                                   x9055 + x9056 + x9136;
  const amrex::Real dwdot16dsc20 = -x15259 + x16319;
  const amrex::Real dwdot16dsc21 = -x15268 + x15270 + x16318;
  const amrex::Real dwdot16dsc22 = x11090 + x12428 + x13478 + x14165 - x15281 +
                                   x15282 - x15285 + x15288 + x15294 + x16312 +
                                   x9259 - x9279 + x9327;
  const amrex::Real dwdot16dsc23 = x11121 + x12465 + x13508 + x14166 - x15303 +
                                   x15304 + x15306 - x15308 + x15314 + x16312 +
                                   x9356 - x9357 + x9428;
  const amrex::Real dwdot16dsc24 = x11146 + x12496 + x13534 + x14167 - x15321 +
                                   x15322 + x15323 - x15324 + x15332 + x16312 +
                                   x9454 - x9456 + x9523;
  const amrex::Real dwdot16dsc25 = x11171 + x12530 + x13557 + x14169 + x15340 -
                                   x15341 - x15342 + x15344 + x15349 + x16312 -
                                   x9552 + x9575 + x9610;
  const amrex::Real dwdot16dsc26 = x11195 + x12564 + x13582 + x14170 + x15358 -
                                   x15360 + x15361 - x15362 + x15367 + x16312 +
                                   x9653 - x9657 + x9704;
  const amrex::Real dwdot16dsc27 = x11219 + x12595 + x13605 + x14171 + x15376 +
                                   x15377 - x15378 - x15379 + x15384 + x16312 +
                                   x9731 - x9735 + x9789;
  const amrex::Real dwdot16dsc28 = x11242 + x12623 + x13629 + x14172 - x15393 -
                                   x15394 + x15396 + x15397 + x15400 + x16312 -
                                   x9816 + x9835 + x9875;
  const amrex::Real dwdot16dsc29 = x11266 + x12656 + x13653 + x14173 + x15409 +
                                   x15410 - x15411 - x15414 + x15417 + x16312 -
                                   x9903 + x9907 + x9963;
  const amrex::Real dwdot16dsc30 = x10044 + x11287 + x12684 + x13675 + x14174 +
                                   x15425 - x15426 + x15427 - x15429 + x15432 +
                                   x16312 - x9990 + x9992;
  const amrex::Real dwdot16dsc31 = x10075 + x10110 + x11305 + x12706 + x13695 +
                                   x14175 - x15438 + x15441 + x15443 + x16314;
  const amrex::Real dwdot16dsc32 = x10133 + x10160 + x11318 + x12726 + x13711 +
                                   x14554 + x15450 - x15451 + x15454 + x16314;
  const amrex::Real dwdot16dsc33 = x10183 + x10197 + x11328 + x12746 + x13726 +
                                   x14177 + x15459 - x15460 + x15462 + x16314;
  const amrex::Real dwdot16dsc34 = -x15468 + x15469 + x16318;
  const amrex::Real dwdot17dsc0 = x16321 + x6101;
  const amrex::Real dwdot17dsc1 = x10326 + x11450 + x6821;
  const amrex::Real dwdot17dsc2 = x10408 + x11493 + x7027;
  const amrex::Real dwdot17dsc3 = x10457 + x11554 + x11589 + x7149;
  const amrex::Real dwdot17dsc4 = x10518 + x11686 + x7259;
  const amrex::Real dwdot17dsc5 = x10551 + x11722 + x7429;
  const amrex::Real dwdot17dsc6 = x10590 + x11765 + x7644;
  const amrex::Real dwdot17dsc7 = x10628 + x11837 + x7803;
  const amrex::Real dwdot17dsc8 = x10679 + x11878 + x14299 + x7902;
  const amrex::Real dwdot17dsc9 = x10696 + x11928 + x14977 + x8013;
  const amrex::Real dwdot17dsc10 = x10733 + x11974 + x8114;
  const amrex::Real dwdot17dsc11 = x10767 + x12018 + x12036 + x8214;
  const amrex::Real dwdot17dsc12 = x10802 + x12071 + x12073 + x15087 + x8342;
  const amrex::Real dwdot17dsc13 = x10848 + x12120 + x8506;
  const amrex::Real dwdot17dsc14 = x10885 + x12160 + x8605;
  const amrex::Real dwdot17dsc15 = x10912 + x12200 + x8702;
  const amrex::Real dwdot17dsc16 = x10943 + x12240 + x8841;
  const amrex::Real dwdot17dsc17 = x10977 + x12287 + x14425 - x15204 + x8963;
  const amrex::Real dwdot17dsc18 = x10988 + x12298 + x9010;
  const amrex::Real dwdot17dsc19 = x11009 + x12329 + x9088;
  const amrex::Real dwdot17dsc20 = x11040 + x12369 + x9180;
  const amrex::Real dwdot17dsc21 = x11054 + x12386 + x9222;
  const amrex::Real dwdot17dsc22 = x11073 + x12409 + x9293;
  const amrex::Real dwdot17dsc23 = x11104 + x12450 + x9389;
  const amrex::Real dwdot17dsc24 = x16320 + x9485;
  const amrex::Real dwdot17dsc25 = x16320 + x9579;
  const amrex::Real dwdot17dsc26 = x16320 + x9668;
  const amrex::Real dwdot17dsc27 = x16320 + x9762;
  const amrex::Real dwdot17dsc28 = x16320 + x9846;
  const amrex::Real dwdot17dsc29 = x16320 + x9930;
  const amrex::Real dwdot17dsc30 = x10017 + x16320;
  const amrex::Real dwdot17dsc31 = x10070 + x16321;
  const amrex::Real dwdot17dsc32 = x10127 + x16321;
  const amrex::Real dwdot17dsc33 = x10178 + 3.6e+15 * x12739 + x16321;
  const amrex::Real dwdot17dsc34 = x10223 + x16320;
  const amrex::Real dwdot18dsc0 = -x15731 + x16324 + x6157;
  const amrex::Real dwdot18dsc1 =
    x11452 + x11480 + x15756 - x15757 + x16325 + x6823 + x6832 + x6893 + x6918;
  const amrex::Real dwdot18dsc2 =
    x10367 + x10439 + x11524 + x15769 - x15770 + x16325 + x7055;
  const amrex::Real dwdot18dsc3 =
    x11549 + x11592 + x11615 + x12884 + x15782 - x15783 + x16325 + x7186;
  const amrex::Real dwdot18dsc4 =
    x11699 + x12936 + x12953 + x15795 - x15796 + x16325 + x7288;
  const amrex::Real dwdot18dsc5 =
    x11749 + x13820 - x15808 + x15809 + x16326 + x7502;
  const amrex::Real dwdot18dsc6 =
    x11822 + x14022 + x14884 - x15821 + x15822 + x7713;
  const amrex::Real dwdot18dsc7 =
    x11869 + x14132 + x15834 - x15835 + x16325 + x7833;
  const amrex::Real dwdot18dsc8 =
    x13114 + x14300 - x15847 + x15848 + x16325 + x7932;
  const amrex::Real dwdot18dsc9 =
    x11961 + x14936 + x14965 + x14973 + x15860 - x15861 + x16325 + x8042;
  const amrex::Real dwdot18dsc10 =
    x11999 + x15518 - x15873 + x15874 + x16326 + x8148;
  const amrex::Real dwdot18dsc11 =
    x12052 + x13213 + x15886 - x15887 + x16325 + x8231;
  const amrex::Real dwdot18dsc12 =
    x12106 + x15080 + x15905 - x15906 + x15908 + x8412;
  const amrex::Real dwdot18dsc13 = x12147 + x14855 - x15920 + x15921 + x8539;
  const amrex::Real dwdot18dsc14 =
    x12174 + x15111 - x15933 + x15934 + x16325 + x8612;
  const amrex::Real dwdot18dsc15 = x12225 - x15952 + x15953 + x16325 + x8750;
  const amrex::Real dwdot18dsc16 = x12266 + x15190 - x15965 + x15966 + x8908;
  const amrex::Real dwdot18dsc17 = x12291 - x15969 + x16327 + x8968;
  const amrex::Real dwdot18dsc18 = x10366 + x10990 + x12315 + x13402 + x13933 +
                                   x14074 + x14161 + x14432 - x15215 + x15227 +
                                   x15551 - x15985 + x15986 + x16325 + x9030;
  const amrex::Real dwdot18dsc19 = x11032 + x12331 + x13425 + x13442 + x15249 +
                                   x15998 + x15999 - x16000 + x16325 + x9133 +
                                   x9145;
  const amrex::Real dwdot18dsc20 =
    x12370 + x12375 + x12381 - x16002 + x16327 + x9181 + x9189;
  const amrex::Real dwdot18dsc21 =
    x12401 - x16014 + x16015 + x16325 + x4890 + x9228 + x9236;
  const amrex::Real dwdot18dsc22 =
    x12436 + x14675 - x16027 + x16028 + x16325 + x9324;
  const amrex::Real dwdot18dsc23 =
    x12476 - x16044 + x16045 + x16284 + x16325 + x9425;
  const amrex::Real dwdot18dsc24 = -x16056 + x16057 + x16328 + x9520;
  const amrex::Real dwdot18dsc25 = -x16070 + x16071 + x16328 + x9607;
  const amrex::Real dwdot18dsc26 = -x16082 + x16083 + x16328 + x9701;
  const amrex::Real dwdot18dsc27 = -x16094 + x16095 + x16328 + x9786;
  const amrex::Real dwdot18dsc28 = -x16106 + x16107 + x16328 + x9872;
  const amrex::Real dwdot18dsc29 = -x16118 + x16119 + x16328 + x9960;
  const amrex::Real dwdot18dsc30 = x10041 - x16130 + x16131 + x16328;
  const amrex::Real dwdot18dsc31 = x10108 - x16138 + x16324;
  const amrex::Real dwdot18dsc32 = x10158 - x16146 + x16324;
  const amrex::Real dwdot18dsc33 = x10195 - x16153 + x16324;
  const amrex::Real dwdot18dsc34 = x10228 - x16158 + x16323;
  const amrex::Real dwdot19dsc0 = x11345 + x12786 + x14574 + x15732 + x16329 +
                                  x16340 + x6111 - x6137 - x6139 - x6143 -
                                  x6146 - x6149 - x6151 + x6189;
  const amrex::Real dwdot19dsc1 =
    x10328 + x12835 + x13801 + x14005 + x14727 + x14739 + x15490 + x15758 +
    x16336 + x16342 + x16343 - x6849 - x6853 + x6857 - x6858 - x6861 + x6862 -
    x6866 - x6868 + x6869 + x6892 + x6919 + x16279 * sc[24] + x16279 * sc[25] +
    x16279 * sc[26] + x16279 * sc[27] + x16279 * sc[28] + x16279 * sc[30];
  const amrex::Real dwdot19dsc2 =
    x10441 + x12860 + x13806 + x14008 + x14758 + x15492 + x15771 + x16344 +
    x16349 - x6984 - x7034 + x7035 + x7039 - x7040 - x7042 + x7043 + x7064;
  const amrex::Real dwdot19dsc3 = x10465 + x11550 + x12893 + x13811 + x14012 +
                                  x14777 + x15495 + x15784 + x16350 + x16352 -
                                  x7158 + x7159 + x7164 - x7165 - x7169 +
                                  x7170 - x7175 + x7176 + x7194;
  const amrex::Real dwdot19dsc4 = x12957 + x13816 + x14016 + x14251 + x14801 +
                                  x15498 + x15797 + x16352 + x16353 - x7260 +
                                  x7261 - x7265 + x7266 + x7271 - x7272 -
                                  x7277 + x7278 + x7296;
  const amrex::Real dwdot19dsc5 =
    x12999 + x13827 + x14019 + x14820 + x15502 + x15810 + x16354 + x16356 -
    x7442 + x7443 - x7466 + x7467 + x7469 - x7470 - x7485 + x7487 + x7514;
  const amrex::Real dwdot19dsc6 =
    x11771 + x13029 + x13847 + x14027 - x14862 + x14864 - x14865 + x14866 -
    x14867 + x14868 + x14870 + x15505 + x15823 + x16357 + x7657 - x7666 -
    x7674 + x7678 - x7679 - x7684 + x7685 + x7687 - x7689 - x7692 + x7695 +
    x7702 + x7706 - x7707 - x7709 - x7711 + x7712 + x7721;
  const amrex::Real dwdot19dsc7 =
    x13075 + x13860 + x14033 + x14901 + x15508 + x15836 + x16352 + x16358 -
    x7805 + x7806 - x7809 + x7810 - x7813 + x7814 - x7822 + x7823 + x7844;
  const amrex::Real dwdot19dsc8 = x13125 + x13866 + x14037 + x14304 + x14923 +
                                  x15511 + x15849 + x16352 + x16359 + x7904 -
                                  x7905 - x7907 + x7908 - x7914 + x7916 -
                                  x7921 + x7922 + x7940;
  const amrex::Real dwdot19dsc9 = x13160 + x13872 + x14041 + x14692 + x14950 +
                                  x14974 + x15515 + x15862 + x16349 + x16360 -
                                  x7974 + x8018 - x8019 + x8023 - x8024 -
                                  x8028 + x8031 + x8054;
  const amrex::Real dwdot19dsc10 = x13194 + x13878 + x14045 + x14992 + x15005 +
                                   x15521 + x15875 + x16356 + x16361 - x8119 +
                                   x8120 - x8122 + x8123 + x8130 - x8132 -
                                   x8134 + x8135 + x8156;
  const amrex::Real dwdot19dsc11 = x13219 + x13884 + x14050 + x15035 + x15527 +
                                   x15888 + x16363 - x8180 + x8216 - x8218 -
                                   x8222 + x8223 + x8239;
  const amrex::Real dwdot19dsc12 =
    x13255 + x13890 + x14054 - x15055 + x15056 + x15062 + x15063 - x15067 -
    x15068 + x15070 + x15530 + x15909 - x8354 + x8365 - x8371 + x8372 - x8374 +
    x8380 - x8383 - x8389 + x8391 + x8393 - x8396 + x8402 + x8403 - x8405 -
    x8407 - x8410 + x8411 + x8420;
  const amrex::Real dwdot19dsc13 =
    x13285 + x13902 + x14058 + x15102 + x15533 + x15922 + x16355 - x8507 +
    x8508 + x8510 - x8511 - x8514 + x8516 - x8523 + x8524 + x8547;
  const amrex::Real dwdot19dsc14 =
    x15122 + x15935 + x16362 + x16364 + x16366 + x16369;
  const amrex::Real dwdot19dsc15 = x13341 + x13916 + x14067 + x15152 + x15543 +
                                   x15954 + x16333 + x16366 - x8710 + x8711 +
                                   x8713 - x8715 - x8719 + x8727 - x8728 +
                                   x8730 - x8731 - x8738 + x8739 + x8761;
  const amrex::Real dwdot19dsc16 =
    x13373 + x13921 + x14070 + x15175 + x15546 + x15967 + x16365 - x8853 +
    x8856 + x8870 - x8871 - x8873 + x8880 - x8881 + x8886 - x8888 - x8891 +
    x8892 + x8898 + x8899 - x8900 - x8901 + x8903 - x8905 + x8917;
  const amrex::Real dwdot19dsc17 = x15202 + x15969 + x16373;
  const amrex::Real dwdot19dsc18 = x10991 + x12299 + x13396 + x14438 + x15216 +
                                   x15222 + x15987 + x16368 + x16371 - x8986 +
                                   x8988 + x9026;
  const amrex::Real dwdot19dsc19 =
    x11033 + x12332 + x13446 + x13938 + x14078 + x14449 - x14708 + x15239 +
    x15250 + x15555 + x16001 + x16343 + x16375 - x6314 + x9094 - x9095 - x9096 -
    x9100 + x9101 - x9102 + x9106 - x9108 - x9109 - x9112 - x9114 + x9116 -
    x9117 - x9118 - x9122 + x9123 - x9125 + x9146;
  const amrex::Real dwdot19dsc20 = x11041 + x15258 + x16002 + x16373;
  const amrex::Real dwdot19dsc21 = x15271 + x16016 + x16372;
  const amrex::Real dwdot19dsc22 = x13481 + x13943 + x14082 + x15276 + x15287 +
                                   x15559 + x16029 + x16352 + x16376 - x9295 +
                                   x9296 - x9299 + x9300 + x9306 - x9307 +
                                   x9309 - x9312 + x9329;
  const amrex::Real dwdot19dsc23 = x13514 + x13948 + x14086 + x15309 + x15563 +
                                   x16046 + x16284 + x16343 - x9392 + x9393 -
                                   x9397 + x9398 - x9401 + x9406 - x9407 -
                                   x9409 + x9410 + x9414 - x9415 + x9433;
  const amrex::Real dwdot19dsc24 = x13540 + x13953 + x14090 + x15566 + x16058 +
                                   x16377 + x9487 - x9488 - x9490 + x9495 -
                                   x9497 + x9499 - x9502 - x9504 + x9505 -
                                   x9510 + x9511 + x9528;
  const amrex::Real dwdot19dsc25 =
    x13563 + x13958 + x14093 + x15569 + x16072 + x16351 + x16377 - x9583 +
    x9584 - x9586 + x9587 + x9591 - x9593 + x9598 - x9601 + x9615;
  const amrex::Real dwdot19dsc26 = x13588 + x13962 + x14096 + x15572 + x16084 +
                                   x16377 + x9670 - x9671 - x9674 + x9675 -
                                   x9678 - x9683 + x9684 - x9687 + x9690 +
                                   x9694 - x9695 + x9709;
  const amrex::Real dwdot19dsc27 =
    x13611 + x13966 + x14099 + x15575 + x16096 + x16347 + x16377 - x9730 -
    x9765 + x9766 + x9771 - x9772 - x9774 + x9777 - x9779 + x9794;
  const amrex::Real dwdot19dsc28 =
    x13632 + x13970 + x14102 + x15578 + x16108 + x16337 + x16377 - x9847 -
    x9851 - x9855 + x9856 - x9859 - x9862 + x9863 - x9866 + x9880;
  const amrex::Real dwdot19dsc29 =
    x13656 + x13974 + x14105 + x15580 + x16120 + x16330 + x16338 + x16378 -
    x9934 - x9939 - x9941 - x9945 + x9946 - x9949 + x9950 - x9953 + x9968;
  const amrex::Real dwdot19dsc30 =
    x10000 - x10019 - x10022 - x10025 + x10026 - x10029 - x10031 - x10034 +
    x10049 + x12680 + x13677 + x15424 + x16132 + x16280 + x16331 + x16339;
  const amrex::Real dwdot19dsc31 = x10078 - x10089 - x10091 - x10095 - x10098 -
                                   x10100 - x10103 + x10113 + x12703 + x13699 +
                                   x15440 + x16139 + x16340 + x16379;
  const amrex::Real dwdot19dsc32 =
    -x10129 - x10130 + x10140 - x10147 - x10154 + x10163 + x12722 + x13715 +
    x13787 + x15448 + x16147 + x16332 + x16335 + x16348 + x16380 + x6364;
  const amrex::Real dwdot19dsc33 = -x10180 + x16154 + x16381;
  const amrex::Real dwdot19dsc34 = x16159 + x16367 + x16381;
  const amrex::Real dwdot20dsc0 = x16383 + x6102;
  const amrex::Real dwdot20dsc1 = x10327 - x10328 + x11451 - x11452 + x6828;
  const amrex::Real dwdot20dsc2 = x10413 + x10436 + x11494 + x7030;
  const amrex::Real dwdot20dsc3 = x10491 + x11596 + x11614 + x7152;
  const amrex::Real dwdot20dsc4 = x10517 + x11667 + x7256;
  const amrex::Real dwdot20dsc5 = x10550 + x11721 + x7426;
  const amrex::Real dwdot20dsc6 = x10591 + x11802 + x7647;
  const amrex::Real dwdot20dsc7 = x10626 + x11836 + x7800;
  const amrex::Real dwdot20dsc8 = x10657 + x11901 + x7899;
  const amrex::Real dwdot20dsc9 = x10695 + x11927 + x8009;
  const amrex::Real dwdot20dsc10 = x10734 + x11975 + x8117;
  const amrex::Real dwdot20dsc11 = x10766 + x12017 + x8211;
  const amrex::Real dwdot20dsc12 = x10823 + x12093 + x8345;
  const amrex::Real dwdot20dsc13 = x10847 + x12119 + x8503;
  const amrex::Real dwdot20dsc14 = x10884 + x12159 + x8602;
  const amrex::Real dwdot20dsc15 = x10913 + x12201 + x8706;
  const amrex::Real dwdot20dsc16 = x10942 + x12239 + x8838;
  const amrex::Real dwdot20dsc17 = x10973 + x12279 + x8961;
  const amrex::Real dwdot20dsc18 = x10989 + x12309 + x12312 + x9013;
  const amrex::Real dwdot20dsc19 = x11010 + x11031 + x12330 + x9091;
  const amrex::Real dwdot20dsc20 =
    -x11041 + x11045 - x12370 + x12377 - 18000000.0 * x1484 + x9184;
  const amrex::Real dwdot20dsc21 = x11055 + x12387 + x9225;
  const amrex::Real dwdot20dsc22 = x11072 + x12408 + x9290;
  const amrex::Real dwdot20dsc23 = x11103 + x12449 + x9386;
  const amrex::Real dwdot20dsc24 = x16382 + x9482;
  const amrex::Real dwdot20dsc25 = x16382 + x9582;
  const amrex::Real dwdot20dsc26 = x16382 + x9665;
  const amrex::Real dwdot20dsc27 = x16382 + x9759;
  const amrex::Real dwdot20dsc28 = x16382 + x9843;
  const amrex::Real dwdot20dsc29 = x16382 + x9933;
  const amrex::Real dwdot20dsc30 = x10014 + x16382;
  const amrex::Real dwdot20dsc31 = x10071 + x16383;
  const amrex::Real dwdot20dsc32 = x10126 + x16383;
  const amrex::Real dwdot20dsc33 = x10177 + x16383;
  const amrex::Real dwdot20dsc34 = x10210 + x16383;
  const amrex::Real dwdot21dsc0 = -x15727 + x16385;
  const amrex::Real dwdot21dsc1 = -x15752 + x15753 + x16195 + x6833 + x6902;
  const amrex::Real dwdot21dsc2 = x11510 - x15766 + x15767 + x16197 + x6510;
  const amrex::Real dwdot21dsc3 =
    x11545 + x11601 + x11611 - x15779 + x15780 + x16208 + x6510;
  const amrex::Real dwdot21dsc4 =
    x12931 + x12947 - x15792 + x15793 + x16210 + x6510;
  const amrex::Real dwdot21dsc5 = x13819 - x15805 + x15806 + x16211 + x7440;
  const amrex::Real dwdot21dsc6 = x14021 - x15818 + x15819 + x16216 + x7656;
  const amrex::Real dwdot21dsc7 = x14131 - x15831 + x15832 + x16219 + x6510;
  const amrex::Real dwdot21dsc8 = x13090 - x15844 + x15845 + x16220 + x6510;
  const amrex::Real dwdot21dsc9 = x14939 - x15857 + x15858 + x16221 + x8017;
  const amrex::Real dwdot21dsc10 = x15517 - x15870 + x15871 + x16222 + x7440;
  const amrex::Real dwdot21dsc11 = x12051 - x15883 + x15884 + x16223 + x6510;
  const amrex::Real dwdot21dsc12 = -x15900 + x15901 + x15903 + x16237 + x8353;
  const amrex::Real dwdot21dsc13 = x15917 - x15918 + x16240 + x7440;
  const amrex::Real dwdot21dsc14 = -x15930 + x15931 + x16241 + x6510;
  const amrex::Real dwdot21dsc15 = -x15949 + x15950 + x16261 + x16262 + x6510;
  const amrex::Real dwdot21dsc16 = -x15962 + x15963 + x16265 + x8851;
  const amrex::Real dwdot21dsc17 = -x15968 + x16266 + x16386;
  const amrex::Real dwdot21dsc18 = x12313 + x15982 - x15983 + x16269 + x9016;
  const amrex::Real dwdot21dsc19 = -x15995 + x15996 + x16273 + x6510;
  const amrex::Real dwdot21dsc20 = -x16006 + x16275 + x16386;
  const amrex::Real dwdot21dsc21 = x10366 + x12395 + x13462 + x13941 + x14080 +
                                   x14164 + x15557 - x16017 + x16018 - x16276 +
                                   x16277 + x9230;
  const amrex::Real dwdot21dsc22 = x12410 + x12425 + x13472 + x13494 + x15277 +
                                   x16030 - x16031 + x16032 + x16281 + x9318 +
                                   x9332;
  const amrex::Real dwdot21dsc23 = -x16041 + x16042 + x16285 + x6510;
  const amrex::Real dwdot21dsc24 = -x16053 + x16054 + x16384;
  const amrex::Real dwdot21dsc25 = -x16067 + x16068 + x16384;
  const amrex::Real dwdot21dsc26 = -x16079 + x16080 + x16384;
  const amrex::Real dwdot21dsc27 = x16091 - x16092 + x16384;
  const amrex::Real dwdot21dsc28 = -x16103 + x16104 + x16384;
  const amrex::Real dwdot21dsc29 = -x16115 + x16116 + x16384;
  const amrex::Real dwdot21dsc30 = -x16127 + x16128 + x16384;
  const amrex::Real dwdot21dsc31 = -x16136 + x16385;
  const amrex::Real dwdot21dsc32 = -x16144 + x16385;
  const amrex::Real dwdot21dsc33 = -x16151 + x16385;
  const amrex::Real dwdot21dsc34 = -x16155 + x16385;
  const amrex::Real dwdot22dsc0 = x11344 + x12782 + x14578 + x15728 + x16408 +
                                  x6115 + x6187 - x4127 * x5148 - x5149 * x1877;
  const amrex::Real dwdot22dsc1 = x12829 + x13799 + x14004 + x15488 + x15754 +
                                  x16410 + x6829 + x6904 -
                                  x16409 * kf_qss[163] - x4128 * x5148;
  const amrex::Real dwdot22dsc2 = x10435 + x12857 + x13805 + x14007 + x15491 +
                                  x15768 + x16410 + x7063 -
                                  x16409 * kf_qss[166] - x4129 * x5148;
  const amrex::Real dwdot22dsc3 = x10505 + x11546 + x12890 + x13810 + x14011 +
                                  x15494 + x15781 + x16411 + x7193 +
                                  x4130 * x5148 - x4131 * x5148 + x4223 * x5149;
  const amrex::Real dwdot22dsc4 = x12930 + x12950 + x13815 + x14015 + x15497 +
                                  x15794 + x16411 + x7295 + x4132 * x5148 -
                                  x4133 * x5148 + x4224 * x5149;
  const amrex::Real dwdot22dsc5 = x12996 + x13826 + x14018 + x15501 + x15807 +
                                  x16414 + x7511 + x4134 * x5148 -
                                  x4136 * x5148 + x4225 * x5149;
  const amrex::Real dwdot22dsc6 =
    x11769 + x13026 + x13846 + x14026 + x14878 - x14879 + x14880 + x14881 -
    x14882 - x14883 + x15504 + x15820 + 9.61e+81 * x16398 - x7649 - x7651 +
    x7652 + x7653 - x7654 + x7655 + x7720 - x2589 * x16412 + x4137 * x5148 -
    x4138 * x5148 + x4226 * x5149 + (x2508 * x16399 + x2509 * x16401) * x16403;
  const amrex::Real dwdot22dsc7 = x13070 + x13859 + x14032 + x15507 + x15833 +
                                  x16411 + x7843 + x4139 * x5148 -
                                  x4140 * x5148 + x4227 * x5149;
  const amrex::Real dwdot22dsc8 = x13121 + x13865 + x14036 + x14303 + x15510 +
                                  x15846 + x16411 + x7939 + x4141 * x5148 -
                                  x4142 * x5148 + x4228 * x5149;
  const amrex::Real dwdot22dsc9 = x13157 + x13871 + x14040 + x14940 + x14964 +
                                  x15514 + x15859 + x16410 + x8051 -
                                  x16409 * kf_qss[178] - x4143 * x5148;
  const amrex::Real dwdot22dsc10 = x13191 + x13877 + x14044 + x14990 + x15520 +
                                   x15872 + x16414 + x8155 + x4144 * x5148 -
                                   x4145 * x5148 + x4229 * x5149;
  const amrex::Real dwdot22dsc11 =
    x13208 + x13883 + x14049 + x15526 + x15885 + x16415 + x16416 + x8238;
  const amrex::Real dwdot22dsc12 =
    x13252 + x13889 + x14053 - x15073 - x15074 + x15076 + x15077 - x15078 +
    x15079 + x15529 + x15904 + 2.4025e+81 * x16398 - 2.325e+44 * x16417 -
    x8346 + x8347 + x8349 + x8350 - x8351 - x8352 + x8419 + x4148 * x5148 -
    x4149 * x5148 + (x2886 * x16401 + x2887 * x16399) * x16403;
  const amrex::Real dwdot22dsc13 = x13282 + x13901 + x14057 + x15532 + x15919 +
                                   x16413 + x8546 + x4150 * x5148 -
                                   x4151 * x5148;
  const amrex::Real dwdot22dsc14 = x15932 + x16419;
  const amrex::Real dwdot22dsc15 = x13338 + x13915 + x14066 + x15542 + x15951 +
                                   x16411 + x8759 + x4152 * x5148 -
                                   x4153 * x5148;
  const amrex::Real dwdot22dsc16 =
    x13366 + x13920 + x14069 - x15183 - x15185 + x15186 + x15187 - x15188 +
    x15189 + x15545 + x15964 + 4.805e+81 * x16398 - 4.65e+44 * x16417 - x8843 +
    x8845 + x8847 + x8848 - x8849 - x8850 + x8912 + x4154 * x5148 -
    x4155 * x5148 + (x3139 * x16399 + x3223 * x16400) * x16403;
  const amrex::Real dwdot22dsc17 = x15968 + x16420;
  const amrex::Real dwdot22dsc18 = x15226 + x15984 + x16421 + x8987;
  const amrex::Real dwdot22dsc19 = x13431 + x13936 + x14076 + x15553 + x15997 +
                                   x16411 + x9141 - x3296 * x16422 +
                                   x4156 * x5148 - x4157 * x5148;
  const amrex::Real dwdot22dsc20 = x16007 + x16419;
  const amrex::Real dwdot22dsc21 = x11062 + x12388 + x13456 + x13461 + x15264 +
                                   x16019 + x16419 + x9203 + x9229;
  const amrex::Real dwdot22dsc22 =
    x11096 + x12411 + x13496 + x13945 + x14084 + x14470 - x14675 + x15278 +
    x15561 + x16033 + x16258 - x16402 + x16411 - x6501 + x9335 + x4158 * x5148 -
    x4159 * x5148 - x5149 * x5837;
  const amrex::Real dwdot22dsc23 = x13511 + x13947 + x14085 + x15562 + x16043 +
                                   x16411 + x9432 + x4160 * x5148 -
                                   x4161 * x5148;
  const amrex::Real dwdot22dsc24 = x13537 + x13952 + x14089 + x15565 + x16055 +
                                   x16411 + x9527 + x4162 * x5148 -
                                   x4163 * x5148;
  const amrex::Real dwdot22dsc25 =
    x13560 + x13957 + x14092 + x15568 + x16069 + x16415 + x9614;
  const amrex::Real dwdot22dsc26 = x13585 + x13961 + x14095 + x15571 + x16081 +
                                   x16411 + x9708 + x4164 * x5148 -
                                   x4165 * x5148;
  const amrex::Real dwdot22dsc27 =
    x13608 + x13965 + x14098 + x15574 + x16093 + x16410 + x9793 - x4166 * x5148;
  const amrex::Real dwdot22dsc28 =
    x13621 + x13969 + x14101 + x15395 + x16105 + x16424 + x9879 - x4167 * x5148;
  const amrex::Real dwdot22dsc29 = x13644 + x13973 + x14104 + x15412 + x16117 +
                                   x16424 + x9967 - x1548 * x16422 -
                                   x4168 * x5148;
  const amrex::Real dwdot22dsc30 = x10003 + x10048 + x12679 + x13667 + x15428 +
                                   x16129 + x16407 + x16423 - x4169 * x5148;
  const amrex::Real dwdot22dsc31 = x10085 + x10112 + x12702 + x13697 + x15439 +
                                   x16137 + x16408 - x4170 * x5148 -
                                   x6052 * x5149;
  const amrex::Real dwdot22dsc32 = x10134 + x10162 + x12721 + x13713 + x15452 +
                                   x16145 + x16408 - x4171 * x5148 -
                                   x6078 * x5149;
  const amrex::Real dwdot22dsc33 = x10181 + x16152 + x16421;
  const amrex::Real dwdot22dsc34 = x16155 + x16420;
  const amrex::Real dwdot23dsc0 = -x16425;
  const amrex::Real dwdot23dsc1 = -x16426;
  const amrex::Real dwdot23dsc2 = x16428;
  const amrex::Real dwdot23dsc3 = x16428;
  const amrex::Real dwdot23dsc4 = x16428;
  const amrex::Real dwdot23dsc5 = x16430;
  const amrex::Real dwdot23dsc6 = -x16431;
  const amrex::Real dwdot23dsc7 = x16428;
  const amrex::Real dwdot23dsc8 = x16428;
  const amrex::Real dwdot23dsc9 = x16428;
  const amrex::Real dwdot23dsc10 = x16430;
  const amrex::Real dwdot23dsc11 = x16428;
  const amrex::Real dwdot23dsc12 = -x16432;
  const amrex::Real dwdot23dsc13 = x16430;
  const amrex::Real dwdot23dsc14 = x16428;
  const amrex::Real dwdot23dsc15 = -x16433;
  const amrex::Real dwdot23dsc16 = -x16434;
  const amrex::Real dwdot23dsc17 = x16428;
  const amrex::Real dwdot23dsc18 = x16428;
  const amrex::Real dwdot23dsc19 = -x16435;
  const amrex::Real dwdot23dsc20 = x16428;
  const amrex::Real dwdot23dsc21 = x16428;
  const amrex::Real dwdot23dsc22 = x16428;
  const amrex::Real dwdot23dsc23 = -50000000000000. * x16283 - x16436 - x16437;
  const amrex::Real dwdot23dsc24 = -x16438;
  const amrex::Real dwdot23dsc25 = x16428;
  const amrex::Real dwdot23dsc26 = -x16439;
  const amrex::Real dwdot23dsc27 = x16428;
  const amrex::Real dwdot23dsc28 = -x16440;
  const amrex::Real dwdot23dsc29 = -x16441;
  const amrex::Real dwdot23dsc30 = -x16442;
  const amrex::Real dwdot23dsc31 = x16443 - x16444;
  const amrex::Real dwdot23dsc32 = x16428;
  const amrex::Real dwdot23dsc33 = x16428;
  const amrex::Real dwdot23dsc34 = x16428;
  const amrex::Real dwdot24dsc0 =
    x16446 + x6147 - x16170 * sc[24] + x4266 * x5156;
  const amrex::Real dwdot24dsc1 =
    x16445 + x6864 - x16193 * sc[24] + x4267 * x5156;
  const amrex::Real dwdot24dsc2 = x16449 + x7036 + x4269 * x5156;
  const amrex::Real dwdot24dsc3 =
    x16450 + x7171 - x4270 * x5156 + x4275 * x5156;
  const amrex::Real dwdot24dsc4 =
    x16450 + x7267 - x4276 * x5156 + x4277 * x5156;
  const amrex::Real dwdot24dsc5 =
    x16451 + x7468 - x4278 * x5156 + x4279 * x5156;
  const amrex::Real dwdot24dsc6 =
    x7686 - x16217 * sc[24] - x4280 * x5156 + x4281 * x5156;
  const amrex::Real dwdot24dsc7 =
    x16450 + x7812 - x4282 * x5156 + x4283 * x5156;
  const amrex::Real dwdot24dsc8 =
    x16450 + x7917 - x4284 * x5156 + x4285 * x5156;
  const amrex::Real dwdot24dsc9 = x16449 + x8025 + x4286 * x5156;
  const amrex::Real dwdot24dsc10 =
    x16451 + x8133 - x4287 * x5156 + x4288 * x5156;
  const amrex::Real dwdot24dsc11 = x16452 + x8220;
  const amrex::Real dwdot24dsc12 =
    x8384 - x16238 * sc[24] - x4291 * x5156 + x4292 * x5156;
  const amrex::Real dwdot24dsc13 =
    x16451 + x8517 - x4293 * x5156 + x4294 * x5156;
  const amrex::Real dwdot24dsc14 = x16454;
  const amrex::Real dwdot24dsc15 =
    x8729 - x16259 * sc[24] - x4295 * x5156 + x4296 * x5156;
  const amrex::Real dwdot24dsc16 =
    x8884 - x16263 * sc[24] - x4297 * x5156 + x4298 * x5156;
  const amrex::Real dwdot24dsc17 = x16454;
  const amrex::Real dwdot24dsc18 = x16453 + x8986;
  const amrex::Real dwdot24dsc19 =
    x9110 - x16271 * sc[24] - x4299 * x5156 + x4300 * x5156;
  const amrex::Real dwdot24dsc20 = x16454;
  const amrex::Real dwdot24dsc21 = x16454;
  const amrex::Real dwdot24dsc22 = x16452 + x9302;
  const amrex::Real dwdot24dsc23 =
    x9399 - x16286 * sc[24] - x4301 * x5156 + x4302 * x5156;
  const amrex::Real dwdot24dsc24 =
    x16254 + x9515 - x16288 * sc[24] - x4303 * x5156 + x4304 * x5156;
  const amrex::Real dwdot24dsc25 = x16449 + x9594 + x4305 * x5156;
  const amrex::Real dwdot24dsc26 =
    x9677 - x16294 * sc[24] - x4306 * x5156 + x4307 * x5156;
  const amrex::Real dwdot24dsc27 = x16445 + x16447 + x9767 + x4308 * x5156;
  const amrex::Real dwdot24dsc28 =
    x16445 + x9857 - x16297 * sc[24] + x4309 * x5156;
  const amrex::Real dwdot24dsc29 =
    x16445 + x9948 - x16300 * sc[24] + x4310 * x5156;
  const amrex::Real dwdot24dsc30 =
    x10027 + x16445 - x16303 * sc[24] + x4311 * x5156;
  const amrex::Real dwdot24dsc31 =
    x10099 + x16446 - x16305 * sc[24] + x4312 * x5156;
  const amrex::Real dwdot24dsc32 = x10148 + x16449 + x5155 * x16455;
  const amrex::Real dwdot24dsc33 = x10180 + x16453;
  const amrex::Real dwdot24dsc34 = x16454;
  const amrex::Real dwdot25dsc0 =
    x16458 + x6150 - x4070 * x5160 + x4266 * x5159;
  const amrex::Real dwdot25dsc1 =
    x16459 + x6872 - x4075 * x5160 + x4267 * x5159;
  const amrex::Real dwdot25dsc2 =
    x16459 + x7046 - x4076 * x5160 + x4269 * x5159;
  const amrex::Real dwdot25dsc3 =
    x7179 - x4077 * x5160 + x4078 * x5160 - x4270 * x5159 + x4275 * x5159;
  const amrex::Real dwdot25dsc4 =
    x7281 - x4079 * x5160 + x4080 * x5160 - x4276 * x5159 + x4277 * x5159;
  const amrex::Real dwdot25dsc5 =
    x7490 - x4081 * x5160 + x4082 * x5160 - x4278 * x5159 + x4279 * x5159;
  const amrex::Real dwdot25dsc6 =
    x7696 - x4083 * x5160 + x4084 * x5160 - x4280 * x5159 + x4281 * x5159;
  const amrex::Real dwdot25dsc7 =
    x7824 - x4085 * x5160 + x4086 * x5160 - x4282 * x5159 + x4283 * x5159;
  const amrex::Real dwdot25dsc8 =
    x7925 - x4087 * x5160 + x4088 * x5160 - x4284 * x5159 + x4285 * x5159;
  const amrex::Real dwdot25dsc9 =
    x16459 + x8032 - x4089 * x5160 + x4286 * x5159;
  const amrex::Real dwdot25dsc10 =
    x8138 - x4090 * x5160 + x4091 * x5160 - x4287 * x5159 + x4288 * x5159;
  const amrex::Real dwdot25dsc11 = x16460 + x16462 + x8225;
  const amrex::Real dwdot25dsc12 =
    x8392 - x4094 * x5160 + x4095 * x5160 - x4291 * x5159 + x4292 * x5159;
  const amrex::Real dwdot25dsc13 =
    x8526 - x4096 * x5160 + x4097 * x5160 - x4293 * x5159 + x4294 * x5159;
  const amrex::Real dwdot25dsc14 = x16463;
  const amrex::Real dwdot25dsc15 =
    x8735 - x4098 * x5160 + x4099 * x5160 - x4295 * x5159 + x4296 * x5159;
  const amrex::Real dwdot25dsc16 =
    x8895 - x4100 * x5160 + x4101 * x5160 - x4297 * x5159 + x4298 * x5159;
  const amrex::Real dwdot25dsc17 = x16463;
  const amrex::Real dwdot25dsc18 = x16463;
  const amrex::Real dwdot25dsc19 =
    x9127 - x4102 * x5160 + x4103 * x5160 - x4299 * x5159 + x4300 * x5159;
  const amrex::Real dwdot25dsc20 = x16463;
  const amrex::Real dwdot25dsc21 = x16463;
  const amrex::Real dwdot25dsc22 =
    x16456 + x16461 + x9313 - x4104 * x5160 + x4105 * x5160;
  const amrex::Real dwdot25dsc23 =
    x9413 - x4106 * x5160 + x4107 * x5160 - x4301 * x5159 + x4302 * x5159;
  const amrex::Real dwdot25dsc24 =
    x9503 - x4108 * x5160 + x4109 * x5160 - x4303 * x5159 + x4304 * x5159;
  const amrex::Real dwdot25dsc25 =
    x16256 + x16456 + x9602 - x4110 * x5160 + x4111 * x5160 + x4305 * x5159;
  const amrex::Real dwdot25dsc26 =
    x9691 - x4112 * x5160 + x4113 * x5160 - x4306 * x5159 + x4307 * x5159;
  const amrex::Real dwdot25dsc27 =
    x16459 + x9778 - x4114 * x5160 + x4308 * x5159;
  const amrex::Real dwdot25dsc28 =
    x16460 + x9864 - x4115 * x5160 + x4309 * x5159;
  const amrex::Real dwdot25dsc29 =
    x16460 + x9952 - x4116 * x5160 + x4310 * x5159;
  const amrex::Real dwdot25dsc30 =
    x10033 + x16458 - x4117 * x5160 + x4311 * x5159;
  const amrex::Real dwdot25dsc31 =
    x10105 + x16458 - x4118 * x5160 + x4312 * x5159;
  const amrex::Real dwdot25dsc32 =
    x10155 + x16458 - x4119 * x5160 + x5158 * x16455;
  const amrex::Real dwdot25dsc33 = x16463;
  const amrex::Real dwdot25dsc34 = x16463;
  const amrex::Real dwdot26dsc0 =
    x16466 + x6144 + x4266 * x5162 - x4321 * x5163;
  const amrex::Real dwdot26dsc1 =
    x16465 + x6859 + x4267 * x5162 - x4322 * x5163;
  const amrex::Real dwdot26dsc2 = x16468 + x7041 + x4269 * x5162;
  const amrex::Real dwdot26dsc3 =
    x16469 + x7166 - x4270 * x5162 + x4275 * x5162;
  const amrex::Real dwdot26dsc4 =
    x16469 + x7273 - x4276 * x5162 + x4277 * x5162;
  const amrex::Real dwdot26dsc5 =
    x16470 + x7471 - x4278 * x5162 + x4279 * x5162;
  const amrex::Real dwdot26dsc6 =
    x7681 - x4280 * x5162 + x4281 * x5162 + x4328 * x5163 - x4329 * x5163;
  const amrex::Real dwdot26dsc7 =
    x16469 + x7815 - x4282 * x5162 + x4283 * x5162;
  const amrex::Real dwdot26dsc8 =
    x16469 + x7909 - x4284 * x5162 + x4285 * x5162;
  const amrex::Real dwdot26dsc9 = x16468 + x8020 + x4286 * x5162;
  const amrex::Real dwdot26dsc10 =
    x16470 + x8124 - x4287 * x5162 + x4288 * x5162;
  const amrex::Real dwdot26dsc11 = x16473 + x8180;
  const amrex::Real dwdot26dsc12 =
    x8373 - x4291 * x5162 + x4292 * x5162 + x4330 * x5163 - x4331 * x5163;
  const amrex::Real dwdot26dsc13 =
    x16470 + x8512 - x4293 * x5162 + x4294 * x5162;
  const amrex::Real dwdot26dsc14 = x16474;
  const amrex::Real dwdot26dsc15 =
    x8718 - x4295 * x5162 + x4296 * x5162 + x4332 * x5163 - x4333 * x5163;
  const amrex::Real dwdot26dsc16 =
    x8872 - x4297 * x5162 + x4334 * x5163 - x4335 * x5163 + x5161 * x16475;
  const amrex::Real dwdot26dsc17 = x16474;
  const amrex::Real dwdot26dsc18 = x16474;
  const amrex::Real dwdot26dsc19 =
    x9103 - x4299 * x5162 + x4300 * x5162 + x4336 * x5163 - x4337 * x5163;
  const amrex::Real dwdot26dsc20 = x16474;
  const amrex::Real dwdot26dsc21 = x16474;
  const amrex::Real dwdot26dsc22 = x16468 + x16471 + x9308;
  const amrex::Real dwdot26dsc23 =
    x9408 - x4301 * x5162 + x4302 * x5162 + x4338 * x5163 - x4339 * x5163;
  const amrex::Real dwdot26dsc24 =
    x9498 - x4303 * x5162 + x4304 * x5162 + x4340 * x5163 - x4341 * x5163;
  const amrex::Real dwdot26dsc25 = x16468 + x9588 + x4305 * x5162;
  const amrex::Real dwdot26dsc26 = x16255 + x9696 - x4306 * x5162 +
                                   x4307 * x5162 + x4342 * x5163 -
                                   x4343 * x5163;
  const amrex::Real dwdot26dsc27 =
    x16465 + x9773 + x4308 * x5162 - x4344 * x5163;
  const amrex::Real dwdot26dsc28 =
    x16466 + x9852 + x4309 * x5162 - x4345 * x5163;
  const amrex::Real dwdot26dsc29 =
    x16466 + x9940 + x4310 * x5162 - x4346 * x5163;
  const amrex::Real dwdot26dsc30 =
    x10023 + x16466 + x4311 * x5162 - x4347 * x5163;
  const amrex::Real dwdot26dsc31 =
    x10096 + x16466 + x4312 * x5162 - x4348 * x5163;
  const amrex::Real dwdot26dsc32 = x10130 + x16472 + x5161 * x16455;
  const amrex::Real dwdot26dsc33 = x16474;
  const amrex::Real dwdot26dsc34 = x16474;
  const amrex::Real dwdot27dsc0 =
    x16479 + x6153 - x4018 * x5166 + x4266 * x5165;
  const amrex::Real dwdot27dsc1 =
    x16480 + x6867 + x4019 * x5166 - x4020 * x5166 + x4267 * x5165;
  const amrex::Real dwdot27dsc2 =
    x16482 + x7048 + x4021 * x5166 - x4022 * x5166 + x4269 * x5165;
  const amrex::Real dwdot27dsc3 =
    x7174 + x4023 * x5166 - x4024 * x5166 - x4270 * x5165 + x4275 * x5165;
  const amrex::Real dwdot27dsc4 =
    x7276 + x4025 * x5166 - x4026 * x5166 - x4276 * x5165 + x4277 * x5165;
  const amrex::Real dwdot27dsc5 =
    x7484 + x4027 * x5166 - x4028 * x5166 - x4278 * x5165 + x4279 * x5165;
  const amrex::Real dwdot27dsc6 =
    x7691 + x4029 * x5166 - x4030 * x5166 - x4280 * x5165 + x4281 * x5165;
  const amrex::Real dwdot27dsc7 =
    x7827 + x4031 * x5166 - x4032 * x5166 - x4282 * x5165 + x4283 * x5165;
  const amrex::Real dwdot27dsc8 =
    x7920 + x4033 * x5166 - x4034 * x5166 - x4284 * x5165 + x4285 * x5165;
  const amrex::Real dwdot27dsc9 =
    x16482 + x8034 + x4035 * x5166 - x4036 * x5166 + x4286 * x5165;
  const amrex::Real dwdot27dsc10 =
    x8141 + x4037 * x5166 - x4038 * x5166 - x4287 * x5165 + x4288 * x5165;
  const amrex::Real dwdot27dsc11 = x16485 - x4039 * x5166;
  const amrex::Real dwdot27dsc12 =
    x8397 + x4040 * x5166 - x4041 * x5166 - x4291 * x5165 + x4292 * x5165;
  const amrex::Real dwdot27dsc13 =
    x8529 + x4042 * x5166 - x4043 * x5166 - x4293 * x5165 + x4294 * x5165;
  const amrex::Real dwdot27dsc14 = x16486;
  const amrex::Real dwdot27dsc15 =
    x8741 + x4046 * x5166 - x4047 * x5166 - x4295 * x5165 + x4296 * x5165;
  const amrex::Real dwdot27dsc16 =
    x8890 + x4048 * x5166 - x4049 * x5166 - x4297 * x5165 + x5164 * x16475;
  const amrex::Real dwdot27dsc17 = x16486;
  const amrex::Real dwdot27dsc18 = x16486;
  const amrex::Real dwdot27dsc19 =
    x9121 + x4050 * x5166 - x4051 * x5166 - x4299 * x5165 + x4300 * x5165;
  const amrex::Real dwdot27dsc20 = x16486;
  const amrex::Real dwdot27dsc21 = x16486;
  const amrex::Real dwdot27dsc22 =
    x16481 + x16483 + x9317 + x4052 * x5166 - x4053 * x5166;
  const amrex::Real dwdot27dsc23 =
    x9418 + x4054 * x5166 - x4055 * x5166 - x4301 * x5165 + x4302 * x5165;
  const amrex::Real dwdot27dsc24 =
    x9508 + x4056 * x5166 - x4057 * x5166 - x4303 * x5165 + x4304 * x5165;
  const amrex::Real dwdot27dsc25 =
    x16481 + x9597 + x4058 * x5166 - x4059 * x5166 + x4305 * x5165;
  const amrex::Real dwdot27dsc26 =
    x9686 + x4060 * x5166 - x4061 * x5166 - x4306 * x5165 + x4307 * x5165;
  const amrex::Real dwdot27dsc27 =
    x16257 + x16480 + x9781 + x4062 * x5166 - x4063 * x5166 + x4308 * x5165;
  const amrex::Real dwdot27dsc28 =
    x16479 + x9867 - x4064 * x5166 + x4309 * x5165;
  const amrex::Real dwdot27dsc29 =
    x16479 + x9955 - x4065 * x5166 + x4310 * x5165;
  const amrex::Real dwdot27dsc30 =
    x10030 + x16479 - x4066 * x5166 + x4311 * x5165;
  const amrex::Real dwdot27dsc31 =
    x10102 + x16479 - x4067 * x5166 + x4312 * x5165;
  const amrex::Real dwdot27dsc32 =
    x10152 + x16484 - x16307 * sc[27] + x5164 * x16455;
  const amrex::Real dwdot27dsc33 = x16486;
  const amrex::Real dwdot27dsc34 = x16486;
  const amrex::Real dwdot28dsc0 =
    x16489 + x6138 + x4266 * x5168 - x5169 * x3955;
  const amrex::Real dwdot28dsc1 =
    x16490 + x6852 + x4267 * x5168 - x5169 * x3960 + x5169 * x3961;
  const amrex::Real dwdot28dsc2 =
    x16492 + x6984 + x4269 * x5168 - x5169 * x3962 + x5169 * x3963;
  const amrex::Real dwdot28dsc3 =
    x7160 - x4270 * x5168 + x4275 * x5168 - x5169 * x3964 + x5169 * x3965;
  const amrex::Real dwdot28dsc4 =
    x7262 - x4276 * x5168 + x4277 * x5168 - x5169 * x3966 + x5169 * x3967;
  const amrex::Real dwdot28dsc5 =
    x7456 - x4278 * x5168 + x4279 * x5168 - x5169 * x3968 + x5169 * x3969;
  const amrex::Real dwdot28dsc6 =
    x7670 - x4280 * x5168 + x4281 * x5168 - x5169 * x3970 + x5169 * x3971;
  const amrex::Real dwdot28dsc7 =
    x7807 - x4282 * x5168 + x4283 * x5168 - x5169 * x3972 + x5169 * x3973;
  const amrex::Real dwdot28dsc8 =
    x7906 - x4284 * x5168 + x4285 * x5168 - x5169 * x3974 + x5169 * x3975;
  const amrex::Real dwdot28dsc9 =
    x16492 + x7974 + x4286 * x5168 - x5169 * x3976 + x5169 * x3977;
  const amrex::Real dwdot28dsc10 =
    x8121 - x4287 * x5168 + x4288 * x5168 - x5169 * x3978 + x5169 * x3979;
  const amrex::Real dwdot28dsc11 =
    x16494 + x6688 - x5169 * x3980 + x5169 * x3981;
  const amrex::Real dwdot28dsc12 =
    x8368 - x4291 * x5168 + x4292 * x5168 - x5169 * x3982 + x5169 * x3983;
  const amrex::Real dwdot28dsc13 =
    x8509 - x4293 * x5168 + x4294 * x5168 - x5169 * x3984 + x5169 * x3985;
  const amrex::Real dwdot28dsc14 = x16495;
  const amrex::Real dwdot28dsc15 =
    x8712 - x4295 * x5168 + x4296 * x5168 - x5169 * x3988 + x5169 * x3989;
  const amrex::Real dwdot28dsc16 =
    x8867 - x4297 * x5168 + x5167 * x16475 - x5169 * x3990 + x5169 * x3991;
  const amrex::Real dwdot28dsc17 = x16495;
  const amrex::Real dwdot28dsc18 = x16495;
  const amrex::Real dwdot28dsc19 =
    x9097 - x4299 * x5168 + x4300 * x5168 - x5169 * x3992 + x5169 * x3993;
  const amrex::Real dwdot28dsc20 = x16495;
  const amrex::Real dwdot28dsc21 = x16495;
  const amrex::Real dwdot28dsc22 =
    x16493 + x9297 - x5169 * x3994 + x5169 * x3995;
  const amrex::Real dwdot28dsc23 =
    x9394 - x4301 * x5168 + x4302 * x5168 - x5169 * x3996 + x5169 * x3997;
  const amrex::Real dwdot28dsc24 =
    x9489 - x4303 * x5168 + x4304 * x5168 - x5169 * x3998 + x5169 * x3999;
  const amrex::Real dwdot28dsc25 =
    x16491 + x9585 - x4000 * x5169 + x4001 * x5169 + x4305 * x5168;
  const amrex::Real dwdot28dsc26 =
    x9672 - x4002 * x5169 + x4003 * x5169 - x4306 * x5168 + x4307 * x5168;
  const amrex::Real dwdot28dsc27 =
    x16492 + x9730 - x4004 * x5169 + x4005 * x5169 + x4308 * x5168;
  const amrex::Real dwdot28dsc28 =
    x16252 + x16490 + x9860 - x4006 * x5169 + x4007 * x5169 + x4309 * x5168;
  const amrex::Real dwdot28dsc29 =
    x16490 + x9937 - x4008 * x5169 + x4009 * x5169 + x4310 * x5168;
  const amrex::Real dwdot28dsc30 =
    x10020 + x16489 - x4010 * x5169 + x4311 * x5168;
  const amrex::Real dwdot28dsc31 =
    x10090 + x16489 - x4011 * x5169 + x4312 * x5168;
  const amrex::Real dwdot28dsc32 =
    x10129 + x16488 + x16491 - x4012 * x5169 + x5167 * x16455;
  const amrex::Real dwdot28dsc33 = x16495;
  const amrex::Real dwdot28dsc34 = x16495;
  const amrex::Real dwdot29dsc0 = x16171 + x16329 + x16497 - x5175 + x5178;
  const amrex::Real dwdot29dsc1 =
    x16194 + x16342 + x16496 + x5250 - x5251 + x6851;
  const amrex::Real dwdot29dsc2 = x16344 + x16498 + x5286 - x5287;
  const amrex::Real dwdot29dsc3 = x16350 + x16498 + x5314 - x5315;
  const amrex::Real dwdot29dsc4 = x16353 + x16498 - x5361 + x5362;
  const amrex::Real dwdot29dsc5 = x16354 + x16499 + x5404 - x5405;
  const amrex::Real dwdot29dsc6 = x16218 + x16357 + x5445 - x5446 + x7659 -
                                  x7660 - x7663 - x7665 + x7668 + x7669;
  const amrex::Real dwdot29dsc7 = x16358 + x16498 + x5486 - x5487;
  const amrex::Real dwdot29dsc8 = x16359 + x16498 + x5527 - x5528;
  const amrex::Real dwdot29dsc9 = x16360 + x16498 - x5567 + x5568;
  const amrex::Real dwdot29dsc10 = x16361 + x16499 - x5595 + x5596;
  const amrex::Real dwdot29dsc11 = x16498 + x5636 - x5637;
  const amrex::Real dwdot29dsc12 =
    x16239 + x5663 - x5664 - x8356 + x8358 - x8361 + x8363 + x8364 - x8367;
  const amrex::Real dwdot29dsc13 = x16499 + x5695 - x5696;
  const amrex::Real dwdot29dsc14 = x16501;
  const amrex::Real dwdot29dsc15 = x16253 + x16260 + x16496 - x5729 + x5730;
  const amrex::Real dwdot29dsc16 =
    x16264 + x5761 - x5762 + x8855 - x8857 + x8859 + x8862 - x8864 - x8866;
  const amrex::Real dwdot29dsc17 = x16501;
  const amrex::Real dwdot29dsc18 = x16501;
  const amrex::Real dwdot29dsc19 = x16272 + x16375 + x16496 + x5793 - x5794;
  const amrex::Real dwdot29dsc20 = x16501;
  const amrex::Real dwdot29dsc21 = x16501;
  const amrex::Real dwdot29dsc22 = x16376 + x16498 - x5840 + x5849;
  const amrex::Real dwdot29dsc23 = x16287 + x16496 - x5852 + x5853;
  const amrex::Real dwdot29dsc24 = x16289 + x16496 + x5884 - x5885;
  const amrex::Real dwdot29dsc25 = x16498 + x5916 - x5917;
  const amrex::Real dwdot29dsc26 = x16295 + x16496 + x5930 - x5931;
  const amrex::Real dwdot29dsc27 = x16498 - x5962 + x5963;
  const amrex::Real dwdot29dsc28 = x16298 + x16496 + x5982 - x5983 + x6180;
  const amrex::Real dwdot29dsc29 =
    x16301 - x16302 + x16378 + x16496 - x6002 + x6003 - x6005 - x9936;
  const amrex::Real dwdot29dsc30 = x16304 + x16497 - x6030;
  const amrex::Real dwdot29dsc31 = x16306 + x16379 + x16497 - x6049;
  const amrex::Real dwdot29dsc32 = x16380 + x16500 - x6075;
  const amrex::Real dwdot29dsc33 = x16501;
  const amrex::Real dwdot29dsc34 = x16501;
  const amrex::Real dwdot30dsc0 =
    x16506 + x6141 + x4266 * x5172 - x5170 * x3891;
  const amrex::Real dwdot30dsc1 =
    x16505 + x6855 + x4267 * x5172 - x5170 * x3898 + x5170 * x3899;
  const amrex::Real dwdot30dsc2 =
    x16507 + x7038 + x4269 * x5172 - x5170 * x3900 + x5170 * x3901;
  const amrex::Real dwdot30dsc3 =
    x7163 - x4270 * x5172 + x4275 * x5172 - x5170 * x3902 + x5170 * x3903;
  const amrex::Real dwdot30dsc4 =
    x7270 - x4276 * x5172 + x4277 * x5172 - x5170 * x3904 + x5170 * x3905;
  const amrex::Real dwdot30dsc5 =
    x7477 - x4278 * x5172 + x4279 * x5172 - x5170 * x3906 + x5170 * x3907;
  const amrex::Real dwdot30dsc6 =
    x7676 - x4280 * x5172 + x4281 * x5172 - x5170 * x3908 + x5170 * x3909;
  const amrex::Real dwdot30dsc7 =
    x7818 - x4282 * x5172 + x4283 * x5172 - x5170 * x3910 + x5170 * x3911;
  const amrex::Real dwdot30dsc8 =
    x7912 - x4284 * x5172 + x4285 * x5172 - x5170 * x3912 + x5170 * x3913;
  const amrex::Real dwdot30dsc9 =
    x16507 + x8027 + x4286 * x5172 - x5170 * x3914 + x5170 * x3915;
  const amrex::Real dwdot30dsc10 =
    x8127 - x4287 * x5172 + x4288 * x5172 - x5170 * x3916 + x5170 * x3917;
  const amrex::Real dwdot30dsc11 =
    x16507 + x16509 - x5170 * x3918 + x5170 * x3919;
  const amrex::Real dwdot30dsc12 =
    x8379 - x4291 * x5172 + x4292 * x5172 - x5170 * x3920 + x5170 * x3921;
  const amrex::Real dwdot30dsc13 =
    x8520 - x4293 * x5172 + x4294 * x5172 - x5170 * x3922 + x5170 * x3923;
  const amrex::Real dwdot30dsc14 = x16512;
  const amrex::Real dwdot30dsc15 =
    x8723 - x4295 * x5172 + x4296 * x5172 - x5170 * x3926 + x5170 * x3927;
  const amrex::Real dwdot30dsc16 =
    x8878 - x4297 * x5172 + x4298 * x5172 - x5170 * x3928 + x5170 * x3929;
  const amrex::Real dwdot30dsc17 = x16512;
  const amrex::Real dwdot30dsc18 = x16511 - x5170 * x3930;
  const amrex::Real dwdot30dsc19 =
    x9115 - x4299 * x5172 + x4300 * x5172 - x5170 * x3931 + x5170 * x3932;
  const amrex::Real dwdot30dsc20 = x16512;
  const amrex::Real dwdot30dsc21 = x16512;
  const amrex::Real dwdot30dsc22 =
    x16503 + x16508 + x9305 - x5170 * x3933 + x5170 * x3934;
  const amrex::Real dwdot30dsc23 =
    x9403 - x4301 * x5172 + x4302 * x5172 - x5170 * x3935 + x5170 * x3936;
  const amrex::Real dwdot30dsc24 =
    x9493 - x4303 * x5172 + x4304 * x5172 - x5170 * x3937 + x5170 * x3938;
  const amrex::Real dwdot30dsc25 =
    x16507 + x8269 + x4305 * x5172 - x5170 * x3939 + x5170 * x3940;
  const amrex::Real dwdot30dsc26 =
    x9681 - x4306 * x5172 + x4307 * x5172 - x5170 * x3941 + x5170 * x3942;
  const amrex::Real dwdot30dsc27 =
    x16507 + x9769 + x4308 * x5172 - x5170 * x3943 + x5170 * x3944;
  const amrex::Real dwdot30dsc28 =
    x16505 + x9849 + x4309 * x5172 - x5170 * x3945 + x5170 * x3946;
  const amrex::Real dwdot30dsc29 =
    x16505 + x9943 + x4310 * x5172 - x5170 * x3947 + x5170 * x3948;
  const amrex::Real dwdot30dsc30 = x10036 + x16505 + x4311 * x5172 -
                                   x5133 * x14126 - x5170 * x3949 +
                                   x5170 * x3950;
  const amrex::Real dwdot30dsc31 =
    x10093 + x16506 + x4312 * x5172 - x5170 * x3951;
  const amrex::Real dwdot30dsc32 =
    x10150 + x16510 - x5170 * x3952 + x5171 * x16455;
  const amrex::Real dwdot30dsc33 = x16511 - x5170 * x3953;
  const amrex::Real dwdot30dsc34 = x16512;
  const amrex::Real dwdot31dsc0 = x12774 + x16425;
  const amrex::Real dwdot31dsc1 = x12823 + x16426;
  const amrex::Real dwdot31dsc2 = x12851 + x16513;
  const amrex::Real dwdot31dsc3 = x12883 + x16427;
  const amrex::Real dwdot31dsc4 = x12928 + x16427;
  const amrex::Real dwdot31dsc5 = x12990 + x16429;
  const amrex::Real dwdot31dsc6 = x13020 + x16431;
  const amrex::Real dwdot31dsc7 = x13060 + x16427;
  const amrex::Real dwdot31dsc8 = x13108 + x16427;
  const amrex::Real dwdot31dsc9 = x13151 + x16513;
  const amrex::Real dwdot31dsc10 = x13185 + x16429;
  const amrex::Real dwdot31dsc11 = x16515;
  const amrex::Real dwdot31dsc12 = x13246 + x16432;
  const amrex::Real dwdot31dsc13 = x13276 + x16429;
  const amrex::Real dwdot31dsc14 = x16515;
  const amrex::Real dwdot31dsc15 = x13332 + x16433;
  const amrex::Real dwdot31dsc16 = x13363 + x16434;
  const amrex::Real dwdot31dsc17 = x16515;
  const amrex::Real dwdot31dsc18 = x16515;
  const amrex::Real dwdot31dsc19 = x13423 + x16435;
  const amrex::Real dwdot31dsc20 = x16515;
  const amrex::Real dwdot31dsc21 = x16515;
  const amrex::Real dwdot31dsc22 = x13470 + x16515;
  const amrex::Real dwdot31dsc23 = x13505 + x16436 + x16437;
  const amrex::Real dwdot31dsc24 = x13531 + x16438;
  const amrex::Real dwdot31dsc25 = x13552 + x16514;
  const amrex::Real dwdot31dsc26 = x13579 + x16439;
  const amrex::Real dwdot31dsc27 = x13602 + x16513;
  const amrex::Real dwdot31dsc28 = x13626 + x16440;
  const amrex::Real dwdot31dsc29 = x13650 + x16441;
  const amrex::Real dwdot31dsc30 = x13672 + x16442;
  const amrex::Real dwdot31dsc31 = x13693 - x16443 + x16444;
  const amrex::Real dwdot31dsc32 = x13709 + x16513;
  const amrex::Real dwdot31dsc33 = x16515;
  const amrex::Real dwdot31dsc34 = x16515;
  const amrex::Real dwdot32dsc0 = -x14180 + x14183 + x14184 + x16516;
  const amrex::Real dwdot32dsc1 = x14209 - x14212 + x14216 + x16516;
  const amrex::Real dwdot32dsc2 = -x14224 + x14225 + x14228 + x16516;
  const amrex::Real dwdot32dsc3 =
    -x14236 + x14237 + x14244 + x14245 - x14246 + x14240 * x16518;
  const amrex::Real dwdot32dsc4 = -x14252 + x14255 + x14258 + x14259 - x14260;
  const amrex::Real dwdot32dsc5 = x14265 - x14267 + x14268 + x14271 - x14272;
  const amrex::Real dwdot32dsc6 = x14279 + x14280 + x14283 - x14284 - x14285;
  const amrex::Real dwdot32dsc7 = -x14289 + x14290 + x14291 - x14292 + x14297;
  const amrex::Real dwdot32dsc8 = -x14307 + x14308 + x14309 - x14311 + x14317 -
                                  x14319 + x14320 + x14321 - x14322 +
                                  x3696 * x16519 - x3698 * x16519;
  const amrex::Real dwdot32dsc9 = x14329 - x14332 + x14333 + x16516;
  const amrex::Real dwdot32dsc10 = -x14341 + x14342 + x14343 - x14345 + x14347;
  const amrex::Real dwdot32dsc11 = x16521;
  const amrex::Real dwdot32dsc12 = -x14369 + x14371 + x14374 - x14375;
  const amrex::Real dwdot32dsc13 = x14382 - x14383 - x14386 + x14388;
  const amrex::Real dwdot32dsc14 = x16521;
  const amrex::Real dwdot32dsc15 = x14405 + x14406 - x14408 - x14409;
  const amrex::Real dwdot32dsc16 = x14415 - x14416 + x14421 - x14422;
  const amrex::Real dwdot32dsc17 = x16521;
  const amrex::Real dwdot32dsc18 = x16521;
  const amrex::Real dwdot32dsc19 = x14444 - x14447 - x14448 + x14450 - x14451;
  const amrex::Real dwdot32dsc20 = x16521;
  const amrex::Real dwdot32dsc21 = x16521;
  const amrex::Real dwdot32dsc22 = -x14467 + x16521;
  const amrex::Real dwdot32dsc23 = x14476 - x14479 + x14481 - x14483;
  const amrex::Real dwdot32dsc24 = x14487 - x14490 + x14492 - x14493;
  const amrex::Real dwdot32dsc25 = x14500 + x16520;
  const amrex::Real dwdot32dsc26 = x14503 - x14504 - x14508 + x14510;
  const amrex::Real dwdot32dsc27 = x14516 + x14517 + x16516;
  const amrex::Real dwdot32dsc28 = x14522 + x14523 + x16516;
  const amrex::Real dwdot32dsc29 = x14528 - x14529 + x14533 + x16516;
  const amrex::Real dwdot32dsc30 = x14536 + x14540 + x16516;
  const amrex::Real dwdot32dsc31 = -x14543 + x14544 + x14545 + x16516;
  const amrex::Real dwdot32dsc32 =
    -x14550 + x14551 - x14552 + x14553 + x16516 - x3700 * x16519 -
    1510000000000.0 * exp(-9561.11665028967 * invT);
  const amrex::Real dwdot32dsc33 = x16521 + x14557 * x16518;
  const amrex::Real dwdot32dsc34 = x16521;
  const amrex::Real dwdot33dsc0 = 0;
  const amrex::Real dwdot33dsc1 = 0;
  const amrex::Real dwdot33dsc2 = 0;
  const amrex::Real dwdot33dsc3 = x11585;
  const amrex::Real dwdot33dsc4 = 0;
  const amrex::Real dwdot33dsc5 = 0;
  const amrex::Real dwdot33dsc6 = 0;
  const amrex::Real dwdot33dsc7 = 0;
  const amrex::Real dwdot33dsc8 = x11885;
  const amrex::Real dwdot33dsc9 = 0;
  const amrex::Real dwdot33dsc10 = 0;
  const amrex::Real dwdot33dsc11 = 0;
  const amrex::Real dwdot33dsc12 = 0;
  const amrex::Real dwdot33dsc13 = 0;
  const amrex::Real dwdot33dsc14 = 0;
  const amrex::Real dwdot33dsc15 = 0;
  const amrex::Real dwdot33dsc16 = 0;
  const amrex::Real dwdot33dsc17 = 0;
  const amrex::Real dwdot33dsc18 = 0;
  const amrex::Real dwdot33dsc19 = 0;
  const amrex::Real dwdot33dsc20 = 0;
  const amrex::Real dwdot33dsc21 = 0;
  const amrex::Real dwdot33dsc22 = 0;
  const amrex::Real dwdot33dsc23 = 0;
  const amrex::Real dwdot33dsc24 = 0;
  const amrex::Real dwdot33dsc25 = 0;
  const amrex::Real dwdot33dsc26 = 0;
  const amrex::Real dwdot33dsc27 = 0;
  const amrex::Real dwdot33dsc28 = 0;
  const amrex::Real dwdot33dsc29 = 0;
  const amrex::Real dwdot33dsc30 = 0;
  const amrex::Real dwdot33dsc31 = 0;
  const amrex::Real dwdot33dsc32 = 0;
  const amrex::Real dwdot33dsc33 = -x12740 + x12744;
  const amrex::Real dwdot33dsc34 = 0;
  const amrex::Real dwdot34dsc0 = 0;
  const amrex::Real dwdot34dsc1 = 0;
  const amrex::Real dwdot34dsc2 = 0;
  const amrex::Real dwdot34dsc3 = 0;
  const amrex::Real dwdot34dsc4 = 0;
  const amrex::Real dwdot34dsc5 = 0;
  const amrex::Real dwdot34dsc6 = 0;
  const amrex::Real dwdot34dsc7 = 0;
  const amrex::Real dwdot34dsc8 = 0;
  const amrex::Real dwdot34dsc9 = 0;
  const amrex::Real dwdot34dsc10 = 0;
  const amrex::Real dwdot34dsc11 = 0;
  const amrex::Real dwdot34dsc12 = 0;
  const amrex::Real dwdot34dsc13 = 0;
  const amrex::Real dwdot34dsc14 = 0;
  const amrex::Real dwdot34dsc15 = 0;
  const amrex::Real dwdot34dsc16 = 0;
  const amrex::Real dwdot34dsc17 = 0;
  const amrex::Real dwdot34dsc18 = 0;
  const amrex::Real dwdot34dsc19 = 0;
  const amrex::Real dwdot34dsc20 = 0;
  const amrex::Real dwdot34dsc21 = 0;
  const amrex::Real dwdot34dsc22 = 0;
  const amrex::Real dwdot34dsc23 = 0;
  const amrex::Real dwdot34dsc24 = 0;
  const amrex::Real dwdot34dsc25 = 0;
  const amrex::Real dwdot34dsc26 = 0;
  const amrex::Real dwdot34dsc27 = 0;
  const amrex::Real dwdot34dsc28 = 0;
  const amrex::Real dwdot34dsc29 = 0;
  const amrex::Real dwdot34dsc30 = 0;
  const amrex::Real dwdot34dsc31 = 0;
  const amrex::Real dwdot34dsc32 = 0;
  const amrex::Real dwdot34dsc33 = 0;
  const amrex::Real dwdot34dsc34 = 0;
  // Write dscqss_dsc terms...
  dscqss_dsc[0] = dscqss0dsc0;
  dscqss_dsc[1] = dscqss0dsc1;
  dscqss_dsc[2] = dscqss0dsc2;
  dscqss_dsc[3] = dscqss0dsc3;
  dscqss_dsc[4] = dscqss0dsc4;
  dscqss_dsc[5] = dscqss0dsc5;
  dscqss_dsc[6] = dscqss0dsc6;
  dscqss_dsc[7] = dscqss0dsc7;
  dscqss_dsc[8] = dscqss0dsc8;
  dscqss_dsc[9] = dscqss0dsc9;
  dscqss_dsc[10] = dscqss0dsc10;
  dscqss_dsc[11] = dscqss0dsc11;
  dscqss_dsc[12] = dscqss0dsc12;
  dscqss_dsc[13] = dscqss0dsc13;
  dscqss_dsc[14] = dscqss0dsc14;
  dscqss_dsc[15] = dscqss0dsc15;
  dscqss_dsc[16] = dscqss0dsc16;
  dscqss_dsc[17] = dscqss0dsc17;
  dscqss_dsc[18] = dscqss0dsc18;
  dscqss_dsc[19] = dscqss0dsc19;
  dscqss_dsc[20] = dscqss0dsc20;
  dscqss_dsc[21] = dscqss0dsc21;
  dscqss_dsc[22] = dscqss0dsc22;
  dscqss_dsc[23] = dscqss0dsc23;
  dscqss_dsc[24] = dscqss0dsc24;
  dscqss_dsc[25] = dscqss0dsc25;
  dscqss_dsc[26] = dscqss0dsc26;
  dscqss_dsc[27] = dscqss0dsc27;
  dscqss_dsc[28] = dscqss0dsc28;
  dscqss_dsc[29] = dscqss0dsc29;
  dscqss_dsc[30] = dscqss0dsc30;
  dscqss_dsc[31] = dscqss0dsc31;
  dscqss_dsc[32] = dscqss0dsc32;
  dscqss_dsc[33] = dscqss0dsc33;
  dscqss_dsc[34] = dscqss0dsc34;
  dscqss_dsc[560] = dscqss16dsc0;
  dscqss_dsc[561] = dscqss16dsc1;
  dscqss_dsc[562] = dscqss16dsc2;
  dscqss_dsc[563] = dscqss16dsc3;
  dscqss_dsc[564] = dscqss16dsc4;
  dscqss_dsc[565] = dscqss16dsc5;
  dscqss_dsc[566] = dscqss16dsc6;
  dscqss_dsc[567] = dscqss16dsc7;
  dscqss_dsc[568] = dscqss16dsc8;
  dscqss_dsc[569] = dscqss16dsc9;
  dscqss_dsc[570] = dscqss16dsc10;
  dscqss_dsc[571] = dscqss16dsc11;
  dscqss_dsc[572] = dscqss16dsc12;
  dscqss_dsc[573] = dscqss16dsc13;
  dscqss_dsc[574] = dscqss16dsc14;
  dscqss_dsc[575] = dscqss16dsc15;
  dscqss_dsc[576] = dscqss16dsc16;
  dscqss_dsc[577] = dscqss16dsc17;
  dscqss_dsc[578] = dscqss16dsc18;
  dscqss_dsc[579] = dscqss16dsc19;
  dscqss_dsc[580] = dscqss16dsc20;
  dscqss_dsc[581] = dscqss16dsc21;
  dscqss_dsc[582] = dscqss16dsc22;
  dscqss_dsc[583] = dscqss16dsc23;
  dscqss_dsc[584] = dscqss16dsc24;
  dscqss_dsc[585] = dscqss16dsc25;
  dscqss_dsc[586] = dscqss16dsc26;
  dscqss_dsc[587] = dscqss16dsc27;
  dscqss_dsc[588] = dscqss16dsc28;
  dscqss_dsc[589] = dscqss16dsc29;
  dscqss_dsc[590] = dscqss16dsc30;
  dscqss_dsc[591] = dscqss16dsc31;
  dscqss_dsc[592] = dscqss16dsc32;
  dscqss_dsc[593] = dscqss16dsc33;
  dscqss_dsc[594] = dscqss16dsc34;
  dscqss_dsc[35] = dscqss1dsc0 + dscqss1dscqss0 * dscqss_dsc[0];
  dscqss_dsc[36] = dscqss1dsc1 + dscqss1dscqss0 * dscqss_dsc[1];
  dscqss_dsc[37] = dscqss1dsc2 + dscqss1dscqss0 * dscqss_dsc[2];
  dscqss_dsc[38] = dscqss1dsc3 + dscqss1dscqss0 * dscqss_dsc[3];
  dscqss_dsc[39] = dscqss1dsc4 + dscqss1dscqss0 * dscqss_dsc[4];
  dscqss_dsc[40] = dscqss1dsc5 + dscqss1dscqss0 * dscqss_dsc[5];
  dscqss_dsc[41] = dscqss1dsc6 + dscqss1dscqss0 * dscqss_dsc[6];
  dscqss_dsc[42] = dscqss1dsc7 + dscqss1dscqss0 * dscqss_dsc[7];
  dscqss_dsc[43] = dscqss1dsc8 + dscqss1dscqss0 * dscqss_dsc[8];
  dscqss_dsc[44] = dscqss1dsc9 + dscqss1dscqss0 * dscqss_dsc[9];
  dscqss_dsc[45] = dscqss1dsc10 + dscqss1dscqss0 * dscqss_dsc[10];
  dscqss_dsc[46] = dscqss1dsc11 + dscqss1dscqss0 * dscqss_dsc[11];
  dscqss_dsc[47] = dscqss1dsc12 + dscqss1dscqss0 * dscqss_dsc[12];
  dscqss_dsc[48] = dscqss1dsc13 + dscqss1dscqss0 * dscqss_dsc[13];
  dscqss_dsc[49] = dscqss1dsc14 + dscqss1dscqss0 * dscqss_dsc[14];
  dscqss_dsc[50] = dscqss1dsc15 + dscqss1dscqss0 * dscqss_dsc[15];
  dscqss_dsc[51] = dscqss1dsc16 + dscqss1dscqss0 * dscqss_dsc[16];
  dscqss_dsc[52] = dscqss1dsc17 + dscqss1dscqss0 * dscqss_dsc[17];
  dscqss_dsc[53] = dscqss1dsc18 + dscqss1dscqss0 * dscqss_dsc[18];
  dscqss_dsc[54] = dscqss1dsc19 + dscqss1dscqss0 * dscqss_dsc[19];
  dscqss_dsc[55] = dscqss1dsc20 + dscqss1dscqss0 * dscqss_dsc[20];
  dscqss_dsc[56] = dscqss1dsc21 + dscqss1dscqss0 * dscqss_dsc[21];
  dscqss_dsc[57] = dscqss1dsc22 + dscqss1dscqss0 * dscqss_dsc[22];
  dscqss_dsc[58] = dscqss1dsc23 + dscqss1dscqss0 * dscqss_dsc[23];
  dscqss_dsc[59] = dscqss1dsc24 + dscqss1dscqss0 * dscqss_dsc[24];
  dscqss_dsc[60] = dscqss1dsc25 + dscqss1dscqss0 * dscqss_dsc[25];
  dscqss_dsc[61] = dscqss1dsc26 + dscqss1dscqss0 * dscqss_dsc[26];
  dscqss_dsc[62] = dscqss1dsc27 + dscqss1dscqss0 * dscqss_dsc[27];
  dscqss_dsc[63] = dscqss1dsc28 + dscqss1dscqss0 * dscqss_dsc[28];
  dscqss_dsc[64] = dscqss1dsc29 + dscqss1dscqss0 * dscqss_dsc[29];
  dscqss_dsc[65] = dscqss1dsc30 + dscqss1dscqss0 * dscqss_dsc[30];
  dscqss_dsc[66] = dscqss1dsc31 + dscqss1dscqss0 * dscqss_dsc[31];
  dscqss_dsc[67] = dscqss1dsc32 + dscqss1dscqss0 * dscqss_dsc[32];
  dscqss_dsc[68] = dscqss1dsc33 + dscqss1dscqss0 * dscqss_dsc[33];
  dscqss_dsc[69] = dscqss1dsc34 + dscqss1dscqss0 * dscqss_dsc[34];
  dscqss_dsc[595] = dscqss17dsc0 + dscqss17dscqss16 * dscqss_dsc[560];
  dscqss_dsc[596] = dscqss17dsc1 + dscqss17dscqss16 * dscqss_dsc[561];
  dscqss_dsc[597] = dscqss17dsc2 + dscqss17dscqss16 * dscqss_dsc[562];
  dscqss_dsc[598] = dscqss17dsc3 + dscqss17dscqss16 * dscqss_dsc[563];
  dscqss_dsc[599] = dscqss17dsc4 + dscqss17dscqss16 * dscqss_dsc[564];
  dscqss_dsc[600] = dscqss17dsc5 + dscqss17dscqss16 * dscqss_dsc[565];
  dscqss_dsc[601] = dscqss17dsc6 + dscqss17dscqss16 * dscqss_dsc[566];
  dscqss_dsc[602] = dscqss17dsc7 + dscqss17dscqss16 * dscqss_dsc[567];
  dscqss_dsc[603] = dscqss17dsc8 + dscqss17dscqss16 * dscqss_dsc[568];
  dscqss_dsc[604] = dscqss17dsc9 + dscqss17dscqss16 * dscqss_dsc[569];
  dscqss_dsc[605] = dscqss17dsc10 + dscqss17dscqss16 * dscqss_dsc[570];
  dscqss_dsc[606] = dscqss17dsc11 + dscqss17dscqss16 * dscqss_dsc[571];
  dscqss_dsc[607] = dscqss17dsc12 + dscqss17dscqss16 * dscqss_dsc[572];
  dscqss_dsc[608] = dscqss17dsc13 + dscqss17dscqss16 * dscqss_dsc[573];
  dscqss_dsc[609] = dscqss17dsc14 + dscqss17dscqss16 * dscqss_dsc[574];
  dscqss_dsc[610] = dscqss17dsc15 + dscqss17dscqss16 * dscqss_dsc[575];
  dscqss_dsc[611] = dscqss17dsc16 + dscqss17dscqss16 * dscqss_dsc[576];
  dscqss_dsc[612] = dscqss17dsc17 + dscqss17dscqss16 * dscqss_dsc[577];
  dscqss_dsc[613] = dscqss17dsc18 + dscqss17dscqss16 * dscqss_dsc[578];
  dscqss_dsc[614] = dscqss17dsc19 + dscqss17dscqss16 * dscqss_dsc[579];
  dscqss_dsc[615] = dscqss17dsc20 + dscqss17dscqss16 * dscqss_dsc[580];
  dscqss_dsc[616] = dscqss17dsc21 + dscqss17dscqss16 * dscqss_dsc[581];
  dscqss_dsc[617] = dscqss17dsc22 + dscqss17dscqss16 * dscqss_dsc[582];
  dscqss_dsc[618] = dscqss17dsc23 + dscqss17dscqss16 * dscqss_dsc[583];
  dscqss_dsc[619] = dscqss17dsc24 + dscqss17dscqss16 * dscqss_dsc[584];
  dscqss_dsc[620] = dscqss17dsc25 + dscqss17dscqss16 * dscqss_dsc[585];
  dscqss_dsc[621] = dscqss17dsc26 + dscqss17dscqss16 * dscqss_dsc[586];
  dscqss_dsc[622] = dscqss17dsc27 + dscqss17dscqss16 * dscqss_dsc[587];
  dscqss_dsc[623] = dscqss17dsc28 + dscqss17dscqss16 * dscqss_dsc[588];
  dscqss_dsc[624] = dscqss17dsc29 + dscqss17dscqss16 * dscqss_dsc[589];
  dscqss_dsc[625] = dscqss17dsc30 + dscqss17dscqss16 * dscqss_dsc[590];
  dscqss_dsc[626] = dscqss17dsc31 + dscqss17dscqss16 * dscqss_dsc[591];
  dscqss_dsc[627] = dscqss17dsc32 + dscqss17dscqss16 * dscqss_dsc[592];
  dscqss_dsc[628] = dscqss17dsc33 + dscqss17dscqss16 * dscqss_dsc[593];
  dscqss_dsc[629] = dscqss17dsc34 + dscqss17dscqss16 * dscqss_dsc[594];
  dscqss_dsc[70] = dscqss2dsc0 + dscqss2dscqss0 * dscqss_dsc[0] +
                   dscqss2dscqss1 * dscqss_dsc[35];
  dscqss_dsc[71] = dscqss2dsc1 + dscqss2dscqss0 * dscqss_dsc[1] +
                   dscqss2dscqss1 * dscqss_dsc[36];
  dscqss_dsc[72] = dscqss2dsc2 + dscqss2dscqss0 * dscqss_dsc[2] +
                   dscqss2dscqss1 * dscqss_dsc[37];
  dscqss_dsc[73] = dscqss2dsc3 + dscqss2dscqss0 * dscqss_dsc[3] +
                   dscqss2dscqss1 * dscqss_dsc[38];
  dscqss_dsc[74] = dscqss2dsc4 + dscqss2dscqss0 * dscqss_dsc[4] +
                   dscqss2dscqss1 * dscqss_dsc[39];
  dscqss_dsc[75] = dscqss2dsc5 + dscqss2dscqss0 * dscqss_dsc[5] +
                   dscqss2dscqss1 * dscqss_dsc[40];
  dscqss_dsc[76] = dscqss2dsc6 + dscqss2dscqss0 * dscqss_dsc[6] +
                   dscqss2dscqss1 * dscqss_dsc[41];
  dscqss_dsc[77] = dscqss2dsc7 + dscqss2dscqss0 * dscqss_dsc[7] +
                   dscqss2dscqss1 * dscqss_dsc[42];
  dscqss_dsc[78] = dscqss2dsc8 + dscqss2dscqss0 * dscqss_dsc[8] +
                   dscqss2dscqss1 * dscqss_dsc[43];
  dscqss_dsc[79] = dscqss2dsc9 + dscqss2dscqss0 * dscqss_dsc[9] +
                   dscqss2dscqss1 * dscqss_dsc[44];
  dscqss_dsc[80] = dscqss2dsc10 + dscqss2dscqss0 * dscqss_dsc[10] +
                   dscqss2dscqss1 * dscqss_dsc[45];
  dscqss_dsc[81] = dscqss2dsc11 + dscqss2dscqss0 * dscqss_dsc[11] +
                   dscqss2dscqss1 * dscqss_dsc[46];
  dscqss_dsc[82] = dscqss2dsc12 + dscqss2dscqss0 * dscqss_dsc[12] +
                   dscqss2dscqss1 * dscqss_dsc[47];
  dscqss_dsc[83] = dscqss2dsc13 + dscqss2dscqss0 * dscqss_dsc[13] +
                   dscqss2dscqss1 * dscqss_dsc[48];
  dscqss_dsc[84] = dscqss2dsc14 + dscqss2dscqss0 * dscqss_dsc[14] +
                   dscqss2dscqss1 * dscqss_dsc[49];
  dscqss_dsc[85] = dscqss2dsc15 + dscqss2dscqss0 * dscqss_dsc[15] +
                   dscqss2dscqss1 * dscqss_dsc[50];
  dscqss_dsc[86] = dscqss2dsc16 + dscqss2dscqss0 * dscqss_dsc[16] +
                   dscqss2dscqss1 * dscqss_dsc[51];
  dscqss_dsc[87] = dscqss2dsc17 + dscqss2dscqss0 * dscqss_dsc[17] +
                   dscqss2dscqss1 * dscqss_dsc[52];
  dscqss_dsc[88] = dscqss2dsc18 + dscqss2dscqss0 * dscqss_dsc[18] +
                   dscqss2dscqss1 * dscqss_dsc[53];
  dscqss_dsc[89] = dscqss2dsc19 + dscqss2dscqss0 * dscqss_dsc[19] +
                   dscqss2dscqss1 * dscqss_dsc[54];
  dscqss_dsc[90] = dscqss2dsc20 + dscqss2dscqss0 * dscqss_dsc[20] +
                   dscqss2dscqss1 * dscqss_dsc[55];
  dscqss_dsc[91] = dscqss2dsc21 + dscqss2dscqss0 * dscqss_dsc[21] +
                   dscqss2dscqss1 * dscqss_dsc[56];
  dscqss_dsc[92] = dscqss2dsc22 + dscqss2dscqss0 * dscqss_dsc[22] +
                   dscqss2dscqss1 * dscqss_dsc[57];
  dscqss_dsc[93] = dscqss2dsc23 + dscqss2dscqss0 * dscqss_dsc[23] +
                   dscqss2dscqss1 * dscqss_dsc[58];
  dscqss_dsc[94] = dscqss2dsc24 + dscqss2dscqss0 * dscqss_dsc[24] +
                   dscqss2dscqss1 * dscqss_dsc[59];
  dscqss_dsc[95] = dscqss2dsc25 + dscqss2dscqss0 * dscqss_dsc[25] +
                   dscqss2dscqss1 * dscqss_dsc[60];
  dscqss_dsc[96] = dscqss2dsc26 + dscqss2dscqss0 * dscqss_dsc[26] +
                   dscqss2dscqss1 * dscqss_dsc[61];
  dscqss_dsc[97] = dscqss2dsc27 + dscqss2dscqss0 * dscqss_dsc[27] +
                   dscqss2dscqss1 * dscqss_dsc[62];
  dscqss_dsc[98] = dscqss2dsc28 + dscqss2dscqss0 * dscqss_dsc[28] +
                   dscqss2dscqss1 * dscqss_dsc[63];
  dscqss_dsc[99] = dscqss2dsc29 + dscqss2dscqss0 * dscqss_dsc[29] +
                   dscqss2dscqss1 * dscqss_dsc[64];
  dscqss_dsc[100] = dscqss2dsc30 + dscqss2dscqss0 * dscqss_dsc[30] +
                    dscqss2dscqss1 * dscqss_dsc[65];
  dscqss_dsc[101] = dscqss2dsc31 + dscqss2dscqss0 * dscqss_dsc[31] +
                    dscqss2dscqss1 * dscqss_dsc[66];
  dscqss_dsc[102] = dscqss2dsc32 + dscqss2dscqss0 * dscqss_dsc[32] +
                    dscqss2dscqss1 * dscqss_dsc[67];
  dscqss_dsc[103] = dscqss2dsc33 + dscqss2dscqss0 * dscqss_dsc[33] +
                    dscqss2dscqss1 * dscqss_dsc[68];
  dscqss_dsc[104] = dscqss2dsc34 + dscqss2dscqss0 * dscqss_dsc[34] +
                    dscqss2dscqss1 * dscqss_dsc[69];
  dscqss_dsc[105] = dscqss3dsc0 + dscqss3dscqss1 * dscqss_dsc[35];
  dscqss_dsc[106] = dscqss3dsc1 + dscqss3dscqss1 * dscqss_dsc[36];
  dscqss_dsc[107] = dscqss3dsc2 + dscqss3dscqss1 * dscqss_dsc[37];
  dscqss_dsc[108] = dscqss3dsc3 + dscqss3dscqss1 * dscqss_dsc[38];
  dscqss_dsc[109] = dscqss3dsc4 + dscqss3dscqss1 * dscqss_dsc[39];
  dscqss_dsc[110] = dscqss3dsc5 + dscqss3dscqss1 * dscqss_dsc[40];
  dscqss_dsc[111] = dscqss3dsc6 + dscqss3dscqss1 * dscqss_dsc[41];
  dscqss_dsc[112] = dscqss3dsc7 + dscqss3dscqss1 * dscqss_dsc[42];
  dscqss_dsc[113] = dscqss3dsc8 + dscqss3dscqss1 * dscqss_dsc[43];
  dscqss_dsc[114] = dscqss3dsc9 + dscqss3dscqss1 * dscqss_dsc[44];
  dscqss_dsc[115] = dscqss3dsc10 + dscqss3dscqss1 * dscqss_dsc[45];
  dscqss_dsc[116] = dscqss3dsc11 + dscqss3dscqss1 * dscqss_dsc[46];
  dscqss_dsc[117] = dscqss3dsc12 + dscqss3dscqss1 * dscqss_dsc[47];
  dscqss_dsc[118] = dscqss3dsc13 + dscqss3dscqss1 * dscqss_dsc[48];
  dscqss_dsc[119] = dscqss3dsc14 + dscqss3dscqss1 * dscqss_dsc[49];
  dscqss_dsc[120] = dscqss3dsc15 + dscqss3dscqss1 * dscqss_dsc[50];
  dscqss_dsc[121] = dscqss3dsc16 + dscqss3dscqss1 * dscqss_dsc[51];
  dscqss_dsc[122] = dscqss3dsc17 + dscqss3dscqss1 * dscqss_dsc[52];
  dscqss_dsc[123] = dscqss3dsc18 + dscqss3dscqss1 * dscqss_dsc[53];
  dscqss_dsc[124] = dscqss3dsc19 + dscqss3dscqss1 * dscqss_dsc[54];
  dscqss_dsc[125] = dscqss3dsc20 + dscqss3dscqss1 * dscqss_dsc[55];
  dscqss_dsc[126] = dscqss3dsc21 + dscqss3dscqss1 * dscqss_dsc[56];
  dscqss_dsc[127] = dscqss3dsc22 + dscqss3dscqss1 * dscqss_dsc[57];
  dscqss_dsc[128] = dscqss3dsc23 + dscqss3dscqss1 * dscqss_dsc[58];
  dscqss_dsc[129] = dscqss3dsc24 + dscqss3dscqss1 * dscqss_dsc[59];
  dscqss_dsc[130] = dscqss3dsc25 + dscqss3dscqss1 * dscqss_dsc[60];
  dscqss_dsc[131] = dscqss3dsc26 + dscqss3dscqss1 * dscqss_dsc[61];
  dscqss_dsc[132] = dscqss3dsc27 + dscqss3dscqss1 * dscqss_dsc[62];
  dscqss_dsc[133] = dscqss3dsc28 + dscqss3dscqss1 * dscqss_dsc[63];
  dscqss_dsc[134] = dscqss3dsc29 + dscqss3dscqss1 * dscqss_dsc[64];
  dscqss_dsc[135] = dscqss3dsc30 + dscqss3dscqss1 * dscqss_dsc[65];
  dscqss_dsc[136] = dscqss3dsc31 + dscqss3dscqss1 * dscqss_dsc[66];
  dscqss_dsc[137] = dscqss3dsc32 + dscqss3dscqss1 * dscqss_dsc[67];
  dscqss_dsc[138] = dscqss3dsc33 + dscqss3dscqss1 * dscqss_dsc[68];
  dscqss_dsc[139] = dscqss3dsc34 + dscqss3dscqss1 * dscqss_dsc[69];
  dscqss_dsc[140] = dscqss4dsc0 + dscqss4dscqss2 * dscqss_dsc[70];
  dscqss_dsc[141] = dscqss4dsc1 + dscqss4dscqss2 * dscqss_dsc[71];
  dscqss_dsc[142] = dscqss4dsc2 + dscqss4dscqss2 * dscqss_dsc[72];
  dscqss_dsc[143] = dscqss4dsc3 + dscqss4dscqss2 * dscqss_dsc[73];
  dscqss_dsc[144] = dscqss4dsc4 + dscqss4dscqss2 * dscqss_dsc[74];
  dscqss_dsc[145] = dscqss4dsc5 + dscqss4dscqss2 * dscqss_dsc[75];
  dscqss_dsc[146] = dscqss4dsc6 + dscqss4dscqss2 * dscqss_dsc[76];
  dscqss_dsc[147] = dscqss4dsc7 + dscqss4dscqss2 * dscqss_dsc[77];
  dscqss_dsc[148] = dscqss4dsc8 + dscqss4dscqss2 * dscqss_dsc[78];
  dscqss_dsc[149] = dscqss4dsc9 + dscqss4dscqss2 * dscqss_dsc[79];
  dscqss_dsc[150] = dscqss4dsc10 + dscqss4dscqss2 * dscqss_dsc[80];
  dscqss_dsc[151] = dscqss4dsc11 + dscqss4dscqss2 * dscqss_dsc[81];
  dscqss_dsc[152] = dscqss4dsc12 + dscqss4dscqss2 * dscqss_dsc[82];
  dscqss_dsc[153] = dscqss4dsc13 + dscqss4dscqss2 * dscqss_dsc[83];
  dscqss_dsc[154] = dscqss4dsc14 + dscqss4dscqss2 * dscqss_dsc[84];
  dscqss_dsc[155] = dscqss4dsc15 + dscqss4dscqss2 * dscqss_dsc[85];
  dscqss_dsc[156] = dscqss4dsc16 + dscqss4dscqss2 * dscqss_dsc[86];
  dscqss_dsc[157] = dscqss4dsc17 + dscqss4dscqss2 * dscqss_dsc[87];
  dscqss_dsc[158] = dscqss4dsc18 + dscqss4dscqss2 * dscqss_dsc[88];
  dscqss_dsc[159] = dscqss4dsc19 + dscqss4dscqss2 * dscqss_dsc[89];
  dscqss_dsc[160] = dscqss4dsc20 + dscqss4dscqss2 * dscqss_dsc[90];
  dscqss_dsc[161] = dscqss4dsc21 + dscqss4dscqss2 * dscqss_dsc[91];
  dscqss_dsc[162] = dscqss4dsc22 + dscqss4dscqss2 * dscqss_dsc[92];
  dscqss_dsc[163] = dscqss4dsc23 + dscqss4dscqss2 * dscqss_dsc[93];
  dscqss_dsc[164] = dscqss4dsc24 + dscqss4dscqss2 * dscqss_dsc[94];
  dscqss_dsc[165] = dscqss4dsc25 + dscqss4dscqss2 * dscqss_dsc[95];
  dscqss_dsc[166] = dscqss4dsc26 + dscqss4dscqss2 * dscqss_dsc[96];
  dscqss_dsc[167] = dscqss4dsc27 + dscqss4dscqss2 * dscqss_dsc[97];
  dscqss_dsc[168] = dscqss4dsc28 + dscqss4dscqss2 * dscqss_dsc[98];
  dscqss_dsc[169] = dscqss4dsc29 + dscqss4dscqss2 * dscqss_dsc[99];
  dscqss_dsc[170] = dscqss4dsc30 + dscqss4dscqss2 * dscqss_dsc[100];
  dscqss_dsc[171] = dscqss4dsc31 + dscqss4dscqss2 * dscqss_dsc[101];
  dscqss_dsc[172] = dscqss4dsc32 + dscqss4dscqss2 * dscqss_dsc[102];
  dscqss_dsc[173] = dscqss4dsc33 + dscqss4dscqss2 * dscqss_dsc[103];
  dscqss_dsc[174] = dscqss4dsc34 + dscqss4dscqss2 * dscqss_dsc[104];
  dscqss_dsc[175] = dscqss5dsc0 + dscqss5dscqss1 * dscqss_dsc[35] +
                    dscqss5dscqss2 * dscqss_dsc[70];
  dscqss_dsc[176] = dscqss5dsc1 + dscqss5dscqss1 * dscqss_dsc[36] +
                    dscqss5dscqss2 * dscqss_dsc[71];
  dscqss_dsc[177] = dscqss5dsc2 + dscqss5dscqss1 * dscqss_dsc[37] +
                    dscqss5dscqss2 * dscqss_dsc[72];
  dscqss_dsc[178] = dscqss5dsc3 + dscqss5dscqss1 * dscqss_dsc[38] +
                    dscqss5dscqss2 * dscqss_dsc[73];
  dscqss_dsc[179] = dscqss5dsc4 + dscqss5dscqss1 * dscqss_dsc[39] +
                    dscqss5dscqss2 * dscqss_dsc[74];
  dscqss_dsc[180] = dscqss5dsc5 + dscqss5dscqss1 * dscqss_dsc[40] +
                    dscqss5dscqss2 * dscqss_dsc[75];
  dscqss_dsc[181] = dscqss5dsc6 + dscqss5dscqss1 * dscqss_dsc[41] +
                    dscqss5dscqss2 * dscqss_dsc[76];
  dscqss_dsc[182] = dscqss5dsc7 + dscqss5dscqss1 * dscqss_dsc[42] +
                    dscqss5dscqss2 * dscqss_dsc[77];
  dscqss_dsc[183] = dscqss5dsc8 + dscqss5dscqss1 * dscqss_dsc[43] +
                    dscqss5dscqss2 * dscqss_dsc[78];
  dscqss_dsc[184] = dscqss5dsc9 + dscqss5dscqss1 * dscqss_dsc[44] +
                    dscqss5dscqss2 * dscqss_dsc[79];
  dscqss_dsc[185] = dscqss5dsc10 + dscqss5dscqss1 * dscqss_dsc[45] +
                    dscqss5dscqss2 * dscqss_dsc[80];
  dscqss_dsc[186] = dscqss5dsc11 + dscqss5dscqss1 * dscqss_dsc[46] +
                    dscqss5dscqss2 * dscqss_dsc[81];
  dscqss_dsc[187] = dscqss5dsc12 + dscqss5dscqss1 * dscqss_dsc[47] +
                    dscqss5dscqss2 * dscqss_dsc[82];
  dscqss_dsc[188] = dscqss5dsc13 + dscqss5dscqss1 * dscqss_dsc[48] +
                    dscqss5dscqss2 * dscqss_dsc[83];
  dscqss_dsc[189] = dscqss5dsc14 + dscqss5dscqss1 * dscqss_dsc[49] +
                    dscqss5dscqss2 * dscqss_dsc[84];
  dscqss_dsc[190] = dscqss5dsc15 + dscqss5dscqss1 * dscqss_dsc[50] +
                    dscqss5dscqss2 * dscqss_dsc[85];
  dscqss_dsc[191] = dscqss5dsc16 + dscqss5dscqss1 * dscqss_dsc[51] +
                    dscqss5dscqss2 * dscqss_dsc[86];
  dscqss_dsc[192] = dscqss5dsc17 + dscqss5dscqss1 * dscqss_dsc[52] +
                    dscqss5dscqss2 * dscqss_dsc[87];
  dscqss_dsc[193] = dscqss5dsc18 + dscqss5dscqss1 * dscqss_dsc[53] +
                    dscqss5dscqss2 * dscqss_dsc[88];
  dscqss_dsc[194] = dscqss5dsc19 + dscqss5dscqss1 * dscqss_dsc[54] +
                    dscqss5dscqss2 * dscqss_dsc[89];
  dscqss_dsc[195] = dscqss5dsc20 + dscqss5dscqss1 * dscqss_dsc[55] +
                    dscqss5dscqss2 * dscqss_dsc[90];
  dscqss_dsc[196] = dscqss5dsc21 + dscqss5dscqss1 * dscqss_dsc[56] +
                    dscqss5dscqss2 * dscqss_dsc[91];
  dscqss_dsc[197] = dscqss5dsc22 + dscqss5dscqss1 * dscqss_dsc[57] +
                    dscqss5dscqss2 * dscqss_dsc[92];
  dscqss_dsc[198] = dscqss5dsc23 + dscqss5dscqss1 * dscqss_dsc[58] +
                    dscqss5dscqss2 * dscqss_dsc[93];
  dscqss_dsc[199] = dscqss5dsc24 + dscqss5dscqss1 * dscqss_dsc[59] +
                    dscqss5dscqss2 * dscqss_dsc[94];
  dscqss_dsc[200] = dscqss5dsc25 + dscqss5dscqss1 * dscqss_dsc[60] +
                    dscqss5dscqss2 * dscqss_dsc[95];
  dscqss_dsc[201] = dscqss5dsc26 + dscqss5dscqss1 * dscqss_dsc[61] +
                    dscqss5dscqss2 * dscqss_dsc[96];
  dscqss_dsc[202] = dscqss5dsc27 + dscqss5dscqss1 * dscqss_dsc[62] +
                    dscqss5dscqss2 * dscqss_dsc[97];
  dscqss_dsc[203] = dscqss5dsc28 + dscqss5dscqss1 * dscqss_dsc[63] +
                    dscqss5dscqss2 * dscqss_dsc[98];
  dscqss_dsc[204] = dscqss5dsc29 + dscqss5dscqss1 * dscqss_dsc[64] +
                    dscqss5dscqss2 * dscqss_dsc[99];
  dscqss_dsc[205] = dscqss5dsc30 + dscqss5dscqss1 * dscqss_dsc[65] +
                    dscqss5dscqss2 * dscqss_dsc[100];
  dscqss_dsc[206] = dscqss5dsc31 + dscqss5dscqss1 * dscqss_dsc[66] +
                    dscqss5dscqss2 * dscqss_dsc[101];
  dscqss_dsc[207] = dscqss5dsc32 + dscqss5dscqss1 * dscqss_dsc[67] +
                    dscqss5dscqss2 * dscqss_dsc[102];
  dscqss_dsc[208] = dscqss5dsc33 + dscqss5dscqss1 * dscqss_dsc[68] +
                    dscqss5dscqss2 * dscqss_dsc[103];
  dscqss_dsc[209] = dscqss5dsc34 + dscqss5dscqss1 * dscqss_dsc[69] +
                    dscqss5dscqss2 * dscqss_dsc[104];
  dscqss_dsc[210] = dscqss6dsc0 + dscqss6dscqss5 * dscqss_dsc[175];
  dscqss_dsc[211] = dscqss6dsc1 + dscqss6dscqss5 * dscqss_dsc[176];
  dscqss_dsc[212] = dscqss6dsc2 + dscqss6dscqss5 * dscqss_dsc[177];
  dscqss_dsc[213] = dscqss6dsc3 + dscqss6dscqss5 * dscqss_dsc[178];
  dscqss_dsc[214] = dscqss6dsc4 + dscqss6dscqss5 * dscqss_dsc[179];
  dscqss_dsc[215] = dscqss6dsc5 + dscqss6dscqss5 * dscqss_dsc[180];
  dscqss_dsc[216] = dscqss6dsc6 + dscqss6dscqss5 * dscqss_dsc[181];
  dscqss_dsc[217] = dscqss6dsc7 + dscqss6dscqss5 * dscqss_dsc[182];
  dscqss_dsc[218] = dscqss6dsc8 + dscqss6dscqss5 * dscqss_dsc[183];
  dscqss_dsc[219] = dscqss6dsc9 + dscqss6dscqss5 * dscqss_dsc[184];
  dscqss_dsc[220] = dscqss6dsc10 + dscqss6dscqss5 * dscqss_dsc[185];
  dscqss_dsc[221] = dscqss6dsc11 + dscqss6dscqss5 * dscqss_dsc[186];
  dscqss_dsc[222] = dscqss6dsc12 + dscqss6dscqss5 * dscqss_dsc[187];
  dscqss_dsc[223] = dscqss6dsc13 + dscqss6dscqss5 * dscqss_dsc[188];
  dscqss_dsc[224] = dscqss6dsc14 + dscqss6dscqss5 * dscqss_dsc[189];
  dscqss_dsc[225] = dscqss6dsc15 + dscqss6dscqss5 * dscqss_dsc[190];
  dscqss_dsc[226] = dscqss6dsc16 + dscqss6dscqss5 * dscqss_dsc[191];
  dscqss_dsc[227] = dscqss6dsc17 + dscqss6dscqss5 * dscqss_dsc[192];
  dscqss_dsc[228] = dscqss6dsc18 + dscqss6dscqss5 * dscqss_dsc[193];
  dscqss_dsc[229] = dscqss6dsc19 + dscqss6dscqss5 * dscqss_dsc[194];
  dscqss_dsc[230] = dscqss6dsc20 + dscqss6dscqss5 * dscqss_dsc[195];
  dscqss_dsc[231] = dscqss6dsc21 + dscqss6dscqss5 * dscqss_dsc[196];
  dscqss_dsc[232] = dscqss6dsc22 + dscqss6dscqss5 * dscqss_dsc[197];
  dscqss_dsc[233] = dscqss6dsc23 + dscqss6dscqss5 * dscqss_dsc[198];
  dscqss_dsc[234] = dscqss6dsc24 + dscqss6dscqss5 * dscqss_dsc[199];
  dscqss_dsc[235] = dscqss6dsc25 + dscqss6dscqss5 * dscqss_dsc[200];
  dscqss_dsc[236] = dscqss6dsc26 + dscqss6dscqss5 * dscqss_dsc[201];
  dscqss_dsc[237] = dscqss6dsc27 + dscqss6dscqss5 * dscqss_dsc[202];
  dscqss_dsc[238] = dscqss6dsc28 + dscqss6dscqss5 * dscqss_dsc[203];
  dscqss_dsc[239] = dscqss6dsc29 + dscqss6dscqss5 * dscqss_dsc[204];
  dscqss_dsc[240] = dscqss6dsc30 + dscqss6dscqss5 * dscqss_dsc[205];
  dscqss_dsc[241] = dscqss6dsc31 + dscqss6dscqss5 * dscqss_dsc[206];
  dscqss_dsc[242] = dscqss6dsc32 + dscqss6dscqss5 * dscqss_dsc[207];
  dscqss_dsc[243] = dscqss6dsc33 + dscqss6dscqss5 * dscqss_dsc[208];
  dscqss_dsc[244] = dscqss6dsc34 + dscqss6dscqss5 * dscqss_dsc[209];
  dscqss_dsc[245] = dscqss7dsc0 + dscqss7dscqss6 * dscqss_dsc[210];
  dscqss_dsc[246] = dscqss7dsc1 + dscqss7dscqss6 * dscqss_dsc[211];
  dscqss_dsc[247] = dscqss7dsc2 + dscqss7dscqss6 * dscqss_dsc[212];
  dscqss_dsc[248] = dscqss7dsc3 + dscqss7dscqss6 * dscqss_dsc[213];
  dscqss_dsc[249] = dscqss7dsc4 + dscqss7dscqss6 * dscqss_dsc[214];
  dscqss_dsc[250] = dscqss7dsc5 + dscqss7dscqss6 * dscqss_dsc[215];
  dscqss_dsc[251] = dscqss7dsc6 + dscqss7dscqss6 * dscqss_dsc[216];
  dscqss_dsc[252] = dscqss7dsc7 + dscqss7dscqss6 * dscqss_dsc[217];
  dscqss_dsc[253] = dscqss7dsc8 + dscqss7dscqss6 * dscqss_dsc[218];
  dscqss_dsc[254] = dscqss7dsc9 + dscqss7dscqss6 * dscqss_dsc[219];
  dscqss_dsc[255] = dscqss7dsc10 + dscqss7dscqss6 * dscqss_dsc[220];
  dscqss_dsc[256] = dscqss7dsc11 + dscqss7dscqss6 * dscqss_dsc[221];
  dscqss_dsc[257] = dscqss7dsc12 + dscqss7dscqss6 * dscqss_dsc[222];
  dscqss_dsc[258] = dscqss7dsc13 + dscqss7dscqss6 * dscqss_dsc[223];
  dscqss_dsc[259] = dscqss7dsc14 + dscqss7dscqss6 * dscqss_dsc[224];
  dscqss_dsc[260] = dscqss7dsc15 + dscqss7dscqss6 * dscqss_dsc[225];
  dscqss_dsc[261] = dscqss7dsc16 + dscqss7dscqss6 * dscqss_dsc[226];
  dscqss_dsc[262] = dscqss7dsc17 + dscqss7dscqss6 * dscqss_dsc[227];
  dscqss_dsc[263] = dscqss7dsc18 + dscqss7dscqss6 * dscqss_dsc[228];
  dscqss_dsc[264] = dscqss7dsc19 + dscqss7dscqss6 * dscqss_dsc[229];
  dscqss_dsc[265] = dscqss7dsc20 + dscqss7dscqss6 * dscqss_dsc[230];
  dscqss_dsc[266] = dscqss7dsc21 + dscqss7dscqss6 * dscqss_dsc[231];
  dscqss_dsc[267] = dscqss7dsc22 + dscqss7dscqss6 * dscqss_dsc[232];
  dscqss_dsc[268] = dscqss7dsc23 + dscqss7dscqss6 * dscqss_dsc[233];
  dscqss_dsc[269] = dscqss7dsc24 + dscqss7dscqss6 * dscqss_dsc[234];
  dscqss_dsc[270] = dscqss7dsc25 + dscqss7dscqss6 * dscqss_dsc[235];
  dscqss_dsc[271] = dscqss7dsc26 + dscqss7dscqss6 * dscqss_dsc[236];
  dscqss_dsc[272] = dscqss7dsc27 + dscqss7dscqss6 * dscqss_dsc[237];
  dscqss_dsc[273] = dscqss7dsc28 + dscqss7dscqss6 * dscqss_dsc[238];
  dscqss_dsc[274] = dscqss7dsc29 + dscqss7dscqss6 * dscqss_dsc[239];
  dscqss_dsc[275] = dscqss7dsc30 + dscqss7dscqss6 * dscqss_dsc[240];
  dscqss_dsc[276] = dscqss7dsc31 + dscqss7dscqss6 * dscqss_dsc[241];
  dscqss_dsc[277] = dscqss7dsc32 + dscqss7dscqss6 * dscqss_dsc[242];
  dscqss_dsc[278] = dscqss7dsc33 + dscqss7dscqss6 * dscqss_dsc[243];
  dscqss_dsc[279] = dscqss7dsc34 + dscqss7dscqss6 * dscqss_dsc[244];
  dscqss_dsc[315] = dscqss9dsc0 + dscqss9dscqss7 * dscqss_dsc[245];
  dscqss_dsc[316] = dscqss9dsc1 + dscqss9dscqss7 * dscqss_dsc[246];
  dscqss_dsc[317] = dscqss9dsc2 + dscqss9dscqss7 * dscqss_dsc[247];
  dscqss_dsc[318] = dscqss9dsc3 + dscqss9dscqss7 * dscqss_dsc[248];
  dscqss_dsc[319] = dscqss9dsc4 + dscqss9dscqss7 * dscqss_dsc[249];
  dscqss_dsc[320] = dscqss9dsc5 + dscqss9dscqss7 * dscqss_dsc[250];
  dscqss_dsc[321] = dscqss9dsc6 + dscqss9dscqss7 * dscqss_dsc[251];
  dscqss_dsc[322] = dscqss9dsc7 + dscqss9dscqss7 * dscqss_dsc[252];
  dscqss_dsc[323] = dscqss9dsc8 + dscqss9dscqss7 * dscqss_dsc[253];
  dscqss_dsc[324] = dscqss9dsc9 + dscqss9dscqss7 * dscqss_dsc[254];
  dscqss_dsc[325] = dscqss9dsc10 + dscqss9dscqss7 * dscqss_dsc[255];
  dscqss_dsc[326] = dscqss9dsc11 + dscqss9dscqss7 * dscqss_dsc[256];
  dscqss_dsc[327] = dscqss9dsc12 + dscqss9dscqss7 * dscqss_dsc[257];
  dscqss_dsc[328] = dscqss9dsc13 + dscqss9dscqss7 * dscqss_dsc[258];
  dscqss_dsc[329] = dscqss9dsc14 + dscqss9dscqss7 * dscqss_dsc[259];
  dscqss_dsc[330] = dscqss9dsc15 + dscqss9dscqss7 * dscqss_dsc[260];
  dscqss_dsc[331] = dscqss9dsc16 + dscqss9dscqss7 * dscqss_dsc[261];
  dscqss_dsc[332] = dscqss9dsc17 + dscqss9dscqss7 * dscqss_dsc[262];
  dscqss_dsc[333] = dscqss9dsc18 + dscqss9dscqss7 * dscqss_dsc[263];
  dscqss_dsc[334] = dscqss9dsc19 + dscqss9dscqss7 * dscqss_dsc[264];
  dscqss_dsc[335] = dscqss9dsc20 + dscqss9dscqss7 * dscqss_dsc[265];
  dscqss_dsc[336] = dscqss9dsc21 + dscqss9dscqss7 * dscqss_dsc[266];
  dscqss_dsc[337] = dscqss9dsc22 + dscqss9dscqss7 * dscqss_dsc[267];
  dscqss_dsc[338] = dscqss9dsc23 + dscqss9dscqss7 * dscqss_dsc[268];
  dscqss_dsc[339] = dscqss9dsc24 + dscqss9dscqss7 * dscqss_dsc[269];
  dscqss_dsc[340] = dscqss9dsc25 + dscqss9dscqss7 * dscqss_dsc[270];
  dscqss_dsc[341] = dscqss9dsc26 + dscqss9dscqss7 * dscqss_dsc[271];
  dscqss_dsc[342] = dscqss9dsc27 + dscqss9dscqss7 * dscqss_dsc[272];
  dscqss_dsc[343] = dscqss9dsc28 + dscqss9dscqss7 * dscqss_dsc[273];
  dscqss_dsc[344] = dscqss9dsc29 + dscqss9dscqss7 * dscqss_dsc[274];
  dscqss_dsc[345] = dscqss9dsc30 + dscqss9dscqss7 * dscqss_dsc[275];
  dscqss_dsc[346] = dscqss9dsc31 + dscqss9dscqss7 * dscqss_dsc[276];
  dscqss_dsc[347] = dscqss9dsc32 + dscqss9dscqss7 * dscqss_dsc[277];
  dscqss_dsc[348] = dscqss9dsc33 + dscqss9dscqss7 * dscqss_dsc[278];
  dscqss_dsc[349] = dscqss9dsc34 + dscqss9dscqss7 * dscqss_dsc[279];
  dscqss_dsc[385] = dscqss11dsc0 + dscqss11dscqss9 * dscqss_dsc[315];
  dscqss_dsc[386] = dscqss11dsc1 + dscqss11dscqss9 * dscqss_dsc[316];
  dscqss_dsc[387] = dscqss11dsc2 + dscqss11dscqss9 * dscqss_dsc[317];
  dscqss_dsc[388] = dscqss11dsc3 + dscqss11dscqss9 * dscqss_dsc[318];
  dscqss_dsc[389] = dscqss11dsc4 + dscqss11dscqss9 * dscqss_dsc[319];
  dscqss_dsc[390] = dscqss11dsc5 + dscqss11dscqss9 * dscqss_dsc[320];
  dscqss_dsc[391] = dscqss11dsc6 + dscqss11dscqss9 * dscqss_dsc[321];
  dscqss_dsc[392] = dscqss11dsc7 + dscqss11dscqss9 * dscqss_dsc[322];
  dscqss_dsc[393] = dscqss11dsc8 + dscqss11dscqss9 * dscqss_dsc[323];
  dscqss_dsc[394] = dscqss11dsc9 + dscqss11dscqss9 * dscqss_dsc[324];
  dscqss_dsc[395] = dscqss11dsc10 + dscqss11dscqss9 * dscqss_dsc[325];
  dscqss_dsc[396] = dscqss11dsc11 + dscqss11dscqss9 * dscqss_dsc[326];
  dscqss_dsc[397] = dscqss11dsc12 + dscqss11dscqss9 * dscqss_dsc[327];
  dscqss_dsc[398] = dscqss11dsc13 + dscqss11dscqss9 * dscqss_dsc[328];
  dscqss_dsc[399] = dscqss11dsc14 + dscqss11dscqss9 * dscqss_dsc[329];
  dscqss_dsc[400] = dscqss11dsc15 + dscqss11dscqss9 * dscqss_dsc[330];
  dscqss_dsc[401] = dscqss11dsc16 + dscqss11dscqss9 * dscqss_dsc[331];
  dscqss_dsc[402] = dscqss11dsc17 + dscqss11dscqss9 * dscqss_dsc[332];
  dscqss_dsc[403] = dscqss11dsc18 + dscqss11dscqss9 * dscqss_dsc[333];
  dscqss_dsc[404] = dscqss11dsc19 + dscqss11dscqss9 * dscqss_dsc[334];
  dscqss_dsc[405] = dscqss11dsc20 + dscqss11dscqss9 * dscqss_dsc[335];
  dscqss_dsc[406] = dscqss11dsc21 + dscqss11dscqss9 * dscqss_dsc[336];
  dscqss_dsc[407] = dscqss11dsc22 + dscqss11dscqss9 * dscqss_dsc[337];
  dscqss_dsc[408] = dscqss11dsc23 + dscqss11dscqss9 * dscqss_dsc[338];
  dscqss_dsc[409] = dscqss11dsc24 + dscqss11dscqss9 * dscqss_dsc[339];
  dscqss_dsc[410] = dscqss11dsc25 + dscqss11dscqss9 * dscqss_dsc[340];
  dscqss_dsc[411] = dscqss11dsc26 + dscqss11dscqss9 * dscqss_dsc[341];
  dscqss_dsc[412] = dscqss11dsc27 + dscqss11dscqss9 * dscqss_dsc[342];
  dscqss_dsc[413] = dscqss11dsc28 + dscqss11dscqss9 * dscqss_dsc[343];
  dscqss_dsc[414] = dscqss11dsc29 + dscqss11dscqss9 * dscqss_dsc[344];
  dscqss_dsc[415] = dscqss11dsc30 + dscqss11dscqss9 * dscqss_dsc[345];
  dscqss_dsc[416] = dscqss11dsc31 + dscqss11dscqss9 * dscqss_dsc[346];
  dscqss_dsc[417] = dscqss11dsc32 + dscqss11dscqss9 * dscqss_dsc[347];
  dscqss_dsc[418] = dscqss11dsc33 + dscqss11dscqss9 * dscqss_dsc[348];
  dscqss_dsc[419] = dscqss11dsc34 + dscqss11dscqss9 * dscqss_dsc[349];
  dscqss_dsc[420] = dscqss12dsc0 + dscqss12dscqss11 * dscqss_dsc[385];
  dscqss_dsc[421] = dscqss12dsc1 + dscqss12dscqss11 * dscqss_dsc[386];
  dscqss_dsc[422] = dscqss12dsc2 + dscqss12dscqss11 * dscqss_dsc[387];
  dscqss_dsc[423] = dscqss12dsc3 + dscqss12dscqss11 * dscqss_dsc[388];
  dscqss_dsc[424] = dscqss12dsc4 + dscqss12dscqss11 * dscqss_dsc[389];
  dscqss_dsc[425] = dscqss12dsc5 + dscqss12dscqss11 * dscqss_dsc[390];
  dscqss_dsc[426] = dscqss12dsc6 + dscqss12dscqss11 * dscqss_dsc[391];
  dscqss_dsc[427] = dscqss12dsc7 + dscqss12dscqss11 * dscqss_dsc[392];
  dscqss_dsc[428] = dscqss12dsc8 + dscqss12dscqss11 * dscqss_dsc[393];
  dscqss_dsc[429] = dscqss12dsc9 + dscqss12dscqss11 * dscqss_dsc[394];
  dscqss_dsc[430] = dscqss12dsc10 + dscqss12dscqss11 * dscqss_dsc[395];
  dscqss_dsc[431] = dscqss12dsc11 + dscqss12dscqss11 * dscqss_dsc[396];
  dscqss_dsc[432] = dscqss12dsc12 + dscqss12dscqss11 * dscqss_dsc[397];
  dscqss_dsc[433] = dscqss12dsc13 + dscqss12dscqss11 * dscqss_dsc[398];
  dscqss_dsc[434] = dscqss12dsc14 + dscqss12dscqss11 * dscqss_dsc[399];
  dscqss_dsc[435] = dscqss12dsc15 + dscqss12dscqss11 * dscqss_dsc[400];
  dscqss_dsc[436] = dscqss12dsc16 + dscqss12dscqss11 * dscqss_dsc[401];
  dscqss_dsc[437] = dscqss12dsc17 + dscqss12dscqss11 * dscqss_dsc[402];
  dscqss_dsc[438] = dscqss12dsc18 + dscqss12dscqss11 * dscqss_dsc[403];
  dscqss_dsc[439] = dscqss12dsc19 + dscqss12dscqss11 * dscqss_dsc[404];
  dscqss_dsc[440] = dscqss12dsc20 + dscqss12dscqss11 * dscqss_dsc[405];
  dscqss_dsc[441] = dscqss12dsc21 + dscqss12dscqss11 * dscqss_dsc[406];
  dscqss_dsc[442] = dscqss12dsc22 + dscqss12dscqss11 * dscqss_dsc[407];
  dscqss_dsc[443] = dscqss12dsc23 + dscqss12dscqss11 * dscqss_dsc[408];
  dscqss_dsc[444] = dscqss12dsc24 + dscqss12dscqss11 * dscqss_dsc[409];
  dscqss_dsc[445] = dscqss12dsc25 + dscqss12dscqss11 * dscqss_dsc[410];
  dscqss_dsc[446] = dscqss12dsc26 + dscqss12dscqss11 * dscqss_dsc[411];
  dscqss_dsc[447] = dscqss12dsc27 + dscqss12dscqss11 * dscqss_dsc[412];
  dscqss_dsc[448] = dscqss12dsc28 + dscqss12dscqss11 * dscqss_dsc[413];
  dscqss_dsc[449] = dscqss12dsc29 + dscqss12dscqss11 * dscqss_dsc[414];
  dscqss_dsc[450] = dscqss12dsc30 + dscqss12dscqss11 * dscqss_dsc[415];
  dscqss_dsc[451] = dscqss12dsc31 + dscqss12dscqss11 * dscqss_dsc[416];
  dscqss_dsc[452] = dscqss12dsc32 + dscqss12dscqss11 * dscqss_dsc[417];
  dscqss_dsc[453] = dscqss12dsc33 + dscqss12dscqss11 * dscqss_dsc[418];
  dscqss_dsc[454] = dscqss12dsc34 + dscqss12dscqss11 * dscqss_dsc[419];
  dscqss_dsc[490] = dscqss14dsc0 + dscqss14dscqss11 * dscqss_dsc[385];
  dscqss_dsc[491] = dscqss14dsc1 + dscqss14dscqss11 * dscqss_dsc[386];
  dscqss_dsc[492] = dscqss14dsc2 + dscqss14dscqss11 * dscqss_dsc[387];
  dscqss_dsc[493] = dscqss14dsc3 + dscqss14dscqss11 * dscqss_dsc[388];
  dscqss_dsc[494] = dscqss14dsc4 + dscqss14dscqss11 * dscqss_dsc[389];
  dscqss_dsc[495] = dscqss14dsc5 + dscqss14dscqss11 * dscqss_dsc[390];
  dscqss_dsc[496] = dscqss14dsc6 + dscqss14dscqss11 * dscqss_dsc[391];
  dscqss_dsc[497] = dscqss14dsc7 + dscqss14dscqss11 * dscqss_dsc[392];
  dscqss_dsc[498] = dscqss14dsc8 + dscqss14dscqss11 * dscqss_dsc[393];
  dscqss_dsc[499] = dscqss14dsc9 + dscqss14dscqss11 * dscqss_dsc[394];
  dscqss_dsc[500] = dscqss14dsc10 + dscqss14dscqss11 * dscqss_dsc[395];
  dscqss_dsc[501] = dscqss14dsc11 + dscqss14dscqss11 * dscqss_dsc[396];
  dscqss_dsc[502] = dscqss14dsc12 + dscqss14dscqss11 * dscqss_dsc[397];
  dscqss_dsc[503] = dscqss14dsc13 + dscqss14dscqss11 * dscqss_dsc[398];
  dscqss_dsc[504] = dscqss14dsc14 + dscqss14dscqss11 * dscqss_dsc[399];
  dscqss_dsc[505] = dscqss14dsc15 + dscqss14dscqss11 * dscqss_dsc[400];
  dscqss_dsc[506] = dscqss14dsc16 + dscqss14dscqss11 * dscqss_dsc[401];
  dscqss_dsc[507] = dscqss14dsc17 + dscqss14dscqss11 * dscqss_dsc[402];
  dscqss_dsc[508] = dscqss14dsc18 + dscqss14dscqss11 * dscqss_dsc[403];
  dscqss_dsc[509] = dscqss14dsc19 + dscqss14dscqss11 * dscqss_dsc[404];
  dscqss_dsc[510] = dscqss14dsc20 + dscqss14dscqss11 * dscqss_dsc[405];
  dscqss_dsc[511] = dscqss14dsc21 + dscqss14dscqss11 * dscqss_dsc[406];
  dscqss_dsc[512] = dscqss14dsc22 + dscqss14dscqss11 * dscqss_dsc[407];
  dscqss_dsc[513] = dscqss14dsc23 + dscqss14dscqss11 * dscqss_dsc[408];
  dscqss_dsc[514] = dscqss14dsc24 + dscqss14dscqss11 * dscqss_dsc[409];
  dscqss_dsc[515] = dscqss14dsc25 + dscqss14dscqss11 * dscqss_dsc[410];
  dscqss_dsc[516] = dscqss14dsc26 + dscqss14dscqss11 * dscqss_dsc[411];
  dscqss_dsc[517] = dscqss14dsc27 + dscqss14dscqss11 * dscqss_dsc[412];
  dscqss_dsc[518] = dscqss14dsc28 + dscqss14dscqss11 * dscqss_dsc[413];
  dscqss_dsc[519] = dscqss14dsc29 + dscqss14dscqss11 * dscqss_dsc[414];
  dscqss_dsc[520] = dscqss14dsc30 + dscqss14dscqss11 * dscqss_dsc[415];
  dscqss_dsc[521] = dscqss14dsc31 + dscqss14dscqss11 * dscqss_dsc[416];
  dscqss_dsc[522] = dscqss14dsc32 + dscqss14dscqss11 * dscqss_dsc[417];
  dscqss_dsc[523] = dscqss14dsc33 + dscqss14dscqss11 * dscqss_dsc[418];
  dscqss_dsc[524] = dscqss14dsc34 + dscqss14dscqss11 * dscqss_dsc[419];
  dscqss_dsc[455] = dscqss13dsc0 + dscqss13dscqss12 * dscqss_dsc[420];
  dscqss_dsc[456] = dscqss13dsc1 + dscqss13dscqss12 * dscqss_dsc[421];
  dscqss_dsc[457] = dscqss13dsc2 + dscqss13dscqss12 * dscqss_dsc[422];
  dscqss_dsc[458] = dscqss13dsc3 + dscqss13dscqss12 * dscqss_dsc[423];
  dscqss_dsc[459] = dscqss13dsc4 + dscqss13dscqss12 * dscqss_dsc[424];
  dscqss_dsc[460] = dscqss13dsc5 + dscqss13dscqss12 * dscqss_dsc[425];
  dscqss_dsc[461] = dscqss13dsc6 + dscqss13dscqss12 * dscqss_dsc[426];
  dscqss_dsc[462] = dscqss13dsc7 + dscqss13dscqss12 * dscqss_dsc[427];
  dscqss_dsc[463] = dscqss13dsc8 + dscqss13dscqss12 * dscqss_dsc[428];
  dscqss_dsc[464] = dscqss13dsc9 + dscqss13dscqss12 * dscqss_dsc[429];
  dscqss_dsc[465] = dscqss13dsc10 + dscqss13dscqss12 * dscqss_dsc[430];
  dscqss_dsc[466] = dscqss13dsc11 + dscqss13dscqss12 * dscqss_dsc[431];
  dscqss_dsc[467] = dscqss13dsc12 + dscqss13dscqss12 * dscqss_dsc[432];
  dscqss_dsc[468] = dscqss13dsc13 + dscqss13dscqss12 * dscqss_dsc[433];
  dscqss_dsc[469] = dscqss13dsc14 + dscqss13dscqss12 * dscqss_dsc[434];
  dscqss_dsc[470] = dscqss13dsc15 + dscqss13dscqss12 * dscqss_dsc[435];
  dscqss_dsc[471] = dscqss13dsc16 + dscqss13dscqss12 * dscqss_dsc[436];
  dscqss_dsc[472] = dscqss13dsc17 + dscqss13dscqss12 * dscqss_dsc[437];
  dscqss_dsc[473] = dscqss13dsc18 + dscqss13dscqss12 * dscqss_dsc[438];
  dscqss_dsc[474] = dscqss13dsc19 + dscqss13dscqss12 * dscqss_dsc[439];
  dscqss_dsc[475] = dscqss13dsc20 + dscqss13dscqss12 * dscqss_dsc[440];
  dscqss_dsc[476] = dscqss13dsc21 + dscqss13dscqss12 * dscqss_dsc[441];
  dscqss_dsc[477] = dscqss13dsc22 + dscqss13dscqss12 * dscqss_dsc[442];
  dscqss_dsc[478] = dscqss13dsc23 + dscqss13dscqss12 * dscqss_dsc[443];
  dscqss_dsc[479] = dscqss13dsc24 + dscqss13dscqss12 * dscqss_dsc[444];
  dscqss_dsc[480] = dscqss13dsc25 + dscqss13dscqss12 * dscqss_dsc[445];
  dscqss_dsc[481] = dscqss13dsc26 + dscqss13dscqss12 * dscqss_dsc[446];
  dscqss_dsc[482] = dscqss13dsc27 + dscqss13dscqss12 * dscqss_dsc[447];
  dscqss_dsc[483] = dscqss13dsc28 + dscqss13dscqss12 * dscqss_dsc[448];
  dscqss_dsc[484] = dscqss13dsc29 + dscqss13dscqss12 * dscqss_dsc[449];
  dscqss_dsc[485] = dscqss13dsc30 + dscqss13dscqss12 * dscqss_dsc[450];
  dscqss_dsc[486] = dscqss13dsc31 + dscqss13dscqss12 * dscqss_dsc[451];
  dscqss_dsc[487] = dscqss13dsc32 + dscqss13dscqss12 * dscqss_dsc[452];
  dscqss_dsc[488] = dscqss13dsc33 + dscqss13dscqss12 * dscqss_dsc[453];
  dscqss_dsc[489] = dscqss13dsc34 + dscqss13dscqss12 * dscqss_dsc[454];
  dscqss_dsc[525] =
    dscqss15dsc0 + dscqss15dscqss9 * dscqss_dsc[315] +
    dscqss15dscqss6 * dscqss_dsc[210] + dscqss15dscqss7 * dscqss_dsc[245] +
    dscqss15dscqss5 * dscqss_dsc[175] + dscqss15dscqss13 * dscqss_dsc[455];
  dscqss_dsc[526] =
    dscqss15dsc1 + dscqss15dscqss9 * dscqss_dsc[316] +
    dscqss15dscqss6 * dscqss_dsc[211] + dscqss15dscqss7 * dscqss_dsc[246] +
    dscqss15dscqss5 * dscqss_dsc[176] + dscqss15dscqss13 * dscqss_dsc[456];
  dscqss_dsc[527] =
    dscqss15dsc2 + dscqss15dscqss9 * dscqss_dsc[317] +
    dscqss15dscqss6 * dscqss_dsc[212] + dscqss15dscqss7 * dscqss_dsc[247] +
    dscqss15dscqss5 * dscqss_dsc[177] + dscqss15dscqss13 * dscqss_dsc[457];
  dscqss_dsc[528] =
    dscqss15dsc3 + dscqss15dscqss9 * dscqss_dsc[318] +
    dscqss15dscqss6 * dscqss_dsc[213] + dscqss15dscqss7 * dscqss_dsc[248] +
    dscqss15dscqss5 * dscqss_dsc[178] + dscqss15dscqss13 * dscqss_dsc[458];
  dscqss_dsc[529] =
    dscqss15dsc4 + dscqss15dscqss9 * dscqss_dsc[319] +
    dscqss15dscqss6 * dscqss_dsc[214] + dscqss15dscqss7 * dscqss_dsc[249] +
    dscqss15dscqss5 * dscqss_dsc[179] + dscqss15dscqss13 * dscqss_dsc[459];
  dscqss_dsc[530] =
    dscqss15dsc5 + dscqss15dscqss9 * dscqss_dsc[320] +
    dscqss15dscqss6 * dscqss_dsc[215] + dscqss15dscqss7 * dscqss_dsc[250] +
    dscqss15dscqss5 * dscqss_dsc[180] + dscqss15dscqss13 * dscqss_dsc[460];
  dscqss_dsc[531] =
    dscqss15dsc6 + dscqss15dscqss9 * dscqss_dsc[321] +
    dscqss15dscqss6 * dscqss_dsc[216] + dscqss15dscqss7 * dscqss_dsc[251] +
    dscqss15dscqss5 * dscqss_dsc[181] + dscqss15dscqss13 * dscqss_dsc[461];
  dscqss_dsc[532] =
    dscqss15dsc7 + dscqss15dscqss9 * dscqss_dsc[322] +
    dscqss15dscqss6 * dscqss_dsc[217] + dscqss15dscqss7 * dscqss_dsc[252] +
    dscqss15dscqss5 * dscqss_dsc[182] + dscqss15dscqss13 * dscqss_dsc[462];
  dscqss_dsc[533] =
    dscqss15dsc8 + dscqss15dscqss9 * dscqss_dsc[323] +
    dscqss15dscqss6 * dscqss_dsc[218] + dscqss15dscqss7 * dscqss_dsc[253] +
    dscqss15dscqss5 * dscqss_dsc[183] + dscqss15dscqss13 * dscqss_dsc[463];
  dscqss_dsc[534] =
    dscqss15dsc9 + dscqss15dscqss9 * dscqss_dsc[324] +
    dscqss15dscqss6 * dscqss_dsc[219] + dscqss15dscqss7 * dscqss_dsc[254] +
    dscqss15dscqss5 * dscqss_dsc[184] + dscqss15dscqss13 * dscqss_dsc[464];
  dscqss_dsc[535] =
    dscqss15dsc10 + dscqss15dscqss9 * dscqss_dsc[325] +
    dscqss15dscqss6 * dscqss_dsc[220] + dscqss15dscqss7 * dscqss_dsc[255] +
    dscqss15dscqss5 * dscqss_dsc[185] + dscqss15dscqss13 * dscqss_dsc[465];
  dscqss_dsc[536] =
    dscqss15dsc11 + dscqss15dscqss9 * dscqss_dsc[326] +
    dscqss15dscqss6 * dscqss_dsc[221] + dscqss15dscqss7 * dscqss_dsc[256] +
    dscqss15dscqss5 * dscqss_dsc[186] + dscqss15dscqss13 * dscqss_dsc[466];
  dscqss_dsc[537] =
    dscqss15dsc12 + dscqss15dscqss9 * dscqss_dsc[327] +
    dscqss15dscqss6 * dscqss_dsc[222] + dscqss15dscqss7 * dscqss_dsc[257] +
    dscqss15dscqss5 * dscqss_dsc[187] + dscqss15dscqss13 * dscqss_dsc[467];
  dscqss_dsc[538] =
    dscqss15dsc13 + dscqss15dscqss9 * dscqss_dsc[328] +
    dscqss15dscqss6 * dscqss_dsc[223] + dscqss15dscqss7 * dscqss_dsc[258] +
    dscqss15dscqss5 * dscqss_dsc[188] + dscqss15dscqss13 * dscqss_dsc[468];
  dscqss_dsc[539] =
    dscqss15dsc14 + dscqss15dscqss9 * dscqss_dsc[329] +
    dscqss15dscqss6 * dscqss_dsc[224] + dscqss15dscqss7 * dscqss_dsc[259] +
    dscqss15dscqss5 * dscqss_dsc[189] + dscqss15dscqss13 * dscqss_dsc[469];
  dscqss_dsc[540] =
    dscqss15dsc15 + dscqss15dscqss9 * dscqss_dsc[330] +
    dscqss15dscqss6 * dscqss_dsc[225] + dscqss15dscqss7 * dscqss_dsc[260] +
    dscqss15dscqss5 * dscqss_dsc[190] + dscqss15dscqss13 * dscqss_dsc[470];
  dscqss_dsc[541] =
    dscqss15dsc16 + dscqss15dscqss9 * dscqss_dsc[331] +
    dscqss15dscqss6 * dscqss_dsc[226] + dscqss15dscqss7 * dscqss_dsc[261] +
    dscqss15dscqss5 * dscqss_dsc[191] + dscqss15dscqss13 * dscqss_dsc[471];
  dscqss_dsc[542] =
    dscqss15dsc17 + dscqss15dscqss9 * dscqss_dsc[332] +
    dscqss15dscqss6 * dscqss_dsc[227] + dscqss15dscqss7 * dscqss_dsc[262] +
    dscqss15dscqss5 * dscqss_dsc[192] + dscqss15dscqss13 * dscqss_dsc[472];
  dscqss_dsc[543] =
    dscqss15dsc18 + dscqss15dscqss9 * dscqss_dsc[333] +
    dscqss15dscqss6 * dscqss_dsc[228] + dscqss15dscqss7 * dscqss_dsc[263] +
    dscqss15dscqss5 * dscqss_dsc[193] + dscqss15dscqss13 * dscqss_dsc[473];
  dscqss_dsc[544] =
    dscqss15dsc19 + dscqss15dscqss9 * dscqss_dsc[334] +
    dscqss15dscqss6 * dscqss_dsc[229] + dscqss15dscqss7 * dscqss_dsc[264] +
    dscqss15dscqss5 * dscqss_dsc[194] + dscqss15dscqss13 * dscqss_dsc[474];
  dscqss_dsc[545] =
    dscqss15dsc20 + dscqss15dscqss9 * dscqss_dsc[335] +
    dscqss15dscqss6 * dscqss_dsc[230] + dscqss15dscqss7 * dscqss_dsc[265] +
    dscqss15dscqss5 * dscqss_dsc[195] + dscqss15dscqss13 * dscqss_dsc[475];
  dscqss_dsc[546] =
    dscqss15dsc21 + dscqss15dscqss9 * dscqss_dsc[336] +
    dscqss15dscqss6 * dscqss_dsc[231] + dscqss15dscqss7 * dscqss_dsc[266] +
    dscqss15dscqss5 * dscqss_dsc[196] + dscqss15dscqss13 * dscqss_dsc[476];
  dscqss_dsc[547] =
    dscqss15dsc22 + dscqss15dscqss9 * dscqss_dsc[337] +
    dscqss15dscqss6 * dscqss_dsc[232] + dscqss15dscqss7 * dscqss_dsc[267] +
    dscqss15dscqss5 * dscqss_dsc[197] + dscqss15dscqss13 * dscqss_dsc[477];
  dscqss_dsc[548] =
    dscqss15dsc23 + dscqss15dscqss9 * dscqss_dsc[338] +
    dscqss15dscqss6 * dscqss_dsc[233] + dscqss15dscqss7 * dscqss_dsc[268] +
    dscqss15dscqss5 * dscqss_dsc[198] + dscqss15dscqss13 * dscqss_dsc[478];
  dscqss_dsc[549] =
    dscqss15dsc24 + dscqss15dscqss9 * dscqss_dsc[339] +
    dscqss15dscqss6 * dscqss_dsc[234] + dscqss15dscqss7 * dscqss_dsc[269] +
    dscqss15dscqss5 * dscqss_dsc[199] + dscqss15dscqss13 * dscqss_dsc[479];
  dscqss_dsc[550] =
    dscqss15dsc25 + dscqss15dscqss9 * dscqss_dsc[340] +
    dscqss15dscqss6 * dscqss_dsc[235] + dscqss15dscqss7 * dscqss_dsc[270] +
    dscqss15dscqss5 * dscqss_dsc[200] + dscqss15dscqss13 * dscqss_dsc[480];
  dscqss_dsc[551] =
    dscqss15dsc26 + dscqss15dscqss9 * dscqss_dsc[341] +
    dscqss15dscqss6 * dscqss_dsc[236] + dscqss15dscqss7 * dscqss_dsc[271] +
    dscqss15dscqss5 * dscqss_dsc[201] + dscqss15dscqss13 * dscqss_dsc[481];
  dscqss_dsc[552] =
    dscqss15dsc27 + dscqss15dscqss9 * dscqss_dsc[342] +
    dscqss15dscqss6 * dscqss_dsc[237] + dscqss15dscqss7 * dscqss_dsc[272] +
    dscqss15dscqss5 * dscqss_dsc[202] + dscqss15dscqss13 * dscqss_dsc[482];
  dscqss_dsc[553] =
    dscqss15dsc28 + dscqss15dscqss9 * dscqss_dsc[343] +
    dscqss15dscqss6 * dscqss_dsc[238] + dscqss15dscqss7 * dscqss_dsc[273] +
    dscqss15dscqss5 * dscqss_dsc[203] + dscqss15dscqss13 * dscqss_dsc[483];
  dscqss_dsc[554] =
    dscqss15dsc29 + dscqss15dscqss9 * dscqss_dsc[344] +
    dscqss15dscqss6 * dscqss_dsc[239] + dscqss15dscqss7 * dscqss_dsc[274] +
    dscqss15dscqss5 * dscqss_dsc[204] + dscqss15dscqss13 * dscqss_dsc[484];
  dscqss_dsc[555] =
    dscqss15dsc30 + dscqss15dscqss9 * dscqss_dsc[345] +
    dscqss15dscqss6 * dscqss_dsc[240] + dscqss15dscqss7 * dscqss_dsc[275] +
    dscqss15dscqss5 * dscqss_dsc[205] + dscqss15dscqss13 * dscqss_dsc[485];
  dscqss_dsc[556] =
    dscqss15dsc31 + dscqss15dscqss9 * dscqss_dsc[346] +
    dscqss15dscqss6 * dscqss_dsc[241] + dscqss15dscqss7 * dscqss_dsc[276] +
    dscqss15dscqss5 * dscqss_dsc[206] + dscqss15dscqss13 * dscqss_dsc[486];
  dscqss_dsc[557] =
    dscqss15dsc32 + dscqss15dscqss9 * dscqss_dsc[347] +
    dscqss15dscqss6 * dscqss_dsc[242] + dscqss15dscqss7 * dscqss_dsc[277] +
    dscqss15dscqss5 * dscqss_dsc[207] + dscqss15dscqss13 * dscqss_dsc[487];
  dscqss_dsc[558] =
    dscqss15dsc33 + dscqss15dscqss9 * dscqss_dsc[348] +
    dscqss15dscqss6 * dscqss_dsc[243] + dscqss15dscqss7 * dscqss_dsc[278] +
    dscqss15dscqss5 * dscqss_dsc[208] + dscqss15dscqss13 * dscqss_dsc[488];
  dscqss_dsc[559] =
    dscqss15dsc34 + dscqss15dscqss9 * dscqss_dsc[349] +
    dscqss15dscqss6 * dscqss_dsc[244] + dscqss15dscqss7 * dscqss_dsc[279] +
    dscqss15dscqss5 * dscqss_dsc[209] + dscqss15dscqss13 * dscqss_dsc[489];
  dscqss_dsc[280] = dscqss8dsc0 + dscqss8dscqss6 * dscqss_dsc[210] +
                    dscqss8dscqss15 * dscqss_dsc[525];
  dscqss_dsc[281] = dscqss8dsc1 + dscqss8dscqss6 * dscqss_dsc[211] +
                    dscqss8dscqss15 * dscqss_dsc[526];
  dscqss_dsc[282] = dscqss8dsc2 + dscqss8dscqss6 * dscqss_dsc[212] +
                    dscqss8dscqss15 * dscqss_dsc[527];
  dscqss_dsc[283] = dscqss8dsc3 + dscqss8dscqss6 * dscqss_dsc[213] +
                    dscqss8dscqss15 * dscqss_dsc[528];
  dscqss_dsc[284] = dscqss8dsc4 + dscqss8dscqss6 * dscqss_dsc[214] +
                    dscqss8dscqss15 * dscqss_dsc[529];
  dscqss_dsc[285] = dscqss8dsc5 + dscqss8dscqss6 * dscqss_dsc[215] +
                    dscqss8dscqss15 * dscqss_dsc[530];
  dscqss_dsc[286] = dscqss8dsc6 + dscqss8dscqss6 * dscqss_dsc[216] +
                    dscqss8dscqss15 * dscqss_dsc[531];
  dscqss_dsc[287] = dscqss8dsc7 + dscqss8dscqss6 * dscqss_dsc[217] +
                    dscqss8dscqss15 * dscqss_dsc[532];
  dscqss_dsc[288] = dscqss8dsc8 + dscqss8dscqss6 * dscqss_dsc[218] +
                    dscqss8dscqss15 * dscqss_dsc[533];
  dscqss_dsc[289] = dscqss8dsc9 + dscqss8dscqss6 * dscqss_dsc[219] +
                    dscqss8dscqss15 * dscqss_dsc[534];
  dscqss_dsc[290] = dscqss8dsc10 + dscqss8dscqss6 * dscqss_dsc[220] +
                    dscqss8dscqss15 * dscqss_dsc[535];
  dscqss_dsc[291] = dscqss8dsc11 + dscqss8dscqss6 * dscqss_dsc[221] +
                    dscqss8dscqss15 * dscqss_dsc[536];
  dscqss_dsc[292] = dscqss8dsc12 + dscqss8dscqss6 * dscqss_dsc[222] +
                    dscqss8dscqss15 * dscqss_dsc[537];
  dscqss_dsc[293] = dscqss8dsc13 + dscqss8dscqss6 * dscqss_dsc[223] +
                    dscqss8dscqss15 * dscqss_dsc[538];
  dscqss_dsc[294] = dscqss8dsc14 + dscqss8dscqss6 * dscqss_dsc[224] +
                    dscqss8dscqss15 * dscqss_dsc[539];
  dscqss_dsc[295] = dscqss8dsc15 + dscqss8dscqss6 * dscqss_dsc[225] +
                    dscqss8dscqss15 * dscqss_dsc[540];
  dscqss_dsc[296] = dscqss8dsc16 + dscqss8dscqss6 * dscqss_dsc[226] +
                    dscqss8dscqss15 * dscqss_dsc[541];
  dscqss_dsc[297] = dscqss8dsc17 + dscqss8dscqss6 * dscqss_dsc[227] +
                    dscqss8dscqss15 * dscqss_dsc[542];
  dscqss_dsc[298] = dscqss8dsc18 + dscqss8dscqss6 * dscqss_dsc[228] +
                    dscqss8dscqss15 * dscqss_dsc[543];
  dscqss_dsc[299] = dscqss8dsc19 + dscqss8dscqss6 * dscqss_dsc[229] +
                    dscqss8dscqss15 * dscqss_dsc[544];
  dscqss_dsc[300] = dscqss8dsc20 + dscqss8dscqss6 * dscqss_dsc[230] +
                    dscqss8dscqss15 * dscqss_dsc[545];
  dscqss_dsc[301] = dscqss8dsc21 + dscqss8dscqss6 * dscqss_dsc[231] +
                    dscqss8dscqss15 * dscqss_dsc[546];
  dscqss_dsc[302] = dscqss8dsc22 + dscqss8dscqss6 * dscqss_dsc[232] +
                    dscqss8dscqss15 * dscqss_dsc[547];
  dscqss_dsc[303] = dscqss8dsc23 + dscqss8dscqss6 * dscqss_dsc[233] +
                    dscqss8dscqss15 * dscqss_dsc[548];
  dscqss_dsc[304] = dscqss8dsc24 + dscqss8dscqss6 * dscqss_dsc[234] +
                    dscqss8dscqss15 * dscqss_dsc[549];
  dscqss_dsc[305] = dscqss8dsc25 + dscqss8dscqss6 * dscqss_dsc[235] +
                    dscqss8dscqss15 * dscqss_dsc[550];
  dscqss_dsc[306] = dscqss8dsc26 + dscqss8dscqss6 * dscqss_dsc[236] +
                    dscqss8dscqss15 * dscqss_dsc[551];
  dscqss_dsc[307] = dscqss8dsc27 + dscqss8dscqss6 * dscqss_dsc[237] +
                    dscqss8dscqss15 * dscqss_dsc[552];
  dscqss_dsc[308] = dscqss8dsc28 + dscqss8dscqss6 * dscqss_dsc[238] +
                    dscqss8dscqss15 * dscqss_dsc[553];
  dscqss_dsc[309] = dscqss8dsc29 + dscqss8dscqss6 * dscqss_dsc[239] +
                    dscqss8dscqss15 * dscqss_dsc[554];
  dscqss_dsc[310] = dscqss8dsc30 + dscqss8dscqss6 * dscqss_dsc[240] +
                    dscqss8dscqss15 * dscqss_dsc[555];
  dscqss_dsc[311] = dscqss8dsc31 + dscqss8dscqss6 * dscqss_dsc[241] +
                    dscqss8dscqss15 * dscqss_dsc[556];
  dscqss_dsc[312] = dscqss8dsc32 + dscqss8dscqss6 * dscqss_dsc[242] +
                    dscqss8dscqss15 * dscqss_dsc[557];
  dscqss_dsc[313] = dscqss8dsc33 + dscqss8dscqss6 * dscqss_dsc[243] +
                    dscqss8dscqss15 * dscqss_dsc[558];
  dscqss_dsc[314] = dscqss8dsc34 + dscqss8dscqss6 * dscqss_dsc[244] +
                    dscqss8dscqss15 * dscqss_dsc[559];
  dscqss_dsc[350] = dscqss10dsc0 + dscqss10dscqss8 * dscqss_dsc[280] +
                    dscqss10dscqss15 * dscqss_dsc[525];
  dscqss_dsc[351] = dscqss10dsc1 + dscqss10dscqss8 * dscqss_dsc[281] +
                    dscqss10dscqss15 * dscqss_dsc[526];
  dscqss_dsc[352] = dscqss10dsc2 + dscqss10dscqss8 * dscqss_dsc[282] +
                    dscqss10dscqss15 * dscqss_dsc[527];
  dscqss_dsc[353] = dscqss10dsc3 + dscqss10dscqss8 * dscqss_dsc[283] +
                    dscqss10dscqss15 * dscqss_dsc[528];
  dscqss_dsc[354] = dscqss10dsc4 + dscqss10dscqss8 * dscqss_dsc[284] +
                    dscqss10dscqss15 * dscqss_dsc[529];
  dscqss_dsc[355] = dscqss10dsc5 + dscqss10dscqss8 * dscqss_dsc[285] +
                    dscqss10dscqss15 * dscqss_dsc[530];
  dscqss_dsc[356] = dscqss10dsc6 + dscqss10dscqss8 * dscqss_dsc[286] +
                    dscqss10dscqss15 * dscqss_dsc[531];
  dscqss_dsc[357] = dscqss10dsc7 + dscqss10dscqss8 * dscqss_dsc[287] +
                    dscqss10dscqss15 * dscqss_dsc[532];
  dscqss_dsc[358] = dscqss10dsc8 + dscqss10dscqss8 * dscqss_dsc[288] +
                    dscqss10dscqss15 * dscqss_dsc[533];
  dscqss_dsc[359] = dscqss10dsc9 + dscqss10dscqss8 * dscqss_dsc[289] +
                    dscqss10dscqss15 * dscqss_dsc[534];
  dscqss_dsc[360] = dscqss10dsc10 + dscqss10dscqss8 * dscqss_dsc[290] +
                    dscqss10dscqss15 * dscqss_dsc[535];
  dscqss_dsc[361] = dscqss10dsc11 + dscqss10dscqss8 * dscqss_dsc[291] +
                    dscqss10dscqss15 * dscqss_dsc[536];
  dscqss_dsc[362] = dscqss10dsc12 + dscqss10dscqss8 * dscqss_dsc[292] +
                    dscqss10dscqss15 * dscqss_dsc[537];
  dscqss_dsc[363] = dscqss10dsc13 + dscqss10dscqss8 * dscqss_dsc[293] +
                    dscqss10dscqss15 * dscqss_dsc[538];
  dscqss_dsc[364] = dscqss10dsc14 + dscqss10dscqss8 * dscqss_dsc[294] +
                    dscqss10dscqss15 * dscqss_dsc[539];
  dscqss_dsc[365] = dscqss10dsc15 + dscqss10dscqss8 * dscqss_dsc[295] +
                    dscqss10dscqss15 * dscqss_dsc[540];
  dscqss_dsc[366] = dscqss10dsc16 + dscqss10dscqss8 * dscqss_dsc[296] +
                    dscqss10dscqss15 * dscqss_dsc[541];
  dscqss_dsc[367] = dscqss10dsc17 + dscqss10dscqss8 * dscqss_dsc[297] +
                    dscqss10dscqss15 * dscqss_dsc[542];
  dscqss_dsc[368] = dscqss10dsc18 + dscqss10dscqss8 * dscqss_dsc[298] +
                    dscqss10dscqss15 * dscqss_dsc[543];
  dscqss_dsc[369] = dscqss10dsc19 + dscqss10dscqss8 * dscqss_dsc[299] +
                    dscqss10dscqss15 * dscqss_dsc[544];
  dscqss_dsc[370] = dscqss10dsc20 + dscqss10dscqss8 * dscqss_dsc[300] +
                    dscqss10dscqss15 * dscqss_dsc[545];
  dscqss_dsc[371] = dscqss10dsc21 + dscqss10dscqss8 * dscqss_dsc[301] +
                    dscqss10dscqss15 * dscqss_dsc[546];
  dscqss_dsc[372] = dscqss10dsc22 + dscqss10dscqss8 * dscqss_dsc[302] +
                    dscqss10dscqss15 * dscqss_dsc[547];
  dscqss_dsc[373] = dscqss10dsc23 + dscqss10dscqss8 * dscqss_dsc[303] +
                    dscqss10dscqss15 * dscqss_dsc[548];
  dscqss_dsc[374] = dscqss10dsc24 + dscqss10dscqss8 * dscqss_dsc[304] +
                    dscqss10dscqss15 * dscqss_dsc[549];
  dscqss_dsc[375] = dscqss10dsc25 + dscqss10dscqss8 * dscqss_dsc[305] +
                    dscqss10dscqss15 * dscqss_dsc[550];
  dscqss_dsc[376] = dscqss10dsc26 + dscqss10dscqss8 * dscqss_dsc[306] +
                    dscqss10dscqss15 * dscqss_dsc[551];
  dscqss_dsc[377] = dscqss10dsc27 + dscqss10dscqss8 * dscqss_dsc[307] +
                    dscqss10dscqss15 * dscqss_dsc[552];
  dscqss_dsc[378] = dscqss10dsc28 + dscqss10dscqss8 * dscqss_dsc[308] +
                    dscqss10dscqss15 * dscqss_dsc[553];
  dscqss_dsc[379] = dscqss10dsc29 + dscqss10dscqss8 * dscqss_dsc[309] +
                    dscqss10dscqss15 * dscqss_dsc[554];
  dscqss_dsc[380] = dscqss10dsc30 + dscqss10dscqss8 * dscqss_dsc[310] +
                    dscqss10dscqss15 * dscqss_dsc[555];
  dscqss_dsc[381] = dscqss10dsc31 + dscqss10dscqss8 * dscqss_dsc[311] +
                    dscqss10dscqss15 * dscqss_dsc[556];
  dscqss_dsc[382] = dscqss10dsc32 + dscqss10dscqss8 * dscqss_dsc[312] +
                    dscqss10dscqss15 * dscqss_dsc[557];
  dscqss_dsc[383] = dscqss10dsc33 + dscqss10dscqss8 * dscqss_dsc[313] +
                    dscqss10dscqss15 * dscqss_dsc[558];
  dscqss_dsc[384] = dscqss10dsc34 + dscqss10dscqss8 * dscqss_dsc[314] +
                    dscqss10dscqss15 * dscqss_dsc[559];
  // Write the full Jacobian expression...
  J[0] = dwdot0dsc0 + dwdot0dscqss0 * dscqss_dsc[0] +
         dwdot0dscqss16 * dscqss_dsc[560] + dwdot0dscqss1 * dscqss_dsc[35] +
         dwdot0dscqss17 * dscqss_dsc[595] + dwdot0dscqss2 * dscqss_dsc[70] +
         dwdot0dscqss3 * dscqss_dsc[105] + dwdot0dscqss4 * dscqss_dsc[140] +
         dwdot0dscqss5 * dscqss_dsc[175] + dwdot0dscqss6 * dscqss_dsc[210] +
         dwdot0dscqss7 * dscqss_dsc[245] + dwdot0dscqss9 * dscqss_dsc[315] +
         dwdot0dscqss11 * dscqss_dsc[385] + dwdot0dscqss12 * dscqss_dsc[420] +
         dwdot0dscqss14 * dscqss_dsc[490] + dwdot0dscqss13 * dscqss_dsc[455] +
         dwdot0dscqss15 * dscqss_dsc[525] + dwdot0dscqss8 * dscqss_dsc[280] +
         dwdot0dscqss10 * dscqss_dsc[350];
  J[36] = dwdot0dsc1 + dwdot0dscqss0 * dscqss_dsc[1] +
          dwdot0dscqss16 * dscqss_dsc[561] + dwdot0dscqss1 * dscqss_dsc[36] +
          dwdot0dscqss17 * dscqss_dsc[596] + dwdot0dscqss2 * dscqss_dsc[71] +
          dwdot0dscqss3 * dscqss_dsc[106] + dwdot0dscqss4 * dscqss_dsc[141] +
          dwdot0dscqss5 * dscqss_dsc[176] + dwdot0dscqss6 * dscqss_dsc[211] +
          dwdot0dscqss7 * dscqss_dsc[246] + dwdot0dscqss9 * dscqss_dsc[316] +
          dwdot0dscqss11 * dscqss_dsc[386] + dwdot0dscqss12 * dscqss_dsc[421] +
          dwdot0dscqss14 * dscqss_dsc[491] + dwdot0dscqss13 * dscqss_dsc[456] +
          dwdot0dscqss15 * dscqss_dsc[526] + dwdot0dscqss8 * dscqss_dsc[281] +
          dwdot0dscqss10 * dscqss_dsc[351];
  J[72] = dwdot0dsc2 + dwdot0dscqss0 * dscqss_dsc[2] +
          dwdot0dscqss16 * dscqss_dsc[562] + dwdot0dscqss1 * dscqss_dsc[37] +
          dwdot0dscqss17 * dscqss_dsc[597] + dwdot0dscqss2 * dscqss_dsc[72] +
          dwdot0dscqss3 * dscqss_dsc[107] + dwdot0dscqss4 * dscqss_dsc[142] +
          dwdot0dscqss5 * dscqss_dsc[177] + dwdot0dscqss6 * dscqss_dsc[212] +
          dwdot0dscqss7 * dscqss_dsc[247] + dwdot0dscqss9 * dscqss_dsc[317] +
          dwdot0dscqss11 * dscqss_dsc[387] + dwdot0dscqss12 * dscqss_dsc[422] +
          dwdot0dscqss14 * dscqss_dsc[492] + dwdot0dscqss13 * dscqss_dsc[457] +
          dwdot0dscqss15 * dscqss_dsc[527] + dwdot0dscqss8 * dscqss_dsc[282] +
          dwdot0dscqss10 * dscqss_dsc[352];
  J[108] = dwdot0dsc3 + dwdot0dscqss0 * dscqss_dsc[3] +
           dwdot0dscqss16 * dscqss_dsc[563] + dwdot0dscqss1 * dscqss_dsc[38] +
           dwdot0dscqss17 * dscqss_dsc[598] + dwdot0dscqss2 * dscqss_dsc[73] +
           dwdot0dscqss3 * dscqss_dsc[108] + dwdot0dscqss4 * dscqss_dsc[143] +
           dwdot0dscqss5 * dscqss_dsc[178] + dwdot0dscqss6 * dscqss_dsc[213] +
           dwdot0dscqss7 * dscqss_dsc[248] + dwdot0dscqss9 * dscqss_dsc[318] +
           dwdot0dscqss11 * dscqss_dsc[388] + dwdot0dscqss12 * dscqss_dsc[423] +
           dwdot0dscqss14 * dscqss_dsc[493] + dwdot0dscqss13 * dscqss_dsc[458] +
           dwdot0dscqss15 * dscqss_dsc[528] + dwdot0dscqss8 * dscqss_dsc[283] +
           dwdot0dscqss10 * dscqss_dsc[353];
  J[144] = dwdot0dsc4 + dwdot0dscqss0 * dscqss_dsc[4] +
           dwdot0dscqss16 * dscqss_dsc[564] + dwdot0dscqss1 * dscqss_dsc[39] +
           dwdot0dscqss17 * dscqss_dsc[599] + dwdot0dscqss2 * dscqss_dsc[74] +
           dwdot0dscqss3 * dscqss_dsc[109] + dwdot0dscqss4 * dscqss_dsc[144] +
           dwdot0dscqss5 * dscqss_dsc[179] + dwdot0dscqss6 * dscqss_dsc[214] +
           dwdot0dscqss7 * dscqss_dsc[249] + dwdot0dscqss9 * dscqss_dsc[319] +
           dwdot0dscqss11 * dscqss_dsc[389] + dwdot0dscqss12 * dscqss_dsc[424] +
           dwdot0dscqss14 * dscqss_dsc[494] + dwdot0dscqss13 * dscqss_dsc[459] +
           dwdot0dscqss15 * dscqss_dsc[529] + dwdot0dscqss8 * dscqss_dsc[284] +
           dwdot0dscqss10 * dscqss_dsc[354];
  J[180] = dwdot0dsc5 + dwdot0dscqss0 * dscqss_dsc[5] +
           dwdot0dscqss16 * dscqss_dsc[565] + dwdot0dscqss1 * dscqss_dsc[40] +
           dwdot0dscqss17 * dscqss_dsc[600] + dwdot0dscqss2 * dscqss_dsc[75] +
           dwdot0dscqss3 * dscqss_dsc[110] + dwdot0dscqss4 * dscqss_dsc[145] +
           dwdot0dscqss5 * dscqss_dsc[180] + dwdot0dscqss6 * dscqss_dsc[215] +
           dwdot0dscqss7 * dscqss_dsc[250] + dwdot0dscqss9 * dscqss_dsc[320] +
           dwdot0dscqss11 * dscqss_dsc[390] + dwdot0dscqss12 * dscqss_dsc[425] +
           dwdot0dscqss14 * dscqss_dsc[495] + dwdot0dscqss13 * dscqss_dsc[460] +
           dwdot0dscqss15 * dscqss_dsc[530] + dwdot0dscqss8 * dscqss_dsc[285] +
           dwdot0dscqss10 * dscqss_dsc[355];
  J[216] = dwdot0dsc6 + dwdot0dscqss0 * dscqss_dsc[6] +
           dwdot0dscqss16 * dscqss_dsc[566] + dwdot0dscqss1 * dscqss_dsc[41] +
           dwdot0dscqss17 * dscqss_dsc[601] + dwdot0dscqss2 * dscqss_dsc[76] +
           dwdot0dscqss3 * dscqss_dsc[111] + dwdot0dscqss4 * dscqss_dsc[146] +
           dwdot0dscqss5 * dscqss_dsc[181] + dwdot0dscqss6 * dscqss_dsc[216] +
           dwdot0dscqss7 * dscqss_dsc[251] + dwdot0dscqss9 * dscqss_dsc[321] +
           dwdot0dscqss11 * dscqss_dsc[391] + dwdot0dscqss12 * dscqss_dsc[426] +
           dwdot0dscqss14 * dscqss_dsc[496] + dwdot0dscqss13 * dscqss_dsc[461] +
           dwdot0dscqss15 * dscqss_dsc[531] + dwdot0dscqss8 * dscqss_dsc[286] +
           dwdot0dscqss10 * dscqss_dsc[356];
  J[252] = dwdot0dsc7 + dwdot0dscqss0 * dscqss_dsc[7] +
           dwdot0dscqss16 * dscqss_dsc[567] + dwdot0dscqss1 * dscqss_dsc[42] +
           dwdot0dscqss17 * dscqss_dsc[602] + dwdot0dscqss2 * dscqss_dsc[77] +
           dwdot0dscqss3 * dscqss_dsc[112] + dwdot0dscqss4 * dscqss_dsc[147] +
           dwdot0dscqss5 * dscqss_dsc[182] + dwdot0dscqss6 * dscqss_dsc[217] +
           dwdot0dscqss7 * dscqss_dsc[252] + dwdot0dscqss9 * dscqss_dsc[322] +
           dwdot0dscqss11 * dscqss_dsc[392] + dwdot0dscqss12 * dscqss_dsc[427] +
           dwdot0dscqss14 * dscqss_dsc[497] + dwdot0dscqss13 * dscqss_dsc[462] +
           dwdot0dscqss15 * dscqss_dsc[532] + dwdot0dscqss8 * dscqss_dsc[287] +
           dwdot0dscqss10 * dscqss_dsc[357];
  J[288] = dwdot0dsc8 + dwdot0dscqss0 * dscqss_dsc[8] +
           dwdot0dscqss16 * dscqss_dsc[568] + dwdot0dscqss1 * dscqss_dsc[43] +
           dwdot0dscqss17 * dscqss_dsc[603] + dwdot0dscqss2 * dscqss_dsc[78] +
           dwdot0dscqss3 * dscqss_dsc[113] + dwdot0dscqss4 * dscqss_dsc[148] +
           dwdot0dscqss5 * dscqss_dsc[183] + dwdot0dscqss6 * dscqss_dsc[218] +
           dwdot0dscqss7 * dscqss_dsc[253] + dwdot0dscqss9 * dscqss_dsc[323] +
           dwdot0dscqss11 * dscqss_dsc[393] + dwdot0dscqss12 * dscqss_dsc[428] +
           dwdot0dscqss14 * dscqss_dsc[498] + dwdot0dscqss13 * dscqss_dsc[463] +
           dwdot0dscqss15 * dscqss_dsc[533] + dwdot0dscqss8 * dscqss_dsc[288] +
           dwdot0dscqss10 * dscqss_dsc[358];
  J[324] = dwdot0dsc9 + dwdot0dscqss0 * dscqss_dsc[9] +
           dwdot0dscqss16 * dscqss_dsc[569] + dwdot0dscqss1 * dscqss_dsc[44] +
           dwdot0dscqss17 * dscqss_dsc[604] + dwdot0dscqss2 * dscqss_dsc[79] +
           dwdot0dscqss3 * dscqss_dsc[114] + dwdot0dscqss4 * dscqss_dsc[149] +
           dwdot0dscqss5 * dscqss_dsc[184] + dwdot0dscqss6 * dscqss_dsc[219] +
           dwdot0dscqss7 * dscqss_dsc[254] + dwdot0dscqss9 * dscqss_dsc[324] +
           dwdot0dscqss11 * dscqss_dsc[394] + dwdot0dscqss12 * dscqss_dsc[429] +
           dwdot0dscqss14 * dscqss_dsc[499] + dwdot0dscqss13 * dscqss_dsc[464] +
           dwdot0dscqss15 * dscqss_dsc[534] + dwdot0dscqss8 * dscqss_dsc[289] +
           dwdot0dscqss10 * dscqss_dsc[359];
  J[360] = dwdot0dsc10 + dwdot0dscqss0 * dscqss_dsc[10] +
           dwdot0dscqss16 * dscqss_dsc[570] + dwdot0dscqss1 * dscqss_dsc[45] +
           dwdot0dscqss17 * dscqss_dsc[605] + dwdot0dscqss2 * dscqss_dsc[80] +
           dwdot0dscqss3 * dscqss_dsc[115] + dwdot0dscqss4 * dscqss_dsc[150] +
           dwdot0dscqss5 * dscqss_dsc[185] + dwdot0dscqss6 * dscqss_dsc[220] +
           dwdot0dscqss7 * dscqss_dsc[255] + dwdot0dscqss9 * dscqss_dsc[325] +
           dwdot0dscqss11 * dscqss_dsc[395] + dwdot0dscqss12 * dscqss_dsc[430] +
           dwdot0dscqss14 * dscqss_dsc[500] + dwdot0dscqss13 * dscqss_dsc[465] +
           dwdot0dscqss15 * dscqss_dsc[535] + dwdot0dscqss8 * dscqss_dsc[290] +
           dwdot0dscqss10 * dscqss_dsc[360];
  J[396] = dwdot0dsc11 + dwdot0dscqss0 * dscqss_dsc[11] +
           dwdot0dscqss16 * dscqss_dsc[571] + dwdot0dscqss1 * dscqss_dsc[46] +
           dwdot0dscqss17 * dscqss_dsc[606] + dwdot0dscqss2 * dscqss_dsc[81] +
           dwdot0dscqss3 * dscqss_dsc[116] + dwdot0dscqss4 * dscqss_dsc[151] +
           dwdot0dscqss5 * dscqss_dsc[186] + dwdot0dscqss6 * dscqss_dsc[221] +
           dwdot0dscqss7 * dscqss_dsc[256] + dwdot0dscqss9 * dscqss_dsc[326] +
           dwdot0dscqss11 * dscqss_dsc[396] + dwdot0dscqss12 * dscqss_dsc[431] +
           dwdot0dscqss14 * dscqss_dsc[501] + dwdot0dscqss13 * dscqss_dsc[466] +
           dwdot0dscqss15 * dscqss_dsc[536] + dwdot0dscqss8 * dscqss_dsc[291] +
           dwdot0dscqss10 * dscqss_dsc[361];
  J[432] = dwdot0dsc12 + dwdot0dscqss0 * dscqss_dsc[12] +
           dwdot0dscqss16 * dscqss_dsc[572] + dwdot0dscqss1 * dscqss_dsc[47] +
           dwdot0dscqss17 * dscqss_dsc[607] + dwdot0dscqss2 * dscqss_dsc[82] +
           dwdot0dscqss3 * dscqss_dsc[117] + dwdot0dscqss4 * dscqss_dsc[152] +
           dwdot0dscqss5 * dscqss_dsc[187] + dwdot0dscqss6 * dscqss_dsc[222] +
           dwdot0dscqss7 * dscqss_dsc[257] + dwdot0dscqss9 * dscqss_dsc[327] +
           dwdot0dscqss11 * dscqss_dsc[397] + dwdot0dscqss12 * dscqss_dsc[432] +
           dwdot0dscqss14 * dscqss_dsc[502] + dwdot0dscqss13 * dscqss_dsc[467] +
           dwdot0dscqss15 * dscqss_dsc[537] + dwdot0dscqss8 * dscqss_dsc[292] +
           dwdot0dscqss10 * dscqss_dsc[362];
  J[468] = dwdot0dsc13 + dwdot0dscqss0 * dscqss_dsc[13] +
           dwdot0dscqss16 * dscqss_dsc[573] + dwdot0dscqss1 * dscqss_dsc[48] +
           dwdot0dscqss17 * dscqss_dsc[608] + dwdot0dscqss2 * dscqss_dsc[83] +
           dwdot0dscqss3 * dscqss_dsc[118] + dwdot0dscqss4 * dscqss_dsc[153] +
           dwdot0dscqss5 * dscqss_dsc[188] + dwdot0dscqss6 * dscqss_dsc[223] +
           dwdot0dscqss7 * dscqss_dsc[258] + dwdot0dscqss9 * dscqss_dsc[328] +
           dwdot0dscqss11 * dscqss_dsc[398] + dwdot0dscqss12 * dscqss_dsc[433] +
           dwdot0dscqss14 * dscqss_dsc[503] + dwdot0dscqss13 * dscqss_dsc[468] +
           dwdot0dscqss15 * dscqss_dsc[538] + dwdot0dscqss8 * dscqss_dsc[293] +
           dwdot0dscqss10 * dscqss_dsc[363];
  J[504] = dwdot0dsc14 + dwdot0dscqss0 * dscqss_dsc[14] +
           dwdot0dscqss16 * dscqss_dsc[574] + dwdot0dscqss1 * dscqss_dsc[49] +
           dwdot0dscqss17 * dscqss_dsc[609] + dwdot0dscqss2 * dscqss_dsc[84] +
           dwdot0dscqss3 * dscqss_dsc[119] + dwdot0dscqss4 * dscqss_dsc[154] +
           dwdot0dscqss5 * dscqss_dsc[189] + dwdot0dscqss6 * dscqss_dsc[224] +
           dwdot0dscqss7 * dscqss_dsc[259] + dwdot0dscqss9 * dscqss_dsc[329] +
           dwdot0dscqss11 * dscqss_dsc[399] + dwdot0dscqss12 * dscqss_dsc[434] +
           dwdot0dscqss14 * dscqss_dsc[504] + dwdot0dscqss13 * dscqss_dsc[469] +
           dwdot0dscqss15 * dscqss_dsc[539] + dwdot0dscqss8 * dscqss_dsc[294] +
           dwdot0dscqss10 * dscqss_dsc[364];
  J[540] = dwdot0dsc15 + dwdot0dscqss0 * dscqss_dsc[15] +
           dwdot0dscqss16 * dscqss_dsc[575] + dwdot0dscqss1 * dscqss_dsc[50] +
           dwdot0dscqss17 * dscqss_dsc[610] + dwdot0dscqss2 * dscqss_dsc[85] +
           dwdot0dscqss3 * dscqss_dsc[120] + dwdot0dscqss4 * dscqss_dsc[155] +
           dwdot0dscqss5 * dscqss_dsc[190] + dwdot0dscqss6 * dscqss_dsc[225] +
           dwdot0dscqss7 * dscqss_dsc[260] + dwdot0dscqss9 * dscqss_dsc[330] +
           dwdot0dscqss11 * dscqss_dsc[400] + dwdot0dscqss12 * dscqss_dsc[435] +
           dwdot0dscqss14 * dscqss_dsc[505] + dwdot0dscqss13 * dscqss_dsc[470] +
           dwdot0dscqss15 * dscqss_dsc[540] + dwdot0dscqss8 * dscqss_dsc[295] +
           dwdot0dscqss10 * dscqss_dsc[365];
  J[576] = dwdot0dsc16 + dwdot0dscqss0 * dscqss_dsc[16] +
           dwdot0dscqss16 * dscqss_dsc[576] + dwdot0dscqss1 * dscqss_dsc[51] +
           dwdot0dscqss17 * dscqss_dsc[611] + dwdot0dscqss2 * dscqss_dsc[86] +
           dwdot0dscqss3 * dscqss_dsc[121] + dwdot0dscqss4 * dscqss_dsc[156] +
           dwdot0dscqss5 * dscqss_dsc[191] + dwdot0dscqss6 * dscqss_dsc[226] +
           dwdot0dscqss7 * dscqss_dsc[261] + dwdot0dscqss9 * dscqss_dsc[331] +
           dwdot0dscqss11 * dscqss_dsc[401] + dwdot0dscqss12 * dscqss_dsc[436] +
           dwdot0dscqss14 * dscqss_dsc[506] + dwdot0dscqss13 * dscqss_dsc[471] +
           dwdot0dscqss15 * dscqss_dsc[541] + dwdot0dscqss8 * dscqss_dsc[296] +
           dwdot0dscqss10 * dscqss_dsc[366];
  J[612] = dwdot0dsc17 + dwdot0dscqss0 * dscqss_dsc[17] +
           dwdot0dscqss16 * dscqss_dsc[577] + dwdot0dscqss1 * dscqss_dsc[52] +
           dwdot0dscqss17 * dscqss_dsc[612] + dwdot0dscqss2 * dscqss_dsc[87] +
           dwdot0dscqss3 * dscqss_dsc[122] + dwdot0dscqss4 * dscqss_dsc[157] +
           dwdot0dscqss5 * dscqss_dsc[192] + dwdot0dscqss6 * dscqss_dsc[227] +
           dwdot0dscqss7 * dscqss_dsc[262] + dwdot0dscqss9 * dscqss_dsc[332] +
           dwdot0dscqss11 * dscqss_dsc[402] + dwdot0dscqss12 * dscqss_dsc[437] +
           dwdot0dscqss14 * dscqss_dsc[507] + dwdot0dscqss13 * dscqss_dsc[472] +
           dwdot0dscqss15 * dscqss_dsc[542] + dwdot0dscqss8 * dscqss_dsc[297] +
           dwdot0dscqss10 * dscqss_dsc[367];
  J[648] = dwdot0dsc18 + dwdot0dscqss0 * dscqss_dsc[18] +
           dwdot0dscqss16 * dscqss_dsc[578] + dwdot0dscqss1 * dscqss_dsc[53] +
           dwdot0dscqss17 * dscqss_dsc[613] + dwdot0dscqss2 * dscqss_dsc[88] +
           dwdot0dscqss3 * dscqss_dsc[123] + dwdot0dscqss4 * dscqss_dsc[158] +
           dwdot0dscqss5 * dscqss_dsc[193] + dwdot0dscqss6 * dscqss_dsc[228] +
           dwdot0dscqss7 * dscqss_dsc[263] + dwdot0dscqss9 * dscqss_dsc[333] +
           dwdot0dscqss11 * dscqss_dsc[403] + dwdot0dscqss12 * dscqss_dsc[438] +
           dwdot0dscqss14 * dscqss_dsc[508] + dwdot0dscqss13 * dscqss_dsc[473] +
           dwdot0dscqss15 * dscqss_dsc[543] + dwdot0dscqss8 * dscqss_dsc[298] +
           dwdot0dscqss10 * dscqss_dsc[368];
  J[684] = dwdot0dsc19 + dwdot0dscqss0 * dscqss_dsc[19] +
           dwdot0dscqss16 * dscqss_dsc[579] + dwdot0dscqss1 * dscqss_dsc[54] +
           dwdot0dscqss17 * dscqss_dsc[614] + dwdot0dscqss2 * dscqss_dsc[89] +
           dwdot0dscqss3 * dscqss_dsc[124] + dwdot0dscqss4 * dscqss_dsc[159] +
           dwdot0dscqss5 * dscqss_dsc[194] + dwdot0dscqss6 * dscqss_dsc[229] +
           dwdot0dscqss7 * dscqss_dsc[264] + dwdot0dscqss9 * dscqss_dsc[334] +
           dwdot0dscqss11 * dscqss_dsc[404] + dwdot0dscqss12 * dscqss_dsc[439] +
           dwdot0dscqss14 * dscqss_dsc[509] + dwdot0dscqss13 * dscqss_dsc[474] +
           dwdot0dscqss15 * dscqss_dsc[544] + dwdot0dscqss8 * dscqss_dsc[299] +
           dwdot0dscqss10 * dscqss_dsc[369];
  J[720] = dwdot0dsc20 + dwdot0dscqss0 * dscqss_dsc[20] +
           dwdot0dscqss16 * dscqss_dsc[580] + dwdot0dscqss1 * dscqss_dsc[55] +
           dwdot0dscqss17 * dscqss_dsc[615] + dwdot0dscqss2 * dscqss_dsc[90] +
           dwdot0dscqss3 * dscqss_dsc[125] + dwdot0dscqss4 * dscqss_dsc[160] +
           dwdot0dscqss5 * dscqss_dsc[195] + dwdot0dscqss6 * dscqss_dsc[230] +
           dwdot0dscqss7 * dscqss_dsc[265] + dwdot0dscqss9 * dscqss_dsc[335] +
           dwdot0dscqss11 * dscqss_dsc[405] + dwdot0dscqss12 * dscqss_dsc[440] +
           dwdot0dscqss14 * dscqss_dsc[510] + dwdot0dscqss13 * dscqss_dsc[475] +
           dwdot0dscqss15 * dscqss_dsc[545] + dwdot0dscqss8 * dscqss_dsc[300] +
           dwdot0dscqss10 * dscqss_dsc[370];
  J[756] = dwdot0dsc21 + dwdot0dscqss0 * dscqss_dsc[21] +
           dwdot0dscqss16 * dscqss_dsc[581] + dwdot0dscqss1 * dscqss_dsc[56] +
           dwdot0dscqss17 * dscqss_dsc[616] + dwdot0dscqss2 * dscqss_dsc[91] +
           dwdot0dscqss3 * dscqss_dsc[126] + dwdot0dscqss4 * dscqss_dsc[161] +
           dwdot0dscqss5 * dscqss_dsc[196] + dwdot0dscqss6 * dscqss_dsc[231] +
           dwdot0dscqss7 * dscqss_dsc[266] + dwdot0dscqss9 * dscqss_dsc[336] +
           dwdot0dscqss11 * dscqss_dsc[406] + dwdot0dscqss12 * dscqss_dsc[441] +
           dwdot0dscqss14 * dscqss_dsc[511] + dwdot0dscqss13 * dscqss_dsc[476] +
           dwdot0dscqss15 * dscqss_dsc[546] + dwdot0dscqss8 * dscqss_dsc[301] +
           dwdot0dscqss10 * dscqss_dsc[371];
  J[792] = dwdot0dsc22 + dwdot0dscqss0 * dscqss_dsc[22] +
           dwdot0dscqss16 * dscqss_dsc[582] + dwdot0dscqss1 * dscqss_dsc[57] +
           dwdot0dscqss17 * dscqss_dsc[617] + dwdot0dscqss2 * dscqss_dsc[92] +
           dwdot0dscqss3 * dscqss_dsc[127] + dwdot0dscqss4 * dscqss_dsc[162] +
           dwdot0dscqss5 * dscqss_dsc[197] + dwdot0dscqss6 * dscqss_dsc[232] +
           dwdot0dscqss7 * dscqss_dsc[267] + dwdot0dscqss9 * dscqss_dsc[337] +
           dwdot0dscqss11 * dscqss_dsc[407] + dwdot0dscqss12 * dscqss_dsc[442] +
           dwdot0dscqss14 * dscqss_dsc[512] + dwdot0dscqss13 * dscqss_dsc[477] +
           dwdot0dscqss15 * dscqss_dsc[547] + dwdot0dscqss8 * dscqss_dsc[302] +
           dwdot0dscqss10 * dscqss_dsc[372];
  J[828] = dwdot0dsc23 + dwdot0dscqss0 * dscqss_dsc[23] +
           dwdot0dscqss16 * dscqss_dsc[583] + dwdot0dscqss1 * dscqss_dsc[58] +
           dwdot0dscqss17 * dscqss_dsc[618] + dwdot0dscqss2 * dscqss_dsc[93] +
           dwdot0dscqss3 * dscqss_dsc[128] + dwdot0dscqss4 * dscqss_dsc[163] +
           dwdot0dscqss5 * dscqss_dsc[198] + dwdot0dscqss6 * dscqss_dsc[233] +
           dwdot0dscqss7 * dscqss_dsc[268] + dwdot0dscqss9 * dscqss_dsc[338] +
           dwdot0dscqss11 * dscqss_dsc[408] + dwdot0dscqss12 * dscqss_dsc[443] +
           dwdot0dscqss14 * dscqss_dsc[513] + dwdot0dscqss13 * dscqss_dsc[478] +
           dwdot0dscqss15 * dscqss_dsc[548] + dwdot0dscqss8 * dscqss_dsc[303] +
           dwdot0dscqss10 * dscqss_dsc[373];
  J[864] = dwdot0dsc24 + dwdot0dscqss0 * dscqss_dsc[24] +
           dwdot0dscqss16 * dscqss_dsc[584] + dwdot0dscqss1 * dscqss_dsc[59] +
           dwdot0dscqss17 * dscqss_dsc[619] + dwdot0dscqss2 * dscqss_dsc[94] +
           dwdot0dscqss3 * dscqss_dsc[129] + dwdot0dscqss4 * dscqss_dsc[164] +
           dwdot0dscqss5 * dscqss_dsc[199] + dwdot0dscqss6 * dscqss_dsc[234] +
           dwdot0dscqss7 * dscqss_dsc[269] + dwdot0dscqss9 * dscqss_dsc[339] +
           dwdot0dscqss11 * dscqss_dsc[409] + dwdot0dscqss12 * dscqss_dsc[444] +
           dwdot0dscqss14 * dscqss_dsc[514] + dwdot0dscqss13 * dscqss_dsc[479] +
           dwdot0dscqss15 * dscqss_dsc[549] + dwdot0dscqss8 * dscqss_dsc[304] +
           dwdot0dscqss10 * dscqss_dsc[374];
  J[900] = dwdot0dsc25 + dwdot0dscqss0 * dscqss_dsc[25] +
           dwdot0dscqss16 * dscqss_dsc[585] + dwdot0dscqss1 * dscqss_dsc[60] +
           dwdot0dscqss17 * dscqss_dsc[620] + dwdot0dscqss2 * dscqss_dsc[95] +
           dwdot0dscqss3 * dscqss_dsc[130] + dwdot0dscqss4 * dscqss_dsc[165] +
           dwdot0dscqss5 * dscqss_dsc[200] + dwdot0dscqss6 * dscqss_dsc[235] +
           dwdot0dscqss7 * dscqss_dsc[270] + dwdot0dscqss9 * dscqss_dsc[340] +
           dwdot0dscqss11 * dscqss_dsc[410] + dwdot0dscqss12 * dscqss_dsc[445] +
           dwdot0dscqss14 * dscqss_dsc[515] + dwdot0dscqss13 * dscqss_dsc[480] +
           dwdot0dscqss15 * dscqss_dsc[550] + dwdot0dscqss8 * dscqss_dsc[305] +
           dwdot0dscqss10 * dscqss_dsc[375];
  J[936] = dwdot0dsc26 + dwdot0dscqss0 * dscqss_dsc[26] +
           dwdot0dscqss16 * dscqss_dsc[586] + dwdot0dscqss1 * dscqss_dsc[61] +
           dwdot0dscqss17 * dscqss_dsc[621] + dwdot0dscqss2 * dscqss_dsc[96] +
           dwdot0dscqss3 * dscqss_dsc[131] + dwdot0dscqss4 * dscqss_dsc[166] +
           dwdot0dscqss5 * dscqss_dsc[201] + dwdot0dscqss6 * dscqss_dsc[236] +
           dwdot0dscqss7 * dscqss_dsc[271] + dwdot0dscqss9 * dscqss_dsc[341] +
           dwdot0dscqss11 * dscqss_dsc[411] + dwdot0dscqss12 * dscqss_dsc[446] +
           dwdot0dscqss14 * dscqss_dsc[516] + dwdot0dscqss13 * dscqss_dsc[481] +
           dwdot0dscqss15 * dscqss_dsc[551] + dwdot0dscqss8 * dscqss_dsc[306] +
           dwdot0dscqss10 * dscqss_dsc[376];
  J[972] = dwdot0dsc27 + dwdot0dscqss0 * dscqss_dsc[27] +
           dwdot0dscqss16 * dscqss_dsc[587] + dwdot0dscqss1 * dscqss_dsc[62] +
           dwdot0dscqss17 * dscqss_dsc[622] + dwdot0dscqss2 * dscqss_dsc[97] +
           dwdot0dscqss3 * dscqss_dsc[132] + dwdot0dscqss4 * dscqss_dsc[167] +
           dwdot0dscqss5 * dscqss_dsc[202] + dwdot0dscqss6 * dscqss_dsc[237] +
           dwdot0dscqss7 * dscqss_dsc[272] + dwdot0dscqss9 * dscqss_dsc[342] +
           dwdot0dscqss11 * dscqss_dsc[412] + dwdot0dscqss12 * dscqss_dsc[447] +
           dwdot0dscqss14 * dscqss_dsc[517] + dwdot0dscqss13 * dscqss_dsc[482] +
           dwdot0dscqss15 * dscqss_dsc[552] + dwdot0dscqss8 * dscqss_dsc[307] +
           dwdot0dscqss10 * dscqss_dsc[377];
  J[1008] =
    dwdot0dsc28 + dwdot0dscqss0 * dscqss_dsc[28] +
    dwdot0dscqss16 * dscqss_dsc[588] + dwdot0dscqss1 * dscqss_dsc[63] +
    dwdot0dscqss17 * dscqss_dsc[623] + dwdot0dscqss2 * dscqss_dsc[98] +
    dwdot0dscqss3 * dscqss_dsc[133] + dwdot0dscqss4 * dscqss_dsc[168] +
    dwdot0dscqss5 * dscqss_dsc[203] + dwdot0dscqss6 * dscqss_dsc[238] +
    dwdot0dscqss7 * dscqss_dsc[273] + dwdot0dscqss9 * dscqss_dsc[343] +
    dwdot0dscqss11 * dscqss_dsc[413] + dwdot0dscqss12 * dscqss_dsc[448] +
    dwdot0dscqss14 * dscqss_dsc[518] + dwdot0dscqss13 * dscqss_dsc[483] +
    dwdot0dscqss15 * dscqss_dsc[553] + dwdot0dscqss8 * dscqss_dsc[308] +
    dwdot0dscqss10 * dscqss_dsc[378];
  J[1044] =
    dwdot0dsc29 + dwdot0dscqss0 * dscqss_dsc[29] +
    dwdot0dscqss16 * dscqss_dsc[589] + dwdot0dscqss1 * dscqss_dsc[64] +
    dwdot0dscqss17 * dscqss_dsc[624] + dwdot0dscqss2 * dscqss_dsc[99] +
    dwdot0dscqss3 * dscqss_dsc[134] + dwdot0dscqss4 * dscqss_dsc[169] +
    dwdot0dscqss5 * dscqss_dsc[204] + dwdot0dscqss6 * dscqss_dsc[239] +
    dwdot0dscqss7 * dscqss_dsc[274] + dwdot0dscqss9 * dscqss_dsc[344] +
    dwdot0dscqss11 * dscqss_dsc[414] + dwdot0dscqss12 * dscqss_dsc[449] +
    dwdot0dscqss14 * dscqss_dsc[519] + dwdot0dscqss13 * dscqss_dsc[484] +
    dwdot0dscqss15 * dscqss_dsc[554] + dwdot0dscqss8 * dscqss_dsc[309] +
    dwdot0dscqss10 * dscqss_dsc[379];
  J[1080] =
    dwdot0dsc30 + dwdot0dscqss0 * dscqss_dsc[30] +
    dwdot0dscqss16 * dscqss_dsc[590] + dwdot0dscqss1 * dscqss_dsc[65] +
    dwdot0dscqss17 * dscqss_dsc[625] + dwdot0dscqss2 * dscqss_dsc[100] +
    dwdot0dscqss3 * dscqss_dsc[135] + dwdot0dscqss4 * dscqss_dsc[170] +
    dwdot0dscqss5 * dscqss_dsc[205] + dwdot0dscqss6 * dscqss_dsc[240] +
    dwdot0dscqss7 * dscqss_dsc[275] + dwdot0dscqss9 * dscqss_dsc[345] +
    dwdot0dscqss11 * dscqss_dsc[415] + dwdot0dscqss12 * dscqss_dsc[450] +
    dwdot0dscqss14 * dscqss_dsc[520] + dwdot0dscqss13 * dscqss_dsc[485] +
    dwdot0dscqss15 * dscqss_dsc[555] + dwdot0dscqss8 * dscqss_dsc[310] +
    dwdot0dscqss10 * dscqss_dsc[380];
  J[1116] =
    dwdot0dsc31 + dwdot0dscqss0 * dscqss_dsc[31] +
    dwdot0dscqss16 * dscqss_dsc[591] + dwdot0dscqss1 * dscqss_dsc[66] +
    dwdot0dscqss17 * dscqss_dsc[626] + dwdot0dscqss2 * dscqss_dsc[101] +
    dwdot0dscqss3 * dscqss_dsc[136] + dwdot0dscqss4 * dscqss_dsc[171] +
    dwdot0dscqss5 * dscqss_dsc[206] + dwdot0dscqss6 * dscqss_dsc[241] +
    dwdot0dscqss7 * dscqss_dsc[276] + dwdot0dscqss9 * dscqss_dsc[346] +
    dwdot0dscqss11 * dscqss_dsc[416] + dwdot0dscqss12 * dscqss_dsc[451] +
    dwdot0dscqss14 * dscqss_dsc[521] + dwdot0dscqss13 * dscqss_dsc[486] +
    dwdot0dscqss15 * dscqss_dsc[556] + dwdot0dscqss8 * dscqss_dsc[311] +
    dwdot0dscqss10 * dscqss_dsc[381];
  J[1152] =
    dwdot0dsc32 + dwdot0dscqss0 * dscqss_dsc[32] +
    dwdot0dscqss16 * dscqss_dsc[592] + dwdot0dscqss1 * dscqss_dsc[67] +
    dwdot0dscqss17 * dscqss_dsc[627] + dwdot0dscqss2 * dscqss_dsc[102] +
    dwdot0dscqss3 * dscqss_dsc[137] + dwdot0dscqss4 * dscqss_dsc[172] +
    dwdot0dscqss5 * dscqss_dsc[207] + dwdot0dscqss6 * dscqss_dsc[242] +
    dwdot0dscqss7 * dscqss_dsc[277] + dwdot0dscqss9 * dscqss_dsc[347] +
    dwdot0dscqss11 * dscqss_dsc[417] + dwdot0dscqss12 * dscqss_dsc[452] +
    dwdot0dscqss14 * dscqss_dsc[522] + dwdot0dscqss13 * dscqss_dsc[487] +
    dwdot0dscqss15 * dscqss_dsc[557] + dwdot0dscqss8 * dscqss_dsc[312] +
    dwdot0dscqss10 * dscqss_dsc[382];
  J[1188] =
    dwdot0dsc33 + dwdot0dscqss0 * dscqss_dsc[33] +
    dwdot0dscqss16 * dscqss_dsc[593] + dwdot0dscqss1 * dscqss_dsc[68] +
    dwdot0dscqss17 * dscqss_dsc[628] + dwdot0dscqss2 * dscqss_dsc[103] +
    dwdot0dscqss3 * dscqss_dsc[138] + dwdot0dscqss4 * dscqss_dsc[173] +
    dwdot0dscqss5 * dscqss_dsc[208] + dwdot0dscqss6 * dscqss_dsc[243] +
    dwdot0dscqss7 * dscqss_dsc[278] + dwdot0dscqss9 * dscqss_dsc[348] +
    dwdot0dscqss11 * dscqss_dsc[418] + dwdot0dscqss12 * dscqss_dsc[453] +
    dwdot0dscqss14 * dscqss_dsc[523] + dwdot0dscqss13 * dscqss_dsc[488] +
    dwdot0dscqss15 * dscqss_dsc[558] + dwdot0dscqss8 * dscqss_dsc[313] +
    dwdot0dscqss10 * dscqss_dsc[383];
  J[1224] =
    dwdot0dsc34 + dwdot0dscqss0 * dscqss_dsc[34] +
    dwdot0dscqss16 * dscqss_dsc[594] + dwdot0dscqss1 * dscqss_dsc[69] +
    dwdot0dscqss17 * dscqss_dsc[629] + dwdot0dscqss2 * dscqss_dsc[104] +
    dwdot0dscqss3 * dscqss_dsc[139] + dwdot0dscqss4 * dscqss_dsc[174] +
    dwdot0dscqss5 * dscqss_dsc[209] + dwdot0dscqss6 * dscqss_dsc[244] +
    dwdot0dscqss7 * dscqss_dsc[279] + dwdot0dscqss9 * dscqss_dsc[349] +
    dwdot0dscqss11 * dscqss_dsc[419] + dwdot0dscqss12 * dscqss_dsc[454] +
    dwdot0dscqss14 * dscqss_dsc[524] + dwdot0dscqss13 * dscqss_dsc[489] +
    dwdot0dscqss15 * dscqss_dsc[559] + dwdot0dscqss8 * dscqss_dsc[314] +
    dwdot0dscqss10 * dscqss_dsc[384];
  J[1] = dwdot1dsc0 + dwdot1dscqss0 * dscqss_dsc[0] +
         dwdot1dscqss16 * dscqss_dsc[560] + dwdot1dscqss1 * dscqss_dsc[35] +
         dwdot1dscqss17 * dscqss_dsc[595] + dwdot1dscqss2 * dscqss_dsc[70] +
         dwdot1dscqss3 * dscqss_dsc[105] + dwdot1dscqss4 * dscqss_dsc[140] +
         dwdot1dscqss5 * dscqss_dsc[175] + dwdot1dscqss6 * dscqss_dsc[210] +
         dwdot1dscqss7 * dscqss_dsc[245] + dwdot1dscqss9 * dscqss_dsc[315] +
         dwdot1dscqss11 * dscqss_dsc[385] + dwdot1dscqss12 * dscqss_dsc[420] +
         dwdot1dscqss14 * dscqss_dsc[490] + dwdot1dscqss13 * dscqss_dsc[455] +
         dwdot1dscqss15 * dscqss_dsc[525] + dwdot1dscqss8 * dscqss_dsc[280] +
         dwdot1dscqss10 * dscqss_dsc[350];
  J[37] = dwdot1dsc1 + dwdot1dscqss0 * dscqss_dsc[1] +
          dwdot1dscqss16 * dscqss_dsc[561] + dwdot1dscqss1 * dscqss_dsc[36] +
          dwdot1dscqss17 * dscqss_dsc[596] + dwdot1dscqss2 * dscqss_dsc[71] +
          dwdot1dscqss3 * dscqss_dsc[106] + dwdot1dscqss4 * dscqss_dsc[141] +
          dwdot1dscqss5 * dscqss_dsc[176] + dwdot1dscqss6 * dscqss_dsc[211] +
          dwdot1dscqss7 * dscqss_dsc[246] + dwdot1dscqss9 * dscqss_dsc[316] +
          dwdot1dscqss11 * dscqss_dsc[386] + dwdot1dscqss12 * dscqss_dsc[421] +
          dwdot1dscqss14 * dscqss_dsc[491] + dwdot1dscqss13 * dscqss_dsc[456] +
          dwdot1dscqss15 * dscqss_dsc[526] + dwdot1dscqss8 * dscqss_dsc[281] +
          dwdot1dscqss10 * dscqss_dsc[351];
  J[73] = dwdot1dsc2 + dwdot1dscqss0 * dscqss_dsc[2] +
          dwdot1dscqss16 * dscqss_dsc[562] + dwdot1dscqss1 * dscqss_dsc[37] +
          dwdot1dscqss17 * dscqss_dsc[597] + dwdot1dscqss2 * dscqss_dsc[72] +
          dwdot1dscqss3 * dscqss_dsc[107] + dwdot1dscqss4 * dscqss_dsc[142] +
          dwdot1dscqss5 * dscqss_dsc[177] + dwdot1dscqss6 * dscqss_dsc[212] +
          dwdot1dscqss7 * dscqss_dsc[247] + dwdot1dscqss9 * dscqss_dsc[317] +
          dwdot1dscqss11 * dscqss_dsc[387] + dwdot1dscqss12 * dscqss_dsc[422] +
          dwdot1dscqss14 * dscqss_dsc[492] + dwdot1dscqss13 * dscqss_dsc[457] +
          dwdot1dscqss15 * dscqss_dsc[527] + dwdot1dscqss8 * dscqss_dsc[282] +
          dwdot1dscqss10 * dscqss_dsc[352];
  J[109] = dwdot1dsc3 + dwdot1dscqss0 * dscqss_dsc[3] +
           dwdot1dscqss16 * dscqss_dsc[563] + dwdot1dscqss1 * dscqss_dsc[38] +
           dwdot1dscqss17 * dscqss_dsc[598] + dwdot1dscqss2 * dscqss_dsc[73] +
           dwdot1dscqss3 * dscqss_dsc[108] + dwdot1dscqss4 * dscqss_dsc[143] +
           dwdot1dscqss5 * dscqss_dsc[178] + dwdot1dscqss6 * dscqss_dsc[213] +
           dwdot1dscqss7 * dscqss_dsc[248] + dwdot1dscqss9 * dscqss_dsc[318] +
           dwdot1dscqss11 * dscqss_dsc[388] + dwdot1dscqss12 * dscqss_dsc[423] +
           dwdot1dscqss14 * dscqss_dsc[493] + dwdot1dscqss13 * dscqss_dsc[458] +
           dwdot1dscqss15 * dscqss_dsc[528] + dwdot1dscqss8 * dscqss_dsc[283] +
           dwdot1dscqss10 * dscqss_dsc[353];
  J[145] = dwdot1dsc4 + dwdot1dscqss0 * dscqss_dsc[4] +
           dwdot1dscqss16 * dscqss_dsc[564] + dwdot1dscqss1 * dscqss_dsc[39] +
           dwdot1dscqss17 * dscqss_dsc[599] + dwdot1dscqss2 * dscqss_dsc[74] +
           dwdot1dscqss3 * dscqss_dsc[109] + dwdot1dscqss4 * dscqss_dsc[144] +
           dwdot1dscqss5 * dscqss_dsc[179] + dwdot1dscqss6 * dscqss_dsc[214] +
           dwdot1dscqss7 * dscqss_dsc[249] + dwdot1dscqss9 * dscqss_dsc[319] +
           dwdot1dscqss11 * dscqss_dsc[389] + dwdot1dscqss12 * dscqss_dsc[424] +
           dwdot1dscqss14 * dscqss_dsc[494] + dwdot1dscqss13 * dscqss_dsc[459] +
           dwdot1dscqss15 * dscqss_dsc[529] + dwdot1dscqss8 * dscqss_dsc[284] +
           dwdot1dscqss10 * dscqss_dsc[354];
  J[181] = dwdot1dsc5 + dwdot1dscqss0 * dscqss_dsc[5] +
           dwdot1dscqss16 * dscqss_dsc[565] + dwdot1dscqss1 * dscqss_dsc[40] +
           dwdot1dscqss17 * dscqss_dsc[600] + dwdot1dscqss2 * dscqss_dsc[75] +
           dwdot1dscqss3 * dscqss_dsc[110] + dwdot1dscqss4 * dscqss_dsc[145] +
           dwdot1dscqss5 * dscqss_dsc[180] + dwdot1dscqss6 * dscqss_dsc[215] +
           dwdot1dscqss7 * dscqss_dsc[250] + dwdot1dscqss9 * dscqss_dsc[320] +
           dwdot1dscqss11 * dscqss_dsc[390] + dwdot1dscqss12 * dscqss_dsc[425] +
           dwdot1dscqss14 * dscqss_dsc[495] + dwdot1dscqss13 * dscqss_dsc[460] +
           dwdot1dscqss15 * dscqss_dsc[530] + dwdot1dscqss8 * dscqss_dsc[285] +
           dwdot1dscqss10 * dscqss_dsc[355];
  J[217] = dwdot1dsc6 + dwdot1dscqss0 * dscqss_dsc[6] +
           dwdot1dscqss16 * dscqss_dsc[566] + dwdot1dscqss1 * dscqss_dsc[41] +
           dwdot1dscqss17 * dscqss_dsc[601] + dwdot1dscqss2 * dscqss_dsc[76] +
           dwdot1dscqss3 * dscqss_dsc[111] + dwdot1dscqss4 * dscqss_dsc[146] +
           dwdot1dscqss5 * dscqss_dsc[181] + dwdot1dscqss6 * dscqss_dsc[216] +
           dwdot1dscqss7 * dscqss_dsc[251] + dwdot1dscqss9 * dscqss_dsc[321] +
           dwdot1dscqss11 * dscqss_dsc[391] + dwdot1dscqss12 * dscqss_dsc[426] +
           dwdot1dscqss14 * dscqss_dsc[496] + dwdot1dscqss13 * dscqss_dsc[461] +
           dwdot1dscqss15 * dscqss_dsc[531] + dwdot1dscqss8 * dscqss_dsc[286] +
           dwdot1dscqss10 * dscqss_dsc[356];
  J[253] = dwdot1dsc7 + dwdot1dscqss0 * dscqss_dsc[7] +
           dwdot1dscqss16 * dscqss_dsc[567] + dwdot1dscqss1 * dscqss_dsc[42] +
           dwdot1dscqss17 * dscqss_dsc[602] + dwdot1dscqss2 * dscqss_dsc[77] +
           dwdot1dscqss3 * dscqss_dsc[112] + dwdot1dscqss4 * dscqss_dsc[147] +
           dwdot1dscqss5 * dscqss_dsc[182] + dwdot1dscqss6 * dscqss_dsc[217] +
           dwdot1dscqss7 * dscqss_dsc[252] + dwdot1dscqss9 * dscqss_dsc[322] +
           dwdot1dscqss11 * dscqss_dsc[392] + dwdot1dscqss12 * dscqss_dsc[427] +
           dwdot1dscqss14 * dscqss_dsc[497] + dwdot1dscqss13 * dscqss_dsc[462] +
           dwdot1dscqss15 * dscqss_dsc[532] + dwdot1dscqss8 * dscqss_dsc[287] +
           dwdot1dscqss10 * dscqss_dsc[357];
  J[289] = dwdot1dsc8 + dwdot1dscqss0 * dscqss_dsc[8] +
           dwdot1dscqss16 * dscqss_dsc[568] + dwdot1dscqss1 * dscqss_dsc[43] +
           dwdot1dscqss17 * dscqss_dsc[603] + dwdot1dscqss2 * dscqss_dsc[78] +
           dwdot1dscqss3 * dscqss_dsc[113] + dwdot1dscqss4 * dscqss_dsc[148] +
           dwdot1dscqss5 * dscqss_dsc[183] + dwdot1dscqss6 * dscqss_dsc[218] +
           dwdot1dscqss7 * dscqss_dsc[253] + dwdot1dscqss9 * dscqss_dsc[323] +
           dwdot1dscqss11 * dscqss_dsc[393] + dwdot1dscqss12 * dscqss_dsc[428] +
           dwdot1dscqss14 * dscqss_dsc[498] + dwdot1dscqss13 * dscqss_dsc[463] +
           dwdot1dscqss15 * dscqss_dsc[533] + dwdot1dscqss8 * dscqss_dsc[288] +
           dwdot1dscqss10 * dscqss_dsc[358];
  J[325] = dwdot1dsc9 + dwdot1dscqss0 * dscqss_dsc[9] +
           dwdot1dscqss16 * dscqss_dsc[569] + dwdot1dscqss1 * dscqss_dsc[44] +
           dwdot1dscqss17 * dscqss_dsc[604] + dwdot1dscqss2 * dscqss_dsc[79] +
           dwdot1dscqss3 * dscqss_dsc[114] + dwdot1dscqss4 * dscqss_dsc[149] +
           dwdot1dscqss5 * dscqss_dsc[184] + dwdot1dscqss6 * dscqss_dsc[219] +
           dwdot1dscqss7 * dscqss_dsc[254] + dwdot1dscqss9 * dscqss_dsc[324] +
           dwdot1dscqss11 * dscqss_dsc[394] + dwdot1dscqss12 * dscqss_dsc[429] +
           dwdot1dscqss14 * dscqss_dsc[499] + dwdot1dscqss13 * dscqss_dsc[464] +
           dwdot1dscqss15 * dscqss_dsc[534] + dwdot1dscqss8 * dscqss_dsc[289] +
           dwdot1dscqss10 * dscqss_dsc[359];
  J[361] = dwdot1dsc10 + dwdot1dscqss0 * dscqss_dsc[10] +
           dwdot1dscqss16 * dscqss_dsc[570] + dwdot1dscqss1 * dscqss_dsc[45] +
           dwdot1dscqss17 * dscqss_dsc[605] + dwdot1dscqss2 * dscqss_dsc[80] +
           dwdot1dscqss3 * dscqss_dsc[115] + dwdot1dscqss4 * dscqss_dsc[150] +
           dwdot1dscqss5 * dscqss_dsc[185] + dwdot1dscqss6 * dscqss_dsc[220] +
           dwdot1dscqss7 * dscqss_dsc[255] + dwdot1dscqss9 * dscqss_dsc[325] +
           dwdot1dscqss11 * dscqss_dsc[395] + dwdot1dscqss12 * dscqss_dsc[430] +
           dwdot1dscqss14 * dscqss_dsc[500] + dwdot1dscqss13 * dscqss_dsc[465] +
           dwdot1dscqss15 * dscqss_dsc[535] + dwdot1dscqss8 * dscqss_dsc[290] +
           dwdot1dscqss10 * dscqss_dsc[360];
  J[397] = dwdot1dsc11 + dwdot1dscqss0 * dscqss_dsc[11] +
           dwdot1dscqss16 * dscqss_dsc[571] + dwdot1dscqss1 * dscqss_dsc[46] +
           dwdot1dscqss17 * dscqss_dsc[606] + dwdot1dscqss2 * dscqss_dsc[81] +
           dwdot1dscqss3 * dscqss_dsc[116] + dwdot1dscqss4 * dscqss_dsc[151] +
           dwdot1dscqss5 * dscqss_dsc[186] + dwdot1dscqss6 * dscqss_dsc[221] +
           dwdot1dscqss7 * dscqss_dsc[256] + dwdot1dscqss9 * dscqss_dsc[326] +
           dwdot1dscqss11 * dscqss_dsc[396] + dwdot1dscqss12 * dscqss_dsc[431] +
           dwdot1dscqss14 * dscqss_dsc[501] + dwdot1dscqss13 * dscqss_dsc[466] +
           dwdot1dscqss15 * dscqss_dsc[536] + dwdot1dscqss8 * dscqss_dsc[291] +
           dwdot1dscqss10 * dscqss_dsc[361];
  J[433] = dwdot1dsc12 + dwdot1dscqss0 * dscqss_dsc[12] +
           dwdot1dscqss16 * dscqss_dsc[572] + dwdot1dscqss1 * dscqss_dsc[47] +
           dwdot1dscqss17 * dscqss_dsc[607] + dwdot1dscqss2 * dscqss_dsc[82] +
           dwdot1dscqss3 * dscqss_dsc[117] + dwdot1dscqss4 * dscqss_dsc[152] +
           dwdot1dscqss5 * dscqss_dsc[187] + dwdot1dscqss6 * dscqss_dsc[222] +
           dwdot1dscqss7 * dscqss_dsc[257] + dwdot1dscqss9 * dscqss_dsc[327] +
           dwdot1dscqss11 * dscqss_dsc[397] + dwdot1dscqss12 * dscqss_dsc[432] +
           dwdot1dscqss14 * dscqss_dsc[502] + dwdot1dscqss13 * dscqss_dsc[467] +
           dwdot1dscqss15 * dscqss_dsc[537] + dwdot1dscqss8 * dscqss_dsc[292] +
           dwdot1dscqss10 * dscqss_dsc[362];
  J[469] = dwdot1dsc13 + dwdot1dscqss0 * dscqss_dsc[13] +
           dwdot1dscqss16 * dscqss_dsc[573] + dwdot1dscqss1 * dscqss_dsc[48] +
           dwdot1dscqss17 * dscqss_dsc[608] + dwdot1dscqss2 * dscqss_dsc[83] +
           dwdot1dscqss3 * dscqss_dsc[118] + dwdot1dscqss4 * dscqss_dsc[153] +
           dwdot1dscqss5 * dscqss_dsc[188] + dwdot1dscqss6 * dscqss_dsc[223] +
           dwdot1dscqss7 * dscqss_dsc[258] + dwdot1dscqss9 * dscqss_dsc[328] +
           dwdot1dscqss11 * dscqss_dsc[398] + dwdot1dscqss12 * dscqss_dsc[433] +
           dwdot1dscqss14 * dscqss_dsc[503] + dwdot1dscqss13 * dscqss_dsc[468] +
           dwdot1dscqss15 * dscqss_dsc[538] + dwdot1dscqss8 * dscqss_dsc[293] +
           dwdot1dscqss10 * dscqss_dsc[363];
  J[505] = dwdot1dsc14 + dwdot1dscqss0 * dscqss_dsc[14] +
           dwdot1dscqss16 * dscqss_dsc[574] + dwdot1dscqss1 * dscqss_dsc[49] +
           dwdot1dscqss17 * dscqss_dsc[609] + dwdot1dscqss2 * dscqss_dsc[84] +
           dwdot1dscqss3 * dscqss_dsc[119] + dwdot1dscqss4 * dscqss_dsc[154] +
           dwdot1dscqss5 * dscqss_dsc[189] + dwdot1dscqss6 * dscqss_dsc[224] +
           dwdot1dscqss7 * dscqss_dsc[259] + dwdot1dscqss9 * dscqss_dsc[329] +
           dwdot1dscqss11 * dscqss_dsc[399] + dwdot1dscqss12 * dscqss_dsc[434] +
           dwdot1dscqss14 * dscqss_dsc[504] + dwdot1dscqss13 * dscqss_dsc[469] +
           dwdot1dscqss15 * dscqss_dsc[539] + dwdot1dscqss8 * dscqss_dsc[294] +
           dwdot1dscqss10 * dscqss_dsc[364];
  J[541] = dwdot1dsc15 + dwdot1dscqss0 * dscqss_dsc[15] +
           dwdot1dscqss16 * dscqss_dsc[575] + dwdot1dscqss1 * dscqss_dsc[50] +
           dwdot1dscqss17 * dscqss_dsc[610] + dwdot1dscqss2 * dscqss_dsc[85] +
           dwdot1dscqss3 * dscqss_dsc[120] + dwdot1dscqss4 * dscqss_dsc[155] +
           dwdot1dscqss5 * dscqss_dsc[190] + dwdot1dscqss6 * dscqss_dsc[225] +
           dwdot1dscqss7 * dscqss_dsc[260] + dwdot1dscqss9 * dscqss_dsc[330] +
           dwdot1dscqss11 * dscqss_dsc[400] + dwdot1dscqss12 * dscqss_dsc[435] +
           dwdot1dscqss14 * dscqss_dsc[505] + dwdot1dscqss13 * dscqss_dsc[470] +
           dwdot1dscqss15 * dscqss_dsc[540] + dwdot1dscqss8 * dscqss_dsc[295] +
           dwdot1dscqss10 * dscqss_dsc[365];
  J[577] = dwdot1dsc16 + dwdot1dscqss0 * dscqss_dsc[16] +
           dwdot1dscqss16 * dscqss_dsc[576] + dwdot1dscqss1 * dscqss_dsc[51] +
           dwdot1dscqss17 * dscqss_dsc[611] + dwdot1dscqss2 * dscqss_dsc[86] +
           dwdot1dscqss3 * dscqss_dsc[121] + dwdot1dscqss4 * dscqss_dsc[156] +
           dwdot1dscqss5 * dscqss_dsc[191] + dwdot1dscqss6 * dscqss_dsc[226] +
           dwdot1dscqss7 * dscqss_dsc[261] + dwdot1dscqss9 * dscqss_dsc[331] +
           dwdot1dscqss11 * dscqss_dsc[401] + dwdot1dscqss12 * dscqss_dsc[436] +
           dwdot1dscqss14 * dscqss_dsc[506] + dwdot1dscqss13 * dscqss_dsc[471] +
           dwdot1dscqss15 * dscqss_dsc[541] + dwdot1dscqss8 * dscqss_dsc[296] +
           dwdot1dscqss10 * dscqss_dsc[366];
  J[613] = dwdot1dsc17 + dwdot1dscqss0 * dscqss_dsc[17] +
           dwdot1dscqss16 * dscqss_dsc[577] + dwdot1dscqss1 * dscqss_dsc[52] +
           dwdot1dscqss17 * dscqss_dsc[612] + dwdot1dscqss2 * dscqss_dsc[87] +
           dwdot1dscqss3 * dscqss_dsc[122] + dwdot1dscqss4 * dscqss_dsc[157] +
           dwdot1dscqss5 * dscqss_dsc[192] + dwdot1dscqss6 * dscqss_dsc[227] +
           dwdot1dscqss7 * dscqss_dsc[262] + dwdot1dscqss9 * dscqss_dsc[332] +
           dwdot1dscqss11 * dscqss_dsc[402] + dwdot1dscqss12 * dscqss_dsc[437] +
           dwdot1dscqss14 * dscqss_dsc[507] + dwdot1dscqss13 * dscqss_dsc[472] +
           dwdot1dscqss15 * dscqss_dsc[542] + dwdot1dscqss8 * dscqss_dsc[297] +
           dwdot1dscqss10 * dscqss_dsc[367];
  J[649] = dwdot1dsc18 + dwdot1dscqss0 * dscqss_dsc[18] +
           dwdot1dscqss16 * dscqss_dsc[578] + dwdot1dscqss1 * dscqss_dsc[53] +
           dwdot1dscqss17 * dscqss_dsc[613] + dwdot1dscqss2 * dscqss_dsc[88] +
           dwdot1dscqss3 * dscqss_dsc[123] + dwdot1dscqss4 * dscqss_dsc[158] +
           dwdot1dscqss5 * dscqss_dsc[193] + dwdot1dscqss6 * dscqss_dsc[228] +
           dwdot1dscqss7 * dscqss_dsc[263] + dwdot1dscqss9 * dscqss_dsc[333] +
           dwdot1dscqss11 * dscqss_dsc[403] + dwdot1dscqss12 * dscqss_dsc[438] +
           dwdot1dscqss14 * dscqss_dsc[508] + dwdot1dscqss13 * dscqss_dsc[473] +
           dwdot1dscqss15 * dscqss_dsc[543] + dwdot1dscqss8 * dscqss_dsc[298] +
           dwdot1dscqss10 * dscqss_dsc[368];
  J[685] = dwdot1dsc19 + dwdot1dscqss0 * dscqss_dsc[19] +
           dwdot1dscqss16 * dscqss_dsc[579] + dwdot1dscqss1 * dscqss_dsc[54] +
           dwdot1dscqss17 * dscqss_dsc[614] + dwdot1dscqss2 * dscqss_dsc[89] +
           dwdot1dscqss3 * dscqss_dsc[124] + dwdot1dscqss4 * dscqss_dsc[159] +
           dwdot1dscqss5 * dscqss_dsc[194] + dwdot1dscqss6 * dscqss_dsc[229] +
           dwdot1dscqss7 * dscqss_dsc[264] + dwdot1dscqss9 * dscqss_dsc[334] +
           dwdot1dscqss11 * dscqss_dsc[404] + dwdot1dscqss12 * dscqss_dsc[439] +
           dwdot1dscqss14 * dscqss_dsc[509] + dwdot1dscqss13 * dscqss_dsc[474] +
           dwdot1dscqss15 * dscqss_dsc[544] + dwdot1dscqss8 * dscqss_dsc[299] +
           dwdot1dscqss10 * dscqss_dsc[369];
  J[721] = dwdot1dsc20 + dwdot1dscqss0 * dscqss_dsc[20] +
           dwdot1dscqss16 * dscqss_dsc[580] + dwdot1dscqss1 * dscqss_dsc[55] +
           dwdot1dscqss17 * dscqss_dsc[615] + dwdot1dscqss2 * dscqss_dsc[90] +
           dwdot1dscqss3 * dscqss_dsc[125] + dwdot1dscqss4 * dscqss_dsc[160] +
           dwdot1dscqss5 * dscqss_dsc[195] + dwdot1dscqss6 * dscqss_dsc[230] +
           dwdot1dscqss7 * dscqss_dsc[265] + dwdot1dscqss9 * dscqss_dsc[335] +
           dwdot1dscqss11 * dscqss_dsc[405] + dwdot1dscqss12 * dscqss_dsc[440] +
           dwdot1dscqss14 * dscqss_dsc[510] + dwdot1dscqss13 * dscqss_dsc[475] +
           dwdot1dscqss15 * dscqss_dsc[545] + dwdot1dscqss8 * dscqss_dsc[300] +
           dwdot1dscqss10 * dscqss_dsc[370];
  J[757] = dwdot1dsc21 + dwdot1dscqss0 * dscqss_dsc[21] +
           dwdot1dscqss16 * dscqss_dsc[581] + dwdot1dscqss1 * dscqss_dsc[56] +
           dwdot1dscqss17 * dscqss_dsc[616] + dwdot1dscqss2 * dscqss_dsc[91] +
           dwdot1dscqss3 * dscqss_dsc[126] + dwdot1dscqss4 * dscqss_dsc[161] +
           dwdot1dscqss5 * dscqss_dsc[196] + dwdot1dscqss6 * dscqss_dsc[231] +
           dwdot1dscqss7 * dscqss_dsc[266] + dwdot1dscqss9 * dscqss_dsc[336] +
           dwdot1dscqss11 * dscqss_dsc[406] + dwdot1dscqss12 * dscqss_dsc[441] +
           dwdot1dscqss14 * dscqss_dsc[511] + dwdot1dscqss13 * dscqss_dsc[476] +
           dwdot1dscqss15 * dscqss_dsc[546] + dwdot1dscqss8 * dscqss_dsc[301] +
           dwdot1dscqss10 * dscqss_dsc[371];
  J[793] = dwdot1dsc22 + dwdot1dscqss0 * dscqss_dsc[22] +
           dwdot1dscqss16 * dscqss_dsc[582] + dwdot1dscqss1 * dscqss_dsc[57] +
           dwdot1dscqss17 * dscqss_dsc[617] + dwdot1dscqss2 * dscqss_dsc[92] +
           dwdot1dscqss3 * dscqss_dsc[127] + dwdot1dscqss4 * dscqss_dsc[162] +
           dwdot1dscqss5 * dscqss_dsc[197] + dwdot1dscqss6 * dscqss_dsc[232] +
           dwdot1dscqss7 * dscqss_dsc[267] + dwdot1dscqss9 * dscqss_dsc[337] +
           dwdot1dscqss11 * dscqss_dsc[407] + dwdot1dscqss12 * dscqss_dsc[442] +
           dwdot1dscqss14 * dscqss_dsc[512] + dwdot1dscqss13 * dscqss_dsc[477] +
           dwdot1dscqss15 * dscqss_dsc[547] + dwdot1dscqss8 * dscqss_dsc[302] +
           dwdot1dscqss10 * dscqss_dsc[372];
  J[829] = dwdot1dsc23 + dwdot1dscqss0 * dscqss_dsc[23] +
           dwdot1dscqss16 * dscqss_dsc[583] + dwdot1dscqss1 * dscqss_dsc[58] +
           dwdot1dscqss17 * dscqss_dsc[618] + dwdot1dscqss2 * dscqss_dsc[93] +
           dwdot1dscqss3 * dscqss_dsc[128] + dwdot1dscqss4 * dscqss_dsc[163] +
           dwdot1dscqss5 * dscqss_dsc[198] + dwdot1dscqss6 * dscqss_dsc[233] +
           dwdot1dscqss7 * dscqss_dsc[268] + dwdot1dscqss9 * dscqss_dsc[338] +
           dwdot1dscqss11 * dscqss_dsc[408] + dwdot1dscqss12 * dscqss_dsc[443] +
           dwdot1dscqss14 * dscqss_dsc[513] + dwdot1dscqss13 * dscqss_dsc[478] +
           dwdot1dscqss15 * dscqss_dsc[548] + dwdot1dscqss8 * dscqss_dsc[303] +
           dwdot1dscqss10 * dscqss_dsc[373];
  J[865] = dwdot1dsc24 + dwdot1dscqss0 * dscqss_dsc[24] +
           dwdot1dscqss16 * dscqss_dsc[584] + dwdot1dscqss1 * dscqss_dsc[59] +
           dwdot1dscqss17 * dscqss_dsc[619] + dwdot1dscqss2 * dscqss_dsc[94] +
           dwdot1dscqss3 * dscqss_dsc[129] + dwdot1dscqss4 * dscqss_dsc[164] +
           dwdot1dscqss5 * dscqss_dsc[199] + dwdot1dscqss6 * dscqss_dsc[234] +
           dwdot1dscqss7 * dscqss_dsc[269] + dwdot1dscqss9 * dscqss_dsc[339] +
           dwdot1dscqss11 * dscqss_dsc[409] + dwdot1dscqss12 * dscqss_dsc[444] +
           dwdot1dscqss14 * dscqss_dsc[514] + dwdot1dscqss13 * dscqss_dsc[479] +
           dwdot1dscqss15 * dscqss_dsc[549] + dwdot1dscqss8 * dscqss_dsc[304] +
           dwdot1dscqss10 * dscqss_dsc[374];
  J[901] = dwdot1dsc25 + dwdot1dscqss0 * dscqss_dsc[25] +
           dwdot1dscqss16 * dscqss_dsc[585] + dwdot1dscqss1 * dscqss_dsc[60] +
           dwdot1dscqss17 * dscqss_dsc[620] + dwdot1dscqss2 * dscqss_dsc[95] +
           dwdot1dscqss3 * dscqss_dsc[130] + dwdot1dscqss4 * dscqss_dsc[165] +
           dwdot1dscqss5 * dscqss_dsc[200] + dwdot1dscqss6 * dscqss_dsc[235] +
           dwdot1dscqss7 * dscqss_dsc[270] + dwdot1dscqss9 * dscqss_dsc[340] +
           dwdot1dscqss11 * dscqss_dsc[410] + dwdot1dscqss12 * dscqss_dsc[445] +
           dwdot1dscqss14 * dscqss_dsc[515] + dwdot1dscqss13 * dscqss_dsc[480] +
           dwdot1dscqss15 * dscqss_dsc[550] + dwdot1dscqss8 * dscqss_dsc[305] +
           dwdot1dscqss10 * dscqss_dsc[375];
  J[937] = dwdot1dsc26 + dwdot1dscqss0 * dscqss_dsc[26] +
           dwdot1dscqss16 * dscqss_dsc[586] + dwdot1dscqss1 * dscqss_dsc[61] +
           dwdot1dscqss17 * dscqss_dsc[621] + dwdot1dscqss2 * dscqss_dsc[96] +
           dwdot1dscqss3 * dscqss_dsc[131] + dwdot1dscqss4 * dscqss_dsc[166] +
           dwdot1dscqss5 * dscqss_dsc[201] + dwdot1dscqss6 * dscqss_dsc[236] +
           dwdot1dscqss7 * dscqss_dsc[271] + dwdot1dscqss9 * dscqss_dsc[341] +
           dwdot1dscqss11 * dscqss_dsc[411] + dwdot1dscqss12 * dscqss_dsc[446] +
           dwdot1dscqss14 * dscqss_dsc[516] + dwdot1dscqss13 * dscqss_dsc[481] +
           dwdot1dscqss15 * dscqss_dsc[551] + dwdot1dscqss8 * dscqss_dsc[306] +
           dwdot1dscqss10 * dscqss_dsc[376];
  J[973] = dwdot1dsc27 + dwdot1dscqss0 * dscqss_dsc[27] +
           dwdot1dscqss16 * dscqss_dsc[587] + dwdot1dscqss1 * dscqss_dsc[62] +
           dwdot1dscqss17 * dscqss_dsc[622] + dwdot1dscqss2 * dscqss_dsc[97] +
           dwdot1dscqss3 * dscqss_dsc[132] + dwdot1dscqss4 * dscqss_dsc[167] +
           dwdot1dscqss5 * dscqss_dsc[202] + dwdot1dscqss6 * dscqss_dsc[237] +
           dwdot1dscqss7 * dscqss_dsc[272] + dwdot1dscqss9 * dscqss_dsc[342] +
           dwdot1dscqss11 * dscqss_dsc[412] + dwdot1dscqss12 * dscqss_dsc[447] +
           dwdot1dscqss14 * dscqss_dsc[517] + dwdot1dscqss13 * dscqss_dsc[482] +
           dwdot1dscqss15 * dscqss_dsc[552] + dwdot1dscqss8 * dscqss_dsc[307] +
           dwdot1dscqss10 * dscqss_dsc[377];
  J[1009] =
    dwdot1dsc28 + dwdot1dscqss0 * dscqss_dsc[28] +
    dwdot1dscqss16 * dscqss_dsc[588] + dwdot1dscqss1 * dscqss_dsc[63] +
    dwdot1dscqss17 * dscqss_dsc[623] + dwdot1dscqss2 * dscqss_dsc[98] +
    dwdot1dscqss3 * dscqss_dsc[133] + dwdot1dscqss4 * dscqss_dsc[168] +
    dwdot1dscqss5 * dscqss_dsc[203] + dwdot1dscqss6 * dscqss_dsc[238] +
    dwdot1dscqss7 * dscqss_dsc[273] + dwdot1dscqss9 * dscqss_dsc[343] +
    dwdot1dscqss11 * dscqss_dsc[413] + dwdot1dscqss12 * dscqss_dsc[448] +
    dwdot1dscqss14 * dscqss_dsc[518] + dwdot1dscqss13 * dscqss_dsc[483] +
    dwdot1dscqss15 * dscqss_dsc[553] + dwdot1dscqss8 * dscqss_dsc[308] +
    dwdot1dscqss10 * dscqss_dsc[378];
  J[1045] =
    dwdot1dsc29 + dwdot1dscqss0 * dscqss_dsc[29] +
    dwdot1dscqss16 * dscqss_dsc[589] + dwdot1dscqss1 * dscqss_dsc[64] +
    dwdot1dscqss17 * dscqss_dsc[624] + dwdot1dscqss2 * dscqss_dsc[99] +
    dwdot1dscqss3 * dscqss_dsc[134] + dwdot1dscqss4 * dscqss_dsc[169] +
    dwdot1dscqss5 * dscqss_dsc[204] + dwdot1dscqss6 * dscqss_dsc[239] +
    dwdot1dscqss7 * dscqss_dsc[274] + dwdot1dscqss9 * dscqss_dsc[344] +
    dwdot1dscqss11 * dscqss_dsc[414] + dwdot1dscqss12 * dscqss_dsc[449] +
    dwdot1dscqss14 * dscqss_dsc[519] + dwdot1dscqss13 * dscqss_dsc[484] +
    dwdot1dscqss15 * dscqss_dsc[554] + dwdot1dscqss8 * dscqss_dsc[309] +
    dwdot1dscqss10 * dscqss_dsc[379];
  J[1081] =
    dwdot1dsc30 + dwdot1dscqss0 * dscqss_dsc[30] +
    dwdot1dscqss16 * dscqss_dsc[590] + dwdot1dscqss1 * dscqss_dsc[65] +
    dwdot1dscqss17 * dscqss_dsc[625] + dwdot1dscqss2 * dscqss_dsc[100] +
    dwdot1dscqss3 * dscqss_dsc[135] + dwdot1dscqss4 * dscqss_dsc[170] +
    dwdot1dscqss5 * dscqss_dsc[205] + dwdot1dscqss6 * dscqss_dsc[240] +
    dwdot1dscqss7 * dscqss_dsc[275] + dwdot1dscqss9 * dscqss_dsc[345] +
    dwdot1dscqss11 * dscqss_dsc[415] + dwdot1dscqss12 * dscqss_dsc[450] +
    dwdot1dscqss14 * dscqss_dsc[520] + dwdot1dscqss13 * dscqss_dsc[485] +
    dwdot1dscqss15 * dscqss_dsc[555] + dwdot1dscqss8 * dscqss_dsc[310] +
    dwdot1dscqss10 * dscqss_dsc[380];
  J[1117] =
    dwdot1dsc31 + dwdot1dscqss0 * dscqss_dsc[31] +
    dwdot1dscqss16 * dscqss_dsc[591] + dwdot1dscqss1 * dscqss_dsc[66] +
    dwdot1dscqss17 * dscqss_dsc[626] + dwdot1dscqss2 * dscqss_dsc[101] +
    dwdot1dscqss3 * dscqss_dsc[136] + dwdot1dscqss4 * dscqss_dsc[171] +
    dwdot1dscqss5 * dscqss_dsc[206] + dwdot1dscqss6 * dscqss_dsc[241] +
    dwdot1dscqss7 * dscqss_dsc[276] + dwdot1dscqss9 * dscqss_dsc[346] +
    dwdot1dscqss11 * dscqss_dsc[416] + dwdot1dscqss12 * dscqss_dsc[451] +
    dwdot1dscqss14 * dscqss_dsc[521] + dwdot1dscqss13 * dscqss_dsc[486] +
    dwdot1dscqss15 * dscqss_dsc[556] + dwdot1dscqss8 * dscqss_dsc[311] +
    dwdot1dscqss10 * dscqss_dsc[381];
  J[1153] =
    dwdot1dsc32 + dwdot1dscqss0 * dscqss_dsc[32] +
    dwdot1dscqss16 * dscqss_dsc[592] + dwdot1dscqss1 * dscqss_dsc[67] +
    dwdot1dscqss17 * dscqss_dsc[627] + dwdot1dscqss2 * dscqss_dsc[102] +
    dwdot1dscqss3 * dscqss_dsc[137] + dwdot1dscqss4 * dscqss_dsc[172] +
    dwdot1dscqss5 * dscqss_dsc[207] + dwdot1dscqss6 * dscqss_dsc[242] +
    dwdot1dscqss7 * dscqss_dsc[277] + dwdot1dscqss9 * dscqss_dsc[347] +
    dwdot1dscqss11 * dscqss_dsc[417] + dwdot1dscqss12 * dscqss_dsc[452] +
    dwdot1dscqss14 * dscqss_dsc[522] + dwdot1dscqss13 * dscqss_dsc[487] +
    dwdot1dscqss15 * dscqss_dsc[557] + dwdot1dscqss8 * dscqss_dsc[312] +
    dwdot1dscqss10 * dscqss_dsc[382];
  J[1189] =
    dwdot1dsc33 + dwdot1dscqss0 * dscqss_dsc[33] +
    dwdot1dscqss16 * dscqss_dsc[593] + dwdot1dscqss1 * dscqss_dsc[68] +
    dwdot1dscqss17 * dscqss_dsc[628] + dwdot1dscqss2 * dscqss_dsc[103] +
    dwdot1dscqss3 * dscqss_dsc[138] + dwdot1dscqss4 * dscqss_dsc[173] +
    dwdot1dscqss5 * dscqss_dsc[208] + dwdot1dscqss6 * dscqss_dsc[243] +
    dwdot1dscqss7 * dscqss_dsc[278] + dwdot1dscqss9 * dscqss_dsc[348] +
    dwdot1dscqss11 * dscqss_dsc[418] + dwdot1dscqss12 * dscqss_dsc[453] +
    dwdot1dscqss14 * dscqss_dsc[523] + dwdot1dscqss13 * dscqss_dsc[488] +
    dwdot1dscqss15 * dscqss_dsc[558] + dwdot1dscqss8 * dscqss_dsc[313] +
    dwdot1dscqss10 * dscqss_dsc[383];
  J[1225] =
    dwdot1dsc34 + dwdot1dscqss0 * dscqss_dsc[34] +
    dwdot1dscqss16 * dscqss_dsc[594] + dwdot1dscqss1 * dscqss_dsc[69] +
    dwdot1dscqss17 * dscqss_dsc[629] + dwdot1dscqss2 * dscqss_dsc[104] +
    dwdot1dscqss3 * dscqss_dsc[139] + dwdot1dscqss4 * dscqss_dsc[174] +
    dwdot1dscqss5 * dscqss_dsc[209] + dwdot1dscqss6 * dscqss_dsc[244] +
    dwdot1dscqss7 * dscqss_dsc[279] + dwdot1dscqss9 * dscqss_dsc[349] +
    dwdot1dscqss11 * dscqss_dsc[419] + dwdot1dscqss12 * dscqss_dsc[454] +
    dwdot1dscqss14 * dscqss_dsc[524] + dwdot1dscqss13 * dscqss_dsc[489] +
    dwdot1dscqss15 * dscqss_dsc[559] + dwdot1dscqss8 * dscqss_dsc[314] +
    dwdot1dscqss10 * dscqss_dsc[384];
  J[2] = dwdot2dsc0 + dwdot2dscqss0 * dscqss_dsc[0] +
         dwdot2dscqss16 * dscqss_dsc[560] + dwdot2dscqss1 * dscqss_dsc[35] +
         dwdot2dscqss17 * dscqss_dsc[595] + dwdot2dscqss2 * dscqss_dsc[70] +
         dwdot2dscqss3 * dscqss_dsc[105] + dwdot2dscqss4 * dscqss_dsc[140] +
         dwdot2dscqss5 * dscqss_dsc[175] + dwdot2dscqss6 * dscqss_dsc[210] +
         dwdot2dscqss7 * dscqss_dsc[245] + dwdot2dscqss9 * dscqss_dsc[315] +
         dwdot2dscqss11 * dscqss_dsc[385] + dwdot2dscqss12 * dscqss_dsc[420] +
         dwdot2dscqss14 * dscqss_dsc[490] + dwdot2dscqss13 * dscqss_dsc[455] +
         dwdot2dscqss15 * dscqss_dsc[525] + dwdot2dscqss8 * dscqss_dsc[280] +
         dwdot2dscqss10 * dscqss_dsc[350];
  J[38] = dwdot2dsc1 + dwdot2dscqss0 * dscqss_dsc[1] +
          dwdot2dscqss16 * dscqss_dsc[561] + dwdot2dscqss1 * dscqss_dsc[36] +
          dwdot2dscqss17 * dscqss_dsc[596] + dwdot2dscqss2 * dscqss_dsc[71] +
          dwdot2dscqss3 * dscqss_dsc[106] + dwdot2dscqss4 * dscqss_dsc[141] +
          dwdot2dscqss5 * dscqss_dsc[176] + dwdot2dscqss6 * dscqss_dsc[211] +
          dwdot2dscqss7 * dscqss_dsc[246] + dwdot2dscqss9 * dscqss_dsc[316] +
          dwdot2dscqss11 * dscqss_dsc[386] + dwdot2dscqss12 * dscqss_dsc[421] +
          dwdot2dscqss14 * dscqss_dsc[491] + dwdot2dscqss13 * dscqss_dsc[456] +
          dwdot2dscqss15 * dscqss_dsc[526] + dwdot2dscqss8 * dscqss_dsc[281] +
          dwdot2dscqss10 * dscqss_dsc[351];
  J[74] = dwdot2dsc2 + dwdot2dscqss0 * dscqss_dsc[2] +
          dwdot2dscqss16 * dscqss_dsc[562] + dwdot2dscqss1 * dscqss_dsc[37] +
          dwdot2dscqss17 * dscqss_dsc[597] + dwdot2dscqss2 * dscqss_dsc[72] +
          dwdot2dscqss3 * dscqss_dsc[107] + dwdot2dscqss4 * dscqss_dsc[142] +
          dwdot2dscqss5 * dscqss_dsc[177] + dwdot2dscqss6 * dscqss_dsc[212] +
          dwdot2dscqss7 * dscqss_dsc[247] + dwdot2dscqss9 * dscqss_dsc[317] +
          dwdot2dscqss11 * dscqss_dsc[387] + dwdot2dscqss12 * dscqss_dsc[422] +
          dwdot2dscqss14 * dscqss_dsc[492] + dwdot2dscqss13 * dscqss_dsc[457] +
          dwdot2dscqss15 * dscqss_dsc[527] + dwdot2dscqss8 * dscqss_dsc[282] +
          dwdot2dscqss10 * dscqss_dsc[352];
  J[110] = dwdot2dsc3 + dwdot2dscqss0 * dscqss_dsc[3] +
           dwdot2dscqss16 * dscqss_dsc[563] + dwdot2dscqss1 * dscqss_dsc[38] +
           dwdot2dscqss17 * dscqss_dsc[598] + dwdot2dscqss2 * dscqss_dsc[73] +
           dwdot2dscqss3 * dscqss_dsc[108] + dwdot2dscqss4 * dscqss_dsc[143] +
           dwdot2dscqss5 * dscqss_dsc[178] + dwdot2dscqss6 * dscqss_dsc[213] +
           dwdot2dscqss7 * dscqss_dsc[248] + dwdot2dscqss9 * dscqss_dsc[318] +
           dwdot2dscqss11 * dscqss_dsc[388] + dwdot2dscqss12 * dscqss_dsc[423] +
           dwdot2dscqss14 * dscqss_dsc[493] + dwdot2dscqss13 * dscqss_dsc[458] +
           dwdot2dscqss15 * dscqss_dsc[528] + dwdot2dscqss8 * dscqss_dsc[283] +
           dwdot2dscqss10 * dscqss_dsc[353];
  J[146] = dwdot2dsc4 + dwdot2dscqss0 * dscqss_dsc[4] +
           dwdot2dscqss16 * dscqss_dsc[564] + dwdot2dscqss1 * dscqss_dsc[39] +
           dwdot2dscqss17 * dscqss_dsc[599] + dwdot2dscqss2 * dscqss_dsc[74] +
           dwdot2dscqss3 * dscqss_dsc[109] + dwdot2dscqss4 * dscqss_dsc[144] +
           dwdot2dscqss5 * dscqss_dsc[179] + dwdot2dscqss6 * dscqss_dsc[214] +
           dwdot2dscqss7 * dscqss_dsc[249] + dwdot2dscqss9 * dscqss_dsc[319] +
           dwdot2dscqss11 * dscqss_dsc[389] + dwdot2dscqss12 * dscqss_dsc[424] +
           dwdot2dscqss14 * dscqss_dsc[494] + dwdot2dscqss13 * dscqss_dsc[459] +
           dwdot2dscqss15 * dscqss_dsc[529] + dwdot2dscqss8 * dscqss_dsc[284] +
           dwdot2dscqss10 * dscqss_dsc[354];
  J[182] = dwdot2dsc5 + dwdot2dscqss0 * dscqss_dsc[5] +
           dwdot2dscqss16 * dscqss_dsc[565] + dwdot2dscqss1 * dscqss_dsc[40] +
           dwdot2dscqss17 * dscqss_dsc[600] + dwdot2dscqss2 * dscqss_dsc[75] +
           dwdot2dscqss3 * dscqss_dsc[110] + dwdot2dscqss4 * dscqss_dsc[145] +
           dwdot2dscqss5 * dscqss_dsc[180] + dwdot2dscqss6 * dscqss_dsc[215] +
           dwdot2dscqss7 * dscqss_dsc[250] + dwdot2dscqss9 * dscqss_dsc[320] +
           dwdot2dscqss11 * dscqss_dsc[390] + dwdot2dscqss12 * dscqss_dsc[425] +
           dwdot2dscqss14 * dscqss_dsc[495] + dwdot2dscqss13 * dscqss_dsc[460] +
           dwdot2dscqss15 * dscqss_dsc[530] + dwdot2dscqss8 * dscqss_dsc[285] +
           dwdot2dscqss10 * dscqss_dsc[355];
  J[218] = dwdot2dsc6 + dwdot2dscqss0 * dscqss_dsc[6] +
           dwdot2dscqss16 * dscqss_dsc[566] + dwdot2dscqss1 * dscqss_dsc[41] +
           dwdot2dscqss17 * dscqss_dsc[601] + dwdot2dscqss2 * dscqss_dsc[76] +
           dwdot2dscqss3 * dscqss_dsc[111] + dwdot2dscqss4 * dscqss_dsc[146] +
           dwdot2dscqss5 * dscqss_dsc[181] + dwdot2dscqss6 * dscqss_dsc[216] +
           dwdot2dscqss7 * dscqss_dsc[251] + dwdot2dscqss9 * dscqss_dsc[321] +
           dwdot2dscqss11 * dscqss_dsc[391] + dwdot2dscqss12 * dscqss_dsc[426] +
           dwdot2dscqss14 * dscqss_dsc[496] + dwdot2dscqss13 * dscqss_dsc[461] +
           dwdot2dscqss15 * dscqss_dsc[531] + dwdot2dscqss8 * dscqss_dsc[286] +
           dwdot2dscqss10 * dscqss_dsc[356];
  J[254] = dwdot2dsc7 + dwdot2dscqss0 * dscqss_dsc[7] +
           dwdot2dscqss16 * dscqss_dsc[567] + dwdot2dscqss1 * dscqss_dsc[42] +
           dwdot2dscqss17 * dscqss_dsc[602] + dwdot2dscqss2 * dscqss_dsc[77] +
           dwdot2dscqss3 * dscqss_dsc[112] + dwdot2dscqss4 * dscqss_dsc[147] +
           dwdot2dscqss5 * dscqss_dsc[182] + dwdot2dscqss6 * dscqss_dsc[217] +
           dwdot2dscqss7 * dscqss_dsc[252] + dwdot2dscqss9 * dscqss_dsc[322] +
           dwdot2dscqss11 * dscqss_dsc[392] + dwdot2dscqss12 * dscqss_dsc[427] +
           dwdot2dscqss14 * dscqss_dsc[497] + dwdot2dscqss13 * dscqss_dsc[462] +
           dwdot2dscqss15 * dscqss_dsc[532] + dwdot2dscqss8 * dscqss_dsc[287] +
           dwdot2dscqss10 * dscqss_dsc[357];
  J[290] = dwdot2dsc8 + dwdot2dscqss0 * dscqss_dsc[8] +
           dwdot2dscqss16 * dscqss_dsc[568] + dwdot2dscqss1 * dscqss_dsc[43] +
           dwdot2dscqss17 * dscqss_dsc[603] + dwdot2dscqss2 * dscqss_dsc[78] +
           dwdot2dscqss3 * dscqss_dsc[113] + dwdot2dscqss4 * dscqss_dsc[148] +
           dwdot2dscqss5 * dscqss_dsc[183] + dwdot2dscqss6 * dscqss_dsc[218] +
           dwdot2dscqss7 * dscqss_dsc[253] + dwdot2dscqss9 * dscqss_dsc[323] +
           dwdot2dscqss11 * dscqss_dsc[393] + dwdot2dscqss12 * dscqss_dsc[428] +
           dwdot2dscqss14 * dscqss_dsc[498] + dwdot2dscqss13 * dscqss_dsc[463] +
           dwdot2dscqss15 * dscqss_dsc[533] + dwdot2dscqss8 * dscqss_dsc[288] +
           dwdot2dscqss10 * dscqss_dsc[358];
  J[326] = dwdot2dsc9 + dwdot2dscqss0 * dscqss_dsc[9] +
           dwdot2dscqss16 * dscqss_dsc[569] + dwdot2dscqss1 * dscqss_dsc[44] +
           dwdot2dscqss17 * dscqss_dsc[604] + dwdot2dscqss2 * dscqss_dsc[79] +
           dwdot2dscqss3 * dscqss_dsc[114] + dwdot2dscqss4 * dscqss_dsc[149] +
           dwdot2dscqss5 * dscqss_dsc[184] + dwdot2dscqss6 * dscqss_dsc[219] +
           dwdot2dscqss7 * dscqss_dsc[254] + dwdot2dscqss9 * dscqss_dsc[324] +
           dwdot2dscqss11 * dscqss_dsc[394] + dwdot2dscqss12 * dscqss_dsc[429] +
           dwdot2dscqss14 * dscqss_dsc[499] + dwdot2dscqss13 * dscqss_dsc[464] +
           dwdot2dscqss15 * dscqss_dsc[534] + dwdot2dscqss8 * dscqss_dsc[289] +
           dwdot2dscqss10 * dscqss_dsc[359];
  J[362] = dwdot2dsc10 + dwdot2dscqss0 * dscqss_dsc[10] +
           dwdot2dscqss16 * dscqss_dsc[570] + dwdot2dscqss1 * dscqss_dsc[45] +
           dwdot2dscqss17 * dscqss_dsc[605] + dwdot2dscqss2 * dscqss_dsc[80] +
           dwdot2dscqss3 * dscqss_dsc[115] + dwdot2dscqss4 * dscqss_dsc[150] +
           dwdot2dscqss5 * dscqss_dsc[185] + dwdot2dscqss6 * dscqss_dsc[220] +
           dwdot2dscqss7 * dscqss_dsc[255] + dwdot2dscqss9 * dscqss_dsc[325] +
           dwdot2dscqss11 * dscqss_dsc[395] + dwdot2dscqss12 * dscqss_dsc[430] +
           dwdot2dscqss14 * dscqss_dsc[500] + dwdot2dscqss13 * dscqss_dsc[465] +
           dwdot2dscqss15 * dscqss_dsc[535] + dwdot2dscqss8 * dscqss_dsc[290] +
           dwdot2dscqss10 * dscqss_dsc[360];
  J[398] = dwdot2dsc11 + dwdot2dscqss0 * dscqss_dsc[11] +
           dwdot2dscqss16 * dscqss_dsc[571] + dwdot2dscqss1 * dscqss_dsc[46] +
           dwdot2dscqss17 * dscqss_dsc[606] + dwdot2dscqss2 * dscqss_dsc[81] +
           dwdot2dscqss3 * dscqss_dsc[116] + dwdot2dscqss4 * dscqss_dsc[151] +
           dwdot2dscqss5 * dscqss_dsc[186] + dwdot2dscqss6 * dscqss_dsc[221] +
           dwdot2dscqss7 * dscqss_dsc[256] + dwdot2dscqss9 * dscqss_dsc[326] +
           dwdot2dscqss11 * dscqss_dsc[396] + dwdot2dscqss12 * dscqss_dsc[431] +
           dwdot2dscqss14 * dscqss_dsc[501] + dwdot2dscqss13 * dscqss_dsc[466] +
           dwdot2dscqss15 * dscqss_dsc[536] + dwdot2dscqss8 * dscqss_dsc[291] +
           dwdot2dscqss10 * dscqss_dsc[361];
  J[434] = dwdot2dsc12 + dwdot2dscqss0 * dscqss_dsc[12] +
           dwdot2dscqss16 * dscqss_dsc[572] + dwdot2dscqss1 * dscqss_dsc[47] +
           dwdot2dscqss17 * dscqss_dsc[607] + dwdot2dscqss2 * dscqss_dsc[82] +
           dwdot2dscqss3 * dscqss_dsc[117] + dwdot2dscqss4 * dscqss_dsc[152] +
           dwdot2dscqss5 * dscqss_dsc[187] + dwdot2dscqss6 * dscqss_dsc[222] +
           dwdot2dscqss7 * dscqss_dsc[257] + dwdot2dscqss9 * dscqss_dsc[327] +
           dwdot2dscqss11 * dscqss_dsc[397] + dwdot2dscqss12 * dscqss_dsc[432] +
           dwdot2dscqss14 * dscqss_dsc[502] + dwdot2dscqss13 * dscqss_dsc[467] +
           dwdot2dscqss15 * dscqss_dsc[537] + dwdot2dscqss8 * dscqss_dsc[292] +
           dwdot2dscqss10 * dscqss_dsc[362];
  J[470] = dwdot2dsc13 + dwdot2dscqss0 * dscqss_dsc[13] +
           dwdot2dscqss16 * dscqss_dsc[573] + dwdot2dscqss1 * dscqss_dsc[48] +
           dwdot2dscqss17 * dscqss_dsc[608] + dwdot2dscqss2 * dscqss_dsc[83] +
           dwdot2dscqss3 * dscqss_dsc[118] + dwdot2dscqss4 * dscqss_dsc[153] +
           dwdot2dscqss5 * dscqss_dsc[188] + dwdot2dscqss6 * dscqss_dsc[223] +
           dwdot2dscqss7 * dscqss_dsc[258] + dwdot2dscqss9 * dscqss_dsc[328] +
           dwdot2dscqss11 * dscqss_dsc[398] + dwdot2dscqss12 * dscqss_dsc[433] +
           dwdot2dscqss14 * dscqss_dsc[503] + dwdot2dscqss13 * dscqss_dsc[468] +
           dwdot2dscqss15 * dscqss_dsc[538] + dwdot2dscqss8 * dscqss_dsc[293] +
           dwdot2dscqss10 * dscqss_dsc[363];
  J[506] = dwdot2dsc14 + dwdot2dscqss0 * dscqss_dsc[14] +
           dwdot2dscqss16 * dscqss_dsc[574] + dwdot2dscqss1 * dscqss_dsc[49] +
           dwdot2dscqss17 * dscqss_dsc[609] + dwdot2dscqss2 * dscqss_dsc[84] +
           dwdot2dscqss3 * dscqss_dsc[119] + dwdot2dscqss4 * dscqss_dsc[154] +
           dwdot2dscqss5 * dscqss_dsc[189] + dwdot2dscqss6 * dscqss_dsc[224] +
           dwdot2dscqss7 * dscqss_dsc[259] + dwdot2dscqss9 * dscqss_dsc[329] +
           dwdot2dscqss11 * dscqss_dsc[399] + dwdot2dscqss12 * dscqss_dsc[434] +
           dwdot2dscqss14 * dscqss_dsc[504] + dwdot2dscqss13 * dscqss_dsc[469] +
           dwdot2dscqss15 * dscqss_dsc[539] + dwdot2dscqss8 * dscqss_dsc[294] +
           dwdot2dscqss10 * dscqss_dsc[364];
  J[542] = dwdot2dsc15 + dwdot2dscqss0 * dscqss_dsc[15] +
           dwdot2dscqss16 * dscqss_dsc[575] + dwdot2dscqss1 * dscqss_dsc[50] +
           dwdot2dscqss17 * dscqss_dsc[610] + dwdot2dscqss2 * dscqss_dsc[85] +
           dwdot2dscqss3 * dscqss_dsc[120] + dwdot2dscqss4 * dscqss_dsc[155] +
           dwdot2dscqss5 * dscqss_dsc[190] + dwdot2dscqss6 * dscqss_dsc[225] +
           dwdot2dscqss7 * dscqss_dsc[260] + dwdot2dscqss9 * dscqss_dsc[330] +
           dwdot2dscqss11 * dscqss_dsc[400] + dwdot2dscqss12 * dscqss_dsc[435] +
           dwdot2dscqss14 * dscqss_dsc[505] + dwdot2dscqss13 * dscqss_dsc[470] +
           dwdot2dscqss15 * dscqss_dsc[540] + dwdot2dscqss8 * dscqss_dsc[295] +
           dwdot2dscqss10 * dscqss_dsc[365];
  J[578] = dwdot2dsc16 + dwdot2dscqss0 * dscqss_dsc[16] +
           dwdot2dscqss16 * dscqss_dsc[576] + dwdot2dscqss1 * dscqss_dsc[51] +
           dwdot2dscqss17 * dscqss_dsc[611] + dwdot2dscqss2 * dscqss_dsc[86] +
           dwdot2dscqss3 * dscqss_dsc[121] + dwdot2dscqss4 * dscqss_dsc[156] +
           dwdot2dscqss5 * dscqss_dsc[191] + dwdot2dscqss6 * dscqss_dsc[226] +
           dwdot2dscqss7 * dscqss_dsc[261] + dwdot2dscqss9 * dscqss_dsc[331] +
           dwdot2dscqss11 * dscqss_dsc[401] + dwdot2dscqss12 * dscqss_dsc[436] +
           dwdot2dscqss14 * dscqss_dsc[506] + dwdot2dscqss13 * dscqss_dsc[471] +
           dwdot2dscqss15 * dscqss_dsc[541] + dwdot2dscqss8 * dscqss_dsc[296] +
           dwdot2dscqss10 * dscqss_dsc[366];
  J[614] = dwdot2dsc17 + dwdot2dscqss0 * dscqss_dsc[17] +
           dwdot2dscqss16 * dscqss_dsc[577] + dwdot2dscqss1 * dscqss_dsc[52] +
           dwdot2dscqss17 * dscqss_dsc[612] + dwdot2dscqss2 * dscqss_dsc[87] +
           dwdot2dscqss3 * dscqss_dsc[122] + dwdot2dscqss4 * dscqss_dsc[157] +
           dwdot2dscqss5 * dscqss_dsc[192] + dwdot2dscqss6 * dscqss_dsc[227] +
           dwdot2dscqss7 * dscqss_dsc[262] + dwdot2dscqss9 * dscqss_dsc[332] +
           dwdot2dscqss11 * dscqss_dsc[402] + dwdot2dscqss12 * dscqss_dsc[437] +
           dwdot2dscqss14 * dscqss_dsc[507] + dwdot2dscqss13 * dscqss_dsc[472] +
           dwdot2dscqss15 * dscqss_dsc[542] + dwdot2dscqss8 * dscqss_dsc[297] +
           dwdot2dscqss10 * dscqss_dsc[367];
  J[650] = dwdot2dsc18 + dwdot2dscqss0 * dscqss_dsc[18] +
           dwdot2dscqss16 * dscqss_dsc[578] + dwdot2dscqss1 * dscqss_dsc[53] +
           dwdot2dscqss17 * dscqss_dsc[613] + dwdot2dscqss2 * dscqss_dsc[88] +
           dwdot2dscqss3 * dscqss_dsc[123] + dwdot2dscqss4 * dscqss_dsc[158] +
           dwdot2dscqss5 * dscqss_dsc[193] + dwdot2dscqss6 * dscqss_dsc[228] +
           dwdot2dscqss7 * dscqss_dsc[263] + dwdot2dscqss9 * dscqss_dsc[333] +
           dwdot2dscqss11 * dscqss_dsc[403] + dwdot2dscqss12 * dscqss_dsc[438] +
           dwdot2dscqss14 * dscqss_dsc[508] + dwdot2dscqss13 * dscqss_dsc[473] +
           dwdot2dscqss15 * dscqss_dsc[543] + dwdot2dscqss8 * dscqss_dsc[298] +
           dwdot2dscqss10 * dscqss_dsc[368];
  J[686] = dwdot2dsc19 + dwdot2dscqss0 * dscqss_dsc[19] +
           dwdot2dscqss16 * dscqss_dsc[579] + dwdot2dscqss1 * dscqss_dsc[54] +
           dwdot2dscqss17 * dscqss_dsc[614] + dwdot2dscqss2 * dscqss_dsc[89] +
           dwdot2dscqss3 * dscqss_dsc[124] + dwdot2dscqss4 * dscqss_dsc[159] +
           dwdot2dscqss5 * dscqss_dsc[194] + dwdot2dscqss6 * dscqss_dsc[229] +
           dwdot2dscqss7 * dscqss_dsc[264] + dwdot2dscqss9 * dscqss_dsc[334] +
           dwdot2dscqss11 * dscqss_dsc[404] + dwdot2dscqss12 * dscqss_dsc[439] +
           dwdot2dscqss14 * dscqss_dsc[509] + dwdot2dscqss13 * dscqss_dsc[474] +
           dwdot2dscqss15 * dscqss_dsc[544] + dwdot2dscqss8 * dscqss_dsc[299] +
           dwdot2dscqss10 * dscqss_dsc[369];
  J[722] = dwdot2dsc20 + dwdot2dscqss0 * dscqss_dsc[20] +
           dwdot2dscqss16 * dscqss_dsc[580] + dwdot2dscqss1 * dscqss_dsc[55] +
           dwdot2dscqss17 * dscqss_dsc[615] + dwdot2dscqss2 * dscqss_dsc[90] +
           dwdot2dscqss3 * dscqss_dsc[125] + dwdot2dscqss4 * dscqss_dsc[160] +
           dwdot2dscqss5 * dscqss_dsc[195] + dwdot2dscqss6 * dscqss_dsc[230] +
           dwdot2dscqss7 * dscqss_dsc[265] + dwdot2dscqss9 * dscqss_dsc[335] +
           dwdot2dscqss11 * dscqss_dsc[405] + dwdot2dscqss12 * dscqss_dsc[440] +
           dwdot2dscqss14 * dscqss_dsc[510] + dwdot2dscqss13 * dscqss_dsc[475] +
           dwdot2dscqss15 * dscqss_dsc[545] + dwdot2dscqss8 * dscqss_dsc[300] +
           dwdot2dscqss10 * dscqss_dsc[370];
  J[758] = dwdot2dsc21 + dwdot2dscqss0 * dscqss_dsc[21] +
           dwdot2dscqss16 * dscqss_dsc[581] + dwdot2dscqss1 * dscqss_dsc[56] +
           dwdot2dscqss17 * dscqss_dsc[616] + dwdot2dscqss2 * dscqss_dsc[91] +
           dwdot2dscqss3 * dscqss_dsc[126] + dwdot2dscqss4 * dscqss_dsc[161] +
           dwdot2dscqss5 * dscqss_dsc[196] + dwdot2dscqss6 * dscqss_dsc[231] +
           dwdot2dscqss7 * dscqss_dsc[266] + dwdot2dscqss9 * dscqss_dsc[336] +
           dwdot2dscqss11 * dscqss_dsc[406] + dwdot2dscqss12 * dscqss_dsc[441] +
           dwdot2dscqss14 * dscqss_dsc[511] + dwdot2dscqss13 * dscqss_dsc[476] +
           dwdot2dscqss15 * dscqss_dsc[546] + dwdot2dscqss8 * dscqss_dsc[301] +
           dwdot2dscqss10 * dscqss_dsc[371];
  J[794] = dwdot2dsc22 + dwdot2dscqss0 * dscqss_dsc[22] +
           dwdot2dscqss16 * dscqss_dsc[582] + dwdot2dscqss1 * dscqss_dsc[57] +
           dwdot2dscqss17 * dscqss_dsc[617] + dwdot2dscqss2 * dscqss_dsc[92] +
           dwdot2dscqss3 * dscqss_dsc[127] + dwdot2dscqss4 * dscqss_dsc[162] +
           dwdot2dscqss5 * dscqss_dsc[197] + dwdot2dscqss6 * dscqss_dsc[232] +
           dwdot2dscqss7 * dscqss_dsc[267] + dwdot2dscqss9 * dscqss_dsc[337] +
           dwdot2dscqss11 * dscqss_dsc[407] + dwdot2dscqss12 * dscqss_dsc[442] +
           dwdot2dscqss14 * dscqss_dsc[512] + dwdot2dscqss13 * dscqss_dsc[477] +
           dwdot2dscqss15 * dscqss_dsc[547] + dwdot2dscqss8 * dscqss_dsc[302] +
           dwdot2dscqss10 * dscqss_dsc[372];
  J[830] = dwdot2dsc23 + dwdot2dscqss0 * dscqss_dsc[23] +
           dwdot2dscqss16 * dscqss_dsc[583] + dwdot2dscqss1 * dscqss_dsc[58] +
           dwdot2dscqss17 * dscqss_dsc[618] + dwdot2dscqss2 * dscqss_dsc[93] +
           dwdot2dscqss3 * dscqss_dsc[128] + dwdot2dscqss4 * dscqss_dsc[163] +
           dwdot2dscqss5 * dscqss_dsc[198] + dwdot2dscqss6 * dscqss_dsc[233] +
           dwdot2dscqss7 * dscqss_dsc[268] + dwdot2dscqss9 * dscqss_dsc[338] +
           dwdot2dscqss11 * dscqss_dsc[408] + dwdot2dscqss12 * dscqss_dsc[443] +
           dwdot2dscqss14 * dscqss_dsc[513] + dwdot2dscqss13 * dscqss_dsc[478] +
           dwdot2dscqss15 * dscqss_dsc[548] + dwdot2dscqss8 * dscqss_dsc[303] +
           dwdot2dscqss10 * dscqss_dsc[373];
  J[866] = dwdot2dsc24 + dwdot2dscqss0 * dscqss_dsc[24] +
           dwdot2dscqss16 * dscqss_dsc[584] + dwdot2dscqss1 * dscqss_dsc[59] +
           dwdot2dscqss17 * dscqss_dsc[619] + dwdot2dscqss2 * dscqss_dsc[94] +
           dwdot2dscqss3 * dscqss_dsc[129] + dwdot2dscqss4 * dscqss_dsc[164] +
           dwdot2dscqss5 * dscqss_dsc[199] + dwdot2dscqss6 * dscqss_dsc[234] +
           dwdot2dscqss7 * dscqss_dsc[269] + dwdot2dscqss9 * dscqss_dsc[339] +
           dwdot2dscqss11 * dscqss_dsc[409] + dwdot2dscqss12 * dscqss_dsc[444] +
           dwdot2dscqss14 * dscqss_dsc[514] + dwdot2dscqss13 * dscqss_dsc[479] +
           dwdot2dscqss15 * dscqss_dsc[549] + dwdot2dscqss8 * dscqss_dsc[304] +
           dwdot2dscqss10 * dscqss_dsc[374];
  J[902] = dwdot2dsc25 + dwdot2dscqss0 * dscqss_dsc[25] +
           dwdot2dscqss16 * dscqss_dsc[585] + dwdot2dscqss1 * dscqss_dsc[60] +
           dwdot2dscqss17 * dscqss_dsc[620] + dwdot2dscqss2 * dscqss_dsc[95] +
           dwdot2dscqss3 * dscqss_dsc[130] + dwdot2dscqss4 * dscqss_dsc[165] +
           dwdot2dscqss5 * dscqss_dsc[200] + dwdot2dscqss6 * dscqss_dsc[235] +
           dwdot2dscqss7 * dscqss_dsc[270] + dwdot2dscqss9 * dscqss_dsc[340] +
           dwdot2dscqss11 * dscqss_dsc[410] + dwdot2dscqss12 * dscqss_dsc[445] +
           dwdot2dscqss14 * dscqss_dsc[515] + dwdot2dscqss13 * dscqss_dsc[480] +
           dwdot2dscqss15 * dscqss_dsc[550] + dwdot2dscqss8 * dscqss_dsc[305] +
           dwdot2dscqss10 * dscqss_dsc[375];
  J[938] = dwdot2dsc26 + dwdot2dscqss0 * dscqss_dsc[26] +
           dwdot2dscqss16 * dscqss_dsc[586] + dwdot2dscqss1 * dscqss_dsc[61] +
           dwdot2dscqss17 * dscqss_dsc[621] + dwdot2dscqss2 * dscqss_dsc[96] +
           dwdot2dscqss3 * dscqss_dsc[131] + dwdot2dscqss4 * dscqss_dsc[166] +
           dwdot2dscqss5 * dscqss_dsc[201] + dwdot2dscqss6 * dscqss_dsc[236] +
           dwdot2dscqss7 * dscqss_dsc[271] + dwdot2dscqss9 * dscqss_dsc[341] +
           dwdot2dscqss11 * dscqss_dsc[411] + dwdot2dscqss12 * dscqss_dsc[446] +
           dwdot2dscqss14 * dscqss_dsc[516] + dwdot2dscqss13 * dscqss_dsc[481] +
           dwdot2dscqss15 * dscqss_dsc[551] + dwdot2dscqss8 * dscqss_dsc[306] +
           dwdot2dscqss10 * dscqss_dsc[376];
  J[974] = dwdot2dsc27 + dwdot2dscqss0 * dscqss_dsc[27] +
           dwdot2dscqss16 * dscqss_dsc[587] + dwdot2dscqss1 * dscqss_dsc[62] +
           dwdot2dscqss17 * dscqss_dsc[622] + dwdot2dscqss2 * dscqss_dsc[97] +
           dwdot2dscqss3 * dscqss_dsc[132] + dwdot2dscqss4 * dscqss_dsc[167] +
           dwdot2dscqss5 * dscqss_dsc[202] + dwdot2dscqss6 * dscqss_dsc[237] +
           dwdot2dscqss7 * dscqss_dsc[272] + dwdot2dscqss9 * dscqss_dsc[342] +
           dwdot2dscqss11 * dscqss_dsc[412] + dwdot2dscqss12 * dscqss_dsc[447] +
           dwdot2dscqss14 * dscqss_dsc[517] + dwdot2dscqss13 * dscqss_dsc[482] +
           dwdot2dscqss15 * dscqss_dsc[552] + dwdot2dscqss8 * dscqss_dsc[307] +
           dwdot2dscqss10 * dscqss_dsc[377];
  J[1010] =
    dwdot2dsc28 + dwdot2dscqss0 * dscqss_dsc[28] +
    dwdot2dscqss16 * dscqss_dsc[588] + dwdot2dscqss1 * dscqss_dsc[63] +
    dwdot2dscqss17 * dscqss_dsc[623] + dwdot2dscqss2 * dscqss_dsc[98] +
    dwdot2dscqss3 * dscqss_dsc[133] + dwdot2dscqss4 * dscqss_dsc[168] +
    dwdot2dscqss5 * dscqss_dsc[203] + dwdot2dscqss6 * dscqss_dsc[238] +
    dwdot2dscqss7 * dscqss_dsc[273] + dwdot2dscqss9 * dscqss_dsc[343] +
    dwdot2dscqss11 * dscqss_dsc[413] + dwdot2dscqss12 * dscqss_dsc[448] +
    dwdot2dscqss14 * dscqss_dsc[518] + dwdot2dscqss13 * dscqss_dsc[483] +
    dwdot2dscqss15 * dscqss_dsc[553] + dwdot2dscqss8 * dscqss_dsc[308] +
    dwdot2dscqss10 * dscqss_dsc[378];
  J[1046] =
    dwdot2dsc29 + dwdot2dscqss0 * dscqss_dsc[29] +
    dwdot2dscqss16 * dscqss_dsc[589] + dwdot2dscqss1 * dscqss_dsc[64] +
    dwdot2dscqss17 * dscqss_dsc[624] + dwdot2dscqss2 * dscqss_dsc[99] +
    dwdot2dscqss3 * dscqss_dsc[134] + dwdot2dscqss4 * dscqss_dsc[169] +
    dwdot2dscqss5 * dscqss_dsc[204] + dwdot2dscqss6 * dscqss_dsc[239] +
    dwdot2dscqss7 * dscqss_dsc[274] + dwdot2dscqss9 * dscqss_dsc[344] +
    dwdot2dscqss11 * dscqss_dsc[414] + dwdot2dscqss12 * dscqss_dsc[449] +
    dwdot2dscqss14 * dscqss_dsc[519] + dwdot2dscqss13 * dscqss_dsc[484] +
    dwdot2dscqss15 * dscqss_dsc[554] + dwdot2dscqss8 * dscqss_dsc[309] +
    dwdot2dscqss10 * dscqss_dsc[379];
  J[1082] =
    dwdot2dsc30 + dwdot2dscqss0 * dscqss_dsc[30] +
    dwdot2dscqss16 * dscqss_dsc[590] + dwdot2dscqss1 * dscqss_dsc[65] +
    dwdot2dscqss17 * dscqss_dsc[625] + dwdot2dscqss2 * dscqss_dsc[100] +
    dwdot2dscqss3 * dscqss_dsc[135] + dwdot2dscqss4 * dscqss_dsc[170] +
    dwdot2dscqss5 * dscqss_dsc[205] + dwdot2dscqss6 * dscqss_dsc[240] +
    dwdot2dscqss7 * dscqss_dsc[275] + dwdot2dscqss9 * dscqss_dsc[345] +
    dwdot2dscqss11 * dscqss_dsc[415] + dwdot2dscqss12 * dscqss_dsc[450] +
    dwdot2dscqss14 * dscqss_dsc[520] + dwdot2dscqss13 * dscqss_dsc[485] +
    dwdot2dscqss15 * dscqss_dsc[555] + dwdot2dscqss8 * dscqss_dsc[310] +
    dwdot2dscqss10 * dscqss_dsc[380];
  J[1118] =
    dwdot2dsc31 + dwdot2dscqss0 * dscqss_dsc[31] +
    dwdot2dscqss16 * dscqss_dsc[591] + dwdot2dscqss1 * dscqss_dsc[66] +
    dwdot2dscqss17 * dscqss_dsc[626] + dwdot2dscqss2 * dscqss_dsc[101] +
    dwdot2dscqss3 * dscqss_dsc[136] + dwdot2dscqss4 * dscqss_dsc[171] +
    dwdot2dscqss5 * dscqss_dsc[206] + dwdot2dscqss6 * dscqss_dsc[241] +
    dwdot2dscqss7 * dscqss_dsc[276] + dwdot2dscqss9 * dscqss_dsc[346] +
    dwdot2dscqss11 * dscqss_dsc[416] + dwdot2dscqss12 * dscqss_dsc[451] +
    dwdot2dscqss14 * dscqss_dsc[521] + dwdot2dscqss13 * dscqss_dsc[486] +
    dwdot2dscqss15 * dscqss_dsc[556] + dwdot2dscqss8 * dscqss_dsc[311] +
    dwdot2dscqss10 * dscqss_dsc[381];
  J[1154] =
    dwdot2dsc32 + dwdot2dscqss0 * dscqss_dsc[32] +
    dwdot2dscqss16 * dscqss_dsc[592] + dwdot2dscqss1 * dscqss_dsc[67] +
    dwdot2dscqss17 * dscqss_dsc[627] + dwdot2dscqss2 * dscqss_dsc[102] +
    dwdot2dscqss3 * dscqss_dsc[137] + dwdot2dscqss4 * dscqss_dsc[172] +
    dwdot2dscqss5 * dscqss_dsc[207] + dwdot2dscqss6 * dscqss_dsc[242] +
    dwdot2dscqss7 * dscqss_dsc[277] + dwdot2dscqss9 * dscqss_dsc[347] +
    dwdot2dscqss11 * dscqss_dsc[417] + dwdot2dscqss12 * dscqss_dsc[452] +
    dwdot2dscqss14 * dscqss_dsc[522] + dwdot2dscqss13 * dscqss_dsc[487] +
    dwdot2dscqss15 * dscqss_dsc[557] + dwdot2dscqss8 * dscqss_dsc[312] +
    dwdot2dscqss10 * dscqss_dsc[382];
  J[1190] =
    dwdot2dsc33 + dwdot2dscqss0 * dscqss_dsc[33] +
    dwdot2dscqss16 * dscqss_dsc[593] + dwdot2dscqss1 * dscqss_dsc[68] +
    dwdot2dscqss17 * dscqss_dsc[628] + dwdot2dscqss2 * dscqss_dsc[103] +
    dwdot2dscqss3 * dscqss_dsc[138] + dwdot2dscqss4 * dscqss_dsc[173] +
    dwdot2dscqss5 * dscqss_dsc[208] + dwdot2dscqss6 * dscqss_dsc[243] +
    dwdot2dscqss7 * dscqss_dsc[278] + dwdot2dscqss9 * dscqss_dsc[348] +
    dwdot2dscqss11 * dscqss_dsc[418] + dwdot2dscqss12 * dscqss_dsc[453] +
    dwdot2dscqss14 * dscqss_dsc[523] + dwdot2dscqss13 * dscqss_dsc[488] +
    dwdot2dscqss15 * dscqss_dsc[558] + dwdot2dscqss8 * dscqss_dsc[313] +
    dwdot2dscqss10 * dscqss_dsc[383];
  J[1226] =
    dwdot2dsc34 + dwdot2dscqss0 * dscqss_dsc[34] +
    dwdot2dscqss16 * dscqss_dsc[594] + dwdot2dscqss1 * dscqss_dsc[69] +
    dwdot2dscqss17 * dscqss_dsc[629] + dwdot2dscqss2 * dscqss_dsc[104] +
    dwdot2dscqss3 * dscqss_dsc[139] + dwdot2dscqss4 * dscqss_dsc[174] +
    dwdot2dscqss5 * dscqss_dsc[209] + dwdot2dscqss6 * dscqss_dsc[244] +
    dwdot2dscqss7 * dscqss_dsc[279] + dwdot2dscqss9 * dscqss_dsc[349] +
    dwdot2dscqss11 * dscqss_dsc[419] + dwdot2dscqss12 * dscqss_dsc[454] +
    dwdot2dscqss14 * dscqss_dsc[524] + dwdot2dscqss13 * dscqss_dsc[489] +
    dwdot2dscqss15 * dscqss_dsc[559] + dwdot2dscqss8 * dscqss_dsc[314] +
    dwdot2dscqss10 * dscqss_dsc[384];
  J[3] = dwdot3dsc0 + dwdot3dscqss0 * dscqss_dsc[0] +
         dwdot3dscqss16 * dscqss_dsc[560] + dwdot3dscqss1 * dscqss_dsc[35] +
         dwdot3dscqss17 * dscqss_dsc[595] + dwdot3dscqss2 * dscqss_dsc[70] +
         dwdot3dscqss3 * dscqss_dsc[105] + dwdot3dscqss4 * dscqss_dsc[140] +
         dwdot3dscqss5 * dscqss_dsc[175] + dwdot3dscqss6 * dscqss_dsc[210] +
         dwdot3dscqss7 * dscqss_dsc[245] + dwdot3dscqss9 * dscqss_dsc[315] +
         dwdot3dscqss11 * dscqss_dsc[385] + dwdot3dscqss12 * dscqss_dsc[420] +
         dwdot3dscqss14 * dscqss_dsc[490] + dwdot3dscqss13 * dscqss_dsc[455] +
         dwdot3dscqss15 * dscqss_dsc[525] + dwdot3dscqss8 * dscqss_dsc[280] +
         dwdot3dscqss10 * dscqss_dsc[350];
  J[39] = dwdot3dsc1 + dwdot3dscqss0 * dscqss_dsc[1] +
          dwdot3dscqss16 * dscqss_dsc[561] + dwdot3dscqss1 * dscqss_dsc[36] +
          dwdot3dscqss17 * dscqss_dsc[596] + dwdot3dscqss2 * dscqss_dsc[71] +
          dwdot3dscqss3 * dscqss_dsc[106] + dwdot3dscqss4 * dscqss_dsc[141] +
          dwdot3dscqss5 * dscqss_dsc[176] + dwdot3dscqss6 * dscqss_dsc[211] +
          dwdot3dscqss7 * dscqss_dsc[246] + dwdot3dscqss9 * dscqss_dsc[316] +
          dwdot3dscqss11 * dscqss_dsc[386] + dwdot3dscqss12 * dscqss_dsc[421] +
          dwdot3dscqss14 * dscqss_dsc[491] + dwdot3dscqss13 * dscqss_dsc[456] +
          dwdot3dscqss15 * dscqss_dsc[526] + dwdot3dscqss8 * dscqss_dsc[281] +
          dwdot3dscqss10 * dscqss_dsc[351];
  J[75] = dwdot3dsc2 + dwdot3dscqss0 * dscqss_dsc[2] +
          dwdot3dscqss16 * dscqss_dsc[562] + dwdot3dscqss1 * dscqss_dsc[37] +
          dwdot3dscqss17 * dscqss_dsc[597] + dwdot3dscqss2 * dscqss_dsc[72] +
          dwdot3dscqss3 * dscqss_dsc[107] + dwdot3dscqss4 * dscqss_dsc[142] +
          dwdot3dscqss5 * dscqss_dsc[177] + dwdot3dscqss6 * dscqss_dsc[212] +
          dwdot3dscqss7 * dscqss_dsc[247] + dwdot3dscqss9 * dscqss_dsc[317] +
          dwdot3dscqss11 * dscqss_dsc[387] + dwdot3dscqss12 * dscqss_dsc[422] +
          dwdot3dscqss14 * dscqss_dsc[492] + dwdot3dscqss13 * dscqss_dsc[457] +
          dwdot3dscqss15 * dscqss_dsc[527] + dwdot3dscqss8 * dscqss_dsc[282] +
          dwdot3dscqss10 * dscqss_dsc[352];
  J[111] = dwdot3dsc3 + dwdot3dscqss0 * dscqss_dsc[3] +
           dwdot3dscqss16 * dscqss_dsc[563] + dwdot3dscqss1 * dscqss_dsc[38] +
           dwdot3dscqss17 * dscqss_dsc[598] + dwdot3dscqss2 * dscqss_dsc[73] +
           dwdot3dscqss3 * dscqss_dsc[108] + dwdot3dscqss4 * dscqss_dsc[143] +
           dwdot3dscqss5 * dscqss_dsc[178] + dwdot3dscqss6 * dscqss_dsc[213] +
           dwdot3dscqss7 * dscqss_dsc[248] + dwdot3dscqss9 * dscqss_dsc[318] +
           dwdot3dscqss11 * dscqss_dsc[388] + dwdot3dscqss12 * dscqss_dsc[423] +
           dwdot3dscqss14 * dscqss_dsc[493] + dwdot3dscqss13 * dscqss_dsc[458] +
           dwdot3dscqss15 * dscqss_dsc[528] + dwdot3dscqss8 * dscqss_dsc[283] +
           dwdot3dscqss10 * dscqss_dsc[353];
  J[147] = dwdot3dsc4 + dwdot3dscqss0 * dscqss_dsc[4] +
           dwdot3dscqss16 * dscqss_dsc[564] + dwdot3dscqss1 * dscqss_dsc[39] +
           dwdot3dscqss17 * dscqss_dsc[599] + dwdot3dscqss2 * dscqss_dsc[74] +
           dwdot3dscqss3 * dscqss_dsc[109] + dwdot3dscqss4 * dscqss_dsc[144] +
           dwdot3dscqss5 * dscqss_dsc[179] + dwdot3dscqss6 * dscqss_dsc[214] +
           dwdot3dscqss7 * dscqss_dsc[249] + dwdot3dscqss9 * dscqss_dsc[319] +
           dwdot3dscqss11 * dscqss_dsc[389] + dwdot3dscqss12 * dscqss_dsc[424] +
           dwdot3dscqss14 * dscqss_dsc[494] + dwdot3dscqss13 * dscqss_dsc[459] +
           dwdot3dscqss15 * dscqss_dsc[529] + dwdot3dscqss8 * dscqss_dsc[284] +
           dwdot3dscqss10 * dscqss_dsc[354];
  J[183] = dwdot3dsc5 + dwdot3dscqss0 * dscqss_dsc[5] +
           dwdot3dscqss16 * dscqss_dsc[565] + dwdot3dscqss1 * dscqss_dsc[40] +
           dwdot3dscqss17 * dscqss_dsc[600] + dwdot3dscqss2 * dscqss_dsc[75] +
           dwdot3dscqss3 * dscqss_dsc[110] + dwdot3dscqss4 * dscqss_dsc[145] +
           dwdot3dscqss5 * dscqss_dsc[180] + dwdot3dscqss6 * dscqss_dsc[215] +
           dwdot3dscqss7 * dscqss_dsc[250] + dwdot3dscqss9 * dscqss_dsc[320] +
           dwdot3dscqss11 * dscqss_dsc[390] + dwdot3dscqss12 * dscqss_dsc[425] +
           dwdot3dscqss14 * dscqss_dsc[495] + dwdot3dscqss13 * dscqss_dsc[460] +
           dwdot3dscqss15 * dscqss_dsc[530] + dwdot3dscqss8 * dscqss_dsc[285] +
           dwdot3dscqss10 * dscqss_dsc[355];
  J[219] = dwdot3dsc6 + dwdot3dscqss0 * dscqss_dsc[6] +
           dwdot3dscqss16 * dscqss_dsc[566] + dwdot3dscqss1 * dscqss_dsc[41] +
           dwdot3dscqss17 * dscqss_dsc[601] + dwdot3dscqss2 * dscqss_dsc[76] +
           dwdot3dscqss3 * dscqss_dsc[111] + dwdot3dscqss4 * dscqss_dsc[146] +
           dwdot3dscqss5 * dscqss_dsc[181] + dwdot3dscqss6 * dscqss_dsc[216] +
           dwdot3dscqss7 * dscqss_dsc[251] + dwdot3dscqss9 * dscqss_dsc[321] +
           dwdot3dscqss11 * dscqss_dsc[391] + dwdot3dscqss12 * dscqss_dsc[426] +
           dwdot3dscqss14 * dscqss_dsc[496] + dwdot3dscqss13 * dscqss_dsc[461] +
           dwdot3dscqss15 * dscqss_dsc[531] + dwdot3dscqss8 * dscqss_dsc[286] +
           dwdot3dscqss10 * dscqss_dsc[356];
  J[255] = dwdot3dsc7 + dwdot3dscqss0 * dscqss_dsc[7] +
           dwdot3dscqss16 * dscqss_dsc[567] + dwdot3dscqss1 * dscqss_dsc[42] +
           dwdot3dscqss17 * dscqss_dsc[602] + dwdot3dscqss2 * dscqss_dsc[77] +
           dwdot3dscqss3 * dscqss_dsc[112] + dwdot3dscqss4 * dscqss_dsc[147] +
           dwdot3dscqss5 * dscqss_dsc[182] + dwdot3dscqss6 * dscqss_dsc[217] +
           dwdot3dscqss7 * dscqss_dsc[252] + dwdot3dscqss9 * dscqss_dsc[322] +
           dwdot3dscqss11 * dscqss_dsc[392] + dwdot3dscqss12 * dscqss_dsc[427] +
           dwdot3dscqss14 * dscqss_dsc[497] + dwdot3dscqss13 * dscqss_dsc[462] +
           dwdot3dscqss15 * dscqss_dsc[532] + dwdot3dscqss8 * dscqss_dsc[287] +
           dwdot3dscqss10 * dscqss_dsc[357];
  J[291] = dwdot3dsc8 + dwdot3dscqss0 * dscqss_dsc[8] +
           dwdot3dscqss16 * dscqss_dsc[568] + dwdot3dscqss1 * dscqss_dsc[43] +
           dwdot3dscqss17 * dscqss_dsc[603] + dwdot3dscqss2 * dscqss_dsc[78] +
           dwdot3dscqss3 * dscqss_dsc[113] + dwdot3dscqss4 * dscqss_dsc[148] +
           dwdot3dscqss5 * dscqss_dsc[183] + dwdot3dscqss6 * dscqss_dsc[218] +
           dwdot3dscqss7 * dscqss_dsc[253] + dwdot3dscqss9 * dscqss_dsc[323] +
           dwdot3dscqss11 * dscqss_dsc[393] + dwdot3dscqss12 * dscqss_dsc[428] +
           dwdot3dscqss14 * dscqss_dsc[498] + dwdot3dscqss13 * dscqss_dsc[463] +
           dwdot3dscqss15 * dscqss_dsc[533] + dwdot3dscqss8 * dscqss_dsc[288] +
           dwdot3dscqss10 * dscqss_dsc[358];
  J[327] = dwdot3dsc9 + dwdot3dscqss0 * dscqss_dsc[9] +
           dwdot3dscqss16 * dscqss_dsc[569] + dwdot3dscqss1 * dscqss_dsc[44] +
           dwdot3dscqss17 * dscqss_dsc[604] + dwdot3dscqss2 * dscqss_dsc[79] +
           dwdot3dscqss3 * dscqss_dsc[114] + dwdot3dscqss4 * dscqss_dsc[149] +
           dwdot3dscqss5 * dscqss_dsc[184] + dwdot3dscqss6 * dscqss_dsc[219] +
           dwdot3dscqss7 * dscqss_dsc[254] + dwdot3dscqss9 * dscqss_dsc[324] +
           dwdot3dscqss11 * dscqss_dsc[394] + dwdot3dscqss12 * dscqss_dsc[429] +
           dwdot3dscqss14 * dscqss_dsc[499] + dwdot3dscqss13 * dscqss_dsc[464] +
           dwdot3dscqss15 * dscqss_dsc[534] + dwdot3dscqss8 * dscqss_dsc[289] +
           dwdot3dscqss10 * dscqss_dsc[359];
  J[363] = dwdot3dsc10 + dwdot3dscqss0 * dscqss_dsc[10] +
           dwdot3dscqss16 * dscqss_dsc[570] + dwdot3dscqss1 * dscqss_dsc[45] +
           dwdot3dscqss17 * dscqss_dsc[605] + dwdot3dscqss2 * dscqss_dsc[80] +
           dwdot3dscqss3 * dscqss_dsc[115] + dwdot3dscqss4 * dscqss_dsc[150] +
           dwdot3dscqss5 * dscqss_dsc[185] + dwdot3dscqss6 * dscqss_dsc[220] +
           dwdot3dscqss7 * dscqss_dsc[255] + dwdot3dscqss9 * dscqss_dsc[325] +
           dwdot3dscqss11 * dscqss_dsc[395] + dwdot3dscqss12 * dscqss_dsc[430] +
           dwdot3dscqss14 * dscqss_dsc[500] + dwdot3dscqss13 * dscqss_dsc[465] +
           dwdot3dscqss15 * dscqss_dsc[535] + dwdot3dscqss8 * dscqss_dsc[290] +
           dwdot3dscqss10 * dscqss_dsc[360];
  J[399] = dwdot3dsc11 + dwdot3dscqss0 * dscqss_dsc[11] +
           dwdot3dscqss16 * dscqss_dsc[571] + dwdot3dscqss1 * dscqss_dsc[46] +
           dwdot3dscqss17 * dscqss_dsc[606] + dwdot3dscqss2 * dscqss_dsc[81] +
           dwdot3dscqss3 * dscqss_dsc[116] + dwdot3dscqss4 * dscqss_dsc[151] +
           dwdot3dscqss5 * dscqss_dsc[186] + dwdot3dscqss6 * dscqss_dsc[221] +
           dwdot3dscqss7 * dscqss_dsc[256] + dwdot3dscqss9 * dscqss_dsc[326] +
           dwdot3dscqss11 * dscqss_dsc[396] + dwdot3dscqss12 * dscqss_dsc[431] +
           dwdot3dscqss14 * dscqss_dsc[501] + dwdot3dscqss13 * dscqss_dsc[466] +
           dwdot3dscqss15 * dscqss_dsc[536] + dwdot3dscqss8 * dscqss_dsc[291] +
           dwdot3dscqss10 * dscqss_dsc[361];
  J[435] = dwdot3dsc12 + dwdot3dscqss0 * dscqss_dsc[12] +
           dwdot3dscqss16 * dscqss_dsc[572] + dwdot3dscqss1 * dscqss_dsc[47] +
           dwdot3dscqss17 * dscqss_dsc[607] + dwdot3dscqss2 * dscqss_dsc[82] +
           dwdot3dscqss3 * dscqss_dsc[117] + dwdot3dscqss4 * dscqss_dsc[152] +
           dwdot3dscqss5 * dscqss_dsc[187] + dwdot3dscqss6 * dscqss_dsc[222] +
           dwdot3dscqss7 * dscqss_dsc[257] + dwdot3dscqss9 * dscqss_dsc[327] +
           dwdot3dscqss11 * dscqss_dsc[397] + dwdot3dscqss12 * dscqss_dsc[432] +
           dwdot3dscqss14 * dscqss_dsc[502] + dwdot3dscqss13 * dscqss_dsc[467] +
           dwdot3dscqss15 * dscqss_dsc[537] + dwdot3dscqss8 * dscqss_dsc[292] +
           dwdot3dscqss10 * dscqss_dsc[362];
  J[471] = dwdot3dsc13 + dwdot3dscqss0 * dscqss_dsc[13] +
           dwdot3dscqss16 * dscqss_dsc[573] + dwdot3dscqss1 * dscqss_dsc[48] +
           dwdot3dscqss17 * dscqss_dsc[608] + dwdot3dscqss2 * dscqss_dsc[83] +
           dwdot3dscqss3 * dscqss_dsc[118] + dwdot3dscqss4 * dscqss_dsc[153] +
           dwdot3dscqss5 * dscqss_dsc[188] + dwdot3dscqss6 * dscqss_dsc[223] +
           dwdot3dscqss7 * dscqss_dsc[258] + dwdot3dscqss9 * dscqss_dsc[328] +
           dwdot3dscqss11 * dscqss_dsc[398] + dwdot3dscqss12 * dscqss_dsc[433] +
           dwdot3dscqss14 * dscqss_dsc[503] + dwdot3dscqss13 * dscqss_dsc[468] +
           dwdot3dscqss15 * dscqss_dsc[538] + dwdot3dscqss8 * dscqss_dsc[293] +
           dwdot3dscqss10 * dscqss_dsc[363];
  J[507] = dwdot3dsc14 + dwdot3dscqss0 * dscqss_dsc[14] +
           dwdot3dscqss16 * dscqss_dsc[574] + dwdot3dscqss1 * dscqss_dsc[49] +
           dwdot3dscqss17 * dscqss_dsc[609] + dwdot3dscqss2 * dscqss_dsc[84] +
           dwdot3dscqss3 * dscqss_dsc[119] + dwdot3dscqss4 * dscqss_dsc[154] +
           dwdot3dscqss5 * dscqss_dsc[189] + dwdot3dscqss6 * dscqss_dsc[224] +
           dwdot3dscqss7 * dscqss_dsc[259] + dwdot3dscqss9 * dscqss_dsc[329] +
           dwdot3dscqss11 * dscqss_dsc[399] + dwdot3dscqss12 * dscqss_dsc[434] +
           dwdot3dscqss14 * dscqss_dsc[504] + dwdot3dscqss13 * dscqss_dsc[469] +
           dwdot3dscqss15 * dscqss_dsc[539] + dwdot3dscqss8 * dscqss_dsc[294] +
           dwdot3dscqss10 * dscqss_dsc[364];
  J[543] = dwdot3dsc15 + dwdot3dscqss0 * dscqss_dsc[15] +
           dwdot3dscqss16 * dscqss_dsc[575] + dwdot3dscqss1 * dscqss_dsc[50] +
           dwdot3dscqss17 * dscqss_dsc[610] + dwdot3dscqss2 * dscqss_dsc[85] +
           dwdot3dscqss3 * dscqss_dsc[120] + dwdot3dscqss4 * dscqss_dsc[155] +
           dwdot3dscqss5 * dscqss_dsc[190] + dwdot3dscqss6 * dscqss_dsc[225] +
           dwdot3dscqss7 * dscqss_dsc[260] + dwdot3dscqss9 * dscqss_dsc[330] +
           dwdot3dscqss11 * dscqss_dsc[400] + dwdot3dscqss12 * dscqss_dsc[435] +
           dwdot3dscqss14 * dscqss_dsc[505] + dwdot3dscqss13 * dscqss_dsc[470] +
           dwdot3dscqss15 * dscqss_dsc[540] + dwdot3dscqss8 * dscqss_dsc[295] +
           dwdot3dscqss10 * dscqss_dsc[365];
  J[579] = dwdot3dsc16 + dwdot3dscqss0 * dscqss_dsc[16] +
           dwdot3dscqss16 * dscqss_dsc[576] + dwdot3dscqss1 * dscqss_dsc[51] +
           dwdot3dscqss17 * dscqss_dsc[611] + dwdot3dscqss2 * dscqss_dsc[86] +
           dwdot3dscqss3 * dscqss_dsc[121] + dwdot3dscqss4 * dscqss_dsc[156] +
           dwdot3dscqss5 * dscqss_dsc[191] + dwdot3dscqss6 * dscqss_dsc[226] +
           dwdot3dscqss7 * dscqss_dsc[261] + dwdot3dscqss9 * dscqss_dsc[331] +
           dwdot3dscqss11 * dscqss_dsc[401] + dwdot3dscqss12 * dscqss_dsc[436] +
           dwdot3dscqss14 * dscqss_dsc[506] + dwdot3dscqss13 * dscqss_dsc[471] +
           dwdot3dscqss15 * dscqss_dsc[541] + dwdot3dscqss8 * dscqss_dsc[296] +
           dwdot3dscqss10 * dscqss_dsc[366];
  J[615] = dwdot3dsc17 + dwdot3dscqss0 * dscqss_dsc[17] +
           dwdot3dscqss16 * dscqss_dsc[577] + dwdot3dscqss1 * dscqss_dsc[52] +
           dwdot3dscqss17 * dscqss_dsc[612] + dwdot3dscqss2 * dscqss_dsc[87] +
           dwdot3dscqss3 * dscqss_dsc[122] + dwdot3dscqss4 * dscqss_dsc[157] +
           dwdot3dscqss5 * dscqss_dsc[192] + dwdot3dscqss6 * dscqss_dsc[227] +
           dwdot3dscqss7 * dscqss_dsc[262] + dwdot3dscqss9 * dscqss_dsc[332] +
           dwdot3dscqss11 * dscqss_dsc[402] + dwdot3dscqss12 * dscqss_dsc[437] +
           dwdot3dscqss14 * dscqss_dsc[507] + dwdot3dscqss13 * dscqss_dsc[472] +
           dwdot3dscqss15 * dscqss_dsc[542] + dwdot3dscqss8 * dscqss_dsc[297] +
           dwdot3dscqss10 * dscqss_dsc[367];
  J[651] = dwdot3dsc18 + dwdot3dscqss0 * dscqss_dsc[18] +
           dwdot3dscqss16 * dscqss_dsc[578] + dwdot3dscqss1 * dscqss_dsc[53] +
           dwdot3dscqss17 * dscqss_dsc[613] + dwdot3dscqss2 * dscqss_dsc[88] +
           dwdot3dscqss3 * dscqss_dsc[123] + dwdot3dscqss4 * dscqss_dsc[158] +
           dwdot3dscqss5 * dscqss_dsc[193] + dwdot3dscqss6 * dscqss_dsc[228] +
           dwdot3dscqss7 * dscqss_dsc[263] + dwdot3dscqss9 * dscqss_dsc[333] +
           dwdot3dscqss11 * dscqss_dsc[403] + dwdot3dscqss12 * dscqss_dsc[438] +
           dwdot3dscqss14 * dscqss_dsc[508] + dwdot3dscqss13 * dscqss_dsc[473] +
           dwdot3dscqss15 * dscqss_dsc[543] + dwdot3dscqss8 * dscqss_dsc[298] +
           dwdot3dscqss10 * dscqss_dsc[368];
  J[687] = dwdot3dsc19 + dwdot3dscqss0 * dscqss_dsc[19] +
           dwdot3dscqss16 * dscqss_dsc[579] + dwdot3dscqss1 * dscqss_dsc[54] +
           dwdot3dscqss17 * dscqss_dsc[614] + dwdot3dscqss2 * dscqss_dsc[89] +
           dwdot3dscqss3 * dscqss_dsc[124] + dwdot3dscqss4 * dscqss_dsc[159] +
           dwdot3dscqss5 * dscqss_dsc[194] + dwdot3dscqss6 * dscqss_dsc[229] +
           dwdot3dscqss7 * dscqss_dsc[264] + dwdot3dscqss9 * dscqss_dsc[334] +
           dwdot3dscqss11 * dscqss_dsc[404] + dwdot3dscqss12 * dscqss_dsc[439] +
           dwdot3dscqss14 * dscqss_dsc[509] + dwdot3dscqss13 * dscqss_dsc[474] +
           dwdot3dscqss15 * dscqss_dsc[544] + dwdot3dscqss8 * dscqss_dsc[299] +
           dwdot3dscqss10 * dscqss_dsc[369];
  J[723] = dwdot3dsc20 + dwdot3dscqss0 * dscqss_dsc[20] +
           dwdot3dscqss16 * dscqss_dsc[580] + dwdot3dscqss1 * dscqss_dsc[55] +
           dwdot3dscqss17 * dscqss_dsc[615] + dwdot3dscqss2 * dscqss_dsc[90] +
           dwdot3dscqss3 * dscqss_dsc[125] + dwdot3dscqss4 * dscqss_dsc[160] +
           dwdot3dscqss5 * dscqss_dsc[195] + dwdot3dscqss6 * dscqss_dsc[230] +
           dwdot3dscqss7 * dscqss_dsc[265] + dwdot3dscqss9 * dscqss_dsc[335] +
           dwdot3dscqss11 * dscqss_dsc[405] + dwdot3dscqss12 * dscqss_dsc[440] +
           dwdot3dscqss14 * dscqss_dsc[510] + dwdot3dscqss13 * dscqss_dsc[475] +
           dwdot3dscqss15 * dscqss_dsc[545] + dwdot3dscqss8 * dscqss_dsc[300] +
           dwdot3dscqss10 * dscqss_dsc[370];
  J[759] = dwdot3dsc21 + dwdot3dscqss0 * dscqss_dsc[21] +
           dwdot3dscqss16 * dscqss_dsc[581] + dwdot3dscqss1 * dscqss_dsc[56] +
           dwdot3dscqss17 * dscqss_dsc[616] + dwdot3dscqss2 * dscqss_dsc[91] +
           dwdot3dscqss3 * dscqss_dsc[126] + dwdot3dscqss4 * dscqss_dsc[161] +
           dwdot3dscqss5 * dscqss_dsc[196] + dwdot3dscqss6 * dscqss_dsc[231] +
           dwdot3dscqss7 * dscqss_dsc[266] + dwdot3dscqss9 * dscqss_dsc[336] +
           dwdot3dscqss11 * dscqss_dsc[406] + dwdot3dscqss12 * dscqss_dsc[441] +
           dwdot3dscqss14 * dscqss_dsc[511] + dwdot3dscqss13 * dscqss_dsc[476] +
           dwdot3dscqss15 * dscqss_dsc[546] + dwdot3dscqss8 * dscqss_dsc[301] +
           dwdot3dscqss10 * dscqss_dsc[371];
  J[795] = dwdot3dsc22 + dwdot3dscqss0 * dscqss_dsc[22] +
           dwdot3dscqss16 * dscqss_dsc[582] + dwdot3dscqss1 * dscqss_dsc[57] +
           dwdot3dscqss17 * dscqss_dsc[617] + dwdot3dscqss2 * dscqss_dsc[92] +
           dwdot3dscqss3 * dscqss_dsc[127] + dwdot3dscqss4 * dscqss_dsc[162] +
           dwdot3dscqss5 * dscqss_dsc[197] + dwdot3dscqss6 * dscqss_dsc[232] +
           dwdot3dscqss7 * dscqss_dsc[267] + dwdot3dscqss9 * dscqss_dsc[337] +
           dwdot3dscqss11 * dscqss_dsc[407] + dwdot3dscqss12 * dscqss_dsc[442] +
           dwdot3dscqss14 * dscqss_dsc[512] + dwdot3dscqss13 * dscqss_dsc[477] +
           dwdot3dscqss15 * dscqss_dsc[547] + dwdot3dscqss8 * dscqss_dsc[302] +
           dwdot3dscqss10 * dscqss_dsc[372];
  J[831] = dwdot3dsc23 + dwdot3dscqss0 * dscqss_dsc[23] +
           dwdot3dscqss16 * dscqss_dsc[583] + dwdot3dscqss1 * dscqss_dsc[58] +
           dwdot3dscqss17 * dscqss_dsc[618] + dwdot3dscqss2 * dscqss_dsc[93] +
           dwdot3dscqss3 * dscqss_dsc[128] + dwdot3dscqss4 * dscqss_dsc[163] +
           dwdot3dscqss5 * dscqss_dsc[198] + dwdot3dscqss6 * dscqss_dsc[233] +
           dwdot3dscqss7 * dscqss_dsc[268] + dwdot3dscqss9 * dscqss_dsc[338] +
           dwdot3dscqss11 * dscqss_dsc[408] + dwdot3dscqss12 * dscqss_dsc[443] +
           dwdot3dscqss14 * dscqss_dsc[513] + dwdot3dscqss13 * dscqss_dsc[478] +
           dwdot3dscqss15 * dscqss_dsc[548] + dwdot3dscqss8 * dscqss_dsc[303] +
           dwdot3dscqss10 * dscqss_dsc[373];
  J[867] = dwdot3dsc24 + dwdot3dscqss0 * dscqss_dsc[24] +
           dwdot3dscqss16 * dscqss_dsc[584] + dwdot3dscqss1 * dscqss_dsc[59] +
           dwdot3dscqss17 * dscqss_dsc[619] + dwdot3dscqss2 * dscqss_dsc[94] +
           dwdot3dscqss3 * dscqss_dsc[129] + dwdot3dscqss4 * dscqss_dsc[164] +
           dwdot3dscqss5 * dscqss_dsc[199] + dwdot3dscqss6 * dscqss_dsc[234] +
           dwdot3dscqss7 * dscqss_dsc[269] + dwdot3dscqss9 * dscqss_dsc[339] +
           dwdot3dscqss11 * dscqss_dsc[409] + dwdot3dscqss12 * dscqss_dsc[444] +
           dwdot3dscqss14 * dscqss_dsc[514] + dwdot3dscqss13 * dscqss_dsc[479] +
           dwdot3dscqss15 * dscqss_dsc[549] + dwdot3dscqss8 * dscqss_dsc[304] +
           dwdot3dscqss10 * dscqss_dsc[374];
  J[903] = dwdot3dsc25 + dwdot3dscqss0 * dscqss_dsc[25] +
           dwdot3dscqss16 * dscqss_dsc[585] + dwdot3dscqss1 * dscqss_dsc[60] +
           dwdot3dscqss17 * dscqss_dsc[620] + dwdot3dscqss2 * dscqss_dsc[95] +
           dwdot3dscqss3 * dscqss_dsc[130] + dwdot3dscqss4 * dscqss_dsc[165] +
           dwdot3dscqss5 * dscqss_dsc[200] + dwdot3dscqss6 * dscqss_dsc[235] +
           dwdot3dscqss7 * dscqss_dsc[270] + dwdot3dscqss9 * dscqss_dsc[340] +
           dwdot3dscqss11 * dscqss_dsc[410] + dwdot3dscqss12 * dscqss_dsc[445] +
           dwdot3dscqss14 * dscqss_dsc[515] + dwdot3dscqss13 * dscqss_dsc[480] +
           dwdot3dscqss15 * dscqss_dsc[550] + dwdot3dscqss8 * dscqss_dsc[305] +
           dwdot3dscqss10 * dscqss_dsc[375];
  J[939] = dwdot3dsc26 + dwdot3dscqss0 * dscqss_dsc[26] +
           dwdot3dscqss16 * dscqss_dsc[586] + dwdot3dscqss1 * dscqss_dsc[61] +
           dwdot3dscqss17 * dscqss_dsc[621] + dwdot3dscqss2 * dscqss_dsc[96] +
           dwdot3dscqss3 * dscqss_dsc[131] + dwdot3dscqss4 * dscqss_dsc[166] +
           dwdot3dscqss5 * dscqss_dsc[201] + dwdot3dscqss6 * dscqss_dsc[236] +
           dwdot3dscqss7 * dscqss_dsc[271] + dwdot3dscqss9 * dscqss_dsc[341] +
           dwdot3dscqss11 * dscqss_dsc[411] + dwdot3dscqss12 * dscqss_dsc[446] +
           dwdot3dscqss14 * dscqss_dsc[516] + dwdot3dscqss13 * dscqss_dsc[481] +
           dwdot3dscqss15 * dscqss_dsc[551] + dwdot3dscqss8 * dscqss_dsc[306] +
           dwdot3dscqss10 * dscqss_dsc[376];
  J[975] = dwdot3dsc27 + dwdot3dscqss0 * dscqss_dsc[27] +
           dwdot3dscqss16 * dscqss_dsc[587] + dwdot3dscqss1 * dscqss_dsc[62] +
           dwdot3dscqss17 * dscqss_dsc[622] + dwdot3dscqss2 * dscqss_dsc[97] +
           dwdot3dscqss3 * dscqss_dsc[132] + dwdot3dscqss4 * dscqss_dsc[167] +
           dwdot3dscqss5 * dscqss_dsc[202] + dwdot3dscqss6 * dscqss_dsc[237] +
           dwdot3dscqss7 * dscqss_dsc[272] + dwdot3dscqss9 * dscqss_dsc[342] +
           dwdot3dscqss11 * dscqss_dsc[412] + dwdot3dscqss12 * dscqss_dsc[447] +
           dwdot3dscqss14 * dscqss_dsc[517] + dwdot3dscqss13 * dscqss_dsc[482] +
           dwdot3dscqss15 * dscqss_dsc[552] + dwdot3dscqss8 * dscqss_dsc[307] +
           dwdot3dscqss10 * dscqss_dsc[377];
  J[1011] =
    dwdot3dsc28 + dwdot3dscqss0 * dscqss_dsc[28] +
    dwdot3dscqss16 * dscqss_dsc[588] + dwdot3dscqss1 * dscqss_dsc[63] +
    dwdot3dscqss17 * dscqss_dsc[623] + dwdot3dscqss2 * dscqss_dsc[98] +
    dwdot3dscqss3 * dscqss_dsc[133] + dwdot3dscqss4 * dscqss_dsc[168] +
    dwdot3dscqss5 * dscqss_dsc[203] + dwdot3dscqss6 * dscqss_dsc[238] +
    dwdot3dscqss7 * dscqss_dsc[273] + dwdot3dscqss9 * dscqss_dsc[343] +
    dwdot3dscqss11 * dscqss_dsc[413] + dwdot3dscqss12 * dscqss_dsc[448] +
    dwdot3dscqss14 * dscqss_dsc[518] + dwdot3dscqss13 * dscqss_dsc[483] +
    dwdot3dscqss15 * dscqss_dsc[553] + dwdot3dscqss8 * dscqss_dsc[308] +
    dwdot3dscqss10 * dscqss_dsc[378];
  J[1047] =
    dwdot3dsc29 + dwdot3dscqss0 * dscqss_dsc[29] +
    dwdot3dscqss16 * dscqss_dsc[589] + dwdot3dscqss1 * dscqss_dsc[64] +
    dwdot3dscqss17 * dscqss_dsc[624] + dwdot3dscqss2 * dscqss_dsc[99] +
    dwdot3dscqss3 * dscqss_dsc[134] + dwdot3dscqss4 * dscqss_dsc[169] +
    dwdot3dscqss5 * dscqss_dsc[204] + dwdot3dscqss6 * dscqss_dsc[239] +
    dwdot3dscqss7 * dscqss_dsc[274] + dwdot3dscqss9 * dscqss_dsc[344] +
    dwdot3dscqss11 * dscqss_dsc[414] + dwdot3dscqss12 * dscqss_dsc[449] +
    dwdot3dscqss14 * dscqss_dsc[519] + dwdot3dscqss13 * dscqss_dsc[484] +
    dwdot3dscqss15 * dscqss_dsc[554] + dwdot3dscqss8 * dscqss_dsc[309] +
    dwdot3dscqss10 * dscqss_dsc[379];
  J[1083] =
    dwdot3dsc30 + dwdot3dscqss0 * dscqss_dsc[30] +
    dwdot3dscqss16 * dscqss_dsc[590] + dwdot3dscqss1 * dscqss_dsc[65] +
    dwdot3dscqss17 * dscqss_dsc[625] + dwdot3dscqss2 * dscqss_dsc[100] +
    dwdot3dscqss3 * dscqss_dsc[135] + dwdot3dscqss4 * dscqss_dsc[170] +
    dwdot3dscqss5 * dscqss_dsc[205] + dwdot3dscqss6 * dscqss_dsc[240] +
    dwdot3dscqss7 * dscqss_dsc[275] + dwdot3dscqss9 * dscqss_dsc[345] +
    dwdot3dscqss11 * dscqss_dsc[415] + dwdot3dscqss12 * dscqss_dsc[450] +
    dwdot3dscqss14 * dscqss_dsc[520] + dwdot3dscqss13 * dscqss_dsc[485] +
    dwdot3dscqss15 * dscqss_dsc[555] + dwdot3dscqss8 * dscqss_dsc[310] +
    dwdot3dscqss10 * dscqss_dsc[380];
  J[1119] =
    dwdot3dsc31 + dwdot3dscqss0 * dscqss_dsc[31] +
    dwdot3dscqss16 * dscqss_dsc[591] + dwdot3dscqss1 * dscqss_dsc[66] +
    dwdot3dscqss17 * dscqss_dsc[626] + dwdot3dscqss2 * dscqss_dsc[101] +
    dwdot3dscqss3 * dscqss_dsc[136] + dwdot3dscqss4 * dscqss_dsc[171] +
    dwdot3dscqss5 * dscqss_dsc[206] + dwdot3dscqss6 * dscqss_dsc[241] +
    dwdot3dscqss7 * dscqss_dsc[276] + dwdot3dscqss9 * dscqss_dsc[346] +
    dwdot3dscqss11 * dscqss_dsc[416] + dwdot3dscqss12 * dscqss_dsc[451] +
    dwdot3dscqss14 * dscqss_dsc[521] + dwdot3dscqss13 * dscqss_dsc[486] +
    dwdot3dscqss15 * dscqss_dsc[556] + dwdot3dscqss8 * dscqss_dsc[311] +
    dwdot3dscqss10 * dscqss_dsc[381];
  J[1155] =
    dwdot3dsc32 + dwdot3dscqss0 * dscqss_dsc[32] +
    dwdot3dscqss16 * dscqss_dsc[592] + dwdot3dscqss1 * dscqss_dsc[67] +
    dwdot3dscqss17 * dscqss_dsc[627] + dwdot3dscqss2 * dscqss_dsc[102] +
    dwdot3dscqss3 * dscqss_dsc[137] + dwdot3dscqss4 * dscqss_dsc[172] +
    dwdot3dscqss5 * dscqss_dsc[207] + dwdot3dscqss6 * dscqss_dsc[242] +
    dwdot3dscqss7 * dscqss_dsc[277] + dwdot3dscqss9 * dscqss_dsc[347] +
    dwdot3dscqss11 * dscqss_dsc[417] + dwdot3dscqss12 * dscqss_dsc[452] +
    dwdot3dscqss14 * dscqss_dsc[522] + dwdot3dscqss13 * dscqss_dsc[487] +
    dwdot3dscqss15 * dscqss_dsc[557] + dwdot3dscqss8 * dscqss_dsc[312] +
    dwdot3dscqss10 * dscqss_dsc[382];
  J[1191] =
    dwdot3dsc33 + dwdot3dscqss0 * dscqss_dsc[33] +
    dwdot3dscqss16 * dscqss_dsc[593] + dwdot3dscqss1 * dscqss_dsc[68] +
    dwdot3dscqss17 * dscqss_dsc[628] + dwdot3dscqss2 * dscqss_dsc[103] +
    dwdot3dscqss3 * dscqss_dsc[138] + dwdot3dscqss4 * dscqss_dsc[173] +
    dwdot3dscqss5 * dscqss_dsc[208] + dwdot3dscqss6 * dscqss_dsc[243] +
    dwdot3dscqss7 * dscqss_dsc[278] + dwdot3dscqss9 * dscqss_dsc[348] +
    dwdot3dscqss11 * dscqss_dsc[418] + dwdot3dscqss12 * dscqss_dsc[453] +
    dwdot3dscqss14 * dscqss_dsc[523] + dwdot3dscqss13 * dscqss_dsc[488] +
    dwdot3dscqss15 * dscqss_dsc[558] + dwdot3dscqss8 * dscqss_dsc[313] +
    dwdot3dscqss10 * dscqss_dsc[383];
  J[1227] =
    dwdot3dsc34 + dwdot3dscqss0 * dscqss_dsc[34] +
    dwdot3dscqss16 * dscqss_dsc[594] + dwdot3dscqss1 * dscqss_dsc[69] +
    dwdot3dscqss17 * dscqss_dsc[629] + dwdot3dscqss2 * dscqss_dsc[104] +
    dwdot3dscqss3 * dscqss_dsc[139] + dwdot3dscqss4 * dscqss_dsc[174] +
    dwdot3dscqss5 * dscqss_dsc[209] + dwdot3dscqss6 * dscqss_dsc[244] +
    dwdot3dscqss7 * dscqss_dsc[279] + dwdot3dscqss9 * dscqss_dsc[349] +
    dwdot3dscqss11 * dscqss_dsc[419] + dwdot3dscqss12 * dscqss_dsc[454] +
    dwdot3dscqss14 * dscqss_dsc[524] + dwdot3dscqss13 * dscqss_dsc[489] +
    dwdot3dscqss15 * dscqss_dsc[559] + dwdot3dscqss8 * dscqss_dsc[314] +
    dwdot3dscqss10 * dscqss_dsc[384];
  J[4] = dwdot4dsc0 + dwdot4dscqss0 * dscqss_dsc[0] +
         dwdot4dscqss16 * dscqss_dsc[560] + dwdot4dscqss1 * dscqss_dsc[35] +
         dwdot4dscqss17 * dscqss_dsc[595] + dwdot4dscqss2 * dscqss_dsc[70] +
         dwdot4dscqss3 * dscqss_dsc[105] + dwdot4dscqss4 * dscqss_dsc[140] +
         dwdot4dscqss5 * dscqss_dsc[175] + dwdot4dscqss6 * dscqss_dsc[210] +
         dwdot4dscqss7 * dscqss_dsc[245] + dwdot4dscqss9 * dscqss_dsc[315] +
         dwdot4dscqss11 * dscqss_dsc[385] + dwdot4dscqss12 * dscqss_dsc[420] +
         dwdot4dscqss14 * dscqss_dsc[490] + dwdot4dscqss13 * dscqss_dsc[455] +
         dwdot4dscqss15 * dscqss_dsc[525] + dwdot4dscqss8 * dscqss_dsc[280] +
         dwdot4dscqss10 * dscqss_dsc[350];
  J[40] = dwdot4dsc1 + dwdot4dscqss0 * dscqss_dsc[1] +
          dwdot4dscqss16 * dscqss_dsc[561] + dwdot4dscqss1 * dscqss_dsc[36] +
          dwdot4dscqss17 * dscqss_dsc[596] + dwdot4dscqss2 * dscqss_dsc[71] +
          dwdot4dscqss3 * dscqss_dsc[106] + dwdot4dscqss4 * dscqss_dsc[141] +
          dwdot4dscqss5 * dscqss_dsc[176] + dwdot4dscqss6 * dscqss_dsc[211] +
          dwdot4dscqss7 * dscqss_dsc[246] + dwdot4dscqss9 * dscqss_dsc[316] +
          dwdot4dscqss11 * dscqss_dsc[386] + dwdot4dscqss12 * dscqss_dsc[421] +
          dwdot4dscqss14 * dscqss_dsc[491] + dwdot4dscqss13 * dscqss_dsc[456] +
          dwdot4dscqss15 * dscqss_dsc[526] + dwdot4dscqss8 * dscqss_dsc[281] +
          dwdot4dscqss10 * dscqss_dsc[351];
  J[76] = dwdot4dsc2 + dwdot4dscqss0 * dscqss_dsc[2] +
          dwdot4dscqss16 * dscqss_dsc[562] + dwdot4dscqss1 * dscqss_dsc[37] +
          dwdot4dscqss17 * dscqss_dsc[597] + dwdot4dscqss2 * dscqss_dsc[72] +
          dwdot4dscqss3 * dscqss_dsc[107] + dwdot4dscqss4 * dscqss_dsc[142] +
          dwdot4dscqss5 * dscqss_dsc[177] + dwdot4dscqss6 * dscqss_dsc[212] +
          dwdot4dscqss7 * dscqss_dsc[247] + dwdot4dscqss9 * dscqss_dsc[317] +
          dwdot4dscqss11 * dscqss_dsc[387] + dwdot4dscqss12 * dscqss_dsc[422] +
          dwdot4dscqss14 * dscqss_dsc[492] + dwdot4dscqss13 * dscqss_dsc[457] +
          dwdot4dscqss15 * dscqss_dsc[527] + dwdot4dscqss8 * dscqss_dsc[282] +
          dwdot4dscqss10 * dscqss_dsc[352];
  J[112] = dwdot4dsc3 + dwdot4dscqss0 * dscqss_dsc[3] +
           dwdot4dscqss16 * dscqss_dsc[563] + dwdot4dscqss1 * dscqss_dsc[38] +
           dwdot4dscqss17 * dscqss_dsc[598] + dwdot4dscqss2 * dscqss_dsc[73] +
           dwdot4dscqss3 * dscqss_dsc[108] + dwdot4dscqss4 * dscqss_dsc[143] +
           dwdot4dscqss5 * dscqss_dsc[178] + dwdot4dscqss6 * dscqss_dsc[213] +
           dwdot4dscqss7 * dscqss_dsc[248] + dwdot4dscqss9 * dscqss_dsc[318] +
           dwdot4dscqss11 * dscqss_dsc[388] + dwdot4dscqss12 * dscqss_dsc[423] +
           dwdot4dscqss14 * dscqss_dsc[493] + dwdot4dscqss13 * dscqss_dsc[458] +
           dwdot4dscqss15 * dscqss_dsc[528] + dwdot4dscqss8 * dscqss_dsc[283] +
           dwdot4dscqss10 * dscqss_dsc[353];
  J[148] = dwdot4dsc4 + dwdot4dscqss0 * dscqss_dsc[4] +
           dwdot4dscqss16 * dscqss_dsc[564] + dwdot4dscqss1 * dscqss_dsc[39] +
           dwdot4dscqss17 * dscqss_dsc[599] + dwdot4dscqss2 * dscqss_dsc[74] +
           dwdot4dscqss3 * dscqss_dsc[109] + dwdot4dscqss4 * dscqss_dsc[144] +
           dwdot4dscqss5 * dscqss_dsc[179] + dwdot4dscqss6 * dscqss_dsc[214] +
           dwdot4dscqss7 * dscqss_dsc[249] + dwdot4dscqss9 * dscqss_dsc[319] +
           dwdot4dscqss11 * dscqss_dsc[389] + dwdot4dscqss12 * dscqss_dsc[424] +
           dwdot4dscqss14 * dscqss_dsc[494] + dwdot4dscqss13 * dscqss_dsc[459] +
           dwdot4dscqss15 * dscqss_dsc[529] + dwdot4dscqss8 * dscqss_dsc[284] +
           dwdot4dscqss10 * dscqss_dsc[354];
  J[184] = dwdot4dsc5 + dwdot4dscqss0 * dscqss_dsc[5] +
           dwdot4dscqss16 * dscqss_dsc[565] + dwdot4dscqss1 * dscqss_dsc[40] +
           dwdot4dscqss17 * dscqss_dsc[600] + dwdot4dscqss2 * dscqss_dsc[75] +
           dwdot4dscqss3 * dscqss_dsc[110] + dwdot4dscqss4 * dscqss_dsc[145] +
           dwdot4dscqss5 * dscqss_dsc[180] + dwdot4dscqss6 * dscqss_dsc[215] +
           dwdot4dscqss7 * dscqss_dsc[250] + dwdot4dscqss9 * dscqss_dsc[320] +
           dwdot4dscqss11 * dscqss_dsc[390] + dwdot4dscqss12 * dscqss_dsc[425] +
           dwdot4dscqss14 * dscqss_dsc[495] + dwdot4dscqss13 * dscqss_dsc[460] +
           dwdot4dscqss15 * dscqss_dsc[530] + dwdot4dscqss8 * dscqss_dsc[285] +
           dwdot4dscqss10 * dscqss_dsc[355];
  J[220] = dwdot4dsc6 + dwdot4dscqss0 * dscqss_dsc[6] +
           dwdot4dscqss16 * dscqss_dsc[566] + dwdot4dscqss1 * dscqss_dsc[41] +
           dwdot4dscqss17 * dscqss_dsc[601] + dwdot4dscqss2 * dscqss_dsc[76] +
           dwdot4dscqss3 * dscqss_dsc[111] + dwdot4dscqss4 * dscqss_dsc[146] +
           dwdot4dscqss5 * dscqss_dsc[181] + dwdot4dscqss6 * dscqss_dsc[216] +
           dwdot4dscqss7 * dscqss_dsc[251] + dwdot4dscqss9 * dscqss_dsc[321] +
           dwdot4dscqss11 * dscqss_dsc[391] + dwdot4dscqss12 * dscqss_dsc[426] +
           dwdot4dscqss14 * dscqss_dsc[496] + dwdot4dscqss13 * dscqss_dsc[461] +
           dwdot4dscqss15 * dscqss_dsc[531] + dwdot4dscqss8 * dscqss_dsc[286] +
           dwdot4dscqss10 * dscqss_dsc[356];
  J[256] = dwdot4dsc7 + dwdot4dscqss0 * dscqss_dsc[7] +
           dwdot4dscqss16 * dscqss_dsc[567] + dwdot4dscqss1 * dscqss_dsc[42] +
           dwdot4dscqss17 * dscqss_dsc[602] + dwdot4dscqss2 * dscqss_dsc[77] +
           dwdot4dscqss3 * dscqss_dsc[112] + dwdot4dscqss4 * dscqss_dsc[147] +
           dwdot4dscqss5 * dscqss_dsc[182] + dwdot4dscqss6 * dscqss_dsc[217] +
           dwdot4dscqss7 * dscqss_dsc[252] + dwdot4dscqss9 * dscqss_dsc[322] +
           dwdot4dscqss11 * dscqss_dsc[392] + dwdot4dscqss12 * dscqss_dsc[427] +
           dwdot4dscqss14 * dscqss_dsc[497] + dwdot4dscqss13 * dscqss_dsc[462] +
           dwdot4dscqss15 * dscqss_dsc[532] + dwdot4dscqss8 * dscqss_dsc[287] +
           dwdot4dscqss10 * dscqss_dsc[357];
  J[292] = dwdot4dsc8 + dwdot4dscqss0 * dscqss_dsc[8] +
           dwdot4dscqss16 * dscqss_dsc[568] + dwdot4dscqss1 * dscqss_dsc[43] +
           dwdot4dscqss17 * dscqss_dsc[603] + dwdot4dscqss2 * dscqss_dsc[78] +
           dwdot4dscqss3 * dscqss_dsc[113] + dwdot4dscqss4 * dscqss_dsc[148] +
           dwdot4dscqss5 * dscqss_dsc[183] + dwdot4dscqss6 * dscqss_dsc[218] +
           dwdot4dscqss7 * dscqss_dsc[253] + dwdot4dscqss9 * dscqss_dsc[323] +
           dwdot4dscqss11 * dscqss_dsc[393] + dwdot4dscqss12 * dscqss_dsc[428] +
           dwdot4dscqss14 * dscqss_dsc[498] + dwdot4dscqss13 * dscqss_dsc[463] +
           dwdot4dscqss15 * dscqss_dsc[533] + dwdot4dscqss8 * dscqss_dsc[288] +
           dwdot4dscqss10 * dscqss_dsc[358];
  J[328] = dwdot4dsc9 + dwdot4dscqss0 * dscqss_dsc[9] +
           dwdot4dscqss16 * dscqss_dsc[569] + dwdot4dscqss1 * dscqss_dsc[44] +
           dwdot4dscqss17 * dscqss_dsc[604] + dwdot4dscqss2 * dscqss_dsc[79] +
           dwdot4dscqss3 * dscqss_dsc[114] + dwdot4dscqss4 * dscqss_dsc[149] +
           dwdot4dscqss5 * dscqss_dsc[184] + dwdot4dscqss6 * dscqss_dsc[219] +
           dwdot4dscqss7 * dscqss_dsc[254] + dwdot4dscqss9 * dscqss_dsc[324] +
           dwdot4dscqss11 * dscqss_dsc[394] + dwdot4dscqss12 * dscqss_dsc[429] +
           dwdot4dscqss14 * dscqss_dsc[499] + dwdot4dscqss13 * dscqss_dsc[464] +
           dwdot4dscqss15 * dscqss_dsc[534] + dwdot4dscqss8 * dscqss_dsc[289] +
           dwdot4dscqss10 * dscqss_dsc[359];
  J[364] = dwdot4dsc10 + dwdot4dscqss0 * dscqss_dsc[10] +
           dwdot4dscqss16 * dscqss_dsc[570] + dwdot4dscqss1 * dscqss_dsc[45] +
           dwdot4dscqss17 * dscqss_dsc[605] + dwdot4dscqss2 * dscqss_dsc[80] +
           dwdot4dscqss3 * dscqss_dsc[115] + dwdot4dscqss4 * dscqss_dsc[150] +
           dwdot4dscqss5 * dscqss_dsc[185] + dwdot4dscqss6 * dscqss_dsc[220] +
           dwdot4dscqss7 * dscqss_dsc[255] + dwdot4dscqss9 * dscqss_dsc[325] +
           dwdot4dscqss11 * dscqss_dsc[395] + dwdot4dscqss12 * dscqss_dsc[430] +
           dwdot4dscqss14 * dscqss_dsc[500] + dwdot4dscqss13 * dscqss_dsc[465] +
           dwdot4dscqss15 * dscqss_dsc[535] + dwdot4dscqss8 * dscqss_dsc[290] +
           dwdot4dscqss10 * dscqss_dsc[360];
  J[400] = dwdot4dsc11 + dwdot4dscqss0 * dscqss_dsc[11] +
           dwdot4dscqss16 * dscqss_dsc[571] + dwdot4dscqss1 * dscqss_dsc[46] +
           dwdot4dscqss17 * dscqss_dsc[606] + dwdot4dscqss2 * dscqss_dsc[81] +
           dwdot4dscqss3 * dscqss_dsc[116] + dwdot4dscqss4 * dscqss_dsc[151] +
           dwdot4dscqss5 * dscqss_dsc[186] + dwdot4dscqss6 * dscqss_dsc[221] +
           dwdot4dscqss7 * dscqss_dsc[256] + dwdot4dscqss9 * dscqss_dsc[326] +
           dwdot4dscqss11 * dscqss_dsc[396] + dwdot4dscqss12 * dscqss_dsc[431] +
           dwdot4dscqss14 * dscqss_dsc[501] + dwdot4dscqss13 * dscqss_dsc[466] +
           dwdot4dscqss15 * dscqss_dsc[536] + dwdot4dscqss8 * dscqss_dsc[291] +
           dwdot4dscqss10 * dscqss_dsc[361];
  J[436] = dwdot4dsc12 + dwdot4dscqss0 * dscqss_dsc[12] +
           dwdot4dscqss16 * dscqss_dsc[572] + dwdot4dscqss1 * dscqss_dsc[47] +
           dwdot4dscqss17 * dscqss_dsc[607] + dwdot4dscqss2 * dscqss_dsc[82] +
           dwdot4dscqss3 * dscqss_dsc[117] + dwdot4dscqss4 * dscqss_dsc[152] +
           dwdot4dscqss5 * dscqss_dsc[187] + dwdot4dscqss6 * dscqss_dsc[222] +
           dwdot4dscqss7 * dscqss_dsc[257] + dwdot4dscqss9 * dscqss_dsc[327] +
           dwdot4dscqss11 * dscqss_dsc[397] + dwdot4dscqss12 * dscqss_dsc[432] +
           dwdot4dscqss14 * dscqss_dsc[502] + dwdot4dscqss13 * dscqss_dsc[467] +
           dwdot4dscqss15 * dscqss_dsc[537] + dwdot4dscqss8 * dscqss_dsc[292] +
           dwdot4dscqss10 * dscqss_dsc[362];
  J[472] = dwdot4dsc13 + dwdot4dscqss0 * dscqss_dsc[13] +
           dwdot4dscqss16 * dscqss_dsc[573] + dwdot4dscqss1 * dscqss_dsc[48] +
           dwdot4dscqss17 * dscqss_dsc[608] + dwdot4dscqss2 * dscqss_dsc[83] +
           dwdot4dscqss3 * dscqss_dsc[118] + dwdot4dscqss4 * dscqss_dsc[153] +
           dwdot4dscqss5 * dscqss_dsc[188] + dwdot4dscqss6 * dscqss_dsc[223] +
           dwdot4dscqss7 * dscqss_dsc[258] + dwdot4dscqss9 * dscqss_dsc[328] +
           dwdot4dscqss11 * dscqss_dsc[398] + dwdot4dscqss12 * dscqss_dsc[433] +
           dwdot4dscqss14 * dscqss_dsc[503] + dwdot4dscqss13 * dscqss_dsc[468] +
           dwdot4dscqss15 * dscqss_dsc[538] + dwdot4dscqss8 * dscqss_dsc[293] +
           dwdot4dscqss10 * dscqss_dsc[363];
  J[508] = dwdot4dsc14 + dwdot4dscqss0 * dscqss_dsc[14] +
           dwdot4dscqss16 * dscqss_dsc[574] + dwdot4dscqss1 * dscqss_dsc[49] +
           dwdot4dscqss17 * dscqss_dsc[609] + dwdot4dscqss2 * dscqss_dsc[84] +
           dwdot4dscqss3 * dscqss_dsc[119] + dwdot4dscqss4 * dscqss_dsc[154] +
           dwdot4dscqss5 * dscqss_dsc[189] + dwdot4dscqss6 * dscqss_dsc[224] +
           dwdot4dscqss7 * dscqss_dsc[259] + dwdot4dscqss9 * dscqss_dsc[329] +
           dwdot4dscqss11 * dscqss_dsc[399] + dwdot4dscqss12 * dscqss_dsc[434] +
           dwdot4dscqss14 * dscqss_dsc[504] + dwdot4dscqss13 * dscqss_dsc[469] +
           dwdot4dscqss15 * dscqss_dsc[539] + dwdot4dscqss8 * dscqss_dsc[294] +
           dwdot4dscqss10 * dscqss_dsc[364];
  J[544] = dwdot4dsc15 + dwdot4dscqss0 * dscqss_dsc[15] +
           dwdot4dscqss16 * dscqss_dsc[575] + dwdot4dscqss1 * dscqss_dsc[50] +
           dwdot4dscqss17 * dscqss_dsc[610] + dwdot4dscqss2 * dscqss_dsc[85] +
           dwdot4dscqss3 * dscqss_dsc[120] + dwdot4dscqss4 * dscqss_dsc[155] +
           dwdot4dscqss5 * dscqss_dsc[190] + dwdot4dscqss6 * dscqss_dsc[225] +
           dwdot4dscqss7 * dscqss_dsc[260] + dwdot4dscqss9 * dscqss_dsc[330] +
           dwdot4dscqss11 * dscqss_dsc[400] + dwdot4dscqss12 * dscqss_dsc[435] +
           dwdot4dscqss14 * dscqss_dsc[505] + dwdot4dscqss13 * dscqss_dsc[470] +
           dwdot4dscqss15 * dscqss_dsc[540] + dwdot4dscqss8 * dscqss_dsc[295] +
           dwdot4dscqss10 * dscqss_dsc[365];
  J[580] = dwdot4dsc16 + dwdot4dscqss0 * dscqss_dsc[16] +
           dwdot4dscqss16 * dscqss_dsc[576] + dwdot4dscqss1 * dscqss_dsc[51] +
           dwdot4dscqss17 * dscqss_dsc[611] + dwdot4dscqss2 * dscqss_dsc[86] +
           dwdot4dscqss3 * dscqss_dsc[121] + dwdot4dscqss4 * dscqss_dsc[156] +
           dwdot4dscqss5 * dscqss_dsc[191] + dwdot4dscqss6 * dscqss_dsc[226] +
           dwdot4dscqss7 * dscqss_dsc[261] + dwdot4dscqss9 * dscqss_dsc[331] +
           dwdot4dscqss11 * dscqss_dsc[401] + dwdot4dscqss12 * dscqss_dsc[436] +
           dwdot4dscqss14 * dscqss_dsc[506] + dwdot4dscqss13 * dscqss_dsc[471] +
           dwdot4dscqss15 * dscqss_dsc[541] + dwdot4dscqss8 * dscqss_dsc[296] +
           dwdot4dscqss10 * dscqss_dsc[366];
  J[616] = dwdot4dsc17 + dwdot4dscqss0 * dscqss_dsc[17] +
           dwdot4dscqss16 * dscqss_dsc[577] + dwdot4dscqss1 * dscqss_dsc[52] +
           dwdot4dscqss17 * dscqss_dsc[612] + dwdot4dscqss2 * dscqss_dsc[87] +
           dwdot4dscqss3 * dscqss_dsc[122] + dwdot4dscqss4 * dscqss_dsc[157] +
           dwdot4dscqss5 * dscqss_dsc[192] + dwdot4dscqss6 * dscqss_dsc[227] +
           dwdot4dscqss7 * dscqss_dsc[262] + dwdot4dscqss9 * dscqss_dsc[332] +
           dwdot4dscqss11 * dscqss_dsc[402] + dwdot4dscqss12 * dscqss_dsc[437] +
           dwdot4dscqss14 * dscqss_dsc[507] + dwdot4dscqss13 * dscqss_dsc[472] +
           dwdot4dscqss15 * dscqss_dsc[542] + dwdot4dscqss8 * dscqss_dsc[297] +
           dwdot4dscqss10 * dscqss_dsc[367];
  J[652] = dwdot4dsc18 + dwdot4dscqss0 * dscqss_dsc[18] +
           dwdot4dscqss16 * dscqss_dsc[578] + dwdot4dscqss1 * dscqss_dsc[53] +
           dwdot4dscqss17 * dscqss_dsc[613] + dwdot4dscqss2 * dscqss_dsc[88] +
           dwdot4dscqss3 * dscqss_dsc[123] + dwdot4dscqss4 * dscqss_dsc[158] +
           dwdot4dscqss5 * dscqss_dsc[193] + dwdot4dscqss6 * dscqss_dsc[228] +
           dwdot4dscqss7 * dscqss_dsc[263] + dwdot4dscqss9 * dscqss_dsc[333] +
           dwdot4dscqss11 * dscqss_dsc[403] + dwdot4dscqss12 * dscqss_dsc[438] +
           dwdot4dscqss14 * dscqss_dsc[508] + dwdot4dscqss13 * dscqss_dsc[473] +
           dwdot4dscqss15 * dscqss_dsc[543] + dwdot4dscqss8 * dscqss_dsc[298] +
           dwdot4dscqss10 * dscqss_dsc[368];
  J[688] = dwdot4dsc19 + dwdot4dscqss0 * dscqss_dsc[19] +
           dwdot4dscqss16 * dscqss_dsc[579] + dwdot4dscqss1 * dscqss_dsc[54] +
           dwdot4dscqss17 * dscqss_dsc[614] + dwdot4dscqss2 * dscqss_dsc[89] +
           dwdot4dscqss3 * dscqss_dsc[124] + dwdot4dscqss4 * dscqss_dsc[159] +
           dwdot4dscqss5 * dscqss_dsc[194] + dwdot4dscqss6 * dscqss_dsc[229] +
           dwdot4dscqss7 * dscqss_dsc[264] + dwdot4dscqss9 * dscqss_dsc[334] +
           dwdot4dscqss11 * dscqss_dsc[404] + dwdot4dscqss12 * dscqss_dsc[439] +
           dwdot4dscqss14 * dscqss_dsc[509] + dwdot4dscqss13 * dscqss_dsc[474] +
           dwdot4dscqss15 * dscqss_dsc[544] + dwdot4dscqss8 * dscqss_dsc[299] +
           dwdot4dscqss10 * dscqss_dsc[369];
  J[724] = dwdot4dsc20 + dwdot4dscqss0 * dscqss_dsc[20] +
           dwdot4dscqss16 * dscqss_dsc[580] + dwdot4dscqss1 * dscqss_dsc[55] +
           dwdot4dscqss17 * dscqss_dsc[615] + dwdot4dscqss2 * dscqss_dsc[90] +
           dwdot4dscqss3 * dscqss_dsc[125] + dwdot4dscqss4 * dscqss_dsc[160] +
           dwdot4dscqss5 * dscqss_dsc[195] + dwdot4dscqss6 * dscqss_dsc[230] +
           dwdot4dscqss7 * dscqss_dsc[265] + dwdot4dscqss9 * dscqss_dsc[335] +
           dwdot4dscqss11 * dscqss_dsc[405] + dwdot4dscqss12 * dscqss_dsc[440] +
           dwdot4dscqss14 * dscqss_dsc[510] + dwdot4dscqss13 * dscqss_dsc[475] +
           dwdot4dscqss15 * dscqss_dsc[545] + dwdot4dscqss8 * dscqss_dsc[300] +
           dwdot4dscqss10 * dscqss_dsc[370];
  J[760] = dwdot4dsc21 + dwdot4dscqss0 * dscqss_dsc[21] +
           dwdot4dscqss16 * dscqss_dsc[581] + dwdot4dscqss1 * dscqss_dsc[56] +
           dwdot4dscqss17 * dscqss_dsc[616] + dwdot4dscqss2 * dscqss_dsc[91] +
           dwdot4dscqss3 * dscqss_dsc[126] + dwdot4dscqss4 * dscqss_dsc[161] +
           dwdot4dscqss5 * dscqss_dsc[196] + dwdot4dscqss6 * dscqss_dsc[231] +
           dwdot4dscqss7 * dscqss_dsc[266] + dwdot4dscqss9 * dscqss_dsc[336] +
           dwdot4dscqss11 * dscqss_dsc[406] + dwdot4dscqss12 * dscqss_dsc[441] +
           dwdot4dscqss14 * dscqss_dsc[511] + dwdot4dscqss13 * dscqss_dsc[476] +
           dwdot4dscqss15 * dscqss_dsc[546] + dwdot4dscqss8 * dscqss_dsc[301] +
           dwdot4dscqss10 * dscqss_dsc[371];
  J[796] = dwdot4dsc22 + dwdot4dscqss0 * dscqss_dsc[22] +
           dwdot4dscqss16 * dscqss_dsc[582] + dwdot4dscqss1 * dscqss_dsc[57] +
           dwdot4dscqss17 * dscqss_dsc[617] + dwdot4dscqss2 * dscqss_dsc[92] +
           dwdot4dscqss3 * dscqss_dsc[127] + dwdot4dscqss4 * dscqss_dsc[162] +
           dwdot4dscqss5 * dscqss_dsc[197] + dwdot4dscqss6 * dscqss_dsc[232] +
           dwdot4dscqss7 * dscqss_dsc[267] + dwdot4dscqss9 * dscqss_dsc[337] +
           dwdot4dscqss11 * dscqss_dsc[407] + dwdot4dscqss12 * dscqss_dsc[442] +
           dwdot4dscqss14 * dscqss_dsc[512] + dwdot4dscqss13 * dscqss_dsc[477] +
           dwdot4dscqss15 * dscqss_dsc[547] + dwdot4dscqss8 * dscqss_dsc[302] +
           dwdot4dscqss10 * dscqss_dsc[372];
  J[832] = dwdot4dsc23 + dwdot4dscqss0 * dscqss_dsc[23] +
           dwdot4dscqss16 * dscqss_dsc[583] + dwdot4dscqss1 * dscqss_dsc[58] +
           dwdot4dscqss17 * dscqss_dsc[618] + dwdot4dscqss2 * dscqss_dsc[93] +
           dwdot4dscqss3 * dscqss_dsc[128] + dwdot4dscqss4 * dscqss_dsc[163] +
           dwdot4dscqss5 * dscqss_dsc[198] + dwdot4dscqss6 * dscqss_dsc[233] +
           dwdot4dscqss7 * dscqss_dsc[268] + dwdot4dscqss9 * dscqss_dsc[338] +
           dwdot4dscqss11 * dscqss_dsc[408] + dwdot4dscqss12 * dscqss_dsc[443] +
           dwdot4dscqss14 * dscqss_dsc[513] + dwdot4dscqss13 * dscqss_dsc[478] +
           dwdot4dscqss15 * dscqss_dsc[548] + dwdot4dscqss8 * dscqss_dsc[303] +
           dwdot4dscqss10 * dscqss_dsc[373];
  J[868] = dwdot4dsc24 + dwdot4dscqss0 * dscqss_dsc[24] +
           dwdot4dscqss16 * dscqss_dsc[584] + dwdot4dscqss1 * dscqss_dsc[59] +
           dwdot4dscqss17 * dscqss_dsc[619] + dwdot4dscqss2 * dscqss_dsc[94] +
           dwdot4dscqss3 * dscqss_dsc[129] + dwdot4dscqss4 * dscqss_dsc[164] +
           dwdot4dscqss5 * dscqss_dsc[199] + dwdot4dscqss6 * dscqss_dsc[234] +
           dwdot4dscqss7 * dscqss_dsc[269] + dwdot4dscqss9 * dscqss_dsc[339] +
           dwdot4dscqss11 * dscqss_dsc[409] + dwdot4dscqss12 * dscqss_dsc[444] +
           dwdot4dscqss14 * dscqss_dsc[514] + dwdot4dscqss13 * dscqss_dsc[479] +
           dwdot4dscqss15 * dscqss_dsc[549] + dwdot4dscqss8 * dscqss_dsc[304] +
           dwdot4dscqss10 * dscqss_dsc[374];
  J[904] = dwdot4dsc25 + dwdot4dscqss0 * dscqss_dsc[25] +
           dwdot4dscqss16 * dscqss_dsc[585] + dwdot4dscqss1 * dscqss_dsc[60] +
           dwdot4dscqss17 * dscqss_dsc[620] + dwdot4dscqss2 * dscqss_dsc[95] +
           dwdot4dscqss3 * dscqss_dsc[130] + dwdot4dscqss4 * dscqss_dsc[165] +
           dwdot4dscqss5 * dscqss_dsc[200] + dwdot4dscqss6 * dscqss_dsc[235] +
           dwdot4dscqss7 * dscqss_dsc[270] + dwdot4dscqss9 * dscqss_dsc[340] +
           dwdot4dscqss11 * dscqss_dsc[410] + dwdot4dscqss12 * dscqss_dsc[445] +
           dwdot4dscqss14 * dscqss_dsc[515] + dwdot4dscqss13 * dscqss_dsc[480] +
           dwdot4dscqss15 * dscqss_dsc[550] + dwdot4dscqss8 * dscqss_dsc[305] +
           dwdot4dscqss10 * dscqss_dsc[375];
  J[940] = dwdot4dsc26 + dwdot4dscqss0 * dscqss_dsc[26] +
           dwdot4dscqss16 * dscqss_dsc[586] + dwdot4dscqss1 * dscqss_dsc[61] +
           dwdot4dscqss17 * dscqss_dsc[621] + dwdot4dscqss2 * dscqss_dsc[96] +
           dwdot4dscqss3 * dscqss_dsc[131] + dwdot4dscqss4 * dscqss_dsc[166] +
           dwdot4dscqss5 * dscqss_dsc[201] + dwdot4dscqss6 * dscqss_dsc[236] +
           dwdot4dscqss7 * dscqss_dsc[271] + dwdot4dscqss9 * dscqss_dsc[341] +
           dwdot4dscqss11 * dscqss_dsc[411] + dwdot4dscqss12 * dscqss_dsc[446] +
           dwdot4dscqss14 * dscqss_dsc[516] + dwdot4dscqss13 * dscqss_dsc[481] +
           dwdot4dscqss15 * dscqss_dsc[551] + dwdot4dscqss8 * dscqss_dsc[306] +
           dwdot4dscqss10 * dscqss_dsc[376];
  J[976] = dwdot4dsc27 + dwdot4dscqss0 * dscqss_dsc[27] +
           dwdot4dscqss16 * dscqss_dsc[587] + dwdot4dscqss1 * dscqss_dsc[62] +
           dwdot4dscqss17 * dscqss_dsc[622] + dwdot4dscqss2 * dscqss_dsc[97] +
           dwdot4dscqss3 * dscqss_dsc[132] + dwdot4dscqss4 * dscqss_dsc[167] +
           dwdot4dscqss5 * dscqss_dsc[202] + dwdot4dscqss6 * dscqss_dsc[237] +
           dwdot4dscqss7 * dscqss_dsc[272] + dwdot4dscqss9 * dscqss_dsc[342] +
           dwdot4dscqss11 * dscqss_dsc[412] + dwdot4dscqss12 * dscqss_dsc[447] +
           dwdot4dscqss14 * dscqss_dsc[517] + dwdot4dscqss13 * dscqss_dsc[482] +
           dwdot4dscqss15 * dscqss_dsc[552] + dwdot4dscqss8 * dscqss_dsc[307] +
           dwdot4dscqss10 * dscqss_dsc[377];
  J[1012] =
    dwdot4dsc28 + dwdot4dscqss0 * dscqss_dsc[28] +
    dwdot4dscqss16 * dscqss_dsc[588] + dwdot4dscqss1 * dscqss_dsc[63] +
    dwdot4dscqss17 * dscqss_dsc[623] + dwdot4dscqss2 * dscqss_dsc[98] +
    dwdot4dscqss3 * dscqss_dsc[133] + dwdot4dscqss4 * dscqss_dsc[168] +
    dwdot4dscqss5 * dscqss_dsc[203] + dwdot4dscqss6 * dscqss_dsc[238] +
    dwdot4dscqss7 * dscqss_dsc[273] + dwdot4dscqss9 * dscqss_dsc[343] +
    dwdot4dscqss11 * dscqss_dsc[413] + dwdot4dscqss12 * dscqss_dsc[448] +
    dwdot4dscqss14 * dscqss_dsc[518] + dwdot4dscqss13 * dscqss_dsc[483] +
    dwdot4dscqss15 * dscqss_dsc[553] + dwdot4dscqss8 * dscqss_dsc[308] +
    dwdot4dscqss10 * dscqss_dsc[378];
  J[1048] =
    dwdot4dsc29 + dwdot4dscqss0 * dscqss_dsc[29] +
    dwdot4dscqss16 * dscqss_dsc[589] + dwdot4dscqss1 * dscqss_dsc[64] +
    dwdot4dscqss17 * dscqss_dsc[624] + dwdot4dscqss2 * dscqss_dsc[99] +
    dwdot4dscqss3 * dscqss_dsc[134] + dwdot4dscqss4 * dscqss_dsc[169] +
    dwdot4dscqss5 * dscqss_dsc[204] + dwdot4dscqss6 * dscqss_dsc[239] +
    dwdot4dscqss7 * dscqss_dsc[274] + dwdot4dscqss9 * dscqss_dsc[344] +
    dwdot4dscqss11 * dscqss_dsc[414] + dwdot4dscqss12 * dscqss_dsc[449] +
    dwdot4dscqss14 * dscqss_dsc[519] + dwdot4dscqss13 * dscqss_dsc[484] +
    dwdot4dscqss15 * dscqss_dsc[554] + dwdot4dscqss8 * dscqss_dsc[309] +
    dwdot4dscqss10 * dscqss_dsc[379];
  J[1084] =
    dwdot4dsc30 + dwdot4dscqss0 * dscqss_dsc[30] +
    dwdot4dscqss16 * dscqss_dsc[590] + dwdot4dscqss1 * dscqss_dsc[65] +
    dwdot4dscqss17 * dscqss_dsc[625] + dwdot4dscqss2 * dscqss_dsc[100] +
    dwdot4dscqss3 * dscqss_dsc[135] + dwdot4dscqss4 * dscqss_dsc[170] +
    dwdot4dscqss5 * dscqss_dsc[205] + dwdot4dscqss6 * dscqss_dsc[240] +
    dwdot4dscqss7 * dscqss_dsc[275] + dwdot4dscqss9 * dscqss_dsc[345] +
    dwdot4dscqss11 * dscqss_dsc[415] + dwdot4dscqss12 * dscqss_dsc[450] +
    dwdot4dscqss14 * dscqss_dsc[520] + dwdot4dscqss13 * dscqss_dsc[485] +
    dwdot4dscqss15 * dscqss_dsc[555] + dwdot4dscqss8 * dscqss_dsc[310] +
    dwdot4dscqss10 * dscqss_dsc[380];
  J[1120] =
    dwdot4dsc31 + dwdot4dscqss0 * dscqss_dsc[31] +
    dwdot4dscqss16 * dscqss_dsc[591] + dwdot4dscqss1 * dscqss_dsc[66] +
    dwdot4dscqss17 * dscqss_dsc[626] + dwdot4dscqss2 * dscqss_dsc[101] +
    dwdot4dscqss3 * dscqss_dsc[136] + dwdot4dscqss4 * dscqss_dsc[171] +
    dwdot4dscqss5 * dscqss_dsc[206] + dwdot4dscqss6 * dscqss_dsc[241] +
    dwdot4dscqss7 * dscqss_dsc[276] + dwdot4dscqss9 * dscqss_dsc[346] +
    dwdot4dscqss11 * dscqss_dsc[416] + dwdot4dscqss12 * dscqss_dsc[451] +
    dwdot4dscqss14 * dscqss_dsc[521] + dwdot4dscqss13 * dscqss_dsc[486] +
    dwdot4dscqss15 * dscqss_dsc[556] + dwdot4dscqss8 * dscqss_dsc[311] +
    dwdot4dscqss10 * dscqss_dsc[381];
  J[1156] =
    dwdot4dsc32 + dwdot4dscqss0 * dscqss_dsc[32] +
    dwdot4dscqss16 * dscqss_dsc[592] + dwdot4dscqss1 * dscqss_dsc[67] +
    dwdot4dscqss17 * dscqss_dsc[627] + dwdot4dscqss2 * dscqss_dsc[102] +
    dwdot4dscqss3 * dscqss_dsc[137] + dwdot4dscqss4 * dscqss_dsc[172] +
    dwdot4dscqss5 * dscqss_dsc[207] + dwdot4dscqss6 * dscqss_dsc[242] +
    dwdot4dscqss7 * dscqss_dsc[277] + dwdot4dscqss9 * dscqss_dsc[347] +
    dwdot4dscqss11 * dscqss_dsc[417] + dwdot4dscqss12 * dscqss_dsc[452] +
    dwdot4dscqss14 * dscqss_dsc[522] + dwdot4dscqss13 * dscqss_dsc[487] +
    dwdot4dscqss15 * dscqss_dsc[557] + dwdot4dscqss8 * dscqss_dsc[312] +
    dwdot4dscqss10 * dscqss_dsc[382];
  J[1192] =
    dwdot4dsc33 + dwdot4dscqss0 * dscqss_dsc[33] +
    dwdot4dscqss16 * dscqss_dsc[593] + dwdot4dscqss1 * dscqss_dsc[68] +
    dwdot4dscqss17 * dscqss_dsc[628] + dwdot4dscqss2 * dscqss_dsc[103] +
    dwdot4dscqss3 * dscqss_dsc[138] + dwdot4dscqss4 * dscqss_dsc[173] +
    dwdot4dscqss5 * dscqss_dsc[208] + dwdot4dscqss6 * dscqss_dsc[243] +
    dwdot4dscqss7 * dscqss_dsc[278] + dwdot4dscqss9 * dscqss_dsc[348] +
    dwdot4dscqss11 * dscqss_dsc[418] + dwdot4dscqss12 * dscqss_dsc[453] +
    dwdot4dscqss14 * dscqss_dsc[523] + dwdot4dscqss13 * dscqss_dsc[488] +
    dwdot4dscqss15 * dscqss_dsc[558] + dwdot4dscqss8 * dscqss_dsc[313] +
    dwdot4dscqss10 * dscqss_dsc[383];
  J[1228] =
    dwdot4dsc34 + dwdot4dscqss0 * dscqss_dsc[34] +
    dwdot4dscqss16 * dscqss_dsc[594] + dwdot4dscqss1 * dscqss_dsc[69] +
    dwdot4dscqss17 * dscqss_dsc[629] + dwdot4dscqss2 * dscqss_dsc[104] +
    dwdot4dscqss3 * dscqss_dsc[139] + dwdot4dscqss4 * dscqss_dsc[174] +
    dwdot4dscqss5 * dscqss_dsc[209] + dwdot4dscqss6 * dscqss_dsc[244] +
    dwdot4dscqss7 * dscqss_dsc[279] + dwdot4dscqss9 * dscqss_dsc[349] +
    dwdot4dscqss11 * dscqss_dsc[419] + dwdot4dscqss12 * dscqss_dsc[454] +
    dwdot4dscqss14 * dscqss_dsc[524] + dwdot4dscqss13 * dscqss_dsc[489] +
    dwdot4dscqss15 * dscqss_dsc[559] + dwdot4dscqss8 * dscqss_dsc[314] +
    dwdot4dscqss10 * dscqss_dsc[384];
  J[5] = dwdot5dsc0 + dwdot5dscqss0 * dscqss_dsc[0] +
         dwdot5dscqss16 * dscqss_dsc[560] + dwdot5dscqss1 * dscqss_dsc[35] +
         dwdot5dscqss17 * dscqss_dsc[595] + dwdot5dscqss2 * dscqss_dsc[70] +
         dwdot5dscqss3 * dscqss_dsc[105] + dwdot5dscqss4 * dscqss_dsc[140] +
         dwdot5dscqss5 * dscqss_dsc[175] + dwdot5dscqss6 * dscqss_dsc[210] +
         dwdot5dscqss7 * dscqss_dsc[245] + dwdot5dscqss9 * dscqss_dsc[315] +
         dwdot5dscqss11 * dscqss_dsc[385] + dwdot5dscqss12 * dscqss_dsc[420] +
         dwdot5dscqss14 * dscqss_dsc[490] + dwdot5dscqss13 * dscqss_dsc[455] +
         dwdot5dscqss15 * dscqss_dsc[525] + dwdot5dscqss8 * dscqss_dsc[280] +
         dwdot5dscqss10 * dscqss_dsc[350];
  J[41] = dwdot5dsc1 + dwdot5dscqss0 * dscqss_dsc[1] +
          dwdot5dscqss16 * dscqss_dsc[561] + dwdot5dscqss1 * dscqss_dsc[36] +
          dwdot5dscqss17 * dscqss_dsc[596] + dwdot5dscqss2 * dscqss_dsc[71] +
          dwdot5dscqss3 * dscqss_dsc[106] + dwdot5dscqss4 * dscqss_dsc[141] +
          dwdot5dscqss5 * dscqss_dsc[176] + dwdot5dscqss6 * dscqss_dsc[211] +
          dwdot5dscqss7 * dscqss_dsc[246] + dwdot5dscqss9 * dscqss_dsc[316] +
          dwdot5dscqss11 * dscqss_dsc[386] + dwdot5dscqss12 * dscqss_dsc[421] +
          dwdot5dscqss14 * dscqss_dsc[491] + dwdot5dscqss13 * dscqss_dsc[456] +
          dwdot5dscqss15 * dscqss_dsc[526] + dwdot5dscqss8 * dscqss_dsc[281] +
          dwdot5dscqss10 * dscqss_dsc[351];
  J[77] = dwdot5dsc2 + dwdot5dscqss0 * dscqss_dsc[2] +
          dwdot5dscqss16 * dscqss_dsc[562] + dwdot5dscqss1 * dscqss_dsc[37] +
          dwdot5dscqss17 * dscqss_dsc[597] + dwdot5dscqss2 * dscqss_dsc[72] +
          dwdot5dscqss3 * dscqss_dsc[107] + dwdot5dscqss4 * dscqss_dsc[142] +
          dwdot5dscqss5 * dscqss_dsc[177] + dwdot5dscqss6 * dscqss_dsc[212] +
          dwdot5dscqss7 * dscqss_dsc[247] + dwdot5dscqss9 * dscqss_dsc[317] +
          dwdot5dscqss11 * dscqss_dsc[387] + dwdot5dscqss12 * dscqss_dsc[422] +
          dwdot5dscqss14 * dscqss_dsc[492] + dwdot5dscqss13 * dscqss_dsc[457] +
          dwdot5dscqss15 * dscqss_dsc[527] + dwdot5dscqss8 * dscqss_dsc[282] +
          dwdot5dscqss10 * dscqss_dsc[352];
  J[113] = dwdot5dsc3 + dwdot5dscqss0 * dscqss_dsc[3] +
           dwdot5dscqss16 * dscqss_dsc[563] + dwdot5dscqss1 * dscqss_dsc[38] +
           dwdot5dscqss17 * dscqss_dsc[598] + dwdot5dscqss2 * dscqss_dsc[73] +
           dwdot5dscqss3 * dscqss_dsc[108] + dwdot5dscqss4 * dscqss_dsc[143] +
           dwdot5dscqss5 * dscqss_dsc[178] + dwdot5dscqss6 * dscqss_dsc[213] +
           dwdot5dscqss7 * dscqss_dsc[248] + dwdot5dscqss9 * dscqss_dsc[318] +
           dwdot5dscqss11 * dscqss_dsc[388] + dwdot5dscqss12 * dscqss_dsc[423] +
           dwdot5dscqss14 * dscqss_dsc[493] + dwdot5dscqss13 * dscqss_dsc[458] +
           dwdot5dscqss15 * dscqss_dsc[528] + dwdot5dscqss8 * dscqss_dsc[283] +
           dwdot5dscqss10 * dscqss_dsc[353];
  J[149] = dwdot5dsc4 + dwdot5dscqss0 * dscqss_dsc[4] +
           dwdot5dscqss16 * dscqss_dsc[564] + dwdot5dscqss1 * dscqss_dsc[39] +
           dwdot5dscqss17 * dscqss_dsc[599] + dwdot5dscqss2 * dscqss_dsc[74] +
           dwdot5dscqss3 * dscqss_dsc[109] + dwdot5dscqss4 * dscqss_dsc[144] +
           dwdot5dscqss5 * dscqss_dsc[179] + dwdot5dscqss6 * dscqss_dsc[214] +
           dwdot5dscqss7 * dscqss_dsc[249] + dwdot5dscqss9 * dscqss_dsc[319] +
           dwdot5dscqss11 * dscqss_dsc[389] + dwdot5dscqss12 * dscqss_dsc[424] +
           dwdot5dscqss14 * dscqss_dsc[494] + dwdot5dscqss13 * dscqss_dsc[459] +
           dwdot5dscqss15 * dscqss_dsc[529] + dwdot5dscqss8 * dscqss_dsc[284] +
           dwdot5dscqss10 * dscqss_dsc[354];
  J[185] = dwdot5dsc5 + dwdot5dscqss0 * dscqss_dsc[5] +
           dwdot5dscqss16 * dscqss_dsc[565] + dwdot5dscqss1 * dscqss_dsc[40] +
           dwdot5dscqss17 * dscqss_dsc[600] + dwdot5dscqss2 * dscqss_dsc[75] +
           dwdot5dscqss3 * dscqss_dsc[110] + dwdot5dscqss4 * dscqss_dsc[145] +
           dwdot5dscqss5 * dscqss_dsc[180] + dwdot5dscqss6 * dscqss_dsc[215] +
           dwdot5dscqss7 * dscqss_dsc[250] + dwdot5dscqss9 * dscqss_dsc[320] +
           dwdot5dscqss11 * dscqss_dsc[390] + dwdot5dscqss12 * dscqss_dsc[425] +
           dwdot5dscqss14 * dscqss_dsc[495] + dwdot5dscqss13 * dscqss_dsc[460] +
           dwdot5dscqss15 * dscqss_dsc[530] + dwdot5dscqss8 * dscqss_dsc[285] +
           dwdot5dscqss10 * dscqss_dsc[355];
  J[221] = dwdot5dsc6 + dwdot5dscqss0 * dscqss_dsc[6] +
           dwdot5dscqss16 * dscqss_dsc[566] + dwdot5dscqss1 * dscqss_dsc[41] +
           dwdot5dscqss17 * dscqss_dsc[601] + dwdot5dscqss2 * dscqss_dsc[76] +
           dwdot5dscqss3 * dscqss_dsc[111] + dwdot5dscqss4 * dscqss_dsc[146] +
           dwdot5dscqss5 * dscqss_dsc[181] + dwdot5dscqss6 * dscqss_dsc[216] +
           dwdot5dscqss7 * dscqss_dsc[251] + dwdot5dscqss9 * dscqss_dsc[321] +
           dwdot5dscqss11 * dscqss_dsc[391] + dwdot5dscqss12 * dscqss_dsc[426] +
           dwdot5dscqss14 * dscqss_dsc[496] + dwdot5dscqss13 * dscqss_dsc[461] +
           dwdot5dscqss15 * dscqss_dsc[531] + dwdot5dscqss8 * dscqss_dsc[286] +
           dwdot5dscqss10 * dscqss_dsc[356];
  J[257] = dwdot5dsc7 + dwdot5dscqss0 * dscqss_dsc[7] +
           dwdot5dscqss16 * dscqss_dsc[567] + dwdot5dscqss1 * dscqss_dsc[42] +
           dwdot5dscqss17 * dscqss_dsc[602] + dwdot5dscqss2 * dscqss_dsc[77] +
           dwdot5dscqss3 * dscqss_dsc[112] + dwdot5dscqss4 * dscqss_dsc[147] +
           dwdot5dscqss5 * dscqss_dsc[182] + dwdot5dscqss6 * dscqss_dsc[217] +
           dwdot5dscqss7 * dscqss_dsc[252] + dwdot5dscqss9 * dscqss_dsc[322] +
           dwdot5dscqss11 * dscqss_dsc[392] + dwdot5dscqss12 * dscqss_dsc[427] +
           dwdot5dscqss14 * dscqss_dsc[497] + dwdot5dscqss13 * dscqss_dsc[462] +
           dwdot5dscqss15 * dscqss_dsc[532] + dwdot5dscqss8 * dscqss_dsc[287] +
           dwdot5dscqss10 * dscqss_dsc[357];
  J[293] = dwdot5dsc8 + dwdot5dscqss0 * dscqss_dsc[8] +
           dwdot5dscqss16 * dscqss_dsc[568] + dwdot5dscqss1 * dscqss_dsc[43] +
           dwdot5dscqss17 * dscqss_dsc[603] + dwdot5dscqss2 * dscqss_dsc[78] +
           dwdot5dscqss3 * dscqss_dsc[113] + dwdot5dscqss4 * dscqss_dsc[148] +
           dwdot5dscqss5 * dscqss_dsc[183] + dwdot5dscqss6 * dscqss_dsc[218] +
           dwdot5dscqss7 * dscqss_dsc[253] + dwdot5dscqss9 * dscqss_dsc[323] +
           dwdot5dscqss11 * dscqss_dsc[393] + dwdot5dscqss12 * dscqss_dsc[428] +
           dwdot5dscqss14 * dscqss_dsc[498] + dwdot5dscqss13 * dscqss_dsc[463] +
           dwdot5dscqss15 * dscqss_dsc[533] + dwdot5dscqss8 * dscqss_dsc[288] +
           dwdot5dscqss10 * dscqss_dsc[358];
  J[329] = dwdot5dsc9 + dwdot5dscqss0 * dscqss_dsc[9] +
           dwdot5dscqss16 * dscqss_dsc[569] + dwdot5dscqss1 * dscqss_dsc[44] +
           dwdot5dscqss17 * dscqss_dsc[604] + dwdot5dscqss2 * dscqss_dsc[79] +
           dwdot5dscqss3 * dscqss_dsc[114] + dwdot5dscqss4 * dscqss_dsc[149] +
           dwdot5dscqss5 * dscqss_dsc[184] + dwdot5dscqss6 * dscqss_dsc[219] +
           dwdot5dscqss7 * dscqss_dsc[254] + dwdot5dscqss9 * dscqss_dsc[324] +
           dwdot5dscqss11 * dscqss_dsc[394] + dwdot5dscqss12 * dscqss_dsc[429] +
           dwdot5dscqss14 * dscqss_dsc[499] + dwdot5dscqss13 * dscqss_dsc[464] +
           dwdot5dscqss15 * dscqss_dsc[534] + dwdot5dscqss8 * dscqss_dsc[289] +
           dwdot5dscqss10 * dscqss_dsc[359];
  J[365] = dwdot5dsc10 + dwdot5dscqss0 * dscqss_dsc[10] +
           dwdot5dscqss16 * dscqss_dsc[570] + dwdot5dscqss1 * dscqss_dsc[45] +
           dwdot5dscqss17 * dscqss_dsc[605] + dwdot5dscqss2 * dscqss_dsc[80] +
           dwdot5dscqss3 * dscqss_dsc[115] + dwdot5dscqss4 * dscqss_dsc[150] +
           dwdot5dscqss5 * dscqss_dsc[185] + dwdot5dscqss6 * dscqss_dsc[220] +
           dwdot5dscqss7 * dscqss_dsc[255] + dwdot5dscqss9 * dscqss_dsc[325] +
           dwdot5dscqss11 * dscqss_dsc[395] + dwdot5dscqss12 * dscqss_dsc[430] +
           dwdot5dscqss14 * dscqss_dsc[500] + dwdot5dscqss13 * dscqss_dsc[465] +
           dwdot5dscqss15 * dscqss_dsc[535] + dwdot5dscqss8 * dscqss_dsc[290] +
           dwdot5dscqss10 * dscqss_dsc[360];
  J[401] = dwdot5dsc11 + dwdot5dscqss0 * dscqss_dsc[11] +
           dwdot5dscqss16 * dscqss_dsc[571] + dwdot5dscqss1 * dscqss_dsc[46] +
           dwdot5dscqss17 * dscqss_dsc[606] + dwdot5dscqss2 * dscqss_dsc[81] +
           dwdot5dscqss3 * dscqss_dsc[116] + dwdot5dscqss4 * dscqss_dsc[151] +
           dwdot5dscqss5 * dscqss_dsc[186] + dwdot5dscqss6 * dscqss_dsc[221] +
           dwdot5dscqss7 * dscqss_dsc[256] + dwdot5dscqss9 * dscqss_dsc[326] +
           dwdot5dscqss11 * dscqss_dsc[396] + dwdot5dscqss12 * dscqss_dsc[431] +
           dwdot5dscqss14 * dscqss_dsc[501] + dwdot5dscqss13 * dscqss_dsc[466] +
           dwdot5dscqss15 * dscqss_dsc[536] + dwdot5dscqss8 * dscqss_dsc[291] +
           dwdot5dscqss10 * dscqss_dsc[361];
  J[437] = dwdot5dsc12 + dwdot5dscqss0 * dscqss_dsc[12] +
           dwdot5dscqss16 * dscqss_dsc[572] + dwdot5dscqss1 * dscqss_dsc[47] +
           dwdot5dscqss17 * dscqss_dsc[607] + dwdot5dscqss2 * dscqss_dsc[82] +
           dwdot5dscqss3 * dscqss_dsc[117] + dwdot5dscqss4 * dscqss_dsc[152] +
           dwdot5dscqss5 * dscqss_dsc[187] + dwdot5dscqss6 * dscqss_dsc[222] +
           dwdot5dscqss7 * dscqss_dsc[257] + dwdot5dscqss9 * dscqss_dsc[327] +
           dwdot5dscqss11 * dscqss_dsc[397] + dwdot5dscqss12 * dscqss_dsc[432] +
           dwdot5dscqss14 * dscqss_dsc[502] + dwdot5dscqss13 * dscqss_dsc[467] +
           dwdot5dscqss15 * dscqss_dsc[537] + dwdot5dscqss8 * dscqss_dsc[292] +
           dwdot5dscqss10 * dscqss_dsc[362];
  J[473] = dwdot5dsc13 + dwdot5dscqss0 * dscqss_dsc[13] +
           dwdot5dscqss16 * dscqss_dsc[573] + dwdot5dscqss1 * dscqss_dsc[48] +
           dwdot5dscqss17 * dscqss_dsc[608] + dwdot5dscqss2 * dscqss_dsc[83] +
           dwdot5dscqss3 * dscqss_dsc[118] + dwdot5dscqss4 * dscqss_dsc[153] +
           dwdot5dscqss5 * dscqss_dsc[188] + dwdot5dscqss6 * dscqss_dsc[223] +
           dwdot5dscqss7 * dscqss_dsc[258] + dwdot5dscqss9 * dscqss_dsc[328] +
           dwdot5dscqss11 * dscqss_dsc[398] + dwdot5dscqss12 * dscqss_dsc[433] +
           dwdot5dscqss14 * dscqss_dsc[503] + dwdot5dscqss13 * dscqss_dsc[468] +
           dwdot5dscqss15 * dscqss_dsc[538] + dwdot5dscqss8 * dscqss_dsc[293] +
           dwdot5dscqss10 * dscqss_dsc[363];
  J[509] = dwdot5dsc14 + dwdot5dscqss0 * dscqss_dsc[14] +
           dwdot5dscqss16 * dscqss_dsc[574] + dwdot5dscqss1 * dscqss_dsc[49] +
           dwdot5dscqss17 * dscqss_dsc[609] + dwdot5dscqss2 * dscqss_dsc[84] +
           dwdot5dscqss3 * dscqss_dsc[119] + dwdot5dscqss4 * dscqss_dsc[154] +
           dwdot5dscqss5 * dscqss_dsc[189] + dwdot5dscqss6 * dscqss_dsc[224] +
           dwdot5dscqss7 * dscqss_dsc[259] + dwdot5dscqss9 * dscqss_dsc[329] +
           dwdot5dscqss11 * dscqss_dsc[399] + dwdot5dscqss12 * dscqss_dsc[434] +
           dwdot5dscqss14 * dscqss_dsc[504] + dwdot5dscqss13 * dscqss_dsc[469] +
           dwdot5dscqss15 * dscqss_dsc[539] + dwdot5dscqss8 * dscqss_dsc[294] +
           dwdot5dscqss10 * dscqss_dsc[364];
  J[545] = dwdot5dsc15 + dwdot5dscqss0 * dscqss_dsc[15] +
           dwdot5dscqss16 * dscqss_dsc[575] + dwdot5dscqss1 * dscqss_dsc[50] +
           dwdot5dscqss17 * dscqss_dsc[610] + dwdot5dscqss2 * dscqss_dsc[85] +
           dwdot5dscqss3 * dscqss_dsc[120] + dwdot5dscqss4 * dscqss_dsc[155] +
           dwdot5dscqss5 * dscqss_dsc[190] + dwdot5dscqss6 * dscqss_dsc[225] +
           dwdot5dscqss7 * dscqss_dsc[260] + dwdot5dscqss9 * dscqss_dsc[330] +
           dwdot5dscqss11 * dscqss_dsc[400] + dwdot5dscqss12 * dscqss_dsc[435] +
           dwdot5dscqss14 * dscqss_dsc[505] + dwdot5dscqss13 * dscqss_dsc[470] +
           dwdot5dscqss15 * dscqss_dsc[540] + dwdot5dscqss8 * dscqss_dsc[295] +
           dwdot5dscqss10 * dscqss_dsc[365];
  J[581] = dwdot5dsc16 + dwdot5dscqss0 * dscqss_dsc[16] +
           dwdot5dscqss16 * dscqss_dsc[576] + dwdot5dscqss1 * dscqss_dsc[51] +
           dwdot5dscqss17 * dscqss_dsc[611] + dwdot5dscqss2 * dscqss_dsc[86] +
           dwdot5dscqss3 * dscqss_dsc[121] + dwdot5dscqss4 * dscqss_dsc[156] +
           dwdot5dscqss5 * dscqss_dsc[191] + dwdot5dscqss6 * dscqss_dsc[226] +
           dwdot5dscqss7 * dscqss_dsc[261] + dwdot5dscqss9 * dscqss_dsc[331] +
           dwdot5dscqss11 * dscqss_dsc[401] + dwdot5dscqss12 * dscqss_dsc[436] +
           dwdot5dscqss14 * dscqss_dsc[506] + dwdot5dscqss13 * dscqss_dsc[471] +
           dwdot5dscqss15 * dscqss_dsc[541] + dwdot5dscqss8 * dscqss_dsc[296] +
           dwdot5dscqss10 * dscqss_dsc[366];
  J[617] = dwdot5dsc17 + dwdot5dscqss0 * dscqss_dsc[17] +
           dwdot5dscqss16 * dscqss_dsc[577] + dwdot5dscqss1 * dscqss_dsc[52] +
           dwdot5dscqss17 * dscqss_dsc[612] + dwdot5dscqss2 * dscqss_dsc[87] +
           dwdot5dscqss3 * dscqss_dsc[122] + dwdot5dscqss4 * dscqss_dsc[157] +
           dwdot5dscqss5 * dscqss_dsc[192] + dwdot5dscqss6 * dscqss_dsc[227] +
           dwdot5dscqss7 * dscqss_dsc[262] + dwdot5dscqss9 * dscqss_dsc[332] +
           dwdot5dscqss11 * dscqss_dsc[402] + dwdot5dscqss12 * dscqss_dsc[437] +
           dwdot5dscqss14 * dscqss_dsc[507] + dwdot5dscqss13 * dscqss_dsc[472] +
           dwdot5dscqss15 * dscqss_dsc[542] + dwdot5dscqss8 * dscqss_dsc[297] +
           dwdot5dscqss10 * dscqss_dsc[367];
  J[653] = dwdot5dsc18 + dwdot5dscqss0 * dscqss_dsc[18] +
           dwdot5dscqss16 * dscqss_dsc[578] + dwdot5dscqss1 * dscqss_dsc[53] +
           dwdot5dscqss17 * dscqss_dsc[613] + dwdot5dscqss2 * dscqss_dsc[88] +
           dwdot5dscqss3 * dscqss_dsc[123] + dwdot5dscqss4 * dscqss_dsc[158] +
           dwdot5dscqss5 * dscqss_dsc[193] + dwdot5dscqss6 * dscqss_dsc[228] +
           dwdot5dscqss7 * dscqss_dsc[263] + dwdot5dscqss9 * dscqss_dsc[333] +
           dwdot5dscqss11 * dscqss_dsc[403] + dwdot5dscqss12 * dscqss_dsc[438] +
           dwdot5dscqss14 * dscqss_dsc[508] + dwdot5dscqss13 * dscqss_dsc[473] +
           dwdot5dscqss15 * dscqss_dsc[543] + dwdot5dscqss8 * dscqss_dsc[298] +
           dwdot5dscqss10 * dscqss_dsc[368];
  J[689] = dwdot5dsc19 + dwdot5dscqss0 * dscqss_dsc[19] +
           dwdot5dscqss16 * dscqss_dsc[579] + dwdot5dscqss1 * dscqss_dsc[54] +
           dwdot5dscqss17 * dscqss_dsc[614] + dwdot5dscqss2 * dscqss_dsc[89] +
           dwdot5dscqss3 * dscqss_dsc[124] + dwdot5dscqss4 * dscqss_dsc[159] +
           dwdot5dscqss5 * dscqss_dsc[194] + dwdot5dscqss6 * dscqss_dsc[229] +
           dwdot5dscqss7 * dscqss_dsc[264] + dwdot5dscqss9 * dscqss_dsc[334] +
           dwdot5dscqss11 * dscqss_dsc[404] + dwdot5dscqss12 * dscqss_dsc[439] +
           dwdot5dscqss14 * dscqss_dsc[509] + dwdot5dscqss13 * dscqss_dsc[474] +
           dwdot5dscqss15 * dscqss_dsc[544] + dwdot5dscqss8 * dscqss_dsc[299] +
           dwdot5dscqss10 * dscqss_dsc[369];
  J[725] = dwdot5dsc20 + dwdot5dscqss0 * dscqss_dsc[20] +
           dwdot5dscqss16 * dscqss_dsc[580] + dwdot5dscqss1 * dscqss_dsc[55] +
           dwdot5dscqss17 * dscqss_dsc[615] + dwdot5dscqss2 * dscqss_dsc[90] +
           dwdot5dscqss3 * dscqss_dsc[125] + dwdot5dscqss4 * dscqss_dsc[160] +
           dwdot5dscqss5 * dscqss_dsc[195] + dwdot5dscqss6 * dscqss_dsc[230] +
           dwdot5dscqss7 * dscqss_dsc[265] + dwdot5dscqss9 * dscqss_dsc[335] +
           dwdot5dscqss11 * dscqss_dsc[405] + dwdot5dscqss12 * dscqss_dsc[440] +
           dwdot5dscqss14 * dscqss_dsc[510] + dwdot5dscqss13 * dscqss_dsc[475] +
           dwdot5dscqss15 * dscqss_dsc[545] + dwdot5dscqss8 * dscqss_dsc[300] +
           dwdot5dscqss10 * dscqss_dsc[370];
  J[761] = dwdot5dsc21 + dwdot5dscqss0 * dscqss_dsc[21] +
           dwdot5dscqss16 * dscqss_dsc[581] + dwdot5dscqss1 * dscqss_dsc[56] +
           dwdot5dscqss17 * dscqss_dsc[616] + dwdot5dscqss2 * dscqss_dsc[91] +
           dwdot5dscqss3 * dscqss_dsc[126] + dwdot5dscqss4 * dscqss_dsc[161] +
           dwdot5dscqss5 * dscqss_dsc[196] + dwdot5dscqss6 * dscqss_dsc[231] +
           dwdot5dscqss7 * dscqss_dsc[266] + dwdot5dscqss9 * dscqss_dsc[336] +
           dwdot5dscqss11 * dscqss_dsc[406] + dwdot5dscqss12 * dscqss_dsc[441] +
           dwdot5dscqss14 * dscqss_dsc[511] + dwdot5dscqss13 * dscqss_dsc[476] +
           dwdot5dscqss15 * dscqss_dsc[546] + dwdot5dscqss8 * dscqss_dsc[301] +
           dwdot5dscqss10 * dscqss_dsc[371];
  J[797] = dwdot5dsc22 + dwdot5dscqss0 * dscqss_dsc[22] +
           dwdot5dscqss16 * dscqss_dsc[582] + dwdot5dscqss1 * dscqss_dsc[57] +
           dwdot5dscqss17 * dscqss_dsc[617] + dwdot5dscqss2 * dscqss_dsc[92] +
           dwdot5dscqss3 * dscqss_dsc[127] + dwdot5dscqss4 * dscqss_dsc[162] +
           dwdot5dscqss5 * dscqss_dsc[197] + dwdot5dscqss6 * dscqss_dsc[232] +
           dwdot5dscqss7 * dscqss_dsc[267] + dwdot5dscqss9 * dscqss_dsc[337] +
           dwdot5dscqss11 * dscqss_dsc[407] + dwdot5dscqss12 * dscqss_dsc[442] +
           dwdot5dscqss14 * dscqss_dsc[512] + dwdot5dscqss13 * dscqss_dsc[477] +
           dwdot5dscqss15 * dscqss_dsc[547] + dwdot5dscqss8 * dscqss_dsc[302] +
           dwdot5dscqss10 * dscqss_dsc[372];
  J[833] = dwdot5dsc23 + dwdot5dscqss0 * dscqss_dsc[23] +
           dwdot5dscqss16 * dscqss_dsc[583] + dwdot5dscqss1 * dscqss_dsc[58] +
           dwdot5dscqss17 * dscqss_dsc[618] + dwdot5dscqss2 * dscqss_dsc[93] +
           dwdot5dscqss3 * dscqss_dsc[128] + dwdot5dscqss4 * dscqss_dsc[163] +
           dwdot5dscqss5 * dscqss_dsc[198] + dwdot5dscqss6 * dscqss_dsc[233] +
           dwdot5dscqss7 * dscqss_dsc[268] + dwdot5dscqss9 * dscqss_dsc[338] +
           dwdot5dscqss11 * dscqss_dsc[408] + dwdot5dscqss12 * dscqss_dsc[443] +
           dwdot5dscqss14 * dscqss_dsc[513] + dwdot5dscqss13 * dscqss_dsc[478] +
           dwdot5dscqss15 * dscqss_dsc[548] + dwdot5dscqss8 * dscqss_dsc[303] +
           dwdot5dscqss10 * dscqss_dsc[373];
  J[869] = dwdot5dsc24 + dwdot5dscqss0 * dscqss_dsc[24] +
           dwdot5dscqss16 * dscqss_dsc[584] + dwdot5dscqss1 * dscqss_dsc[59] +
           dwdot5dscqss17 * dscqss_dsc[619] + dwdot5dscqss2 * dscqss_dsc[94] +
           dwdot5dscqss3 * dscqss_dsc[129] + dwdot5dscqss4 * dscqss_dsc[164] +
           dwdot5dscqss5 * dscqss_dsc[199] + dwdot5dscqss6 * dscqss_dsc[234] +
           dwdot5dscqss7 * dscqss_dsc[269] + dwdot5dscqss9 * dscqss_dsc[339] +
           dwdot5dscqss11 * dscqss_dsc[409] + dwdot5dscqss12 * dscqss_dsc[444] +
           dwdot5dscqss14 * dscqss_dsc[514] + dwdot5dscqss13 * dscqss_dsc[479] +
           dwdot5dscqss15 * dscqss_dsc[549] + dwdot5dscqss8 * dscqss_dsc[304] +
           dwdot5dscqss10 * dscqss_dsc[374];
  J[905] = dwdot5dsc25 + dwdot5dscqss0 * dscqss_dsc[25] +
           dwdot5dscqss16 * dscqss_dsc[585] + dwdot5dscqss1 * dscqss_dsc[60] +
           dwdot5dscqss17 * dscqss_dsc[620] + dwdot5dscqss2 * dscqss_dsc[95] +
           dwdot5dscqss3 * dscqss_dsc[130] + dwdot5dscqss4 * dscqss_dsc[165] +
           dwdot5dscqss5 * dscqss_dsc[200] + dwdot5dscqss6 * dscqss_dsc[235] +
           dwdot5dscqss7 * dscqss_dsc[270] + dwdot5dscqss9 * dscqss_dsc[340] +
           dwdot5dscqss11 * dscqss_dsc[410] + dwdot5dscqss12 * dscqss_dsc[445] +
           dwdot5dscqss14 * dscqss_dsc[515] + dwdot5dscqss13 * dscqss_dsc[480] +
           dwdot5dscqss15 * dscqss_dsc[550] + dwdot5dscqss8 * dscqss_dsc[305] +
           dwdot5dscqss10 * dscqss_dsc[375];
  J[941] = dwdot5dsc26 + dwdot5dscqss0 * dscqss_dsc[26] +
           dwdot5dscqss16 * dscqss_dsc[586] + dwdot5dscqss1 * dscqss_dsc[61] +
           dwdot5dscqss17 * dscqss_dsc[621] + dwdot5dscqss2 * dscqss_dsc[96] +
           dwdot5dscqss3 * dscqss_dsc[131] + dwdot5dscqss4 * dscqss_dsc[166] +
           dwdot5dscqss5 * dscqss_dsc[201] + dwdot5dscqss6 * dscqss_dsc[236] +
           dwdot5dscqss7 * dscqss_dsc[271] + dwdot5dscqss9 * dscqss_dsc[341] +
           dwdot5dscqss11 * dscqss_dsc[411] + dwdot5dscqss12 * dscqss_dsc[446] +
           dwdot5dscqss14 * dscqss_dsc[516] + dwdot5dscqss13 * dscqss_dsc[481] +
           dwdot5dscqss15 * dscqss_dsc[551] + dwdot5dscqss8 * dscqss_dsc[306] +
           dwdot5dscqss10 * dscqss_dsc[376];
  J[977] = dwdot5dsc27 + dwdot5dscqss0 * dscqss_dsc[27] +
           dwdot5dscqss16 * dscqss_dsc[587] + dwdot5dscqss1 * dscqss_dsc[62] +
           dwdot5dscqss17 * dscqss_dsc[622] + dwdot5dscqss2 * dscqss_dsc[97] +
           dwdot5dscqss3 * dscqss_dsc[132] + dwdot5dscqss4 * dscqss_dsc[167] +
           dwdot5dscqss5 * dscqss_dsc[202] + dwdot5dscqss6 * dscqss_dsc[237] +
           dwdot5dscqss7 * dscqss_dsc[272] + dwdot5dscqss9 * dscqss_dsc[342] +
           dwdot5dscqss11 * dscqss_dsc[412] + dwdot5dscqss12 * dscqss_dsc[447] +
           dwdot5dscqss14 * dscqss_dsc[517] + dwdot5dscqss13 * dscqss_dsc[482] +
           dwdot5dscqss15 * dscqss_dsc[552] + dwdot5dscqss8 * dscqss_dsc[307] +
           dwdot5dscqss10 * dscqss_dsc[377];
  J[1013] =
    dwdot5dsc28 + dwdot5dscqss0 * dscqss_dsc[28] +
    dwdot5dscqss16 * dscqss_dsc[588] + dwdot5dscqss1 * dscqss_dsc[63] +
    dwdot5dscqss17 * dscqss_dsc[623] + dwdot5dscqss2 * dscqss_dsc[98] +
    dwdot5dscqss3 * dscqss_dsc[133] + dwdot5dscqss4 * dscqss_dsc[168] +
    dwdot5dscqss5 * dscqss_dsc[203] + dwdot5dscqss6 * dscqss_dsc[238] +
    dwdot5dscqss7 * dscqss_dsc[273] + dwdot5dscqss9 * dscqss_dsc[343] +
    dwdot5dscqss11 * dscqss_dsc[413] + dwdot5dscqss12 * dscqss_dsc[448] +
    dwdot5dscqss14 * dscqss_dsc[518] + dwdot5dscqss13 * dscqss_dsc[483] +
    dwdot5dscqss15 * dscqss_dsc[553] + dwdot5dscqss8 * dscqss_dsc[308] +
    dwdot5dscqss10 * dscqss_dsc[378];
  J[1049] =
    dwdot5dsc29 + dwdot5dscqss0 * dscqss_dsc[29] +
    dwdot5dscqss16 * dscqss_dsc[589] + dwdot5dscqss1 * dscqss_dsc[64] +
    dwdot5dscqss17 * dscqss_dsc[624] + dwdot5dscqss2 * dscqss_dsc[99] +
    dwdot5dscqss3 * dscqss_dsc[134] + dwdot5dscqss4 * dscqss_dsc[169] +
    dwdot5dscqss5 * dscqss_dsc[204] + dwdot5dscqss6 * dscqss_dsc[239] +
    dwdot5dscqss7 * dscqss_dsc[274] + dwdot5dscqss9 * dscqss_dsc[344] +
    dwdot5dscqss11 * dscqss_dsc[414] + dwdot5dscqss12 * dscqss_dsc[449] +
    dwdot5dscqss14 * dscqss_dsc[519] + dwdot5dscqss13 * dscqss_dsc[484] +
    dwdot5dscqss15 * dscqss_dsc[554] + dwdot5dscqss8 * dscqss_dsc[309] +
    dwdot5dscqss10 * dscqss_dsc[379];
  J[1085] =
    dwdot5dsc30 + dwdot5dscqss0 * dscqss_dsc[30] +
    dwdot5dscqss16 * dscqss_dsc[590] + dwdot5dscqss1 * dscqss_dsc[65] +
    dwdot5dscqss17 * dscqss_dsc[625] + dwdot5dscqss2 * dscqss_dsc[100] +
    dwdot5dscqss3 * dscqss_dsc[135] + dwdot5dscqss4 * dscqss_dsc[170] +
    dwdot5dscqss5 * dscqss_dsc[205] + dwdot5dscqss6 * dscqss_dsc[240] +
    dwdot5dscqss7 * dscqss_dsc[275] + dwdot5dscqss9 * dscqss_dsc[345] +
    dwdot5dscqss11 * dscqss_dsc[415] + dwdot5dscqss12 * dscqss_dsc[450] +
    dwdot5dscqss14 * dscqss_dsc[520] + dwdot5dscqss13 * dscqss_dsc[485] +
    dwdot5dscqss15 * dscqss_dsc[555] + dwdot5dscqss8 * dscqss_dsc[310] +
    dwdot5dscqss10 * dscqss_dsc[380];
  J[1121] =
    dwdot5dsc31 + dwdot5dscqss0 * dscqss_dsc[31] +
    dwdot5dscqss16 * dscqss_dsc[591] + dwdot5dscqss1 * dscqss_dsc[66] +
    dwdot5dscqss17 * dscqss_dsc[626] + dwdot5dscqss2 * dscqss_dsc[101] +
    dwdot5dscqss3 * dscqss_dsc[136] + dwdot5dscqss4 * dscqss_dsc[171] +
    dwdot5dscqss5 * dscqss_dsc[206] + dwdot5dscqss6 * dscqss_dsc[241] +
    dwdot5dscqss7 * dscqss_dsc[276] + dwdot5dscqss9 * dscqss_dsc[346] +
    dwdot5dscqss11 * dscqss_dsc[416] + dwdot5dscqss12 * dscqss_dsc[451] +
    dwdot5dscqss14 * dscqss_dsc[521] + dwdot5dscqss13 * dscqss_dsc[486] +
    dwdot5dscqss15 * dscqss_dsc[556] + dwdot5dscqss8 * dscqss_dsc[311] +
    dwdot5dscqss10 * dscqss_dsc[381];
  J[1157] =
    dwdot5dsc32 + dwdot5dscqss0 * dscqss_dsc[32] +
    dwdot5dscqss16 * dscqss_dsc[592] + dwdot5dscqss1 * dscqss_dsc[67] +
    dwdot5dscqss17 * dscqss_dsc[627] + dwdot5dscqss2 * dscqss_dsc[102] +
    dwdot5dscqss3 * dscqss_dsc[137] + dwdot5dscqss4 * dscqss_dsc[172] +
    dwdot5dscqss5 * dscqss_dsc[207] + dwdot5dscqss6 * dscqss_dsc[242] +
    dwdot5dscqss7 * dscqss_dsc[277] + dwdot5dscqss9 * dscqss_dsc[347] +
    dwdot5dscqss11 * dscqss_dsc[417] + dwdot5dscqss12 * dscqss_dsc[452] +
    dwdot5dscqss14 * dscqss_dsc[522] + dwdot5dscqss13 * dscqss_dsc[487] +
    dwdot5dscqss15 * dscqss_dsc[557] + dwdot5dscqss8 * dscqss_dsc[312] +
    dwdot5dscqss10 * dscqss_dsc[382];
  J[1193] =
    dwdot5dsc33 + dwdot5dscqss0 * dscqss_dsc[33] +
    dwdot5dscqss16 * dscqss_dsc[593] + dwdot5dscqss1 * dscqss_dsc[68] +
    dwdot5dscqss17 * dscqss_dsc[628] + dwdot5dscqss2 * dscqss_dsc[103] +
    dwdot5dscqss3 * dscqss_dsc[138] + dwdot5dscqss4 * dscqss_dsc[173] +
    dwdot5dscqss5 * dscqss_dsc[208] + dwdot5dscqss6 * dscqss_dsc[243] +
    dwdot5dscqss7 * dscqss_dsc[278] + dwdot5dscqss9 * dscqss_dsc[348] +
    dwdot5dscqss11 * dscqss_dsc[418] + dwdot5dscqss12 * dscqss_dsc[453] +
    dwdot5dscqss14 * dscqss_dsc[523] + dwdot5dscqss13 * dscqss_dsc[488] +
    dwdot5dscqss15 * dscqss_dsc[558] + dwdot5dscqss8 * dscqss_dsc[313] +
    dwdot5dscqss10 * dscqss_dsc[383];
  J[1229] =
    dwdot5dsc34 + dwdot5dscqss0 * dscqss_dsc[34] +
    dwdot5dscqss16 * dscqss_dsc[594] + dwdot5dscqss1 * dscqss_dsc[69] +
    dwdot5dscqss17 * dscqss_dsc[629] + dwdot5dscqss2 * dscqss_dsc[104] +
    dwdot5dscqss3 * dscqss_dsc[139] + dwdot5dscqss4 * dscqss_dsc[174] +
    dwdot5dscqss5 * dscqss_dsc[209] + dwdot5dscqss6 * dscqss_dsc[244] +
    dwdot5dscqss7 * dscqss_dsc[279] + dwdot5dscqss9 * dscqss_dsc[349] +
    dwdot5dscqss11 * dscqss_dsc[419] + dwdot5dscqss12 * dscqss_dsc[454] +
    dwdot5dscqss14 * dscqss_dsc[524] + dwdot5dscqss13 * dscqss_dsc[489] +
    dwdot5dscqss15 * dscqss_dsc[559] + dwdot5dscqss8 * dscqss_dsc[314] +
    dwdot5dscqss10 * dscqss_dsc[384];
  J[6] = dwdot6dsc0 + dwdot6dscqss0 * dscqss_dsc[0] +
         dwdot6dscqss16 * dscqss_dsc[560] + dwdot6dscqss1 * dscqss_dsc[35] +
         dwdot6dscqss17 * dscqss_dsc[595] + dwdot6dscqss2 * dscqss_dsc[70] +
         dwdot6dscqss3 * dscqss_dsc[105] + dwdot6dscqss4 * dscqss_dsc[140] +
         dwdot6dscqss5 * dscqss_dsc[175] + dwdot6dscqss6 * dscqss_dsc[210] +
         dwdot6dscqss7 * dscqss_dsc[245] + dwdot6dscqss9 * dscqss_dsc[315] +
         dwdot6dscqss11 * dscqss_dsc[385] + dwdot6dscqss12 * dscqss_dsc[420] +
         dwdot6dscqss14 * dscqss_dsc[490] + dwdot6dscqss13 * dscqss_dsc[455] +
         dwdot6dscqss15 * dscqss_dsc[525] + dwdot6dscqss8 * dscqss_dsc[280] +
         dwdot6dscqss10 * dscqss_dsc[350];
  J[42] = dwdot6dsc1 + dwdot6dscqss0 * dscqss_dsc[1] +
          dwdot6dscqss16 * dscqss_dsc[561] + dwdot6dscqss1 * dscqss_dsc[36] +
          dwdot6dscqss17 * dscqss_dsc[596] + dwdot6dscqss2 * dscqss_dsc[71] +
          dwdot6dscqss3 * dscqss_dsc[106] + dwdot6dscqss4 * dscqss_dsc[141] +
          dwdot6dscqss5 * dscqss_dsc[176] + dwdot6dscqss6 * dscqss_dsc[211] +
          dwdot6dscqss7 * dscqss_dsc[246] + dwdot6dscqss9 * dscqss_dsc[316] +
          dwdot6dscqss11 * dscqss_dsc[386] + dwdot6dscqss12 * dscqss_dsc[421] +
          dwdot6dscqss14 * dscqss_dsc[491] + dwdot6dscqss13 * dscqss_dsc[456] +
          dwdot6dscqss15 * dscqss_dsc[526] + dwdot6dscqss8 * dscqss_dsc[281] +
          dwdot6dscqss10 * dscqss_dsc[351];
  J[78] = dwdot6dsc2 + dwdot6dscqss0 * dscqss_dsc[2] +
          dwdot6dscqss16 * dscqss_dsc[562] + dwdot6dscqss1 * dscqss_dsc[37] +
          dwdot6dscqss17 * dscqss_dsc[597] + dwdot6dscqss2 * dscqss_dsc[72] +
          dwdot6dscqss3 * dscqss_dsc[107] + dwdot6dscqss4 * dscqss_dsc[142] +
          dwdot6dscqss5 * dscqss_dsc[177] + dwdot6dscqss6 * dscqss_dsc[212] +
          dwdot6dscqss7 * dscqss_dsc[247] + dwdot6dscqss9 * dscqss_dsc[317] +
          dwdot6dscqss11 * dscqss_dsc[387] + dwdot6dscqss12 * dscqss_dsc[422] +
          dwdot6dscqss14 * dscqss_dsc[492] + dwdot6dscqss13 * dscqss_dsc[457] +
          dwdot6dscqss15 * dscqss_dsc[527] + dwdot6dscqss8 * dscqss_dsc[282] +
          dwdot6dscqss10 * dscqss_dsc[352];
  J[114] = dwdot6dsc3 + dwdot6dscqss0 * dscqss_dsc[3] +
           dwdot6dscqss16 * dscqss_dsc[563] + dwdot6dscqss1 * dscqss_dsc[38] +
           dwdot6dscqss17 * dscqss_dsc[598] + dwdot6dscqss2 * dscqss_dsc[73] +
           dwdot6dscqss3 * dscqss_dsc[108] + dwdot6dscqss4 * dscqss_dsc[143] +
           dwdot6dscqss5 * dscqss_dsc[178] + dwdot6dscqss6 * dscqss_dsc[213] +
           dwdot6dscqss7 * dscqss_dsc[248] + dwdot6dscqss9 * dscqss_dsc[318] +
           dwdot6dscqss11 * dscqss_dsc[388] + dwdot6dscqss12 * dscqss_dsc[423] +
           dwdot6dscqss14 * dscqss_dsc[493] + dwdot6dscqss13 * dscqss_dsc[458] +
           dwdot6dscqss15 * dscqss_dsc[528] + dwdot6dscqss8 * dscqss_dsc[283] +
           dwdot6dscqss10 * dscqss_dsc[353];
  J[150] = dwdot6dsc4 + dwdot6dscqss0 * dscqss_dsc[4] +
           dwdot6dscqss16 * dscqss_dsc[564] + dwdot6dscqss1 * dscqss_dsc[39] +
           dwdot6dscqss17 * dscqss_dsc[599] + dwdot6dscqss2 * dscqss_dsc[74] +
           dwdot6dscqss3 * dscqss_dsc[109] + dwdot6dscqss4 * dscqss_dsc[144] +
           dwdot6dscqss5 * dscqss_dsc[179] + dwdot6dscqss6 * dscqss_dsc[214] +
           dwdot6dscqss7 * dscqss_dsc[249] + dwdot6dscqss9 * dscqss_dsc[319] +
           dwdot6dscqss11 * dscqss_dsc[389] + dwdot6dscqss12 * dscqss_dsc[424] +
           dwdot6dscqss14 * dscqss_dsc[494] + dwdot6dscqss13 * dscqss_dsc[459] +
           dwdot6dscqss15 * dscqss_dsc[529] + dwdot6dscqss8 * dscqss_dsc[284] +
           dwdot6dscqss10 * dscqss_dsc[354];
  J[186] = dwdot6dsc5 + dwdot6dscqss0 * dscqss_dsc[5] +
           dwdot6dscqss16 * dscqss_dsc[565] + dwdot6dscqss1 * dscqss_dsc[40] +
           dwdot6dscqss17 * dscqss_dsc[600] + dwdot6dscqss2 * dscqss_dsc[75] +
           dwdot6dscqss3 * dscqss_dsc[110] + dwdot6dscqss4 * dscqss_dsc[145] +
           dwdot6dscqss5 * dscqss_dsc[180] + dwdot6dscqss6 * dscqss_dsc[215] +
           dwdot6dscqss7 * dscqss_dsc[250] + dwdot6dscqss9 * dscqss_dsc[320] +
           dwdot6dscqss11 * dscqss_dsc[390] + dwdot6dscqss12 * dscqss_dsc[425] +
           dwdot6dscqss14 * dscqss_dsc[495] + dwdot6dscqss13 * dscqss_dsc[460] +
           dwdot6dscqss15 * dscqss_dsc[530] + dwdot6dscqss8 * dscqss_dsc[285] +
           dwdot6dscqss10 * dscqss_dsc[355];
  J[222] = dwdot6dsc6 + dwdot6dscqss0 * dscqss_dsc[6] +
           dwdot6dscqss16 * dscqss_dsc[566] + dwdot6dscqss1 * dscqss_dsc[41] +
           dwdot6dscqss17 * dscqss_dsc[601] + dwdot6dscqss2 * dscqss_dsc[76] +
           dwdot6dscqss3 * dscqss_dsc[111] + dwdot6dscqss4 * dscqss_dsc[146] +
           dwdot6dscqss5 * dscqss_dsc[181] + dwdot6dscqss6 * dscqss_dsc[216] +
           dwdot6dscqss7 * dscqss_dsc[251] + dwdot6dscqss9 * dscqss_dsc[321] +
           dwdot6dscqss11 * dscqss_dsc[391] + dwdot6dscqss12 * dscqss_dsc[426] +
           dwdot6dscqss14 * dscqss_dsc[496] + dwdot6dscqss13 * dscqss_dsc[461] +
           dwdot6dscqss15 * dscqss_dsc[531] + dwdot6dscqss8 * dscqss_dsc[286] +
           dwdot6dscqss10 * dscqss_dsc[356];
  J[258] = dwdot6dsc7 + dwdot6dscqss0 * dscqss_dsc[7] +
           dwdot6dscqss16 * dscqss_dsc[567] + dwdot6dscqss1 * dscqss_dsc[42] +
           dwdot6dscqss17 * dscqss_dsc[602] + dwdot6dscqss2 * dscqss_dsc[77] +
           dwdot6dscqss3 * dscqss_dsc[112] + dwdot6dscqss4 * dscqss_dsc[147] +
           dwdot6dscqss5 * dscqss_dsc[182] + dwdot6dscqss6 * dscqss_dsc[217] +
           dwdot6dscqss7 * dscqss_dsc[252] + dwdot6dscqss9 * dscqss_dsc[322] +
           dwdot6dscqss11 * dscqss_dsc[392] + dwdot6dscqss12 * dscqss_dsc[427] +
           dwdot6dscqss14 * dscqss_dsc[497] + dwdot6dscqss13 * dscqss_dsc[462] +
           dwdot6dscqss15 * dscqss_dsc[532] + dwdot6dscqss8 * dscqss_dsc[287] +
           dwdot6dscqss10 * dscqss_dsc[357];
  J[294] = dwdot6dsc8 + dwdot6dscqss0 * dscqss_dsc[8] +
           dwdot6dscqss16 * dscqss_dsc[568] + dwdot6dscqss1 * dscqss_dsc[43] +
           dwdot6dscqss17 * dscqss_dsc[603] + dwdot6dscqss2 * dscqss_dsc[78] +
           dwdot6dscqss3 * dscqss_dsc[113] + dwdot6dscqss4 * dscqss_dsc[148] +
           dwdot6dscqss5 * dscqss_dsc[183] + dwdot6dscqss6 * dscqss_dsc[218] +
           dwdot6dscqss7 * dscqss_dsc[253] + dwdot6dscqss9 * dscqss_dsc[323] +
           dwdot6dscqss11 * dscqss_dsc[393] + dwdot6dscqss12 * dscqss_dsc[428] +
           dwdot6dscqss14 * dscqss_dsc[498] + dwdot6dscqss13 * dscqss_dsc[463] +
           dwdot6dscqss15 * dscqss_dsc[533] + dwdot6dscqss8 * dscqss_dsc[288] +
           dwdot6dscqss10 * dscqss_dsc[358];
  J[330] = dwdot6dsc9 + dwdot6dscqss0 * dscqss_dsc[9] +
           dwdot6dscqss16 * dscqss_dsc[569] + dwdot6dscqss1 * dscqss_dsc[44] +
           dwdot6dscqss17 * dscqss_dsc[604] + dwdot6dscqss2 * dscqss_dsc[79] +
           dwdot6dscqss3 * dscqss_dsc[114] + dwdot6dscqss4 * dscqss_dsc[149] +
           dwdot6dscqss5 * dscqss_dsc[184] + dwdot6dscqss6 * dscqss_dsc[219] +
           dwdot6dscqss7 * dscqss_dsc[254] + dwdot6dscqss9 * dscqss_dsc[324] +
           dwdot6dscqss11 * dscqss_dsc[394] + dwdot6dscqss12 * dscqss_dsc[429] +
           dwdot6dscqss14 * dscqss_dsc[499] + dwdot6dscqss13 * dscqss_dsc[464] +
           dwdot6dscqss15 * dscqss_dsc[534] + dwdot6dscqss8 * dscqss_dsc[289] +
           dwdot6dscqss10 * dscqss_dsc[359];
  J[366] = dwdot6dsc10 + dwdot6dscqss0 * dscqss_dsc[10] +
           dwdot6dscqss16 * dscqss_dsc[570] + dwdot6dscqss1 * dscqss_dsc[45] +
           dwdot6dscqss17 * dscqss_dsc[605] + dwdot6dscqss2 * dscqss_dsc[80] +
           dwdot6dscqss3 * dscqss_dsc[115] + dwdot6dscqss4 * dscqss_dsc[150] +
           dwdot6dscqss5 * dscqss_dsc[185] + dwdot6dscqss6 * dscqss_dsc[220] +
           dwdot6dscqss7 * dscqss_dsc[255] + dwdot6dscqss9 * dscqss_dsc[325] +
           dwdot6dscqss11 * dscqss_dsc[395] + dwdot6dscqss12 * dscqss_dsc[430] +
           dwdot6dscqss14 * dscqss_dsc[500] + dwdot6dscqss13 * dscqss_dsc[465] +
           dwdot6dscqss15 * dscqss_dsc[535] + dwdot6dscqss8 * dscqss_dsc[290] +
           dwdot6dscqss10 * dscqss_dsc[360];
  J[402] = dwdot6dsc11 + dwdot6dscqss0 * dscqss_dsc[11] +
           dwdot6dscqss16 * dscqss_dsc[571] + dwdot6dscqss1 * dscqss_dsc[46] +
           dwdot6dscqss17 * dscqss_dsc[606] + dwdot6dscqss2 * dscqss_dsc[81] +
           dwdot6dscqss3 * dscqss_dsc[116] + dwdot6dscqss4 * dscqss_dsc[151] +
           dwdot6dscqss5 * dscqss_dsc[186] + dwdot6dscqss6 * dscqss_dsc[221] +
           dwdot6dscqss7 * dscqss_dsc[256] + dwdot6dscqss9 * dscqss_dsc[326] +
           dwdot6dscqss11 * dscqss_dsc[396] + dwdot6dscqss12 * dscqss_dsc[431] +
           dwdot6dscqss14 * dscqss_dsc[501] + dwdot6dscqss13 * dscqss_dsc[466] +
           dwdot6dscqss15 * dscqss_dsc[536] + dwdot6dscqss8 * dscqss_dsc[291] +
           dwdot6dscqss10 * dscqss_dsc[361];
  J[438] = dwdot6dsc12 + dwdot6dscqss0 * dscqss_dsc[12] +
           dwdot6dscqss16 * dscqss_dsc[572] + dwdot6dscqss1 * dscqss_dsc[47] +
           dwdot6dscqss17 * dscqss_dsc[607] + dwdot6dscqss2 * dscqss_dsc[82] +
           dwdot6dscqss3 * dscqss_dsc[117] + dwdot6dscqss4 * dscqss_dsc[152] +
           dwdot6dscqss5 * dscqss_dsc[187] + dwdot6dscqss6 * dscqss_dsc[222] +
           dwdot6dscqss7 * dscqss_dsc[257] + dwdot6dscqss9 * dscqss_dsc[327] +
           dwdot6dscqss11 * dscqss_dsc[397] + dwdot6dscqss12 * dscqss_dsc[432] +
           dwdot6dscqss14 * dscqss_dsc[502] + dwdot6dscqss13 * dscqss_dsc[467] +
           dwdot6dscqss15 * dscqss_dsc[537] + dwdot6dscqss8 * dscqss_dsc[292] +
           dwdot6dscqss10 * dscqss_dsc[362];
  J[474] = dwdot6dsc13 + dwdot6dscqss0 * dscqss_dsc[13] +
           dwdot6dscqss16 * dscqss_dsc[573] + dwdot6dscqss1 * dscqss_dsc[48] +
           dwdot6dscqss17 * dscqss_dsc[608] + dwdot6dscqss2 * dscqss_dsc[83] +
           dwdot6dscqss3 * dscqss_dsc[118] + dwdot6dscqss4 * dscqss_dsc[153] +
           dwdot6dscqss5 * dscqss_dsc[188] + dwdot6dscqss6 * dscqss_dsc[223] +
           dwdot6dscqss7 * dscqss_dsc[258] + dwdot6dscqss9 * dscqss_dsc[328] +
           dwdot6dscqss11 * dscqss_dsc[398] + dwdot6dscqss12 * dscqss_dsc[433] +
           dwdot6dscqss14 * dscqss_dsc[503] + dwdot6dscqss13 * dscqss_dsc[468] +
           dwdot6dscqss15 * dscqss_dsc[538] + dwdot6dscqss8 * dscqss_dsc[293] +
           dwdot6dscqss10 * dscqss_dsc[363];
  J[510] = dwdot6dsc14 + dwdot6dscqss0 * dscqss_dsc[14] +
           dwdot6dscqss16 * dscqss_dsc[574] + dwdot6dscqss1 * dscqss_dsc[49] +
           dwdot6dscqss17 * dscqss_dsc[609] + dwdot6dscqss2 * dscqss_dsc[84] +
           dwdot6dscqss3 * dscqss_dsc[119] + dwdot6dscqss4 * dscqss_dsc[154] +
           dwdot6dscqss5 * dscqss_dsc[189] + dwdot6dscqss6 * dscqss_dsc[224] +
           dwdot6dscqss7 * dscqss_dsc[259] + dwdot6dscqss9 * dscqss_dsc[329] +
           dwdot6dscqss11 * dscqss_dsc[399] + dwdot6dscqss12 * dscqss_dsc[434] +
           dwdot6dscqss14 * dscqss_dsc[504] + dwdot6dscqss13 * dscqss_dsc[469] +
           dwdot6dscqss15 * dscqss_dsc[539] + dwdot6dscqss8 * dscqss_dsc[294] +
           dwdot6dscqss10 * dscqss_dsc[364];
  J[546] = dwdot6dsc15 + dwdot6dscqss0 * dscqss_dsc[15] +
           dwdot6dscqss16 * dscqss_dsc[575] + dwdot6dscqss1 * dscqss_dsc[50] +
           dwdot6dscqss17 * dscqss_dsc[610] + dwdot6dscqss2 * dscqss_dsc[85] +
           dwdot6dscqss3 * dscqss_dsc[120] + dwdot6dscqss4 * dscqss_dsc[155] +
           dwdot6dscqss5 * dscqss_dsc[190] + dwdot6dscqss6 * dscqss_dsc[225] +
           dwdot6dscqss7 * dscqss_dsc[260] + dwdot6dscqss9 * dscqss_dsc[330] +
           dwdot6dscqss11 * dscqss_dsc[400] + dwdot6dscqss12 * dscqss_dsc[435] +
           dwdot6dscqss14 * dscqss_dsc[505] + dwdot6dscqss13 * dscqss_dsc[470] +
           dwdot6dscqss15 * dscqss_dsc[540] + dwdot6dscqss8 * dscqss_dsc[295] +
           dwdot6dscqss10 * dscqss_dsc[365];
  J[582] = dwdot6dsc16 + dwdot6dscqss0 * dscqss_dsc[16] +
           dwdot6dscqss16 * dscqss_dsc[576] + dwdot6dscqss1 * dscqss_dsc[51] +
           dwdot6dscqss17 * dscqss_dsc[611] + dwdot6dscqss2 * dscqss_dsc[86] +
           dwdot6dscqss3 * dscqss_dsc[121] + dwdot6dscqss4 * dscqss_dsc[156] +
           dwdot6dscqss5 * dscqss_dsc[191] + dwdot6dscqss6 * dscqss_dsc[226] +
           dwdot6dscqss7 * dscqss_dsc[261] + dwdot6dscqss9 * dscqss_dsc[331] +
           dwdot6dscqss11 * dscqss_dsc[401] + dwdot6dscqss12 * dscqss_dsc[436] +
           dwdot6dscqss14 * dscqss_dsc[506] + dwdot6dscqss13 * dscqss_dsc[471] +
           dwdot6dscqss15 * dscqss_dsc[541] + dwdot6dscqss8 * dscqss_dsc[296] +
           dwdot6dscqss10 * dscqss_dsc[366];
  J[618] = dwdot6dsc17 + dwdot6dscqss0 * dscqss_dsc[17] +
           dwdot6dscqss16 * dscqss_dsc[577] + dwdot6dscqss1 * dscqss_dsc[52] +
           dwdot6dscqss17 * dscqss_dsc[612] + dwdot6dscqss2 * dscqss_dsc[87] +
           dwdot6dscqss3 * dscqss_dsc[122] + dwdot6dscqss4 * dscqss_dsc[157] +
           dwdot6dscqss5 * dscqss_dsc[192] + dwdot6dscqss6 * dscqss_dsc[227] +
           dwdot6dscqss7 * dscqss_dsc[262] + dwdot6dscqss9 * dscqss_dsc[332] +
           dwdot6dscqss11 * dscqss_dsc[402] + dwdot6dscqss12 * dscqss_dsc[437] +
           dwdot6dscqss14 * dscqss_dsc[507] + dwdot6dscqss13 * dscqss_dsc[472] +
           dwdot6dscqss15 * dscqss_dsc[542] + dwdot6dscqss8 * dscqss_dsc[297] +
           dwdot6dscqss10 * dscqss_dsc[367];
  J[654] = dwdot6dsc18 + dwdot6dscqss0 * dscqss_dsc[18] +
           dwdot6dscqss16 * dscqss_dsc[578] + dwdot6dscqss1 * dscqss_dsc[53] +
           dwdot6dscqss17 * dscqss_dsc[613] + dwdot6dscqss2 * dscqss_dsc[88] +
           dwdot6dscqss3 * dscqss_dsc[123] + dwdot6dscqss4 * dscqss_dsc[158] +
           dwdot6dscqss5 * dscqss_dsc[193] + dwdot6dscqss6 * dscqss_dsc[228] +
           dwdot6dscqss7 * dscqss_dsc[263] + dwdot6dscqss9 * dscqss_dsc[333] +
           dwdot6dscqss11 * dscqss_dsc[403] + dwdot6dscqss12 * dscqss_dsc[438] +
           dwdot6dscqss14 * dscqss_dsc[508] + dwdot6dscqss13 * dscqss_dsc[473] +
           dwdot6dscqss15 * dscqss_dsc[543] + dwdot6dscqss8 * dscqss_dsc[298] +
           dwdot6dscqss10 * dscqss_dsc[368];
  J[690] = dwdot6dsc19 + dwdot6dscqss0 * dscqss_dsc[19] +
           dwdot6dscqss16 * dscqss_dsc[579] + dwdot6dscqss1 * dscqss_dsc[54] +
           dwdot6dscqss17 * dscqss_dsc[614] + dwdot6dscqss2 * dscqss_dsc[89] +
           dwdot6dscqss3 * dscqss_dsc[124] + dwdot6dscqss4 * dscqss_dsc[159] +
           dwdot6dscqss5 * dscqss_dsc[194] + dwdot6dscqss6 * dscqss_dsc[229] +
           dwdot6dscqss7 * dscqss_dsc[264] + dwdot6dscqss9 * dscqss_dsc[334] +
           dwdot6dscqss11 * dscqss_dsc[404] + dwdot6dscqss12 * dscqss_dsc[439] +
           dwdot6dscqss14 * dscqss_dsc[509] + dwdot6dscqss13 * dscqss_dsc[474] +
           dwdot6dscqss15 * dscqss_dsc[544] + dwdot6dscqss8 * dscqss_dsc[299] +
           dwdot6dscqss10 * dscqss_dsc[369];
  J[726] = dwdot6dsc20 + dwdot6dscqss0 * dscqss_dsc[20] +
           dwdot6dscqss16 * dscqss_dsc[580] + dwdot6dscqss1 * dscqss_dsc[55] +
           dwdot6dscqss17 * dscqss_dsc[615] + dwdot6dscqss2 * dscqss_dsc[90] +
           dwdot6dscqss3 * dscqss_dsc[125] + dwdot6dscqss4 * dscqss_dsc[160] +
           dwdot6dscqss5 * dscqss_dsc[195] + dwdot6dscqss6 * dscqss_dsc[230] +
           dwdot6dscqss7 * dscqss_dsc[265] + dwdot6dscqss9 * dscqss_dsc[335] +
           dwdot6dscqss11 * dscqss_dsc[405] + dwdot6dscqss12 * dscqss_dsc[440] +
           dwdot6dscqss14 * dscqss_dsc[510] + dwdot6dscqss13 * dscqss_dsc[475] +
           dwdot6dscqss15 * dscqss_dsc[545] + dwdot6dscqss8 * dscqss_dsc[300] +
           dwdot6dscqss10 * dscqss_dsc[370];
  J[762] = dwdot6dsc21 + dwdot6dscqss0 * dscqss_dsc[21] +
           dwdot6dscqss16 * dscqss_dsc[581] + dwdot6dscqss1 * dscqss_dsc[56] +
           dwdot6dscqss17 * dscqss_dsc[616] + dwdot6dscqss2 * dscqss_dsc[91] +
           dwdot6dscqss3 * dscqss_dsc[126] + dwdot6dscqss4 * dscqss_dsc[161] +
           dwdot6dscqss5 * dscqss_dsc[196] + dwdot6dscqss6 * dscqss_dsc[231] +
           dwdot6dscqss7 * dscqss_dsc[266] + dwdot6dscqss9 * dscqss_dsc[336] +
           dwdot6dscqss11 * dscqss_dsc[406] + dwdot6dscqss12 * dscqss_dsc[441] +
           dwdot6dscqss14 * dscqss_dsc[511] + dwdot6dscqss13 * dscqss_dsc[476] +
           dwdot6dscqss15 * dscqss_dsc[546] + dwdot6dscqss8 * dscqss_dsc[301] +
           dwdot6dscqss10 * dscqss_dsc[371];
  J[798] = dwdot6dsc22 + dwdot6dscqss0 * dscqss_dsc[22] +
           dwdot6dscqss16 * dscqss_dsc[582] + dwdot6dscqss1 * dscqss_dsc[57] +
           dwdot6dscqss17 * dscqss_dsc[617] + dwdot6dscqss2 * dscqss_dsc[92] +
           dwdot6dscqss3 * dscqss_dsc[127] + dwdot6dscqss4 * dscqss_dsc[162] +
           dwdot6dscqss5 * dscqss_dsc[197] + dwdot6dscqss6 * dscqss_dsc[232] +
           dwdot6dscqss7 * dscqss_dsc[267] + dwdot6dscqss9 * dscqss_dsc[337] +
           dwdot6dscqss11 * dscqss_dsc[407] + dwdot6dscqss12 * dscqss_dsc[442] +
           dwdot6dscqss14 * dscqss_dsc[512] + dwdot6dscqss13 * dscqss_dsc[477] +
           dwdot6dscqss15 * dscqss_dsc[547] + dwdot6dscqss8 * dscqss_dsc[302] +
           dwdot6dscqss10 * dscqss_dsc[372];
  J[834] = dwdot6dsc23 + dwdot6dscqss0 * dscqss_dsc[23] +
           dwdot6dscqss16 * dscqss_dsc[583] + dwdot6dscqss1 * dscqss_dsc[58] +
           dwdot6dscqss17 * dscqss_dsc[618] + dwdot6dscqss2 * dscqss_dsc[93] +
           dwdot6dscqss3 * dscqss_dsc[128] + dwdot6dscqss4 * dscqss_dsc[163] +
           dwdot6dscqss5 * dscqss_dsc[198] + dwdot6dscqss6 * dscqss_dsc[233] +
           dwdot6dscqss7 * dscqss_dsc[268] + dwdot6dscqss9 * dscqss_dsc[338] +
           dwdot6dscqss11 * dscqss_dsc[408] + dwdot6dscqss12 * dscqss_dsc[443] +
           dwdot6dscqss14 * dscqss_dsc[513] + dwdot6dscqss13 * dscqss_dsc[478] +
           dwdot6dscqss15 * dscqss_dsc[548] + dwdot6dscqss8 * dscqss_dsc[303] +
           dwdot6dscqss10 * dscqss_dsc[373];
  J[870] = dwdot6dsc24 + dwdot6dscqss0 * dscqss_dsc[24] +
           dwdot6dscqss16 * dscqss_dsc[584] + dwdot6dscqss1 * dscqss_dsc[59] +
           dwdot6dscqss17 * dscqss_dsc[619] + dwdot6dscqss2 * dscqss_dsc[94] +
           dwdot6dscqss3 * dscqss_dsc[129] + dwdot6dscqss4 * dscqss_dsc[164] +
           dwdot6dscqss5 * dscqss_dsc[199] + dwdot6dscqss6 * dscqss_dsc[234] +
           dwdot6dscqss7 * dscqss_dsc[269] + dwdot6dscqss9 * dscqss_dsc[339] +
           dwdot6dscqss11 * dscqss_dsc[409] + dwdot6dscqss12 * dscqss_dsc[444] +
           dwdot6dscqss14 * dscqss_dsc[514] + dwdot6dscqss13 * dscqss_dsc[479] +
           dwdot6dscqss15 * dscqss_dsc[549] + dwdot6dscqss8 * dscqss_dsc[304] +
           dwdot6dscqss10 * dscqss_dsc[374];
  J[906] = dwdot6dsc25 + dwdot6dscqss0 * dscqss_dsc[25] +
           dwdot6dscqss16 * dscqss_dsc[585] + dwdot6dscqss1 * dscqss_dsc[60] +
           dwdot6dscqss17 * dscqss_dsc[620] + dwdot6dscqss2 * dscqss_dsc[95] +
           dwdot6dscqss3 * dscqss_dsc[130] + dwdot6dscqss4 * dscqss_dsc[165] +
           dwdot6dscqss5 * dscqss_dsc[200] + dwdot6dscqss6 * dscqss_dsc[235] +
           dwdot6dscqss7 * dscqss_dsc[270] + dwdot6dscqss9 * dscqss_dsc[340] +
           dwdot6dscqss11 * dscqss_dsc[410] + dwdot6dscqss12 * dscqss_dsc[445] +
           dwdot6dscqss14 * dscqss_dsc[515] + dwdot6dscqss13 * dscqss_dsc[480] +
           dwdot6dscqss15 * dscqss_dsc[550] + dwdot6dscqss8 * dscqss_dsc[305] +
           dwdot6dscqss10 * dscqss_dsc[375];
  J[942] = dwdot6dsc26 + dwdot6dscqss0 * dscqss_dsc[26] +
           dwdot6dscqss16 * dscqss_dsc[586] + dwdot6dscqss1 * dscqss_dsc[61] +
           dwdot6dscqss17 * dscqss_dsc[621] + dwdot6dscqss2 * dscqss_dsc[96] +
           dwdot6dscqss3 * dscqss_dsc[131] + dwdot6dscqss4 * dscqss_dsc[166] +
           dwdot6dscqss5 * dscqss_dsc[201] + dwdot6dscqss6 * dscqss_dsc[236] +
           dwdot6dscqss7 * dscqss_dsc[271] + dwdot6dscqss9 * dscqss_dsc[341] +
           dwdot6dscqss11 * dscqss_dsc[411] + dwdot6dscqss12 * dscqss_dsc[446] +
           dwdot6dscqss14 * dscqss_dsc[516] + dwdot6dscqss13 * dscqss_dsc[481] +
           dwdot6dscqss15 * dscqss_dsc[551] + dwdot6dscqss8 * dscqss_dsc[306] +
           dwdot6dscqss10 * dscqss_dsc[376];
  J[978] = dwdot6dsc27 + dwdot6dscqss0 * dscqss_dsc[27] +
           dwdot6dscqss16 * dscqss_dsc[587] + dwdot6dscqss1 * dscqss_dsc[62] +
           dwdot6dscqss17 * dscqss_dsc[622] + dwdot6dscqss2 * dscqss_dsc[97] +
           dwdot6dscqss3 * dscqss_dsc[132] + dwdot6dscqss4 * dscqss_dsc[167] +
           dwdot6dscqss5 * dscqss_dsc[202] + dwdot6dscqss6 * dscqss_dsc[237] +
           dwdot6dscqss7 * dscqss_dsc[272] + dwdot6dscqss9 * dscqss_dsc[342] +
           dwdot6dscqss11 * dscqss_dsc[412] + dwdot6dscqss12 * dscqss_dsc[447] +
           dwdot6dscqss14 * dscqss_dsc[517] + dwdot6dscqss13 * dscqss_dsc[482] +
           dwdot6dscqss15 * dscqss_dsc[552] + dwdot6dscqss8 * dscqss_dsc[307] +
           dwdot6dscqss10 * dscqss_dsc[377];
  J[1014] =
    dwdot6dsc28 + dwdot6dscqss0 * dscqss_dsc[28] +
    dwdot6dscqss16 * dscqss_dsc[588] + dwdot6dscqss1 * dscqss_dsc[63] +
    dwdot6dscqss17 * dscqss_dsc[623] + dwdot6dscqss2 * dscqss_dsc[98] +
    dwdot6dscqss3 * dscqss_dsc[133] + dwdot6dscqss4 * dscqss_dsc[168] +
    dwdot6dscqss5 * dscqss_dsc[203] + dwdot6dscqss6 * dscqss_dsc[238] +
    dwdot6dscqss7 * dscqss_dsc[273] + dwdot6dscqss9 * dscqss_dsc[343] +
    dwdot6dscqss11 * dscqss_dsc[413] + dwdot6dscqss12 * dscqss_dsc[448] +
    dwdot6dscqss14 * dscqss_dsc[518] + dwdot6dscqss13 * dscqss_dsc[483] +
    dwdot6dscqss15 * dscqss_dsc[553] + dwdot6dscqss8 * dscqss_dsc[308] +
    dwdot6dscqss10 * dscqss_dsc[378];
  J[1050] =
    dwdot6dsc29 + dwdot6dscqss0 * dscqss_dsc[29] +
    dwdot6dscqss16 * dscqss_dsc[589] + dwdot6dscqss1 * dscqss_dsc[64] +
    dwdot6dscqss17 * dscqss_dsc[624] + dwdot6dscqss2 * dscqss_dsc[99] +
    dwdot6dscqss3 * dscqss_dsc[134] + dwdot6dscqss4 * dscqss_dsc[169] +
    dwdot6dscqss5 * dscqss_dsc[204] + dwdot6dscqss6 * dscqss_dsc[239] +
    dwdot6dscqss7 * dscqss_dsc[274] + dwdot6dscqss9 * dscqss_dsc[344] +
    dwdot6dscqss11 * dscqss_dsc[414] + dwdot6dscqss12 * dscqss_dsc[449] +
    dwdot6dscqss14 * dscqss_dsc[519] + dwdot6dscqss13 * dscqss_dsc[484] +
    dwdot6dscqss15 * dscqss_dsc[554] + dwdot6dscqss8 * dscqss_dsc[309] +
    dwdot6dscqss10 * dscqss_dsc[379];
  J[1086] =
    dwdot6dsc30 + dwdot6dscqss0 * dscqss_dsc[30] +
    dwdot6dscqss16 * dscqss_dsc[590] + dwdot6dscqss1 * dscqss_dsc[65] +
    dwdot6dscqss17 * dscqss_dsc[625] + dwdot6dscqss2 * dscqss_dsc[100] +
    dwdot6dscqss3 * dscqss_dsc[135] + dwdot6dscqss4 * dscqss_dsc[170] +
    dwdot6dscqss5 * dscqss_dsc[205] + dwdot6dscqss6 * dscqss_dsc[240] +
    dwdot6dscqss7 * dscqss_dsc[275] + dwdot6dscqss9 * dscqss_dsc[345] +
    dwdot6dscqss11 * dscqss_dsc[415] + dwdot6dscqss12 * dscqss_dsc[450] +
    dwdot6dscqss14 * dscqss_dsc[520] + dwdot6dscqss13 * dscqss_dsc[485] +
    dwdot6dscqss15 * dscqss_dsc[555] + dwdot6dscqss8 * dscqss_dsc[310] +
    dwdot6dscqss10 * dscqss_dsc[380];
  J[1122] =
    dwdot6dsc31 + dwdot6dscqss0 * dscqss_dsc[31] +
    dwdot6dscqss16 * dscqss_dsc[591] + dwdot6dscqss1 * dscqss_dsc[66] +
    dwdot6dscqss17 * dscqss_dsc[626] + dwdot6dscqss2 * dscqss_dsc[101] +
    dwdot6dscqss3 * dscqss_dsc[136] + dwdot6dscqss4 * dscqss_dsc[171] +
    dwdot6dscqss5 * dscqss_dsc[206] + dwdot6dscqss6 * dscqss_dsc[241] +
    dwdot6dscqss7 * dscqss_dsc[276] + dwdot6dscqss9 * dscqss_dsc[346] +
    dwdot6dscqss11 * dscqss_dsc[416] + dwdot6dscqss12 * dscqss_dsc[451] +
    dwdot6dscqss14 * dscqss_dsc[521] + dwdot6dscqss13 * dscqss_dsc[486] +
    dwdot6dscqss15 * dscqss_dsc[556] + dwdot6dscqss8 * dscqss_dsc[311] +
    dwdot6dscqss10 * dscqss_dsc[381];
  J[1158] =
    dwdot6dsc32 + dwdot6dscqss0 * dscqss_dsc[32] +
    dwdot6dscqss16 * dscqss_dsc[592] + dwdot6dscqss1 * dscqss_dsc[67] +
    dwdot6dscqss17 * dscqss_dsc[627] + dwdot6dscqss2 * dscqss_dsc[102] +
    dwdot6dscqss3 * dscqss_dsc[137] + dwdot6dscqss4 * dscqss_dsc[172] +
    dwdot6dscqss5 * dscqss_dsc[207] + dwdot6dscqss6 * dscqss_dsc[242] +
    dwdot6dscqss7 * dscqss_dsc[277] + dwdot6dscqss9 * dscqss_dsc[347] +
    dwdot6dscqss11 * dscqss_dsc[417] + dwdot6dscqss12 * dscqss_dsc[452] +
    dwdot6dscqss14 * dscqss_dsc[522] + dwdot6dscqss13 * dscqss_dsc[487] +
    dwdot6dscqss15 * dscqss_dsc[557] + dwdot6dscqss8 * dscqss_dsc[312] +
    dwdot6dscqss10 * dscqss_dsc[382];
  J[1194] =
    dwdot6dsc33 + dwdot6dscqss0 * dscqss_dsc[33] +
    dwdot6dscqss16 * dscqss_dsc[593] + dwdot6dscqss1 * dscqss_dsc[68] +
    dwdot6dscqss17 * dscqss_dsc[628] + dwdot6dscqss2 * dscqss_dsc[103] +
    dwdot6dscqss3 * dscqss_dsc[138] + dwdot6dscqss4 * dscqss_dsc[173] +
    dwdot6dscqss5 * dscqss_dsc[208] + dwdot6dscqss6 * dscqss_dsc[243] +
    dwdot6dscqss7 * dscqss_dsc[278] + dwdot6dscqss9 * dscqss_dsc[348] +
    dwdot6dscqss11 * dscqss_dsc[418] + dwdot6dscqss12 * dscqss_dsc[453] +
    dwdot6dscqss14 * dscqss_dsc[523] + dwdot6dscqss13 * dscqss_dsc[488] +
    dwdot6dscqss15 * dscqss_dsc[558] + dwdot6dscqss8 * dscqss_dsc[313] +
    dwdot6dscqss10 * dscqss_dsc[383];
  J[1230] =
    dwdot6dsc34 + dwdot6dscqss0 * dscqss_dsc[34] +
    dwdot6dscqss16 * dscqss_dsc[594] + dwdot6dscqss1 * dscqss_dsc[69] +
    dwdot6dscqss17 * dscqss_dsc[629] + dwdot6dscqss2 * dscqss_dsc[104] +
    dwdot6dscqss3 * dscqss_dsc[139] + dwdot6dscqss4 * dscqss_dsc[174] +
    dwdot6dscqss5 * dscqss_dsc[209] + dwdot6dscqss6 * dscqss_dsc[244] +
    dwdot6dscqss7 * dscqss_dsc[279] + dwdot6dscqss9 * dscqss_dsc[349] +
    dwdot6dscqss11 * dscqss_dsc[419] + dwdot6dscqss12 * dscqss_dsc[454] +
    dwdot6dscqss14 * dscqss_dsc[524] + dwdot6dscqss13 * dscqss_dsc[489] +
    dwdot6dscqss15 * dscqss_dsc[559] + dwdot6dscqss8 * dscqss_dsc[314] +
    dwdot6dscqss10 * dscqss_dsc[384];
  J[7] = dwdot7dsc0 + dwdot7dscqss0 * dscqss_dsc[0] +
         dwdot7dscqss16 * dscqss_dsc[560] + dwdot7dscqss1 * dscqss_dsc[35] +
         dwdot7dscqss17 * dscqss_dsc[595] + dwdot7dscqss2 * dscqss_dsc[70] +
         dwdot7dscqss3 * dscqss_dsc[105] + dwdot7dscqss4 * dscqss_dsc[140] +
         dwdot7dscqss5 * dscqss_dsc[175] + dwdot7dscqss6 * dscqss_dsc[210] +
         dwdot7dscqss7 * dscqss_dsc[245] + dwdot7dscqss9 * dscqss_dsc[315] +
         dwdot7dscqss11 * dscqss_dsc[385] + dwdot7dscqss12 * dscqss_dsc[420] +
         dwdot7dscqss14 * dscqss_dsc[490] + dwdot7dscqss13 * dscqss_dsc[455] +
         dwdot7dscqss15 * dscqss_dsc[525] + dwdot7dscqss8 * dscqss_dsc[280] +
         dwdot7dscqss10 * dscqss_dsc[350];
  J[43] = dwdot7dsc1 + dwdot7dscqss0 * dscqss_dsc[1] +
          dwdot7dscqss16 * dscqss_dsc[561] + dwdot7dscqss1 * dscqss_dsc[36] +
          dwdot7dscqss17 * dscqss_dsc[596] + dwdot7dscqss2 * dscqss_dsc[71] +
          dwdot7dscqss3 * dscqss_dsc[106] + dwdot7dscqss4 * dscqss_dsc[141] +
          dwdot7dscqss5 * dscqss_dsc[176] + dwdot7dscqss6 * dscqss_dsc[211] +
          dwdot7dscqss7 * dscqss_dsc[246] + dwdot7dscqss9 * dscqss_dsc[316] +
          dwdot7dscqss11 * dscqss_dsc[386] + dwdot7dscqss12 * dscqss_dsc[421] +
          dwdot7dscqss14 * dscqss_dsc[491] + dwdot7dscqss13 * dscqss_dsc[456] +
          dwdot7dscqss15 * dscqss_dsc[526] + dwdot7dscqss8 * dscqss_dsc[281] +
          dwdot7dscqss10 * dscqss_dsc[351];
  J[79] = dwdot7dsc2 + dwdot7dscqss0 * dscqss_dsc[2] +
          dwdot7dscqss16 * dscqss_dsc[562] + dwdot7dscqss1 * dscqss_dsc[37] +
          dwdot7dscqss17 * dscqss_dsc[597] + dwdot7dscqss2 * dscqss_dsc[72] +
          dwdot7dscqss3 * dscqss_dsc[107] + dwdot7dscqss4 * dscqss_dsc[142] +
          dwdot7dscqss5 * dscqss_dsc[177] + dwdot7dscqss6 * dscqss_dsc[212] +
          dwdot7dscqss7 * dscqss_dsc[247] + dwdot7dscqss9 * dscqss_dsc[317] +
          dwdot7dscqss11 * dscqss_dsc[387] + dwdot7dscqss12 * dscqss_dsc[422] +
          dwdot7dscqss14 * dscqss_dsc[492] + dwdot7dscqss13 * dscqss_dsc[457] +
          dwdot7dscqss15 * dscqss_dsc[527] + dwdot7dscqss8 * dscqss_dsc[282] +
          dwdot7dscqss10 * dscqss_dsc[352];
  J[115] = dwdot7dsc3 + dwdot7dscqss0 * dscqss_dsc[3] +
           dwdot7dscqss16 * dscqss_dsc[563] + dwdot7dscqss1 * dscqss_dsc[38] +
           dwdot7dscqss17 * dscqss_dsc[598] + dwdot7dscqss2 * dscqss_dsc[73] +
           dwdot7dscqss3 * dscqss_dsc[108] + dwdot7dscqss4 * dscqss_dsc[143] +
           dwdot7dscqss5 * dscqss_dsc[178] + dwdot7dscqss6 * dscqss_dsc[213] +
           dwdot7dscqss7 * dscqss_dsc[248] + dwdot7dscqss9 * dscqss_dsc[318] +
           dwdot7dscqss11 * dscqss_dsc[388] + dwdot7dscqss12 * dscqss_dsc[423] +
           dwdot7dscqss14 * dscqss_dsc[493] + dwdot7dscqss13 * dscqss_dsc[458] +
           dwdot7dscqss15 * dscqss_dsc[528] + dwdot7dscqss8 * dscqss_dsc[283] +
           dwdot7dscqss10 * dscqss_dsc[353];
  J[151] = dwdot7dsc4 + dwdot7dscqss0 * dscqss_dsc[4] +
           dwdot7dscqss16 * dscqss_dsc[564] + dwdot7dscqss1 * dscqss_dsc[39] +
           dwdot7dscqss17 * dscqss_dsc[599] + dwdot7dscqss2 * dscqss_dsc[74] +
           dwdot7dscqss3 * dscqss_dsc[109] + dwdot7dscqss4 * dscqss_dsc[144] +
           dwdot7dscqss5 * dscqss_dsc[179] + dwdot7dscqss6 * dscqss_dsc[214] +
           dwdot7dscqss7 * dscqss_dsc[249] + dwdot7dscqss9 * dscqss_dsc[319] +
           dwdot7dscqss11 * dscqss_dsc[389] + dwdot7dscqss12 * dscqss_dsc[424] +
           dwdot7dscqss14 * dscqss_dsc[494] + dwdot7dscqss13 * dscqss_dsc[459] +
           dwdot7dscqss15 * dscqss_dsc[529] + dwdot7dscqss8 * dscqss_dsc[284] +
           dwdot7dscqss10 * dscqss_dsc[354];
  J[187] = dwdot7dsc5 + dwdot7dscqss0 * dscqss_dsc[5] +
           dwdot7dscqss16 * dscqss_dsc[565] + dwdot7dscqss1 * dscqss_dsc[40] +
           dwdot7dscqss17 * dscqss_dsc[600] + dwdot7dscqss2 * dscqss_dsc[75] +
           dwdot7dscqss3 * dscqss_dsc[110] + dwdot7dscqss4 * dscqss_dsc[145] +
           dwdot7dscqss5 * dscqss_dsc[180] + dwdot7dscqss6 * dscqss_dsc[215] +
           dwdot7dscqss7 * dscqss_dsc[250] + dwdot7dscqss9 * dscqss_dsc[320] +
           dwdot7dscqss11 * dscqss_dsc[390] + dwdot7dscqss12 * dscqss_dsc[425] +
           dwdot7dscqss14 * dscqss_dsc[495] + dwdot7dscqss13 * dscqss_dsc[460] +
           dwdot7dscqss15 * dscqss_dsc[530] + dwdot7dscqss8 * dscqss_dsc[285] +
           dwdot7dscqss10 * dscqss_dsc[355];
  J[223] = dwdot7dsc6 + dwdot7dscqss0 * dscqss_dsc[6] +
           dwdot7dscqss16 * dscqss_dsc[566] + dwdot7dscqss1 * dscqss_dsc[41] +
           dwdot7dscqss17 * dscqss_dsc[601] + dwdot7dscqss2 * dscqss_dsc[76] +
           dwdot7dscqss3 * dscqss_dsc[111] + dwdot7dscqss4 * dscqss_dsc[146] +
           dwdot7dscqss5 * dscqss_dsc[181] + dwdot7dscqss6 * dscqss_dsc[216] +
           dwdot7dscqss7 * dscqss_dsc[251] + dwdot7dscqss9 * dscqss_dsc[321] +
           dwdot7dscqss11 * dscqss_dsc[391] + dwdot7dscqss12 * dscqss_dsc[426] +
           dwdot7dscqss14 * dscqss_dsc[496] + dwdot7dscqss13 * dscqss_dsc[461] +
           dwdot7dscqss15 * dscqss_dsc[531] + dwdot7dscqss8 * dscqss_dsc[286] +
           dwdot7dscqss10 * dscqss_dsc[356];
  J[259] = dwdot7dsc7 + dwdot7dscqss0 * dscqss_dsc[7] +
           dwdot7dscqss16 * dscqss_dsc[567] + dwdot7dscqss1 * dscqss_dsc[42] +
           dwdot7dscqss17 * dscqss_dsc[602] + dwdot7dscqss2 * dscqss_dsc[77] +
           dwdot7dscqss3 * dscqss_dsc[112] + dwdot7dscqss4 * dscqss_dsc[147] +
           dwdot7dscqss5 * dscqss_dsc[182] + dwdot7dscqss6 * dscqss_dsc[217] +
           dwdot7dscqss7 * dscqss_dsc[252] + dwdot7dscqss9 * dscqss_dsc[322] +
           dwdot7dscqss11 * dscqss_dsc[392] + dwdot7dscqss12 * dscqss_dsc[427] +
           dwdot7dscqss14 * dscqss_dsc[497] + dwdot7dscqss13 * dscqss_dsc[462] +
           dwdot7dscqss15 * dscqss_dsc[532] + dwdot7dscqss8 * dscqss_dsc[287] +
           dwdot7dscqss10 * dscqss_dsc[357];
  J[295] = dwdot7dsc8 + dwdot7dscqss0 * dscqss_dsc[8] +
           dwdot7dscqss16 * dscqss_dsc[568] + dwdot7dscqss1 * dscqss_dsc[43] +
           dwdot7dscqss17 * dscqss_dsc[603] + dwdot7dscqss2 * dscqss_dsc[78] +
           dwdot7dscqss3 * dscqss_dsc[113] + dwdot7dscqss4 * dscqss_dsc[148] +
           dwdot7dscqss5 * dscqss_dsc[183] + dwdot7dscqss6 * dscqss_dsc[218] +
           dwdot7dscqss7 * dscqss_dsc[253] + dwdot7dscqss9 * dscqss_dsc[323] +
           dwdot7dscqss11 * dscqss_dsc[393] + dwdot7dscqss12 * dscqss_dsc[428] +
           dwdot7dscqss14 * dscqss_dsc[498] + dwdot7dscqss13 * dscqss_dsc[463] +
           dwdot7dscqss15 * dscqss_dsc[533] + dwdot7dscqss8 * dscqss_dsc[288] +
           dwdot7dscqss10 * dscqss_dsc[358];
  J[331] = dwdot7dsc9 + dwdot7dscqss0 * dscqss_dsc[9] +
           dwdot7dscqss16 * dscqss_dsc[569] + dwdot7dscqss1 * dscqss_dsc[44] +
           dwdot7dscqss17 * dscqss_dsc[604] + dwdot7dscqss2 * dscqss_dsc[79] +
           dwdot7dscqss3 * dscqss_dsc[114] + dwdot7dscqss4 * dscqss_dsc[149] +
           dwdot7dscqss5 * dscqss_dsc[184] + dwdot7dscqss6 * dscqss_dsc[219] +
           dwdot7dscqss7 * dscqss_dsc[254] + dwdot7dscqss9 * dscqss_dsc[324] +
           dwdot7dscqss11 * dscqss_dsc[394] + dwdot7dscqss12 * dscqss_dsc[429] +
           dwdot7dscqss14 * dscqss_dsc[499] + dwdot7dscqss13 * dscqss_dsc[464] +
           dwdot7dscqss15 * dscqss_dsc[534] + dwdot7dscqss8 * dscqss_dsc[289] +
           dwdot7dscqss10 * dscqss_dsc[359];
  J[367] = dwdot7dsc10 + dwdot7dscqss0 * dscqss_dsc[10] +
           dwdot7dscqss16 * dscqss_dsc[570] + dwdot7dscqss1 * dscqss_dsc[45] +
           dwdot7dscqss17 * dscqss_dsc[605] + dwdot7dscqss2 * dscqss_dsc[80] +
           dwdot7dscqss3 * dscqss_dsc[115] + dwdot7dscqss4 * dscqss_dsc[150] +
           dwdot7dscqss5 * dscqss_dsc[185] + dwdot7dscqss6 * dscqss_dsc[220] +
           dwdot7dscqss7 * dscqss_dsc[255] + dwdot7dscqss9 * dscqss_dsc[325] +
           dwdot7dscqss11 * dscqss_dsc[395] + dwdot7dscqss12 * dscqss_dsc[430] +
           dwdot7dscqss14 * dscqss_dsc[500] + dwdot7dscqss13 * dscqss_dsc[465] +
           dwdot7dscqss15 * dscqss_dsc[535] + dwdot7dscqss8 * dscqss_dsc[290] +
           dwdot7dscqss10 * dscqss_dsc[360];
  J[403] = dwdot7dsc11 + dwdot7dscqss0 * dscqss_dsc[11] +
           dwdot7dscqss16 * dscqss_dsc[571] + dwdot7dscqss1 * dscqss_dsc[46] +
           dwdot7dscqss17 * dscqss_dsc[606] + dwdot7dscqss2 * dscqss_dsc[81] +
           dwdot7dscqss3 * dscqss_dsc[116] + dwdot7dscqss4 * dscqss_dsc[151] +
           dwdot7dscqss5 * dscqss_dsc[186] + dwdot7dscqss6 * dscqss_dsc[221] +
           dwdot7dscqss7 * dscqss_dsc[256] + dwdot7dscqss9 * dscqss_dsc[326] +
           dwdot7dscqss11 * dscqss_dsc[396] + dwdot7dscqss12 * dscqss_dsc[431] +
           dwdot7dscqss14 * dscqss_dsc[501] + dwdot7dscqss13 * dscqss_dsc[466] +
           dwdot7dscqss15 * dscqss_dsc[536] + dwdot7dscqss8 * dscqss_dsc[291] +
           dwdot7dscqss10 * dscqss_dsc[361];
  J[439] = dwdot7dsc12 + dwdot7dscqss0 * dscqss_dsc[12] +
           dwdot7dscqss16 * dscqss_dsc[572] + dwdot7dscqss1 * dscqss_dsc[47] +
           dwdot7dscqss17 * dscqss_dsc[607] + dwdot7dscqss2 * dscqss_dsc[82] +
           dwdot7dscqss3 * dscqss_dsc[117] + dwdot7dscqss4 * dscqss_dsc[152] +
           dwdot7dscqss5 * dscqss_dsc[187] + dwdot7dscqss6 * dscqss_dsc[222] +
           dwdot7dscqss7 * dscqss_dsc[257] + dwdot7dscqss9 * dscqss_dsc[327] +
           dwdot7dscqss11 * dscqss_dsc[397] + dwdot7dscqss12 * dscqss_dsc[432] +
           dwdot7dscqss14 * dscqss_dsc[502] + dwdot7dscqss13 * dscqss_dsc[467] +
           dwdot7dscqss15 * dscqss_dsc[537] + dwdot7dscqss8 * dscqss_dsc[292] +
           dwdot7dscqss10 * dscqss_dsc[362];
  J[475] = dwdot7dsc13 + dwdot7dscqss0 * dscqss_dsc[13] +
           dwdot7dscqss16 * dscqss_dsc[573] + dwdot7dscqss1 * dscqss_dsc[48] +
           dwdot7dscqss17 * dscqss_dsc[608] + dwdot7dscqss2 * dscqss_dsc[83] +
           dwdot7dscqss3 * dscqss_dsc[118] + dwdot7dscqss4 * dscqss_dsc[153] +
           dwdot7dscqss5 * dscqss_dsc[188] + dwdot7dscqss6 * dscqss_dsc[223] +
           dwdot7dscqss7 * dscqss_dsc[258] + dwdot7dscqss9 * dscqss_dsc[328] +
           dwdot7dscqss11 * dscqss_dsc[398] + dwdot7dscqss12 * dscqss_dsc[433] +
           dwdot7dscqss14 * dscqss_dsc[503] + dwdot7dscqss13 * dscqss_dsc[468] +
           dwdot7dscqss15 * dscqss_dsc[538] + dwdot7dscqss8 * dscqss_dsc[293] +
           dwdot7dscqss10 * dscqss_dsc[363];
  J[511] = dwdot7dsc14 + dwdot7dscqss0 * dscqss_dsc[14] +
           dwdot7dscqss16 * dscqss_dsc[574] + dwdot7dscqss1 * dscqss_dsc[49] +
           dwdot7dscqss17 * dscqss_dsc[609] + dwdot7dscqss2 * dscqss_dsc[84] +
           dwdot7dscqss3 * dscqss_dsc[119] + dwdot7dscqss4 * dscqss_dsc[154] +
           dwdot7dscqss5 * dscqss_dsc[189] + dwdot7dscqss6 * dscqss_dsc[224] +
           dwdot7dscqss7 * dscqss_dsc[259] + dwdot7dscqss9 * dscqss_dsc[329] +
           dwdot7dscqss11 * dscqss_dsc[399] + dwdot7dscqss12 * dscqss_dsc[434] +
           dwdot7dscqss14 * dscqss_dsc[504] + dwdot7dscqss13 * dscqss_dsc[469] +
           dwdot7dscqss15 * dscqss_dsc[539] + dwdot7dscqss8 * dscqss_dsc[294] +
           dwdot7dscqss10 * dscqss_dsc[364];
  J[547] = dwdot7dsc15 + dwdot7dscqss0 * dscqss_dsc[15] +
           dwdot7dscqss16 * dscqss_dsc[575] + dwdot7dscqss1 * dscqss_dsc[50] +
           dwdot7dscqss17 * dscqss_dsc[610] + dwdot7dscqss2 * dscqss_dsc[85] +
           dwdot7dscqss3 * dscqss_dsc[120] + dwdot7dscqss4 * dscqss_dsc[155] +
           dwdot7dscqss5 * dscqss_dsc[190] + dwdot7dscqss6 * dscqss_dsc[225] +
           dwdot7dscqss7 * dscqss_dsc[260] + dwdot7dscqss9 * dscqss_dsc[330] +
           dwdot7dscqss11 * dscqss_dsc[400] + dwdot7dscqss12 * dscqss_dsc[435] +
           dwdot7dscqss14 * dscqss_dsc[505] + dwdot7dscqss13 * dscqss_dsc[470] +
           dwdot7dscqss15 * dscqss_dsc[540] + dwdot7dscqss8 * dscqss_dsc[295] +
           dwdot7dscqss10 * dscqss_dsc[365];
  J[583] = dwdot7dsc16 + dwdot7dscqss0 * dscqss_dsc[16] +
           dwdot7dscqss16 * dscqss_dsc[576] + dwdot7dscqss1 * dscqss_dsc[51] +
           dwdot7dscqss17 * dscqss_dsc[611] + dwdot7dscqss2 * dscqss_dsc[86] +
           dwdot7dscqss3 * dscqss_dsc[121] + dwdot7dscqss4 * dscqss_dsc[156] +
           dwdot7dscqss5 * dscqss_dsc[191] + dwdot7dscqss6 * dscqss_dsc[226] +
           dwdot7dscqss7 * dscqss_dsc[261] + dwdot7dscqss9 * dscqss_dsc[331] +
           dwdot7dscqss11 * dscqss_dsc[401] + dwdot7dscqss12 * dscqss_dsc[436] +
           dwdot7dscqss14 * dscqss_dsc[506] + dwdot7dscqss13 * dscqss_dsc[471] +
           dwdot7dscqss15 * dscqss_dsc[541] + dwdot7dscqss8 * dscqss_dsc[296] +
           dwdot7dscqss10 * dscqss_dsc[366];
  J[619] = dwdot7dsc17 + dwdot7dscqss0 * dscqss_dsc[17] +
           dwdot7dscqss16 * dscqss_dsc[577] + dwdot7dscqss1 * dscqss_dsc[52] +
           dwdot7dscqss17 * dscqss_dsc[612] + dwdot7dscqss2 * dscqss_dsc[87] +
           dwdot7dscqss3 * dscqss_dsc[122] + dwdot7dscqss4 * dscqss_dsc[157] +
           dwdot7dscqss5 * dscqss_dsc[192] + dwdot7dscqss6 * dscqss_dsc[227] +
           dwdot7dscqss7 * dscqss_dsc[262] + dwdot7dscqss9 * dscqss_dsc[332] +
           dwdot7dscqss11 * dscqss_dsc[402] + dwdot7dscqss12 * dscqss_dsc[437] +
           dwdot7dscqss14 * dscqss_dsc[507] + dwdot7dscqss13 * dscqss_dsc[472] +
           dwdot7dscqss15 * dscqss_dsc[542] + dwdot7dscqss8 * dscqss_dsc[297] +
           dwdot7dscqss10 * dscqss_dsc[367];
  J[655] = dwdot7dsc18 + dwdot7dscqss0 * dscqss_dsc[18] +
           dwdot7dscqss16 * dscqss_dsc[578] + dwdot7dscqss1 * dscqss_dsc[53] +
           dwdot7dscqss17 * dscqss_dsc[613] + dwdot7dscqss2 * dscqss_dsc[88] +
           dwdot7dscqss3 * dscqss_dsc[123] + dwdot7dscqss4 * dscqss_dsc[158] +
           dwdot7dscqss5 * dscqss_dsc[193] + dwdot7dscqss6 * dscqss_dsc[228] +
           dwdot7dscqss7 * dscqss_dsc[263] + dwdot7dscqss9 * dscqss_dsc[333] +
           dwdot7dscqss11 * dscqss_dsc[403] + dwdot7dscqss12 * dscqss_dsc[438] +
           dwdot7dscqss14 * dscqss_dsc[508] + dwdot7dscqss13 * dscqss_dsc[473] +
           dwdot7dscqss15 * dscqss_dsc[543] + dwdot7dscqss8 * dscqss_dsc[298] +
           dwdot7dscqss10 * dscqss_dsc[368];
  J[691] = dwdot7dsc19 + dwdot7dscqss0 * dscqss_dsc[19] +
           dwdot7dscqss16 * dscqss_dsc[579] + dwdot7dscqss1 * dscqss_dsc[54] +
           dwdot7dscqss17 * dscqss_dsc[614] + dwdot7dscqss2 * dscqss_dsc[89] +
           dwdot7dscqss3 * dscqss_dsc[124] + dwdot7dscqss4 * dscqss_dsc[159] +
           dwdot7dscqss5 * dscqss_dsc[194] + dwdot7dscqss6 * dscqss_dsc[229] +
           dwdot7dscqss7 * dscqss_dsc[264] + dwdot7dscqss9 * dscqss_dsc[334] +
           dwdot7dscqss11 * dscqss_dsc[404] + dwdot7dscqss12 * dscqss_dsc[439] +
           dwdot7dscqss14 * dscqss_dsc[509] + dwdot7dscqss13 * dscqss_dsc[474] +
           dwdot7dscqss15 * dscqss_dsc[544] + dwdot7dscqss8 * dscqss_dsc[299] +
           dwdot7dscqss10 * dscqss_dsc[369];
  J[727] = dwdot7dsc20 + dwdot7dscqss0 * dscqss_dsc[20] +
           dwdot7dscqss16 * dscqss_dsc[580] + dwdot7dscqss1 * dscqss_dsc[55] +
           dwdot7dscqss17 * dscqss_dsc[615] + dwdot7dscqss2 * dscqss_dsc[90] +
           dwdot7dscqss3 * dscqss_dsc[125] + dwdot7dscqss4 * dscqss_dsc[160] +
           dwdot7dscqss5 * dscqss_dsc[195] + dwdot7dscqss6 * dscqss_dsc[230] +
           dwdot7dscqss7 * dscqss_dsc[265] + dwdot7dscqss9 * dscqss_dsc[335] +
           dwdot7dscqss11 * dscqss_dsc[405] + dwdot7dscqss12 * dscqss_dsc[440] +
           dwdot7dscqss14 * dscqss_dsc[510] + dwdot7dscqss13 * dscqss_dsc[475] +
           dwdot7dscqss15 * dscqss_dsc[545] + dwdot7dscqss8 * dscqss_dsc[300] +
           dwdot7dscqss10 * dscqss_dsc[370];
  J[763] = dwdot7dsc21 + dwdot7dscqss0 * dscqss_dsc[21] +
           dwdot7dscqss16 * dscqss_dsc[581] + dwdot7dscqss1 * dscqss_dsc[56] +
           dwdot7dscqss17 * dscqss_dsc[616] + dwdot7dscqss2 * dscqss_dsc[91] +
           dwdot7dscqss3 * dscqss_dsc[126] + dwdot7dscqss4 * dscqss_dsc[161] +
           dwdot7dscqss5 * dscqss_dsc[196] + dwdot7dscqss6 * dscqss_dsc[231] +
           dwdot7dscqss7 * dscqss_dsc[266] + dwdot7dscqss9 * dscqss_dsc[336] +
           dwdot7dscqss11 * dscqss_dsc[406] + dwdot7dscqss12 * dscqss_dsc[441] +
           dwdot7dscqss14 * dscqss_dsc[511] + dwdot7dscqss13 * dscqss_dsc[476] +
           dwdot7dscqss15 * dscqss_dsc[546] + dwdot7dscqss8 * dscqss_dsc[301] +
           dwdot7dscqss10 * dscqss_dsc[371];
  J[799] = dwdot7dsc22 + dwdot7dscqss0 * dscqss_dsc[22] +
           dwdot7dscqss16 * dscqss_dsc[582] + dwdot7dscqss1 * dscqss_dsc[57] +
           dwdot7dscqss17 * dscqss_dsc[617] + dwdot7dscqss2 * dscqss_dsc[92] +
           dwdot7dscqss3 * dscqss_dsc[127] + dwdot7dscqss4 * dscqss_dsc[162] +
           dwdot7dscqss5 * dscqss_dsc[197] + dwdot7dscqss6 * dscqss_dsc[232] +
           dwdot7dscqss7 * dscqss_dsc[267] + dwdot7dscqss9 * dscqss_dsc[337] +
           dwdot7dscqss11 * dscqss_dsc[407] + dwdot7dscqss12 * dscqss_dsc[442] +
           dwdot7dscqss14 * dscqss_dsc[512] + dwdot7dscqss13 * dscqss_dsc[477] +
           dwdot7dscqss15 * dscqss_dsc[547] + dwdot7dscqss8 * dscqss_dsc[302] +
           dwdot7dscqss10 * dscqss_dsc[372];
  J[835] = dwdot7dsc23 + dwdot7dscqss0 * dscqss_dsc[23] +
           dwdot7dscqss16 * dscqss_dsc[583] + dwdot7dscqss1 * dscqss_dsc[58] +
           dwdot7dscqss17 * dscqss_dsc[618] + dwdot7dscqss2 * dscqss_dsc[93] +
           dwdot7dscqss3 * dscqss_dsc[128] + dwdot7dscqss4 * dscqss_dsc[163] +
           dwdot7dscqss5 * dscqss_dsc[198] + dwdot7dscqss6 * dscqss_dsc[233] +
           dwdot7dscqss7 * dscqss_dsc[268] + dwdot7dscqss9 * dscqss_dsc[338] +
           dwdot7dscqss11 * dscqss_dsc[408] + dwdot7dscqss12 * dscqss_dsc[443] +
           dwdot7dscqss14 * dscqss_dsc[513] + dwdot7dscqss13 * dscqss_dsc[478] +
           dwdot7dscqss15 * dscqss_dsc[548] + dwdot7dscqss8 * dscqss_dsc[303] +
           dwdot7dscqss10 * dscqss_dsc[373];
  J[871] = dwdot7dsc24 + dwdot7dscqss0 * dscqss_dsc[24] +
           dwdot7dscqss16 * dscqss_dsc[584] + dwdot7dscqss1 * dscqss_dsc[59] +
           dwdot7dscqss17 * dscqss_dsc[619] + dwdot7dscqss2 * dscqss_dsc[94] +
           dwdot7dscqss3 * dscqss_dsc[129] + dwdot7dscqss4 * dscqss_dsc[164] +
           dwdot7dscqss5 * dscqss_dsc[199] + dwdot7dscqss6 * dscqss_dsc[234] +
           dwdot7dscqss7 * dscqss_dsc[269] + dwdot7dscqss9 * dscqss_dsc[339] +
           dwdot7dscqss11 * dscqss_dsc[409] + dwdot7dscqss12 * dscqss_dsc[444] +
           dwdot7dscqss14 * dscqss_dsc[514] + dwdot7dscqss13 * dscqss_dsc[479] +
           dwdot7dscqss15 * dscqss_dsc[549] + dwdot7dscqss8 * dscqss_dsc[304] +
           dwdot7dscqss10 * dscqss_dsc[374];
  J[907] = dwdot7dsc25 + dwdot7dscqss0 * dscqss_dsc[25] +
           dwdot7dscqss16 * dscqss_dsc[585] + dwdot7dscqss1 * dscqss_dsc[60] +
           dwdot7dscqss17 * dscqss_dsc[620] + dwdot7dscqss2 * dscqss_dsc[95] +
           dwdot7dscqss3 * dscqss_dsc[130] + dwdot7dscqss4 * dscqss_dsc[165] +
           dwdot7dscqss5 * dscqss_dsc[200] + dwdot7dscqss6 * dscqss_dsc[235] +
           dwdot7dscqss7 * dscqss_dsc[270] + dwdot7dscqss9 * dscqss_dsc[340] +
           dwdot7dscqss11 * dscqss_dsc[410] + dwdot7dscqss12 * dscqss_dsc[445] +
           dwdot7dscqss14 * dscqss_dsc[515] + dwdot7dscqss13 * dscqss_dsc[480] +
           dwdot7dscqss15 * dscqss_dsc[550] + dwdot7dscqss8 * dscqss_dsc[305] +
           dwdot7dscqss10 * dscqss_dsc[375];
  J[943] = dwdot7dsc26 + dwdot7dscqss0 * dscqss_dsc[26] +
           dwdot7dscqss16 * dscqss_dsc[586] + dwdot7dscqss1 * dscqss_dsc[61] +
           dwdot7dscqss17 * dscqss_dsc[621] + dwdot7dscqss2 * dscqss_dsc[96] +
           dwdot7dscqss3 * dscqss_dsc[131] + dwdot7dscqss4 * dscqss_dsc[166] +
           dwdot7dscqss5 * dscqss_dsc[201] + dwdot7dscqss6 * dscqss_dsc[236] +
           dwdot7dscqss7 * dscqss_dsc[271] + dwdot7dscqss9 * dscqss_dsc[341] +
           dwdot7dscqss11 * dscqss_dsc[411] + dwdot7dscqss12 * dscqss_dsc[446] +
           dwdot7dscqss14 * dscqss_dsc[516] + dwdot7dscqss13 * dscqss_dsc[481] +
           dwdot7dscqss15 * dscqss_dsc[551] + dwdot7dscqss8 * dscqss_dsc[306] +
           dwdot7dscqss10 * dscqss_dsc[376];
  J[979] = dwdot7dsc27 + dwdot7dscqss0 * dscqss_dsc[27] +
           dwdot7dscqss16 * dscqss_dsc[587] + dwdot7dscqss1 * dscqss_dsc[62] +
           dwdot7dscqss17 * dscqss_dsc[622] + dwdot7dscqss2 * dscqss_dsc[97] +
           dwdot7dscqss3 * dscqss_dsc[132] + dwdot7dscqss4 * dscqss_dsc[167] +
           dwdot7dscqss5 * dscqss_dsc[202] + dwdot7dscqss6 * dscqss_dsc[237] +
           dwdot7dscqss7 * dscqss_dsc[272] + dwdot7dscqss9 * dscqss_dsc[342] +
           dwdot7dscqss11 * dscqss_dsc[412] + dwdot7dscqss12 * dscqss_dsc[447] +
           dwdot7dscqss14 * dscqss_dsc[517] + dwdot7dscqss13 * dscqss_dsc[482] +
           dwdot7dscqss15 * dscqss_dsc[552] + dwdot7dscqss8 * dscqss_dsc[307] +
           dwdot7dscqss10 * dscqss_dsc[377];
  J[1015] =
    dwdot7dsc28 + dwdot7dscqss0 * dscqss_dsc[28] +
    dwdot7dscqss16 * dscqss_dsc[588] + dwdot7dscqss1 * dscqss_dsc[63] +
    dwdot7dscqss17 * dscqss_dsc[623] + dwdot7dscqss2 * dscqss_dsc[98] +
    dwdot7dscqss3 * dscqss_dsc[133] + dwdot7dscqss4 * dscqss_dsc[168] +
    dwdot7dscqss5 * dscqss_dsc[203] + dwdot7dscqss6 * dscqss_dsc[238] +
    dwdot7dscqss7 * dscqss_dsc[273] + dwdot7dscqss9 * dscqss_dsc[343] +
    dwdot7dscqss11 * dscqss_dsc[413] + dwdot7dscqss12 * dscqss_dsc[448] +
    dwdot7dscqss14 * dscqss_dsc[518] + dwdot7dscqss13 * dscqss_dsc[483] +
    dwdot7dscqss15 * dscqss_dsc[553] + dwdot7dscqss8 * dscqss_dsc[308] +
    dwdot7dscqss10 * dscqss_dsc[378];
  J[1051] =
    dwdot7dsc29 + dwdot7dscqss0 * dscqss_dsc[29] +
    dwdot7dscqss16 * dscqss_dsc[589] + dwdot7dscqss1 * dscqss_dsc[64] +
    dwdot7dscqss17 * dscqss_dsc[624] + dwdot7dscqss2 * dscqss_dsc[99] +
    dwdot7dscqss3 * dscqss_dsc[134] + dwdot7dscqss4 * dscqss_dsc[169] +
    dwdot7dscqss5 * dscqss_dsc[204] + dwdot7dscqss6 * dscqss_dsc[239] +
    dwdot7dscqss7 * dscqss_dsc[274] + dwdot7dscqss9 * dscqss_dsc[344] +
    dwdot7dscqss11 * dscqss_dsc[414] + dwdot7dscqss12 * dscqss_dsc[449] +
    dwdot7dscqss14 * dscqss_dsc[519] + dwdot7dscqss13 * dscqss_dsc[484] +
    dwdot7dscqss15 * dscqss_dsc[554] + dwdot7dscqss8 * dscqss_dsc[309] +
    dwdot7dscqss10 * dscqss_dsc[379];
  J[1087] =
    dwdot7dsc30 + dwdot7dscqss0 * dscqss_dsc[30] +
    dwdot7dscqss16 * dscqss_dsc[590] + dwdot7dscqss1 * dscqss_dsc[65] +
    dwdot7dscqss17 * dscqss_dsc[625] + dwdot7dscqss2 * dscqss_dsc[100] +
    dwdot7dscqss3 * dscqss_dsc[135] + dwdot7dscqss4 * dscqss_dsc[170] +
    dwdot7dscqss5 * dscqss_dsc[205] + dwdot7dscqss6 * dscqss_dsc[240] +
    dwdot7dscqss7 * dscqss_dsc[275] + dwdot7dscqss9 * dscqss_dsc[345] +
    dwdot7dscqss11 * dscqss_dsc[415] + dwdot7dscqss12 * dscqss_dsc[450] +
    dwdot7dscqss14 * dscqss_dsc[520] + dwdot7dscqss13 * dscqss_dsc[485] +
    dwdot7dscqss15 * dscqss_dsc[555] + dwdot7dscqss8 * dscqss_dsc[310] +
    dwdot7dscqss10 * dscqss_dsc[380];
  J[1123] =
    dwdot7dsc31 + dwdot7dscqss0 * dscqss_dsc[31] +
    dwdot7dscqss16 * dscqss_dsc[591] + dwdot7dscqss1 * dscqss_dsc[66] +
    dwdot7dscqss17 * dscqss_dsc[626] + dwdot7dscqss2 * dscqss_dsc[101] +
    dwdot7dscqss3 * dscqss_dsc[136] + dwdot7dscqss4 * dscqss_dsc[171] +
    dwdot7dscqss5 * dscqss_dsc[206] + dwdot7dscqss6 * dscqss_dsc[241] +
    dwdot7dscqss7 * dscqss_dsc[276] + dwdot7dscqss9 * dscqss_dsc[346] +
    dwdot7dscqss11 * dscqss_dsc[416] + dwdot7dscqss12 * dscqss_dsc[451] +
    dwdot7dscqss14 * dscqss_dsc[521] + dwdot7dscqss13 * dscqss_dsc[486] +
    dwdot7dscqss15 * dscqss_dsc[556] + dwdot7dscqss8 * dscqss_dsc[311] +
    dwdot7dscqss10 * dscqss_dsc[381];
  J[1159] =
    dwdot7dsc32 + dwdot7dscqss0 * dscqss_dsc[32] +
    dwdot7dscqss16 * dscqss_dsc[592] + dwdot7dscqss1 * dscqss_dsc[67] +
    dwdot7dscqss17 * dscqss_dsc[627] + dwdot7dscqss2 * dscqss_dsc[102] +
    dwdot7dscqss3 * dscqss_dsc[137] + dwdot7dscqss4 * dscqss_dsc[172] +
    dwdot7dscqss5 * dscqss_dsc[207] + dwdot7dscqss6 * dscqss_dsc[242] +
    dwdot7dscqss7 * dscqss_dsc[277] + dwdot7dscqss9 * dscqss_dsc[347] +
    dwdot7dscqss11 * dscqss_dsc[417] + dwdot7dscqss12 * dscqss_dsc[452] +
    dwdot7dscqss14 * dscqss_dsc[522] + dwdot7dscqss13 * dscqss_dsc[487] +
    dwdot7dscqss15 * dscqss_dsc[557] + dwdot7dscqss8 * dscqss_dsc[312] +
    dwdot7dscqss10 * dscqss_dsc[382];
  J[1195] =
    dwdot7dsc33 + dwdot7dscqss0 * dscqss_dsc[33] +
    dwdot7dscqss16 * dscqss_dsc[593] + dwdot7dscqss1 * dscqss_dsc[68] +
    dwdot7dscqss17 * dscqss_dsc[628] + dwdot7dscqss2 * dscqss_dsc[103] +
    dwdot7dscqss3 * dscqss_dsc[138] + dwdot7dscqss4 * dscqss_dsc[173] +
    dwdot7dscqss5 * dscqss_dsc[208] + dwdot7dscqss6 * dscqss_dsc[243] +
    dwdot7dscqss7 * dscqss_dsc[278] + dwdot7dscqss9 * dscqss_dsc[348] +
    dwdot7dscqss11 * dscqss_dsc[418] + dwdot7dscqss12 * dscqss_dsc[453] +
    dwdot7dscqss14 * dscqss_dsc[523] + dwdot7dscqss13 * dscqss_dsc[488] +
    dwdot7dscqss15 * dscqss_dsc[558] + dwdot7dscqss8 * dscqss_dsc[313] +
    dwdot7dscqss10 * dscqss_dsc[383];
  J[1231] =
    dwdot7dsc34 + dwdot7dscqss0 * dscqss_dsc[34] +
    dwdot7dscqss16 * dscqss_dsc[594] + dwdot7dscqss1 * dscqss_dsc[69] +
    dwdot7dscqss17 * dscqss_dsc[629] + dwdot7dscqss2 * dscqss_dsc[104] +
    dwdot7dscqss3 * dscqss_dsc[139] + dwdot7dscqss4 * dscqss_dsc[174] +
    dwdot7dscqss5 * dscqss_dsc[209] + dwdot7dscqss6 * dscqss_dsc[244] +
    dwdot7dscqss7 * dscqss_dsc[279] + dwdot7dscqss9 * dscqss_dsc[349] +
    dwdot7dscqss11 * dscqss_dsc[419] + dwdot7dscqss12 * dscqss_dsc[454] +
    dwdot7dscqss14 * dscqss_dsc[524] + dwdot7dscqss13 * dscqss_dsc[489] +
    dwdot7dscqss15 * dscqss_dsc[559] + dwdot7dscqss8 * dscqss_dsc[314] +
    dwdot7dscqss10 * dscqss_dsc[384];
  J[8] = dwdot8dsc0 + dwdot8dscqss0 * dscqss_dsc[0] +
         dwdot8dscqss16 * dscqss_dsc[560] + dwdot8dscqss1 * dscqss_dsc[35] +
         dwdot8dscqss17 * dscqss_dsc[595] + dwdot8dscqss2 * dscqss_dsc[70] +
         dwdot8dscqss3 * dscqss_dsc[105] + dwdot8dscqss4 * dscqss_dsc[140] +
         dwdot8dscqss5 * dscqss_dsc[175] + dwdot8dscqss6 * dscqss_dsc[210] +
         dwdot8dscqss7 * dscqss_dsc[245] + dwdot8dscqss9 * dscqss_dsc[315] +
         dwdot8dscqss11 * dscqss_dsc[385] + dwdot8dscqss12 * dscqss_dsc[420] +
         dwdot8dscqss14 * dscqss_dsc[490] + dwdot8dscqss13 * dscqss_dsc[455] +
         dwdot8dscqss15 * dscqss_dsc[525] + dwdot8dscqss8 * dscqss_dsc[280] +
         dwdot8dscqss10 * dscqss_dsc[350];
  J[44] = dwdot8dsc1 + dwdot8dscqss0 * dscqss_dsc[1] +
          dwdot8dscqss16 * dscqss_dsc[561] + dwdot8dscqss1 * dscqss_dsc[36] +
          dwdot8dscqss17 * dscqss_dsc[596] + dwdot8dscqss2 * dscqss_dsc[71] +
          dwdot8dscqss3 * dscqss_dsc[106] + dwdot8dscqss4 * dscqss_dsc[141] +
          dwdot8dscqss5 * dscqss_dsc[176] + dwdot8dscqss6 * dscqss_dsc[211] +
          dwdot8dscqss7 * dscqss_dsc[246] + dwdot8dscqss9 * dscqss_dsc[316] +
          dwdot8dscqss11 * dscqss_dsc[386] + dwdot8dscqss12 * dscqss_dsc[421] +
          dwdot8dscqss14 * dscqss_dsc[491] + dwdot8dscqss13 * dscqss_dsc[456] +
          dwdot8dscqss15 * dscqss_dsc[526] + dwdot8dscqss8 * dscqss_dsc[281] +
          dwdot8dscqss10 * dscqss_dsc[351];
  J[80] = dwdot8dsc2 + dwdot8dscqss0 * dscqss_dsc[2] +
          dwdot8dscqss16 * dscqss_dsc[562] + dwdot8dscqss1 * dscqss_dsc[37] +
          dwdot8dscqss17 * dscqss_dsc[597] + dwdot8dscqss2 * dscqss_dsc[72] +
          dwdot8dscqss3 * dscqss_dsc[107] + dwdot8dscqss4 * dscqss_dsc[142] +
          dwdot8dscqss5 * dscqss_dsc[177] + dwdot8dscqss6 * dscqss_dsc[212] +
          dwdot8dscqss7 * dscqss_dsc[247] + dwdot8dscqss9 * dscqss_dsc[317] +
          dwdot8dscqss11 * dscqss_dsc[387] + dwdot8dscqss12 * dscqss_dsc[422] +
          dwdot8dscqss14 * dscqss_dsc[492] + dwdot8dscqss13 * dscqss_dsc[457] +
          dwdot8dscqss15 * dscqss_dsc[527] + dwdot8dscqss8 * dscqss_dsc[282] +
          dwdot8dscqss10 * dscqss_dsc[352];
  J[116] = dwdot8dsc3 + dwdot8dscqss0 * dscqss_dsc[3] +
           dwdot8dscqss16 * dscqss_dsc[563] + dwdot8dscqss1 * dscqss_dsc[38] +
           dwdot8dscqss17 * dscqss_dsc[598] + dwdot8dscqss2 * dscqss_dsc[73] +
           dwdot8dscqss3 * dscqss_dsc[108] + dwdot8dscqss4 * dscqss_dsc[143] +
           dwdot8dscqss5 * dscqss_dsc[178] + dwdot8dscqss6 * dscqss_dsc[213] +
           dwdot8dscqss7 * dscqss_dsc[248] + dwdot8dscqss9 * dscqss_dsc[318] +
           dwdot8dscqss11 * dscqss_dsc[388] + dwdot8dscqss12 * dscqss_dsc[423] +
           dwdot8dscqss14 * dscqss_dsc[493] + dwdot8dscqss13 * dscqss_dsc[458] +
           dwdot8dscqss15 * dscqss_dsc[528] + dwdot8dscqss8 * dscqss_dsc[283] +
           dwdot8dscqss10 * dscqss_dsc[353];
  J[152] = dwdot8dsc4 + dwdot8dscqss0 * dscqss_dsc[4] +
           dwdot8dscqss16 * dscqss_dsc[564] + dwdot8dscqss1 * dscqss_dsc[39] +
           dwdot8dscqss17 * dscqss_dsc[599] + dwdot8dscqss2 * dscqss_dsc[74] +
           dwdot8dscqss3 * dscqss_dsc[109] + dwdot8dscqss4 * dscqss_dsc[144] +
           dwdot8dscqss5 * dscqss_dsc[179] + dwdot8dscqss6 * dscqss_dsc[214] +
           dwdot8dscqss7 * dscqss_dsc[249] + dwdot8dscqss9 * dscqss_dsc[319] +
           dwdot8dscqss11 * dscqss_dsc[389] + dwdot8dscqss12 * dscqss_dsc[424] +
           dwdot8dscqss14 * dscqss_dsc[494] + dwdot8dscqss13 * dscqss_dsc[459] +
           dwdot8dscqss15 * dscqss_dsc[529] + dwdot8dscqss8 * dscqss_dsc[284] +
           dwdot8dscqss10 * dscqss_dsc[354];
  J[188] = dwdot8dsc5 + dwdot8dscqss0 * dscqss_dsc[5] +
           dwdot8dscqss16 * dscqss_dsc[565] + dwdot8dscqss1 * dscqss_dsc[40] +
           dwdot8dscqss17 * dscqss_dsc[600] + dwdot8dscqss2 * dscqss_dsc[75] +
           dwdot8dscqss3 * dscqss_dsc[110] + dwdot8dscqss4 * dscqss_dsc[145] +
           dwdot8dscqss5 * dscqss_dsc[180] + dwdot8dscqss6 * dscqss_dsc[215] +
           dwdot8dscqss7 * dscqss_dsc[250] + dwdot8dscqss9 * dscqss_dsc[320] +
           dwdot8dscqss11 * dscqss_dsc[390] + dwdot8dscqss12 * dscqss_dsc[425] +
           dwdot8dscqss14 * dscqss_dsc[495] + dwdot8dscqss13 * dscqss_dsc[460] +
           dwdot8dscqss15 * dscqss_dsc[530] + dwdot8dscqss8 * dscqss_dsc[285] +
           dwdot8dscqss10 * dscqss_dsc[355];
  J[224] = dwdot8dsc6 + dwdot8dscqss0 * dscqss_dsc[6] +
           dwdot8dscqss16 * dscqss_dsc[566] + dwdot8dscqss1 * dscqss_dsc[41] +
           dwdot8dscqss17 * dscqss_dsc[601] + dwdot8dscqss2 * dscqss_dsc[76] +
           dwdot8dscqss3 * dscqss_dsc[111] + dwdot8dscqss4 * dscqss_dsc[146] +
           dwdot8dscqss5 * dscqss_dsc[181] + dwdot8dscqss6 * dscqss_dsc[216] +
           dwdot8dscqss7 * dscqss_dsc[251] + dwdot8dscqss9 * dscqss_dsc[321] +
           dwdot8dscqss11 * dscqss_dsc[391] + dwdot8dscqss12 * dscqss_dsc[426] +
           dwdot8dscqss14 * dscqss_dsc[496] + dwdot8dscqss13 * dscqss_dsc[461] +
           dwdot8dscqss15 * dscqss_dsc[531] + dwdot8dscqss8 * dscqss_dsc[286] +
           dwdot8dscqss10 * dscqss_dsc[356];
  J[260] = dwdot8dsc7 + dwdot8dscqss0 * dscqss_dsc[7] +
           dwdot8dscqss16 * dscqss_dsc[567] + dwdot8dscqss1 * dscqss_dsc[42] +
           dwdot8dscqss17 * dscqss_dsc[602] + dwdot8dscqss2 * dscqss_dsc[77] +
           dwdot8dscqss3 * dscqss_dsc[112] + dwdot8dscqss4 * dscqss_dsc[147] +
           dwdot8dscqss5 * dscqss_dsc[182] + dwdot8dscqss6 * dscqss_dsc[217] +
           dwdot8dscqss7 * dscqss_dsc[252] + dwdot8dscqss9 * dscqss_dsc[322] +
           dwdot8dscqss11 * dscqss_dsc[392] + dwdot8dscqss12 * dscqss_dsc[427] +
           dwdot8dscqss14 * dscqss_dsc[497] + dwdot8dscqss13 * dscqss_dsc[462] +
           dwdot8dscqss15 * dscqss_dsc[532] + dwdot8dscqss8 * dscqss_dsc[287] +
           dwdot8dscqss10 * dscqss_dsc[357];
  J[296] = dwdot8dsc8 + dwdot8dscqss0 * dscqss_dsc[8] +
           dwdot8dscqss16 * dscqss_dsc[568] + dwdot8dscqss1 * dscqss_dsc[43] +
           dwdot8dscqss17 * dscqss_dsc[603] + dwdot8dscqss2 * dscqss_dsc[78] +
           dwdot8dscqss3 * dscqss_dsc[113] + dwdot8dscqss4 * dscqss_dsc[148] +
           dwdot8dscqss5 * dscqss_dsc[183] + dwdot8dscqss6 * dscqss_dsc[218] +
           dwdot8dscqss7 * dscqss_dsc[253] + dwdot8dscqss9 * dscqss_dsc[323] +
           dwdot8dscqss11 * dscqss_dsc[393] + dwdot8dscqss12 * dscqss_dsc[428] +
           dwdot8dscqss14 * dscqss_dsc[498] + dwdot8dscqss13 * dscqss_dsc[463] +
           dwdot8dscqss15 * dscqss_dsc[533] + dwdot8dscqss8 * dscqss_dsc[288] +
           dwdot8dscqss10 * dscqss_dsc[358];
  J[332] = dwdot8dsc9 + dwdot8dscqss0 * dscqss_dsc[9] +
           dwdot8dscqss16 * dscqss_dsc[569] + dwdot8dscqss1 * dscqss_dsc[44] +
           dwdot8dscqss17 * dscqss_dsc[604] + dwdot8dscqss2 * dscqss_dsc[79] +
           dwdot8dscqss3 * dscqss_dsc[114] + dwdot8dscqss4 * dscqss_dsc[149] +
           dwdot8dscqss5 * dscqss_dsc[184] + dwdot8dscqss6 * dscqss_dsc[219] +
           dwdot8dscqss7 * dscqss_dsc[254] + dwdot8dscqss9 * dscqss_dsc[324] +
           dwdot8dscqss11 * dscqss_dsc[394] + dwdot8dscqss12 * dscqss_dsc[429] +
           dwdot8dscqss14 * dscqss_dsc[499] + dwdot8dscqss13 * dscqss_dsc[464] +
           dwdot8dscqss15 * dscqss_dsc[534] + dwdot8dscqss8 * dscqss_dsc[289] +
           dwdot8dscqss10 * dscqss_dsc[359];
  J[368] = dwdot8dsc10 + dwdot8dscqss0 * dscqss_dsc[10] +
           dwdot8dscqss16 * dscqss_dsc[570] + dwdot8dscqss1 * dscqss_dsc[45] +
           dwdot8dscqss17 * dscqss_dsc[605] + dwdot8dscqss2 * dscqss_dsc[80] +
           dwdot8dscqss3 * dscqss_dsc[115] + dwdot8dscqss4 * dscqss_dsc[150] +
           dwdot8dscqss5 * dscqss_dsc[185] + dwdot8dscqss6 * dscqss_dsc[220] +
           dwdot8dscqss7 * dscqss_dsc[255] + dwdot8dscqss9 * dscqss_dsc[325] +
           dwdot8dscqss11 * dscqss_dsc[395] + dwdot8dscqss12 * dscqss_dsc[430] +
           dwdot8dscqss14 * dscqss_dsc[500] + dwdot8dscqss13 * dscqss_dsc[465] +
           dwdot8dscqss15 * dscqss_dsc[535] + dwdot8dscqss8 * dscqss_dsc[290] +
           dwdot8dscqss10 * dscqss_dsc[360];
  J[404] = dwdot8dsc11 + dwdot8dscqss0 * dscqss_dsc[11] +
           dwdot8dscqss16 * dscqss_dsc[571] + dwdot8dscqss1 * dscqss_dsc[46] +
           dwdot8dscqss17 * dscqss_dsc[606] + dwdot8dscqss2 * dscqss_dsc[81] +
           dwdot8dscqss3 * dscqss_dsc[116] + dwdot8dscqss4 * dscqss_dsc[151] +
           dwdot8dscqss5 * dscqss_dsc[186] + dwdot8dscqss6 * dscqss_dsc[221] +
           dwdot8dscqss7 * dscqss_dsc[256] + dwdot8dscqss9 * dscqss_dsc[326] +
           dwdot8dscqss11 * dscqss_dsc[396] + dwdot8dscqss12 * dscqss_dsc[431] +
           dwdot8dscqss14 * dscqss_dsc[501] + dwdot8dscqss13 * dscqss_dsc[466] +
           dwdot8dscqss15 * dscqss_dsc[536] + dwdot8dscqss8 * dscqss_dsc[291] +
           dwdot8dscqss10 * dscqss_dsc[361];
  J[440] = dwdot8dsc12 + dwdot8dscqss0 * dscqss_dsc[12] +
           dwdot8dscqss16 * dscqss_dsc[572] + dwdot8dscqss1 * dscqss_dsc[47] +
           dwdot8dscqss17 * dscqss_dsc[607] + dwdot8dscqss2 * dscqss_dsc[82] +
           dwdot8dscqss3 * dscqss_dsc[117] + dwdot8dscqss4 * dscqss_dsc[152] +
           dwdot8dscqss5 * dscqss_dsc[187] + dwdot8dscqss6 * dscqss_dsc[222] +
           dwdot8dscqss7 * dscqss_dsc[257] + dwdot8dscqss9 * dscqss_dsc[327] +
           dwdot8dscqss11 * dscqss_dsc[397] + dwdot8dscqss12 * dscqss_dsc[432] +
           dwdot8dscqss14 * dscqss_dsc[502] + dwdot8dscqss13 * dscqss_dsc[467] +
           dwdot8dscqss15 * dscqss_dsc[537] + dwdot8dscqss8 * dscqss_dsc[292] +
           dwdot8dscqss10 * dscqss_dsc[362];
  J[476] = dwdot8dsc13 + dwdot8dscqss0 * dscqss_dsc[13] +
           dwdot8dscqss16 * dscqss_dsc[573] + dwdot8dscqss1 * dscqss_dsc[48] +
           dwdot8dscqss17 * dscqss_dsc[608] + dwdot8dscqss2 * dscqss_dsc[83] +
           dwdot8dscqss3 * dscqss_dsc[118] + dwdot8dscqss4 * dscqss_dsc[153] +
           dwdot8dscqss5 * dscqss_dsc[188] + dwdot8dscqss6 * dscqss_dsc[223] +
           dwdot8dscqss7 * dscqss_dsc[258] + dwdot8dscqss9 * dscqss_dsc[328] +
           dwdot8dscqss11 * dscqss_dsc[398] + dwdot8dscqss12 * dscqss_dsc[433] +
           dwdot8dscqss14 * dscqss_dsc[503] + dwdot8dscqss13 * dscqss_dsc[468] +
           dwdot8dscqss15 * dscqss_dsc[538] + dwdot8dscqss8 * dscqss_dsc[293] +
           dwdot8dscqss10 * dscqss_dsc[363];
  J[512] = dwdot8dsc14 + dwdot8dscqss0 * dscqss_dsc[14] +
           dwdot8dscqss16 * dscqss_dsc[574] + dwdot8dscqss1 * dscqss_dsc[49] +
           dwdot8dscqss17 * dscqss_dsc[609] + dwdot8dscqss2 * dscqss_dsc[84] +
           dwdot8dscqss3 * dscqss_dsc[119] + dwdot8dscqss4 * dscqss_dsc[154] +
           dwdot8dscqss5 * dscqss_dsc[189] + dwdot8dscqss6 * dscqss_dsc[224] +
           dwdot8dscqss7 * dscqss_dsc[259] + dwdot8dscqss9 * dscqss_dsc[329] +
           dwdot8dscqss11 * dscqss_dsc[399] + dwdot8dscqss12 * dscqss_dsc[434] +
           dwdot8dscqss14 * dscqss_dsc[504] + dwdot8dscqss13 * dscqss_dsc[469] +
           dwdot8dscqss15 * dscqss_dsc[539] + dwdot8dscqss8 * dscqss_dsc[294] +
           dwdot8dscqss10 * dscqss_dsc[364];
  J[548] = dwdot8dsc15 + dwdot8dscqss0 * dscqss_dsc[15] +
           dwdot8dscqss16 * dscqss_dsc[575] + dwdot8dscqss1 * dscqss_dsc[50] +
           dwdot8dscqss17 * dscqss_dsc[610] + dwdot8dscqss2 * dscqss_dsc[85] +
           dwdot8dscqss3 * dscqss_dsc[120] + dwdot8dscqss4 * dscqss_dsc[155] +
           dwdot8dscqss5 * dscqss_dsc[190] + dwdot8dscqss6 * dscqss_dsc[225] +
           dwdot8dscqss7 * dscqss_dsc[260] + dwdot8dscqss9 * dscqss_dsc[330] +
           dwdot8dscqss11 * dscqss_dsc[400] + dwdot8dscqss12 * dscqss_dsc[435] +
           dwdot8dscqss14 * dscqss_dsc[505] + dwdot8dscqss13 * dscqss_dsc[470] +
           dwdot8dscqss15 * dscqss_dsc[540] + dwdot8dscqss8 * dscqss_dsc[295] +
           dwdot8dscqss10 * dscqss_dsc[365];
  J[584] = dwdot8dsc16 + dwdot8dscqss0 * dscqss_dsc[16] +
           dwdot8dscqss16 * dscqss_dsc[576] + dwdot8dscqss1 * dscqss_dsc[51] +
           dwdot8dscqss17 * dscqss_dsc[611] + dwdot8dscqss2 * dscqss_dsc[86] +
           dwdot8dscqss3 * dscqss_dsc[121] + dwdot8dscqss4 * dscqss_dsc[156] +
           dwdot8dscqss5 * dscqss_dsc[191] + dwdot8dscqss6 * dscqss_dsc[226] +
           dwdot8dscqss7 * dscqss_dsc[261] + dwdot8dscqss9 * dscqss_dsc[331] +
           dwdot8dscqss11 * dscqss_dsc[401] + dwdot8dscqss12 * dscqss_dsc[436] +
           dwdot8dscqss14 * dscqss_dsc[506] + dwdot8dscqss13 * dscqss_dsc[471] +
           dwdot8dscqss15 * dscqss_dsc[541] + dwdot8dscqss8 * dscqss_dsc[296] +
           dwdot8dscqss10 * dscqss_dsc[366];
  J[620] = dwdot8dsc17 + dwdot8dscqss0 * dscqss_dsc[17] +
           dwdot8dscqss16 * dscqss_dsc[577] + dwdot8dscqss1 * dscqss_dsc[52] +
           dwdot8dscqss17 * dscqss_dsc[612] + dwdot8dscqss2 * dscqss_dsc[87] +
           dwdot8dscqss3 * dscqss_dsc[122] + dwdot8dscqss4 * dscqss_dsc[157] +
           dwdot8dscqss5 * dscqss_dsc[192] + dwdot8dscqss6 * dscqss_dsc[227] +
           dwdot8dscqss7 * dscqss_dsc[262] + dwdot8dscqss9 * dscqss_dsc[332] +
           dwdot8dscqss11 * dscqss_dsc[402] + dwdot8dscqss12 * dscqss_dsc[437] +
           dwdot8dscqss14 * dscqss_dsc[507] + dwdot8dscqss13 * dscqss_dsc[472] +
           dwdot8dscqss15 * dscqss_dsc[542] + dwdot8dscqss8 * dscqss_dsc[297] +
           dwdot8dscqss10 * dscqss_dsc[367];
  J[656] = dwdot8dsc18 + dwdot8dscqss0 * dscqss_dsc[18] +
           dwdot8dscqss16 * dscqss_dsc[578] + dwdot8dscqss1 * dscqss_dsc[53] +
           dwdot8dscqss17 * dscqss_dsc[613] + dwdot8dscqss2 * dscqss_dsc[88] +
           dwdot8dscqss3 * dscqss_dsc[123] + dwdot8dscqss4 * dscqss_dsc[158] +
           dwdot8dscqss5 * dscqss_dsc[193] + dwdot8dscqss6 * dscqss_dsc[228] +
           dwdot8dscqss7 * dscqss_dsc[263] + dwdot8dscqss9 * dscqss_dsc[333] +
           dwdot8dscqss11 * dscqss_dsc[403] + dwdot8dscqss12 * dscqss_dsc[438] +
           dwdot8dscqss14 * dscqss_dsc[508] + dwdot8dscqss13 * dscqss_dsc[473] +
           dwdot8dscqss15 * dscqss_dsc[543] + dwdot8dscqss8 * dscqss_dsc[298] +
           dwdot8dscqss10 * dscqss_dsc[368];
  J[692] = dwdot8dsc19 + dwdot8dscqss0 * dscqss_dsc[19] +
           dwdot8dscqss16 * dscqss_dsc[579] + dwdot8dscqss1 * dscqss_dsc[54] +
           dwdot8dscqss17 * dscqss_dsc[614] + dwdot8dscqss2 * dscqss_dsc[89] +
           dwdot8dscqss3 * dscqss_dsc[124] + dwdot8dscqss4 * dscqss_dsc[159] +
           dwdot8dscqss5 * dscqss_dsc[194] + dwdot8dscqss6 * dscqss_dsc[229] +
           dwdot8dscqss7 * dscqss_dsc[264] + dwdot8dscqss9 * dscqss_dsc[334] +
           dwdot8dscqss11 * dscqss_dsc[404] + dwdot8dscqss12 * dscqss_dsc[439] +
           dwdot8dscqss14 * dscqss_dsc[509] + dwdot8dscqss13 * dscqss_dsc[474] +
           dwdot8dscqss15 * dscqss_dsc[544] + dwdot8dscqss8 * dscqss_dsc[299] +
           dwdot8dscqss10 * dscqss_dsc[369];
  J[728] = dwdot8dsc20 + dwdot8dscqss0 * dscqss_dsc[20] +
           dwdot8dscqss16 * dscqss_dsc[580] + dwdot8dscqss1 * dscqss_dsc[55] +
           dwdot8dscqss17 * dscqss_dsc[615] + dwdot8dscqss2 * dscqss_dsc[90] +
           dwdot8dscqss3 * dscqss_dsc[125] + dwdot8dscqss4 * dscqss_dsc[160] +
           dwdot8dscqss5 * dscqss_dsc[195] + dwdot8dscqss6 * dscqss_dsc[230] +
           dwdot8dscqss7 * dscqss_dsc[265] + dwdot8dscqss9 * dscqss_dsc[335] +
           dwdot8dscqss11 * dscqss_dsc[405] + dwdot8dscqss12 * dscqss_dsc[440] +
           dwdot8dscqss14 * dscqss_dsc[510] + dwdot8dscqss13 * dscqss_dsc[475] +
           dwdot8dscqss15 * dscqss_dsc[545] + dwdot8dscqss8 * dscqss_dsc[300] +
           dwdot8dscqss10 * dscqss_dsc[370];
  J[764] = dwdot8dsc21 + dwdot8dscqss0 * dscqss_dsc[21] +
           dwdot8dscqss16 * dscqss_dsc[581] + dwdot8dscqss1 * dscqss_dsc[56] +
           dwdot8dscqss17 * dscqss_dsc[616] + dwdot8dscqss2 * dscqss_dsc[91] +
           dwdot8dscqss3 * dscqss_dsc[126] + dwdot8dscqss4 * dscqss_dsc[161] +
           dwdot8dscqss5 * dscqss_dsc[196] + dwdot8dscqss6 * dscqss_dsc[231] +
           dwdot8dscqss7 * dscqss_dsc[266] + dwdot8dscqss9 * dscqss_dsc[336] +
           dwdot8dscqss11 * dscqss_dsc[406] + dwdot8dscqss12 * dscqss_dsc[441] +
           dwdot8dscqss14 * dscqss_dsc[511] + dwdot8dscqss13 * dscqss_dsc[476] +
           dwdot8dscqss15 * dscqss_dsc[546] + dwdot8dscqss8 * dscqss_dsc[301] +
           dwdot8dscqss10 * dscqss_dsc[371];
  J[800] = dwdot8dsc22 + dwdot8dscqss0 * dscqss_dsc[22] +
           dwdot8dscqss16 * dscqss_dsc[582] + dwdot8dscqss1 * dscqss_dsc[57] +
           dwdot8dscqss17 * dscqss_dsc[617] + dwdot8dscqss2 * dscqss_dsc[92] +
           dwdot8dscqss3 * dscqss_dsc[127] + dwdot8dscqss4 * dscqss_dsc[162] +
           dwdot8dscqss5 * dscqss_dsc[197] + dwdot8dscqss6 * dscqss_dsc[232] +
           dwdot8dscqss7 * dscqss_dsc[267] + dwdot8dscqss9 * dscqss_dsc[337] +
           dwdot8dscqss11 * dscqss_dsc[407] + dwdot8dscqss12 * dscqss_dsc[442] +
           dwdot8dscqss14 * dscqss_dsc[512] + dwdot8dscqss13 * dscqss_dsc[477] +
           dwdot8dscqss15 * dscqss_dsc[547] + dwdot8dscqss8 * dscqss_dsc[302] +
           dwdot8dscqss10 * dscqss_dsc[372];
  J[836] = dwdot8dsc23 + dwdot8dscqss0 * dscqss_dsc[23] +
           dwdot8dscqss16 * dscqss_dsc[583] + dwdot8dscqss1 * dscqss_dsc[58] +
           dwdot8dscqss17 * dscqss_dsc[618] + dwdot8dscqss2 * dscqss_dsc[93] +
           dwdot8dscqss3 * dscqss_dsc[128] + dwdot8dscqss4 * dscqss_dsc[163] +
           dwdot8dscqss5 * dscqss_dsc[198] + dwdot8dscqss6 * dscqss_dsc[233] +
           dwdot8dscqss7 * dscqss_dsc[268] + dwdot8dscqss9 * dscqss_dsc[338] +
           dwdot8dscqss11 * dscqss_dsc[408] + dwdot8dscqss12 * dscqss_dsc[443] +
           dwdot8dscqss14 * dscqss_dsc[513] + dwdot8dscqss13 * dscqss_dsc[478] +
           dwdot8dscqss15 * dscqss_dsc[548] + dwdot8dscqss8 * dscqss_dsc[303] +
           dwdot8dscqss10 * dscqss_dsc[373];
  J[872] = dwdot8dsc24 + dwdot8dscqss0 * dscqss_dsc[24] +
           dwdot8dscqss16 * dscqss_dsc[584] + dwdot8dscqss1 * dscqss_dsc[59] +
           dwdot8dscqss17 * dscqss_dsc[619] + dwdot8dscqss2 * dscqss_dsc[94] +
           dwdot8dscqss3 * dscqss_dsc[129] + dwdot8dscqss4 * dscqss_dsc[164] +
           dwdot8dscqss5 * dscqss_dsc[199] + dwdot8dscqss6 * dscqss_dsc[234] +
           dwdot8dscqss7 * dscqss_dsc[269] + dwdot8dscqss9 * dscqss_dsc[339] +
           dwdot8dscqss11 * dscqss_dsc[409] + dwdot8dscqss12 * dscqss_dsc[444] +
           dwdot8dscqss14 * dscqss_dsc[514] + dwdot8dscqss13 * dscqss_dsc[479] +
           dwdot8dscqss15 * dscqss_dsc[549] + dwdot8dscqss8 * dscqss_dsc[304] +
           dwdot8dscqss10 * dscqss_dsc[374];
  J[908] = dwdot8dsc25 + dwdot8dscqss0 * dscqss_dsc[25] +
           dwdot8dscqss16 * dscqss_dsc[585] + dwdot8dscqss1 * dscqss_dsc[60] +
           dwdot8dscqss17 * dscqss_dsc[620] + dwdot8dscqss2 * dscqss_dsc[95] +
           dwdot8dscqss3 * dscqss_dsc[130] + dwdot8dscqss4 * dscqss_dsc[165] +
           dwdot8dscqss5 * dscqss_dsc[200] + dwdot8dscqss6 * dscqss_dsc[235] +
           dwdot8dscqss7 * dscqss_dsc[270] + dwdot8dscqss9 * dscqss_dsc[340] +
           dwdot8dscqss11 * dscqss_dsc[410] + dwdot8dscqss12 * dscqss_dsc[445] +
           dwdot8dscqss14 * dscqss_dsc[515] + dwdot8dscqss13 * dscqss_dsc[480] +
           dwdot8dscqss15 * dscqss_dsc[550] + dwdot8dscqss8 * dscqss_dsc[305] +
           dwdot8dscqss10 * dscqss_dsc[375];
  J[944] = dwdot8dsc26 + dwdot8dscqss0 * dscqss_dsc[26] +
           dwdot8dscqss16 * dscqss_dsc[586] + dwdot8dscqss1 * dscqss_dsc[61] +
           dwdot8dscqss17 * dscqss_dsc[621] + dwdot8dscqss2 * dscqss_dsc[96] +
           dwdot8dscqss3 * dscqss_dsc[131] + dwdot8dscqss4 * dscqss_dsc[166] +
           dwdot8dscqss5 * dscqss_dsc[201] + dwdot8dscqss6 * dscqss_dsc[236] +
           dwdot8dscqss7 * dscqss_dsc[271] + dwdot8dscqss9 * dscqss_dsc[341] +
           dwdot8dscqss11 * dscqss_dsc[411] + dwdot8dscqss12 * dscqss_dsc[446] +
           dwdot8dscqss14 * dscqss_dsc[516] + dwdot8dscqss13 * dscqss_dsc[481] +
           dwdot8dscqss15 * dscqss_dsc[551] + dwdot8dscqss8 * dscqss_dsc[306] +
           dwdot8dscqss10 * dscqss_dsc[376];
  J[980] = dwdot8dsc27 + dwdot8dscqss0 * dscqss_dsc[27] +
           dwdot8dscqss16 * dscqss_dsc[587] + dwdot8dscqss1 * dscqss_dsc[62] +
           dwdot8dscqss17 * dscqss_dsc[622] + dwdot8dscqss2 * dscqss_dsc[97] +
           dwdot8dscqss3 * dscqss_dsc[132] + dwdot8dscqss4 * dscqss_dsc[167] +
           dwdot8dscqss5 * dscqss_dsc[202] + dwdot8dscqss6 * dscqss_dsc[237] +
           dwdot8dscqss7 * dscqss_dsc[272] + dwdot8dscqss9 * dscqss_dsc[342] +
           dwdot8dscqss11 * dscqss_dsc[412] + dwdot8dscqss12 * dscqss_dsc[447] +
           dwdot8dscqss14 * dscqss_dsc[517] + dwdot8dscqss13 * dscqss_dsc[482] +
           dwdot8dscqss15 * dscqss_dsc[552] + dwdot8dscqss8 * dscqss_dsc[307] +
           dwdot8dscqss10 * dscqss_dsc[377];
  J[1016] =
    dwdot8dsc28 + dwdot8dscqss0 * dscqss_dsc[28] +
    dwdot8dscqss16 * dscqss_dsc[588] + dwdot8dscqss1 * dscqss_dsc[63] +
    dwdot8dscqss17 * dscqss_dsc[623] + dwdot8dscqss2 * dscqss_dsc[98] +
    dwdot8dscqss3 * dscqss_dsc[133] + dwdot8dscqss4 * dscqss_dsc[168] +
    dwdot8dscqss5 * dscqss_dsc[203] + dwdot8dscqss6 * dscqss_dsc[238] +
    dwdot8dscqss7 * dscqss_dsc[273] + dwdot8dscqss9 * dscqss_dsc[343] +
    dwdot8dscqss11 * dscqss_dsc[413] + dwdot8dscqss12 * dscqss_dsc[448] +
    dwdot8dscqss14 * dscqss_dsc[518] + dwdot8dscqss13 * dscqss_dsc[483] +
    dwdot8dscqss15 * dscqss_dsc[553] + dwdot8dscqss8 * dscqss_dsc[308] +
    dwdot8dscqss10 * dscqss_dsc[378];
  J[1052] =
    dwdot8dsc29 + dwdot8dscqss0 * dscqss_dsc[29] +
    dwdot8dscqss16 * dscqss_dsc[589] + dwdot8dscqss1 * dscqss_dsc[64] +
    dwdot8dscqss17 * dscqss_dsc[624] + dwdot8dscqss2 * dscqss_dsc[99] +
    dwdot8dscqss3 * dscqss_dsc[134] + dwdot8dscqss4 * dscqss_dsc[169] +
    dwdot8dscqss5 * dscqss_dsc[204] + dwdot8dscqss6 * dscqss_dsc[239] +
    dwdot8dscqss7 * dscqss_dsc[274] + dwdot8dscqss9 * dscqss_dsc[344] +
    dwdot8dscqss11 * dscqss_dsc[414] + dwdot8dscqss12 * dscqss_dsc[449] +
    dwdot8dscqss14 * dscqss_dsc[519] + dwdot8dscqss13 * dscqss_dsc[484] +
    dwdot8dscqss15 * dscqss_dsc[554] + dwdot8dscqss8 * dscqss_dsc[309] +
    dwdot8dscqss10 * dscqss_dsc[379];
  J[1088] =
    dwdot8dsc30 + dwdot8dscqss0 * dscqss_dsc[30] +
    dwdot8dscqss16 * dscqss_dsc[590] + dwdot8dscqss1 * dscqss_dsc[65] +
    dwdot8dscqss17 * dscqss_dsc[625] + dwdot8dscqss2 * dscqss_dsc[100] +
    dwdot8dscqss3 * dscqss_dsc[135] + dwdot8dscqss4 * dscqss_dsc[170] +
    dwdot8dscqss5 * dscqss_dsc[205] + dwdot8dscqss6 * dscqss_dsc[240] +
    dwdot8dscqss7 * dscqss_dsc[275] + dwdot8dscqss9 * dscqss_dsc[345] +
    dwdot8dscqss11 * dscqss_dsc[415] + dwdot8dscqss12 * dscqss_dsc[450] +
    dwdot8dscqss14 * dscqss_dsc[520] + dwdot8dscqss13 * dscqss_dsc[485] +
    dwdot8dscqss15 * dscqss_dsc[555] + dwdot8dscqss8 * dscqss_dsc[310] +
    dwdot8dscqss10 * dscqss_dsc[380];
  J[1124] =
    dwdot8dsc31 + dwdot8dscqss0 * dscqss_dsc[31] +
    dwdot8dscqss16 * dscqss_dsc[591] + dwdot8dscqss1 * dscqss_dsc[66] +
    dwdot8dscqss17 * dscqss_dsc[626] + dwdot8dscqss2 * dscqss_dsc[101] +
    dwdot8dscqss3 * dscqss_dsc[136] + dwdot8dscqss4 * dscqss_dsc[171] +
    dwdot8dscqss5 * dscqss_dsc[206] + dwdot8dscqss6 * dscqss_dsc[241] +
    dwdot8dscqss7 * dscqss_dsc[276] + dwdot8dscqss9 * dscqss_dsc[346] +
    dwdot8dscqss11 * dscqss_dsc[416] + dwdot8dscqss12 * dscqss_dsc[451] +
    dwdot8dscqss14 * dscqss_dsc[521] + dwdot8dscqss13 * dscqss_dsc[486] +
    dwdot8dscqss15 * dscqss_dsc[556] + dwdot8dscqss8 * dscqss_dsc[311] +
    dwdot8dscqss10 * dscqss_dsc[381];
  J[1160] =
    dwdot8dsc32 + dwdot8dscqss0 * dscqss_dsc[32] +
    dwdot8dscqss16 * dscqss_dsc[592] + dwdot8dscqss1 * dscqss_dsc[67] +
    dwdot8dscqss17 * dscqss_dsc[627] + dwdot8dscqss2 * dscqss_dsc[102] +
    dwdot8dscqss3 * dscqss_dsc[137] + dwdot8dscqss4 * dscqss_dsc[172] +
    dwdot8dscqss5 * dscqss_dsc[207] + dwdot8dscqss6 * dscqss_dsc[242] +
    dwdot8dscqss7 * dscqss_dsc[277] + dwdot8dscqss9 * dscqss_dsc[347] +
    dwdot8dscqss11 * dscqss_dsc[417] + dwdot8dscqss12 * dscqss_dsc[452] +
    dwdot8dscqss14 * dscqss_dsc[522] + dwdot8dscqss13 * dscqss_dsc[487] +
    dwdot8dscqss15 * dscqss_dsc[557] + dwdot8dscqss8 * dscqss_dsc[312] +
    dwdot8dscqss10 * dscqss_dsc[382];
  J[1196] =
    dwdot8dsc33 + dwdot8dscqss0 * dscqss_dsc[33] +
    dwdot8dscqss16 * dscqss_dsc[593] + dwdot8dscqss1 * dscqss_dsc[68] +
    dwdot8dscqss17 * dscqss_dsc[628] + dwdot8dscqss2 * dscqss_dsc[103] +
    dwdot8dscqss3 * dscqss_dsc[138] + dwdot8dscqss4 * dscqss_dsc[173] +
    dwdot8dscqss5 * dscqss_dsc[208] + dwdot8dscqss6 * dscqss_dsc[243] +
    dwdot8dscqss7 * dscqss_dsc[278] + dwdot8dscqss9 * dscqss_dsc[348] +
    dwdot8dscqss11 * dscqss_dsc[418] + dwdot8dscqss12 * dscqss_dsc[453] +
    dwdot8dscqss14 * dscqss_dsc[523] + dwdot8dscqss13 * dscqss_dsc[488] +
    dwdot8dscqss15 * dscqss_dsc[558] + dwdot8dscqss8 * dscqss_dsc[313] +
    dwdot8dscqss10 * dscqss_dsc[383];
  J[1232] =
    dwdot8dsc34 + dwdot8dscqss0 * dscqss_dsc[34] +
    dwdot8dscqss16 * dscqss_dsc[594] + dwdot8dscqss1 * dscqss_dsc[69] +
    dwdot8dscqss17 * dscqss_dsc[629] + dwdot8dscqss2 * dscqss_dsc[104] +
    dwdot8dscqss3 * dscqss_dsc[139] + dwdot8dscqss4 * dscqss_dsc[174] +
    dwdot8dscqss5 * dscqss_dsc[209] + dwdot8dscqss6 * dscqss_dsc[244] +
    dwdot8dscqss7 * dscqss_dsc[279] + dwdot8dscqss9 * dscqss_dsc[349] +
    dwdot8dscqss11 * dscqss_dsc[419] + dwdot8dscqss12 * dscqss_dsc[454] +
    dwdot8dscqss14 * dscqss_dsc[524] + dwdot8dscqss13 * dscqss_dsc[489] +
    dwdot8dscqss15 * dscqss_dsc[559] + dwdot8dscqss8 * dscqss_dsc[314] +
    dwdot8dscqss10 * dscqss_dsc[384];
  J[9] = dwdot9dsc0 + dwdot9dscqss0 * dscqss_dsc[0] +
         dwdot9dscqss16 * dscqss_dsc[560] + dwdot9dscqss1 * dscqss_dsc[35] +
         dwdot9dscqss17 * dscqss_dsc[595] + dwdot9dscqss2 * dscqss_dsc[70] +
         dwdot9dscqss3 * dscqss_dsc[105] + dwdot9dscqss4 * dscqss_dsc[140] +
         dwdot9dscqss5 * dscqss_dsc[175] + dwdot9dscqss6 * dscqss_dsc[210] +
         dwdot9dscqss7 * dscqss_dsc[245] + dwdot9dscqss9 * dscqss_dsc[315] +
         dwdot9dscqss11 * dscqss_dsc[385] + dwdot9dscqss12 * dscqss_dsc[420] +
         dwdot9dscqss14 * dscqss_dsc[490] + dwdot9dscqss13 * dscqss_dsc[455] +
         dwdot9dscqss15 * dscqss_dsc[525] + dwdot9dscqss8 * dscqss_dsc[280] +
         dwdot9dscqss10 * dscqss_dsc[350];
  J[45] = dwdot9dsc1 + dwdot9dscqss0 * dscqss_dsc[1] +
          dwdot9dscqss16 * dscqss_dsc[561] + dwdot9dscqss1 * dscqss_dsc[36] +
          dwdot9dscqss17 * dscqss_dsc[596] + dwdot9dscqss2 * dscqss_dsc[71] +
          dwdot9dscqss3 * dscqss_dsc[106] + dwdot9dscqss4 * dscqss_dsc[141] +
          dwdot9dscqss5 * dscqss_dsc[176] + dwdot9dscqss6 * dscqss_dsc[211] +
          dwdot9dscqss7 * dscqss_dsc[246] + dwdot9dscqss9 * dscqss_dsc[316] +
          dwdot9dscqss11 * dscqss_dsc[386] + dwdot9dscqss12 * dscqss_dsc[421] +
          dwdot9dscqss14 * dscqss_dsc[491] + dwdot9dscqss13 * dscqss_dsc[456] +
          dwdot9dscqss15 * dscqss_dsc[526] + dwdot9dscqss8 * dscqss_dsc[281] +
          dwdot9dscqss10 * dscqss_dsc[351];
  J[81] = dwdot9dsc2 + dwdot9dscqss0 * dscqss_dsc[2] +
          dwdot9dscqss16 * dscqss_dsc[562] + dwdot9dscqss1 * dscqss_dsc[37] +
          dwdot9dscqss17 * dscqss_dsc[597] + dwdot9dscqss2 * dscqss_dsc[72] +
          dwdot9dscqss3 * dscqss_dsc[107] + dwdot9dscqss4 * dscqss_dsc[142] +
          dwdot9dscqss5 * dscqss_dsc[177] + dwdot9dscqss6 * dscqss_dsc[212] +
          dwdot9dscqss7 * dscqss_dsc[247] + dwdot9dscqss9 * dscqss_dsc[317] +
          dwdot9dscqss11 * dscqss_dsc[387] + dwdot9dscqss12 * dscqss_dsc[422] +
          dwdot9dscqss14 * dscqss_dsc[492] + dwdot9dscqss13 * dscqss_dsc[457] +
          dwdot9dscqss15 * dscqss_dsc[527] + dwdot9dscqss8 * dscqss_dsc[282] +
          dwdot9dscqss10 * dscqss_dsc[352];
  J[117] = dwdot9dsc3 + dwdot9dscqss0 * dscqss_dsc[3] +
           dwdot9dscqss16 * dscqss_dsc[563] + dwdot9dscqss1 * dscqss_dsc[38] +
           dwdot9dscqss17 * dscqss_dsc[598] + dwdot9dscqss2 * dscqss_dsc[73] +
           dwdot9dscqss3 * dscqss_dsc[108] + dwdot9dscqss4 * dscqss_dsc[143] +
           dwdot9dscqss5 * dscqss_dsc[178] + dwdot9dscqss6 * dscqss_dsc[213] +
           dwdot9dscqss7 * dscqss_dsc[248] + dwdot9dscqss9 * dscqss_dsc[318] +
           dwdot9dscqss11 * dscqss_dsc[388] + dwdot9dscqss12 * dscqss_dsc[423] +
           dwdot9dscqss14 * dscqss_dsc[493] + dwdot9dscqss13 * dscqss_dsc[458] +
           dwdot9dscqss15 * dscqss_dsc[528] + dwdot9dscqss8 * dscqss_dsc[283] +
           dwdot9dscqss10 * dscqss_dsc[353];
  J[153] = dwdot9dsc4 + dwdot9dscqss0 * dscqss_dsc[4] +
           dwdot9dscqss16 * dscqss_dsc[564] + dwdot9dscqss1 * dscqss_dsc[39] +
           dwdot9dscqss17 * dscqss_dsc[599] + dwdot9dscqss2 * dscqss_dsc[74] +
           dwdot9dscqss3 * dscqss_dsc[109] + dwdot9dscqss4 * dscqss_dsc[144] +
           dwdot9dscqss5 * dscqss_dsc[179] + dwdot9dscqss6 * dscqss_dsc[214] +
           dwdot9dscqss7 * dscqss_dsc[249] + dwdot9dscqss9 * dscqss_dsc[319] +
           dwdot9dscqss11 * dscqss_dsc[389] + dwdot9dscqss12 * dscqss_dsc[424] +
           dwdot9dscqss14 * dscqss_dsc[494] + dwdot9dscqss13 * dscqss_dsc[459] +
           dwdot9dscqss15 * dscqss_dsc[529] + dwdot9dscqss8 * dscqss_dsc[284] +
           dwdot9dscqss10 * dscqss_dsc[354];
  J[189] = dwdot9dsc5 + dwdot9dscqss0 * dscqss_dsc[5] +
           dwdot9dscqss16 * dscqss_dsc[565] + dwdot9dscqss1 * dscqss_dsc[40] +
           dwdot9dscqss17 * dscqss_dsc[600] + dwdot9dscqss2 * dscqss_dsc[75] +
           dwdot9dscqss3 * dscqss_dsc[110] + dwdot9dscqss4 * dscqss_dsc[145] +
           dwdot9dscqss5 * dscqss_dsc[180] + dwdot9dscqss6 * dscqss_dsc[215] +
           dwdot9dscqss7 * dscqss_dsc[250] + dwdot9dscqss9 * dscqss_dsc[320] +
           dwdot9dscqss11 * dscqss_dsc[390] + dwdot9dscqss12 * dscqss_dsc[425] +
           dwdot9dscqss14 * dscqss_dsc[495] + dwdot9dscqss13 * dscqss_dsc[460] +
           dwdot9dscqss15 * dscqss_dsc[530] + dwdot9dscqss8 * dscqss_dsc[285] +
           dwdot9dscqss10 * dscqss_dsc[355];
  J[225] = dwdot9dsc6 + dwdot9dscqss0 * dscqss_dsc[6] +
           dwdot9dscqss16 * dscqss_dsc[566] + dwdot9dscqss1 * dscqss_dsc[41] +
           dwdot9dscqss17 * dscqss_dsc[601] + dwdot9dscqss2 * dscqss_dsc[76] +
           dwdot9dscqss3 * dscqss_dsc[111] + dwdot9dscqss4 * dscqss_dsc[146] +
           dwdot9dscqss5 * dscqss_dsc[181] + dwdot9dscqss6 * dscqss_dsc[216] +
           dwdot9dscqss7 * dscqss_dsc[251] + dwdot9dscqss9 * dscqss_dsc[321] +
           dwdot9dscqss11 * dscqss_dsc[391] + dwdot9dscqss12 * dscqss_dsc[426] +
           dwdot9dscqss14 * dscqss_dsc[496] + dwdot9dscqss13 * dscqss_dsc[461] +
           dwdot9dscqss15 * dscqss_dsc[531] + dwdot9dscqss8 * dscqss_dsc[286] +
           dwdot9dscqss10 * dscqss_dsc[356];
  J[261] = dwdot9dsc7 + dwdot9dscqss0 * dscqss_dsc[7] +
           dwdot9dscqss16 * dscqss_dsc[567] + dwdot9dscqss1 * dscqss_dsc[42] +
           dwdot9dscqss17 * dscqss_dsc[602] + dwdot9dscqss2 * dscqss_dsc[77] +
           dwdot9dscqss3 * dscqss_dsc[112] + dwdot9dscqss4 * dscqss_dsc[147] +
           dwdot9dscqss5 * dscqss_dsc[182] + dwdot9dscqss6 * dscqss_dsc[217] +
           dwdot9dscqss7 * dscqss_dsc[252] + dwdot9dscqss9 * dscqss_dsc[322] +
           dwdot9dscqss11 * dscqss_dsc[392] + dwdot9dscqss12 * dscqss_dsc[427] +
           dwdot9dscqss14 * dscqss_dsc[497] + dwdot9dscqss13 * dscqss_dsc[462] +
           dwdot9dscqss15 * dscqss_dsc[532] + dwdot9dscqss8 * dscqss_dsc[287] +
           dwdot9dscqss10 * dscqss_dsc[357];
  J[297] = dwdot9dsc8 + dwdot9dscqss0 * dscqss_dsc[8] +
           dwdot9dscqss16 * dscqss_dsc[568] + dwdot9dscqss1 * dscqss_dsc[43] +
           dwdot9dscqss17 * dscqss_dsc[603] + dwdot9dscqss2 * dscqss_dsc[78] +
           dwdot9dscqss3 * dscqss_dsc[113] + dwdot9dscqss4 * dscqss_dsc[148] +
           dwdot9dscqss5 * dscqss_dsc[183] + dwdot9dscqss6 * dscqss_dsc[218] +
           dwdot9dscqss7 * dscqss_dsc[253] + dwdot9dscqss9 * dscqss_dsc[323] +
           dwdot9dscqss11 * dscqss_dsc[393] + dwdot9dscqss12 * dscqss_dsc[428] +
           dwdot9dscqss14 * dscqss_dsc[498] + dwdot9dscqss13 * dscqss_dsc[463] +
           dwdot9dscqss15 * dscqss_dsc[533] + dwdot9dscqss8 * dscqss_dsc[288] +
           dwdot9dscqss10 * dscqss_dsc[358];
  J[333] = dwdot9dsc9 + dwdot9dscqss0 * dscqss_dsc[9] +
           dwdot9dscqss16 * dscqss_dsc[569] + dwdot9dscqss1 * dscqss_dsc[44] +
           dwdot9dscqss17 * dscqss_dsc[604] + dwdot9dscqss2 * dscqss_dsc[79] +
           dwdot9dscqss3 * dscqss_dsc[114] + dwdot9dscqss4 * dscqss_dsc[149] +
           dwdot9dscqss5 * dscqss_dsc[184] + dwdot9dscqss6 * dscqss_dsc[219] +
           dwdot9dscqss7 * dscqss_dsc[254] + dwdot9dscqss9 * dscqss_dsc[324] +
           dwdot9dscqss11 * dscqss_dsc[394] + dwdot9dscqss12 * dscqss_dsc[429] +
           dwdot9dscqss14 * dscqss_dsc[499] + dwdot9dscqss13 * dscqss_dsc[464] +
           dwdot9dscqss15 * dscqss_dsc[534] + dwdot9dscqss8 * dscqss_dsc[289] +
           dwdot9dscqss10 * dscqss_dsc[359];
  J[369] = dwdot9dsc10 + dwdot9dscqss0 * dscqss_dsc[10] +
           dwdot9dscqss16 * dscqss_dsc[570] + dwdot9dscqss1 * dscqss_dsc[45] +
           dwdot9dscqss17 * dscqss_dsc[605] + dwdot9dscqss2 * dscqss_dsc[80] +
           dwdot9dscqss3 * dscqss_dsc[115] + dwdot9dscqss4 * dscqss_dsc[150] +
           dwdot9dscqss5 * dscqss_dsc[185] + dwdot9dscqss6 * dscqss_dsc[220] +
           dwdot9dscqss7 * dscqss_dsc[255] + dwdot9dscqss9 * dscqss_dsc[325] +
           dwdot9dscqss11 * dscqss_dsc[395] + dwdot9dscqss12 * dscqss_dsc[430] +
           dwdot9dscqss14 * dscqss_dsc[500] + dwdot9dscqss13 * dscqss_dsc[465] +
           dwdot9dscqss15 * dscqss_dsc[535] + dwdot9dscqss8 * dscqss_dsc[290] +
           dwdot9dscqss10 * dscqss_dsc[360];
  J[405] = dwdot9dsc11 + dwdot9dscqss0 * dscqss_dsc[11] +
           dwdot9dscqss16 * dscqss_dsc[571] + dwdot9dscqss1 * dscqss_dsc[46] +
           dwdot9dscqss17 * dscqss_dsc[606] + dwdot9dscqss2 * dscqss_dsc[81] +
           dwdot9dscqss3 * dscqss_dsc[116] + dwdot9dscqss4 * dscqss_dsc[151] +
           dwdot9dscqss5 * dscqss_dsc[186] + dwdot9dscqss6 * dscqss_dsc[221] +
           dwdot9dscqss7 * dscqss_dsc[256] + dwdot9dscqss9 * dscqss_dsc[326] +
           dwdot9dscqss11 * dscqss_dsc[396] + dwdot9dscqss12 * dscqss_dsc[431] +
           dwdot9dscqss14 * dscqss_dsc[501] + dwdot9dscqss13 * dscqss_dsc[466] +
           dwdot9dscqss15 * dscqss_dsc[536] + dwdot9dscqss8 * dscqss_dsc[291] +
           dwdot9dscqss10 * dscqss_dsc[361];
  J[441] = dwdot9dsc12 + dwdot9dscqss0 * dscqss_dsc[12] +
           dwdot9dscqss16 * dscqss_dsc[572] + dwdot9dscqss1 * dscqss_dsc[47] +
           dwdot9dscqss17 * dscqss_dsc[607] + dwdot9dscqss2 * dscqss_dsc[82] +
           dwdot9dscqss3 * dscqss_dsc[117] + dwdot9dscqss4 * dscqss_dsc[152] +
           dwdot9dscqss5 * dscqss_dsc[187] + dwdot9dscqss6 * dscqss_dsc[222] +
           dwdot9dscqss7 * dscqss_dsc[257] + dwdot9dscqss9 * dscqss_dsc[327] +
           dwdot9dscqss11 * dscqss_dsc[397] + dwdot9dscqss12 * dscqss_dsc[432] +
           dwdot9dscqss14 * dscqss_dsc[502] + dwdot9dscqss13 * dscqss_dsc[467] +
           dwdot9dscqss15 * dscqss_dsc[537] + dwdot9dscqss8 * dscqss_dsc[292] +
           dwdot9dscqss10 * dscqss_dsc[362];
  J[477] = dwdot9dsc13 + dwdot9dscqss0 * dscqss_dsc[13] +
           dwdot9dscqss16 * dscqss_dsc[573] + dwdot9dscqss1 * dscqss_dsc[48] +
           dwdot9dscqss17 * dscqss_dsc[608] + dwdot9dscqss2 * dscqss_dsc[83] +
           dwdot9dscqss3 * dscqss_dsc[118] + dwdot9dscqss4 * dscqss_dsc[153] +
           dwdot9dscqss5 * dscqss_dsc[188] + dwdot9dscqss6 * dscqss_dsc[223] +
           dwdot9dscqss7 * dscqss_dsc[258] + dwdot9dscqss9 * dscqss_dsc[328] +
           dwdot9dscqss11 * dscqss_dsc[398] + dwdot9dscqss12 * dscqss_dsc[433] +
           dwdot9dscqss14 * dscqss_dsc[503] + dwdot9dscqss13 * dscqss_dsc[468] +
           dwdot9dscqss15 * dscqss_dsc[538] + dwdot9dscqss8 * dscqss_dsc[293] +
           dwdot9dscqss10 * dscqss_dsc[363];
  J[513] = dwdot9dsc14 + dwdot9dscqss0 * dscqss_dsc[14] +
           dwdot9dscqss16 * dscqss_dsc[574] + dwdot9dscqss1 * dscqss_dsc[49] +
           dwdot9dscqss17 * dscqss_dsc[609] + dwdot9dscqss2 * dscqss_dsc[84] +
           dwdot9dscqss3 * dscqss_dsc[119] + dwdot9dscqss4 * dscqss_dsc[154] +
           dwdot9dscqss5 * dscqss_dsc[189] + dwdot9dscqss6 * dscqss_dsc[224] +
           dwdot9dscqss7 * dscqss_dsc[259] + dwdot9dscqss9 * dscqss_dsc[329] +
           dwdot9dscqss11 * dscqss_dsc[399] + dwdot9dscqss12 * dscqss_dsc[434] +
           dwdot9dscqss14 * dscqss_dsc[504] + dwdot9dscqss13 * dscqss_dsc[469] +
           dwdot9dscqss15 * dscqss_dsc[539] + dwdot9dscqss8 * dscqss_dsc[294] +
           dwdot9dscqss10 * dscqss_dsc[364];
  J[549] = dwdot9dsc15 + dwdot9dscqss0 * dscqss_dsc[15] +
           dwdot9dscqss16 * dscqss_dsc[575] + dwdot9dscqss1 * dscqss_dsc[50] +
           dwdot9dscqss17 * dscqss_dsc[610] + dwdot9dscqss2 * dscqss_dsc[85] +
           dwdot9dscqss3 * dscqss_dsc[120] + dwdot9dscqss4 * dscqss_dsc[155] +
           dwdot9dscqss5 * dscqss_dsc[190] + dwdot9dscqss6 * dscqss_dsc[225] +
           dwdot9dscqss7 * dscqss_dsc[260] + dwdot9dscqss9 * dscqss_dsc[330] +
           dwdot9dscqss11 * dscqss_dsc[400] + dwdot9dscqss12 * dscqss_dsc[435] +
           dwdot9dscqss14 * dscqss_dsc[505] + dwdot9dscqss13 * dscqss_dsc[470] +
           dwdot9dscqss15 * dscqss_dsc[540] + dwdot9dscqss8 * dscqss_dsc[295] +
           dwdot9dscqss10 * dscqss_dsc[365];
  J[585] = dwdot9dsc16 + dwdot9dscqss0 * dscqss_dsc[16] +
           dwdot9dscqss16 * dscqss_dsc[576] + dwdot9dscqss1 * dscqss_dsc[51] +
           dwdot9dscqss17 * dscqss_dsc[611] + dwdot9dscqss2 * dscqss_dsc[86] +
           dwdot9dscqss3 * dscqss_dsc[121] + dwdot9dscqss4 * dscqss_dsc[156] +
           dwdot9dscqss5 * dscqss_dsc[191] + dwdot9dscqss6 * dscqss_dsc[226] +
           dwdot9dscqss7 * dscqss_dsc[261] + dwdot9dscqss9 * dscqss_dsc[331] +
           dwdot9dscqss11 * dscqss_dsc[401] + dwdot9dscqss12 * dscqss_dsc[436] +
           dwdot9dscqss14 * dscqss_dsc[506] + dwdot9dscqss13 * dscqss_dsc[471] +
           dwdot9dscqss15 * dscqss_dsc[541] + dwdot9dscqss8 * dscqss_dsc[296] +
           dwdot9dscqss10 * dscqss_dsc[366];
  J[621] = dwdot9dsc17 + dwdot9dscqss0 * dscqss_dsc[17] +
           dwdot9dscqss16 * dscqss_dsc[577] + dwdot9dscqss1 * dscqss_dsc[52] +
           dwdot9dscqss17 * dscqss_dsc[612] + dwdot9dscqss2 * dscqss_dsc[87] +
           dwdot9dscqss3 * dscqss_dsc[122] + dwdot9dscqss4 * dscqss_dsc[157] +
           dwdot9dscqss5 * dscqss_dsc[192] + dwdot9dscqss6 * dscqss_dsc[227] +
           dwdot9dscqss7 * dscqss_dsc[262] + dwdot9dscqss9 * dscqss_dsc[332] +
           dwdot9dscqss11 * dscqss_dsc[402] + dwdot9dscqss12 * dscqss_dsc[437] +
           dwdot9dscqss14 * dscqss_dsc[507] + dwdot9dscqss13 * dscqss_dsc[472] +
           dwdot9dscqss15 * dscqss_dsc[542] + dwdot9dscqss8 * dscqss_dsc[297] +
           dwdot9dscqss10 * dscqss_dsc[367];
  J[657] = dwdot9dsc18 + dwdot9dscqss0 * dscqss_dsc[18] +
           dwdot9dscqss16 * dscqss_dsc[578] + dwdot9dscqss1 * dscqss_dsc[53] +
           dwdot9dscqss17 * dscqss_dsc[613] + dwdot9dscqss2 * dscqss_dsc[88] +
           dwdot9dscqss3 * dscqss_dsc[123] + dwdot9dscqss4 * dscqss_dsc[158] +
           dwdot9dscqss5 * dscqss_dsc[193] + dwdot9dscqss6 * dscqss_dsc[228] +
           dwdot9dscqss7 * dscqss_dsc[263] + dwdot9dscqss9 * dscqss_dsc[333] +
           dwdot9dscqss11 * dscqss_dsc[403] + dwdot9dscqss12 * dscqss_dsc[438] +
           dwdot9dscqss14 * dscqss_dsc[508] + dwdot9dscqss13 * dscqss_dsc[473] +
           dwdot9dscqss15 * dscqss_dsc[543] + dwdot9dscqss8 * dscqss_dsc[298] +
           dwdot9dscqss10 * dscqss_dsc[368];
  J[693] = dwdot9dsc19 + dwdot9dscqss0 * dscqss_dsc[19] +
           dwdot9dscqss16 * dscqss_dsc[579] + dwdot9dscqss1 * dscqss_dsc[54] +
           dwdot9dscqss17 * dscqss_dsc[614] + dwdot9dscqss2 * dscqss_dsc[89] +
           dwdot9dscqss3 * dscqss_dsc[124] + dwdot9dscqss4 * dscqss_dsc[159] +
           dwdot9dscqss5 * dscqss_dsc[194] + dwdot9dscqss6 * dscqss_dsc[229] +
           dwdot9dscqss7 * dscqss_dsc[264] + dwdot9dscqss9 * dscqss_dsc[334] +
           dwdot9dscqss11 * dscqss_dsc[404] + dwdot9dscqss12 * dscqss_dsc[439] +
           dwdot9dscqss14 * dscqss_dsc[509] + dwdot9dscqss13 * dscqss_dsc[474] +
           dwdot9dscqss15 * dscqss_dsc[544] + dwdot9dscqss8 * dscqss_dsc[299] +
           dwdot9dscqss10 * dscqss_dsc[369];
  J[729] = dwdot9dsc20 + dwdot9dscqss0 * dscqss_dsc[20] +
           dwdot9dscqss16 * dscqss_dsc[580] + dwdot9dscqss1 * dscqss_dsc[55] +
           dwdot9dscqss17 * dscqss_dsc[615] + dwdot9dscqss2 * dscqss_dsc[90] +
           dwdot9dscqss3 * dscqss_dsc[125] + dwdot9dscqss4 * dscqss_dsc[160] +
           dwdot9dscqss5 * dscqss_dsc[195] + dwdot9dscqss6 * dscqss_dsc[230] +
           dwdot9dscqss7 * dscqss_dsc[265] + dwdot9dscqss9 * dscqss_dsc[335] +
           dwdot9dscqss11 * dscqss_dsc[405] + dwdot9dscqss12 * dscqss_dsc[440] +
           dwdot9dscqss14 * dscqss_dsc[510] + dwdot9dscqss13 * dscqss_dsc[475] +
           dwdot9dscqss15 * dscqss_dsc[545] + dwdot9dscqss8 * dscqss_dsc[300] +
           dwdot9dscqss10 * dscqss_dsc[370];
  J[765] = dwdot9dsc21 + dwdot9dscqss0 * dscqss_dsc[21] +
           dwdot9dscqss16 * dscqss_dsc[581] + dwdot9dscqss1 * dscqss_dsc[56] +
           dwdot9dscqss17 * dscqss_dsc[616] + dwdot9dscqss2 * dscqss_dsc[91] +
           dwdot9dscqss3 * dscqss_dsc[126] + dwdot9dscqss4 * dscqss_dsc[161] +
           dwdot9dscqss5 * dscqss_dsc[196] + dwdot9dscqss6 * dscqss_dsc[231] +
           dwdot9dscqss7 * dscqss_dsc[266] + dwdot9dscqss9 * dscqss_dsc[336] +
           dwdot9dscqss11 * dscqss_dsc[406] + dwdot9dscqss12 * dscqss_dsc[441] +
           dwdot9dscqss14 * dscqss_dsc[511] + dwdot9dscqss13 * dscqss_dsc[476] +
           dwdot9dscqss15 * dscqss_dsc[546] + dwdot9dscqss8 * dscqss_dsc[301] +
           dwdot9dscqss10 * dscqss_dsc[371];
  J[801] = dwdot9dsc22 + dwdot9dscqss0 * dscqss_dsc[22] +
           dwdot9dscqss16 * dscqss_dsc[582] + dwdot9dscqss1 * dscqss_dsc[57] +
           dwdot9dscqss17 * dscqss_dsc[617] + dwdot9dscqss2 * dscqss_dsc[92] +
           dwdot9dscqss3 * dscqss_dsc[127] + dwdot9dscqss4 * dscqss_dsc[162] +
           dwdot9dscqss5 * dscqss_dsc[197] + dwdot9dscqss6 * dscqss_dsc[232] +
           dwdot9dscqss7 * dscqss_dsc[267] + dwdot9dscqss9 * dscqss_dsc[337] +
           dwdot9dscqss11 * dscqss_dsc[407] + dwdot9dscqss12 * dscqss_dsc[442] +
           dwdot9dscqss14 * dscqss_dsc[512] + dwdot9dscqss13 * dscqss_dsc[477] +
           dwdot9dscqss15 * dscqss_dsc[547] + dwdot9dscqss8 * dscqss_dsc[302] +
           dwdot9dscqss10 * dscqss_dsc[372];
  J[837] = dwdot9dsc23 + dwdot9dscqss0 * dscqss_dsc[23] +
           dwdot9dscqss16 * dscqss_dsc[583] + dwdot9dscqss1 * dscqss_dsc[58] +
           dwdot9dscqss17 * dscqss_dsc[618] + dwdot9dscqss2 * dscqss_dsc[93] +
           dwdot9dscqss3 * dscqss_dsc[128] + dwdot9dscqss4 * dscqss_dsc[163] +
           dwdot9dscqss5 * dscqss_dsc[198] + dwdot9dscqss6 * dscqss_dsc[233] +
           dwdot9dscqss7 * dscqss_dsc[268] + dwdot9dscqss9 * dscqss_dsc[338] +
           dwdot9dscqss11 * dscqss_dsc[408] + dwdot9dscqss12 * dscqss_dsc[443] +
           dwdot9dscqss14 * dscqss_dsc[513] + dwdot9dscqss13 * dscqss_dsc[478] +
           dwdot9dscqss15 * dscqss_dsc[548] + dwdot9dscqss8 * dscqss_dsc[303] +
           dwdot9dscqss10 * dscqss_dsc[373];
  J[873] = dwdot9dsc24 + dwdot9dscqss0 * dscqss_dsc[24] +
           dwdot9dscqss16 * dscqss_dsc[584] + dwdot9dscqss1 * dscqss_dsc[59] +
           dwdot9dscqss17 * dscqss_dsc[619] + dwdot9dscqss2 * dscqss_dsc[94] +
           dwdot9dscqss3 * dscqss_dsc[129] + dwdot9dscqss4 * dscqss_dsc[164] +
           dwdot9dscqss5 * dscqss_dsc[199] + dwdot9dscqss6 * dscqss_dsc[234] +
           dwdot9dscqss7 * dscqss_dsc[269] + dwdot9dscqss9 * dscqss_dsc[339] +
           dwdot9dscqss11 * dscqss_dsc[409] + dwdot9dscqss12 * dscqss_dsc[444] +
           dwdot9dscqss14 * dscqss_dsc[514] + dwdot9dscqss13 * dscqss_dsc[479] +
           dwdot9dscqss15 * dscqss_dsc[549] + dwdot9dscqss8 * dscqss_dsc[304] +
           dwdot9dscqss10 * dscqss_dsc[374];
  J[909] = dwdot9dsc25 + dwdot9dscqss0 * dscqss_dsc[25] +
           dwdot9dscqss16 * dscqss_dsc[585] + dwdot9dscqss1 * dscqss_dsc[60] +
           dwdot9dscqss17 * dscqss_dsc[620] + dwdot9dscqss2 * dscqss_dsc[95] +
           dwdot9dscqss3 * dscqss_dsc[130] + dwdot9dscqss4 * dscqss_dsc[165] +
           dwdot9dscqss5 * dscqss_dsc[200] + dwdot9dscqss6 * dscqss_dsc[235] +
           dwdot9dscqss7 * dscqss_dsc[270] + dwdot9dscqss9 * dscqss_dsc[340] +
           dwdot9dscqss11 * dscqss_dsc[410] + dwdot9dscqss12 * dscqss_dsc[445] +
           dwdot9dscqss14 * dscqss_dsc[515] + dwdot9dscqss13 * dscqss_dsc[480] +
           dwdot9dscqss15 * dscqss_dsc[550] + dwdot9dscqss8 * dscqss_dsc[305] +
           dwdot9dscqss10 * dscqss_dsc[375];
  J[945] = dwdot9dsc26 + dwdot9dscqss0 * dscqss_dsc[26] +
           dwdot9dscqss16 * dscqss_dsc[586] + dwdot9dscqss1 * dscqss_dsc[61] +
           dwdot9dscqss17 * dscqss_dsc[621] + dwdot9dscqss2 * dscqss_dsc[96] +
           dwdot9dscqss3 * dscqss_dsc[131] + dwdot9dscqss4 * dscqss_dsc[166] +
           dwdot9dscqss5 * dscqss_dsc[201] + dwdot9dscqss6 * dscqss_dsc[236] +
           dwdot9dscqss7 * dscqss_dsc[271] + dwdot9dscqss9 * dscqss_dsc[341] +
           dwdot9dscqss11 * dscqss_dsc[411] + dwdot9dscqss12 * dscqss_dsc[446] +
           dwdot9dscqss14 * dscqss_dsc[516] + dwdot9dscqss13 * dscqss_dsc[481] +
           dwdot9dscqss15 * dscqss_dsc[551] + dwdot9dscqss8 * dscqss_dsc[306] +
           dwdot9dscqss10 * dscqss_dsc[376];
  J[981] = dwdot9dsc27 + dwdot9dscqss0 * dscqss_dsc[27] +
           dwdot9dscqss16 * dscqss_dsc[587] + dwdot9dscqss1 * dscqss_dsc[62] +
           dwdot9dscqss17 * dscqss_dsc[622] + dwdot9dscqss2 * dscqss_dsc[97] +
           dwdot9dscqss3 * dscqss_dsc[132] + dwdot9dscqss4 * dscqss_dsc[167] +
           dwdot9dscqss5 * dscqss_dsc[202] + dwdot9dscqss6 * dscqss_dsc[237] +
           dwdot9dscqss7 * dscqss_dsc[272] + dwdot9dscqss9 * dscqss_dsc[342] +
           dwdot9dscqss11 * dscqss_dsc[412] + dwdot9dscqss12 * dscqss_dsc[447] +
           dwdot9dscqss14 * dscqss_dsc[517] + dwdot9dscqss13 * dscqss_dsc[482] +
           dwdot9dscqss15 * dscqss_dsc[552] + dwdot9dscqss8 * dscqss_dsc[307] +
           dwdot9dscqss10 * dscqss_dsc[377];
  J[1017] =
    dwdot9dsc28 + dwdot9dscqss0 * dscqss_dsc[28] +
    dwdot9dscqss16 * dscqss_dsc[588] + dwdot9dscqss1 * dscqss_dsc[63] +
    dwdot9dscqss17 * dscqss_dsc[623] + dwdot9dscqss2 * dscqss_dsc[98] +
    dwdot9dscqss3 * dscqss_dsc[133] + dwdot9dscqss4 * dscqss_dsc[168] +
    dwdot9dscqss5 * dscqss_dsc[203] + dwdot9dscqss6 * dscqss_dsc[238] +
    dwdot9dscqss7 * dscqss_dsc[273] + dwdot9dscqss9 * dscqss_dsc[343] +
    dwdot9dscqss11 * dscqss_dsc[413] + dwdot9dscqss12 * dscqss_dsc[448] +
    dwdot9dscqss14 * dscqss_dsc[518] + dwdot9dscqss13 * dscqss_dsc[483] +
    dwdot9dscqss15 * dscqss_dsc[553] + dwdot9dscqss8 * dscqss_dsc[308] +
    dwdot9dscqss10 * dscqss_dsc[378];
  J[1053] =
    dwdot9dsc29 + dwdot9dscqss0 * dscqss_dsc[29] +
    dwdot9dscqss16 * dscqss_dsc[589] + dwdot9dscqss1 * dscqss_dsc[64] +
    dwdot9dscqss17 * dscqss_dsc[624] + dwdot9dscqss2 * dscqss_dsc[99] +
    dwdot9dscqss3 * dscqss_dsc[134] + dwdot9dscqss4 * dscqss_dsc[169] +
    dwdot9dscqss5 * dscqss_dsc[204] + dwdot9dscqss6 * dscqss_dsc[239] +
    dwdot9dscqss7 * dscqss_dsc[274] + dwdot9dscqss9 * dscqss_dsc[344] +
    dwdot9dscqss11 * dscqss_dsc[414] + dwdot9dscqss12 * dscqss_dsc[449] +
    dwdot9dscqss14 * dscqss_dsc[519] + dwdot9dscqss13 * dscqss_dsc[484] +
    dwdot9dscqss15 * dscqss_dsc[554] + dwdot9dscqss8 * dscqss_dsc[309] +
    dwdot9dscqss10 * dscqss_dsc[379];
  J[1089] =
    dwdot9dsc30 + dwdot9dscqss0 * dscqss_dsc[30] +
    dwdot9dscqss16 * dscqss_dsc[590] + dwdot9dscqss1 * dscqss_dsc[65] +
    dwdot9dscqss17 * dscqss_dsc[625] + dwdot9dscqss2 * dscqss_dsc[100] +
    dwdot9dscqss3 * dscqss_dsc[135] + dwdot9dscqss4 * dscqss_dsc[170] +
    dwdot9dscqss5 * dscqss_dsc[205] + dwdot9dscqss6 * dscqss_dsc[240] +
    dwdot9dscqss7 * dscqss_dsc[275] + dwdot9dscqss9 * dscqss_dsc[345] +
    dwdot9dscqss11 * dscqss_dsc[415] + dwdot9dscqss12 * dscqss_dsc[450] +
    dwdot9dscqss14 * dscqss_dsc[520] + dwdot9dscqss13 * dscqss_dsc[485] +
    dwdot9dscqss15 * dscqss_dsc[555] + dwdot9dscqss8 * dscqss_dsc[310] +
    dwdot9dscqss10 * dscqss_dsc[380];
  J[1125] =
    dwdot9dsc31 + dwdot9dscqss0 * dscqss_dsc[31] +
    dwdot9dscqss16 * dscqss_dsc[591] + dwdot9dscqss1 * dscqss_dsc[66] +
    dwdot9dscqss17 * dscqss_dsc[626] + dwdot9dscqss2 * dscqss_dsc[101] +
    dwdot9dscqss3 * dscqss_dsc[136] + dwdot9dscqss4 * dscqss_dsc[171] +
    dwdot9dscqss5 * dscqss_dsc[206] + dwdot9dscqss6 * dscqss_dsc[241] +
    dwdot9dscqss7 * dscqss_dsc[276] + dwdot9dscqss9 * dscqss_dsc[346] +
    dwdot9dscqss11 * dscqss_dsc[416] + dwdot9dscqss12 * dscqss_dsc[451] +
    dwdot9dscqss14 * dscqss_dsc[521] + dwdot9dscqss13 * dscqss_dsc[486] +
    dwdot9dscqss15 * dscqss_dsc[556] + dwdot9dscqss8 * dscqss_dsc[311] +
    dwdot9dscqss10 * dscqss_dsc[381];
  J[1161] =
    dwdot9dsc32 + dwdot9dscqss0 * dscqss_dsc[32] +
    dwdot9dscqss16 * dscqss_dsc[592] + dwdot9dscqss1 * dscqss_dsc[67] +
    dwdot9dscqss17 * dscqss_dsc[627] + dwdot9dscqss2 * dscqss_dsc[102] +
    dwdot9dscqss3 * dscqss_dsc[137] + dwdot9dscqss4 * dscqss_dsc[172] +
    dwdot9dscqss5 * dscqss_dsc[207] + dwdot9dscqss6 * dscqss_dsc[242] +
    dwdot9dscqss7 * dscqss_dsc[277] + dwdot9dscqss9 * dscqss_dsc[347] +
    dwdot9dscqss11 * dscqss_dsc[417] + dwdot9dscqss12 * dscqss_dsc[452] +
    dwdot9dscqss14 * dscqss_dsc[522] + dwdot9dscqss13 * dscqss_dsc[487] +
    dwdot9dscqss15 * dscqss_dsc[557] + dwdot9dscqss8 * dscqss_dsc[312] +
    dwdot9dscqss10 * dscqss_dsc[382];
  J[1197] =
    dwdot9dsc33 + dwdot9dscqss0 * dscqss_dsc[33] +
    dwdot9dscqss16 * dscqss_dsc[593] + dwdot9dscqss1 * dscqss_dsc[68] +
    dwdot9dscqss17 * dscqss_dsc[628] + dwdot9dscqss2 * dscqss_dsc[103] +
    dwdot9dscqss3 * dscqss_dsc[138] + dwdot9dscqss4 * dscqss_dsc[173] +
    dwdot9dscqss5 * dscqss_dsc[208] + dwdot9dscqss6 * dscqss_dsc[243] +
    dwdot9dscqss7 * dscqss_dsc[278] + dwdot9dscqss9 * dscqss_dsc[348] +
    dwdot9dscqss11 * dscqss_dsc[418] + dwdot9dscqss12 * dscqss_dsc[453] +
    dwdot9dscqss14 * dscqss_dsc[523] + dwdot9dscqss13 * dscqss_dsc[488] +
    dwdot9dscqss15 * dscqss_dsc[558] + dwdot9dscqss8 * dscqss_dsc[313] +
    dwdot9dscqss10 * dscqss_dsc[383];
  J[1233] =
    dwdot9dsc34 + dwdot9dscqss0 * dscqss_dsc[34] +
    dwdot9dscqss16 * dscqss_dsc[594] + dwdot9dscqss1 * dscqss_dsc[69] +
    dwdot9dscqss17 * dscqss_dsc[629] + dwdot9dscqss2 * dscqss_dsc[104] +
    dwdot9dscqss3 * dscqss_dsc[139] + dwdot9dscqss4 * dscqss_dsc[174] +
    dwdot9dscqss5 * dscqss_dsc[209] + dwdot9dscqss6 * dscqss_dsc[244] +
    dwdot9dscqss7 * dscqss_dsc[279] + dwdot9dscqss9 * dscqss_dsc[349] +
    dwdot9dscqss11 * dscqss_dsc[419] + dwdot9dscqss12 * dscqss_dsc[454] +
    dwdot9dscqss14 * dscqss_dsc[524] + dwdot9dscqss13 * dscqss_dsc[489] +
    dwdot9dscqss15 * dscqss_dsc[559] + dwdot9dscqss8 * dscqss_dsc[314] +
    dwdot9dscqss10 * dscqss_dsc[384];
  J[10] =
    dwdot10dsc0 + dwdot10dscqss0 * dscqss_dsc[0] +
    dwdot10dscqss16 * dscqss_dsc[560] + dwdot10dscqss1 * dscqss_dsc[35] +
    dwdot10dscqss17 * dscqss_dsc[595] + dwdot10dscqss2 * dscqss_dsc[70] +
    dwdot10dscqss3 * dscqss_dsc[105] + dwdot10dscqss4 * dscqss_dsc[140] +
    dwdot10dscqss5 * dscqss_dsc[175] + dwdot10dscqss6 * dscqss_dsc[210] +
    dwdot10dscqss7 * dscqss_dsc[245] + dwdot10dscqss9 * dscqss_dsc[315] +
    dwdot10dscqss11 * dscqss_dsc[385] + dwdot10dscqss12 * dscqss_dsc[420] +
    dwdot10dscqss14 * dscqss_dsc[490] + dwdot10dscqss13 * dscqss_dsc[455] +
    dwdot10dscqss15 * dscqss_dsc[525] + dwdot10dscqss8 * dscqss_dsc[280] +
    dwdot10dscqss10 * dscqss_dsc[350];
  J[46] =
    dwdot10dsc1 + dwdot10dscqss0 * dscqss_dsc[1] +
    dwdot10dscqss16 * dscqss_dsc[561] + dwdot10dscqss1 * dscqss_dsc[36] +
    dwdot10dscqss17 * dscqss_dsc[596] + dwdot10dscqss2 * dscqss_dsc[71] +
    dwdot10dscqss3 * dscqss_dsc[106] + dwdot10dscqss4 * dscqss_dsc[141] +
    dwdot10dscqss5 * dscqss_dsc[176] + dwdot10dscqss6 * dscqss_dsc[211] +
    dwdot10dscqss7 * dscqss_dsc[246] + dwdot10dscqss9 * dscqss_dsc[316] +
    dwdot10dscqss11 * dscqss_dsc[386] + dwdot10dscqss12 * dscqss_dsc[421] +
    dwdot10dscqss14 * dscqss_dsc[491] + dwdot10dscqss13 * dscqss_dsc[456] +
    dwdot10dscqss15 * dscqss_dsc[526] + dwdot10dscqss8 * dscqss_dsc[281] +
    dwdot10dscqss10 * dscqss_dsc[351];
  J[82] =
    dwdot10dsc2 + dwdot10dscqss0 * dscqss_dsc[2] +
    dwdot10dscqss16 * dscqss_dsc[562] + dwdot10dscqss1 * dscqss_dsc[37] +
    dwdot10dscqss17 * dscqss_dsc[597] + dwdot10dscqss2 * dscqss_dsc[72] +
    dwdot10dscqss3 * dscqss_dsc[107] + dwdot10dscqss4 * dscqss_dsc[142] +
    dwdot10dscqss5 * dscqss_dsc[177] + dwdot10dscqss6 * dscqss_dsc[212] +
    dwdot10dscqss7 * dscqss_dsc[247] + dwdot10dscqss9 * dscqss_dsc[317] +
    dwdot10dscqss11 * dscqss_dsc[387] + dwdot10dscqss12 * dscqss_dsc[422] +
    dwdot10dscqss14 * dscqss_dsc[492] + dwdot10dscqss13 * dscqss_dsc[457] +
    dwdot10dscqss15 * dscqss_dsc[527] + dwdot10dscqss8 * dscqss_dsc[282] +
    dwdot10dscqss10 * dscqss_dsc[352];
  J[118] =
    dwdot10dsc3 + dwdot10dscqss0 * dscqss_dsc[3] +
    dwdot10dscqss16 * dscqss_dsc[563] + dwdot10dscqss1 * dscqss_dsc[38] +
    dwdot10dscqss17 * dscqss_dsc[598] + dwdot10dscqss2 * dscqss_dsc[73] +
    dwdot10dscqss3 * dscqss_dsc[108] + dwdot10dscqss4 * dscqss_dsc[143] +
    dwdot10dscqss5 * dscqss_dsc[178] + dwdot10dscqss6 * dscqss_dsc[213] +
    dwdot10dscqss7 * dscqss_dsc[248] + dwdot10dscqss9 * dscqss_dsc[318] +
    dwdot10dscqss11 * dscqss_dsc[388] + dwdot10dscqss12 * dscqss_dsc[423] +
    dwdot10dscqss14 * dscqss_dsc[493] + dwdot10dscqss13 * dscqss_dsc[458] +
    dwdot10dscqss15 * dscqss_dsc[528] + dwdot10dscqss8 * dscqss_dsc[283] +
    dwdot10dscqss10 * dscqss_dsc[353];
  J[154] =
    dwdot10dsc4 + dwdot10dscqss0 * dscqss_dsc[4] +
    dwdot10dscqss16 * dscqss_dsc[564] + dwdot10dscqss1 * dscqss_dsc[39] +
    dwdot10dscqss17 * dscqss_dsc[599] + dwdot10dscqss2 * dscqss_dsc[74] +
    dwdot10dscqss3 * dscqss_dsc[109] + dwdot10dscqss4 * dscqss_dsc[144] +
    dwdot10dscqss5 * dscqss_dsc[179] + dwdot10dscqss6 * dscqss_dsc[214] +
    dwdot10dscqss7 * dscqss_dsc[249] + dwdot10dscqss9 * dscqss_dsc[319] +
    dwdot10dscqss11 * dscqss_dsc[389] + dwdot10dscqss12 * dscqss_dsc[424] +
    dwdot10dscqss14 * dscqss_dsc[494] + dwdot10dscqss13 * dscqss_dsc[459] +
    dwdot10dscqss15 * dscqss_dsc[529] + dwdot10dscqss8 * dscqss_dsc[284] +
    dwdot10dscqss10 * dscqss_dsc[354];
  J[190] =
    dwdot10dsc5 + dwdot10dscqss0 * dscqss_dsc[5] +
    dwdot10dscqss16 * dscqss_dsc[565] + dwdot10dscqss1 * dscqss_dsc[40] +
    dwdot10dscqss17 * dscqss_dsc[600] + dwdot10dscqss2 * dscqss_dsc[75] +
    dwdot10dscqss3 * dscqss_dsc[110] + dwdot10dscqss4 * dscqss_dsc[145] +
    dwdot10dscqss5 * dscqss_dsc[180] + dwdot10dscqss6 * dscqss_dsc[215] +
    dwdot10dscqss7 * dscqss_dsc[250] + dwdot10dscqss9 * dscqss_dsc[320] +
    dwdot10dscqss11 * dscqss_dsc[390] + dwdot10dscqss12 * dscqss_dsc[425] +
    dwdot10dscqss14 * dscqss_dsc[495] + dwdot10dscqss13 * dscqss_dsc[460] +
    dwdot10dscqss15 * dscqss_dsc[530] + dwdot10dscqss8 * dscqss_dsc[285] +
    dwdot10dscqss10 * dscqss_dsc[355];
  J[226] =
    dwdot10dsc6 + dwdot10dscqss0 * dscqss_dsc[6] +
    dwdot10dscqss16 * dscqss_dsc[566] + dwdot10dscqss1 * dscqss_dsc[41] +
    dwdot10dscqss17 * dscqss_dsc[601] + dwdot10dscqss2 * dscqss_dsc[76] +
    dwdot10dscqss3 * dscqss_dsc[111] + dwdot10dscqss4 * dscqss_dsc[146] +
    dwdot10dscqss5 * dscqss_dsc[181] + dwdot10dscqss6 * dscqss_dsc[216] +
    dwdot10dscqss7 * dscqss_dsc[251] + dwdot10dscqss9 * dscqss_dsc[321] +
    dwdot10dscqss11 * dscqss_dsc[391] + dwdot10dscqss12 * dscqss_dsc[426] +
    dwdot10dscqss14 * dscqss_dsc[496] + dwdot10dscqss13 * dscqss_dsc[461] +
    dwdot10dscqss15 * dscqss_dsc[531] + dwdot10dscqss8 * dscqss_dsc[286] +
    dwdot10dscqss10 * dscqss_dsc[356];
  J[262] =
    dwdot10dsc7 + dwdot10dscqss0 * dscqss_dsc[7] +
    dwdot10dscqss16 * dscqss_dsc[567] + dwdot10dscqss1 * dscqss_dsc[42] +
    dwdot10dscqss17 * dscqss_dsc[602] + dwdot10dscqss2 * dscqss_dsc[77] +
    dwdot10dscqss3 * dscqss_dsc[112] + dwdot10dscqss4 * dscqss_dsc[147] +
    dwdot10dscqss5 * dscqss_dsc[182] + dwdot10dscqss6 * dscqss_dsc[217] +
    dwdot10dscqss7 * dscqss_dsc[252] + dwdot10dscqss9 * dscqss_dsc[322] +
    dwdot10dscqss11 * dscqss_dsc[392] + dwdot10dscqss12 * dscqss_dsc[427] +
    dwdot10dscqss14 * dscqss_dsc[497] + dwdot10dscqss13 * dscqss_dsc[462] +
    dwdot10dscqss15 * dscqss_dsc[532] + dwdot10dscqss8 * dscqss_dsc[287] +
    dwdot10dscqss10 * dscqss_dsc[357];
  J[298] =
    dwdot10dsc8 + dwdot10dscqss0 * dscqss_dsc[8] +
    dwdot10dscqss16 * dscqss_dsc[568] + dwdot10dscqss1 * dscqss_dsc[43] +
    dwdot10dscqss17 * dscqss_dsc[603] + dwdot10dscqss2 * dscqss_dsc[78] +
    dwdot10dscqss3 * dscqss_dsc[113] + dwdot10dscqss4 * dscqss_dsc[148] +
    dwdot10dscqss5 * dscqss_dsc[183] + dwdot10dscqss6 * dscqss_dsc[218] +
    dwdot10dscqss7 * dscqss_dsc[253] + dwdot10dscqss9 * dscqss_dsc[323] +
    dwdot10dscqss11 * dscqss_dsc[393] + dwdot10dscqss12 * dscqss_dsc[428] +
    dwdot10dscqss14 * dscqss_dsc[498] + dwdot10dscqss13 * dscqss_dsc[463] +
    dwdot10dscqss15 * dscqss_dsc[533] + dwdot10dscqss8 * dscqss_dsc[288] +
    dwdot10dscqss10 * dscqss_dsc[358];
  J[334] =
    dwdot10dsc9 + dwdot10dscqss0 * dscqss_dsc[9] +
    dwdot10dscqss16 * dscqss_dsc[569] + dwdot10dscqss1 * dscqss_dsc[44] +
    dwdot10dscqss17 * dscqss_dsc[604] + dwdot10dscqss2 * dscqss_dsc[79] +
    dwdot10dscqss3 * dscqss_dsc[114] + dwdot10dscqss4 * dscqss_dsc[149] +
    dwdot10dscqss5 * dscqss_dsc[184] + dwdot10dscqss6 * dscqss_dsc[219] +
    dwdot10dscqss7 * dscqss_dsc[254] + dwdot10dscqss9 * dscqss_dsc[324] +
    dwdot10dscqss11 * dscqss_dsc[394] + dwdot10dscqss12 * dscqss_dsc[429] +
    dwdot10dscqss14 * dscqss_dsc[499] + dwdot10dscqss13 * dscqss_dsc[464] +
    dwdot10dscqss15 * dscqss_dsc[534] + dwdot10dscqss8 * dscqss_dsc[289] +
    dwdot10dscqss10 * dscqss_dsc[359];
  J[370] =
    dwdot10dsc10 + dwdot10dscqss0 * dscqss_dsc[10] +
    dwdot10dscqss16 * dscqss_dsc[570] + dwdot10dscqss1 * dscqss_dsc[45] +
    dwdot10dscqss17 * dscqss_dsc[605] + dwdot10dscqss2 * dscqss_dsc[80] +
    dwdot10dscqss3 * dscqss_dsc[115] + dwdot10dscqss4 * dscqss_dsc[150] +
    dwdot10dscqss5 * dscqss_dsc[185] + dwdot10dscqss6 * dscqss_dsc[220] +
    dwdot10dscqss7 * dscqss_dsc[255] + dwdot10dscqss9 * dscqss_dsc[325] +
    dwdot10dscqss11 * dscqss_dsc[395] + dwdot10dscqss12 * dscqss_dsc[430] +
    dwdot10dscqss14 * dscqss_dsc[500] + dwdot10dscqss13 * dscqss_dsc[465] +
    dwdot10dscqss15 * dscqss_dsc[535] + dwdot10dscqss8 * dscqss_dsc[290] +
    dwdot10dscqss10 * dscqss_dsc[360];
  J[406] =
    dwdot10dsc11 + dwdot10dscqss0 * dscqss_dsc[11] +
    dwdot10dscqss16 * dscqss_dsc[571] + dwdot10dscqss1 * dscqss_dsc[46] +
    dwdot10dscqss17 * dscqss_dsc[606] + dwdot10dscqss2 * dscqss_dsc[81] +
    dwdot10dscqss3 * dscqss_dsc[116] + dwdot10dscqss4 * dscqss_dsc[151] +
    dwdot10dscqss5 * dscqss_dsc[186] + dwdot10dscqss6 * dscqss_dsc[221] +
    dwdot10dscqss7 * dscqss_dsc[256] + dwdot10dscqss9 * dscqss_dsc[326] +
    dwdot10dscqss11 * dscqss_dsc[396] + dwdot10dscqss12 * dscqss_dsc[431] +
    dwdot10dscqss14 * dscqss_dsc[501] + dwdot10dscqss13 * dscqss_dsc[466] +
    dwdot10dscqss15 * dscqss_dsc[536] + dwdot10dscqss8 * dscqss_dsc[291] +
    dwdot10dscqss10 * dscqss_dsc[361];
  J[442] =
    dwdot10dsc12 + dwdot10dscqss0 * dscqss_dsc[12] +
    dwdot10dscqss16 * dscqss_dsc[572] + dwdot10dscqss1 * dscqss_dsc[47] +
    dwdot10dscqss17 * dscqss_dsc[607] + dwdot10dscqss2 * dscqss_dsc[82] +
    dwdot10dscqss3 * dscqss_dsc[117] + dwdot10dscqss4 * dscqss_dsc[152] +
    dwdot10dscqss5 * dscqss_dsc[187] + dwdot10dscqss6 * dscqss_dsc[222] +
    dwdot10dscqss7 * dscqss_dsc[257] + dwdot10dscqss9 * dscqss_dsc[327] +
    dwdot10dscqss11 * dscqss_dsc[397] + dwdot10dscqss12 * dscqss_dsc[432] +
    dwdot10dscqss14 * dscqss_dsc[502] + dwdot10dscqss13 * dscqss_dsc[467] +
    dwdot10dscqss15 * dscqss_dsc[537] + dwdot10dscqss8 * dscqss_dsc[292] +
    dwdot10dscqss10 * dscqss_dsc[362];
  J[478] =
    dwdot10dsc13 + dwdot10dscqss0 * dscqss_dsc[13] +
    dwdot10dscqss16 * dscqss_dsc[573] + dwdot10dscqss1 * dscqss_dsc[48] +
    dwdot10dscqss17 * dscqss_dsc[608] + dwdot10dscqss2 * dscqss_dsc[83] +
    dwdot10dscqss3 * dscqss_dsc[118] + dwdot10dscqss4 * dscqss_dsc[153] +
    dwdot10dscqss5 * dscqss_dsc[188] + dwdot10dscqss6 * dscqss_dsc[223] +
    dwdot10dscqss7 * dscqss_dsc[258] + dwdot10dscqss9 * dscqss_dsc[328] +
    dwdot10dscqss11 * dscqss_dsc[398] + dwdot10dscqss12 * dscqss_dsc[433] +
    dwdot10dscqss14 * dscqss_dsc[503] + dwdot10dscqss13 * dscqss_dsc[468] +
    dwdot10dscqss15 * dscqss_dsc[538] + dwdot10dscqss8 * dscqss_dsc[293] +
    dwdot10dscqss10 * dscqss_dsc[363];
  J[514] =
    dwdot10dsc14 + dwdot10dscqss0 * dscqss_dsc[14] +
    dwdot10dscqss16 * dscqss_dsc[574] + dwdot10dscqss1 * dscqss_dsc[49] +
    dwdot10dscqss17 * dscqss_dsc[609] + dwdot10dscqss2 * dscqss_dsc[84] +
    dwdot10dscqss3 * dscqss_dsc[119] + dwdot10dscqss4 * dscqss_dsc[154] +
    dwdot10dscqss5 * dscqss_dsc[189] + dwdot10dscqss6 * dscqss_dsc[224] +
    dwdot10dscqss7 * dscqss_dsc[259] + dwdot10dscqss9 * dscqss_dsc[329] +
    dwdot10dscqss11 * dscqss_dsc[399] + dwdot10dscqss12 * dscqss_dsc[434] +
    dwdot10dscqss14 * dscqss_dsc[504] + dwdot10dscqss13 * dscqss_dsc[469] +
    dwdot10dscqss15 * dscqss_dsc[539] + dwdot10dscqss8 * dscqss_dsc[294] +
    dwdot10dscqss10 * dscqss_dsc[364];
  J[550] =
    dwdot10dsc15 + dwdot10dscqss0 * dscqss_dsc[15] +
    dwdot10dscqss16 * dscqss_dsc[575] + dwdot10dscqss1 * dscqss_dsc[50] +
    dwdot10dscqss17 * dscqss_dsc[610] + dwdot10dscqss2 * dscqss_dsc[85] +
    dwdot10dscqss3 * dscqss_dsc[120] + dwdot10dscqss4 * dscqss_dsc[155] +
    dwdot10dscqss5 * dscqss_dsc[190] + dwdot10dscqss6 * dscqss_dsc[225] +
    dwdot10dscqss7 * dscqss_dsc[260] + dwdot10dscqss9 * dscqss_dsc[330] +
    dwdot10dscqss11 * dscqss_dsc[400] + dwdot10dscqss12 * dscqss_dsc[435] +
    dwdot10dscqss14 * dscqss_dsc[505] + dwdot10dscqss13 * dscqss_dsc[470] +
    dwdot10dscqss15 * dscqss_dsc[540] + dwdot10dscqss8 * dscqss_dsc[295] +
    dwdot10dscqss10 * dscqss_dsc[365];
  J[586] =
    dwdot10dsc16 + dwdot10dscqss0 * dscqss_dsc[16] +
    dwdot10dscqss16 * dscqss_dsc[576] + dwdot10dscqss1 * dscqss_dsc[51] +
    dwdot10dscqss17 * dscqss_dsc[611] + dwdot10dscqss2 * dscqss_dsc[86] +
    dwdot10dscqss3 * dscqss_dsc[121] + dwdot10dscqss4 * dscqss_dsc[156] +
    dwdot10dscqss5 * dscqss_dsc[191] + dwdot10dscqss6 * dscqss_dsc[226] +
    dwdot10dscqss7 * dscqss_dsc[261] + dwdot10dscqss9 * dscqss_dsc[331] +
    dwdot10dscqss11 * dscqss_dsc[401] + dwdot10dscqss12 * dscqss_dsc[436] +
    dwdot10dscqss14 * dscqss_dsc[506] + dwdot10dscqss13 * dscqss_dsc[471] +
    dwdot10dscqss15 * dscqss_dsc[541] + dwdot10dscqss8 * dscqss_dsc[296] +
    dwdot10dscqss10 * dscqss_dsc[366];
  J[622] =
    dwdot10dsc17 + dwdot10dscqss0 * dscqss_dsc[17] +
    dwdot10dscqss16 * dscqss_dsc[577] + dwdot10dscqss1 * dscqss_dsc[52] +
    dwdot10dscqss17 * dscqss_dsc[612] + dwdot10dscqss2 * dscqss_dsc[87] +
    dwdot10dscqss3 * dscqss_dsc[122] + dwdot10dscqss4 * dscqss_dsc[157] +
    dwdot10dscqss5 * dscqss_dsc[192] + dwdot10dscqss6 * dscqss_dsc[227] +
    dwdot10dscqss7 * dscqss_dsc[262] + dwdot10dscqss9 * dscqss_dsc[332] +
    dwdot10dscqss11 * dscqss_dsc[402] + dwdot10dscqss12 * dscqss_dsc[437] +
    dwdot10dscqss14 * dscqss_dsc[507] + dwdot10dscqss13 * dscqss_dsc[472] +
    dwdot10dscqss15 * dscqss_dsc[542] + dwdot10dscqss8 * dscqss_dsc[297] +
    dwdot10dscqss10 * dscqss_dsc[367];
  J[658] =
    dwdot10dsc18 + dwdot10dscqss0 * dscqss_dsc[18] +
    dwdot10dscqss16 * dscqss_dsc[578] + dwdot10dscqss1 * dscqss_dsc[53] +
    dwdot10dscqss17 * dscqss_dsc[613] + dwdot10dscqss2 * dscqss_dsc[88] +
    dwdot10dscqss3 * dscqss_dsc[123] + dwdot10dscqss4 * dscqss_dsc[158] +
    dwdot10dscqss5 * dscqss_dsc[193] + dwdot10dscqss6 * dscqss_dsc[228] +
    dwdot10dscqss7 * dscqss_dsc[263] + dwdot10dscqss9 * dscqss_dsc[333] +
    dwdot10dscqss11 * dscqss_dsc[403] + dwdot10dscqss12 * dscqss_dsc[438] +
    dwdot10dscqss14 * dscqss_dsc[508] + dwdot10dscqss13 * dscqss_dsc[473] +
    dwdot10dscqss15 * dscqss_dsc[543] + dwdot10dscqss8 * dscqss_dsc[298] +
    dwdot10dscqss10 * dscqss_dsc[368];
  J[694] =
    dwdot10dsc19 + dwdot10dscqss0 * dscqss_dsc[19] +
    dwdot10dscqss16 * dscqss_dsc[579] + dwdot10dscqss1 * dscqss_dsc[54] +
    dwdot10dscqss17 * dscqss_dsc[614] + dwdot10dscqss2 * dscqss_dsc[89] +
    dwdot10dscqss3 * dscqss_dsc[124] + dwdot10dscqss4 * dscqss_dsc[159] +
    dwdot10dscqss5 * dscqss_dsc[194] + dwdot10dscqss6 * dscqss_dsc[229] +
    dwdot10dscqss7 * dscqss_dsc[264] + dwdot10dscqss9 * dscqss_dsc[334] +
    dwdot10dscqss11 * dscqss_dsc[404] + dwdot10dscqss12 * dscqss_dsc[439] +
    dwdot10dscqss14 * dscqss_dsc[509] + dwdot10dscqss13 * dscqss_dsc[474] +
    dwdot10dscqss15 * dscqss_dsc[544] + dwdot10dscqss8 * dscqss_dsc[299] +
    dwdot10dscqss10 * dscqss_dsc[369];
  J[730] =
    dwdot10dsc20 + dwdot10dscqss0 * dscqss_dsc[20] +
    dwdot10dscqss16 * dscqss_dsc[580] + dwdot10dscqss1 * dscqss_dsc[55] +
    dwdot10dscqss17 * dscqss_dsc[615] + dwdot10dscqss2 * dscqss_dsc[90] +
    dwdot10dscqss3 * dscqss_dsc[125] + dwdot10dscqss4 * dscqss_dsc[160] +
    dwdot10dscqss5 * dscqss_dsc[195] + dwdot10dscqss6 * dscqss_dsc[230] +
    dwdot10dscqss7 * dscqss_dsc[265] + dwdot10dscqss9 * dscqss_dsc[335] +
    dwdot10dscqss11 * dscqss_dsc[405] + dwdot10dscqss12 * dscqss_dsc[440] +
    dwdot10dscqss14 * dscqss_dsc[510] + dwdot10dscqss13 * dscqss_dsc[475] +
    dwdot10dscqss15 * dscqss_dsc[545] + dwdot10dscqss8 * dscqss_dsc[300] +
    dwdot10dscqss10 * dscqss_dsc[370];
  J[766] =
    dwdot10dsc21 + dwdot10dscqss0 * dscqss_dsc[21] +
    dwdot10dscqss16 * dscqss_dsc[581] + dwdot10dscqss1 * dscqss_dsc[56] +
    dwdot10dscqss17 * dscqss_dsc[616] + dwdot10dscqss2 * dscqss_dsc[91] +
    dwdot10dscqss3 * dscqss_dsc[126] + dwdot10dscqss4 * dscqss_dsc[161] +
    dwdot10dscqss5 * dscqss_dsc[196] + dwdot10dscqss6 * dscqss_dsc[231] +
    dwdot10dscqss7 * dscqss_dsc[266] + dwdot10dscqss9 * dscqss_dsc[336] +
    dwdot10dscqss11 * dscqss_dsc[406] + dwdot10dscqss12 * dscqss_dsc[441] +
    dwdot10dscqss14 * dscqss_dsc[511] + dwdot10dscqss13 * dscqss_dsc[476] +
    dwdot10dscqss15 * dscqss_dsc[546] + dwdot10dscqss8 * dscqss_dsc[301] +
    dwdot10dscqss10 * dscqss_dsc[371];
  J[802] =
    dwdot10dsc22 + dwdot10dscqss0 * dscqss_dsc[22] +
    dwdot10dscqss16 * dscqss_dsc[582] + dwdot10dscqss1 * dscqss_dsc[57] +
    dwdot10dscqss17 * dscqss_dsc[617] + dwdot10dscqss2 * dscqss_dsc[92] +
    dwdot10dscqss3 * dscqss_dsc[127] + dwdot10dscqss4 * dscqss_dsc[162] +
    dwdot10dscqss5 * dscqss_dsc[197] + dwdot10dscqss6 * dscqss_dsc[232] +
    dwdot10dscqss7 * dscqss_dsc[267] + dwdot10dscqss9 * dscqss_dsc[337] +
    dwdot10dscqss11 * dscqss_dsc[407] + dwdot10dscqss12 * dscqss_dsc[442] +
    dwdot10dscqss14 * dscqss_dsc[512] + dwdot10dscqss13 * dscqss_dsc[477] +
    dwdot10dscqss15 * dscqss_dsc[547] + dwdot10dscqss8 * dscqss_dsc[302] +
    dwdot10dscqss10 * dscqss_dsc[372];
  J[838] =
    dwdot10dsc23 + dwdot10dscqss0 * dscqss_dsc[23] +
    dwdot10dscqss16 * dscqss_dsc[583] + dwdot10dscqss1 * dscqss_dsc[58] +
    dwdot10dscqss17 * dscqss_dsc[618] + dwdot10dscqss2 * dscqss_dsc[93] +
    dwdot10dscqss3 * dscqss_dsc[128] + dwdot10dscqss4 * dscqss_dsc[163] +
    dwdot10dscqss5 * dscqss_dsc[198] + dwdot10dscqss6 * dscqss_dsc[233] +
    dwdot10dscqss7 * dscqss_dsc[268] + dwdot10dscqss9 * dscqss_dsc[338] +
    dwdot10dscqss11 * dscqss_dsc[408] + dwdot10dscqss12 * dscqss_dsc[443] +
    dwdot10dscqss14 * dscqss_dsc[513] + dwdot10dscqss13 * dscqss_dsc[478] +
    dwdot10dscqss15 * dscqss_dsc[548] + dwdot10dscqss8 * dscqss_dsc[303] +
    dwdot10dscqss10 * dscqss_dsc[373];
  J[874] =
    dwdot10dsc24 + dwdot10dscqss0 * dscqss_dsc[24] +
    dwdot10dscqss16 * dscqss_dsc[584] + dwdot10dscqss1 * dscqss_dsc[59] +
    dwdot10dscqss17 * dscqss_dsc[619] + dwdot10dscqss2 * dscqss_dsc[94] +
    dwdot10dscqss3 * dscqss_dsc[129] + dwdot10dscqss4 * dscqss_dsc[164] +
    dwdot10dscqss5 * dscqss_dsc[199] + dwdot10dscqss6 * dscqss_dsc[234] +
    dwdot10dscqss7 * dscqss_dsc[269] + dwdot10dscqss9 * dscqss_dsc[339] +
    dwdot10dscqss11 * dscqss_dsc[409] + dwdot10dscqss12 * dscqss_dsc[444] +
    dwdot10dscqss14 * dscqss_dsc[514] + dwdot10dscqss13 * dscqss_dsc[479] +
    dwdot10dscqss15 * dscqss_dsc[549] + dwdot10dscqss8 * dscqss_dsc[304] +
    dwdot10dscqss10 * dscqss_dsc[374];
  J[910] =
    dwdot10dsc25 + dwdot10dscqss0 * dscqss_dsc[25] +
    dwdot10dscqss16 * dscqss_dsc[585] + dwdot10dscqss1 * dscqss_dsc[60] +
    dwdot10dscqss17 * dscqss_dsc[620] + dwdot10dscqss2 * dscqss_dsc[95] +
    dwdot10dscqss3 * dscqss_dsc[130] + dwdot10dscqss4 * dscqss_dsc[165] +
    dwdot10dscqss5 * dscqss_dsc[200] + dwdot10dscqss6 * dscqss_dsc[235] +
    dwdot10dscqss7 * dscqss_dsc[270] + dwdot10dscqss9 * dscqss_dsc[340] +
    dwdot10dscqss11 * dscqss_dsc[410] + dwdot10dscqss12 * dscqss_dsc[445] +
    dwdot10dscqss14 * dscqss_dsc[515] + dwdot10dscqss13 * dscqss_dsc[480] +
    dwdot10dscqss15 * dscqss_dsc[550] + dwdot10dscqss8 * dscqss_dsc[305] +
    dwdot10dscqss10 * dscqss_dsc[375];
  J[946] =
    dwdot10dsc26 + dwdot10dscqss0 * dscqss_dsc[26] +
    dwdot10dscqss16 * dscqss_dsc[586] + dwdot10dscqss1 * dscqss_dsc[61] +
    dwdot10dscqss17 * dscqss_dsc[621] + dwdot10dscqss2 * dscqss_dsc[96] +
    dwdot10dscqss3 * dscqss_dsc[131] + dwdot10dscqss4 * dscqss_dsc[166] +
    dwdot10dscqss5 * dscqss_dsc[201] + dwdot10dscqss6 * dscqss_dsc[236] +
    dwdot10dscqss7 * dscqss_dsc[271] + dwdot10dscqss9 * dscqss_dsc[341] +
    dwdot10dscqss11 * dscqss_dsc[411] + dwdot10dscqss12 * dscqss_dsc[446] +
    dwdot10dscqss14 * dscqss_dsc[516] + dwdot10dscqss13 * dscqss_dsc[481] +
    dwdot10dscqss15 * dscqss_dsc[551] + dwdot10dscqss8 * dscqss_dsc[306] +
    dwdot10dscqss10 * dscqss_dsc[376];
  J[982] =
    dwdot10dsc27 + dwdot10dscqss0 * dscqss_dsc[27] +
    dwdot10dscqss16 * dscqss_dsc[587] + dwdot10dscqss1 * dscqss_dsc[62] +
    dwdot10dscqss17 * dscqss_dsc[622] + dwdot10dscqss2 * dscqss_dsc[97] +
    dwdot10dscqss3 * dscqss_dsc[132] + dwdot10dscqss4 * dscqss_dsc[167] +
    dwdot10dscqss5 * dscqss_dsc[202] + dwdot10dscqss6 * dscqss_dsc[237] +
    dwdot10dscqss7 * dscqss_dsc[272] + dwdot10dscqss9 * dscqss_dsc[342] +
    dwdot10dscqss11 * dscqss_dsc[412] + dwdot10dscqss12 * dscqss_dsc[447] +
    dwdot10dscqss14 * dscqss_dsc[517] + dwdot10dscqss13 * dscqss_dsc[482] +
    dwdot10dscqss15 * dscqss_dsc[552] + dwdot10dscqss8 * dscqss_dsc[307] +
    dwdot10dscqss10 * dscqss_dsc[377];
  J[1018] =
    dwdot10dsc28 + dwdot10dscqss0 * dscqss_dsc[28] +
    dwdot10dscqss16 * dscqss_dsc[588] + dwdot10dscqss1 * dscqss_dsc[63] +
    dwdot10dscqss17 * dscqss_dsc[623] + dwdot10dscqss2 * dscqss_dsc[98] +
    dwdot10dscqss3 * dscqss_dsc[133] + dwdot10dscqss4 * dscqss_dsc[168] +
    dwdot10dscqss5 * dscqss_dsc[203] + dwdot10dscqss6 * dscqss_dsc[238] +
    dwdot10dscqss7 * dscqss_dsc[273] + dwdot10dscqss9 * dscqss_dsc[343] +
    dwdot10dscqss11 * dscqss_dsc[413] + dwdot10dscqss12 * dscqss_dsc[448] +
    dwdot10dscqss14 * dscqss_dsc[518] + dwdot10dscqss13 * dscqss_dsc[483] +
    dwdot10dscqss15 * dscqss_dsc[553] + dwdot10dscqss8 * dscqss_dsc[308] +
    dwdot10dscqss10 * dscqss_dsc[378];
  J[1054] =
    dwdot10dsc29 + dwdot10dscqss0 * dscqss_dsc[29] +
    dwdot10dscqss16 * dscqss_dsc[589] + dwdot10dscqss1 * dscqss_dsc[64] +
    dwdot10dscqss17 * dscqss_dsc[624] + dwdot10dscqss2 * dscqss_dsc[99] +
    dwdot10dscqss3 * dscqss_dsc[134] + dwdot10dscqss4 * dscqss_dsc[169] +
    dwdot10dscqss5 * dscqss_dsc[204] + dwdot10dscqss6 * dscqss_dsc[239] +
    dwdot10dscqss7 * dscqss_dsc[274] + dwdot10dscqss9 * dscqss_dsc[344] +
    dwdot10dscqss11 * dscqss_dsc[414] + dwdot10dscqss12 * dscqss_dsc[449] +
    dwdot10dscqss14 * dscqss_dsc[519] + dwdot10dscqss13 * dscqss_dsc[484] +
    dwdot10dscqss15 * dscqss_dsc[554] + dwdot10dscqss8 * dscqss_dsc[309] +
    dwdot10dscqss10 * dscqss_dsc[379];
  J[1090] =
    dwdot10dsc30 + dwdot10dscqss0 * dscqss_dsc[30] +
    dwdot10dscqss16 * dscqss_dsc[590] + dwdot10dscqss1 * dscqss_dsc[65] +
    dwdot10dscqss17 * dscqss_dsc[625] + dwdot10dscqss2 * dscqss_dsc[100] +
    dwdot10dscqss3 * dscqss_dsc[135] + dwdot10dscqss4 * dscqss_dsc[170] +
    dwdot10dscqss5 * dscqss_dsc[205] + dwdot10dscqss6 * dscqss_dsc[240] +
    dwdot10dscqss7 * dscqss_dsc[275] + dwdot10dscqss9 * dscqss_dsc[345] +
    dwdot10dscqss11 * dscqss_dsc[415] + dwdot10dscqss12 * dscqss_dsc[450] +
    dwdot10dscqss14 * dscqss_dsc[520] + dwdot10dscqss13 * dscqss_dsc[485] +
    dwdot10dscqss15 * dscqss_dsc[555] + dwdot10dscqss8 * dscqss_dsc[310] +
    dwdot10dscqss10 * dscqss_dsc[380];
  J[1126] =
    dwdot10dsc31 + dwdot10dscqss0 * dscqss_dsc[31] +
    dwdot10dscqss16 * dscqss_dsc[591] + dwdot10dscqss1 * dscqss_dsc[66] +
    dwdot10dscqss17 * dscqss_dsc[626] + dwdot10dscqss2 * dscqss_dsc[101] +
    dwdot10dscqss3 * dscqss_dsc[136] + dwdot10dscqss4 * dscqss_dsc[171] +
    dwdot10dscqss5 * dscqss_dsc[206] + dwdot10dscqss6 * dscqss_dsc[241] +
    dwdot10dscqss7 * dscqss_dsc[276] + dwdot10dscqss9 * dscqss_dsc[346] +
    dwdot10dscqss11 * dscqss_dsc[416] + dwdot10dscqss12 * dscqss_dsc[451] +
    dwdot10dscqss14 * dscqss_dsc[521] + dwdot10dscqss13 * dscqss_dsc[486] +
    dwdot10dscqss15 * dscqss_dsc[556] + dwdot10dscqss8 * dscqss_dsc[311] +
    dwdot10dscqss10 * dscqss_dsc[381];
  J[1162] =
    dwdot10dsc32 + dwdot10dscqss0 * dscqss_dsc[32] +
    dwdot10dscqss16 * dscqss_dsc[592] + dwdot10dscqss1 * dscqss_dsc[67] +
    dwdot10dscqss17 * dscqss_dsc[627] + dwdot10dscqss2 * dscqss_dsc[102] +
    dwdot10dscqss3 * dscqss_dsc[137] + dwdot10dscqss4 * dscqss_dsc[172] +
    dwdot10dscqss5 * dscqss_dsc[207] + dwdot10dscqss6 * dscqss_dsc[242] +
    dwdot10dscqss7 * dscqss_dsc[277] + dwdot10dscqss9 * dscqss_dsc[347] +
    dwdot10dscqss11 * dscqss_dsc[417] + dwdot10dscqss12 * dscqss_dsc[452] +
    dwdot10dscqss14 * dscqss_dsc[522] + dwdot10dscqss13 * dscqss_dsc[487] +
    dwdot10dscqss15 * dscqss_dsc[557] + dwdot10dscqss8 * dscqss_dsc[312] +
    dwdot10dscqss10 * dscqss_dsc[382];
  J[1198] =
    dwdot10dsc33 + dwdot10dscqss0 * dscqss_dsc[33] +
    dwdot10dscqss16 * dscqss_dsc[593] + dwdot10dscqss1 * dscqss_dsc[68] +
    dwdot10dscqss17 * dscqss_dsc[628] + dwdot10dscqss2 * dscqss_dsc[103] +
    dwdot10dscqss3 * dscqss_dsc[138] + dwdot10dscqss4 * dscqss_dsc[173] +
    dwdot10dscqss5 * dscqss_dsc[208] + dwdot10dscqss6 * dscqss_dsc[243] +
    dwdot10dscqss7 * dscqss_dsc[278] + dwdot10dscqss9 * dscqss_dsc[348] +
    dwdot10dscqss11 * dscqss_dsc[418] + dwdot10dscqss12 * dscqss_dsc[453] +
    dwdot10dscqss14 * dscqss_dsc[523] + dwdot10dscqss13 * dscqss_dsc[488] +
    dwdot10dscqss15 * dscqss_dsc[558] + dwdot10dscqss8 * dscqss_dsc[313] +
    dwdot10dscqss10 * dscqss_dsc[383];
  J[1234] =
    dwdot10dsc34 + dwdot10dscqss0 * dscqss_dsc[34] +
    dwdot10dscqss16 * dscqss_dsc[594] + dwdot10dscqss1 * dscqss_dsc[69] +
    dwdot10dscqss17 * dscqss_dsc[629] + dwdot10dscqss2 * dscqss_dsc[104] +
    dwdot10dscqss3 * dscqss_dsc[139] + dwdot10dscqss4 * dscqss_dsc[174] +
    dwdot10dscqss5 * dscqss_dsc[209] + dwdot10dscqss6 * dscqss_dsc[244] +
    dwdot10dscqss7 * dscqss_dsc[279] + dwdot10dscqss9 * dscqss_dsc[349] +
    dwdot10dscqss11 * dscqss_dsc[419] + dwdot10dscqss12 * dscqss_dsc[454] +
    dwdot10dscqss14 * dscqss_dsc[524] + dwdot10dscqss13 * dscqss_dsc[489] +
    dwdot10dscqss15 * dscqss_dsc[559] + dwdot10dscqss8 * dscqss_dsc[314] +
    dwdot10dscqss10 * dscqss_dsc[384];
  J[11] =
    dwdot11dsc0 + dwdot11dscqss0 * dscqss_dsc[0] +
    dwdot11dscqss16 * dscqss_dsc[560] + dwdot11dscqss1 * dscqss_dsc[35] +
    dwdot11dscqss17 * dscqss_dsc[595] + dwdot11dscqss2 * dscqss_dsc[70] +
    dwdot11dscqss3 * dscqss_dsc[105] + dwdot11dscqss4 * dscqss_dsc[140] +
    dwdot11dscqss5 * dscqss_dsc[175] + dwdot11dscqss6 * dscqss_dsc[210] +
    dwdot11dscqss7 * dscqss_dsc[245] + dwdot11dscqss9 * dscqss_dsc[315] +
    dwdot11dscqss11 * dscqss_dsc[385] + dwdot11dscqss12 * dscqss_dsc[420] +
    dwdot11dscqss14 * dscqss_dsc[490] + dwdot11dscqss13 * dscqss_dsc[455] +
    dwdot11dscqss15 * dscqss_dsc[525] + dwdot11dscqss8 * dscqss_dsc[280] +
    dwdot11dscqss10 * dscqss_dsc[350];
  J[47] =
    dwdot11dsc1 + dwdot11dscqss0 * dscqss_dsc[1] +
    dwdot11dscqss16 * dscqss_dsc[561] + dwdot11dscqss1 * dscqss_dsc[36] +
    dwdot11dscqss17 * dscqss_dsc[596] + dwdot11dscqss2 * dscqss_dsc[71] +
    dwdot11dscqss3 * dscqss_dsc[106] + dwdot11dscqss4 * dscqss_dsc[141] +
    dwdot11dscqss5 * dscqss_dsc[176] + dwdot11dscqss6 * dscqss_dsc[211] +
    dwdot11dscqss7 * dscqss_dsc[246] + dwdot11dscqss9 * dscqss_dsc[316] +
    dwdot11dscqss11 * dscqss_dsc[386] + dwdot11dscqss12 * dscqss_dsc[421] +
    dwdot11dscqss14 * dscqss_dsc[491] + dwdot11dscqss13 * dscqss_dsc[456] +
    dwdot11dscqss15 * dscqss_dsc[526] + dwdot11dscqss8 * dscqss_dsc[281] +
    dwdot11dscqss10 * dscqss_dsc[351];
  J[83] =
    dwdot11dsc2 + dwdot11dscqss0 * dscqss_dsc[2] +
    dwdot11dscqss16 * dscqss_dsc[562] + dwdot11dscqss1 * dscqss_dsc[37] +
    dwdot11dscqss17 * dscqss_dsc[597] + dwdot11dscqss2 * dscqss_dsc[72] +
    dwdot11dscqss3 * dscqss_dsc[107] + dwdot11dscqss4 * dscqss_dsc[142] +
    dwdot11dscqss5 * dscqss_dsc[177] + dwdot11dscqss6 * dscqss_dsc[212] +
    dwdot11dscqss7 * dscqss_dsc[247] + dwdot11dscqss9 * dscqss_dsc[317] +
    dwdot11dscqss11 * dscqss_dsc[387] + dwdot11dscqss12 * dscqss_dsc[422] +
    dwdot11dscqss14 * dscqss_dsc[492] + dwdot11dscqss13 * dscqss_dsc[457] +
    dwdot11dscqss15 * dscqss_dsc[527] + dwdot11dscqss8 * dscqss_dsc[282] +
    dwdot11dscqss10 * dscqss_dsc[352];
  J[119] =
    dwdot11dsc3 + dwdot11dscqss0 * dscqss_dsc[3] +
    dwdot11dscqss16 * dscqss_dsc[563] + dwdot11dscqss1 * dscqss_dsc[38] +
    dwdot11dscqss17 * dscqss_dsc[598] + dwdot11dscqss2 * dscqss_dsc[73] +
    dwdot11dscqss3 * dscqss_dsc[108] + dwdot11dscqss4 * dscqss_dsc[143] +
    dwdot11dscqss5 * dscqss_dsc[178] + dwdot11dscqss6 * dscqss_dsc[213] +
    dwdot11dscqss7 * dscqss_dsc[248] + dwdot11dscqss9 * dscqss_dsc[318] +
    dwdot11dscqss11 * dscqss_dsc[388] + dwdot11dscqss12 * dscqss_dsc[423] +
    dwdot11dscqss14 * dscqss_dsc[493] + dwdot11dscqss13 * dscqss_dsc[458] +
    dwdot11dscqss15 * dscqss_dsc[528] + dwdot11dscqss8 * dscqss_dsc[283] +
    dwdot11dscqss10 * dscqss_dsc[353];
  J[155] =
    dwdot11dsc4 + dwdot11dscqss0 * dscqss_dsc[4] +
    dwdot11dscqss16 * dscqss_dsc[564] + dwdot11dscqss1 * dscqss_dsc[39] +
    dwdot11dscqss17 * dscqss_dsc[599] + dwdot11dscqss2 * dscqss_dsc[74] +
    dwdot11dscqss3 * dscqss_dsc[109] + dwdot11dscqss4 * dscqss_dsc[144] +
    dwdot11dscqss5 * dscqss_dsc[179] + dwdot11dscqss6 * dscqss_dsc[214] +
    dwdot11dscqss7 * dscqss_dsc[249] + dwdot11dscqss9 * dscqss_dsc[319] +
    dwdot11dscqss11 * dscqss_dsc[389] + dwdot11dscqss12 * dscqss_dsc[424] +
    dwdot11dscqss14 * dscqss_dsc[494] + dwdot11dscqss13 * dscqss_dsc[459] +
    dwdot11dscqss15 * dscqss_dsc[529] + dwdot11dscqss8 * dscqss_dsc[284] +
    dwdot11dscqss10 * dscqss_dsc[354];
  J[191] =
    dwdot11dsc5 + dwdot11dscqss0 * dscqss_dsc[5] +
    dwdot11dscqss16 * dscqss_dsc[565] + dwdot11dscqss1 * dscqss_dsc[40] +
    dwdot11dscqss17 * dscqss_dsc[600] + dwdot11dscqss2 * dscqss_dsc[75] +
    dwdot11dscqss3 * dscqss_dsc[110] + dwdot11dscqss4 * dscqss_dsc[145] +
    dwdot11dscqss5 * dscqss_dsc[180] + dwdot11dscqss6 * dscqss_dsc[215] +
    dwdot11dscqss7 * dscqss_dsc[250] + dwdot11dscqss9 * dscqss_dsc[320] +
    dwdot11dscqss11 * dscqss_dsc[390] + dwdot11dscqss12 * dscqss_dsc[425] +
    dwdot11dscqss14 * dscqss_dsc[495] + dwdot11dscqss13 * dscqss_dsc[460] +
    dwdot11dscqss15 * dscqss_dsc[530] + dwdot11dscqss8 * dscqss_dsc[285] +
    dwdot11dscqss10 * dscqss_dsc[355];
  J[227] =
    dwdot11dsc6 + dwdot11dscqss0 * dscqss_dsc[6] +
    dwdot11dscqss16 * dscqss_dsc[566] + dwdot11dscqss1 * dscqss_dsc[41] +
    dwdot11dscqss17 * dscqss_dsc[601] + dwdot11dscqss2 * dscqss_dsc[76] +
    dwdot11dscqss3 * dscqss_dsc[111] + dwdot11dscqss4 * dscqss_dsc[146] +
    dwdot11dscqss5 * dscqss_dsc[181] + dwdot11dscqss6 * dscqss_dsc[216] +
    dwdot11dscqss7 * dscqss_dsc[251] + dwdot11dscqss9 * dscqss_dsc[321] +
    dwdot11dscqss11 * dscqss_dsc[391] + dwdot11dscqss12 * dscqss_dsc[426] +
    dwdot11dscqss14 * dscqss_dsc[496] + dwdot11dscqss13 * dscqss_dsc[461] +
    dwdot11dscqss15 * dscqss_dsc[531] + dwdot11dscqss8 * dscqss_dsc[286] +
    dwdot11dscqss10 * dscqss_dsc[356];
  J[263] =
    dwdot11dsc7 + dwdot11dscqss0 * dscqss_dsc[7] +
    dwdot11dscqss16 * dscqss_dsc[567] + dwdot11dscqss1 * dscqss_dsc[42] +
    dwdot11dscqss17 * dscqss_dsc[602] + dwdot11dscqss2 * dscqss_dsc[77] +
    dwdot11dscqss3 * dscqss_dsc[112] + dwdot11dscqss4 * dscqss_dsc[147] +
    dwdot11dscqss5 * dscqss_dsc[182] + dwdot11dscqss6 * dscqss_dsc[217] +
    dwdot11dscqss7 * dscqss_dsc[252] + dwdot11dscqss9 * dscqss_dsc[322] +
    dwdot11dscqss11 * dscqss_dsc[392] + dwdot11dscqss12 * dscqss_dsc[427] +
    dwdot11dscqss14 * dscqss_dsc[497] + dwdot11dscqss13 * dscqss_dsc[462] +
    dwdot11dscqss15 * dscqss_dsc[532] + dwdot11dscqss8 * dscqss_dsc[287] +
    dwdot11dscqss10 * dscqss_dsc[357];
  J[299] =
    dwdot11dsc8 + dwdot11dscqss0 * dscqss_dsc[8] +
    dwdot11dscqss16 * dscqss_dsc[568] + dwdot11dscqss1 * dscqss_dsc[43] +
    dwdot11dscqss17 * dscqss_dsc[603] + dwdot11dscqss2 * dscqss_dsc[78] +
    dwdot11dscqss3 * dscqss_dsc[113] + dwdot11dscqss4 * dscqss_dsc[148] +
    dwdot11dscqss5 * dscqss_dsc[183] + dwdot11dscqss6 * dscqss_dsc[218] +
    dwdot11dscqss7 * dscqss_dsc[253] + dwdot11dscqss9 * dscqss_dsc[323] +
    dwdot11dscqss11 * dscqss_dsc[393] + dwdot11dscqss12 * dscqss_dsc[428] +
    dwdot11dscqss14 * dscqss_dsc[498] + dwdot11dscqss13 * dscqss_dsc[463] +
    dwdot11dscqss15 * dscqss_dsc[533] + dwdot11dscqss8 * dscqss_dsc[288] +
    dwdot11dscqss10 * dscqss_dsc[358];
  J[335] =
    dwdot11dsc9 + dwdot11dscqss0 * dscqss_dsc[9] +
    dwdot11dscqss16 * dscqss_dsc[569] + dwdot11dscqss1 * dscqss_dsc[44] +
    dwdot11dscqss17 * dscqss_dsc[604] + dwdot11dscqss2 * dscqss_dsc[79] +
    dwdot11dscqss3 * dscqss_dsc[114] + dwdot11dscqss4 * dscqss_dsc[149] +
    dwdot11dscqss5 * dscqss_dsc[184] + dwdot11dscqss6 * dscqss_dsc[219] +
    dwdot11dscqss7 * dscqss_dsc[254] + dwdot11dscqss9 * dscqss_dsc[324] +
    dwdot11dscqss11 * dscqss_dsc[394] + dwdot11dscqss12 * dscqss_dsc[429] +
    dwdot11dscqss14 * dscqss_dsc[499] + dwdot11dscqss13 * dscqss_dsc[464] +
    dwdot11dscqss15 * dscqss_dsc[534] + dwdot11dscqss8 * dscqss_dsc[289] +
    dwdot11dscqss10 * dscqss_dsc[359];
  J[371] =
    dwdot11dsc10 + dwdot11dscqss0 * dscqss_dsc[10] +
    dwdot11dscqss16 * dscqss_dsc[570] + dwdot11dscqss1 * dscqss_dsc[45] +
    dwdot11dscqss17 * dscqss_dsc[605] + dwdot11dscqss2 * dscqss_dsc[80] +
    dwdot11dscqss3 * dscqss_dsc[115] + dwdot11dscqss4 * dscqss_dsc[150] +
    dwdot11dscqss5 * dscqss_dsc[185] + dwdot11dscqss6 * dscqss_dsc[220] +
    dwdot11dscqss7 * dscqss_dsc[255] + dwdot11dscqss9 * dscqss_dsc[325] +
    dwdot11dscqss11 * dscqss_dsc[395] + dwdot11dscqss12 * dscqss_dsc[430] +
    dwdot11dscqss14 * dscqss_dsc[500] + dwdot11dscqss13 * dscqss_dsc[465] +
    dwdot11dscqss15 * dscqss_dsc[535] + dwdot11dscqss8 * dscqss_dsc[290] +
    dwdot11dscqss10 * dscqss_dsc[360];
  J[407] =
    dwdot11dsc11 + dwdot11dscqss0 * dscqss_dsc[11] +
    dwdot11dscqss16 * dscqss_dsc[571] + dwdot11dscqss1 * dscqss_dsc[46] +
    dwdot11dscqss17 * dscqss_dsc[606] + dwdot11dscqss2 * dscqss_dsc[81] +
    dwdot11dscqss3 * dscqss_dsc[116] + dwdot11dscqss4 * dscqss_dsc[151] +
    dwdot11dscqss5 * dscqss_dsc[186] + dwdot11dscqss6 * dscqss_dsc[221] +
    dwdot11dscqss7 * dscqss_dsc[256] + dwdot11dscqss9 * dscqss_dsc[326] +
    dwdot11dscqss11 * dscqss_dsc[396] + dwdot11dscqss12 * dscqss_dsc[431] +
    dwdot11dscqss14 * dscqss_dsc[501] + dwdot11dscqss13 * dscqss_dsc[466] +
    dwdot11dscqss15 * dscqss_dsc[536] + dwdot11dscqss8 * dscqss_dsc[291] +
    dwdot11dscqss10 * dscqss_dsc[361];
  J[443] =
    dwdot11dsc12 + dwdot11dscqss0 * dscqss_dsc[12] +
    dwdot11dscqss16 * dscqss_dsc[572] + dwdot11dscqss1 * dscqss_dsc[47] +
    dwdot11dscqss17 * dscqss_dsc[607] + dwdot11dscqss2 * dscqss_dsc[82] +
    dwdot11dscqss3 * dscqss_dsc[117] + dwdot11dscqss4 * dscqss_dsc[152] +
    dwdot11dscqss5 * dscqss_dsc[187] + dwdot11dscqss6 * dscqss_dsc[222] +
    dwdot11dscqss7 * dscqss_dsc[257] + dwdot11dscqss9 * dscqss_dsc[327] +
    dwdot11dscqss11 * dscqss_dsc[397] + dwdot11dscqss12 * dscqss_dsc[432] +
    dwdot11dscqss14 * dscqss_dsc[502] + dwdot11dscqss13 * dscqss_dsc[467] +
    dwdot11dscqss15 * dscqss_dsc[537] + dwdot11dscqss8 * dscqss_dsc[292] +
    dwdot11dscqss10 * dscqss_dsc[362];
  J[479] =
    dwdot11dsc13 + dwdot11dscqss0 * dscqss_dsc[13] +
    dwdot11dscqss16 * dscqss_dsc[573] + dwdot11dscqss1 * dscqss_dsc[48] +
    dwdot11dscqss17 * dscqss_dsc[608] + dwdot11dscqss2 * dscqss_dsc[83] +
    dwdot11dscqss3 * dscqss_dsc[118] + dwdot11dscqss4 * dscqss_dsc[153] +
    dwdot11dscqss5 * dscqss_dsc[188] + dwdot11dscqss6 * dscqss_dsc[223] +
    dwdot11dscqss7 * dscqss_dsc[258] + dwdot11dscqss9 * dscqss_dsc[328] +
    dwdot11dscqss11 * dscqss_dsc[398] + dwdot11dscqss12 * dscqss_dsc[433] +
    dwdot11dscqss14 * dscqss_dsc[503] + dwdot11dscqss13 * dscqss_dsc[468] +
    dwdot11dscqss15 * dscqss_dsc[538] + dwdot11dscqss8 * dscqss_dsc[293] +
    dwdot11dscqss10 * dscqss_dsc[363];
  J[515] =
    dwdot11dsc14 + dwdot11dscqss0 * dscqss_dsc[14] +
    dwdot11dscqss16 * dscqss_dsc[574] + dwdot11dscqss1 * dscqss_dsc[49] +
    dwdot11dscqss17 * dscqss_dsc[609] + dwdot11dscqss2 * dscqss_dsc[84] +
    dwdot11dscqss3 * dscqss_dsc[119] + dwdot11dscqss4 * dscqss_dsc[154] +
    dwdot11dscqss5 * dscqss_dsc[189] + dwdot11dscqss6 * dscqss_dsc[224] +
    dwdot11dscqss7 * dscqss_dsc[259] + dwdot11dscqss9 * dscqss_dsc[329] +
    dwdot11dscqss11 * dscqss_dsc[399] + dwdot11dscqss12 * dscqss_dsc[434] +
    dwdot11dscqss14 * dscqss_dsc[504] + dwdot11dscqss13 * dscqss_dsc[469] +
    dwdot11dscqss15 * dscqss_dsc[539] + dwdot11dscqss8 * dscqss_dsc[294] +
    dwdot11dscqss10 * dscqss_dsc[364];
  J[551] =
    dwdot11dsc15 + dwdot11dscqss0 * dscqss_dsc[15] +
    dwdot11dscqss16 * dscqss_dsc[575] + dwdot11dscqss1 * dscqss_dsc[50] +
    dwdot11dscqss17 * dscqss_dsc[610] + dwdot11dscqss2 * dscqss_dsc[85] +
    dwdot11dscqss3 * dscqss_dsc[120] + dwdot11dscqss4 * dscqss_dsc[155] +
    dwdot11dscqss5 * dscqss_dsc[190] + dwdot11dscqss6 * dscqss_dsc[225] +
    dwdot11dscqss7 * dscqss_dsc[260] + dwdot11dscqss9 * dscqss_dsc[330] +
    dwdot11dscqss11 * dscqss_dsc[400] + dwdot11dscqss12 * dscqss_dsc[435] +
    dwdot11dscqss14 * dscqss_dsc[505] + dwdot11dscqss13 * dscqss_dsc[470] +
    dwdot11dscqss15 * dscqss_dsc[540] + dwdot11dscqss8 * dscqss_dsc[295] +
    dwdot11dscqss10 * dscqss_dsc[365];
  J[587] =
    dwdot11dsc16 + dwdot11dscqss0 * dscqss_dsc[16] +
    dwdot11dscqss16 * dscqss_dsc[576] + dwdot11dscqss1 * dscqss_dsc[51] +
    dwdot11dscqss17 * dscqss_dsc[611] + dwdot11dscqss2 * dscqss_dsc[86] +
    dwdot11dscqss3 * dscqss_dsc[121] + dwdot11dscqss4 * dscqss_dsc[156] +
    dwdot11dscqss5 * dscqss_dsc[191] + dwdot11dscqss6 * dscqss_dsc[226] +
    dwdot11dscqss7 * dscqss_dsc[261] + dwdot11dscqss9 * dscqss_dsc[331] +
    dwdot11dscqss11 * dscqss_dsc[401] + dwdot11dscqss12 * dscqss_dsc[436] +
    dwdot11dscqss14 * dscqss_dsc[506] + dwdot11dscqss13 * dscqss_dsc[471] +
    dwdot11dscqss15 * dscqss_dsc[541] + dwdot11dscqss8 * dscqss_dsc[296] +
    dwdot11dscqss10 * dscqss_dsc[366];
  J[623] =
    dwdot11dsc17 + dwdot11dscqss0 * dscqss_dsc[17] +
    dwdot11dscqss16 * dscqss_dsc[577] + dwdot11dscqss1 * dscqss_dsc[52] +
    dwdot11dscqss17 * dscqss_dsc[612] + dwdot11dscqss2 * dscqss_dsc[87] +
    dwdot11dscqss3 * dscqss_dsc[122] + dwdot11dscqss4 * dscqss_dsc[157] +
    dwdot11dscqss5 * dscqss_dsc[192] + dwdot11dscqss6 * dscqss_dsc[227] +
    dwdot11dscqss7 * dscqss_dsc[262] + dwdot11dscqss9 * dscqss_dsc[332] +
    dwdot11dscqss11 * dscqss_dsc[402] + dwdot11dscqss12 * dscqss_dsc[437] +
    dwdot11dscqss14 * dscqss_dsc[507] + dwdot11dscqss13 * dscqss_dsc[472] +
    dwdot11dscqss15 * dscqss_dsc[542] + dwdot11dscqss8 * dscqss_dsc[297] +
    dwdot11dscqss10 * dscqss_dsc[367];
  J[659] =
    dwdot11dsc18 + dwdot11dscqss0 * dscqss_dsc[18] +
    dwdot11dscqss16 * dscqss_dsc[578] + dwdot11dscqss1 * dscqss_dsc[53] +
    dwdot11dscqss17 * dscqss_dsc[613] + dwdot11dscqss2 * dscqss_dsc[88] +
    dwdot11dscqss3 * dscqss_dsc[123] + dwdot11dscqss4 * dscqss_dsc[158] +
    dwdot11dscqss5 * dscqss_dsc[193] + dwdot11dscqss6 * dscqss_dsc[228] +
    dwdot11dscqss7 * dscqss_dsc[263] + dwdot11dscqss9 * dscqss_dsc[333] +
    dwdot11dscqss11 * dscqss_dsc[403] + dwdot11dscqss12 * dscqss_dsc[438] +
    dwdot11dscqss14 * dscqss_dsc[508] + dwdot11dscqss13 * dscqss_dsc[473] +
    dwdot11dscqss15 * dscqss_dsc[543] + dwdot11dscqss8 * dscqss_dsc[298] +
    dwdot11dscqss10 * dscqss_dsc[368];
  J[695] =
    dwdot11dsc19 + dwdot11dscqss0 * dscqss_dsc[19] +
    dwdot11dscqss16 * dscqss_dsc[579] + dwdot11dscqss1 * dscqss_dsc[54] +
    dwdot11dscqss17 * dscqss_dsc[614] + dwdot11dscqss2 * dscqss_dsc[89] +
    dwdot11dscqss3 * dscqss_dsc[124] + dwdot11dscqss4 * dscqss_dsc[159] +
    dwdot11dscqss5 * dscqss_dsc[194] + dwdot11dscqss6 * dscqss_dsc[229] +
    dwdot11dscqss7 * dscqss_dsc[264] + dwdot11dscqss9 * dscqss_dsc[334] +
    dwdot11dscqss11 * dscqss_dsc[404] + dwdot11dscqss12 * dscqss_dsc[439] +
    dwdot11dscqss14 * dscqss_dsc[509] + dwdot11dscqss13 * dscqss_dsc[474] +
    dwdot11dscqss15 * dscqss_dsc[544] + dwdot11dscqss8 * dscqss_dsc[299] +
    dwdot11dscqss10 * dscqss_dsc[369];
  J[731] =
    dwdot11dsc20 + dwdot11dscqss0 * dscqss_dsc[20] +
    dwdot11dscqss16 * dscqss_dsc[580] + dwdot11dscqss1 * dscqss_dsc[55] +
    dwdot11dscqss17 * dscqss_dsc[615] + dwdot11dscqss2 * dscqss_dsc[90] +
    dwdot11dscqss3 * dscqss_dsc[125] + dwdot11dscqss4 * dscqss_dsc[160] +
    dwdot11dscqss5 * dscqss_dsc[195] + dwdot11dscqss6 * dscqss_dsc[230] +
    dwdot11dscqss7 * dscqss_dsc[265] + dwdot11dscqss9 * dscqss_dsc[335] +
    dwdot11dscqss11 * dscqss_dsc[405] + dwdot11dscqss12 * dscqss_dsc[440] +
    dwdot11dscqss14 * dscqss_dsc[510] + dwdot11dscqss13 * dscqss_dsc[475] +
    dwdot11dscqss15 * dscqss_dsc[545] + dwdot11dscqss8 * dscqss_dsc[300] +
    dwdot11dscqss10 * dscqss_dsc[370];
  J[767] =
    dwdot11dsc21 + dwdot11dscqss0 * dscqss_dsc[21] +
    dwdot11dscqss16 * dscqss_dsc[581] + dwdot11dscqss1 * dscqss_dsc[56] +
    dwdot11dscqss17 * dscqss_dsc[616] + dwdot11dscqss2 * dscqss_dsc[91] +
    dwdot11dscqss3 * dscqss_dsc[126] + dwdot11dscqss4 * dscqss_dsc[161] +
    dwdot11dscqss5 * dscqss_dsc[196] + dwdot11dscqss6 * dscqss_dsc[231] +
    dwdot11dscqss7 * dscqss_dsc[266] + dwdot11dscqss9 * dscqss_dsc[336] +
    dwdot11dscqss11 * dscqss_dsc[406] + dwdot11dscqss12 * dscqss_dsc[441] +
    dwdot11dscqss14 * dscqss_dsc[511] + dwdot11dscqss13 * dscqss_dsc[476] +
    dwdot11dscqss15 * dscqss_dsc[546] + dwdot11dscqss8 * dscqss_dsc[301] +
    dwdot11dscqss10 * dscqss_dsc[371];
  J[803] =
    dwdot11dsc22 + dwdot11dscqss0 * dscqss_dsc[22] +
    dwdot11dscqss16 * dscqss_dsc[582] + dwdot11dscqss1 * dscqss_dsc[57] +
    dwdot11dscqss17 * dscqss_dsc[617] + dwdot11dscqss2 * dscqss_dsc[92] +
    dwdot11dscqss3 * dscqss_dsc[127] + dwdot11dscqss4 * dscqss_dsc[162] +
    dwdot11dscqss5 * dscqss_dsc[197] + dwdot11dscqss6 * dscqss_dsc[232] +
    dwdot11dscqss7 * dscqss_dsc[267] + dwdot11dscqss9 * dscqss_dsc[337] +
    dwdot11dscqss11 * dscqss_dsc[407] + dwdot11dscqss12 * dscqss_dsc[442] +
    dwdot11dscqss14 * dscqss_dsc[512] + dwdot11dscqss13 * dscqss_dsc[477] +
    dwdot11dscqss15 * dscqss_dsc[547] + dwdot11dscqss8 * dscqss_dsc[302] +
    dwdot11dscqss10 * dscqss_dsc[372];
  J[839] =
    dwdot11dsc23 + dwdot11dscqss0 * dscqss_dsc[23] +
    dwdot11dscqss16 * dscqss_dsc[583] + dwdot11dscqss1 * dscqss_dsc[58] +
    dwdot11dscqss17 * dscqss_dsc[618] + dwdot11dscqss2 * dscqss_dsc[93] +
    dwdot11dscqss3 * dscqss_dsc[128] + dwdot11dscqss4 * dscqss_dsc[163] +
    dwdot11dscqss5 * dscqss_dsc[198] + dwdot11dscqss6 * dscqss_dsc[233] +
    dwdot11dscqss7 * dscqss_dsc[268] + dwdot11dscqss9 * dscqss_dsc[338] +
    dwdot11dscqss11 * dscqss_dsc[408] + dwdot11dscqss12 * dscqss_dsc[443] +
    dwdot11dscqss14 * dscqss_dsc[513] + dwdot11dscqss13 * dscqss_dsc[478] +
    dwdot11dscqss15 * dscqss_dsc[548] + dwdot11dscqss8 * dscqss_dsc[303] +
    dwdot11dscqss10 * dscqss_dsc[373];
  J[875] =
    dwdot11dsc24 + dwdot11dscqss0 * dscqss_dsc[24] +
    dwdot11dscqss16 * dscqss_dsc[584] + dwdot11dscqss1 * dscqss_dsc[59] +
    dwdot11dscqss17 * dscqss_dsc[619] + dwdot11dscqss2 * dscqss_dsc[94] +
    dwdot11dscqss3 * dscqss_dsc[129] + dwdot11dscqss4 * dscqss_dsc[164] +
    dwdot11dscqss5 * dscqss_dsc[199] + dwdot11dscqss6 * dscqss_dsc[234] +
    dwdot11dscqss7 * dscqss_dsc[269] + dwdot11dscqss9 * dscqss_dsc[339] +
    dwdot11dscqss11 * dscqss_dsc[409] + dwdot11dscqss12 * dscqss_dsc[444] +
    dwdot11dscqss14 * dscqss_dsc[514] + dwdot11dscqss13 * dscqss_dsc[479] +
    dwdot11dscqss15 * dscqss_dsc[549] + dwdot11dscqss8 * dscqss_dsc[304] +
    dwdot11dscqss10 * dscqss_dsc[374];
  J[911] =
    dwdot11dsc25 + dwdot11dscqss0 * dscqss_dsc[25] +
    dwdot11dscqss16 * dscqss_dsc[585] + dwdot11dscqss1 * dscqss_dsc[60] +
    dwdot11dscqss17 * dscqss_dsc[620] + dwdot11dscqss2 * dscqss_dsc[95] +
    dwdot11dscqss3 * dscqss_dsc[130] + dwdot11dscqss4 * dscqss_dsc[165] +
    dwdot11dscqss5 * dscqss_dsc[200] + dwdot11dscqss6 * dscqss_dsc[235] +
    dwdot11dscqss7 * dscqss_dsc[270] + dwdot11dscqss9 * dscqss_dsc[340] +
    dwdot11dscqss11 * dscqss_dsc[410] + dwdot11dscqss12 * dscqss_dsc[445] +
    dwdot11dscqss14 * dscqss_dsc[515] + dwdot11dscqss13 * dscqss_dsc[480] +
    dwdot11dscqss15 * dscqss_dsc[550] + dwdot11dscqss8 * dscqss_dsc[305] +
    dwdot11dscqss10 * dscqss_dsc[375];
  J[947] =
    dwdot11dsc26 + dwdot11dscqss0 * dscqss_dsc[26] +
    dwdot11dscqss16 * dscqss_dsc[586] + dwdot11dscqss1 * dscqss_dsc[61] +
    dwdot11dscqss17 * dscqss_dsc[621] + dwdot11dscqss2 * dscqss_dsc[96] +
    dwdot11dscqss3 * dscqss_dsc[131] + dwdot11dscqss4 * dscqss_dsc[166] +
    dwdot11dscqss5 * dscqss_dsc[201] + dwdot11dscqss6 * dscqss_dsc[236] +
    dwdot11dscqss7 * dscqss_dsc[271] + dwdot11dscqss9 * dscqss_dsc[341] +
    dwdot11dscqss11 * dscqss_dsc[411] + dwdot11dscqss12 * dscqss_dsc[446] +
    dwdot11dscqss14 * dscqss_dsc[516] + dwdot11dscqss13 * dscqss_dsc[481] +
    dwdot11dscqss15 * dscqss_dsc[551] + dwdot11dscqss8 * dscqss_dsc[306] +
    dwdot11dscqss10 * dscqss_dsc[376];
  J[983] =
    dwdot11dsc27 + dwdot11dscqss0 * dscqss_dsc[27] +
    dwdot11dscqss16 * dscqss_dsc[587] + dwdot11dscqss1 * dscqss_dsc[62] +
    dwdot11dscqss17 * dscqss_dsc[622] + dwdot11dscqss2 * dscqss_dsc[97] +
    dwdot11dscqss3 * dscqss_dsc[132] + dwdot11dscqss4 * dscqss_dsc[167] +
    dwdot11dscqss5 * dscqss_dsc[202] + dwdot11dscqss6 * dscqss_dsc[237] +
    dwdot11dscqss7 * dscqss_dsc[272] + dwdot11dscqss9 * dscqss_dsc[342] +
    dwdot11dscqss11 * dscqss_dsc[412] + dwdot11dscqss12 * dscqss_dsc[447] +
    dwdot11dscqss14 * dscqss_dsc[517] + dwdot11dscqss13 * dscqss_dsc[482] +
    dwdot11dscqss15 * dscqss_dsc[552] + dwdot11dscqss8 * dscqss_dsc[307] +
    dwdot11dscqss10 * dscqss_dsc[377];
  J[1019] =
    dwdot11dsc28 + dwdot11dscqss0 * dscqss_dsc[28] +
    dwdot11dscqss16 * dscqss_dsc[588] + dwdot11dscqss1 * dscqss_dsc[63] +
    dwdot11dscqss17 * dscqss_dsc[623] + dwdot11dscqss2 * dscqss_dsc[98] +
    dwdot11dscqss3 * dscqss_dsc[133] + dwdot11dscqss4 * dscqss_dsc[168] +
    dwdot11dscqss5 * dscqss_dsc[203] + dwdot11dscqss6 * dscqss_dsc[238] +
    dwdot11dscqss7 * dscqss_dsc[273] + dwdot11dscqss9 * dscqss_dsc[343] +
    dwdot11dscqss11 * dscqss_dsc[413] + dwdot11dscqss12 * dscqss_dsc[448] +
    dwdot11dscqss14 * dscqss_dsc[518] + dwdot11dscqss13 * dscqss_dsc[483] +
    dwdot11dscqss15 * dscqss_dsc[553] + dwdot11dscqss8 * dscqss_dsc[308] +
    dwdot11dscqss10 * dscqss_dsc[378];
  J[1055] =
    dwdot11dsc29 + dwdot11dscqss0 * dscqss_dsc[29] +
    dwdot11dscqss16 * dscqss_dsc[589] + dwdot11dscqss1 * dscqss_dsc[64] +
    dwdot11dscqss17 * dscqss_dsc[624] + dwdot11dscqss2 * dscqss_dsc[99] +
    dwdot11dscqss3 * dscqss_dsc[134] + dwdot11dscqss4 * dscqss_dsc[169] +
    dwdot11dscqss5 * dscqss_dsc[204] + dwdot11dscqss6 * dscqss_dsc[239] +
    dwdot11dscqss7 * dscqss_dsc[274] + dwdot11dscqss9 * dscqss_dsc[344] +
    dwdot11dscqss11 * dscqss_dsc[414] + dwdot11dscqss12 * dscqss_dsc[449] +
    dwdot11dscqss14 * dscqss_dsc[519] + dwdot11dscqss13 * dscqss_dsc[484] +
    dwdot11dscqss15 * dscqss_dsc[554] + dwdot11dscqss8 * dscqss_dsc[309] +
    dwdot11dscqss10 * dscqss_dsc[379];
  J[1091] =
    dwdot11dsc30 + dwdot11dscqss0 * dscqss_dsc[30] +
    dwdot11dscqss16 * dscqss_dsc[590] + dwdot11dscqss1 * dscqss_dsc[65] +
    dwdot11dscqss17 * dscqss_dsc[625] + dwdot11dscqss2 * dscqss_dsc[100] +
    dwdot11dscqss3 * dscqss_dsc[135] + dwdot11dscqss4 * dscqss_dsc[170] +
    dwdot11dscqss5 * dscqss_dsc[205] + dwdot11dscqss6 * dscqss_dsc[240] +
    dwdot11dscqss7 * dscqss_dsc[275] + dwdot11dscqss9 * dscqss_dsc[345] +
    dwdot11dscqss11 * dscqss_dsc[415] + dwdot11dscqss12 * dscqss_dsc[450] +
    dwdot11dscqss14 * dscqss_dsc[520] + dwdot11dscqss13 * dscqss_dsc[485] +
    dwdot11dscqss15 * dscqss_dsc[555] + dwdot11dscqss8 * dscqss_dsc[310] +
    dwdot11dscqss10 * dscqss_dsc[380];
  J[1127] =
    dwdot11dsc31 + dwdot11dscqss0 * dscqss_dsc[31] +
    dwdot11dscqss16 * dscqss_dsc[591] + dwdot11dscqss1 * dscqss_dsc[66] +
    dwdot11dscqss17 * dscqss_dsc[626] + dwdot11dscqss2 * dscqss_dsc[101] +
    dwdot11dscqss3 * dscqss_dsc[136] + dwdot11dscqss4 * dscqss_dsc[171] +
    dwdot11dscqss5 * dscqss_dsc[206] + dwdot11dscqss6 * dscqss_dsc[241] +
    dwdot11dscqss7 * dscqss_dsc[276] + dwdot11dscqss9 * dscqss_dsc[346] +
    dwdot11dscqss11 * dscqss_dsc[416] + dwdot11dscqss12 * dscqss_dsc[451] +
    dwdot11dscqss14 * dscqss_dsc[521] + dwdot11dscqss13 * dscqss_dsc[486] +
    dwdot11dscqss15 * dscqss_dsc[556] + dwdot11dscqss8 * dscqss_dsc[311] +
    dwdot11dscqss10 * dscqss_dsc[381];
  J[1163] =
    dwdot11dsc32 + dwdot11dscqss0 * dscqss_dsc[32] +
    dwdot11dscqss16 * dscqss_dsc[592] + dwdot11dscqss1 * dscqss_dsc[67] +
    dwdot11dscqss17 * dscqss_dsc[627] + dwdot11dscqss2 * dscqss_dsc[102] +
    dwdot11dscqss3 * dscqss_dsc[137] + dwdot11dscqss4 * dscqss_dsc[172] +
    dwdot11dscqss5 * dscqss_dsc[207] + dwdot11dscqss6 * dscqss_dsc[242] +
    dwdot11dscqss7 * dscqss_dsc[277] + dwdot11dscqss9 * dscqss_dsc[347] +
    dwdot11dscqss11 * dscqss_dsc[417] + dwdot11dscqss12 * dscqss_dsc[452] +
    dwdot11dscqss14 * dscqss_dsc[522] + dwdot11dscqss13 * dscqss_dsc[487] +
    dwdot11dscqss15 * dscqss_dsc[557] + dwdot11dscqss8 * dscqss_dsc[312] +
    dwdot11dscqss10 * dscqss_dsc[382];
  J[1199] =
    dwdot11dsc33 + dwdot11dscqss0 * dscqss_dsc[33] +
    dwdot11dscqss16 * dscqss_dsc[593] + dwdot11dscqss1 * dscqss_dsc[68] +
    dwdot11dscqss17 * dscqss_dsc[628] + dwdot11dscqss2 * dscqss_dsc[103] +
    dwdot11dscqss3 * dscqss_dsc[138] + dwdot11dscqss4 * dscqss_dsc[173] +
    dwdot11dscqss5 * dscqss_dsc[208] + dwdot11dscqss6 * dscqss_dsc[243] +
    dwdot11dscqss7 * dscqss_dsc[278] + dwdot11dscqss9 * dscqss_dsc[348] +
    dwdot11dscqss11 * dscqss_dsc[418] + dwdot11dscqss12 * dscqss_dsc[453] +
    dwdot11dscqss14 * dscqss_dsc[523] + dwdot11dscqss13 * dscqss_dsc[488] +
    dwdot11dscqss15 * dscqss_dsc[558] + dwdot11dscqss8 * dscqss_dsc[313] +
    dwdot11dscqss10 * dscqss_dsc[383];
  J[1235] =
    dwdot11dsc34 + dwdot11dscqss0 * dscqss_dsc[34] +
    dwdot11dscqss16 * dscqss_dsc[594] + dwdot11dscqss1 * dscqss_dsc[69] +
    dwdot11dscqss17 * dscqss_dsc[629] + dwdot11dscqss2 * dscqss_dsc[104] +
    dwdot11dscqss3 * dscqss_dsc[139] + dwdot11dscqss4 * dscqss_dsc[174] +
    dwdot11dscqss5 * dscqss_dsc[209] + dwdot11dscqss6 * dscqss_dsc[244] +
    dwdot11dscqss7 * dscqss_dsc[279] + dwdot11dscqss9 * dscqss_dsc[349] +
    dwdot11dscqss11 * dscqss_dsc[419] + dwdot11dscqss12 * dscqss_dsc[454] +
    dwdot11dscqss14 * dscqss_dsc[524] + dwdot11dscqss13 * dscqss_dsc[489] +
    dwdot11dscqss15 * dscqss_dsc[559] + dwdot11dscqss8 * dscqss_dsc[314] +
    dwdot11dscqss10 * dscqss_dsc[384];
  J[12] =
    dwdot12dsc0 + dwdot12dscqss0 * dscqss_dsc[0] +
    dwdot12dscqss16 * dscqss_dsc[560] + dwdot12dscqss1 * dscqss_dsc[35] +
    dwdot12dscqss17 * dscqss_dsc[595] + dwdot12dscqss2 * dscqss_dsc[70] +
    dwdot12dscqss3 * dscqss_dsc[105] + dwdot12dscqss4 * dscqss_dsc[140] +
    dwdot12dscqss5 * dscqss_dsc[175] + dwdot12dscqss6 * dscqss_dsc[210] +
    dwdot12dscqss7 * dscqss_dsc[245] + dwdot12dscqss9 * dscqss_dsc[315] +
    dwdot12dscqss11 * dscqss_dsc[385] + dwdot12dscqss12 * dscqss_dsc[420] +
    dwdot12dscqss14 * dscqss_dsc[490] + dwdot12dscqss13 * dscqss_dsc[455] +
    dwdot12dscqss15 * dscqss_dsc[525] + dwdot12dscqss8 * dscqss_dsc[280] +
    dwdot12dscqss10 * dscqss_dsc[350];
  J[48] =
    dwdot12dsc1 + dwdot12dscqss0 * dscqss_dsc[1] +
    dwdot12dscqss16 * dscqss_dsc[561] + dwdot12dscqss1 * dscqss_dsc[36] +
    dwdot12dscqss17 * dscqss_dsc[596] + dwdot12dscqss2 * dscqss_dsc[71] +
    dwdot12dscqss3 * dscqss_dsc[106] + dwdot12dscqss4 * dscqss_dsc[141] +
    dwdot12dscqss5 * dscqss_dsc[176] + dwdot12dscqss6 * dscqss_dsc[211] +
    dwdot12dscqss7 * dscqss_dsc[246] + dwdot12dscqss9 * dscqss_dsc[316] +
    dwdot12dscqss11 * dscqss_dsc[386] + dwdot12dscqss12 * dscqss_dsc[421] +
    dwdot12dscqss14 * dscqss_dsc[491] + dwdot12dscqss13 * dscqss_dsc[456] +
    dwdot12dscqss15 * dscqss_dsc[526] + dwdot12dscqss8 * dscqss_dsc[281] +
    dwdot12dscqss10 * dscqss_dsc[351];
  J[84] =
    dwdot12dsc2 + dwdot12dscqss0 * dscqss_dsc[2] +
    dwdot12dscqss16 * dscqss_dsc[562] + dwdot12dscqss1 * dscqss_dsc[37] +
    dwdot12dscqss17 * dscqss_dsc[597] + dwdot12dscqss2 * dscqss_dsc[72] +
    dwdot12dscqss3 * dscqss_dsc[107] + dwdot12dscqss4 * dscqss_dsc[142] +
    dwdot12dscqss5 * dscqss_dsc[177] + dwdot12dscqss6 * dscqss_dsc[212] +
    dwdot12dscqss7 * dscqss_dsc[247] + dwdot12dscqss9 * dscqss_dsc[317] +
    dwdot12dscqss11 * dscqss_dsc[387] + dwdot12dscqss12 * dscqss_dsc[422] +
    dwdot12dscqss14 * dscqss_dsc[492] + dwdot12dscqss13 * dscqss_dsc[457] +
    dwdot12dscqss15 * dscqss_dsc[527] + dwdot12dscqss8 * dscqss_dsc[282] +
    dwdot12dscqss10 * dscqss_dsc[352];
  J[120] =
    dwdot12dsc3 + dwdot12dscqss0 * dscqss_dsc[3] +
    dwdot12dscqss16 * dscqss_dsc[563] + dwdot12dscqss1 * dscqss_dsc[38] +
    dwdot12dscqss17 * dscqss_dsc[598] + dwdot12dscqss2 * dscqss_dsc[73] +
    dwdot12dscqss3 * dscqss_dsc[108] + dwdot12dscqss4 * dscqss_dsc[143] +
    dwdot12dscqss5 * dscqss_dsc[178] + dwdot12dscqss6 * dscqss_dsc[213] +
    dwdot12dscqss7 * dscqss_dsc[248] + dwdot12dscqss9 * dscqss_dsc[318] +
    dwdot12dscqss11 * dscqss_dsc[388] + dwdot12dscqss12 * dscqss_dsc[423] +
    dwdot12dscqss14 * dscqss_dsc[493] + dwdot12dscqss13 * dscqss_dsc[458] +
    dwdot12dscqss15 * dscqss_dsc[528] + dwdot12dscqss8 * dscqss_dsc[283] +
    dwdot12dscqss10 * dscqss_dsc[353];
  J[156] =
    dwdot12dsc4 + dwdot12dscqss0 * dscqss_dsc[4] +
    dwdot12dscqss16 * dscqss_dsc[564] + dwdot12dscqss1 * dscqss_dsc[39] +
    dwdot12dscqss17 * dscqss_dsc[599] + dwdot12dscqss2 * dscqss_dsc[74] +
    dwdot12dscqss3 * dscqss_dsc[109] + dwdot12dscqss4 * dscqss_dsc[144] +
    dwdot12dscqss5 * dscqss_dsc[179] + dwdot12dscqss6 * dscqss_dsc[214] +
    dwdot12dscqss7 * dscqss_dsc[249] + dwdot12dscqss9 * dscqss_dsc[319] +
    dwdot12dscqss11 * dscqss_dsc[389] + dwdot12dscqss12 * dscqss_dsc[424] +
    dwdot12dscqss14 * dscqss_dsc[494] + dwdot12dscqss13 * dscqss_dsc[459] +
    dwdot12dscqss15 * dscqss_dsc[529] + dwdot12dscqss8 * dscqss_dsc[284] +
    dwdot12dscqss10 * dscqss_dsc[354];
  J[192] =
    dwdot12dsc5 + dwdot12dscqss0 * dscqss_dsc[5] +
    dwdot12dscqss16 * dscqss_dsc[565] + dwdot12dscqss1 * dscqss_dsc[40] +
    dwdot12dscqss17 * dscqss_dsc[600] + dwdot12dscqss2 * dscqss_dsc[75] +
    dwdot12dscqss3 * dscqss_dsc[110] + dwdot12dscqss4 * dscqss_dsc[145] +
    dwdot12dscqss5 * dscqss_dsc[180] + dwdot12dscqss6 * dscqss_dsc[215] +
    dwdot12dscqss7 * dscqss_dsc[250] + dwdot12dscqss9 * dscqss_dsc[320] +
    dwdot12dscqss11 * dscqss_dsc[390] + dwdot12dscqss12 * dscqss_dsc[425] +
    dwdot12dscqss14 * dscqss_dsc[495] + dwdot12dscqss13 * dscqss_dsc[460] +
    dwdot12dscqss15 * dscqss_dsc[530] + dwdot12dscqss8 * dscqss_dsc[285] +
    dwdot12dscqss10 * dscqss_dsc[355];
  J[228] =
    dwdot12dsc6 + dwdot12dscqss0 * dscqss_dsc[6] +
    dwdot12dscqss16 * dscqss_dsc[566] + dwdot12dscqss1 * dscqss_dsc[41] +
    dwdot12dscqss17 * dscqss_dsc[601] + dwdot12dscqss2 * dscqss_dsc[76] +
    dwdot12dscqss3 * dscqss_dsc[111] + dwdot12dscqss4 * dscqss_dsc[146] +
    dwdot12dscqss5 * dscqss_dsc[181] + dwdot12dscqss6 * dscqss_dsc[216] +
    dwdot12dscqss7 * dscqss_dsc[251] + dwdot12dscqss9 * dscqss_dsc[321] +
    dwdot12dscqss11 * dscqss_dsc[391] + dwdot12dscqss12 * dscqss_dsc[426] +
    dwdot12dscqss14 * dscqss_dsc[496] + dwdot12dscqss13 * dscqss_dsc[461] +
    dwdot12dscqss15 * dscqss_dsc[531] + dwdot12dscqss8 * dscqss_dsc[286] +
    dwdot12dscqss10 * dscqss_dsc[356];
  J[264] =
    dwdot12dsc7 + dwdot12dscqss0 * dscqss_dsc[7] +
    dwdot12dscqss16 * dscqss_dsc[567] + dwdot12dscqss1 * dscqss_dsc[42] +
    dwdot12dscqss17 * dscqss_dsc[602] + dwdot12dscqss2 * dscqss_dsc[77] +
    dwdot12dscqss3 * dscqss_dsc[112] + dwdot12dscqss4 * dscqss_dsc[147] +
    dwdot12dscqss5 * dscqss_dsc[182] + dwdot12dscqss6 * dscqss_dsc[217] +
    dwdot12dscqss7 * dscqss_dsc[252] + dwdot12dscqss9 * dscqss_dsc[322] +
    dwdot12dscqss11 * dscqss_dsc[392] + dwdot12dscqss12 * dscqss_dsc[427] +
    dwdot12dscqss14 * dscqss_dsc[497] + dwdot12dscqss13 * dscqss_dsc[462] +
    dwdot12dscqss15 * dscqss_dsc[532] + dwdot12dscqss8 * dscqss_dsc[287] +
    dwdot12dscqss10 * dscqss_dsc[357];
  J[300] =
    dwdot12dsc8 + dwdot12dscqss0 * dscqss_dsc[8] +
    dwdot12dscqss16 * dscqss_dsc[568] + dwdot12dscqss1 * dscqss_dsc[43] +
    dwdot12dscqss17 * dscqss_dsc[603] + dwdot12dscqss2 * dscqss_dsc[78] +
    dwdot12dscqss3 * dscqss_dsc[113] + dwdot12dscqss4 * dscqss_dsc[148] +
    dwdot12dscqss5 * dscqss_dsc[183] + dwdot12dscqss6 * dscqss_dsc[218] +
    dwdot12dscqss7 * dscqss_dsc[253] + dwdot12dscqss9 * dscqss_dsc[323] +
    dwdot12dscqss11 * dscqss_dsc[393] + dwdot12dscqss12 * dscqss_dsc[428] +
    dwdot12dscqss14 * dscqss_dsc[498] + dwdot12dscqss13 * dscqss_dsc[463] +
    dwdot12dscqss15 * dscqss_dsc[533] + dwdot12dscqss8 * dscqss_dsc[288] +
    dwdot12dscqss10 * dscqss_dsc[358];
  J[336] =
    dwdot12dsc9 + dwdot12dscqss0 * dscqss_dsc[9] +
    dwdot12dscqss16 * dscqss_dsc[569] + dwdot12dscqss1 * dscqss_dsc[44] +
    dwdot12dscqss17 * dscqss_dsc[604] + dwdot12dscqss2 * dscqss_dsc[79] +
    dwdot12dscqss3 * dscqss_dsc[114] + dwdot12dscqss4 * dscqss_dsc[149] +
    dwdot12dscqss5 * dscqss_dsc[184] + dwdot12dscqss6 * dscqss_dsc[219] +
    dwdot12dscqss7 * dscqss_dsc[254] + dwdot12dscqss9 * dscqss_dsc[324] +
    dwdot12dscqss11 * dscqss_dsc[394] + dwdot12dscqss12 * dscqss_dsc[429] +
    dwdot12dscqss14 * dscqss_dsc[499] + dwdot12dscqss13 * dscqss_dsc[464] +
    dwdot12dscqss15 * dscqss_dsc[534] + dwdot12dscqss8 * dscqss_dsc[289] +
    dwdot12dscqss10 * dscqss_dsc[359];
  J[372] =
    dwdot12dsc10 + dwdot12dscqss0 * dscqss_dsc[10] +
    dwdot12dscqss16 * dscqss_dsc[570] + dwdot12dscqss1 * dscqss_dsc[45] +
    dwdot12dscqss17 * dscqss_dsc[605] + dwdot12dscqss2 * dscqss_dsc[80] +
    dwdot12dscqss3 * dscqss_dsc[115] + dwdot12dscqss4 * dscqss_dsc[150] +
    dwdot12dscqss5 * dscqss_dsc[185] + dwdot12dscqss6 * dscqss_dsc[220] +
    dwdot12dscqss7 * dscqss_dsc[255] + dwdot12dscqss9 * dscqss_dsc[325] +
    dwdot12dscqss11 * dscqss_dsc[395] + dwdot12dscqss12 * dscqss_dsc[430] +
    dwdot12dscqss14 * dscqss_dsc[500] + dwdot12dscqss13 * dscqss_dsc[465] +
    dwdot12dscqss15 * dscqss_dsc[535] + dwdot12dscqss8 * dscqss_dsc[290] +
    dwdot12dscqss10 * dscqss_dsc[360];
  J[408] =
    dwdot12dsc11 + dwdot12dscqss0 * dscqss_dsc[11] +
    dwdot12dscqss16 * dscqss_dsc[571] + dwdot12dscqss1 * dscqss_dsc[46] +
    dwdot12dscqss17 * dscqss_dsc[606] + dwdot12dscqss2 * dscqss_dsc[81] +
    dwdot12dscqss3 * dscqss_dsc[116] + dwdot12dscqss4 * dscqss_dsc[151] +
    dwdot12dscqss5 * dscqss_dsc[186] + dwdot12dscqss6 * dscqss_dsc[221] +
    dwdot12dscqss7 * dscqss_dsc[256] + dwdot12dscqss9 * dscqss_dsc[326] +
    dwdot12dscqss11 * dscqss_dsc[396] + dwdot12dscqss12 * dscqss_dsc[431] +
    dwdot12dscqss14 * dscqss_dsc[501] + dwdot12dscqss13 * dscqss_dsc[466] +
    dwdot12dscqss15 * dscqss_dsc[536] + dwdot12dscqss8 * dscqss_dsc[291] +
    dwdot12dscqss10 * dscqss_dsc[361];
  J[444] =
    dwdot12dsc12 + dwdot12dscqss0 * dscqss_dsc[12] +
    dwdot12dscqss16 * dscqss_dsc[572] + dwdot12dscqss1 * dscqss_dsc[47] +
    dwdot12dscqss17 * dscqss_dsc[607] + dwdot12dscqss2 * dscqss_dsc[82] +
    dwdot12dscqss3 * dscqss_dsc[117] + dwdot12dscqss4 * dscqss_dsc[152] +
    dwdot12dscqss5 * dscqss_dsc[187] + dwdot12dscqss6 * dscqss_dsc[222] +
    dwdot12dscqss7 * dscqss_dsc[257] + dwdot12dscqss9 * dscqss_dsc[327] +
    dwdot12dscqss11 * dscqss_dsc[397] + dwdot12dscqss12 * dscqss_dsc[432] +
    dwdot12dscqss14 * dscqss_dsc[502] + dwdot12dscqss13 * dscqss_dsc[467] +
    dwdot12dscqss15 * dscqss_dsc[537] + dwdot12dscqss8 * dscqss_dsc[292] +
    dwdot12dscqss10 * dscqss_dsc[362];
  J[480] =
    dwdot12dsc13 + dwdot12dscqss0 * dscqss_dsc[13] +
    dwdot12dscqss16 * dscqss_dsc[573] + dwdot12dscqss1 * dscqss_dsc[48] +
    dwdot12dscqss17 * dscqss_dsc[608] + dwdot12dscqss2 * dscqss_dsc[83] +
    dwdot12dscqss3 * dscqss_dsc[118] + dwdot12dscqss4 * dscqss_dsc[153] +
    dwdot12dscqss5 * dscqss_dsc[188] + dwdot12dscqss6 * dscqss_dsc[223] +
    dwdot12dscqss7 * dscqss_dsc[258] + dwdot12dscqss9 * dscqss_dsc[328] +
    dwdot12dscqss11 * dscqss_dsc[398] + dwdot12dscqss12 * dscqss_dsc[433] +
    dwdot12dscqss14 * dscqss_dsc[503] + dwdot12dscqss13 * dscqss_dsc[468] +
    dwdot12dscqss15 * dscqss_dsc[538] + dwdot12dscqss8 * dscqss_dsc[293] +
    dwdot12dscqss10 * dscqss_dsc[363];
  J[516] =
    dwdot12dsc14 + dwdot12dscqss0 * dscqss_dsc[14] +
    dwdot12dscqss16 * dscqss_dsc[574] + dwdot12dscqss1 * dscqss_dsc[49] +
    dwdot12dscqss17 * dscqss_dsc[609] + dwdot12dscqss2 * dscqss_dsc[84] +
    dwdot12dscqss3 * dscqss_dsc[119] + dwdot12dscqss4 * dscqss_dsc[154] +
    dwdot12dscqss5 * dscqss_dsc[189] + dwdot12dscqss6 * dscqss_dsc[224] +
    dwdot12dscqss7 * dscqss_dsc[259] + dwdot12dscqss9 * dscqss_dsc[329] +
    dwdot12dscqss11 * dscqss_dsc[399] + dwdot12dscqss12 * dscqss_dsc[434] +
    dwdot12dscqss14 * dscqss_dsc[504] + dwdot12dscqss13 * dscqss_dsc[469] +
    dwdot12dscqss15 * dscqss_dsc[539] + dwdot12dscqss8 * dscqss_dsc[294] +
    dwdot12dscqss10 * dscqss_dsc[364];
  J[552] =
    dwdot12dsc15 + dwdot12dscqss0 * dscqss_dsc[15] +
    dwdot12dscqss16 * dscqss_dsc[575] + dwdot12dscqss1 * dscqss_dsc[50] +
    dwdot12dscqss17 * dscqss_dsc[610] + dwdot12dscqss2 * dscqss_dsc[85] +
    dwdot12dscqss3 * dscqss_dsc[120] + dwdot12dscqss4 * dscqss_dsc[155] +
    dwdot12dscqss5 * dscqss_dsc[190] + dwdot12dscqss6 * dscqss_dsc[225] +
    dwdot12dscqss7 * dscqss_dsc[260] + dwdot12dscqss9 * dscqss_dsc[330] +
    dwdot12dscqss11 * dscqss_dsc[400] + dwdot12dscqss12 * dscqss_dsc[435] +
    dwdot12dscqss14 * dscqss_dsc[505] + dwdot12dscqss13 * dscqss_dsc[470] +
    dwdot12dscqss15 * dscqss_dsc[540] + dwdot12dscqss8 * dscqss_dsc[295] +
    dwdot12dscqss10 * dscqss_dsc[365];
  J[588] =
    dwdot12dsc16 + dwdot12dscqss0 * dscqss_dsc[16] +
    dwdot12dscqss16 * dscqss_dsc[576] + dwdot12dscqss1 * dscqss_dsc[51] +
    dwdot12dscqss17 * dscqss_dsc[611] + dwdot12dscqss2 * dscqss_dsc[86] +
    dwdot12dscqss3 * dscqss_dsc[121] + dwdot12dscqss4 * dscqss_dsc[156] +
    dwdot12dscqss5 * dscqss_dsc[191] + dwdot12dscqss6 * dscqss_dsc[226] +
    dwdot12dscqss7 * dscqss_dsc[261] + dwdot12dscqss9 * dscqss_dsc[331] +
    dwdot12dscqss11 * dscqss_dsc[401] + dwdot12dscqss12 * dscqss_dsc[436] +
    dwdot12dscqss14 * dscqss_dsc[506] + dwdot12dscqss13 * dscqss_dsc[471] +
    dwdot12dscqss15 * dscqss_dsc[541] + dwdot12dscqss8 * dscqss_dsc[296] +
    dwdot12dscqss10 * dscqss_dsc[366];
  J[624] =
    dwdot12dsc17 + dwdot12dscqss0 * dscqss_dsc[17] +
    dwdot12dscqss16 * dscqss_dsc[577] + dwdot12dscqss1 * dscqss_dsc[52] +
    dwdot12dscqss17 * dscqss_dsc[612] + dwdot12dscqss2 * dscqss_dsc[87] +
    dwdot12dscqss3 * dscqss_dsc[122] + dwdot12dscqss4 * dscqss_dsc[157] +
    dwdot12dscqss5 * dscqss_dsc[192] + dwdot12dscqss6 * dscqss_dsc[227] +
    dwdot12dscqss7 * dscqss_dsc[262] + dwdot12dscqss9 * dscqss_dsc[332] +
    dwdot12dscqss11 * dscqss_dsc[402] + dwdot12dscqss12 * dscqss_dsc[437] +
    dwdot12dscqss14 * dscqss_dsc[507] + dwdot12dscqss13 * dscqss_dsc[472] +
    dwdot12dscqss15 * dscqss_dsc[542] + dwdot12dscqss8 * dscqss_dsc[297] +
    dwdot12dscqss10 * dscqss_dsc[367];
  J[660] =
    dwdot12dsc18 + dwdot12dscqss0 * dscqss_dsc[18] +
    dwdot12dscqss16 * dscqss_dsc[578] + dwdot12dscqss1 * dscqss_dsc[53] +
    dwdot12dscqss17 * dscqss_dsc[613] + dwdot12dscqss2 * dscqss_dsc[88] +
    dwdot12dscqss3 * dscqss_dsc[123] + dwdot12dscqss4 * dscqss_dsc[158] +
    dwdot12dscqss5 * dscqss_dsc[193] + dwdot12dscqss6 * dscqss_dsc[228] +
    dwdot12dscqss7 * dscqss_dsc[263] + dwdot12dscqss9 * dscqss_dsc[333] +
    dwdot12dscqss11 * dscqss_dsc[403] + dwdot12dscqss12 * dscqss_dsc[438] +
    dwdot12dscqss14 * dscqss_dsc[508] + dwdot12dscqss13 * dscqss_dsc[473] +
    dwdot12dscqss15 * dscqss_dsc[543] + dwdot12dscqss8 * dscqss_dsc[298] +
    dwdot12dscqss10 * dscqss_dsc[368];
  J[696] =
    dwdot12dsc19 + dwdot12dscqss0 * dscqss_dsc[19] +
    dwdot12dscqss16 * dscqss_dsc[579] + dwdot12dscqss1 * dscqss_dsc[54] +
    dwdot12dscqss17 * dscqss_dsc[614] + dwdot12dscqss2 * dscqss_dsc[89] +
    dwdot12dscqss3 * dscqss_dsc[124] + dwdot12dscqss4 * dscqss_dsc[159] +
    dwdot12dscqss5 * dscqss_dsc[194] + dwdot12dscqss6 * dscqss_dsc[229] +
    dwdot12dscqss7 * dscqss_dsc[264] + dwdot12dscqss9 * dscqss_dsc[334] +
    dwdot12dscqss11 * dscqss_dsc[404] + dwdot12dscqss12 * dscqss_dsc[439] +
    dwdot12dscqss14 * dscqss_dsc[509] + dwdot12dscqss13 * dscqss_dsc[474] +
    dwdot12dscqss15 * dscqss_dsc[544] + dwdot12dscqss8 * dscqss_dsc[299] +
    dwdot12dscqss10 * dscqss_dsc[369];
  J[732] =
    dwdot12dsc20 + dwdot12dscqss0 * dscqss_dsc[20] +
    dwdot12dscqss16 * dscqss_dsc[580] + dwdot12dscqss1 * dscqss_dsc[55] +
    dwdot12dscqss17 * dscqss_dsc[615] + dwdot12dscqss2 * dscqss_dsc[90] +
    dwdot12dscqss3 * dscqss_dsc[125] + dwdot12dscqss4 * dscqss_dsc[160] +
    dwdot12dscqss5 * dscqss_dsc[195] + dwdot12dscqss6 * dscqss_dsc[230] +
    dwdot12dscqss7 * dscqss_dsc[265] + dwdot12dscqss9 * dscqss_dsc[335] +
    dwdot12dscqss11 * dscqss_dsc[405] + dwdot12dscqss12 * dscqss_dsc[440] +
    dwdot12dscqss14 * dscqss_dsc[510] + dwdot12dscqss13 * dscqss_dsc[475] +
    dwdot12dscqss15 * dscqss_dsc[545] + dwdot12dscqss8 * dscqss_dsc[300] +
    dwdot12dscqss10 * dscqss_dsc[370];
  J[768] =
    dwdot12dsc21 + dwdot12dscqss0 * dscqss_dsc[21] +
    dwdot12dscqss16 * dscqss_dsc[581] + dwdot12dscqss1 * dscqss_dsc[56] +
    dwdot12dscqss17 * dscqss_dsc[616] + dwdot12dscqss2 * dscqss_dsc[91] +
    dwdot12dscqss3 * dscqss_dsc[126] + dwdot12dscqss4 * dscqss_dsc[161] +
    dwdot12dscqss5 * dscqss_dsc[196] + dwdot12dscqss6 * dscqss_dsc[231] +
    dwdot12dscqss7 * dscqss_dsc[266] + dwdot12dscqss9 * dscqss_dsc[336] +
    dwdot12dscqss11 * dscqss_dsc[406] + dwdot12dscqss12 * dscqss_dsc[441] +
    dwdot12dscqss14 * dscqss_dsc[511] + dwdot12dscqss13 * dscqss_dsc[476] +
    dwdot12dscqss15 * dscqss_dsc[546] + dwdot12dscqss8 * dscqss_dsc[301] +
    dwdot12dscqss10 * dscqss_dsc[371];
  J[804] =
    dwdot12dsc22 + dwdot12dscqss0 * dscqss_dsc[22] +
    dwdot12dscqss16 * dscqss_dsc[582] + dwdot12dscqss1 * dscqss_dsc[57] +
    dwdot12dscqss17 * dscqss_dsc[617] + dwdot12dscqss2 * dscqss_dsc[92] +
    dwdot12dscqss3 * dscqss_dsc[127] + dwdot12dscqss4 * dscqss_dsc[162] +
    dwdot12dscqss5 * dscqss_dsc[197] + dwdot12dscqss6 * dscqss_dsc[232] +
    dwdot12dscqss7 * dscqss_dsc[267] + dwdot12dscqss9 * dscqss_dsc[337] +
    dwdot12dscqss11 * dscqss_dsc[407] + dwdot12dscqss12 * dscqss_dsc[442] +
    dwdot12dscqss14 * dscqss_dsc[512] + dwdot12dscqss13 * dscqss_dsc[477] +
    dwdot12dscqss15 * dscqss_dsc[547] + dwdot12dscqss8 * dscqss_dsc[302] +
    dwdot12dscqss10 * dscqss_dsc[372];
  J[840] =
    dwdot12dsc23 + dwdot12dscqss0 * dscqss_dsc[23] +
    dwdot12dscqss16 * dscqss_dsc[583] + dwdot12dscqss1 * dscqss_dsc[58] +
    dwdot12dscqss17 * dscqss_dsc[618] + dwdot12dscqss2 * dscqss_dsc[93] +
    dwdot12dscqss3 * dscqss_dsc[128] + dwdot12dscqss4 * dscqss_dsc[163] +
    dwdot12dscqss5 * dscqss_dsc[198] + dwdot12dscqss6 * dscqss_dsc[233] +
    dwdot12dscqss7 * dscqss_dsc[268] + dwdot12dscqss9 * dscqss_dsc[338] +
    dwdot12dscqss11 * dscqss_dsc[408] + dwdot12dscqss12 * dscqss_dsc[443] +
    dwdot12dscqss14 * dscqss_dsc[513] + dwdot12dscqss13 * dscqss_dsc[478] +
    dwdot12dscqss15 * dscqss_dsc[548] + dwdot12dscqss8 * dscqss_dsc[303] +
    dwdot12dscqss10 * dscqss_dsc[373];
  J[876] =
    dwdot12dsc24 + dwdot12dscqss0 * dscqss_dsc[24] +
    dwdot12dscqss16 * dscqss_dsc[584] + dwdot12dscqss1 * dscqss_dsc[59] +
    dwdot12dscqss17 * dscqss_dsc[619] + dwdot12dscqss2 * dscqss_dsc[94] +
    dwdot12dscqss3 * dscqss_dsc[129] + dwdot12dscqss4 * dscqss_dsc[164] +
    dwdot12dscqss5 * dscqss_dsc[199] + dwdot12dscqss6 * dscqss_dsc[234] +
    dwdot12dscqss7 * dscqss_dsc[269] + dwdot12dscqss9 * dscqss_dsc[339] +
    dwdot12dscqss11 * dscqss_dsc[409] + dwdot12dscqss12 * dscqss_dsc[444] +
    dwdot12dscqss14 * dscqss_dsc[514] + dwdot12dscqss13 * dscqss_dsc[479] +
    dwdot12dscqss15 * dscqss_dsc[549] + dwdot12dscqss8 * dscqss_dsc[304] +
    dwdot12dscqss10 * dscqss_dsc[374];
  J[912] =
    dwdot12dsc25 + dwdot12dscqss0 * dscqss_dsc[25] +
    dwdot12dscqss16 * dscqss_dsc[585] + dwdot12dscqss1 * dscqss_dsc[60] +
    dwdot12dscqss17 * dscqss_dsc[620] + dwdot12dscqss2 * dscqss_dsc[95] +
    dwdot12dscqss3 * dscqss_dsc[130] + dwdot12dscqss4 * dscqss_dsc[165] +
    dwdot12dscqss5 * dscqss_dsc[200] + dwdot12dscqss6 * dscqss_dsc[235] +
    dwdot12dscqss7 * dscqss_dsc[270] + dwdot12dscqss9 * dscqss_dsc[340] +
    dwdot12dscqss11 * dscqss_dsc[410] + dwdot12dscqss12 * dscqss_dsc[445] +
    dwdot12dscqss14 * dscqss_dsc[515] + dwdot12dscqss13 * dscqss_dsc[480] +
    dwdot12dscqss15 * dscqss_dsc[550] + dwdot12dscqss8 * dscqss_dsc[305] +
    dwdot12dscqss10 * dscqss_dsc[375];
  J[948] =
    dwdot12dsc26 + dwdot12dscqss0 * dscqss_dsc[26] +
    dwdot12dscqss16 * dscqss_dsc[586] + dwdot12dscqss1 * dscqss_dsc[61] +
    dwdot12dscqss17 * dscqss_dsc[621] + dwdot12dscqss2 * dscqss_dsc[96] +
    dwdot12dscqss3 * dscqss_dsc[131] + dwdot12dscqss4 * dscqss_dsc[166] +
    dwdot12dscqss5 * dscqss_dsc[201] + dwdot12dscqss6 * dscqss_dsc[236] +
    dwdot12dscqss7 * dscqss_dsc[271] + dwdot12dscqss9 * dscqss_dsc[341] +
    dwdot12dscqss11 * dscqss_dsc[411] + dwdot12dscqss12 * dscqss_dsc[446] +
    dwdot12dscqss14 * dscqss_dsc[516] + dwdot12dscqss13 * dscqss_dsc[481] +
    dwdot12dscqss15 * dscqss_dsc[551] + dwdot12dscqss8 * dscqss_dsc[306] +
    dwdot12dscqss10 * dscqss_dsc[376];
  J[984] =
    dwdot12dsc27 + dwdot12dscqss0 * dscqss_dsc[27] +
    dwdot12dscqss16 * dscqss_dsc[587] + dwdot12dscqss1 * dscqss_dsc[62] +
    dwdot12dscqss17 * dscqss_dsc[622] + dwdot12dscqss2 * dscqss_dsc[97] +
    dwdot12dscqss3 * dscqss_dsc[132] + dwdot12dscqss4 * dscqss_dsc[167] +
    dwdot12dscqss5 * dscqss_dsc[202] + dwdot12dscqss6 * dscqss_dsc[237] +
    dwdot12dscqss7 * dscqss_dsc[272] + dwdot12dscqss9 * dscqss_dsc[342] +
    dwdot12dscqss11 * dscqss_dsc[412] + dwdot12dscqss12 * dscqss_dsc[447] +
    dwdot12dscqss14 * dscqss_dsc[517] + dwdot12dscqss13 * dscqss_dsc[482] +
    dwdot12dscqss15 * dscqss_dsc[552] + dwdot12dscqss8 * dscqss_dsc[307] +
    dwdot12dscqss10 * dscqss_dsc[377];
  J[1020] =
    dwdot12dsc28 + dwdot12dscqss0 * dscqss_dsc[28] +
    dwdot12dscqss16 * dscqss_dsc[588] + dwdot12dscqss1 * dscqss_dsc[63] +
    dwdot12dscqss17 * dscqss_dsc[623] + dwdot12dscqss2 * dscqss_dsc[98] +
    dwdot12dscqss3 * dscqss_dsc[133] + dwdot12dscqss4 * dscqss_dsc[168] +
    dwdot12dscqss5 * dscqss_dsc[203] + dwdot12dscqss6 * dscqss_dsc[238] +
    dwdot12dscqss7 * dscqss_dsc[273] + dwdot12dscqss9 * dscqss_dsc[343] +
    dwdot12dscqss11 * dscqss_dsc[413] + dwdot12dscqss12 * dscqss_dsc[448] +
    dwdot12dscqss14 * dscqss_dsc[518] + dwdot12dscqss13 * dscqss_dsc[483] +
    dwdot12dscqss15 * dscqss_dsc[553] + dwdot12dscqss8 * dscqss_dsc[308] +
    dwdot12dscqss10 * dscqss_dsc[378];
  J[1056] =
    dwdot12dsc29 + dwdot12dscqss0 * dscqss_dsc[29] +
    dwdot12dscqss16 * dscqss_dsc[589] + dwdot12dscqss1 * dscqss_dsc[64] +
    dwdot12dscqss17 * dscqss_dsc[624] + dwdot12dscqss2 * dscqss_dsc[99] +
    dwdot12dscqss3 * dscqss_dsc[134] + dwdot12dscqss4 * dscqss_dsc[169] +
    dwdot12dscqss5 * dscqss_dsc[204] + dwdot12dscqss6 * dscqss_dsc[239] +
    dwdot12dscqss7 * dscqss_dsc[274] + dwdot12dscqss9 * dscqss_dsc[344] +
    dwdot12dscqss11 * dscqss_dsc[414] + dwdot12dscqss12 * dscqss_dsc[449] +
    dwdot12dscqss14 * dscqss_dsc[519] + dwdot12dscqss13 * dscqss_dsc[484] +
    dwdot12dscqss15 * dscqss_dsc[554] + dwdot12dscqss8 * dscqss_dsc[309] +
    dwdot12dscqss10 * dscqss_dsc[379];
  J[1092] =
    dwdot12dsc30 + dwdot12dscqss0 * dscqss_dsc[30] +
    dwdot12dscqss16 * dscqss_dsc[590] + dwdot12dscqss1 * dscqss_dsc[65] +
    dwdot12dscqss17 * dscqss_dsc[625] + dwdot12dscqss2 * dscqss_dsc[100] +
    dwdot12dscqss3 * dscqss_dsc[135] + dwdot12dscqss4 * dscqss_dsc[170] +
    dwdot12dscqss5 * dscqss_dsc[205] + dwdot12dscqss6 * dscqss_dsc[240] +
    dwdot12dscqss7 * dscqss_dsc[275] + dwdot12dscqss9 * dscqss_dsc[345] +
    dwdot12dscqss11 * dscqss_dsc[415] + dwdot12dscqss12 * dscqss_dsc[450] +
    dwdot12dscqss14 * dscqss_dsc[520] + dwdot12dscqss13 * dscqss_dsc[485] +
    dwdot12dscqss15 * dscqss_dsc[555] + dwdot12dscqss8 * dscqss_dsc[310] +
    dwdot12dscqss10 * dscqss_dsc[380];
  J[1128] =
    dwdot12dsc31 + dwdot12dscqss0 * dscqss_dsc[31] +
    dwdot12dscqss16 * dscqss_dsc[591] + dwdot12dscqss1 * dscqss_dsc[66] +
    dwdot12dscqss17 * dscqss_dsc[626] + dwdot12dscqss2 * dscqss_dsc[101] +
    dwdot12dscqss3 * dscqss_dsc[136] + dwdot12dscqss4 * dscqss_dsc[171] +
    dwdot12dscqss5 * dscqss_dsc[206] + dwdot12dscqss6 * dscqss_dsc[241] +
    dwdot12dscqss7 * dscqss_dsc[276] + dwdot12dscqss9 * dscqss_dsc[346] +
    dwdot12dscqss11 * dscqss_dsc[416] + dwdot12dscqss12 * dscqss_dsc[451] +
    dwdot12dscqss14 * dscqss_dsc[521] + dwdot12dscqss13 * dscqss_dsc[486] +
    dwdot12dscqss15 * dscqss_dsc[556] + dwdot12dscqss8 * dscqss_dsc[311] +
    dwdot12dscqss10 * dscqss_dsc[381];
  J[1164] =
    dwdot12dsc32 + dwdot12dscqss0 * dscqss_dsc[32] +
    dwdot12dscqss16 * dscqss_dsc[592] + dwdot12dscqss1 * dscqss_dsc[67] +
    dwdot12dscqss17 * dscqss_dsc[627] + dwdot12dscqss2 * dscqss_dsc[102] +
    dwdot12dscqss3 * dscqss_dsc[137] + dwdot12dscqss4 * dscqss_dsc[172] +
    dwdot12dscqss5 * dscqss_dsc[207] + dwdot12dscqss6 * dscqss_dsc[242] +
    dwdot12dscqss7 * dscqss_dsc[277] + dwdot12dscqss9 * dscqss_dsc[347] +
    dwdot12dscqss11 * dscqss_dsc[417] + dwdot12dscqss12 * dscqss_dsc[452] +
    dwdot12dscqss14 * dscqss_dsc[522] + dwdot12dscqss13 * dscqss_dsc[487] +
    dwdot12dscqss15 * dscqss_dsc[557] + dwdot12dscqss8 * dscqss_dsc[312] +
    dwdot12dscqss10 * dscqss_dsc[382];
  J[1200] =
    dwdot12dsc33 + dwdot12dscqss0 * dscqss_dsc[33] +
    dwdot12dscqss16 * dscqss_dsc[593] + dwdot12dscqss1 * dscqss_dsc[68] +
    dwdot12dscqss17 * dscqss_dsc[628] + dwdot12dscqss2 * dscqss_dsc[103] +
    dwdot12dscqss3 * dscqss_dsc[138] + dwdot12dscqss4 * dscqss_dsc[173] +
    dwdot12dscqss5 * dscqss_dsc[208] + dwdot12dscqss6 * dscqss_dsc[243] +
    dwdot12dscqss7 * dscqss_dsc[278] + dwdot12dscqss9 * dscqss_dsc[348] +
    dwdot12dscqss11 * dscqss_dsc[418] + dwdot12dscqss12 * dscqss_dsc[453] +
    dwdot12dscqss14 * dscqss_dsc[523] + dwdot12dscqss13 * dscqss_dsc[488] +
    dwdot12dscqss15 * dscqss_dsc[558] + dwdot12dscqss8 * dscqss_dsc[313] +
    dwdot12dscqss10 * dscqss_dsc[383];
  J[1236] =
    dwdot12dsc34 + dwdot12dscqss0 * dscqss_dsc[34] +
    dwdot12dscqss16 * dscqss_dsc[594] + dwdot12dscqss1 * dscqss_dsc[69] +
    dwdot12dscqss17 * dscqss_dsc[629] + dwdot12dscqss2 * dscqss_dsc[104] +
    dwdot12dscqss3 * dscqss_dsc[139] + dwdot12dscqss4 * dscqss_dsc[174] +
    dwdot12dscqss5 * dscqss_dsc[209] + dwdot12dscqss6 * dscqss_dsc[244] +
    dwdot12dscqss7 * dscqss_dsc[279] + dwdot12dscqss9 * dscqss_dsc[349] +
    dwdot12dscqss11 * dscqss_dsc[419] + dwdot12dscqss12 * dscqss_dsc[454] +
    dwdot12dscqss14 * dscqss_dsc[524] + dwdot12dscqss13 * dscqss_dsc[489] +
    dwdot12dscqss15 * dscqss_dsc[559] + dwdot12dscqss8 * dscqss_dsc[314] +
    dwdot12dscqss10 * dscqss_dsc[384];
  J[13] =
    dwdot13dsc0 + dwdot13dscqss0 * dscqss_dsc[0] +
    dwdot13dscqss16 * dscqss_dsc[560] + dwdot13dscqss1 * dscqss_dsc[35] +
    dwdot13dscqss17 * dscqss_dsc[595] + dwdot13dscqss2 * dscqss_dsc[70] +
    dwdot13dscqss3 * dscqss_dsc[105] + dwdot13dscqss4 * dscqss_dsc[140] +
    dwdot13dscqss5 * dscqss_dsc[175] + dwdot13dscqss6 * dscqss_dsc[210] +
    dwdot13dscqss7 * dscqss_dsc[245] + dwdot13dscqss9 * dscqss_dsc[315] +
    dwdot13dscqss11 * dscqss_dsc[385] + dwdot13dscqss12 * dscqss_dsc[420] +
    dwdot13dscqss14 * dscqss_dsc[490] + dwdot13dscqss13 * dscqss_dsc[455] +
    dwdot13dscqss15 * dscqss_dsc[525] + dwdot13dscqss8 * dscqss_dsc[280] +
    dwdot13dscqss10 * dscqss_dsc[350];
  J[49] =
    dwdot13dsc1 + dwdot13dscqss0 * dscqss_dsc[1] +
    dwdot13dscqss16 * dscqss_dsc[561] + dwdot13dscqss1 * dscqss_dsc[36] +
    dwdot13dscqss17 * dscqss_dsc[596] + dwdot13dscqss2 * dscqss_dsc[71] +
    dwdot13dscqss3 * dscqss_dsc[106] + dwdot13dscqss4 * dscqss_dsc[141] +
    dwdot13dscqss5 * dscqss_dsc[176] + dwdot13dscqss6 * dscqss_dsc[211] +
    dwdot13dscqss7 * dscqss_dsc[246] + dwdot13dscqss9 * dscqss_dsc[316] +
    dwdot13dscqss11 * dscqss_dsc[386] + dwdot13dscqss12 * dscqss_dsc[421] +
    dwdot13dscqss14 * dscqss_dsc[491] + dwdot13dscqss13 * dscqss_dsc[456] +
    dwdot13dscqss15 * dscqss_dsc[526] + dwdot13dscqss8 * dscqss_dsc[281] +
    dwdot13dscqss10 * dscqss_dsc[351];
  J[85] =
    dwdot13dsc2 + dwdot13dscqss0 * dscqss_dsc[2] +
    dwdot13dscqss16 * dscqss_dsc[562] + dwdot13dscqss1 * dscqss_dsc[37] +
    dwdot13dscqss17 * dscqss_dsc[597] + dwdot13dscqss2 * dscqss_dsc[72] +
    dwdot13dscqss3 * dscqss_dsc[107] + dwdot13dscqss4 * dscqss_dsc[142] +
    dwdot13dscqss5 * dscqss_dsc[177] + dwdot13dscqss6 * dscqss_dsc[212] +
    dwdot13dscqss7 * dscqss_dsc[247] + dwdot13dscqss9 * dscqss_dsc[317] +
    dwdot13dscqss11 * dscqss_dsc[387] + dwdot13dscqss12 * dscqss_dsc[422] +
    dwdot13dscqss14 * dscqss_dsc[492] + dwdot13dscqss13 * dscqss_dsc[457] +
    dwdot13dscqss15 * dscqss_dsc[527] + dwdot13dscqss8 * dscqss_dsc[282] +
    dwdot13dscqss10 * dscqss_dsc[352];
  J[121] =
    dwdot13dsc3 + dwdot13dscqss0 * dscqss_dsc[3] +
    dwdot13dscqss16 * dscqss_dsc[563] + dwdot13dscqss1 * dscqss_dsc[38] +
    dwdot13dscqss17 * dscqss_dsc[598] + dwdot13dscqss2 * dscqss_dsc[73] +
    dwdot13dscqss3 * dscqss_dsc[108] + dwdot13dscqss4 * dscqss_dsc[143] +
    dwdot13dscqss5 * dscqss_dsc[178] + dwdot13dscqss6 * dscqss_dsc[213] +
    dwdot13dscqss7 * dscqss_dsc[248] + dwdot13dscqss9 * dscqss_dsc[318] +
    dwdot13dscqss11 * dscqss_dsc[388] + dwdot13dscqss12 * dscqss_dsc[423] +
    dwdot13dscqss14 * dscqss_dsc[493] + dwdot13dscqss13 * dscqss_dsc[458] +
    dwdot13dscqss15 * dscqss_dsc[528] + dwdot13dscqss8 * dscqss_dsc[283] +
    dwdot13dscqss10 * dscqss_dsc[353];
  J[157] =
    dwdot13dsc4 + dwdot13dscqss0 * dscqss_dsc[4] +
    dwdot13dscqss16 * dscqss_dsc[564] + dwdot13dscqss1 * dscqss_dsc[39] +
    dwdot13dscqss17 * dscqss_dsc[599] + dwdot13dscqss2 * dscqss_dsc[74] +
    dwdot13dscqss3 * dscqss_dsc[109] + dwdot13dscqss4 * dscqss_dsc[144] +
    dwdot13dscqss5 * dscqss_dsc[179] + dwdot13dscqss6 * dscqss_dsc[214] +
    dwdot13dscqss7 * dscqss_dsc[249] + dwdot13dscqss9 * dscqss_dsc[319] +
    dwdot13dscqss11 * dscqss_dsc[389] + dwdot13dscqss12 * dscqss_dsc[424] +
    dwdot13dscqss14 * dscqss_dsc[494] + dwdot13dscqss13 * dscqss_dsc[459] +
    dwdot13dscqss15 * dscqss_dsc[529] + dwdot13dscqss8 * dscqss_dsc[284] +
    dwdot13dscqss10 * dscqss_dsc[354];
  J[193] =
    dwdot13dsc5 + dwdot13dscqss0 * dscqss_dsc[5] +
    dwdot13dscqss16 * dscqss_dsc[565] + dwdot13dscqss1 * dscqss_dsc[40] +
    dwdot13dscqss17 * dscqss_dsc[600] + dwdot13dscqss2 * dscqss_dsc[75] +
    dwdot13dscqss3 * dscqss_dsc[110] + dwdot13dscqss4 * dscqss_dsc[145] +
    dwdot13dscqss5 * dscqss_dsc[180] + dwdot13dscqss6 * dscqss_dsc[215] +
    dwdot13dscqss7 * dscqss_dsc[250] + dwdot13dscqss9 * dscqss_dsc[320] +
    dwdot13dscqss11 * dscqss_dsc[390] + dwdot13dscqss12 * dscqss_dsc[425] +
    dwdot13dscqss14 * dscqss_dsc[495] + dwdot13dscqss13 * dscqss_dsc[460] +
    dwdot13dscqss15 * dscqss_dsc[530] + dwdot13dscqss8 * dscqss_dsc[285] +
    dwdot13dscqss10 * dscqss_dsc[355];
  J[229] =
    dwdot13dsc6 + dwdot13dscqss0 * dscqss_dsc[6] +
    dwdot13dscqss16 * dscqss_dsc[566] + dwdot13dscqss1 * dscqss_dsc[41] +
    dwdot13dscqss17 * dscqss_dsc[601] + dwdot13dscqss2 * dscqss_dsc[76] +
    dwdot13dscqss3 * dscqss_dsc[111] + dwdot13dscqss4 * dscqss_dsc[146] +
    dwdot13dscqss5 * dscqss_dsc[181] + dwdot13dscqss6 * dscqss_dsc[216] +
    dwdot13dscqss7 * dscqss_dsc[251] + dwdot13dscqss9 * dscqss_dsc[321] +
    dwdot13dscqss11 * dscqss_dsc[391] + dwdot13dscqss12 * dscqss_dsc[426] +
    dwdot13dscqss14 * dscqss_dsc[496] + dwdot13dscqss13 * dscqss_dsc[461] +
    dwdot13dscqss15 * dscqss_dsc[531] + dwdot13dscqss8 * dscqss_dsc[286] +
    dwdot13dscqss10 * dscqss_dsc[356];
  J[265] =
    dwdot13dsc7 + dwdot13dscqss0 * dscqss_dsc[7] +
    dwdot13dscqss16 * dscqss_dsc[567] + dwdot13dscqss1 * dscqss_dsc[42] +
    dwdot13dscqss17 * dscqss_dsc[602] + dwdot13dscqss2 * dscqss_dsc[77] +
    dwdot13dscqss3 * dscqss_dsc[112] + dwdot13dscqss4 * dscqss_dsc[147] +
    dwdot13dscqss5 * dscqss_dsc[182] + dwdot13dscqss6 * dscqss_dsc[217] +
    dwdot13dscqss7 * dscqss_dsc[252] + dwdot13dscqss9 * dscqss_dsc[322] +
    dwdot13dscqss11 * dscqss_dsc[392] + dwdot13dscqss12 * dscqss_dsc[427] +
    dwdot13dscqss14 * dscqss_dsc[497] + dwdot13dscqss13 * dscqss_dsc[462] +
    dwdot13dscqss15 * dscqss_dsc[532] + dwdot13dscqss8 * dscqss_dsc[287] +
    dwdot13dscqss10 * dscqss_dsc[357];
  J[301] =
    dwdot13dsc8 + dwdot13dscqss0 * dscqss_dsc[8] +
    dwdot13dscqss16 * dscqss_dsc[568] + dwdot13dscqss1 * dscqss_dsc[43] +
    dwdot13dscqss17 * dscqss_dsc[603] + dwdot13dscqss2 * dscqss_dsc[78] +
    dwdot13dscqss3 * dscqss_dsc[113] + dwdot13dscqss4 * dscqss_dsc[148] +
    dwdot13dscqss5 * dscqss_dsc[183] + dwdot13dscqss6 * dscqss_dsc[218] +
    dwdot13dscqss7 * dscqss_dsc[253] + dwdot13dscqss9 * dscqss_dsc[323] +
    dwdot13dscqss11 * dscqss_dsc[393] + dwdot13dscqss12 * dscqss_dsc[428] +
    dwdot13dscqss14 * dscqss_dsc[498] + dwdot13dscqss13 * dscqss_dsc[463] +
    dwdot13dscqss15 * dscqss_dsc[533] + dwdot13dscqss8 * dscqss_dsc[288] +
    dwdot13dscqss10 * dscqss_dsc[358];
  J[337] =
    dwdot13dsc9 + dwdot13dscqss0 * dscqss_dsc[9] +
    dwdot13dscqss16 * dscqss_dsc[569] + dwdot13dscqss1 * dscqss_dsc[44] +
    dwdot13dscqss17 * dscqss_dsc[604] + dwdot13dscqss2 * dscqss_dsc[79] +
    dwdot13dscqss3 * dscqss_dsc[114] + dwdot13dscqss4 * dscqss_dsc[149] +
    dwdot13dscqss5 * dscqss_dsc[184] + dwdot13dscqss6 * dscqss_dsc[219] +
    dwdot13dscqss7 * dscqss_dsc[254] + dwdot13dscqss9 * dscqss_dsc[324] +
    dwdot13dscqss11 * dscqss_dsc[394] + dwdot13dscqss12 * dscqss_dsc[429] +
    dwdot13dscqss14 * dscqss_dsc[499] + dwdot13dscqss13 * dscqss_dsc[464] +
    dwdot13dscqss15 * dscqss_dsc[534] + dwdot13dscqss8 * dscqss_dsc[289] +
    dwdot13dscqss10 * dscqss_dsc[359];
  J[373] =
    dwdot13dsc10 + dwdot13dscqss0 * dscqss_dsc[10] +
    dwdot13dscqss16 * dscqss_dsc[570] + dwdot13dscqss1 * dscqss_dsc[45] +
    dwdot13dscqss17 * dscqss_dsc[605] + dwdot13dscqss2 * dscqss_dsc[80] +
    dwdot13dscqss3 * dscqss_dsc[115] + dwdot13dscqss4 * dscqss_dsc[150] +
    dwdot13dscqss5 * dscqss_dsc[185] + dwdot13dscqss6 * dscqss_dsc[220] +
    dwdot13dscqss7 * dscqss_dsc[255] + dwdot13dscqss9 * dscqss_dsc[325] +
    dwdot13dscqss11 * dscqss_dsc[395] + dwdot13dscqss12 * dscqss_dsc[430] +
    dwdot13dscqss14 * dscqss_dsc[500] + dwdot13dscqss13 * dscqss_dsc[465] +
    dwdot13dscqss15 * dscqss_dsc[535] + dwdot13dscqss8 * dscqss_dsc[290] +
    dwdot13dscqss10 * dscqss_dsc[360];
  J[409] =
    dwdot13dsc11 + dwdot13dscqss0 * dscqss_dsc[11] +
    dwdot13dscqss16 * dscqss_dsc[571] + dwdot13dscqss1 * dscqss_dsc[46] +
    dwdot13dscqss17 * dscqss_dsc[606] + dwdot13dscqss2 * dscqss_dsc[81] +
    dwdot13dscqss3 * dscqss_dsc[116] + dwdot13dscqss4 * dscqss_dsc[151] +
    dwdot13dscqss5 * dscqss_dsc[186] + dwdot13dscqss6 * dscqss_dsc[221] +
    dwdot13dscqss7 * dscqss_dsc[256] + dwdot13dscqss9 * dscqss_dsc[326] +
    dwdot13dscqss11 * dscqss_dsc[396] + dwdot13dscqss12 * dscqss_dsc[431] +
    dwdot13dscqss14 * dscqss_dsc[501] + dwdot13dscqss13 * dscqss_dsc[466] +
    dwdot13dscqss15 * dscqss_dsc[536] + dwdot13dscqss8 * dscqss_dsc[291] +
    dwdot13dscqss10 * dscqss_dsc[361];
  J[445] =
    dwdot13dsc12 + dwdot13dscqss0 * dscqss_dsc[12] +
    dwdot13dscqss16 * dscqss_dsc[572] + dwdot13dscqss1 * dscqss_dsc[47] +
    dwdot13dscqss17 * dscqss_dsc[607] + dwdot13dscqss2 * dscqss_dsc[82] +
    dwdot13dscqss3 * dscqss_dsc[117] + dwdot13dscqss4 * dscqss_dsc[152] +
    dwdot13dscqss5 * dscqss_dsc[187] + dwdot13dscqss6 * dscqss_dsc[222] +
    dwdot13dscqss7 * dscqss_dsc[257] + dwdot13dscqss9 * dscqss_dsc[327] +
    dwdot13dscqss11 * dscqss_dsc[397] + dwdot13dscqss12 * dscqss_dsc[432] +
    dwdot13dscqss14 * dscqss_dsc[502] + dwdot13dscqss13 * dscqss_dsc[467] +
    dwdot13dscqss15 * dscqss_dsc[537] + dwdot13dscqss8 * dscqss_dsc[292] +
    dwdot13dscqss10 * dscqss_dsc[362];
  J[481] =
    dwdot13dsc13 + dwdot13dscqss0 * dscqss_dsc[13] +
    dwdot13dscqss16 * dscqss_dsc[573] + dwdot13dscqss1 * dscqss_dsc[48] +
    dwdot13dscqss17 * dscqss_dsc[608] + dwdot13dscqss2 * dscqss_dsc[83] +
    dwdot13dscqss3 * dscqss_dsc[118] + dwdot13dscqss4 * dscqss_dsc[153] +
    dwdot13dscqss5 * dscqss_dsc[188] + dwdot13dscqss6 * dscqss_dsc[223] +
    dwdot13dscqss7 * dscqss_dsc[258] + dwdot13dscqss9 * dscqss_dsc[328] +
    dwdot13dscqss11 * dscqss_dsc[398] + dwdot13dscqss12 * dscqss_dsc[433] +
    dwdot13dscqss14 * dscqss_dsc[503] + dwdot13dscqss13 * dscqss_dsc[468] +
    dwdot13dscqss15 * dscqss_dsc[538] + dwdot13dscqss8 * dscqss_dsc[293] +
    dwdot13dscqss10 * dscqss_dsc[363];
  J[517] =
    dwdot13dsc14 + dwdot13dscqss0 * dscqss_dsc[14] +
    dwdot13dscqss16 * dscqss_dsc[574] + dwdot13dscqss1 * dscqss_dsc[49] +
    dwdot13dscqss17 * dscqss_dsc[609] + dwdot13dscqss2 * dscqss_dsc[84] +
    dwdot13dscqss3 * dscqss_dsc[119] + dwdot13dscqss4 * dscqss_dsc[154] +
    dwdot13dscqss5 * dscqss_dsc[189] + dwdot13dscqss6 * dscqss_dsc[224] +
    dwdot13dscqss7 * dscqss_dsc[259] + dwdot13dscqss9 * dscqss_dsc[329] +
    dwdot13dscqss11 * dscqss_dsc[399] + dwdot13dscqss12 * dscqss_dsc[434] +
    dwdot13dscqss14 * dscqss_dsc[504] + dwdot13dscqss13 * dscqss_dsc[469] +
    dwdot13dscqss15 * dscqss_dsc[539] + dwdot13dscqss8 * dscqss_dsc[294] +
    dwdot13dscqss10 * dscqss_dsc[364];
  J[553] =
    dwdot13dsc15 + dwdot13dscqss0 * dscqss_dsc[15] +
    dwdot13dscqss16 * dscqss_dsc[575] + dwdot13dscqss1 * dscqss_dsc[50] +
    dwdot13dscqss17 * dscqss_dsc[610] + dwdot13dscqss2 * dscqss_dsc[85] +
    dwdot13dscqss3 * dscqss_dsc[120] + dwdot13dscqss4 * dscqss_dsc[155] +
    dwdot13dscqss5 * dscqss_dsc[190] + dwdot13dscqss6 * dscqss_dsc[225] +
    dwdot13dscqss7 * dscqss_dsc[260] + dwdot13dscqss9 * dscqss_dsc[330] +
    dwdot13dscqss11 * dscqss_dsc[400] + dwdot13dscqss12 * dscqss_dsc[435] +
    dwdot13dscqss14 * dscqss_dsc[505] + dwdot13dscqss13 * dscqss_dsc[470] +
    dwdot13dscqss15 * dscqss_dsc[540] + dwdot13dscqss8 * dscqss_dsc[295] +
    dwdot13dscqss10 * dscqss_dsc[365];
  J[589] =
    dwdot13dsc16 + dwdot13dscqss0 * dscqss_dsc[16] +
    dwdot13dscqss16 * dscqss_dsc[576] + dwdot13dscqss1 * dscqss_dsc[51] +
    dwdot13dscqss17 * dscqss_dsc[611] + dwdot13dscqss2 * dscqss_dsc[86] +
    dwdot13dscqss3 * dscqss_dsc[121] + dwdot13dscqss4 * dscqss_dsc[156] +
    dwdot13dscqss5 * dscqss_dsc[191] + dwdot13dscqss6 * dscqss_dsc[226] +
    dwdot13dscqss7 * dscqss_dsc[261] + dwdot13dscqss9 * dscqss_dsc[331] +
    dwdot13dscqss11 * dscqss_dsc[401] + dwdot13dscqss12 * dscqss_dsc[436] +
    dwdot13dscqss14 * dscqss_dsc[506] + dwdot13dscqss13 * dscqss_dsc[471] +
    dwdot13dscqss15 * dscqss_dsc[541] + dwdot13dscqss8 * dscqss_dsc[296] +
    dwdot13dscqss10 * dscqss_dsc[366];
  J[625] =
    dwdot13dsc17 + dwdot13dscqss0 * dscqss_dsc[17] +
    dwdot13dscqss16 * dscqss_dsc[577] + dwdot13dscqss1 * dscqss_dsc[52] +
    dwdot13dscqss17 * dscqss_dsc[612] + dwdot13dscqss2 * dscqss_dsc[87] +
    dwdot13dscqss3 * dscqss_dsc[122] + dwdot13dscqss4 * dscqss_dsc[157] +
    dwdot13dscqss5 * dscqss_dsc[192] + dwdot13dscqss6 * dscqss_dsc[227] +
    dwdot13dscqss7 * dscqss_dsc[262] + dwdot13dscqss9 * dscqss_dsc[332] +
    dwdot13dscqss11 * dscqss_dsc[402] + dwdot13dscqss12 * dscqss_dsc[437] +
    dwdot13dscqss14 * dscqss_dsc[507] + dwdot13dscqss13 * dscqss_dsc[472] +
    dwdot13dscqss15 * dscqss_dsc[542] + dwdot13dscqss8 * dscqss_dsc[297] +
    dwdot13dscqss10 * dscqss_dsc[367];
  J[661] =
    dwdot13dsc18 + dwdot13dscqss0 * dscqss_dsc[18] +
    dwdot13dscqss16 * dscqss_dsc[578] + dwdot13dscqss1 * dscqss_dsc[53] +
    dwdot13dscqss17 * dscqss_dsc[613] + dwdot13dscqss2 * dscqss_dsc[88] +
    dwdot13dscqss3 * dscqss_dsc[123] + dwdot13dscqss4 * dscqss_dsc[158] +
    dwdot13dscqss5 * dscqss_dsc[193] + dwdot13dscqss6 * dscqss_dsc[228] +
    dwdot13dscqss7 * dscqss_dsc[263] + dwdot13dscqss9 * dscqss_dsc[333] +
    dwdot13dscqss11 * dscqss_dsc[403] + dwdot13dscqss12 * dscqss_dsc[438] +
    dwdot13dscqss14 * dscqss_dsc[508] + dwdot13dscqss13 * dscqss_dsc[473] +
    dwdot13dscqss15 * dscqss_dsc[543] + dwdot13dscqss8 * dscqss_dsc[298] +
    dwdot13dscqss10 * dscqss_dsc[368];
  J[697] =
    dwdot13dsc19 + dwdot13dscqss0 * dscqss_dsc[19] +
    dwdot13dscqss16 * dscqss_dsc[579] + dwdot13dscqss1 * dscqss_dsc[54] +
    dwdot13dscqss17 * dscqss_dsc[614] + dwdot13dscqss2 * dscqss_dsc[89] +
    dwdot13dscqss3 * dscqss_dsc[124] + dwdot13dscqss4 * dscqss_dsc[159] +
    dwdot13dscqss5 * dscqss_dsc[194] + dwdot13dscqss6 * dscqss_dsc[229] +
    dwdot13dscqss7 * dscqss_dsc[264] + dwdot13dscqss9 * dscqss_dsc[334] +
    dwdot13dscqss11 * dscqss_dsc[404] + dwdot13dscqss12 * dscqss_dsc[439] +
    dwdot13dscqss14 * dscqss_dsc[509] + dwdot13dscqss13 * dscqss_dsc[474] +
    dwdot13dscqss15 * dscqss_dsc[544] + dwdot13dscqss8 * dscqss_dsc[299] +
    dwdot13dscqss10 * dscqss_dsc[369];
  J[733] =
    dwdot13dsc20 + dwdot13dscqss0 * dscqss_dsc[20] +
    dwdot13dscqss16 * dscqss_dsc[580] + dwdot13dscqss1 * dscqss_dsc[55] +
    dwdot13dscqss17 * dscqss_dsc[615] + dwdot13dscqss2 * dscqss_dsc[90] +
    dwdot13dscqss3 * dscqss_dsc[125] + dwdot13dscqss4 * dscqss_dsc[160] +
    dwdot13dscqss5 * dscqss_dsc[195] + dwdot13dscqss6 * dscqss_dsc[230] +
    dwdot13dscqss7 * dscqss_dsc[265] + dwdot13dscqss9 * dscqss_dsc[335] +
    dwdot13dscqss11 * dscqss_dsc[405] + dwdot13dscqss12 * dscqss_dsc[440] +
    dwdot13dscqss14 * dscqss_dsc[510] + dwdot13dscqss13 * dscqss_dsc[475] +
    dwdot13dscqss15 * dscqss_dsc[545] + dwdot13dscqss8 * dscqss_dsc[300] +
    dwdot13dscqss10 * dscqss_dsc[370];
  J[769] =
    dwdot13dsc21 + dwdot13dscqss0 * dscqss_dsc[21] +
    dwdot13dscqss16 * dscqss_dsc[581] + dwdot13dscqss1 * dscqss_dsc[56] +
    dwdot13dscqss17 * dscqss_dsc[616] + dwdot13dscqss2 * dscqss_dsc[91] +
    dwdot13dscqss3 * dscqss_dsc[126] + dwdot13dscqss4 * dscqss_dsc[161] +
    dwdot13dscqss5 * dscqss_dsc[196] + dwdot13dscqss6 * dscqss_dsc[231] +
    dwdot13dscqss7 * dscqss_dsc[266] + dwdot13dscqss9 * dscqss_dsc[336] +
    dwdot13dscqss11 * dscqss_dsc[406] + dwdot13dscqss12 * dscqss_dsc[441] +
    dwdot13dscqss14 * dscqss_dsc[511] + dwdot13dscqss13 * dscqss_dsc[476] +
    dwdot13dscqss15 * dscqss_dsc[546] + dwdot13dscqss8 * dscqss_dsc[301] +
    dwdot13dscqss10 * dscqss_dsc[371];
  J[805] =
    dwdot13dsc22 + dwdot13dscqss0 * dscqss_dsc[22] +
    dwdot13dscqss16 * dscqss_dsc[582] + dwdot13dscqss1 * dscqss_dsc[57] +
    dwdot13dscqss17 * dscqss_dsc[617] + dwdot13dscqss2 * dscqss_dsc[92] +
    dwdot13dscqss3 * dscqss_dsc[127] + dwdot13dscqss4 * dscqss_dsc[162] +
    dwdot13dscqss5 * dscqss_dsc[197] + dwdot13dscqss6 * dscqss_dsc[232] +
    dwdot13dscqss7 * dscqss_dsc[267] + dwdot13dscqss9 * dscqss_dsc[337] +
    dwdot13dscqss11 * dscqss_dsc[407] + dwdot13dscqss12 * dscqss_dsc[442] +
    dwdot13dscqss14 * dscqss_dsc[512] + dwdot13dscqss13 * dscqss_dsc[477] +
    dwdot13dscqss15 * dscqss_dsc[547] + dwdot13dscqss8 * dscqss_dsc[302] +
    dwdot13dscqss10 * dscqss_dsc[372];
  J[841] =
    dwdot13dsc23 + dwdot13dscqss0 * dscqss_dsc[23] +
    dwdot13dscqss16 * dscqss_dsc[583] + dwdot13dscqss1 * dscqss_dsc[58] +
    dwdot13dscqss17 * dscqss_dsc[618] + dwdot13dscqss2 * dscqss_dsc[93] +
    dwdot13dscqss3 * dscqss_dsc[128] + dwdot13dscqss4 * dscqss_dsc[163] +
    dwdot13dscqss5 * dscqss_dsc[198] + dwdot13dscqss6 * dscqss_dsc[233] +
    dwdot13dscqss7 * dscqss_dsc[268] + dwdot13dscqss9 * dscqss_dsc[338] +
    dwdot13dscqss11 * dscqss_dsc[408] + dwdot13dscqss12 * dscqss_dsc[443] +
    dwdot13dscqss14 * dscqss_dsc[513] + dwdot13dscqss13 * dscqss_dsc[478] +
    dwdot13dscqss15 * dscqss_dsc[548] + dwdot13dscqss8 * dscqss_dsc[303] +
    dwdot13dscqss10 * dscqss_dsc[373];
  J[877] =
    dwdot13dsc24 + dwdot13dscqss0 * dscqss_dsc[24] +
    dwdot13dscqss16 * dscqss_dsc[584] + dwdot13dscqss1 * dscqss_dsc[59] +
    dwdot13dscqss17 * dscqss_dsc[619] + dwdot13dscqss2 * dscqss_dsc[94] +
    dwdot13dscqss3 * dscqss_dsc[129] + dwdot13dscqss4 * dscqss_dsc[164] +
    dwdot13dscqss5 * dscqss_dsc[199] + dwdot13dscqss6 * dscqss_dsc[234] +
    dwdot13dscqss7 * dscqss_dsc[269] + dwdot13dscqss9 * dscqss_dsc[339] +
    dwdot13dscqss11 * dscqss_dsc[409] + dwdot13dscqss12 * dscqss_dsc[444] +
    dwdot13dscqss14 * dscqss_dsc[514] + dwdot13dscqss13 * dscqss_dsc[479] +
    dwdot13dscqss15 * dscqss_dsc[549] + dwdot13dscqss8 * dscqss_dsc[304] +
    dwdot13dscqss10 * dscqss_dsc[374];
  J[913] =
    dwdot13dsc25 + dwdot13dscqss0 * dscqss_dsc[25] +
    dwdot13dscqss16 * dscqss_dsc[585] + dwdot13dscqss1 * dscqss_dsc[60] +
    dwdot13dscqss17 * dscqss_dsc[620] + dwdot13dscqss2 * dscqss_dsc[95] +
    dwdot13dscqss3 * dscqss_dsc[130] + dwdot13dscqss4 * dscqss_dsc[165] +
    dwdot13dscqss5 * dscqss_dsc[200] + dwdot13dscqss6 * dscqss_dsc[235] +
    dwdot13dscqss7 * dscqss_dsc[270] + dwdot13dscqss9 * dscqss_dsc[340] +
    dwdot13dscqss11 * dscqss_dsc[410] + dwdot13dscqss12 * dscqss_dsc[445] +
    dwdot13dscqss14 * dscqss_dsc[515] + dwdot13dscqss13 * dscqss_dsc[480] +
    dwdot13dscqss15 * dscqss_dsc[550] + dwdot13dscqss8 * dscqss_dsc[305] +
    dwdot13dscqss10 * dscqss_dsc[375];
  J[949] =
    dwdot13dsc26 + dwdot13dscqss0 * dscqss_dsc[26] +
    dwdot13dscqss16 * dscqss_dsc[586] + dwdot13dscqss1 * dscqss_dsc[61] +
    dwdot13dscqss17 * dscqss_dsc[621] + dwdot13dscqss2 * dscqss_dsc[96] +
    dwdot13dscqss3 * dscqss_dsc[131] + dwdot13dscqss4 * dscqss_dsc[166] +
    dwdot13dscqss5 * dscqss_dsc[201] + dwdot13dscqss6 * dscqss_dsc[236] +
    dwdot13dscqss7 * dscqss_dsc[271] + dwdot13dscqss9 * dscqss_dsc[341] +
    dwdot13dscqss11 * dscqss_dsc[411] + dwdot13dscqss12 * dscqss_dsc[446] +
    dwdot13dscqss14 * dscqss_dsc[516] + dwdot13dscqss13 * dscqss_dsc[481] +
    dwdot13dscqss15 * dscqss_dsc[551] + dwdot13dscqss8 * dscqss_dsc[306] +
    dwdot13dscqss10 * dscqss_dsc[376];
  J[985] =
    dwdot13dsc27 + dwdot13dscqss0 * dscqss_dsc[27] +
    dwdot13dscqss16 * dscqss_dsc[587] + dwdot13dscqss1 * dscqss_dsc[62] +
    dwdot13dscqss17 * dscqss_dsc[622] + dwdot13dscqss2 * dscqss_dsc[97] +
    dwdot13dscqss3 * dscqss_dsc[132] + dwdot13dscqss4 * dscqss_dsc[167] +
    dwdot13dscqss5 * dscqss_dsc[202] + dwdot13dscqss6 * dscqss_dsc[237] +
    dwdot13dscqss7 * dscqss_dsc[272] + dwdot13dscqss9 * dscqss_dsc[342] +
    dwdot13dscqss11 * dscqss_dsc[412] + dwdot13dscqss12 * dscqss_dsc[447] +
    dwdot13dscqss14 * dscqss_dsc[517] + dwdot13dscqss13 * dscqss_dsc[482] +
    dwdot13dscqss15 * dscqss_dsc[552] + dwdot13dscqss8 * dscqss_dsc[307] +
    dwdot13dscqss10 * dscqss_dsc[377];
  J[1021] =
    dwdot13dsc28 + dwdot13dscqss0 * dscqss_dsc[28] +
    dwdot13dscqss16 * dscqss_dsc[588] + dwdot13dscqss1 * dscqss_dsc[63] +
    dwdot13dscqss17 * dscqss_dsc[623] + dwdot13dscqss2 * dscqss_dsc[98] +
    dwdot13dscqss3 * dscqss_dsc[133] + dwdot13dscqss4 * dscqss_dsc[168] +
    dwdot13dscqss5 * dscqss_dsc[203] + dwdot13dscqss6 * dscqss_dsc[238] +
    dwdot13dscqss7 * dscqss_dsc[273] + dwdot13dscqss9 * dscqss_dsc[343] +
    dwdot13dscqss11 * dscqss_dsc[413] + dwdot13dscqss12 * dscqss_dsc[448] +
    dwdot13dscqss14 * dscqss_dsc[518] + dwdot13dscqss13 * dscqss_dsc[483] +
    dwdot13dscqss15 * dscqss_dsc[553] + dwdot13dscqss8 * dscqss_dsc[308] +
    dwdot13dscqss10 * dscqss_dsc[378];
  J[1057] =
    dwdot13dsc29 + dwdot13dscqss0 * dscqss_dsc[29] +
    dwdot13dscqss16 * dscqss_dsc[589] + dwdot13dscqss1 * dscqss_dsc[64] +
    dwdot13dscqss17 * dscqss_dsc[624] + dwdot13dscqss2 * dscqss_dsc[99] +
    dwdot13dscqss3 * dscqss_dsc[134] + dwdot13dscqss4 * dscqss_dsc[169] +
    dwdot13dscqss5 * dscqss_dsc[204] + dwdot13dscqss6 * dscqss_dsc[239] +
    dwdot13dscqss7 * dscqss_dsc[274] + dwdot13dscqss9 * dscqss_dsc[344] +
    dwdot13dscqss11 * dscqss_dsc[414] + dwdot13dscqss12 * dscqss_dsc[449] +
    dwdot13dscqss14 * dscqss_dsc[519] + dwdot13dscqss13 * dscqss_dsc[484] +
    dwdot13dscqss15 * dscqss_dsc[554] + dwdot13dscqss8 * dscqss_dsc[309] +
    dwdot13dscqss10 * dscqss_dsc[379];
  J[1093] =
    dwdot13dsc30 + dwdot13dscqss0 * dscqss_dsc[30] +
    dwdot13dscqss16 * dscqss_dsc[590] + dwdot13dscqss1 * dscqss_dsc[65] +
    dwdot13dscqss17 * dscqss_dsc[625] + dwdot13dscqss2 * dscqss_dsc[100] +
    dwdot13dscqss3 * dscqss_dsc[135] + dwdot13dscqss4 * dscqss_dsc[170] +
    dwdot13dscqss5 * dscqss_dsc[205] + dwdot13dscqss6 * dscqss_dsc[240] +
    dwdot13dscqss7 * dscqss_dsc[275] + dwdot13dscqss9 * dscqss_dsc[345] +
    dwdot13dscqss11 * dscqss_dsc[415] + dwdot13dscqss12 * dscqss_dsc[450] +
    dwdot13dscqss14 * dscqss_dsc[520] + dwdot13dscqss13 * dscqss_dsc[485] +
    dwdot13dscqss15 * dscqss_dsc[555] + dwdot13dscqss8 * dscqss_dsc[310] +
    dwdot13dscqss10 * dscqss_dsc[380];
  J[1129] =
    dwdot13dsc31 + dwdot13dscqss0 * dscqss_dsc[31] +
    dwdot13dscqss16 * dscqss_dsc[591] + dwdot13dscqss1 * dscqss_dsc[66] +
    dwdot13dscqss17 * dscqss_dsc[626] + dwdot13dscqss2 * dscqss_dsc[101] +
    dwdot13dscqss3 * dscqss_dsc[136] + dwdot13dscqss4 * dscqss_dsc[171] +
    dwdot13dscqss5 * dscqss_dsc[206] + dwdot13dscqss6 * dscqss_dsc[241] +
    dwdot13dscqss7 * dscqss_dsc[276] + dwdot13dscqss9 * dscqss_dsc[346] +
    dwdot13dscqss11 * dscqss_dsc[416] + dwdot13dscqss12 * dscqss_dsc[451] +
    dwdot13dscqss14 * dscqss_dsc[521] + dwdot13dscqss13 * dscqss_dsc[486] +
    dwdot13dscqss15 * dscqss_dsc[556] + dwdot13dscqss8 * dscqss_dsc[311] +
    dwdot13dscqss10 * dscqss_dsc[381];
  J[1165] =
    dwdot13dsc32 + dwdot13dscqss0 * dscqss_dsc[32] +
    dwdot13dscqss16 * dscqss_dsc[592] + dwdot13dscqss1 * dscqss_dsc[67] +
    dwdot13dscqss17 * dscqss_dsc[627] + dwdot13dscqss2 * dscqss_dsc[102] +
    dwdot13dscqss3 * dscqss_dsc[137] + dwdot13dscqss4 * dscqss_dsc[172] +
    dwdot13dscqss5 * dscqss_dsc[207] + dwdot13dscqss6 * dscqss_dsc[242] +
    dwdot13dscqss7 * dscqss_dsc[277] + dwdot13dscqss9 * dscqss_dsc[347] +
    dwdot13dscqss11 * dscqss_dsc[417] + dwdot13dscqss12 * dscqss_dsc[452] +
    dwdot13dscqss14 * dscqss_dsc[522] + dwdot13dscqss13 * dscqss_dsc[487] +
    dwdot13dscqss15 * dscqss_dsc[557] + dwdot13dscqss8 * dscqss_dsc[312] +
    dwdot13dscqss10 * dscqss_dsc[382];
  J[1201] =
    dwdot13dsc33 + dwdot13dscqss0 * dscqss_dsc[33] +
    dwdot13dscqss16 * dscqss_dsc[593] + dwdot13dscqss1 * dscqss_dsc[68] +
    dwdot13dscqss17 * dscqss_dsc[628] + dwdot13dscqss2 * dscqss_dsc[103] +
    dwdot13dscqss3 * dscqss_dsc[138] + dwdot13dscqss4 * dscqss_dsc[173] +
    dwdot13dscqss5 * dscqss_dsc[208] + dwdot13dscqss6 * dscqss_dsc[243] +
    dwdot13dscqss7 * dscqss_dsc[278] + dwdot13dscqss9 * dscqss_dsc[348] +
    dwdot13dscqss11 * dscqss_dsc[418] + dwdot13dscqss12 * dscqss_dsc[453] +
    dwdot13dscqss14 * dscqss_dsc[523] + dwdot13dscqss13 * dscqss_dsc[488] +
    dwdot13dscqss15 * dscqss_dsc[558] + dwdot13dscqss8 * dscqss_dsc[313] +
    dwdot13dscqss10 * dscqss_dsc[383];
  J[1237] =
    dwdot13dsc34 + dwdot13dscqss0 * dscqss_dsc[34] +
    dwdot13dscqss16 * dscqss_dsc[594] + dwdot13dscqss1 * dscqss_dsc[69] +
    dwdot13dscqss17 * dscqss_dsc[629] + dwdot13dscqss2 * dscqss_dsc[104] +
    dwdot13dscqss3 * dscqss_dsc[139] + dwdot13dscqss4 * dscqss_dsc[174] +
    dwdot13dscqss5 * dscqss_dsc[209] + dwdot13dscqss6 * dscqss_dsc[244] +
    dwdot13dscqss7 * dscqss_dsc[279] + dwdot13dscqss9 * dscqss_dsc[349] +
    dwdot13dscqss11 * dscqss_dsc[419] + dwdot13dscqss12 * dscqss_dsc[454] +
    dwdot13dscqss14 * dscqss_dsc[524] + dwdot13dscqss13 * dscqss_dsc[489] +
    dwdot13dscqss15 * dscqss_dsc[559] + dwdot13dscqss8 * dscqss_dsc[314] +
    dwdot13dscqss10 * dscqss_dsc[384];
  J[14] =
    dwdot14dsc0 + dwdot14dscqss0 * dscqss_dsc[0] +
    dwdot14dscqss16 * dscqss_dsc[560] + dwdot14dscqss1 * dscqss_dsc[35] +
    dwdot14dscqss17 * dscqss_dsc[595] + dwdot14dscqss2 * dscqss_dsc[70] +
    dwdot14dscqss3 * dscqss_dsc[105] + dwdot14dscqss4 * dscqss_dsc[140] +
    dwdot14dscqss5 * dscqss_dsc[175] + dwdot14dscqss6 * dscqss_dsc[210] +
    dwdot14dscqss7 * dscqss_dsc[245] + dwdot14dscqss9 * dscqss_dsc[315] +
    dwdot14dscqss11 * dscqss_dsc[385] + dwdot14dscqss12 * dscqss_dsc[420] +
    dwdot14dscqss14 * dscqss_dsc[490] + dwdot14dscqss13 * dscqss_dsc[455] +
    dwdot14dscqss15 * dscqss_dsc[525] + dwdot14dscqss8 * dscqss_dsc[280] +
    dwdot14dscqss10 * dscqss_dsc[350];
  J[50] =
    dwdot14dsc1 + dwdot14dscqss0 * dscqss_dsc[1] +
    dwdot14dscqss16 * dscqss_dsc[561] + dwdot14dscqss1 * dscqss_dsc[36] +
    dwdot14dscqss17 * dscqss_dsc[596] + dwdot14dscqss2 * dscqss_dsc[71] +
    dwdot14dscqss3 * dscqss_dsc[106] + dwdot14dscqss4 * dscqss_dsc[141] +
    dwdot14dscqss5 * dscqss_dsc[176] + dwdot14dscqss6 * dscqss_dsc[211] +
    dwdot14dscqss7 * dscqss_dsc[246] + dwdot14dscqss9 * dscqss_dsc[316] +
    dwdot14dscqss11 * dscqss_dsc[386] + dwdot14dscqss12 * dscqss_dsc[421] +
    dwdot14dscqss14 * dscqss_dsc[491] + dwdot14dscqss13 * dscqss_dsc[456] +
    dwdot14dscqss15 * dscqss_dsc[526] + dwdot14dscqss8 * dscqss_dsc[281] +
    dwdot14dscqss10 * dscqss_dsc[351];
  J[86] =
    dwdot14dsc2 + dwdot14dscqss0 * dscqss_dsc[2] +
    dwdot14dscqss16 * dscqss_dsc[562] + dwdot14dscqss1 * dscqss_dsc[37] +
    dwdot14dscqss17 * dscqss_dsc[597] + dwdot14dscqss2 * dscqss_dsc[72] +
    dwdot14dscqss3 * dscqss_dsc[107] + dwdot14dscqss4 * dscqss_dsc[142] +
    dwdot14dscqss5 * dscqss_dsc[177] + dwdot14dscqss6 * dscqss_dsc[212] +
    dwdot14dscqss7 * dscqss_dsc[247] + dwdot14dscqss9 * dscqss_dsc[317] +
    dwdot14dscqss11 * dscqss_dsc[387] + dwdot14dscqss12 * dscqss_dsc[422] +
    dwdot14dscqss14 * dscqss_dsc[492] + dwdot14dscqss13 * dscqss_dsc[457] +
    dwdot14dscqss15 * dscqss_dsc[527] + dwdot14dscqss8 * dscqss_dsc[282] +
    dwdot14dscqss10 * dscqss_dsc[352];
  J[122] =
    dwdot14dsc3 + dwdot14dscqss0 * dscqss_dsc[3] +
    dwdot14dscqss16 * dscqss_dsc[563] + dwdot14dscqss1 * dscqss_dsc[38] +
    dwdot14dscqss17 * dscqss_dsc[598] + dwdot14dscqss2 * dscqss_dsc[73] +
    dwdot14dscqss3 * dscqss_dsc[108] + dwdot14dscqss4 * dscqss_dsc[143] +
    dwdot14dscqss5 * dscqss_dsc[178] + dwdot14dscqss6 * dscqss_dsc[213] +
    dwdot14dscqss7 * dscqss_dsc[248] + dwdot14dscqss9 * dscqss_dsc[318] +
    dwdot14dscqss11 * dscqss_dsc[388] + dwdot14dscqss12 * dscqss_dsc[423] +
    dwdot14dscqss14 * dscqss_dsc[493] + dwdot14dscqss13 * dscqss_dsc[458] +
    dwdot14dscqss15 * dscqss_dsc[528] + dwdot14dscqss8 * dscqss_dsc[283] +
    dwdot14dscqss10 * dscqss_dsc[353];
  J[158] =
    dwdot14dsc4 + dwdot14dscqss0 * dscqss_dsc[4] +
    dwdot14dscqss16 * dscqss_dsc[564] + dwdot14dscqss1 * dscqss_dsc[39] +
    dwdot14dscqss17 * dscqss_dsc[599] + dwdot14dscqss2 * dscqss_dsc[74] +
    dwdot14dscqss3 * dscqss_dsc[109] + dwdot14dscqss4 * dscqss_dsc[144] +
    dwdot14dscqss5 * dscqss_dsc[179] + dwdot14dscqss6 * dscqss_dsc[214] +
    dwdot14dscqss7 * dscqss_dsc[249] + dwdot14dscqss9 * dscqss_dsc[319] +
    dwdot14dscqss11 * dscqss_dsc[389] + dwdot14dscqss12 * dscqss_dsc[424] +
    dwdot14dscqss14 * dscqss_dsc[494] + dwdot14dscqss13 * dscqss_dsc[459] +
    dwdot14dscqss15 * dscqss_dsc[529] + dwdot14dscqss8 * dscqss_dsc[284] +
    dwdot14dscqss10 * dscqss_dsc[354];
  J[194] =
    dwdot14dsc5 + dwdot14dscqss0 * dscqss_dsc[5] +
    dwdot14dscqss16 * dscqss_dsc[565] + dwdot14dscqss1 * dscqss_dsc[40] +
    dwdot14dscqss17 * dscqss_dsc[600] + dwdot14dscqss2 * dscqss_dsc[75] +
    dwdot14dscqss3 * dscqss_dsc[110] + dwdot14dscqss4 * dscqss_dsc[145] +
    dwdot14dscqss5 * dscqss_dsc[180] + dwdot14dscqss6 * dscqss_dsc[215] +
    dwdot14dscqss7 * dscqss_dsc[250] + dwdot14dscqss9 * dscqss_dsc[320] +
    dwdot14dscqss11 * dscqss_dsc[390] + dwdot14dscqss12 * dscqss_dsc[425] +
    dwdot14dscqss14 * dscqss_dsc[495] + dwdot14dscqss13 * dscqss_dsc[460] +
    dwdot14dscqss15 * dscqss_dsc[530] + dwdot14dscqss8 * dscqss_dsc[285] +
    dwdot14dscqss10 * dscqss_dsc[355];
  J[230] =
    dwdot14dsc6 + dwdot14dscqss0 * dscqss_dsc[6] +
    dwdot14dscqss16 * dscqss_dsc[566] + dwdot14dscqss1 * dscqss_dsc[41] +
    dwdot14dscqss17 * dscqss_dsc[601] + dwdot14dscqss2 * dscqss_dsc[76] +
    dwdot14dscqss3 * dscqss_dsc[111] + dwdot14dscqss4 * dscqss_dsc[146] +
    dwdot14dscqss5 * dscqss_dsc[181] + dwdot14dscqss6 * dscqss_dsc[216] +
    dwdot14dscqss7 * dscqss_dsc[251] + dwdot14dscqss9 * dscqss_dsc[321] +
    dwdot14dscqss11 * dscqss_dsc[391] + dwdot14dscqss12 * dscqss_dsc[426] +
    dwdot14dscqss14 * dscqss_dsc[496] + dwdot14dscqss13 * dscqss_dsc[461] +
    dwdot14dscqss15 * dscqss_dsc[531] + dwdot14dscqss8 * dscqss_dsc[286] +
    dwdot14dscqss10 * dscqss_dsc[356];
  J[266] =
    dwdot14dsc7 + dwdot14dscqss0 * dscqss_dsc[7] +
    dwdot14dscqss16 * dscqss_dsc[567] + dwdot14dscqss1 * dscqss_dsc[42] +
    dwdot14dscqss17 * dscqss_dsc[602] + dwdot14dscqss2 * dscqss_dsc[77] +
    dwdot14dscqss3 * dscqss_dsc[112] + dwdot14dscqss4 * dscqss_dsc[147] +
    dwdot14dscqss5 * dscqss_dsc[182] + dwdot14dscqss6 * dscqss_dsc[217] +
    dwdot14dscqss7 * dscqss_dsc[252] + dwdot14dscqss9 * dscqss_dsc[322] +
    dwdot14dscqss11 * dscqss_dsc[392] + dwdot14dscqss12 * dscqss_dsc[427] +
    dwdot14dscqss14 * dscqss_dsc[497] + dwdot14dscqss13 * dscqss_dsc[462] +
    dwdot14dscqss15 * dscqss_dsc[532] + dwdot14dscqss8 * dscqss_dsc[287] +
    dwdot14dscqss10 * dscqss_dsc[357];
  J[302] =
    dwdot14dsc8 + dwdot14dscqss0 * dscqss_dsc[8] +
    dwdot14dscqss16 * dscqss_dsc[568] + dwdot14dscqss1 * dscqss_dsc[43] +
    dwdot14dscqss17 * dscqss_dsc[603] + dwdot14dscqss2 * dscqss_dsc[78] +
    dwdot14dscqss3 * dscqss_dsc[113] + dwdot14dscqss4 * dscqss_dsc[148] +
    dwdot14dscqss5 * dscqss_dsc[183] + dwdot14dscqss6 * dscqss_dsc[218] +
    dwdot14dscqss7 * dscqss_dsc[253] + dwdot14dscqss9 * dscqss_dsc[323] +
    dwdot14dscqss11 * dscqss_dsc[393] + dwdot14dscqss12 * dscqss_dsc[428] +
    dwdot14dscqss14 * dscqss_dsc[498] + dwdot14dscqss13 * dscqss_dsc[463] +
    dwdot14dscqss15 * dscqss_dsc[533] + dwdot14dscqss8 * dscqss_dsc[288] +
    dwdot14dscqss10 * dscqss_dsc[358];
  J[338] =
    dwdot14dsc9 + dwdot14dscqss0 * dscqss_dsc[9] +
    dwdot14dscqss16 * dscqss_dsc[569] + dwdot14dscqss1 * dscqss_dsc[44] +
    dwdot14dscqss17 * dscqss_dsc[604] + dwdot14dscqss2 * dscqss_dsc[79] +
    dwdot14dscqss3 * dscqss_dsc[114] + dwdot14dscqss4 * dscqss_dsc[149] +
    dwdot14dscqss5 * dscqss_dsc[184] + dwdot14dscqss6 * dscqss_dsc[219] +
    dwdot14dscqss7 * dscqss_dsc[254] + dwdot14dscqss9 * dscqss_dsc[324] +
    dwdot14dscqss11 * dscqss_dsc[394] + dwdot14dscqss12 * dscqss_dsc[429] +
    dwdot14dscqss14 * dscqss_dsc[499] + dwdot14dscqss13 * dscqss_dsc[464] +
    dwdot14dscqss15 * dscqss_dsc[534] + dwdot14dscqss8 * dscqss_dsc[289] +
    dwdot14dscqss10 * dscqss_dsc[359];
  J[374] =
    dwdot14dsc10 + dwdot14dscqss0 * dscqss_dsc[10] +
    dwdot14dscqss16 * dscqss_dsc[570] + dwdot14dscqss1 * dscqss_dsc[45] +
    dwdot14dscqss17 * dscqss_dsc[605] + dwdot14dscqss2 * dscqss_dsc[80] +
    dwdot14dscqss3 * dscqss_dsc[115] + dwdot14dscqss4 * dscqss_dsc[150] +
    dwdot14dscqss5 * dscqss_dsc[185] + dwdot14dscqss6 * dscqss_dsc[220] +
    dwdot14dscqss7 * dscqss_dsc[255] + dwdot14dscqss9 * dscqss_dsc[325] +
    dwdot14dscqss11 * dscqss_dsc[395] + dwdot14dscqss12 * dscqss_dsc[430] +
    dwdot14dscqss14 * dscqss_dsc[500] + dwdot14dscqss13 * dscqss_dsc[465] +
    dwdot14dscqss15 * dscqss_dsc[535] + dwdot14dscqss8 * dscqss_dsc[290] +
    dwdot14dscqss10 * dscqss_dsc[360];
  J[410] =
    dwdot14dsc11 + dwdot14dscqss0 * dscqss_dsc[11] +
    dwdot14dscqss16 * dscqss_dsc[571] + dwdot14dscqss1 * dscqss_dsc[46] +
    dwdot14dscqss17 * dscqss_dsc[606] + dwdot14dscqss2 * dscqss_dsc[81] +
    dwdot14dscqss3 * dscqss_dsc[116] + dwdot14dscqss4 * dscqss_dsc[151] +
    dwdot14dscqss5 * dscqss_dsc[186] + dwdot14dscqss6 * dscqss_dsc[221] +
    dwdot14dscqss7 * dscqss_dsc[256] + dwdot14dscqss9 * dscqss_dsc[326] +
    dwdot14dscqss11 * dscqss_dsc[396] + dwdot14dscqss12 * dscqss_dsc[431] +
    dwdot14dscqss14 * dscqss_dsc[501] + dwdot14dscqss13 * dscqss_dsc[466] +
    dwdot14dscqss15 * dscqss_dsc[536] + dwdot14dscqss8 * dscqss_dsc[291] +
    dwdot14dscqss10 * dscqss_dsc[361];
  J[446] =
    dwdot14dsc12 + dwdot14dscqss0 * dscqss_dsc[12] +
    dwdot14dscqss16 * dscqss_dsc[572] + dwdot14dscqss1 * dscqss_dsc[47] +
    dwdot14dscqss17 * dscqss_dsc[607] + dwdot14dscqss2 * dscqss_dsc[82] +
    dwdot14dscqss3 * dscqss_dsc[117] + dwdot14dscqss4 * dscqss_dsc[152] +
    dwdot14dscqss5 * dscqss_dsc[187] + dwdot14dscqss6 * dscqss_dsc[222] +
    dwdot14dscqss7 * dscqss_dsc[257] + dwdot14dscqss9 * dscqss_dsc[327] +
    dwdot14dscqss11 * dscqss_dsc[397] + dwdot14dscqss12 * dscqss_dsc[432] +
    dwdot14dscqss14 * dscqss_dsc[502] + dwdot14dscqss13 * dscqss_dsc[467] +
    dwdot14dscqss15 * dscqss_dsc[537] + dwdot14dscqss8 * dscqss_dsc[292] +
    dwdot14dscqss10 * dscqss_dsc[362];
  J[482] =
    dwdot14dsc13 + dwdot14dscqss0 * dscqss_dsc[13] +
    dwdot14dscqss16 * dscqss_dsc[573] + dwdot14dscqss1 * dscqss_dsc[48] +
    dwdot14dscqss17 * dscqss_dsc[608] + dwdot14dscqss2 * dscqss_dsc[83] +
    dwdot14dscqss3 * dscqss_dsc[118] + dwdot14dscqss4 * dscqss_dsc[153] +
    dwdot14dscqss5 * dscqss_dsc[188] + dwdot14dscqss6 * dscqss_dsc[223] +
    dwdot14dscqss7 * dscqss_dsc[258] + dwdot14dscqss9 * dscqss_dsc[328] +
    dwdot14dscqss11 * dscqss_dsc[398] + dwdot14dscqss12 * dscqss_dsc[433] +
    dwdot14dscqss14 * dscqss_dsc[503] + dwdot14dscqss13 * dscqss_dsc[468] +
    dwdot14dscqss15 * dscqss_dsc[538] + dwdot14dscqss8 * dscqss_dsc[293] +
    dwdot14dscqss10 * dscqss_dsc[363];
  J[518] =
    dwdot14dsc14 + dwdot14dscqss0 * dscqss_dsc[14] +
    dwdot14dscqss16 * dscqss_dsc[574] + dwdot14dscqss1 * dscqss_dsc[49] +
    dwdot14dscqss17 * dscqss_dsc[609] + dwdot14dscqss2 * dscqss_dsc[84] +
    dwdot14dscqss3 * dscqss_dsc[119] + dwdot14dscqss4 * dscqss_dsc[154] +
    dwdot14dscqss5 * dscqss_dsc[189] + dwdot14dscqss6 * dscqss_dsc[224] +
    dwdot14dscqss7 * dscqss_dsc[259] + dwdot14dscqss9 * dscqss_dsc[329] +
    dwdot14dscqss11 * dscqss_dsc[399] + dwdot14dscqss12 * dscqss_dsc[434] +
    dwdot14dscqss14 * dscqss_dsc[504] + dwdot14dscqss13 * dscqss_dsc[469] +
    dwdot14dscqss15 * dscqss_dsc[539] + dwdot14dscqss8 * dscqss_dsc[294] +
    dwdot14dscqss10 * dscqss_dsc[364];
  J[554] =
    dwdot14dsc15 + dwdot14dscqss0 * dscqss_dsc[15] +
    dwdot14dscqss16 * dscqss_dsc[575] + dwdot14dscqss1 * dscqss_dsc[50] +
    dwdot14dscqss17 * dscqss_dsc[610] + dwdot14dscqss2 * dscqss_dsc[85] +
    dwdot14dscqss3 * dscqss_dsc[120] + dwdot14dscqss4 * dscqss_dsc[155] +
    dwdot14dscqss5 * dscqss_dsc[190] + dwdot14dscqss6 * dscqss_dsc[225] +
    dwdot14dscqss7 * dscqss_dsc[260] + dwdot14dscqss9 * dscqss_dsc[330] +
    dwdot14dscqss11 * dscqss_dsc[400] + dwdot14dscqss12 * dscqss_dsc[435] +
    dwdot14dscqss14 * dscqss_dsc[505] + dwdot14dscqss13 * dscqss_dsc[470] +
    dwdot14dscqss15 * dscqss_dsc[540] + dwdot14dscqss8 * dscqss_dsc[295] +
    dwdot14dscqss10 * dscqss_dsc[365];
  J[590] =
    dwdot14dsc16 + dwdot14dscqss0 * dscqss_dsc[16] +
    dwdot14dscqss16 * dscqss_dsc[576] + dwdot14dscqss1 * dscqss_dsc[51] +
    dwdot14dscqss17 * dscqss_dsc[611] + dwdot14dscqss2 * dscqss_dsc[86] +
    dwdot14dscqss3 * dscqss_dsc[121] + dwdot14dscqss4 * dscqss_dsc[156] +
    dwdot14dscqss5 * dscqss_dsc[191] + dwdot14dscqss6 * dscqss_dsc[226] +
    dwdot14dscqss7 * dscqss_dsc[261] + dwdot14dscqss9 * dscqss_dsc[331] +
    dwdot14dscqss11 * dscqss_dsc[401] + dwdot14dscqss12 * dscqss_dsc[436] +
    dwdot14dscqss14 * dscqss_dsc[506] + dwdot14dscqss13 * dscqss_dsc[471] +
    dwdot14dscqss15 * dscqss_dsc[541] + dwdot14dscqss8 * dscqss_dsc[296] +
    dwdot14dscqss10 * dscqss_dsc[366];
  J[626] =
    dwdot14dsc17 + dwdot14dscqss0 * dscqss_dsc[17] +
    dwdot14dscqss16 * dscqss_dsc[577] + dwdot14dscqss1 * dscqss_dsc[52] +
    dwdot14dscqss17 * dscqss_dsc[612] + dwdot14dscqss2 * dscqss_dsc[87] +
    dwdot14dscqss3 * dscqss_dsc[122] + dwdot14dscqss4 * dscqss_dsc[157] +
    dwdot14dscqss5 * dscqss_dsc[192] + dwdot14dscqss6 * dscqss_dsc[227] +
    dwdot14dscqss7 * dscqss_dsc[262] + dwdot14dscqss9 * dscqss_dsc[332] +
    dwdot14dscqss11 * dscqss_dsc[402] + dwdot14dscqss12 * dscqss_dsc[437] +
    dwdot14dscqss14 * dscqss_dsc[507] + dwdot14dscqss13 * dscqss_dsc[472] +
    dwdot14dscqss15 * dscqss_dsc[542] + dwdot14dscqss8 * dscqss_dsc[297] +
    dwdot14dscqss10 * dscqss_dsc[367];
  J[662] =
    dwdot14dsc18 + dwdot14dscqss0 * dscqss_dsc[18] +
    dwdot14dscqss16 * dscqss_dsc[578] + dwdot14dscqss1 * dscqss_dsc[53] +
    dwdot14dscqss17 * dscqss_dsc[613] + dwdot14dscqss2 * dscqss_dsc[88] +
    dwdot14dscqss3 * dscqss_dsc[123] + dwdot14dscqss4 * dscqss_dsc[158] +
    dwdot14dscqss5 * dscqss_dsc[193] + dwdot14dscqss6 * dscqss_dsc[228] +
    dwdot14dscqss7 * dscqss_dsc[263] + dwdot14dscqss9 * dscqss_dsc[333] +
    dwdot14dscqss11 * dscqss_dsc[403] + dwdot14dscqss12 * dscqss_dsc[438] +
    dwdot14dscqss14 * dscqss_dsc[508] + dwdot14dscqss13 * dscqss_dsc[473] +
    dwdot14dscqss15 * dscqss_dsc[543] + dwdot14dscqss8 * dscqss_dsc[298] +
    dwdot14dscqss10 * dscqss_dsc[368];
  J[698] =
    dwdot14dsc19 + dwdot14dscqss0 * dscqss_dsc[19] +
    dwdot14dscqss16 * dscqss_dsc[579] + dwdot14dscqss1 * dscqss_dsc[54] +
    dwdot14dscqss17 * dscqss_dsc[614] + dwdot14dscqss2 * dscqss_dsc[89] +
    dwdot14dscqss3 * dscqss_dsc[124] + dwdot14dscqss4 * dscqss_dsc[159] +
    dwdot14dscqss5 * dscqss_dsc[194] + dwdot14dscqss6 * dscqss_dsc[229] +
    dwdot14dscqss7 * dscqss_dsc[264] + dwdot14dscqss9 * dscqss_dsc[334] +
    dwdot14dscqss11 * dscqss_dsc[404] + dwdot14dscqss12 * dscqss_dsc[439] +
    dwdot14dscqss14 * dscqss_dsc[509] + dwdot14dscqss13 * dscqss_dsc[474] +
    dwdot14dscqss15 * dscqss_dsc[544] + dwdot14dscqss8 * dscqss_dsc[299] +
    dwdot14dscqss10 * dscqss_dsc[369];
  J[734] =
    dwdot14dsc20 + dwdot14dscqss0 * dscqss_dsc[20] +
    dwdot14dscqss16 * dscqss_dsc[580] + dwdot14dscqss1 * dscqss_dsc[55] +
    dwdot14dscqss17 * dscqss_dsc[615] + dwdot14dscqss2 * dscqss_dsc[90] +
    dwdot14dscqss3 * dscqss_dsc[125] + dwdot14dscqss4 * dscqss_dsc[160] +
    dwdot14dscqss5 * dscqss_dsc[195] + dwdot14dscqss6 * dscqss_dsc[230] +
    dwdot14dscqss7 * dscqss_dsc[265] + dwdot14dscqss9 * dscqss_dsc[335] +
    dwdot14dscqss11 * dscqss_dsc[405] + dwdot14dscqss12 * dscqss_dsc[440] +
    dwdot14dscqss14 * dscqss_dsc[510] + dwdot14dscqss13 * dscqss_dsc[475] +
    dwdot14dscqss15 * dscqss_dsc[545] + dwdot14dscqss8 * dscqss_dsc[300] +
    dwdot14dscqss10 * dscqss_dsc[370];
  J[770] =
    dwdot14dsc21 + dwdot14dscqss0 * dscqss_dsc[21] +
    dwdot14dscqss16 * dscqss_dsc[581] + dwdot14dscqss1 * dscqss_dsc[56] +
    dwdot14dscqss17 * dscqss_dsc[616] + dwdot14dscqss2 * dscqss_dsc[91] +
    dwdot14dscqss3 * dscqss_dsc[126] + dwdot14dscqss4 * dscqss_dsc[161] +
    dwdot14dscqss5 * dscqss_dsc[196] + dwdot14dscqss6 * dscqss_dsc[231] +
    dwdot14dscqss7 * dscqss_dsc[266] + dwdot14dscqss9 * dscqss_dsc[336] +
    dwdot14dscqss11 * dscqss_dsc[406] + dwdot14dscqss12 * dscqss_dsc[441] +
    dwdot14dscqss14 * dscqss_dsc[511] + dwdot14dscqss13 * dscqss_dsc[476] +
    dwdot14dscqss15 * dscqss_dsc[546] + dwdot14dscqss8 * dscqss_dsc[301] +
    dwdot14dscqss10 * dscqss_dsc[371];
  J[806] =
    dwdot14dsc22 + dwdot14dscqss0 * dscqss_dsc[22] +
    dwdot14dscqss16 * dscqss_dsc[582] + dwdot14dscqss1 * dscqss_dsc[57] +
    dwdot14dscqss17 * dscqss_dsc[617] + dwdot14dscqss2 * dscqss_dsc[92] +
    dwdot14dscqss3 * dscqss_dsc[127] + dwdot14dscqss4 * dscqss_dsc[162] +
    dwdot14dscqss5 * dscqss_dsc[197] + dwdot14dscqss6 * dscqss_dsc[232] +
    dwdot14dscqss7 * dscqss_dsc[267] + dwdot14dscqss9 * dscqss_dsc[337] +
    dwdot14dscqss11 * dscqss_dsc[407] + dwdot14dscqss12 * dscqss_dsc[442] +
    dwdot14dscqss14 * dscqss_dsc[512] + dwdot14dscqss13 * dscqss_dsc[477] +
    dwdot14dscqss15 * dscqss_dsc[547] + dwdot14dscqss8 * dscqss_dsc[302] +
    dwdot14dscqss10 * dscqss_dsc[372];
  J[842] =
    dwdot14dsc23 + dwdot14dscqss0 * dscqss_dsc[23] +
    dwdot14dscqss16 * dscqss_dsc[583] + dwdot14dscqss1 * dscqss_dsc[58] +
    dwdot14dscqss17 * dscqss_dsc[618] + dwdot14dscqss2 * dscqss_dsc[93] +
    dwdot14dscqss3 * dscqss_dsc[128] + dwdot14dscqss4 * dscqss_dsc[163] +
    dwdot14dscqss5 * dscqss_dsc[198] + dwdot14dscqss6 * dscqss_dsc[233] +
    dwdot14dscqss7 * dscqss_dsc[268] + dwdot14dscqss9 * dscqss_dsc[338] +
    dwdot14dscqss11 * dscqss_dsc[408] + dwdot14dscqss12 * dscqss_dsc[443] +
    dwdot14dscqss14 * dscqss_dsc[513] + dwdot14dscqss13 * dscqss_dsc[478] +
    dwdot14dscqss15 * dscqss_dsc[548] + dwdot14dscqss8 * dscqss_dsc[303] +
    dwdot14dscqss10 * dscqss_dsc[373];
  J[878] =
    dwdot14dsc24 + dwdot14dscqss0 * dscqss_dsc[24] +
    dwdot14dscqss16 * dscqss_dsc[584] + dwdot14dscqss1 * dscqss_dsc[59] +
    dwdot14dscqss17 * dscqss_dsc[619] + dwdot14dscqss2 * dscqss_dsc[94] +
    dwdot14dscqss3 * dscqss_dsc[129] + dwdot14dscqss4 * dscqss_dsc[164] +
    dwdot14dscqss5 * dscqss_dsc[199] + dwdot14dscqss6 * dscqss_dsc[234] +
    dwdot14dscqss7 * dscqss_dsc[269] + dwdot14dscqss9 * dscqss_dsc[339] +
    dwdot14dscqss11 * dscqss_dsc[409] + dwdot14dscqss12 * dscqss_dsc[444] +
    dwdot14dscqss14 * dscqss_dsc[514] + dwdot14dscqss13 * dscqss_dsc[479] +
    dwdot14dscqss15 * dscqss_dsc[549] + dwdot14dscqss8 * dscqss_dsc[304] +
    dwdot14dscqss10 * dscqss_dsc[374];
  J[914] =
    dwdot14dsc25 + dwdot14dscqss0 * dscqss_dsc[25] +
    dwdot14dscqss16 * dscqss_dsc[585] + dwdot14dscqss1 * dscqss_dsc[60] +
    dwdot14dscqss17 * dscqss_dsc[620] + dwdot14dscqss2 * dscqss_dsc[95] +
    dwdot14dscqss3 * dscqss_dsc[130] + dwdot14dscqss4 * dscqss_dsc[165] +
    dwdot14dscqss5 * dscqss_dsc[200] + dwdot14dscqss6 * dscqss_dsc[235] +
    dwdot14dscqss7 * dscqss_dsc[270] + dwdot14dscqss9 * dscqss_dsc[340] +
    dwdot14dscqss11 * dscqss_dsc[410] + dwdot14dscqss12 * dscqss_dsc[445] +
    dwdot14dscqss14 * dscqss_dsc[515] + dwdot14dscqss13 * dscqss_dsc[480] +
    dwdot14dscqss15 * dscqss_dsc[550] + dwdot14dscqss8 * dscqss_dsc[305] +
    dwdot14dscqss10 * dscqss_dsc[375];
  J[950] =
    dwdot14dsc26 + dwdot14dscqss0 * dscqss_dsc[26] +
    dwdot14dscqss16 * dscqss_dsc[586] + dwdot14dscqss1 * dscqss_dsc[61] +
    dwdot14dscqss17 * dscqss_dsc[621] + dwdot14dscqss2 * dscqss_dsc[96] +
    dwdot14dscqss3 * dscqss_dsc[131] + dwdot14dscqss4 * dscqss_dsc[166] +
    dwdot14dscqss5 * dscqss_dsc[201] + dwdot14dscqss6 * dscqss_dsc[236] +
    dwdot14dscqss7 * dscqss_dsc[271] + dwdot14dscqss9 * dscqss_dsc[341] +
    dwdot14dscqss11 * dscqss_dsc[411] + dwdot14dscqss12 * dscqss_dsc[446] +
    dwdot14dscqss14 * dscqss_dsc[516] + dwdot14dscqss13 * dscqss_dsc[481] +
    dwdot14dscqss15 * dscqss_dsc[551] + dwdot14dscqss8 * dscqss_dsc[306] +
    dwdot14dscqss10 * dscqss_dsc[376];
  J[986] =
    dwdot14dsc27 + dwdot14dscqss0 * dscqss_dsc[27] +
    dwdot14dscqss16 * dscqss_dsc[587] + dwdot14dscqss1 * dscqss_dsc[62] +
    dwdot14dscqss17 * dscqss_dsc[622] + dwdot14dscqss2 * dscqss_dsc[97] +
    dwdot14dscqss3 * dscqss_dsc[132] + dwdot14dscqss4 * dscqss_dsc[167] +
    dwdot14dscqss5 * dscqss_dsc[202] + dwdot14dscqss6 * dscqss_dsc[237] +
    dwdot14dscqss7 * dscqss_dsc[272] + dwdot14dscqss9 * dscqss_dsc[342] +
    dwdot14dscqss11 * dscqss_dsc[412] + dwdot14dscqss12 * dscqss_dsc[447] +
    dwdot14dscqss14 * dscqss_dsc[517] + dwdot14dscqss13 * dscqss_dsc[482] +
    dwdot14dscqss15 * dscqss_dsc[552] + dwdot14dscqss8 * dscqss_dsc[307] +
    dwdot14dscqss10 * dscqss_dsc[377];
  J[1022] =
    dwdot14dsc28 + dwdot14dscqss0 * dscqss_dsc[28] +
    dwdot14dscqss16 * dscqss_dsc[588] + dwdot14dscqss1 * dscqss_dsc[63] +
    dwdot14dscqss17 * dscqss_dsc[623] + dwdot14dscqss2 * dscqss_dsc[98] +
    dwdot14dscqss3 * dscqss_dsc[133] + dwdot14dscqss4 * dscqss_dsc[168] +
    dwdot14dscqss5 * dscqss_dsc[203] + dwdot14dscqss6 * dscqss_dsc[238] +
    dwdot14dscqss7 * dscqss_dsc[273] + dwdot14dscqss9 * dscqss_dsc[343] +
    dwdot14dscqss11 * dscqss_dsc[413] + dwdot14dscqss12 * dscqss_dsc[448] +
    dwdot14dscqss14 * dscqss_dsc[518] + dwdot14dscqss13 * dscqss_dsc[483] +
    dwdot14dscqss15 * dscqss_dsc[553] + dwdot14dscqss8 * dscqss_dsc[308] +
    dwdot14dscqss10 * dscqss_dsc[378];
  J[1058] =
    dwdot14dsc29 + dwdot14dscqss0 * dscqss_dsc[29] +
    dwdot14dscqss16 * dscqss_dsc[589] + dwdot14dscqss1 * dscqss_dsc[64] +
    dwdot14dscqss17 * dscqss_dsc[624] + dwdot14dscqss2 * dscqss_dsc[99] +
    dwdot14dscqss3 * dscqss_dsc[134] + dwdot14dscqss4 * dscqss_dsc[169] +
    dwdot14dscqss5 * dscqss_dsc[204] + dwdot14dscqss6 * dscqss_dsc[239] +
    dwdot14dscqss7 * dscqss_dsc[274] + dwdot14dscqss9 * dscqss_dsc[344] +
    dwdot14dscqss11 * dscqss_dsc[414] + dwdot14dscqss12 * dscqss_dsc[449] +
    dwdot14dscqss14 * dscqss_dsc[519] + dwdot14dscqss13 * dscqss_dsc[484] +
    dwdot14dscqss15 * dscqss_dsc[554] + dwdot14dscqss8 * dscqss_dsc[309] +
    dwdot14dscqss10 * dscqss_dsc[379];
  J[1094] =
    dwdot14dsc30 + dwdot14dscqss0 * dscqss_dsc[30] +
    dwdot14dscqss16 * dscqss_dsc[590] + dwdot14dscqss1 * dscqss_dsc[65] +
    dwdot14dscqss17 * dscqss_dsc[625] + dwdot14dscqss2 * dscqss_dsc[100] +
    dwdot14dscqss3 * dscqss_dsc[135] + dwdot14dscqss4 * dscqss_dsc[170] +
    dwdot14dscqss5 * dscqss_dsc[205] + dwdot14dscqss6 * dscqss_dsc[240] +
    dwdot14dscqss7 * dscqss_dsc[275] + dwdot14dscqss9 * dscqss_dsc[345] +
    dwdot14dscqss11 * dscqss_dsc[415] + dwdot14dscqss12 * dscqss_dsc[450] +
    dwdot14dscqss14 * dscqss_dsc[520] + dwdot14dscqss13 * dscqss_dsc[485] +
    dwdot14dscqss15 * dscqss_dsc[555] + dwdot14dscqss8 * dscqss_dsc[310] +
    dwdot14dscqss10 * dscqss_dsc[380];
  J[1130] =
    dwdot14dsc31 + dwdot14dscqss0 * dscqss_dsc[31] +
    dwdot14dscqss16 * dscqss_dsc[591] + dwdot14dscqss1 * dscqss_dsc[66] +
    dwdot14dscqss17 * dscqss_dsc[626] + dwdot14dscqss2 * dscqss_dsc[101] +
    dwdot14dscqss3 * dscqss_dsc[136] + dwdot14dscqss4 * dscqss_dsc[171] +
    dwdot14dscqss5 * dscqss_dsc[206] + dwdot14dscqss6 * dscqss_dsc[241] +
    dwdot14dscqss7 * dscqss_dsc[276] + dwdot14dscqss9 * dscqss_dsc[346] +
    dwdot14dscqss11 * dscqss_dsc[416] + dwdot14dscqss12 * dscqss_dsc[451] +
    dwdot14dscqss14 * dscqss_dsc[521] + dwdot14dscqss13 * dscqss_dsc[486] +
    dwdot14dscqss15 * dscqss_dsc[556] + dwdot14dscqss8 * dscqss_dsc[311] +
    dwdot14dscqss10 * dscqss_dsc[381];
  J[1166] =
    dwdot14dsc32 + dwdot14dscqss0 * dscqss_dsc[32] +
    dwdot14dscqss16 * dscqss_dsc[592] + dwdot14dscqss1 * dscqss_dsc[67] +
    dwdot14dscqss17 * dscqss_dsc[627] + dwdot14dscqss2 * dscqss_dsc[102] +
    dwdot14dscqss3 * dscqss_dsc[137] + dwdot14dscqss4 * dscqss_dsc[172] +
    dwdot14dscqss5 * dscqss_dsc[207] + dwdot14dscqss6 * dscqss_dsc[242] +
    dwdot14dscqss7 * dscqss_dsc[277] + dwdot14dscqss9 * dscqss_dsc[347] +
    dwdot14dscqss11 * dscqss_dsc[417] + dwdot14dscqss12 * dscqss_dsc[452] +
    dwdot14dscqss14 * dscqss_dsc[522] + dwdot14dscqss13 * dscqss_dsc[487] +
    dwdot14dscqss15 * dscqss_dsc[557] + dwdot14dscqss8 * dscqss_dsc[312] +
    dwdot14dscqss10 * dscqss_dsc[382];
  J[1202] =
    dwdot14dsc33 + dwdot14dscqss0 * dscqss_dsc[33] +
    dwdot14dscqss16 * dscqss_dsc[593] + dwdot14dscqss1 * dscqss_dsc[68] +
    dwdot14dscqss17 * dscqss_dsc[628] + dwdot14dscqss2 * dscqss_dsc[103] +
    dwdot14dscqss3 * dscqss_dsc[138] + dwdot14dscqss4 * dscqss_dsc[173] +
    dwdot14dscqss5 * dscqss_dsc[208] + dwdot14dscqss6 * dscqss_dsc[243] +
    dwdot14dscqss7 * dscqss_dsc[278] + dwdot14dscqss9 * dscqss_dsc[348] +
    dwdot14dscqss11 * dscqss_dsc[418] + dwdot14dscqss12 * dscqss_dsc[453] +
    dwdot14dscqss14 * dscqss_dsc[523] + dwdot14dscqss13 * dscqss_dsc[488] +
    dwdot14dscqss15 * dscqss_dsc[558] + dwdot14dscqss8 * dscqss_dsc[313] +
    dwdot14dscqss10 * dscqss_dsc[383];
  J[1238] =
    dwdot14dsc34 + dwdot14dscqss0 * dscqss_dsc[34] +
    dwdot14dscqss16 * dscqss_dsc[594] + dwdot14dscqss1 * dscqss_dsc[69] +
    dwdot14dscqss17 * dscqss_dsc[629] + dwdot14dscqss2 * dscqss_dsc[104] +
    dwdot14dscqss3 * dscqss_dsc[139] + dwdot14dscqss4 * dscqss_dsc[174] +
    dwdot14dscqss5 * dscqss_dsc[209] + dwdot14dscqss6 * dscqss_dsc[244] +
    dwdot14dscqss7 * dscqss_dsc[279] + dwdot14dscqss9 * dscqss_dsc[349] +
    dwdot14dscqss11 * dscqss_dsc[419] + dwdot14dscqss12 * dscqss_dsc[454] +
    dwdot14dscqss14 * dscqss_dsc[524] + dwdot14dscqss13 * dscqss_dsc[489] +
    dwdot14dscqss15 * dscqss_dsc[559] + dwdot14dscqss8 * dscqss_dsc[314] +
    dwdot14dscqss10 * dscqss_dsc[384];
  J[15] =
    dwdot15dsc0 + dwdot15dscqss0 * dscqss_dsc[0] +
    dwdot15dscqss16 * dscqss_dsc[560] + dwdot15dscqss1 * dscqss_dsc[35] +
    dwdot15dscqss17 * dscqss_dsc[595] + dwdot15dscqss2 * dscqss_dsc[70] +
    dwdot15dscqss3 * dscqss_dsc[105] + dwdot15dscqss4 * dscqss_dsc[140] +
    dwdot15dscqss5 * dscqss_dsc[175] + dwdot15dscqss6 * dscqss_dsc[210] +
    dwdot15dscqss7 * dscqss_dsc[245] + dwdot15dscqss9 * dscqss_dsc[315] +
    dwdot15dscqss11 * dscqss_dsc[385] + dwdot15dscqss12 * dscqss_dsc[420] +
    dwdot15dscqss14 * dscqss_dsc[490] + dwdot15dscqss13 * dscqss_dsc[455] +
    dwdot15dscqss15 * dscqss_dsc[525] + dwdot15dscqss8 * dscqss_dsc[280] +
    dwdot15dscqss10 * dscqss_dsc[350];
  J[51] =
    dwdot15dsc1 + dwdot15dscqss0 * dscqss_dsc[1] +
    dwdot15dscqss16 * dscqss_dsc[561] + dwdot15dscqss1 * dscqss_dsc[36] +
    dwdot15dscqss17 * dscqss_dsc[596] + dwdot15dscqss2 * dscqss_dsc[71] +
    dwdot15dscqss3 * dscqss_dsc[106] + dwdot15dscqss4 * dscqss_dsc[141] +
    dwdot15dscqss5 * dscqss_dsc[176] + dwdot15dscqss6 * dscqss_dsc[211] +
    dwdot15dscqss7 * dscqss_dsc[246] + dwdot15dscqss9 * dscqss_dsc[316] +
    dwdot15dscqss11 * dscqss_dsc[386] + dwdot15dscqss12 * dscqss_dsc[421] +
    dwdot15dscqss14 * dscqss_dsc[491] + dwdot15dscqss13 * dscqss_dsc[456] +
    dwdot15dscqss15 * dscqss_dsc[526] + dwdot15dscqss8 * dscqss_dsc[281] +
    dwdot15dscqss10 * dscqss_dsc[351];
  J[87] =
    dwdot15dsc2 + dwdot15dscqss0 * dscqss_dsc[2] +
    dwdot15dscqss16 * dscqss_dsc[562] + dwdot15dscqss1 * dscqss_dsc[37] +
    dwdot15dscqss17 * dscqss_dsc[597] + dwdot15dscqss2 * dscqss_dsc[72] +
    dwdot15dscqss3 * dscqss_dsc[107] + dwdot15dscqss4 * dscqss_dsc[142] +
    dwdot15dscqss5 * dscqss_dsc[177] + dwdot15dscqss6 * dscqss_dsc[212] +
    dwdot15dscqss7 * dscqss_dsc[247] + dwdot15dscqss9 * dscqss_dsc[317] +
    dwdot15dscqss11 * dscqss_dsc[387] + dwdot15dscqss12 * dscqss_dsc[422] +
    dwdot15dscqss14 * dscqss_dsc[492] + dwdot15dscqss13 * dscqss_dsc[457] +
    dwdot15dscqss15 * dscqss_dsc[527] + dwdot15dscqss8 * dscqss_dsc[282] +
    dwdot15dscqss10 * dscqss_dsc[352];
  J[123] =
    dwdot15dsc3 + dwdot15dscqss0 * dscqss_dsc[3] +
    dwdot15dscqss16 * dscqss_dsc[563] + dwdot15dscqss1 * dscqss_dsc[38] +
    dwdot15dscqss17 * dscqss_dsc[598] + dwdot15dscqss2 * dscqss_dsc[73] +
    dwdot15dscqss3 * dscqss_dsc[108] + dwdot15dscqss4 * dscqss_dsc[143] +
    dwdot15dscqss5 * dscqss_dsc[178] + dwdot15dscqss6 * dscqss_dsc[213] +
    dwdot15dscqss7 * dscqss_dsc[248] + dwdot15dscqss9 * dscqss_dsc[318] +
    dwdot15dscqss11 * dscqss_dsc[388] + dwdot15dscqss12 * dscqss_dsc[423] +
    dwdot15dscqss14 * dscqss_dsc[493] + dwdot15dscqss13 * dscqss_dsc[458] +
    dwdot15dscqss15 * dscqss_dsc[528] + dwdot15dscqss8 * dscqss_dsc[283] +
    dwdot15dscqss10 * dscqss_dsc[353];
  J[159] =
    dwdot15dsc4 + dwdot15dscqss0 * dscqss_dsc[4] +
    dwdot15dscqss16 * dscqss_dsc[564] + dwdot15dscqss1 * dscqss_dsc[39] +
    dwdot15dscqss17 * dscqss_dsc[599] + dwdot15dscqss2 * dscqss_dsc[74] +
    dwdot15dscqss3 * dscqss_dsc[109] + dwdot15dscqss4 * dscqss_dsc[144] +
    dwdot15dscqss5 * dscqss_dsc[179] + dwdot15dscqss6 * dscqss_dsc[214] +
    dwdot15dscqss7 * dscqss_dsc[249] + dwdot15dscqss9 * dscqss_dsc[319] +
    dwdot15dscqss11 * dscqss_dsc[389] + dwdot15dscqss12 * dscqss_dsc[424] +
    dwdot15dscqss14 * dscqss_dsc[494] + dwdot15dscqss13 * dscqss_dsc[459] +
    dwdot15dscqss15 * dscqss_dsc[529] + dwdot15dscqss8 * dscqss_dsc[284] +
    dwdot15dscqss10 * dscqss_dsc[354];
  J[195] =
    dwdot15dsc5 + dwdot15dscqss0 * dscqss_dsc[5] +
    dwdot15dscqss16 * dscqss_dsc[565] + dwdot15dscqss1 * dscqss_dsc[40] +
    dwdot15dscqss17 * dscqss_dsc[600] + dwdot15dscqss2 * dscqss_dsc[75] +
    dwdot15dscqss3 * dscqss_dsc[110] + dwdot15dscqss4 * dscqss_dsc[145] +
    dwdot15dscqss5 * dscqss_dsc[180] + dwdot15dscqss6 * dscqss_dsc[215] +
    dwdot15dscqss7 * dscqss_dsc[250] + dwdot15dscqss9 * dscqss_dsc[320] +
    dwdot15dscqss11 * dscqss_dsc[390] + dwdot15dscqss12 * dscqss_dsc[425] +
    dwdot15dscqss14 * dscqss_dsc[495] + dwdot15dscqss13 * dscqss_dsc[460] +
    dwdot15dscqss15 * dscqss_dsc[530] + dwdot15dscqss8 * dscqss_dsc[285] +
    dwdot15dscqss10 * dscqss_dsc[355];
  J[231] =
    dwdot15dsc6 + dwdot15dscqss0 * dscqss_dsc[6] +
    dwdot15dscqss16 * dscqss_dsc[566] + dwdot15dscqss1 * dscqss_dsc[41] +
    dwdot15dscqss17 * dscqss_dsc[601] + dwdot15dscqss2 * dscqss_dsc[76] +
    dwdot15dscqss3 * dscqss_dsc[111] + dwdot15dscqss4 * dscqss_dsc[146] +
    dwdot15dscqss5 * dscqss_dsc[181] + dwdot15dscqss6 * dscqss_dsc[216] +
    dwdot15dscqss7 * dscqss_dsc[251] + dwdot15dscqss9 * dscqss_dsc[321] +
    dwdot15dscqss11 * dscqss_dsc[391] + dwdot15dscqss12 * dscqss_dsc[426] +
    dwdot15dscqss14 * dscqss_dsc[496] + dwdot15dscqss13 * dscqss_dsc[461] +
    dwdot15dscqss15 * dscqss_dsc[531] + dwdot15dscqss8 * dscqss_dsc[286] +
    dwdot15dscqss10 * dscqss_dsc[356];
  J[267] =
    dwdot15dsc7 + dwdot15dscqss0 * dscqss_dsc[7] +
    dwdot15dscqss16 * dscqss_dsc[567] + dwdot15dscqss1 * dscqss_dsc[42] +
    dwdot15dscqss17 * dscqss_dsc[602] + dwdot15dscqss2 * dscqss_dsc[77] +
    dwdot15dscqss3 * dscqss_dsc[112] + dwdot15dscqss4 * dscqss_dsc[147] +
    dwdot15dscqss5 * dscqss_dsc[182] + dwdot15dscqss6 * dscqss_dsc[217] +
    dwdot15dscqss7 * dscqss_dsc[252] + dwdot15dscqss9 * dscqss_dsc[322] +
    dwdot15dscqss11 * dscqss_dsc[392] + dwdot15dscqss12 * dscqss_dsc[427] +
    dwdot15dscqss14 * dscqss_dsc[497] + dwdot15dscqss13 * dscqss_dsc[462] +
    dwdot15dscqss15 * dscqss_dsc[532] + dwdot15dscqss8 * dscqss_dsc[287] +
    dwdot15dscqss10 * dscqss_dsc[357];
  J[303] =
    dwdot15dsc8 + dwdot15dscqss0 * dscqss_dsc[8] +
    dwdot15dscqss16 * dscqss_dsc[568] + dwdot15dscqss1 * dscqss_dsc[43] +
    dwdot15dscqss17 * dscqss_dsc[603] + dwdot15dscqss2 * dscqss_dsc[78] +
    dwdot15dscqss3 * dscqss_dsc[113] + dwdot15dscqss4 * dscqss_dsc[148] +
    dwdot15dscqss5 * dscqss_dsc[183] + dwdot15dscqss6 * dscqss_dsc[218] +
    dwdot15dscqss7 * dscqss_dsc[253] + dwdot15dscqss9 * dscqss_dsc[323] +
    dwdot15dscqss11 * dscqss_dsc[393] + dwdot15dscqss12 * dscqss_dsc[428] +
    dwdot15dscqss14 * dscqss_dsc[498] + dwdot15dscqss13 * dscqss_dsc[463] +
    dwdot15dscqss15 * dscqss_dsc[533] + dwdot15dscqss8 * dscqss_dsc[288] +
    dwdot15dscqss10 * dscqss_dsc[358];
  J[339] =
    dwdot15dsc9 + dwdot15dscqss0 * dscqss_dsc[9] +
    dwdot15dscqss16 * dscqss_dsc[569] + dwdot15dscqss1 * dscqss_dsc[44] +
    dwdot15dscqss17 * dscqss_dsc[604] + dwdot15dscqss2 * dscqss_dsc[79] +
    dwdot15dscqss3 * dscqss_dsc[114] + dwdot15dscqss4 * dscqss_dsc[149] +
    dwdot15dscqss5 * dscqss_dsc[184] + dwdot15dscqss6 * dscqss_dsc[219] +
    dwdot15dscqss7 * dscqss_dsc[254] + dwdot15dscqss9 * dscqss_dsc[324] +
    dwdot15dscqss11 * dscqss_dsc[394] + dwdot15dscqss12 * dscqss_dsc[429] +
    dwdot15dscqss14 * dscqss_dsc[499] + dwdot15dscqss13 * dscqss_dsc[464] +
    dwdot15dscqss15 * dscqss_dsc[534] + dwdot15dscqss8 * dscqss_dsc[289] +
    dwdot15dscqss10 * dscqss_dsc[359];
  J[375] =
    dwdot15dsc10 + dwdot15dscqss0 * dscqss_dsc[10] +
    dwdot15dscqss16 * dscqss_dsc[570] + dwdot15dscqss1 * dscqss_dsc[45] +
    dwdot15dscqss17 * dscqss_dsc[605] + dwdot15dscqss2 * dscqss_dsc[80] +
    dwdot15dscqss3 * dscqss_dsc[115] + dwdot15dscqss4 * dscqss_dsc[150] +
    dwdot15dscqss5 * dscqss_dsc[185] + dwdot15dscqss6 * dscqss_dsc[220] +
    dwdot15dscqss7 * dscqss_dsc[255] + dwdot15dscqss9 * dscqss_dsc[325] +
    dwdot15dscqss11 * dscqss_dsc[395] + dwdot15dscqss12 * dscqss_dsc[430] +
    dwdot15dscqss14 * dscqss_dsc[500] + dwdot15dscqss13 * dscqss_dsc[465] +
    dwdot15dscqss15 * dscqss_dsc[535] + dwdot15dscqss8 * dscqss_dsc[290] +
    dwdot15dscqss10 * dscqss_dsc[360];
  J[411] =
    dwdot15dsc11 + dwdot15dscqss0 * dscqss_dsc[11] +
    dwdot15dscqss16 * dscqss_dsc[571] + dwdot15dscqss1 * dscqss_dsc[46] +
    dwdot15dscqss17 * dscqss_dsc[606] + dwdot15dscqss2 * dscqss_dsc[81] +
    dwdot15dscqss3 * dscqss_dsc[116] + dwdot15dscqss4 * dscqss_dsc[151] +
    dwdot15dscqss5 * dscqss_dsc[186] + dwdot15dscqss6 * dscqss_dsc[221] +
    dwdot15dscqss7 * dscqss_dsc[256] + dwdot15dscqss9 * dscqss_dsc[326] +
    dwdot15dscqss11 * dscqss_dsc[396] + dwdot15dscqss12 * dscqss_dsc[431] +
    dwdot15dscqss14 * dscqss_dsc[501] + dwdot15dscqss13 * dscqss_dsc[466] +
    dwdot15dscqss15 * dscqss_dsc[536] + dwdot15dscqss8 * dscqss_dsc[291] +
    dwdot15dscqss10 * dscqss_dsc[361];
  J[447] =
    dwdot15dsc12 + dwdot15dscqss0 * dscqss_dsc[12] +
    dwdot15dscqss16 * dscqss_dsc[572] + dwdot15dscqss1 * dscqss_dsc[47] +
    dwdot15dscqss17 * dscqss_dsc[607] + dwdot15dscqss2 * dscqss_dsc[82] +
    dwdot15dscqss3 * dscqss_dsc[117] + dwdot15dscqss4 * dscqss_dsc[152] +
    dwdot15dscqss5 * dscqss_dsc[187] + dwdot15dscqss6 * dscqss_dsc[222] +
    dwdot15dscqss7 * dscqss_dsc[257] + dwdot15dscqss9 * dscqss_dsc[327] +
    dwdot15dscqss11 * dscqss_dsc[397] + dwdot15dscqss12 * dscqss_dsc[432] +
    dwdot15dscqss14 * dscqss_dsc[502] + dwdot15dscqss13 * dscqss_dsc[467] +
    dwdot15dscqss15 * dscqss_dsc[537] + dwdot15dscqss8 * dscqss_dsc[292] +
    dwdot15dscqss10 * dscqss_dsc[362];
  J[483] =
    dwdot15dsc13 + dwdot15dscqss0 * dscqss_dsc[13] +
    dwdot15dscqss16 * dscqss_dsc[573] + dwdot15dscqss1 * dscqss_dsc[48] +
    dwdot15dscqss17 * dscqss_dsc[608] + dwdot15dscqss2 * dscqss_dsc[83] +
    dwdot15dscqss3 * dscqss_dsc[118] + dwdot15dscqss4 * dscqss_dsc[153] +
    dwdot15dscqss5 * dscqss_dsc[188] + dwdot15dscqss6 * dscqss_dsc[223] +
    dwdot15dscqss7 * dscqss_dsc[258] + dwdot15dscqss9 * dscqss_dsc[328] +
    dwdot15dscqss11 * dscqss_dsc[398] + dwdot15dscqss12 * dscqss_dsc[433] +
    dwdot15dscqss14 * dscqss_dsc[503] + dwdot15dscqss13 * dscqss_dsc[468] +
    dwdot15dscqss15 * dscqss_dsc[538] + dwdot15dscqss8 * dscqss_dsc[293] +
    dwdot15dscqss10 * dscqss_dsc[363];
  J[519] =
    dwdot15dsc14 + dwdot15dscqss0 * dscqss_dsc[14] +
    dwdot15dscqss16 * dscqss_dsc[574] + dwdot15dscqss1 * dscqss_dsc[49] +
    dwdot15dscqss17 * dscqss_dsc[609] + dwdot15dscqss2 * dscqss_dsc[84] +
    dwdot15dscqss3 * dscqss_dsc[119] + dwdot15dscqss4 * dscqss_dsc[154] +
    dwdot15dscqss5 * dscqss_dsc[189] + dwdot15dscqss6 * dscqss_dsc[224] +
    dwdot15dscqss7 * dscqss_dsc[259] + dwdot15dscqss9 * dscqss_dsc[329] +
    dwdot15dscqss11 * dscqss_dsc[399] + dwdot15dscqss12 * dscqss_dsc[434] +
    dwdot15dscqss14 * dscqss_dsc[504] + dwdot15dscqss13 * dscqss_dsc[469] +
    dwdot15dscqss15 * dscqss_dsc[539] + dwdot15dscqss8 * dscqss_dsc[294] +
    dwdot15dscqss10 * dscqss_dsc[364];
  J[555] =
    dwdot15dsc15 + dwdot15dscqss0 * dscqss_dsc[15] +
    dwdot15dscqss16 * dscqss_dsc[575] + dwdot15dscqss1 * dscqss_dsc[50] +
    dwdot15dscqss17 * dscqss_dsc[610] + dwdot15dscqss2 * dscqss_dsc[85] +
    dwdot15dscqss3 * dscqss_dsc[120] + dwdot15dscqss4 * dscqss_dsc[155] +
    dwdot15dscqss5 * dscqss_dsc[190] + dwdot15dscqss6 * dscqss_dsc[225] +
    dwdot15dscqss7 * dscqss_dsc[260] + dwdot15dscqss9 * dscqss_dsc[330] +
    dwdot15dscqss11 * dscqss_dsc[400] + dwdot15dscqss12 * dscqss_dsc[435] +
    dwdot15dscqss14 * dscqss_dsc[505] + dwdot15dscqss13 * dscqss_dsc[470] +
    dwdot15dscqss15 * dscqss_dsc[540] + dwdot15dscqss8 * dscqss_dsc[295] +
    dwdot15dscqss10 * dscqss_dsc[365];
  J[591] =
    dwdot15dsc16 + dwdot15dscqss0 * dscqss_dsc[16] +
    dwdot15dscqss16 * dscqss_dsc[576] + dwdot15dscqss1 * dscqss_dsc[51] +
    dwdot15dscqss17 * dscqss_dsc[611] + dwdot15dscqss2 * dscqss_dsc[86] +
    dwdot15dscqss3 * dscqss_dsc[121] + dwdot15dscqss4 * dscqss_dsc[156] +
    dwdot15dscqss5 * dscqss_dsc[191] + dwdot15dscqss6 * dscqss_dsc[226] +
    dwdot15dscqss7 * dscqss_dsc[261] + dwdot15dscqss9 * dscqss_dsc[331] +
    dwdot15dscqss11 * dscqss_dsc[401] + dwdot15dscqss12 * dscqss_dsc[436] +
    dwdot15dscqss14 * dscqss_dsc[506] + dwdot15dscqss13 * dscqss_dsc[471] +
    dwdot15dscqss15 * dscqss_dsc[541] + dwdot15dscqss8 * dscqss_dsc[296] +
    dwdot15dscqss10 * dscqss_dsc[366];
  J[627] =
    dwdot15dsc17 + dwdot15dscqss0 * dscqss_dsc[17] +
    dwdot15dscqss16 * dscqss_dsc[577] + dwdot15dscqss1 * dscqss_dsc[52] +
    dwdot15dscqss17 * dscqss_dsc[612] + dwdot15dscqss2 * dscqss_dsc[87] +
    dwdot15dscqss3 * dscqss_dsc[122] + dwdot15dscqss4 * dscqss_dsc[157] +
    dwdot15dscqss5 * dscqss_dsc[192] + dwdot15dscqss6 * dscqss_dsc[227] +
    dwdot15dscqss7 * dscqss_dsc[262] + dwdot15dscqss9 * dscqss_dsc[332] +
    dwdot15dscqss11 * dscqss_dsc[402] + dwdot15dscqss12 * dscqss_dsc[437] +
    dwdot15dscqss14 * dscqss_dsc[507] + dwdot15dscqss13 * dscqss_dsc[472] +
    dwdot15dscqss15 * dscqss_dsc[542] + dwdot15dscqss8 * dscqss_dsc[297] +
    dwdot15dscqss10 * dscqss_dsc[367];
  J[663] =
    dwdot15dsc18 + dwdot15dscqss0 * dscqss_dsc[18] +
    dwdot15dscqss16 * dscqss_dsc[578] + dwdot15dscqss1 * dscqss_dsc[53] +
    dwdot15dscqss17 * dscqss_dsc[613] + dwdot15dscqss2 * dscqss_dsc[88] +
    dwdot15dscqss3 * dscqss_dsc[123] + dwdot15dscqss4 * dscqss_dsc[158] +
    dwdot15dscqss5 * dscqss_dsc[193] + dwdot15dscqss6 * dscqss_dsc[228] +
    dwdot15dscqss7 * dscqss_dsc[263] + dwdot15dscqss9 * dscqss_dsc[333] +
    dwdot15dscqss11 * dscqss_dsc[403] + dwdot15dscqss12 * dscqss_dsc[438] +
    dwdot15dscqss14 * dscqss_dsc[508] + dwdot15dscqss13 * dscqss_dsc[473] +
    dwdot15dscqss15 * dscqss_dsc[543] + dwdot15dscqss8 * dscqss_dsc[298] +
    dwdot15dscqss10 * dscqss_dsc[368];
  J[699] =
    dwdot15dsc19 + dwdot15dscqss0 * dscqss_dsc[19] +
    dwdot15dscqss16 * dscqss_dsc[579] + dwdot15dscqss1 * dscqss_dsc[54] +
    dwdot15dscqss17 * dscqss_dsc[614] + dwdot15dscqss2 * dscqss_dsc[89] +
    dwdot15dscqss3 * dscqss_dsc[124] + dwdot15dscqss4 * dscqss_dsc[159] +
    dwdot15dscqss5 * dscqss_dsc[194] + dwdot15dscqss6 * dscqss_dsc[229] +
    dwdot15dscqss7 * dscqss_dsc[264] + dwdot15dscqss9 * dscqss_dsc[334] +
    dwdot15dscqss11 * dscqss_dsc[404] + dwdot15dscqss12 * dscqss_dsc[439] +
    dwdot15dscqss14 * dscqss_dsc[509] + dwdot15dscqss13 * dscqss_dsc[474] +
    dwdot15dscqss15 * dscqss_dsc[544] + dwdot15dscqss8 * dscqss_dsc[299] +
    dwdot15dscqss10 * dscqss_dsc[369];
  J[735] =
    dwdot15dsc20 + dwdot15dscqss0 * dscqss_dsc[20] +
    dwdot15dscqss16 * dscqss_dsc[580] + dwdot15dscqss1 * dscqss_dsc[55] +
    dwdot15dscqss17 * dscqss_dsc[615] + dwdot15dscqss2 * dscqss_dsc[90] +
    dwdot15dscqss3 * dscqss_dsc[125] + dwdot15dscqss4 * dscqss_dsc[160] +
    dwdot15dscqss5 * dscqss_dsc[195] + dwdot15dscqss6 * dscqss_dsc[230] +
    dwdot15dscqss7 * dscqss_dsc[265] + dwdot15dscqss9 * dscqss_dsc[335] +
    dwdot15dscqss11 * dscqss_dsc[405] + dwdot15dscqss12 * dscqss_dsc[440] +
    dwdot15dscqss14 * dscqss_dsc[510] + dwdot15dscqss13 * dscqss_dsc[475] +
    dwdot15dscqss15 * dscqss_dsc[545] + dwdot15dscqss8 * dscqss_dsc[300] +
    dwdot15dscqss10 * dscqss_dsc[370];
  J[771] =
    dwdot15dsc21 + dwdot15dscqss0 * dscqss_dsc[21] +
    dwdot15dscqss16 * dscqss_dsc[581] + dwdot15dscqss1 * dscqss_dsc[56] +
    dwdot15dscqss17 * dscqss_dsc[616] + dwdot15dscqss2 * dscqss_dsc[91] +
    dwdot15dscqss3 * dscqss_dsc[126] + dwdot15dscqss4 * dscqss_dsc[161] +
    dwdot15dscqss5 * dscqss_dsc[196] + dwdot15dscqss6 * dscqss_dsc[231] +
    dwdot15dscqss7 * dscqss_dsc[266] + dwdot15dscqss9 * dscqss_dsc[336] +
    dwdot15dscqss11 * dscqss_dsc[406] + dwdot15dscqss12 * dscqss_dsc[441] +
    dwdot15dscqss14 * dscqss_dsc[511] + dwdot15dscqss13 * dscqss_dsc[476] +
    dwdot15dscqss15 * dscqss_dsc[546] + dwdot15dscqss8 * dscqss_dsc[301] +
    dwdot15dscqss10 * dscqss_dsc[371];
  J[807] =
    dwdot15dsc22 + dwdot15dscqss0 * dscqss_dsc[22] +
    dwdot15dscqss16 * dscqss_dsc[582] + dwdot15dscqss1 * dscqss_dsc[57] +
    dwdot15dscqss17 * dscqss_dsc[617] + dwdot15dscqss2 * dscqss_dsc[92] +
    dwdot15dscqss3 * dscqss_dsc[127] + dwdot15dscqss4 * dscqss_dsc[162] +
    dwdot15dscqss5 * dscqss_dsc[197] + dwdot15dscqss6 * dscqss_dsc[232] +
    dwdot15dscqss7 * dscqss_dsc[267] + dwdot15dscqss9 * dscqss_dsc[337] +
    dwdot15dscqss11 * dscqss_dsc[407] + dwdot15dscqss12 * dscqss_dsc[442] +
    dwdot15dscqss14 * dscqss_dsc[512] + dwdot15dscqss13 * dscqss_dsc[477] +
    dwdot15dscqss15 * dscqss_dsc[547] + dwdot15dscqss8 * dscqss_dsc[302] +
    dwdot15dscqss10 * dscqss_dsc[372];
  J[843] =
    dwdot15dsc23 + dwdot15dscqss0 * dscqss_dsc[23] +
    dwdot15dscqss16 * dscqss_dsc[583] + dwdot15dscqss1 * dscqss_dsc[58] +
    dwdot15dscqss17 * dscqss_dsc[618] + dwdot15dscqss2 * dscqss_dsc[93] +
    dwdot15dscqss3 * dscqss_dsc[128] + dwdot15dscqss4 * dscqss_dsc[163] +
    dwdot15dscqss5 * dscqss_dsc[198] + dwdot15dscqss6 * dscqss_dsc[233] +
    dwdot15dscqss7 * dscqss_dsc[268] + dwdot15dscqss9 * dscqss_dsc[338] +
    dwdot15dscqss11 * dscqss_dsc[408] + dwdot15dscqss12 * dscqss_dsc[443] +
    dwdot15dscqss14 * dscqss_dsc[513] + dwdot15dscqss13 * dscqss_dsc[478] +
    dwdot15dscqss15 * dscqss_dsc[548] + dwdot15dscqss8 * dscqss_dsc[303] +
    dwdot15dscqss10 * dscqss_dsc[373];
  J[879] =
    dwdot15dsc24 + dwdot15dscqss0 * dscqss_dsc[24] +
    dwdot15dscqss16 * dscqss_dsc[584] + dwdot15dscqss1 * dscqss_dsc[59] +
    dwdot15dscqss17 * dscqss_dsc[619] + dwdot15dscqss2 * dscqss_dsc[94] +
    dwdot15dscqss3 * dscqss_dsc[129] + dwdot15dscqss4 * dscqss_dsc[164] +
    dwdot15dscqss5 * dscqss_dsc[199] + dwdot15dscqss6 * dscqss_dsc[234] +
    dwdot15dscqss7 * dscqss_dsc[269] + dwdot15dscqss9 * dscqss_dsc[339] +
    dwdot15dscqss11 * dscqss_dsc[409] + dwdot15dscqss12 * dscqss_dsc[444] +
    dwdot15dscqss14 * dscqss_dsc[514] + dwdot15dscqss13 * dscqss_dsc[479] +
    dwdot15dscqss15 * dscqss_dsc[549] + dwdot15dscqss8 * dscqss_dsc[304] +
    dwdot15dscqss10 * dscqss_dsc[374];
  J[915] =
    dwdot15dsc25 + dwdot15dscqss0 * dscqss_dsc[25] +
    dwdot15dscqss16 * dscqss_dsc[585] + dwdot15dscqss1 * dscqss_dsc[60] +
    dwdot15dscqss17 * dscqss_dsc[620] + dwdot15dscqss2 * dscqss_dsc[95] +
    dwdot15dscqss3 * dscqss_dsc[130] + dwdot15dscqss4 * dscqss_dsc[165] +
    dwdot15dscqss5 * dscqss_dsc[200] + dwdot15dscqss6 * dscqss_dsc[235] +
    dwdot15dscqss7 * dscqss_dsc[270] + dwdot15dscqss9 * dscqss_dsc[340] +
    dwdot15dscqss11 * dscqss_dsc[410] + dwdot15dscqss12 * dscqss_dsc[445] +
    dwdot15dscqss14 * dscqss_dsc[515] + dwdot15dscqss13 * dscqss_dsc[480] +
    dwdot15dscqss15 * dscqss_dsc[550] + dwdot15dscqss8 * dscqss_dsc[305] +
    dwdot15dscqss10 * dscqss_dsc[375];
  J[951] =
    dwdot15dsc26 + dwdot15dscqss0 * dscqss_dsc[26] +
    dwdot15dscqss16 * dscqss_dsc[586] + dwdot15dscqss1 * dscqss_dsc[61] +
    dwdot15dscqss17 * dscqss_dsc[621] + dwdot15dscqss2 * dscqss_dsc[96] +
    dwdot15dscqss3 * dscqss_dsc[131] + dwdot15dscqss4 * dscqss_dsc[166] +
    dwdot15dscqss5 * dscqss_dsc[201] + dwdot15dscqss6 * dscqss_dsc[236] +
    dwdot15dscqss7 * dscqss_dsc[271] + dwdot15dscqss9 * dscqss_dsc[341] +
    dwdot15dscqss11 * dscqss_dsc[411] + dwdot15dscqss12 * dscqss_dsc[446] +
    dwdot15dscqss14 * dscqss_dsc[516] + dwdot15dscqss13 * dscqss_dsc[481] +
    dwdot15dscqss15 * dscqss_dsc[551] + dwdot15dscqss8 * dscqss_dsc[306] +
    dwdot15dscqss10 * dscqss_dsc[376];
  J[987] =
    dwdot15dsc27 + dwdot15dscqss0 * dscqss_dsc[27] +
    dwdot15dscqss16 * dscqss_dsc[587] + dwdot15dscqss1 * dscqss_dsc[62] +
    dwdot15dscqss17 * dscqss_dsc[622] + dwdot15dscqss2 * dscqss_dsc[97] +
    dwdot15dscqss3 * dscqss_dsc[132] + dwdot15dscqss4 * dscqss_dsc[167] +
    dwdot15dscqss5 * dscqss_dsc[202] + dwdot15dscqss6 * dscqss_dsc[237] +
    dwdot15dscqss7 * dscqss_dsc[272] + dwdot15dscqss9 * dscqss_dsc[342] +
    dwdot15dscqss11 * dscqss_dsc[412] + dwdot15dscqss12 * dscqss_dsc[447] +
    dwdot15dscqss14 * dscqss_dsc[517] + dwdot15dscqss13 * dscqss_dsc[482] +
    dwdot15dscqss15 * dscqss_dsc[552] + dwdot15dscqss8 * dscqss_dsc[307] +
    dwdot15dscqss10 * dscqss_dsc[377];
  J[1023] =
    dwdot15dsc28 + dwdot15dscqss0 * dscqss_dsc[28] +
    dwdot15dscqss16 * dscqss_dsc[588] + dwdot15dscqss1 * dscqss_dsc[63] +
    dwdot15dscqss17 * dscqss_dsc[623] + dwdot15dscqss2 * dscqss_dsc[98] +
    dwdot15dscqss3 * dscqss_dsc[133] + dwdot15dscqss4 * dscqss_dsc[168] +
    dwdot15dscqss5 * dscqss_dsc[203] + dwdot15dscqss6 * dscqss_dsc[238] +
    dwdot15dscqss7 * dscqss_dsc[273] + dwdot15dscqss9 * dscqss_dsc[343] +
    dwdot15dscqss11 * dscqss_dsc[413] + dwdot15dscqss12 * dscqss_dsc[448] +
    dwdot15dscqss14 * dscqss_dsc[518] + dwdot15dscqss13 * dscqss_dsc[483] +
    dwdot15dscqss15 * dscqss_dsc[553] + dwdot15dscqss8 * dscqss_dsc[308] +
    dwdot15dscqss10 * dscqss_dsc[378];
  J[1059] =
    dwdot15dsc29 + dwdot15dscqss0 * dscqss_dsc[29] +
    dwdot15dscqss16 * dscqss_dsc[589] + dwdot15dscqss1 * dscqss_dsc[64] +
    dwdot15dscqss17 * dscqss_dsc[624] + dwdot15dscqss2 * dscqss_dsc[99] +
    dwdot15dscqss3 * dscqss_dsc[134] + dwdot15dscqss4 * dscqss_dsc[169] +
    dwdot15dscqss5 * dscqss_dsc[204] + dwdot15dscqss6 * dscqss_dsc[239] +
    dwdot15dscqss7 * dscqss_dsc[274] + dwdot15dscqss9 * dscqss_dsc[344] +
    dwdot15dscqss11 * dscqss_dsc[414] + dwdot15dscqss12 * dscqss_dsc[449] +
    dwdot15dscqss14 * dscqss_dsc[519] + dwdot15dscqss13 * dscqss_dsc[484] +
    dwdot15dscqss15 * dscqss_dsc[554] + dwdot15dscqss8 * dscqss_dsc[309] +
    dwdot15dscqss10 * dscqss_dsc[379];
  J[1095] =
    dwdot15dsc30 + dwdot15dscqss0 * dscqss_dsc[30] +
    dwdot15dscqss16 * dscqss_dsc[590] + dwdot15dscqss1 * dscqss_dsc[65] +
    dwdot15dscqss17 * dscqss_dsc[625] + dwdot15dscqss2 * dscqss_dsc[100] +
    dwdot15dscqss3 * dscqss_dsc[135] + dwdot15dscqss4 * dscqss_dsc[170] +
    dwdot15dscqss5 * dscqss_dsc[205] + dwdot15dscqss6 * dscqss_dsc[240] +
    dwdot15dscqss7 * dscqss_dsc[275] + dwdot15dscqss9 * dscqss_dsc[345] +
    dwdot15dscqss11 * dscqss_dsc[415] + dwdot15dscqss12 * dscqss_dsc[450] +
    dwdot15dscqss14 * dscqss_dsc[520] + dwdot15dscqss13 * dscqss_dsc[485] +
    dwdot15dscqss15 * dscqss_dsc[555] + dwdot15dscqss8 * dscqss_dsc[310] +
    dwdot15dscqss10 * dscqss_dsc[380];
  J[1131] =
    dwdot15dsc31 + dwdot15dscqss0 * dscqss_dsc[31] +
    dwdot15dscqss16 * dscqss_dsc[591] + dwdot15dscqss1 * dscqss_dsc[66] +
    dwdot15dscqss17 * dscqss_dsc[626] + dwdot15dscqss2 * dscqss_dsc[101] +
    dwdot15dscqss3 * dscqss_dsc[136] + dwdot15dscqss4 * dscqss_dsc[171] +
    dwdot15dscqss5 * dscqss_dsc[206] + dwdot15dscqss6 * dscqss_dsc[241] +
    dwdot15dscqss7 * dscqss_dsc[276] + dwdot15dscqss9 * dscqss_dsc[346] +
    dwdot15dscqss11 * dscqss_dsc[416] + dwdot15dscqss12 * dscqss_dsc[451] +
    dwdot15dscqss14 * dscqss_dsc[521] + dwdot15dscqss13 * dscqss_dsc[486] +
    dwdot15dscqss15 * dscqss_dsc[556] + dwdot15dscqss8 * dscqss_dsc[311] +
    dwdot15dscqss10 * dscqss_dsc[381];
  J[1167] =
    dwdot15dsc32 + dwdot15dscqss0 * dscqss_dsc[32] +
    dwdot15dscqss16 * dscqss_dsc[592] + dwdot15dscqss1 * dscqss_dsc[67] +
    dwdot15dscqss17 * dscqss_dsc[627] + dwdot15dscqss2 * dscqss_dsc[102] +
    dwdot15dscqss3 * dscqss_dsc[137] + dwdot15dscqss4 * dscqss_dsc[172] +
    dwdot15dscqss5 * dscqss_dsc[207] + dwdot15dscqss6 * dscqss_dsc[242] +
    dwdot15dscqss7 * dscqss_dsc[277] + dwdot15dscqss9 * dscqss_dsc[347] +
    dwdot15dscqss11 * dscqss_dsc[417] + dwdot15dscqss12 * dscqss_dsc[452] +
    dwdot15dscqss14 * dscqss_dsc[522] + dwdot15dscqss13 * dscqss_dsc[487] +
    dwdot15dscqss15 * dscqss_dsc[557] + dwdot15dscqss8 * dscqss_dsc[312] +
    dwdot15dscqss10 * dscqss_dsc[382];
  J[1203] =
    dwdot15dsc33 + dwdot15dscqss0 * dscqss_dsc[33] +
    dwdot15dscqss16 * dscqss_dsc[593] + dwdot15dscqss1 * dscqss_dsc[68] +
    dwdot15dscqss17 * dscqss_dsc[628] + dwdot15dscqss2 * dscqss_dsc[103] +
    dwdot15dscqss3 * dscqss_dsc[138] + dwdot15dscqss4 * dscqss_dsc[173] +
    dwdot15dscqss5 * dscqss_dsc[208] + dwdot15dscqss6 * dscqss_dsc[243] +
    dwdot15dscqss7 * dscqss_dsc[278] + dwdot15dscqss9 * dscqss_dsc[348] +
    dwdot15dscqss11 * dscqss_dsc[418] + dwdot15dscqss12 * dscqss_dsc[453] +
    dwdot15dscqss14 * dscqss_dsc[523] + dwdot15dscqss13 * dscqss_dsc[488] +
    dwdot15dscqss15 * dscqss_dsc[558] + dwdot15dscqss8 * dscqss_dsc[313] +
    dwdot15dscqss10 * dscqss_dsc[383];
  J[1239] =
    dwdot15dsc34 + dwdot15dscqss0 * dscqss_dsc[34] +
    dwdot15dscqss16 * dscqss_dsc[594] + dwdot15dscqss1 * dscqss_dsc[69] +
    dwdot15dscqss17 * dscqss_dsc[629] + dwdot15dscqss2 * dscqss_dsc[104] +
    dwdot15dscqss3 * dscqss_dsc[139] + dwdot15dscqss4 * dscqss_dsc[174] +
    dwdot15dscqss5 * dscqss_dsc[209] + dwdot15dscqss6 * dscqss_dsc[244] +
    dwdot15dscqss7 * dscqss_dsc[279] + dwdot15dscqss9 * dscqss_dsc[349] +
    dwdot15dscqss11 * dscqss_dsc[419] + dwdot15dscqss12 * dscqss_dsc[454] +
    dwdot15dscqss14 * dscqss_dsc[524] + dwdot15dscqss13 * dscqss_dsc[489] +
    dwdot15dscqss15 * dscqss_dsc[559] + dwdot15dscqss8 * dscqss_dsc[314] +
    dwdot15dscqss10 * dscqss_dsc[384];
  J[16] =
    dwdot16dsc0 + dwdot16dscqss0 * dscqss_dsc[0] +
    dwdot16dscqss16 * dscqss_dsc[560] + dwdot16dscqss1 * dscqss_dsc[35] +
    dwdot16dscqss17 * dscqss_dsc[595] + dwdot16dscqss2 * dscqss_dsc[70] +
    dwdot16dscqss3 * dscqss_dsc[105] + dwdot16dscqss4 * dscqss_dsc[140] +
    dwdot16dscqss5 * dscqss_dsc[175] + dwdot16dscqss6 * dscqss_dsc[210] +
    dwdot16dscqss7 * dscqss_dsc[245] + dwdot16dscqss9 * dscqss_dsc[315] +
    dwdot16dscqss11 * dscqss_dsc[385] + dwdot16dscqss12 * dscqss_dsc[420] +
    dwdot16dscqss14 * dscqss_dsc[490] + dwdot16dscqss13 * dscqss_dsc[455] +
    dwdot16dscqss15 * dscqss_dsc[525] + dwdot16dscqss8 * dscqss_dsc[280] +
    dwdot16dscqss10 * dscqss_dsc[350];
  J[52] =
    dwdot16dsc1 + dwdot16dscqss0 * dscqss_dsc[1] +
    dwdot16dscqss16 * dscqss_dsc[561] + dwdot16dscqss1 * dscqss_dsc[36] +
    dwdot16dscqss17 * dscqss_dsc[596] + dwdot16dscqss2 * dscqss_dsc[71] +
    dwdot16dscqss3 * dscqss_dsc[106] + dwdot16dscqss4 * dscqss_dsc[141] +
    dwdot16dscqss5 * dscqss_dsc[176] + dwdot16dscqss6 * dscqss_dsc[211] +
    dwdot16dscqss7 * dscqss_dsc[246] + dwdot16dscqss9 * dscqss_dsc[316] +
    dwdot16dscqss11 * dscqss_dsc[386] + dwdot16dscqss12 * dscqss_dsc[421] +
    dwdot16dscqss14 * dscqss_dsc[491] + dwdot16dscqss13 * dscqss_dsc[456] +
    dwdot16dscqss15 * dscqss_dsc[526] + dwdot16dscqss8 * dscqss_dsc[281] +
    dwdot16dscqss10 * dscqss_dsc[351];
  J[88] =
    dwdot16dsc2 + dwdot16dscqss0 * dscqss_dsc[2] +
    dwdot16dscqss16 * dscqss_dsc[562] + dwdot16dscqss1 * dscqss_dsc[37] +
    dwdot16dscqss17 * dscqss_dsc[597] + dwdot16dscqss2 * dscqss_dsc[72] +
    dwdot16dscqss3 * dscqss_dsc[107] + dwdot16dscqss4 * dscqss_dsc[142] +
    dwdot16dscqss5 * dscqss_dsc[177] + dwdot16dscqss6 * dscqss_dsc[212] +
    dwdot16dscqss7 * dscqss_dsc[247] + dwdot16dscqss9 * dscqss_dsc[317] +
    dwdot16dscqss11 * dscqss_dsc[387] + dwdot16dscqss12 * dscqss_dsc[422] +
    dwdot16dscqss14 * dscqss_dsc[492] + dwdot16dscqss13 * dscqss_dsc[457] +
    dwdot16dscqss15 * dscqss_dsc[527] + dwdot16dscqss8 * dscqss_dsc[282] +
    dwdot16dscqss10 * dscqss_dsc[352];
  J[124] =
    dwdot16dsc3 + dwdot16dscqss0 * dscqss_dsc[3] +
    dwdot16dscqss16 * dscqss_dsc[563] + dwdot16dscqss1 * dscqss_dsc[38] +
    dwdot16dscqss17 * dscqss_dsc[598] + dwdot16dscqss2 * dscqss_dsc[73] +
    dwdot16dscqss3 * dscqss_dsc[108] + dwdot16dscqss4 * dscqss_dsc[143] +
    dwdot16dscqss5 * dscqss_dsc[178] + dwdot16dscqss6 * dscqss_dsc[213] +
    dwdot16dscqss7 * dscqss_dsc[248] + dwdot16dscqss9 * dscqss_dsc[318] +
    dwdot16dscqss11 * dscqss_dsc[388] + dwdot16dscqss12 * dscqss_dsc[423] +
    dwdot16dscqss14 * dscqss_dsc[493] + dwdot16dscqss13 * dscqss_dsc[458] +
    dwdot16dscqss15 * dscqss_dsc[528] + dwdot16dscqss8 * dscqss_dsc[283] +
    dwdot16dscqss10 * dscqss_dsc[353];
  J[160] =
    dwdot16dsc4 + dwdot16dscqss0 * dscqss_dsc[4] +
    dwdot16dscqss16 * dscqss_dsc[564] + dwdot16dscqss1 * dscqss_dsc[39] +
    dwdot16dscqss17 * dscqss_dsc[599] + dwdot16dscqss2 * dscqss_dsc[74] +
    dwdot16dscqss3 * dscqss_dsc[109] + dwdot16dscqss4 * dscqss_dsc[144] +
    dwdot16dscqss5 * dscqss_dsc[179] + dwdot16dscqss6 * dscqss_dsc[214] +
    dwdot16dscqss7 * dscqss_dsc[249] + dwdot16dscqss9 * dscqss_dsc[319] +
    dwdot16dscqss11 * dscqss_dsc[389] + dwdot16dscqss12 * dscqss_dsc[424] +
    dwdot16dscqss14 * dscqss_dsc[494] + dwdot16dscqss13 * dscqss_dsc[459] +
    dwdot16dscqss15 * dscqss_dsc[529] + dwdot16dscqss8 * dscqss_dsc[284] +
    dwdot16dscqss10 * dscqss_dsc[354];
  J[196] =
    dwdot16dsc5 + dwdot16dscqss0 * dscqss_dsc[5] +
    dwdot16dscqss16 * dscqss_dsc[565] + dwdot16dscqss1 * dscqss_dsc[40] +
    dwdot16dscqss17 * dscqss_dsc[600] + dwdot16dscqss2 * dscqss_dsc[75] +
    dwdot16dscqss3 * dscqss_dsc[110] + dwdot16dscqss4 * dscqss_dsc[145] +
    dwdot16dscqss5 * dscqss_dsc[180] + dwdot16dscqss6 * dscqss_dsc[215] +
    dwdot16dscqss7 * dscqss_dsc[250] + dwdot16dscqss9 * dscqss_dsc[320] +
    dwdot16dscqss11 * dscqss_dsc[390] + dwdot16dscqss12 * dscqss_dsc[425] +
    dwdot16dscqss14 * dscqss_dsc[495] + dwdot16dscqss13 * dscqss_dsc[460] +
    dwdot16dscqss15 * dscqss_dsc[530] + dwdot16dscqss8 * dscqss_dsc[285] +
    dwdot16dscqss10 * dscqss_dsc[355];
  J[232] =
    dwdot16dsc6 + dwdot16dscqss0 * dscqss_dsc[6] +
    dwdot16dscqss16 * dscqss_dsc[566] + dwdot16dscqss1 * dscqss_dsc[41] +
    dwdot16dscqss17 * dscqss_dsc[601] + dwdot16dscqss2 * dscqss_dsc[76] +
    dwdot16dscqss3 * dscqss_dsc[111] + dwdot16dscqss4 * dscqss_dsc[146] +
    dwdot16dscqss5 * dscqss_dsc[181] + dwdot16dscqss6 * dscqss_dsc[216] +
    dwdot16dscqss7 * dscqss_dsc[251] + dwdot16dscqss9 * dscqss_dsc[321] +
    dwdot16dscqss11 * dscqss_dsc[391] + dwdot16dscqss12 * dscqss_dsc[426] +
    dwdot16dscqss14 * dscqss_dsc[496] + dwdot16dscqss13 * dscqss_dsc[461] +
    dwdot16dscqss15 * dscqss_dsc[531] + dwdot16dscqss8 * dscqss_dsc[286] +
    dwdot16dscqss10 * dscqss_dsc[356];
  J[268] =
    dwdot16dsc7 + dwdot16dscqss0 * dscqss_dsc[7] +
    dwdot16dscqss16 * dscqss_dsc[567] + dwdot16dscqss1 * dscqss_dsc[42] +
    dwdot16dscqss17 * dscqss_dsc[602] + dwdot16dscqss2 * dscqss_dsc[77] +
    dwdot16dscqss3 * dscqss_dsc[112] + dwdot16dscqss4 * dscqss_dsc[147] +
    dwdot16dscqss5 * dscqss_dsc[182] + dwdot16dscqss6 * dscqss_dsc[217] +
    dwdot16dscqss7 * dscqss_dsc[252] + dwdot16dscqss9 * dscqss_dsc[322] +
    dwdot16dscqss11 * dscqss_dsc[392] + dwdot16dscqss12 * dscqss_dsc[427] +
    dwdot16dscqss14 * dscqss_dsc[497] + dwdot16dscqss13 * dscqss_dsc[462] +
    dwdot16dscqss15 * dscqss_dsc[532] + dwdot16dscqss8 * dscqss_dsc[287] +
    dwdot16dscqss10 * dscqss_dsc[357];
  J[304] =
    dwdot16dsc8 + dwdot16dscqss0 * dscqss_dsc[8] +
    dwdot16dscqss16 * dscqss_dsc[568] + dwdot16dscqss1 * dscqss_dsc[43] +
    dwdot16dscqss17 * dscqss_dsc[603] + dwdot16dscqss2 * dscqss_dsc[78] +
    dwdot16dscqss3 * dscqss_dsc[113] + dwdot16dscqss4 * dscqss_dsc[148] +
    dwdot16dscqss5 * dscqss_dsc[183] + dwdot16dscqss6 * dscqss_dsc[218] +
    dwdot16dscqss7 * dscqss_dsc[253] + dwdot16dscqss9 * dscqss_dsc[323] +
    dwdot16dscqss11 * dscqss_dsc[393] + dwdot16dscqss12 * dscqss_dsc[428] +
    dwdot16dscqss14 * dscqss_dsc[498] + dwdot16dscqss13 * dscqss_dsc[463] +
    dwdot16dscqss15 * dscqss_dsc[533] + dwdot16dscqss8 * dscqss_dsc[288] +
    dwdot16dscqss10 * dscqss_dsc[358];
  J[340] =
    dwdot16dsc9 + dwdot16dscqss0 * dscqss_dsc[9] +
    dwdot16dscqss16 * dscqss_dsc[569] + dwdot16dscqss1 * dscqss_dsc[44] +
    dwdot16dscqss17 * dscqss_dsc[604] + dwdot16dscqss2 * dscqss_dsc[79] +
    dwdot16dscqss3 * dscqss_dsc[114] + dwdot16dscqss4 * dscqss_dsc[149] +
    dwdot16dscqss5 * dscqss_dsc[184] + dwdot16dscqss6 * dscqss_dsc[219] +
    dwdot16dscqss7 * dscqss_dsc[254] + dwdot16dscqss9 * dscqss_dsc[324] +
    dwdot16dscqss11 * dscqss_dsc[394] + dwdot16dscqss12 * dscqss_dsc[429] +
    dwdot16dscqss14 * dscqss_dsc[499] + dwdot16dscqss13 * dscqss_dsc[464] +
    dwdot16dscqss15 * dscqss_dsc[534] + dwdot16dscqss8 * dscqss_dsc[289] +
    dwdot16dscqss10 * dscqss_dsc[359];
  J[376] =
    dwdot16dsc10 + dwdot16dscqss0 * dscqss_dsc[10] +
    dwdot16dscqss16 * dscqss_dsc[570] + dwdot16dscqss1 * dscqss_dsc[45] +
    dwdot16dscqss17 * dscqss_dsc[605] + dwdot16dscqss2 * dscqss_dsc[80] +
    dwdot16dscqss3 * dscqss_dsc[115] + dwdot16dscqss4 * dscqss_dsc[150] +
    dwdot16dscqss5 * dscqss_dsc[185] + dwdot16dscqss6 * dscqss_dsc[220] +
    dwdot16dscqss7 * dscqss_dsc[255] + dwdot16dscqss9 * dscqss_dsc[325] +
    dwdot16dscqss11 * dscqss_dsc[395] + dwdot16dscqss12 * dscqss_dsc[430] +
    dwdot16dscqss14 * dscqss_dsc[500] + dwdot16dscqss13 * dscqss_dsc[465] +
    dwdot16dscqss15 * dscqss_dsc[535] + dwdot16dscqss8 * dscqss_dsc[290] +
    dwdot16dscqss10 * dscqss_dsc[360];
  J[412] =
    dwdot16dsc11 + dwdot16dscqss0 * dscqss_dsc[11] +
    dwdot16dscqss16 * dscqss_dsc[571] + dwdot16dscqss1 * dscqss_dsc[46] +
    dwdot16dscqss17 * dscqss_dsc[606] + dwdot16dscqss2 * dscqss_dsc[81] +
    dwdot16dscqss3 * dscqss_dsc[116] + dwdot16dscqss4 * dscqss_dsc[151] +
    dwdot16dscqss5 * dscqss_dsc[186] + dwdot16dscqss6 * dscqss_dsc[221] +
    dwdot16dscqss7 * dscqss_dsc[256] + dwdot16dscqss9 * dscqss_dsc[326] +
    dwdot16dscqss11 * dscqss_dsc[396] + dwdot16dscqss12 * dscqss_dsc[431] +
    dwdot16dscqss14 * dscqss_dsc[501] + dwdot16dscqss13 * dscqss_dsc[466] +
    dwdot16dscqss15 * dscqss_dsc[536] + dwdot16dscqss8 * dscqss_dsc[291] +
    dwdot16dscqss10 * dscqss_dsc[361];
  J[448] =
    dwdot16dsc12 + dwdot16dscqss0 * dscqss_dsc[12] +
    dwdot16dscqss16 * dscqss_dsc[572] + dwdot16dscqss1 * dscqss_dsc[47] +
    dwdot16dscqss17 * dscqss_dsc[607] + dwdot16dscqss2 * dscqss_dsc[82] +
    dwdot16dscqss3 * dscqss_dsc[117] + dwdot16dscqss4 * dscqss_dsc[152] +
    dwdot16dscqss5 * dscqss_dsc[187] + dwdot16dscqss6 * dscqss_dsc[222] +
    dwdot16dscqss7 * dscqss_dsc[257] + dwdot16dscqss9 * dscqss_dsc[327] +
    dwdot16dscqss11 * dscqss_dsc[397] + dwdot16dscqss12 * dscqss_dsc[432] +
    dwdot16dscqss14 * dscqss_dsc[502] + dwdot16dscqss13 * dscqss_dsc[467] +
    dwdot16dscqss15 * dscqss_dsc[537] + dwdot16dscqss8 * dscqss_dsc[292] +
    dwdot16dscqss10 * dscqss_dsc[362];
  J[484] =
    dwdot16dsc13 + dwdot16dscqss0 * dscqss_dsc[13] +
    dwdot16dscqss16 * dscqss_dsc[573] + dwdot16dscqss1 * dscqss_dsc[48] +
    dwdot16dscqss17 * dscqss_dsc[608] + dwdot16dscqss2 * dscqss_dsc[83] +
    dwdot16dscqss3 * dscqss_dsc[118] + dwdot16dscqss4 * dscqss_dsc[153] +
    dwdot16dscqss5 * dscqss_dsc[188] + dwdot16dscqss6 * dscqss_dsc[223] +
    dwdot16dscqss7 * dscqss_dsc[258] + dwdot16dscqss9 * dscqss_dsc[328] +
    dwdot16dscqss11 * dscqss_dsc[398] + dwdot16dscqss12 * dscqss_dsc[433] +
    dwdot16dscqss14 * dscqss_dsc[503] + dwdot16dscqss13 * dscqss_dsc[468] +
    dwdot16dscqss15 * dscqss_dsc[538] + dwdot16dscqss8 * dscqss_dsc[293] +
    dwdot16dscqss10 * dscqss_dsc[363];
  J[520] =
    dwdot16dsc14 + dwdot16dscqss0 * dscqss_dsc[14] +
    dwdot16dscqss16 * dscqss_dsc[574] + dwdot16dscqss1 * dscqss_dsc[49] +
    dwdot16dscqss17 * dscqss_dsc[609] + dwdot16dscqss2 * dscqss_dsc[84] +
    dwdot16dscqss3 * dscqss_dsc[119] + dwdot16dscqss4 * dscqss_dsc[154] +
    dwdot16dscqss5 * dscqss_dsc[189] + dwdot16dscqss6 * dscqss_dsc[224] +
    dwdot16dscqss7 * dscqss_dsc[259] + dwdot16dscqss9 * dscqss_dsc[329] +
    dwdot16dscqss11 * dscqss_dsc[399] + dwdot16dscqss12 * dscqss_dsc[434] +
    dwdot16dscqss14 * dscqss_dsc[504] + dwdot16dscqss13 * dscqss_dsc[469] +
    dwdot16dscqss15 * dscqss_dsc[539] + dwdot16dscqss8 * dscqss_dsc[294] +
    dwdot16dscqss10 * dscqss_dsc[364];
  J[556] =
    dwdot16dsc15 + dwdot16dscqss0 * dscqss_dsc[15] +
    dwdot16dscqss16 * dscqss_dsc[575] + dwdot16dscqss1 * dscqss_dsc[50] +
    dwdot16dscqss17 * dscqss_dsc[610] + dwdot16dscqss2 * dscqss_dsc[85] +
    dwdot16dscqss3 * dscqss_dsc[120] + dwdot16dscqss4 * dscqss_dsc[155] +
    dwdot16dscqss5 * dscqss_dsc[190] + dwdot16dscqss6 * dscqss_dsc[225] +
    dwdot16dscqss7 * dscqss_dsc[260] + dwdot16dscqss9 * dscqss_dsc[330] +
    dwdot16dscqss11 * dscqss_dsc[400] + dwdot16dscqss12 * dscqss_dsc[435] +
    dwdot16dscqss14 * dscqss_dsc[505] + dwdot16dscqss13 * dscqss_dsc[470] +
    dwdot16dscqss15 * dscqss_dsc[540] + dwdot16dscqss8 * dscqss_dsc[295] +
    dwdot16dscqss10 * dscqss_dsc[365];
  J[592] =
    dwdot16dsc16 + dwdot16dscqss0 * dscqss_dsc[16] +
    dwdot16dscqss16 * dscqss_dsc[576] + dwdot16dscqss1 * dscqss_dsc[51] +
    dwdot16dscqss17 * dscqss_dsc[611] + dwdot16dscqss2 * dscqss_dsc[86] +
    dwdot16dscqss3 * dscqss_dsc[121] + dwdot16dscqss4 * dscqss_dsc[156] +
    dwdot16dscqss5 * dscqss_dsc[191] + dwdot16dscqss6 * dscqss_dsc[226] +
    dwdot16dscqss7 * dscqss_dsc[261] + dwdot16dscqss9 * dscqss_dsc[331] +
    dwdot16dscqss11 * dscqss_dsc[401] + dwdot16dscqss12 * dscqss_dsc[436] +
    dwdot16dscqss14 * dscqss_dsc[506] + dwdot16dscqss13 * dscqss_dsc[471] +
    dwdot16dscqss15 * dscqss_dsc[541] + dwdot16dscqss8 * dscqss_dsc[296] +
    dwdot16dscqss10 * dscqss_dsc[366];
  J[628] =
    dwdot16dsc17 + dwdot16dscqss0 * dscqss_dsc[17] +
    dwdot16dscqss16 * dscqss_dsc[577] + dwdot16dscqss1 * dscqss_dsc[52] +
    dwdot16dscqss17 * dscqss_dsc[612] + dwdot16dscqss2 * dscqss_dsc[87] +
    dwdot16dscqss3 * dscqss_dsc[122] + dwdot16dscqss4 * dscqss_dsc[157] +
    dwdot16dscqss5 * dscqss_dsc[192] + dwdot16dscqss6 * dscqss_dsc[227] +
    dwdot16dscqss7 * dscqss_dsc[262] + dwdot16dscqss9 * dscqss_dsc[332] +
    dwdot16dscqss11 * dscqss_dsc[402] + dwdot16dscqss12 * dscqss_dsc[437] +
    dwdot16dscqss14 * dscqss_dsc[507] + dwdot16dscqss13 * dscqss_dsc[472] +
    dwdot16dscqss15 * dscqss_dsc[542] + dwdot16dscqss8 * dscqss_dsc[297] +
    dwdot16dscqss10 * dscqss_dsc[367];
  J[664] =
    dwdot16dsc18 + dwdot16dscqss0 * dscqss_dsc[18] +
    dwdot16dscqss16 * dscqss_dsc[578] + dwdot16dscqss1 * dscqss_dsc[53] +
    dwdot16dscqss17 * dscqss_dsc[613] + dwdot16dscqss2 * dscqss_dsc[88] +
    dwdot16dscqss3 * dscqss_dsc[123] + dwdot16dscqss4 * dscqss_dsc[158] +
    dwdot16dscqss5 * dscqss_dsc[193] + dwdot16dscqss6 * dscqss_dsc[228] +
    dwdot16dscqss7 * dscqss_dsc[263] + dwdot16dscqss9 * dscqss_dsc[333] +
    dwdot16dscqss11 * dscqss_dsc[403] + dwdot16dscqss12 * dscqss_dsc[438] +
    dwdot16dscqss14 * dscqss_dsc[508] + dwdot16dscqss13 * dscqss_dsc[473] +
    dwdot16dscqss15 * dscqss_dsc[543] + dwdot16dscqss8 * dscqss_dsc[298] +
    dwdot16dscqss10 * dscqss_dsc[368];
  J[700] =
    dwdot16dsc19 + dwdot16dscqss0 * dscqss_dsc[19] +
    dwdot16dscqss16 * dscqss_dsc[579] + dwdot16dscqss1 * dscqss_dsc[54] +
    dwdot16dscqss17 * dscqss_dsc[614] + dwdot16dscqss2 * dscqss_dsc[89] +
    dwdot16dscqss3 * dscqss_dsc[124] + dwdot16dscqss4 * dscqss_dsc[159] +
    dwdot16dscqss5 * dscqss_dsc[194] + dwdot16dscqss6 * dscqss_dsc[229] +
    dwdot16dscqss7 * dscqss_dsc[264] + dwdot16dscqss9 * dscqss_dsc[334] +
    dwdot16dscqss11 * dscqss_dsc[404] + dwdot16dscqss12 * dscqss_dsc[439] +
    dwdot16dscqss14 * dscqss_dsc[509] + dwdot16dscqss13 * dscqss_dsc[474] +
    dwdot16dscqss15 * dscqss_dsc[544] + dwdot16dscqss8 * dscqss_dsc[299] +
    dwdot16dscqss10 * dscqss_dsc[369];
  J[736] =
    dwdot16dsc20 + dwdot16dscqss0 * dscqss_dsc[20] +
    dwdot16dscqss16 * dscqss_dsc[580] + dwdot16dscqss1 * dscqss_dsc[55] +
    dwdot16dscqss17 * dscqss_dsc[615] + dwdot16dscqss2 * dscqss_dsc[90] +
    dwdot16dscqss3 * dscqss_dsc[125] + dwdot16dscqss4 * dscqss_dsc[160] +
    dwdot16dscqss5 * dscqss_dsc[195] + dwdot16dscqss6 * dscqss_dsc[230] +
    dwdot16dscqss7 * dscqss_dsc[265] + dwdot16dscqss9 * dscqss_dsc[335] +
    dwdot16dscqss11 * dscqss_dsc[405] + dwdot16dscqss12 * dscqss_dsc[440] +
    dwdot16dscqss14 * dscqss_dsc[510] + dwdot16dscqss13 * dscqss_dsc[475] +
    dwdot16dscqss15 * dscqss_dsc[545] + dwdot16dscqss8 * dscqss_dsc[300] +
    dwdot16dscqss10 * dscqss_dsc[370];
  J[772] =
    dwdot16dsc21 + dwdot16dscqss0 * dscqss_dsc[21] +
    dwdot16dscqss16 * dscqss_dsc[581] + dwdot16dscqss1 * dscqss_dsc[56] +
    dwdot16dscqss17 * dscqss_dsc[616] + dwdot16dscqss2 * dscqss_dsc[91] +
    dwdot16dscqss3 * dscqss_dsc[126] + dwdot16dscqss4 * dscqss_dsc[161] +
    dwdot16dscqss5 * dscqss_dsc[196] + dwdot16dscqss6 * dscqss_dsc[231] +
    dwdot16dscqss7 * dscqss_dsc[266] + dwdot16dscqss9 * dscqss_dsc[336] +
    dwdot16dscqss11 * dscqss_dsc[406] + dwdot16dscqss12 * dscqss_dsc[441] +
    dwdot16dscqss14 * dscqss_dsc[511] + dwdot16dscqss13 * dscqss_dsc[476] +
    dwdot16dscqss15 * dscqss_dsc[546] + dwdot16dscqss8 * dscqss_dsc[301] +
    dwdot16dscqss10 * dscqss_dsc[371];
  J[808] =
    dwdot16dsc22 + dwdot16dscqss0 * dscqss_dsc[22] +
    dwdot16dscqss16 * dscqss_dsc[582] + dwdot16dscqss1 * dscqss_dsc[57] +
    dwdot16dscqss17 * dscqss_dsc[617] + dwdot16dscqss2 * dscqss_dsc[92] +
    dwdot16dscqss3 * dscqss_dsc[127] + dwdot16dscqss4 * dscqss_dsc[162] +
    dwdot16dscqss5 * dscqss_dsc[197] + dwdot16dscqss6 * dscqss_dsc[232] +
    dwdot16dscqss7 * dscqss_dsc[267] + dwdot16dscqss9 * dscqss_dsc[337] +
    dwdot16dscqss11 * dscqss_dsc[407] + dwdot16dscqss12 * dscqss_dsc[442] +
    dwdot16dscqss14 * dscqss_dsc[512] + dwdot16dscqss13 * dscqss_dsc[477] +
    dwdot16dscqss15 * dscqss_dsc[547] + dwdot16dscqss8 * dscqss_dsc[302] +
    dwdot16dscqss10 * dscqss_dsc[372];
  J[844] =
    dwdot16dsc23 + dwdot16dscqss0 * dscqss_dsc[23] +
    dwdot16dscqss16 * dscqss_dsc[583] + dwdot16dscqss1 * dscqss_dsc[58] +
    dwdot16dscqss17 * dscqss_dsc[618] + dwdot16dscqss2 * dscqss_dsc[93] +
    dwdot16dscqss3 * dscqss_dsc[128] + dwdot16dscqss4 * dscqss_dsc[163] +
    dwdot16dscqss5 * dscqss_dsc[198] + dwdot16dscqss6 * dscqss_dsc[233] +
    dwdot16dscqss7 * dscqss_dsc[268] + dwdot16dscqss9 * dscqss_dsc[338] +
    dwdot16dscqss11 * dscqss_dsc[408] + dwdot16dscqss12 * dscqss_dsc[443] +
    dwdot16dscqss14 * dscqss_dsc[513] + dwdot16dscqss13 * dscqss_dsc[478] +
    dwdot16dscqss15 * dscqss_dsc[548] + dwdot16dscqss8 * dscqss_dsc[303] +
    dwdot16dscqss10 * dscqss_dsc[373];
  J[880] =
    dwdot16dsc24 + dwdot16dscqss0 * dscqss_dsc[24] +
    dwdot16dscqss16 * dscqss_dsc[584] + dwdot16dscqss1 * dscqss_dsc[59] +
    dwdot16dscqss17 * dscqss_dsc[619] + dwdot16dscqss2 * dscqss_dsc[94] +
    dwdot16dscqss3 * dscqss_dsc[129] + dwdot16dscqss4 * dscqss_dsc[164] +
    dwdot16dscqss5 * dscqss_dsc[199] + dwdot16dscqss6 * dscqss_dsc[234] +
    dwdot16dscqss7 * dscqss_dsc[269] + dwdot16dscqss9 * dscqss_dsc[339] +
    dwdot16dscqss11 * dscqss_dsc[409] + dwdot16dscqss12 * dscqss_dsc[444] +
    dwdot16dscqss14 * dscqss_dsc[514] + dwdot16dscqss13 * dscqss_dsc[479] +
    dwdot16dscqss15 * dscqss_dsc[549] + dwdot16dscqss8 * dscqss_dsc[304] +
    dwdot16dscqss10 * dscqss_dsc[374];
  J[916] =
    dwdot16dsc25 + dwdot16dscqss0 * dscqss_dsc[25] +
    dwdot16dscqss16 * dscqss_dsc[585] + dwdot16dscqss1 * dscqss_dsc[60] +
    dwdot16dscqss17 * dscqss_dsc[620] + dwdot16dscqss2 * dscqss_dsc[95] +
    dwdot16dscqss3 * dscqss_dsc[130] + dwdot16dscqss4 * dscqss_dsc[165] +
    dwdot16dscqss5 * dscqss_dsc[200] + dwdot16dscqss6 * dscqss_dsc[235] +
    dwdot16dscqss7 * dscqss_dsc[270] + dwdot16dscqss9 * dscqss_dsc[340] +
    dwdot16dscqss11 * dscqss_dsc[410] + dwdot16dscqss12 * dscqss_dsc[445] +
    dwdot16dscqss14 * dscqss_dsc[515] + dwdot16dscqss13 * dscqss_dsc[480] +
    dwdot16dscqss15 * dscqss_dsc[550] + dwdot16dscqss8 * dscqss_dsc[305] +
    dwdot16dscqss10 * dscqss_dsc[375];
  J[952] =
    dwdot16dsc26 + dwdot16dscqss0 * dscqss_dsc[26] +
    dwdot16dscqss16 * dscqss_dsc[586] + dwdot16dscqss1 * dscqss_dsc[61] +
    dwdot16dscqss17 * dscqss_dsc[621] + dwdot16dscqss2 * dscqss_dsc[96] +
    dwdot16dscqss3 * dscqss_dsc[131] + dwdot16dscqss4 * dscqss_dsc[166] +
    dwdot16dscqss5 * dscqss_dsc[201] + dwdot16dscqss6 * dscqss_dsc[236] +
    dwdot16dscqss7 * dscqss_dsc[271] + dwdot16dscqss9 * dscqss_dsc[341] +
    dwdot16dscqss11 * dscqss_dsc[411] + dwdot16dscqss12 * dscqss_dsc[446] +
    dwdot16dscqss14 * dscqss_dsc[516] + dwdot16dscqss13 * dscqss_dsc[481] +
    dwdot16dscqss15 * dscqss_dsc[551] + dwdot16dscqss8 * dscqss_dsc[306] +
    dwdot16dscqss10 * dscqss_dsc[376];
  J[988] =
    dwdot16dsc27 + dwdot16dscqss0 * dscqss_dsc[27] +
    dwdot16dscqss16 * dscqss_dsc[587] + dwdot16dscqss1 * dscqss_dsc[62] +
    dwdot16dscqss17 * dscqss_dsc[622] + dwdot16dscqss2 * dscqss_dsc[97] +
    dwdot16dscqss3 * dscqss_dsc[132] + dwdot16dscqss4 * dscqss_dsc[167] +
    dwdot16dscqss5 * dscqss_dsc[202] + dwdot16dscqss6 * dscqss_dsc[237] +
    dwdot16dscqss7 * dscqss_dsc[272] + dwdot16dscqss9 * dscqss_dsc[342] +
    dwdot16dscqss11 * dscqss_dsc[412] + dwdot16dscqss12 * dscqss_dsc[447] +
    dwdot16dscqss14 * dscqss_dsc[517] + dwdot16dscqss13 * dscqss_dsc[482] +
    dwdot16dscqss15 * dscqss_dsc[552] + dwdot16dscqss8 * dscqss_dsc[307] +
    dwdot16dscqss10 * dscqss_dsc[377];
  J[1024] =
    dwdot16dsc28 + dwdot16dscqss0 * dscqss_dsc[28] +
    dwdot16dscqss16 * dscqss_dsc[588] + dwdot16dscqss1 * dscqss_dsc[63] +
    dwdot16dscqss17 * dscqss_dsc[623] + dwdot16dscqss2 * dscqss_dsc[98] +
    dwdot16dscqss3 * dscqss_dsc[133] + dwdot16dscqss4 * dscqss_dsc[168] +
    dwdot16dscqss5 * dscqss_dsc[203] + dwdot16dscqss6 * dscqss_dsc[238] +
    dwdot16dscqss7 * dscqss_dsc[273] + dwdot16dscqss9 * dscqss_dsc[343] +
    dwdot16dscqss11 * dscqss_dsc[413] + dwdot16dscqss12 * dscqss_dsc[448] +
    dwdot16dscqss14 * dscqss_dsc[518] + dwdot16dscqss13 * dscqss_dsc[483] +
    dwdot16dscqss15 * dscqss_dsc[553] + dwdot16dscqss8 * dscqss_dsc[308] +
    dwdot16dscqss10 * dscqss_dsc[378];
  J[1060] =
    dwdot16dsc29 + dwdot16dscqss0 * dscqss_dsc[29] +
    dwdot16dscqss16 * dscqss_dsc[589] + dwdot16dscqss1 * dscqss_dsc[64] +
    dwdot16dscqss17 * dscqss_dsc[624] + dwdot16dscqss2 * dscqss_dsc[99] +
    dwdot16dscqss3 * dscqss_dsc[134] + dwdot16dscqss4 * dscqss_dsc[169] +
    dwdot16dscqss5 * dscqss_dsc[204] + dwdot16dscqss6 * dscqss_dsc[239] +
    dwdot16dscqss7 * dscqss_dsc[274] + dwdot16dscqss9 * dscqss_dsc[344] +
    dwdot16dscqss11 * dscqss_dsc[414] + dwdot16dscqss12 * dscqss_dsc[449] +
    dwdot16dscqss14 * dscqss_dsc[519] + dwdot16dscqss13 * dscqss_dsc[484] +
    dwdot16dscqss15 * dscqss_dsc[554] + dwdot16dscqss8 * dscqss_dsc[309] +
    dwdot16dscqss10 * dscqss_dsc[379];
  J[1096] =
    dwdot16dsc30 + dwdot16dscqss0 * dscqss_dsc[30] +
    dwdot16dscqss16 * dscqss_dsc[590] + dwdot16dscqss1 * dscqss_dsc[65] +
    dwdot16dscqss17 * dscqss_dsc[625] + dwdot16dscqss2 * dscqss_dsc[100] +
    dwdot16dscqss3 * dscqss_dsc[135] + dwdot16dscqss4 * dscqss_dsc[170] +
    dwdot16dscqss5 * dscqss_dsc[205] + dwdot16dscqss6 * dscqss_dsc[240] +
    dwdot16dscqss7 * dscqss_dsc[275] + dwdot16dscqss9 * dscqss_dsc[345] +
    dwdot16dscqss11 * dscqss_dsc[415] + dwdot16dscqss12 * dscqss_dsc[450] +
    dwdot16dscqss14 * dscqss_dsc[520] + dwdot16dscqss13 * dscqss_dsc[485] +
    dwdot16dscqss15 * dscqss_dsc[555] + dwdot16dscqss8 * dscqss_dsc[310] +
    dwdot16dscqss10 * dscqss_dsc[380];
  J[1132] =
    dwdot16dsc31 + dwdot16dscqss0 * dscqss_dsc[31] +
    dwdot16dscqss16 * dscqss_dsc[591] + dwdot16dscqss1 * dscqss_dsc[66] +
    dwdot16dscqss17 * dscqss_dsc[626] + dwdot16dscqss2 * dscqss_dsc[101] +
    dwdot16dscqss3 * dscqss_dsc[136] + dwdot16dscqss4 * dscqss_dsc[171] +
    dwdot16dscqss5 * dscqss_dsc[206] + dwdot16dscqss6 * dscqss_dsc[241] +
    dwdot16dscqss7 * dscqss_dsc[276] + dwdot16dscqss9 * dscqss_dsc[346] +
    dwdot16dscqss11 * dscqss_dsc[416] + dwdot16dscqss12 * dscqss_dsc[451] +
    dwdot16dscqss14 * dscqss_dsc[521] + dwdot16dscqss13 * dscqss_dsc[486] +
    dwdot16dscqss15 * dscqss_dsc[556] + dwdot16dscqss8 * dscqss_dsc[311] +
    dwdot16dscqss10 * dscqss_dsc[381];
  J[1168] =
    dwdot16dsc32 + dwdot16dscqss0 * dscqss_dsc[32] +
    dwdot16dscqss16 * dscqss_dsc[592] + dwdot16dscqss1 * dscqss_dsc[67] +
    dwdot16dscqss17 * dscqss_dsc[627] + dwdot16dscqss2 * dscqss_dsc[102] +
    dwdot16dscqss3 * dscqss_dsc[137] + dwdot16dscqss4 * dscqss_dsc[172] +
    dwdot16dscqss5 * dscqss_dsc[207] + dwdot16dscqss6 * dscqss_dsc[242] +
    dwdot16dscqss7 * dscqss_dsc[277] + dwdot16dscqss9 * dscqss_dsc[347] +
    dwdot16dscqss11 * dscqss_dsc[417] + dwdot16dscqss12 * dscqss_dsc[452] +
    dwdot16dscqss14 * dscqss_dsc[522] + dwdot16dscqss13 * dscqss_dsc[487] +
    dwdot16dscqss15 * dscqss_dsc[557] + dwdot16dscqss8 * dscqss_dsc[312] +
    dwdot16dscqss10 * dscqss_dsc[382];
  J[1204] =
    dwdot16dsc33 + dwdot16dscqss0 * dscqss_dsc[33] +
    dwdot16dscqss16 * dscqss_dsc[593] + dwdot16dscqss1 * dscqss_dsc[68] +
    dwdot16dscqss17 * dscqss_dsc[628] + dwdot16dscqss2 * dscqss_dsc[103] +
    dwdot16dscqss3 * dscqss_dsc[138] + dwdot16dscqss4 * dscqss_dsc[173] +
    dwdot16dscqss5 * dscqss_dsc[208] + dwdot16dscqss6 * dscqss_dsc[243] +
    dwdot16dscqss7 * dscqss_dsc[278] + dwdot16dscqss9 * dscqss_dsc[348] +
    dwdot16dscqss11 * dscqss_dsc[418] + dwdot16dscqss12 * dscqss_dsc[453] +
    dwdot16dscqss14 * dscqss_dsc[523] + dwdot16dscqss13 * dscqss_dsc[488] +
    dwdot16dscqss15 * dscqss_dsc[558] + dwdot16dscqss8 * dscqss_dsc[313] +
    dwdot16dscqss10 * dscqss_dsc[383];
  J[1240] =
    dwdot16dsc34 + dwdot16dscqss0 * dscqss_dsc[34] +
    dwdot16dscqss16 * dscqss_dsc[594] + dwdot16dscqss1 * dscqss_dsc[69] +
    dwdot16dscqss17 * dscqss_dsc[629] + dwdot16dscqss2 * dscqss_dsc[104] +
    dwdot16dscqss3 * dscqss_dsc[139] + dwdot16dscqss4 * dscqss_dsc[174] +
    dwdot16dscqss5 * dscqss_dsc[209] + dwdot16dscqss6 * dscqss_dsc[244] +
    dwdot16dscqss7 * dscqss_dsc[279] + dwdot16dscqss9 * dscqss_dsc[349] +
    dwdot16dscqss11 * dscqss_dsc[419] + dwdot16dscqss12 * dscqss_dsc[454] +
    dwdot16dscqss14 * dscqss_dsc[524] + dwdot16dscqss13 * dscqss_dsc[489] +
    dwdot16dscqss15 * dscqss_dsc[559] + dwdot16dscqss8 * dscqss_dsc[314] +
    dwdot16dscqss10 * dscqss_dsc[384];
  J[17] =
    dwdot17dsc0 + dwdot17dscqss0 * dscqss_dsc[0] +
    dwdot17dscqss16 * dscqss_dsc[560] + dwdot17dscqss1 * dscqss_dsc[35] +
    dwdot17dscqss17 * dscqss_dsc[595] + dwdot17dscqss2 * dscqss_dsc[70] +
    dwdot17dscqss3 * dscqss_dsc[105] + dwdot17dscqss4 * dscqss_dsc[140] +
    dwdot17dscqss5 * dscqss_dsc[175] + dwdot17dscqss6 * dscqss_dsc[210] +
    dwdot17dscqss7 * dscqss_dsc[245] + dwdot17dscqss9 * dscqss_dsc[315] +
    dwdot17dscqss11 * dscqss_dsc[385] + dwdot17dscqss12 * dscqss_dsc[420] +
    dwdot17dscqss14 * dscqss_dsc[490] + dwdot17dscqss13 * dscqss_dsc[455] +
    dwdot17dscqss15 * dscqss_dsc[525] + dwdot17dscqss8 * dscqss_dsc[280] +
    dwdot17dscqss10 * dscqss_dsc[350];
  J[53] =
    dwdot17dsc1 + dwdot17dscqss0 * dscqss_dsc[1] +
    dwdot17dscqss16 * dscqss_dsc[561] + dwdot17dscqss1 * dscqss_dsc[36] +
    dwdot17dscqss17 * dscqss_dsc[596] + dwdot17dscqss2 * dscqss_dsc[71] +
    dwdot17dscqss3 * dscqss_dsc[106] + dwdot17dscqss4 * dscqss_dsc[141] +
    dwdot17dscqss5 * dscqss_dsc[176] + dwdot17dscqss6 * dscqss_dsc[211] +
    dwdot17dscqss7 * dscqss_dsc[246] + dwdot17dscqss9 * dscqss_dsc[316] +
    dwdot17dscqss11 * dscqss_dsc[386] + dwdot17dscqss12 * dscqss_dsc[421] +
    dwdot17dscqss14 * dscqss_dsc[491] + dwdot17dscqss13 * dscqss_dsc[456] +
    dwdot17dscqss15 * dscqss_dsc[526] + dwdot17dscqss8 * dscqss_dsc[281] +
    dwdot17dscqss10 * dscqss_dsc[351];
  J[89] =
    dwdot17dsc2 + dwdot17dscqss0 * dscqss_dsc[2] +
    dwdot17dscqss16 * dscqss_dsc[562] + dwdot17dscqss1 * dscqss_dsc[37] +
    dwdot17dscqss17 * dscqss_dsc[597] + dwdot17dscqss2 * dscqss_dsc[72] +
    dwdot17dscqss3 * dscqss_dsc[107] + dwdot17dscqss4 * dscqss_dsc[142] +
    dwdot17dscqss5 * dscqss_dsc[177] + dwdot17dscqss6 * dscqss_dsc[212] +
    dwdot17dscqss7 * dscqss_dsc[247] + dwdot17dscqss9 * dscqss_dsc[317] +
    dwdot17dscqss11 * dscqss_dsc[387] + dwdot17dscqss12 * dscqss_dsc[422] +
    dwdot17dscqss14 * dscqss_dsc[492] + dwdot17dscqss13 * dscqss_dsc[457] +
    dwdot17dscqss15 * dscqss_dsc[527] + dwdot17dscqss8 * dscqss_dsc[282] +
    dwdot17dscqss10 * dscqss_dsc[352];
  J[125] =
    dwdot17dsc3 + dwdot17dscqss0 * dscqss_dsc[3] +
    dwdot17dscqss16 * dscqss_dsc[563] + dwdot17dscqss1 * dscqss_dsc[38] +
    dwdot17dscqss17 * dscqss_dsc[598] + dwdot17dscqss2 * dscqss_dsc[73] +
    dwdot17dscqss3 * dscqss_dsc[108] + dwdot17dscqss4 * dscqss_dsc[143] +
    dwdot17dscqss5 * dscqss_dsc[178] + dwdot17dscqss6 * dscqss_dsc[213] +
    dwdot17dscqss7 * dscqss_dsc[248] + dwdot17dscqss9 * dscqss_dsc[318] +
    dwdot17dscqss11 * dscqss_dsc[388] + dwdot17dscqss12 * dscqss_dsc[423] +
    dwdot17dscqss14 * dscqss_dsc[493] + dwdot17dscqss13 * dscqss_dsc[458] +
    dwdot17dscqss15 * dscqss_dsc[528] + dwdot17dscqss8 * dscqss_dsc[283] +
    dwdot17dscqss10 * dscqss_dsc[353];
  J[161] =
    dwdot17dsc4 + dwdot17dscqss0 * dscqss_dsc[4] +
    dwdot17dscqss16 * dscqss_dsc[564] + dwdot17dscqss1 * dscqss_dsc[39] +
    dwdot17dscqss17 * dscqss_dsc[599] + dwdot17dscqss2 * dscqss_dsc[74] +
    dwdot17dscqss3 * dscqss_dsc[109] + dwdot17dscqss4 * dscqss_dsc[144] +
    dwdot17dscqss5 * dscqss_dsc[179] + dwdot17dscqss6 * dscqss_dsc[214] +
    dwdot17dscqss7 * dscqss_dsc[249] + dwdot17dscqss9 * dscqss_dsc[319] +
    dwdot17dscqss11 * dscqss_dsc[389] + dwdot17dscqss12 * dscqss_dsc[424] +
    dwdot17dscqss14 * dscqss_dsc[494] + dwdot17dscqss13 * dscqss_dsc[459] +
    dwdot17dscqss15 * dscqss_dsc[529] + dwdot17dscqss8 * dscqss_dsc[284] +
    dwdot17dscqss10 * dscqss_dsc[354];
  J[197] =
    dwdot17dsc5 + dwdot17dscqss0 * dscqss_dsc[5] +
    dwdot17dscqss16 * dscqss_dsc[565] + dwdot17dscqss1 * dscqss_dsc[40] +
    dwdot17dscqss17 * dscqss_dsc[600] + dwdot17dscqss2 * dscqss_dsc[75] +
    dwdot17dscqss3 * dscqss_dsc[110] + dwdot17dscqss4 * dscqss_dsc[145] +
    dwdot17dscqss5 * dscqss_dsc[180] + dwdot17dscqss6 * dscqss_dsc[215] +
    dwdot17dscqss7 * dscqss_dsc[250] + dwdot17dscqss9 * dscqss_dsc[320] +
    dwdot17dscqss11 * dscqss_dsc[390] + dwdot17dscqss12 * dscqss_dsc[425] +
    dwdot17dscqss14 * dscqss_dsc[495] + dwdot17dscqss13 * dscqss_dsc[460] +
    dwdot17dscqss15 * dscqss_dsc[530] + dwdot17dscqss8 * dscqss_dsc[285] +
    dwdot17dscqss10 * dscqss_dsc[355];
  J[233] =
    dwdot17dsc6 + dwdot17dscqss0 * dscqss_dsc[6] +
    dwdot17dscqss16 * dscqss_dsc[566] + dwdot17dscqss1 * dscqss_dsc[41] +
    dwdot17dscqss17 * dscqss_dsc[601] + dwdot17dscqss2 * dscqss_dsc[76] +
    dwdot17dscqss3 * dscqss_dsc[111] + dwdot17dscqss4 * dscqss_dsc[146] +
    dwdot17dscqss5 * dscqss_dsc[181] + dwdot17dscqss6 * dscqss_dsc[216] +
    dwdot17dscqss7 * dscqss_dsc[251] + dwdot17dscqss9 * dscqss_dsc[321] +
    dwdot17dscqss11 * dscqss_dsc[391] + dwdot17dscqss12 * dscqss_dsc[426] +
    dwdot17dscqss14 * dscqss_dsc[496] + dwdot17dscqss13 * dscqss_dsc[461] +
    dwdot17dscqss15 * dscqss_dsc[531] + dwdot17dscqss8 * dscqss_dsc[286] +
    dwdot17dscqss10 * dscqss_dsc[356];
  J[269] =
    dwdot17dsc7 + dwdot17dscqss0 * dscqss_dsc[7] +
    dwdot17dscqss16 * dscqss_dsc[567] + dwdot17dscqss1 * dscqss_dsc[42] +
    dwdot17dscqss17 * dscqss_dsc[602] + dwdot17dscqss2 * dscqss_dsc[77] +
    dwdot17dscqss3 * dscqss_dsc[112] + dwdot17dscqss4 * dscqss_dsc[147] +
    dwdot17dscqss5 * dscqss_dsc[182] + dwdot17dscqss6 * dscqss_dsc[217] +
    dwdot17dscqss7 * dscqss_dsc[252] + dwdot17dscqss9 * dscqss_dsc[322] +
    dwdot17dscqss11 * dscqss_dsc[392] + dwdot17dscqss12 * dscqss_dsc[427] +
    dwdot17dscqss14 * dscqss_dsc[497] + dwdot17dscqss13 * dscqss_dsc[462] +
    dwdot17dscqss15 * dscqss_dsc[532] + dwdot17dscqss8 * dscqss_dsc[287] +
    dwdot17dscqss10 * dscqss_dsc[357];
  J[305] =
    dwdot17dsc8 + dwdot17dscqss0 * dscqss_dsc[8] +
    dwdot17dscqss16 * dscqss_dsc[568] + dwdot17dscqss1 * dscqss_dsc[43] +
    dwdot17dscqss17 * dscqss_dsc[603] + dwdot17dscqss2 * dscqss_dsc[78] +
    dwdot17dscqss3 * dscqss_dsc[113] + dwdot17dscqss4 * dscqss_dsc[148] +
    dwdot17dscqss5 * dscqss_dsc[183] + dwdot17dscqss6 * dscqss_dsc[218] +
    dwdot17dscqss7 * dscqss_dsc[253] + dwdot17dscqss9 * dscqss_dsc[323] +
    dwdot17dscqss11 * dscqss_dsc[393] + dwdot17dscqss12 * dscqss_dsc[428] +
    dwdot17dscqss14 * dscqss_dsc[498] + dwdot17dscqss13 * dscqss_dsc[463] +
    dwdot17dscqss15 * dscqss_dsc[533] + dwdot17dscqss8 * dscqss_dsc[288] +
    dwdot17dscqss10 * dscqss_dsc[358];
  J[341] =
    dwdot17dsc9 + dwdot17dscqss0 * dscqss_dsc[9] +
    dwdot17dscqss16 * dscqss_dsc[569] + dwdot17dscqss1 * dscqss_dsc[44] +
    dwdot17dscqss17 * dscqss_dsc[604] + dwdot17dscqss2 * dscqss_dsc[79] +
    dwdot17dscqss3 * dscqss_dsc[114] + dwdot17dscqss4 * dscqss_dsc[149] +
    dwdot17dscqss5 * dscqss_dsc[184] + dwdot17dscqss6 * dscqss_dsc[219] +
    dwdot17dscqss7 * dscqss_dsc[254] + dwdot17dscqss9 * dscqss_dsc[324] +
    dwdot17dscqss11 * dscqss_dsc[394] + dwdot17dscqss12 * dscqss_dsc[429] +
    dwdot17dscqss14 * dscqss_dsc[499] + dwdot17dscqss13 * dscqss_dsc[464] +
    dwdot17dscqss15 * dscqss_dsc[534] + dwdot17dscqss8 * dscqss_dsc[289] +
    dwdot17dscqss10 * dscqss_dsc[359];
  J[377] =
    dwdot17dsc10 + dwdot17dscqss0 * dscqss_dsc[10] +
    dwdot17dscqss16 * dscqss_dsc[570] + dwdot17dscqss1 * dscqss_dsc[45] +
    dwdot17dscqss17 * dscqss_dsc[605] + dwdot17dscqss2 * dscqss_dsc[80] +
    dwdot17dscqss3 * dscqss_dsc[115] + dwdot17dscqss4 * dscqss_dsc[150] +
    dwdot17dscqss5 * dscqss_dsc[185] + dwdot17dscqss6 * dscqss_dsc[220] +
    dwdot17dscqss7 * dscqss_dsc[255] + dwdot17dscqss9 * dscqss_dsc[325] +
    dwdot17dscqss11 * dscqss_dsc[395] + dwdot17dscqss12 * dscqss_dsc[430] +
    dwdot17dscqss14 * dscqss_dsc[500] + dwdot17dscqss13 * dscqss_dsc[465] +
    dwdot17dscqss15 * dscqss_dsc[535] + dwdot17dscqss8 * dscqss_dsc[290] +
    dwdot17dscqss10 * dscqss_dsc[360];
  J[413] =
    dwdot17dsc11 + dwdot17dscqss0 * dscqss_dsc[11] +
    dwdot17dscqss16 * dscqss_dsc[571] + dwdot17dscqss1 * dscqss_dsc[46] +
    dwdot17dscqss17 * dscqss_dsc[606] + dwdot17dscqss2 * dscqss_dsc[81] +
    dwdot17dscqss3 * dscqss_dsc[116] + dwdot17dscqss4 * dscqss_dsc[151] +
    dwdot17dscqss5 * dscqss_dsc[186] + dwdot17dscqss6 * dscqss_dsc[221] +
    dwdot17dscqss7 * dscqss_dsc[256] + dwdot17dscqss9 * dscqss_dsc[326] +
    dwdot17dscqss11 * dscqss_dsc[396] + dwdot17dscqss12 * dscqss_dsc[431] +
    dwdot17dscqss14 * dscqss_dsc[501] + dwdot17dscqss13 * dscqss_dsc[466] +
    dwdot17dscqss15 * dscqss_dsc[536] + dwdot17dscqss8 * dscqss_dsc[291] +
    dwdot17dscqss10 * dscqss_dsc[361];
  J[449] =
    dwdot17dsc12 + dwdot17dscqss0 * dscqss_dsc[12] +
    dwdot17dscqss16 * dscqss_dsc[572] + dwdot17dscqss1 * dscqss_dsc[47] +
    dwdot17dscqss17 * dscqss_dsc[607] + dwdot17dscqss2 * dscqss_dsc[82] +
    dwdot17dscqss3 * dscqss_dsc[117] + dwdot17dscqss4 * dscqss_dsc[152] +
    dwdot17dscqss5 * dscqss_dsc[187] + dwdot17dscqss6 * dscqss_dsc[222] +
    dwdot17dscqss7 * dscqss_dsc[257] + dwdot17dscqss9 * dscqss_dsc[327] +
    dwdot17dscqss11 * dscqss_dsc[397] + dwdot17dscqss12 * dscqss_dsc[432] +
    dwdot17dscqss14 * dscqss_dsc[502] + dwdot17dscqss13 * dscqss_dsc[467] +
    dwdot17dscqss15 * dscqss_dsc[537] + dwdot17dscqss8 * dscqss_dsc[292] +
    dwdot17dscqss10 * dscqss_dsc[362];
  J[485] =
    dwdot17dsc13 + dwdot17dscqss0 * dscqss_dsc[13] +
    dwdot17dscqss16 * dscqss_dsc[573] + dwdot17dscqss1 * dscqss_dsc[48] +
    dwdot17dscqss17 * dscqss_dsc[608] + dwdot17dscqss2 * dscqss_dsc[83] +
    dwdot17dscqss3 * dscqss_dsc[118] + dwdot17dscqss4 * dscqss_dsc[153] +
    dwdot17dscqss5 * dscqss_dsc[188] + dwdot17dscqss6 * dscqss_dsc[223] +
    dwdot17dscqss7 * dscqss_dsc[258] + dwdot17dscqss9 * dscqss_dsc[328] +
    dwdot17dscqss11 * dscqss_dsc[398] + dwdot17dscqss12 * dscqss_dsc[433] +
    dwdot17dscqss14 * dscqss_dsc[503] + dwdot17dscqss13 * dscqss_dsc[468] +
    dwdot17dscqss15 * dscqss_dsc[538] + dwdot17dscqss8 * dscqss_dsc[293] +
    dwdot17dscqss10 * dscqss_dsc[363];
  J[521] =
    dwdot17dsc14 + dwdot17dscqss0 * dscqss_dsc[14] +
    dwdot17dscqss16 * dscqss_dsc[574] + dwdot17dscqss1 * dscqss_dsc[49] +
    dwdot17dscqss17 * dscqss_dsc[609] + dwdot17dscqss2 * dscqss_dsc[84] +
    dwdot17dscqss3 * dscqss_dsc[119] + dwdot17dscqss4 * dscqss_dsc[154] +
    dwdot17dscqss5 * dscqss_dsc[189] + dwdot17dscqss6 * dscqss_dsc[224] +
    dwdot17dscqss7 * dscqss_dsc[259] + dwdot17dscqss9 * dscqss_dsc[329] +
    dwdot17dscqss11 * dscqss_dsc[399] + dwdot17dscqss12 * dscqss_dsc[434] +
    dwdot17dscqss14 * dscqss_dsc[504] + dwdot17dscqss13 * dscqss_dsc[469] +
    dwdot17dscqss15 * dscqss_dsc[539] + dwdot17dscqss8 * dscqss_dsc[294] +
    dwdot17dscqss10 * dscqss_dsc[364];
  J[557] =
    dwdot17dsc15 + dwdot17dscqss0 * dscqss_dsc[15] +
    dwdot17dscqss16 * dscqss_dsc[575] + dwdot17dscqss1 * dscqss_dsc[50] +
    dwdot17dscqss17 * dscqss_dsc[610] + dwdot17dscqss2 * dscqss_dsc[85] +
    dwdot17dscqss3 * dscqss_dsc[120] + dwdot17dscqss4 * dscqss_dsc[155] +
    dwdot17dscqss5 * dscqss_dsc[190] + dwdot17dscqss6 * dscqss_dsc[225] +
    dwdot17dscqss7 * dscqss_dsc[260] + dwdot17dscqss9 * dscqss_dsc[330] +
    dwdot17dscqss11 * dscqss_dsc[400] + dwdot17dscqss12 * dscqss_dsc[435] +
    dwdot17dscqss14 * dscqss_dsc[505] + dwdot17dscqss13 * dscqss_dsc[470] +
    dwdot17dscqss15 * dscqss_dsc[540] + dwdot17dscqss8 * dscqss_dsc[295] +
    dwdot17dscqss10 * dscqss_dsc[365];
  J[593] =
    dwdot17dsc16 + dwdot17dscqss0 * dscqss_dsc[16] +
    dwdot17dscqss16 * dscqss_dsc[576] + dwdot17dscqss1 * dscqss_dsc[51] +
    dwdot17dscqss17 * dscqss_dsc[611] + dwdot17dscqss2 * dscqss_dsc[86] +
    dwdot17dscqss3 * dscqss_dsc[121] + dwdot17dscqss4 * dscqss_dsc[156] +
    dwdot17dscqss5 * dscqss_dsc[191] + dwdot17dscqss6 * dscqss_dsc[226] +
    dwdot17dscqss7 * dscqss_dsc[261] + dwdot17dscqss9 * dscqss_dsc[331] +
    dwdot17dscqss11 * dscqss_dsc[401] + dwdot17dscqss12 * dscqss_dsc[436] +
    dwdot17dscqss14 * dscqss_dsc[506] + dwdot17dscqss13 * dscqss_dsc[471] +
    dwdot17dscqss15 * dscqss_dsc[541] + dwdot17dscqss8 * dscqss_dsc[296] +
    dwdot17dscqss10 * dscqss_dsc[366];
  J[629] =
    dwdot17dsc17 + dwdot17dscqss0 * dscqss_dsc[17] +
    dwdot17dscqss16 * dscqss_dsc[577] + dwdot17dscqss1 * dscqss_dsc[52] +
    dwdot17dscqss17 * dscqss_dsc[612] + dwdot17dscqss2 * dscqss_dsc[87] +
    dwdot17dscqss3 * dscqss_dsc[122] + dwdot17dscqss4 * dscqss_dsc[157] +
    dwdot17dscqss5 * dscqss_dsc[192] + dwdot17dscqss6 * dscqss_dsc[227] +
    dwdot17dscqss7 * dscqss_dsc[262] + dwdot17dscqss9 * dscqss_dsc[332] +
    dwdot17dscqss11 * dscqss_dsc[402] + dwdot17dscqss12 * dscqss_dsc[437] +
    dwdot17dscqss14 * dscqss_dsc[507] + dwdot17dscqss13 * dscqss_dsc[472] +
    dwdot17dscqss15 * dscqss_dsc[542] + dwdot17dscqss8 * dscqss_dsc[297] +
    dwdot17dscqss10 * dscqss_dsc[367];
  J[665] =
    dwdot17dsc18 + dwdot17dscqss0 * dscqss_dsc[18] +
    dwdot17dscqss16 * dscqss_dsc[578] + dwdot17dscqss1 * dscqss_dsc[53] +
    dwdot17dscqss17 * dscqss_dsc[613] + dwdot17dscqss2 * dscqss_dsc[88] +
    dwdot17dscqss3 * dscqss_dsc[123] + dwdot17dscqss4 * dscqss_dsc[158] +
    dwdot17dscqss5 * dscqss_dsc[193] + dwdot17dscqss6 * dscqss_dsc[228] +
    dwdot17dscqss7 * dscqss_dsc[263] + dwdot17dscqss9 * dscqss_dsc[333] +
    dwdot17dscqss11 * dscqss_dsc[403] + dwdot17dscqss12 * dscqss_dsc[438] +
    dwdot17dscqss14 * dscqss_dsc[508] + dwdot17dscqss13 * dscqss_dsc[473] +
    dwdot17dscqss15 * dscqss_dsc[543] + dwdot17dscqss8 * dscqss_dsc[298] +
    dwdot17dscqss10 * dscqss_dsc[368];
  J[701] =
    dwdot17dsc19 + dwdot17dscqss0 * dscqss_dsc[19] +
    dwdot17dscqss16 * dscqss_dsc[579] + dwdot17dscqss1 * dscqss_dsc[54] +
    dwdot17dscqss17 * dscqss_dsc[614] + dwdot17dscqss2 * dscqss_dsc[89] +
    dwdot17dscqss3 * dscqss_dsc[124] + dwdot17dscqss4 * dscqss_dsc[159] +
    dwdot17dscqss5 * dscqss_dsc[194] + dwdot17dscqss6 * dscqss_dsc[229] +
    dwdot17dscqss7 * dscqss_dsc[264] + dwdot17dscqss9 * dscqss_dsc[334] +
    dwdot17dscqss11 * dscqss_dsc[404] + dwdot17dscqss12 * dscqss_dsc[439] +
    dwdot17dscqss14 * dscqss_dsc[509] + dwdot17dscqss13 * dscqss_dsc[474] +
    dwdot17dscqss15 * dscqss_dsc[544] + dwdot17dscqss8 * dscqss_dsc[299] +
    dwdot17dscqss10 * dscqss_dsc[369];
  J[737] =
    dwdot17dsc20 + dwdot17dscqss0 * dscqss_dsc[20] +
    dwdot17dscqss16 * dscqss_dsc[580] + dwdot17dscqss1 * dscqss_dsc[55] +
    dwdot17dscqss17 * dscqss_dsc[615] + dwdot17dscqss2 * dscqss_dsc[90] +
    dwdot17dscqss3 * dscqss_dsc[125] + dwdot17dscqss4 * dscqss_dsc[160] +
    dwdot17dscqss5 * dscqss_dsc[195] + dwdot17dscqss6 * dscqss_dsc[230] +
    dwdot17dscqss7 * dscqss_dsc[265] + dwdot17dscqss9 * dscqss_dsc[335] +
    dwdot17dscqss11 * dscqss_dsc[405] + dwdot17dscqss12 * dscqss_dsc[440] +
    dwdot17dscqss14 * dscqss_dsc[510] + dwdot17dscqss13 * dscqss_dsc[475] +
    dwdot17dscqss15 * dscqss_dsc[545] + dwdot17dscqss8 * dscqss_dsc[300] +
    dwdot17dscqss10 * dscqss_dsc[370];
  J[773] =
    dwdot17dsc21 + dwdot17dscqss0 * dscqss_dsc[21] +
    dwdot17dscqss16 * dscqss_dsc[581] + dwdot17dscqss1 * dscqss_dsc[56] +
    dwdot17dscqss17 * dscqss_dsc[616] + dwdot17dscqss2 * dscqss_dsc[91] +
    dwdot17dscqss3 * dscqss_dsc[126] + dwdot17dscqss4 * dscqss_dsc[161] +
    dwdot17dscqss5 * dscqss_dsc[196] + dwdot17dscqss6 * dscqss_dsc[231] +
    dwdot17dscqss7 * dscqss_dsc[266] + dwdot17dscqss9 * dscqss_dsc[336] +
    dwdot17dscqss11 * dscqss_dsc[406] + dwdot17dscqss12 * dscqss_dsc[441] +
    dwdot17dscqss14 * dscqss_dsc[511] + dwdot17dscqss13 * dscqss_dsc[476] +
    dwdot17dscqss15 * dscqss_dsc[546] + dwdot17dscqss8 * dscqss_dsc[301] +
    dwdot17dscqss10 * dscqss_dsc[371];
  J[809] =
    dwdot17dsc22 + dwdot17dscqss0 * dscqss_dsc[22] +
    dwdot17dscqss16 * dscqss_dsc[582] + dwdot17dscqss1 * dscqss_dsc[57] +
    dwdot17dscqss17 * dscqss_dsc[617] + dwdot17dscqss2 * dscqss_dsc[92] +
    dwdot17dscqss3 * dscqss_dsc[127] + dwdot17dscqss4 * dscqss_dsc[162] +
    dwdot17dscqss5 * dscqss_dsc[197] + dwdot17dscqss6 * dscqss_dsc[232] +
    dwdot17dscqss7 * dscqss_dsc[267] + dwdot17dscqss9 * dscqss_dsc[337] +
    dwdot17dscqss11 * dscqss_dsc[407] + dwdot17dscqss12 * dscqss_dsc[442] +
    dwdot17dscqss14 * dscqss_dsc[512] + dwdot17dscqss13 * dscqss_dsc[477] +
    dwdot17dscqss15 * dscqss_dsc[547] + dwdot17dscqss8 * dscqss_dsc[302] +
    dwdot17dscqss10 * dscqss_dsc[372];
  J[845] =
    dwdot17dsc23 + dwdot17dscqss0 * dscqss_dsc[23] +
    dwdot17dscqss16 * dscqss_dsc[583] + dwdot17dscqss1 * dscqss_dsc[58] +
    dwdot17dscqss17 * dscqss_dsc[618] + dwdot17dscqss2 * dscqss_dsc[93] +
    dwdot17dscqss3 * dscqss_dsc[128] + dwdot17dscqss4 * dscqss_dsc[163] +
    dwdot17dscqss5 * dscqss_dsc[198] + dwdot17dscqss6 * dscqss_dsc[233] +
    dwdot17dscqss7 * dscqss_dsc[268] + dwdot17dscqss9 * dscqss_dsc[338] +
    dwdot17dscqss11 * dscqss_dsc[408] + dwdot17dscqss12 * dscqss_dsc[443] +
    dwdot17dscqss14 * dscqss_dsc[513] + dwdot17dscqss13 * dscqss_dsc[478] +
    dwdot17dscqss15 * dscqss_dsc[548] + dwdot17dscqss8 * dscqss_dsc[303] +
    dwdot17dscqss10 * dscqss_dsc[373];
  J[881] =
    dwdot17dsc24 + dwdot17dscqss0 * dscqss_dsc[24] +
    dwdot17dscqss16 * dscqss_dsc[584] + dwdot17dscqss1 * dscqss_dsc[59] +
    dwdot17dscqss17 * dscqss_dsc[619] + dwdot17dscqss2 * dscqss_dsc[94] +
    dwdot17dscqss3 * dscqss_dsc[129] + dwdot17dscqss4 * dscqss_dsc[164] +
    dwdot17dscqss5 * dscqss_dsc[199] + dwdot17dscqss6 * dscqss_dsc[234] +
    dwdot17dscqss7 * dscqss_dsc[269] + dwdot17dscqss9 * dscqss_dsc[339] +
    dwdot17dscqss11 * dscqss_dsc[409] + dwdot17dscqss12 * dscqss_dsc[444] +
    dwdot17dscqss14 * dscqss_dsc[514] + dwdot17dscqss13 * dscqss_dsc[479] +
    dwdot17dscqss15 * dscqss_dsc[549] + dwdot17dscqss8 * dscqss_dsc[304] +
    dwdot17dscqss10 * dscqss_dsc[374];
  J[917] =
    dwdot17dsc25 + dwdot17dscqss0 * dscqss_dsc[25] +
    dwdot17dscqss16 * dscqss_dsc[585] + dwdot17dscqss1 * dscqss_dsc[60] +
    dwdot17dscqss17 * dscqss_dsc[620] + dwdot17dscqss2 * dscqss_dsc[95] +
    dwdot17dscqss3 * dscqss_dsc[130] + dwdot17dscqss4 * dscqss_dsc[165] +
    dwdot17dscqss5 * dscqss_dsc[200] + dwdot17dscqss6 * dscqss_dsc[235] +
    dwdot17dscqss7 * dscqss_dsc[270] + dwdot17dscqss9 * dscqss_dsc[340] +
    dwdot17dscqss11 * dscqss_dsc[410] + dwdot17dscqss12 * dscqss_dsc[445] +
    dwdot17dscqss14 * dscqss_dsc[515] + dwdot17dscqss13 * dscqss_dsc[480] +
    dwdot17dscqss15 * dscqss_dsc[550] + dwdot17dscqss8 * dscqss_dsc[305] +
    dwdot17dscqss10 * dscqss_dsc[375];
  J[953] =
    dwdot17dsc26 + dwdot17dscqss0 * dscqss_dsc[26] +
    dwdot17dscqss16 * dscqss_dsc[586] + dwdot17dscqss1 * dscqss_dsc[61] +
    dwdot17dscqss17 * dscqss_dsc[621] + dwdot17dscqss2 * dscqss_dsc[96] +
    dwdot17dscqss3 * dscqss_dsc[131] + dwdot17dscqss4 * dscqss_dsc[166] +
    dwdot17dscqss5 * dscqss_dsc[201] + dwdot17dscqss6 * dscqss_dsc[236] +
    dwdot17dscqss7 * dscqss_dsc[271] + dwdot17dscqss9 * dscqss_dsc[341] +
    dwdot17dscqss11 * dscqss_dsc[411] + dwdot17dscqss12 * dscqss_dsc[446] +
    dwdot17dscqss14 * dscqss_dsc[516] + dwdot17dscqss13 * dscqss_dsc[481] +
    dwdot17dscqss15 * dscqss_dsc[551] + dwdot17dscqss8 * dscqss_dsc[306] +
    dwdot17dscqss10 * dscqss_dsc[376];
  J[989] =
    dwdot17dsc27 + dwdot17dscqss0 * dscqss_dsc[27] +
    dwdot17dscqss16 * dscqss_dsc[587] + dwdot17dscqss1 * dscqss_dsc[62] +
    dwdot17dscqss17 * dscqss_dsc[622] + dwdot17dscqss2 * dscqss_dsc[97] +
    dwdot17dscqss3 * dscqss_dsc[132] + dwdot17dscqss4 * dscqss_dsc[167] +
    dwdot17dscqss5 * dscqss_dsc[202] + dwdot17dscqss6 * dscqss_dsc[237] +
    dwdot17dscqss7 * dscqss_dsc[272] + dwdot17dscqss9 * dscqss_dsc[342] +
    dwdot17dscqss11 * dscqss_dsc[412] + dwdot17dscqss12 * dscqss_dsc[447] +
    dwdot17dscqss14 * dscqss_dsc[517] + dwdot17dscqss13 * dscqss_dsc[482] +
    dwdot17dscqss15 * dscqss_dsc[552] + dwdot17dscqss8 * dscqss_dsc[307] +
    dwdot17dscqss10 * dscqss_dsc[377];
  J[1025] =
    dwdot17dsc28 + dwdot17dscqss0 * dscqss_dsc[28] +
    dwdot17dscqss16 * dscqss_dsc[588] + dwdot17dscqss1 * dscqss_dsc[63] +
    dwdot17dscqss17 * dscqss_dsc[623] + dwdot17dscqss2 * dscqss_dsc[98] +
    dwdot17dscqss3 * dscqss_dsc[133] + dwdot17dscqss4 * dscqss_dsc[168] +
    dwdot17dscqss5 * dscqss_dsc[203] + dwdot17dscqss6 * dscqss_dsc[238] +
    dwdot17dscqss7 * dscqss_dsc[273] + dwdot17dscqss9 * dscqss_dsc[343] +
    dwdot17dscqss11 * dscqss_dsc[413] + dwdot17dscqss12 * dscqss_dsc[448] +
    dwdot17dscqss14 * dscqss_dsc[518] + dwdot17dscqss13 * dscqss_dsc[483] +
    dwdot17dscqss15 * dscqss_dsc[553] + dwdot17dscqss8 * dscqss_dsc[308] +
    dwdot17dscqss10 * dscqss_dsc[378];
  J[1061] =
    dwdot17dsc29 + dwdot17dscqss0 * dscqss_dsc[29] +
    dwdot17dscqss16 * dscqss_dsc[589] + dwdot17dscqss1 * dscqss_dsc[64] +
    dwdot17dscqss17 * dscqss_dsc[624] + dwdot17dscqss2 * dscqss_dsc[99] +
    dwdot17dscqss3 * dscqss_dsc[134] + dwdot17dscqss4 * dscqss_dsc[169] +
    dwdot17dscqss5 * dscqss_dsc[204] + dwdot17dscqss6 * dscqss_dsc[239] +
    dwdot17dscqss7 * dscqss_dsc[274] + dwdot17dscqss9 * dscqss_dsc[344] +
    dwdot17dscqss11 * dscqss_dsc[414] + dwdot17dscqss12 * dscqss_dsc[449] +
    dwdot17dscqss14 * dscqss_dsc[519] + dwdot17dscqss13 * dscqss_dsc[484] +
    dwdot17dscqss15 * dscqss_dsc[554] + dwdot17dscqss8 * dscqss_dsc[309] +
    dwdot17dscqss10 * dscqss_dsc[379];
  J[1097] =
    dwdot17dsc30 + dwdot17dscqss0 * dscqss_dsc[30] +
    dwdot17dscqss16 * dscqss_dsc[590] + dwdot17dscqss1 * dscqss_dsc[65] +
    dwdot17dscqss17 * dscqss_dsc[625] + dwdot17dscqss2 * dscqss_dsc[100] +
    dwdot17dscqss3 * dscqss_dsc[135] + dwdot17dscqss4 * dscqss_dsc[170] +
    dwdot17dscqss5 * dscqss_dsc[205] + dwdot17dscqss6 * dscqss_dsc[240] +
    dwdot17dscqss7 * dscqss_dsc[275] + dwdot17dscqss9 * dscqss_dsc[345] +
    dwdot17dscqss11 * dscqss_dsc[415] + dwdot17dscqss12 * dscqss_dsc[450] +
    dwdot17dscqss14 * dscqss_dsc[520] + dwdot17dscqss13 * dscqss_dsc[485] +
    dwdot17dscqss15 * dscqss_dsc[555] + dwdot17dscqss8 * dscqss_dsc[310] +
    dwdot17dscqss10 * dscqss_dsc[380];
  J[1133] =
    dwdot17dsc31 + dwdot17dscqss0 * dscqss_dsc[31] +
    dwdot17dscqss16 * dscqss_dsc[591] + dwdot17dscqss1 * dscqss_dsc[66] +
    dwdot17dscqss17 * dscqss_dsc[626] + dwdot17dscqss2 * dscqss_dsc[101] +
    dwdot17dscqss3 * dscqss_dsc[136] + dwdot17dscqss4 * dscqss_dsc[171] +
    dwdot17dscqss5 * dscqss_dsc[206] + dwdot17dscqss6 * dscqss_dsc[241] +
    dwdot17dscqss7 * dscqss_dsc[276] + dwdot17dscqss9 * dscqss_dsc[346] +
    dwdot17dscqss11 * dscqss_dsc[416] + dwdot17dscqss12 * dscqss_dsc[451] +
    dwdot17dscqss14 * dscqss_dsc[521] + dwdot17dscqss13 * dscqss_dsc[486] +
    dwdot17dscqss15 * dscqss_dsc[556] + dwdot17dscqss8 * dscqss_dsc[311] +
    dwdot17dscqss10 * dscqss_dsc[381];
  J[1169] =
    dwdot17dsc32 + dwdot17dscqss0 * dscqss_dsc[32] +
    dwdot17dscqss16 * dscqss_dsc[592] + dwdot17dscqss1 * dscqss_dsc[67] +
    dwdot17dscqss17 * dscqss_dsc[627] + dwdot17dscqss2 * dscqss_dsc[102] +
    dwdot17dscqss3 * dscqss_dsc[137] + dwdot17dscqss4 * dscqss_dsc[172] +
    dwdot17dscqss5 * dscqss_dsc[207] + dwdot17dscqss6 * dscqss_dsc[242] +
    dwdot17dscqss7 * dscqss_dsc[277] + dwdot17dscqss9 * dscqss_dsc[347] +
    dwdot17dscqss11 * dscqss_dsc[417] + dwdot17dscqss12 * dscqss_dsc[452] +
    dwdot17dscqss14 * dscqss_dsc[522] + dwdot17dscqss13 * dscqss_dsc[487] +
    dwdot17dscqss15 * dscqss_dsc[557] + dwdot17dscqss8 * dscqss_dsc[312] +
    dwdot17dscqss10 * dscqss_dsc[382];
  J[1205] =
    dwdot17dsc33 + dwdot17dscqss0 * dscqss_dsc[33] +
    dwdot17dscqss16 * dscqss_dsc[593] + dwdot17dscqss1 * dscqss_dsc[68] +
    dwdot17dscqss17 * dscqss_dsc[628] + dwdot17dscqss2 * dscqss_dsc[103] +
    dwdot17dscqss3 * dscqss_dsc[138] + dwdot17dscqss4 * dscqss_dsc[173] +
    dwdot17dscqss5 * dscqss_dsc[208] + dwdot17dscqss6 * dscqss_dsc[243] +
    dwdot17dscqss7 * dscqss_dsc[278] + dwdot17dscqss9 * dscqss_dsc[348] +
    dwdot17dscqss11 * dscqss_dsc[418] + dwdot17dscqss12 * dscqss_dsc[453] +
    dwdot17dscqss14 * dscqss_dsc[523] + dwdot17dscqss13 * dscqss_dsc[488] +
    dwdot17dscqss15 * dscqss_dsc[558] + dwdot17dscqss8 * dscqss_dsc[313] +
    dwdot17dscqss10 * dscqss_dsc[383];
  J[1241] =
    dwdot17dsc34 + dwdot17dscqss0 * dscqss_dsc[34] +
    dwdot17dscqss16 * dscqss_dsc[594] + dwdot17dscqss1 * dscqss_dsc[69] +
    dwdot17dscqss17 * dscqss_dsc[629] + dwdot17dscqss2 * dscqss_dsc[104] +
    dwdot17dscqss3 * dscqss_dsc[139] + dwdot17dscqss4 * dscqss_dsc[174] +
    dwdot17dscqss5 * dscqss_dsc[209] + dwdot17dscqss6 * dscqss_dsc[244] +
    dwdot17dscqss7 * dscqss_dsc[279] + dwdot17dscqss9 * dscqss_dsc[349] +
    dwdot17dscqss11 * dscqss_dsc[419] + dwdot17dscqss12 * dscqss_dsc[454] +
    dwdot17dscqss14 * dscqss_dsc[524] + dwdot17dscqss13 * dscqss_dsc[489] +
    dwdot17dscqss15 * dscqss_dsc[559] + dwdot17dscqss8 * dscqss_dsc[314] +
    dwdot17dscqss10 * dscqss_dsc[384];
  J[18] =
    dwdot18dsc0 + dwdot18dscqss0 * dscqss_dsc[0] +
    dwdot18dscqss16 * dscqss_dsc[560] + dwdot18dscqss1 * dscqss_dsc[35] +
    dwdot18dscqss17 * dscqss_dsc[595] + dwdot18dscqss2 * dscqss_dsc[70] +
    dwdot18dscqss3 * dscqss_dsc[105] + dwdot18dscqss4 * dscqss_dsc[140] +
    dwdot18dscqss5 * dscqss_dsc[175] + dwdot18dscqss6 * dscqss_dsc[210] +
    dwdot18dscqss7 * dscqss_dsc[245] + dwdot18dscqss9 * dscqss_dsc[315] +
    dwdot18dscqss11 * dscqss_dsc[385] + dwdot18dscqss12 * dscqss_dsc[420] +
    dwdot18dscqss14 * dscqss_dsc[490] + dwdot18dscqss13 * dscqss_dsc[455] +
    dwdot18dscqss15 * dscqss_dsc[525] + dwdot18dscqss8 * dscqss_dsc[280] +
    dwdot18dscqss10 * dscqss_dsc[350];
  J[54] =
    dwdot18dsc1 + dwdot18dscqss0 * dscqss_dsc[1] +
    dwdot18dscqss16 * dscqss_dsc[561] + dwdot18dscqss1 * dscqss_dsc[36] +
    dwdot18dscqss17 * dscqss_dsc[596] + dwdot18dscqss2 * dscqss_dsc[71] +
    dwdot18dscqss3 * dscqss_dsc[106] + dwdot18dscqss4 * dscqss_dsc[141] +
    dwdot18dscqss5 * dscqss_dsc[176] + dwdot18dscqss6 * dscqss_dsc[211] +
    dwdot18dscqss7 * dscqss_dsc[246] + dwdot18dscqss9 * dscqss_dsc[316] +
    dwdot18dscqss11 * dscqss_dsc[386] + dwdot18dscqss12 * dscqss_dsc[421] +
    dwdot18dscqss14 * dscqss_dsc[491] + dwdot18dscqss13 * dscqss_dsc[456] +
    dwdot18dscqss15 * dscqss_dsc[526] + dwdot18dscqss8 * dscqss_dsc[281] +
    dwdot18dscqss10 * dscqss_dsc[351];
  J[90] =
    dwdot18dsc2 + dwdot18dscqss0 * dscqss_dsc[2] +
    dwdot18dscqss16 * dscqss_dsc[562] + dwdot18dscqss1 * dscqss_dsc[37] +
    dwdot18dscqss17 * dscqss_dsc[597] + dwdot18dscqss2 * dscqss_dsc[72] +
    dwdot18dscqss3 * dscqss_dsc[107] + dwdot18dscqss4 * dscqss_dsc[142] +
    dwdot18dscqss5 * dscqss_dsc[177] + dwdot18dscqss6 * dscqss_dsc[212] +
    dwdot18dscqss7 * dscqss_dsc[247] + dwdot18dscqss9 * dscqss_dsc[317] +
    dwdot18dscqss11 * dscqss_dsc[387] + dwdot18dscqss12 * dscqss_dsc[422] +
    dwdot18dscqss14 * dscqss_dsc[492] + dwdot18dscqss13 * dscqss_dsc[457] +
    dwdot18dscqss15 * dscqss_dsc[527] + dwdot18dscqss8 * dscqss_dsc[282] +
    dwdot18dscqss10 * dscqss_dsc[352];
  J[126] =
    dwdot18dsc3 + dwdot18dscqss0 * dscqss_dsc[3] +
    dwdot18dscqss16 * dscqss_dsc[563] + dwdot18dscqss1 * dscqss_dsc[38] +
    dwdot18dscqss17 * dscqss_dsc[598] + dwdot18dscqss2 * dscqss_dsc[73] +
    dwdot18dscqss3 * dscqss_dsc[108] + dwdot18dscqss4 * dscqss_dsc[143] +
    dwdot18dscqss5 * dscqss_dsc[178] + dwdot18dscqss6 * dscqss_dsc[213] +
    dwdot18dscqss7 * dscqss_dsc[248] + dwdot18dscqss9 * dscqss_dsc[318] +
    dwdot18dscqss11 * dscqss_dsc[388] + dwdot18dscqss12 * dscqss_dsc[423] +
    dwdot18dscqss14 * dscqss_dsc[493] + dwdot18dscqss13 * dscqss_dsc[458] +
    dwdot18dscqss15 * dscqss_dsc[528] + dwdot18dscqss8 * dscqss_dsc[283] +
    dwdot18dscqss10 * dscqss_dsc[353];
  J[162] =
    dwdot18dsc4 + dwdot18dscqss0 * dscqss_dsc[4] +
    dwdot18dscqss16 * dscqss_dsc[564] + dwdot18dscqss1 * dscqss_dsc[39] +
    dwdot18dscqss17 * dscqss_dsc[599] + dwdot18dscqss2 * dscqss_dsc[74] +
    dwdot18dscqss3 * dscqss_dsc[109] + dwdot18dscqss4 * dscqss_dsc[144] +
    dwdot18dscqss5 * dscqss_dsc[179] + dwdot18dscqss6 * dscqss_dsc[214] +
    dwdot18dscqss7 * dscqss_dsc[249] + dwdot18dscqss9 * dscqss_dsc[319] +
    dwdot18dscqss11 * dscqss_dsc[389] + dwdot18dscqss12 * dscqss_dsc[424] +
    dwdot18dscqss14 * dscqss_dsc[494] + dwdot18dscqss13 * dscqss_dsc[459] +
    dwdot18dscqss15 * dscqss_dsc[529] + dwdot18dscqss8 * dscqss_dsc[284] +
    dwdot18dscqss10 * dscqss_dsc[354];
  J[198] =
    dwdot18dsc5 + dwdot18dscqss0 * dscqss_dsc[5] +
    dwdot18dscqss16 * dscqss_dsc[565] + dwdot18dscqss1 * dscqss_dsc[40] +
    dwdot18dscqss17 * dscqss_dsc[600] + dwdot18dscqss2 * dscqss_dsc[75] +
    dwdot18dscqss3 * dscqss_dsc[110] + dwdot18dscqss4 * dscqss_dsc[145] +
    dwdot18dscqss5 * dscqss_dsc[180] + dwdot18dscqss6 * dscqss_dsc[215] +
    dwdot18dscqss7 * dscqss_dsc[250] + dwdot18dscqss9 * dscqss_dsc[320] +
    dwdot18dscqss11 * dscqss_dsc[390] + dwdot18dscqss12 * dscqss_dsc[425] +
    dwdot18dscqss14 * dscqss_dsc[495] + dwdot18dscqss13 * dscqss_dsc[460] +
    dwdot18dscqss15 * dscqss_dsc[530] + dwdot18dscqss8 * dscqss_dsc[285] +
    dwdot18dscqss10 * dscqss_dsc[355];
  J[234] =
    dwdot18dsc6 + dwdot18dscqss0 * dscqss_dsc[6] +
    dwdot18dscqss16 * dscqss_dsc[566] + dwdot18dscqss1 * dscqss_dsc[41] +
    dwdot18dscqss17 * dscqss_dsc[601] + dwdot18dscqss2 * dscqss_dsc[76] +
    dwdot18dscqss3 * dscqss_dsc[111] + dwdot18dscqss4 * dscqss_dsc[146] +
    dwdot18dscqss5 * dscqss_dsc[181] + dwdot18dscqss6 * dscqss_dsc[216] +
    dwdot18dscqss7 * dscqss_dsc[251] + dwdot18dscqss9 * dscqss_dsc[321] +
    dwdot18dscqss11 * dscqss_dsc[391] + dwdot18dscqss12 * dscqss_dsc[426] +
    dwdot18dscqss14 * dscqss_dsc[496] + dwdot18dscqss13 * dscqss_dsc[461] +
    dwdot18dscqss15 * dscqss_dsc[531] + dwdot18dscqss8 * dscqss_dsc[286] +
    dwdot18dscqss10 * dscqss_dsc[356];
  J[270] =
    dwdot18dsc7 + dwdot18dscqss0 * dscqss_dsc[7] +
    dwdot18dscqss16 * dscqss_dsc[567] + dwdot18dscqss1 * dscqss_dsc[42] +
    dwdot18dscqss17 * dscqss_dsc[602] + dwdot18dscqss2 * dscqss_dsc[77] +
    dwdot18dscqss3 * dscqss_dsc[112] + dwdot18dscqss4 * dscqss_dsc[147] +
    dwdot18dscqss5 * dscqss_dsc[182] + dwdot18dscqss6 * dscqss_dsc[217] +
    dwdot18dscqss7 * dscqss_dsc[252] + dwdot18dscqss9 * dscqss_dsc[322] +
    dwdot18dscqss11 * dscqss_dsc[392] + dwdot18dscqss12 * dscqss_dsc[427] +
    dwdot18dscqss14 * dscqss_dsc[497] + dwdot18dscqss13 * dscqss_dsc[462] +
    dwdot18dscqss15 * dscqss_dsc[532] + dwdot18dscqss8 * dscqss_dsc[287] +
    dwdot18dscqss10 * dscqss_dsc[357];
  J[306] =
    dwdot18dsc8 + dwdot18dscqss0 * dscqss_dsc[8] +
    dwdot18dscqss16 * dscqss_dsc[568] + dwdot18dscqss1 * dscqss_dsc[43] +
    dwdot18dscqss17 * dscqss_dsc[603] + dwdot18dscqss2 * dscqss_dsc[78] +
    dwdot18dscqss3 * dscqss_dsc[113] + dwdot18dscqss4 * dscqss_dsc[148] +
    dwdot18dscqss5 * dscqss_dsc[183] + dwdot18dscqss6 * dscqss_dsc[218] +
    dwdot18dscqss7 * dscqss_dsc[253] + dwdot18dscqss9 * dscqss_dsc[323] +
    dwdot18dscqss11 * dscqss_dsc[393] + dwdot18dscqss12 * dscqss_dsc[428] +
    dwdot18dscqss14 * dscqss_dsc[498] + dwdot18dscqss13 * dscqss_dsc[463] +
    dwdot18dscqss15 * dscqss_dsc[533] + dwdot18dscqss8 * dscqss_dsc[288] +
    dwdot18dscqss10 * dscqss_dsc[358];
  J[342] =
    dwdot18dsc9 + dwdot18dscqss0 * dscqss_dsc[9] +
    dwdot18dscqss16 * dscqss_dsc[569] + dwdot18dscqss1 * dscqss_dsc[44] +
    dwdot18dscqss17 * dscqss_dsc[604] + dwdot18dscqss2 * dscqss_dsc[79] +
    dwdot18dscqss3 * dscqss_dsc[114] + dwdot18dscqss4 * dscqss_dsc[149] +
    dwdot18dscqss5 * dscqss_dsc[184] + dwdot18dscqss6 * dscqss_dsc[219] +
    dwdot18dscqss7 * dscqss_dsc[254] + dwdot18dscqss9 * dscqss_dsc[324] +
    dwdot18dscqss11 * dscqss_dsc[394] + dwdot18dscqss12 * dscqss_dsc[429] +
    dwdot18dscqss14 * dscqss_dsc[499] + dwdot18dscqss13 * dscqss_dsc[464] +
    dwdot18dscqss15 * dscqss_dsc[534] + dwdot18dscqss8 * dscqss_dsc[289] +
    dwdot18dscqss10 * dscqss_dsc[359];
  J[378] =
    dwdot18dsc10 + dwdot18dscqss0 * dscqss_dsc[10] +
    dwdot18dscqss16 * dscqss_dsc[570] + dwdot18dscqss1 * dscqss_dsc[45] +
    dwdot18dscqss17 * dscqss_dsc[605] + dwdot18dscqss2 * dscqss_dsc[80] +
    dwdot18dscqss3 * dscqss_dsc[115] + dwdot18dscqss4 * dscqss_dsc[150] +
    dwdot18dscqss5 * dscqss_dsc[185] + dwdot18dscqss6 * dscqss_dsc[220] +
    dwdot18dscqss7 * dscqss_dsc[255] + dwdot18dscqss9 * dscqss_dsc[325] +
    dwdot18dscqss11 * dscqss_dsc[395] + dwdot18dscqss12 * dscqss_dsc[430] +
    dwdot18dscqss14 * dscqss_dsc[500] + dwdot18dscqss13 * dscqss_dsc[465] +
    dwdot18dscqss15 * dscqss_dsc[535] + dwdot18dscqss8 * dscqss_dsc[290] +
    dwdot18dscqss10 * dscqss_dsc[360];
  J[414] =
    dwdot18dsc11 + dwdot18dscqss0 * dscqss_dsc[11] +
    dwdot18dscqss16 * dscqss_dsc[571] + dwdot18dscqss1 * dscqss_dsc[46] +
    dwdot18dscqss17 * dscqss_dsc[606] + dwdot18dscqss2 * dscqss_dsc[81] +
    dwdot18dscqss3 * dscqss_dsc[116] + dwdot18dscqss4 * dscqss_dsc[151] +
    dwdot18dscqss5 * dscqss_dsc[186] + dwdot18dscqss6 * dscqss_dsc[221] +
    dwdot18dscqss7 * dscqss_dsc[256] + dwdot18dscqss9 * dscqss_dsc[326] +
    dwdot18dscqss11 * dscqss_dsc[396] + dwdot18dscqss12 * dscqss_dsc[431] +
    dwdot18dscqss14 * dscqss_dsc[501] + dwdot18dscqss13 * dscqss_dsc[466] +
    dwdot18dscqss15 * dscqss_dsc[536] + dwdot18dscqss8 * dscqss_dsc[291] +
    dwdot18dscqss10 * dscqss_dsc[361];
  J[450] =
    dwdot18dsc12 + dwdot18dscqss0 * dscqss_dsc[12] +
    dwdot18dscqss16 * dscqss_dsc[572] + dwdot18dscqss1 * dscqss_dsc[47] +
    dwdot18dscqss17 * dscqss_dsc[607] + dwdot18dscqss2 * dscqss_dsc[82] +
    dwdot18dscqss3 * dscqss_dsc[117] + dwdot18dscqss4 * dscqss_dsc[152] +
    dwdot18dscqss5 * dscqss_dsc[187] + dwdot18dscqss6 * dscqss_dsc[222] +
    dwdot18dscqss7 * dscqss_dsc[257] + dwdot18dscqss9 * dscqss_dsc[327] +
    dwdot18dscqss11 * dscqss_dsc[397] + dwdot18dscqss12 * dscqss_dsc[432] +
    dwdot18dscqss14 * dscqss_dsc[502] + dwdot18dscqss13 * dscqss_dsc[467] +
    dwdot18dscqss15 * dscqss_dsc[537] + dwdot18dscqss8 * dscqss_dsc[292] +
    dwdot18dscqss10 * dscqss_dsc[362];
  J[486] =
    dwdot18dsc13 + dwdot18dscqss0 * dscqss_dsc[13] +
    dwdot18dscqss16 * dscqss_dsc[573] + dwdot18dscqss1 * dscqss_dsc[48] +
    dwdot18dscqss17 * dscqss_dsc[608] + dwdot18dscqss2 * dscqss_dsc[83] +
    dwdot18dscqss3 * dscqss_dsc[118] + dwdot18dscqss4 * dscqss_dsc[153] +
    dwdot18dscqss5 * dscqss_dsc[188] + dwdot18dscqss6 * dscqss_dsc[223] +
    dwdot18dscqss7 * dscqss_dsc[258] + dwdot18dscqss9 * dscqss_dsc[328] +
    dwdot18dscqss11 * dscqss_dsc[398] + dwdot18dscqss12 * dscqss_dsc[433] +
    dwdot18dscqss14 * dscqss_dsc[503] + dwdot18dscqss13 * dscqss_dsc[468] +
    dwdot18dscqss15 * dscqss_dsc[538] + dwdot18dscqss8 * dscqss_dsc[293] +
    dwdot18dscqss10 * dscqss_dsc[363];
  J[522] =
    dwdot18dsc14 + dwdot18dscqss0 * dscqss_dsc[14] +
    dwdot18dscqss16 * dscqss_dsc[574] + dwdot18dscqss1 * dscqss_dsc[49] +
    dwdot18dscqss17 * dscqss_dsc[609] + dwdot18dscqss2 * dscqss_dsc[84] +
    dwdot18dscqss3 * dscqss_dsc[119] + dwdot18dscqss4 * dscqss_dsc[154] +
    dwdot18dscqss5 * dscqss_dsc[189] + dwdot18dscqss6 * dscqss_dsc[224] +
    dwdot18dscqss7 * dscqss_dsc[259] + dwdot18dscqss9 * dscqss_dsc[329] +
    dwdot18dscqss11 * dscqss_dsc[399] + dwdot18dscqss12 * dscqss_dsc[434] +
    dwdot18dscqss14 * dscqss_dsc[504] + dwdot18dscqss13 * dscqss_dsc[469] +
    dwdot18dscqss15 * dscqss_dsc[539] + dwdot18dscqss8 * dscqss_dsc[294] +
    dwdot18dscqss10 * dscqss_dsc[364];
  J[558] =
    dwdot18dsc15 + dwdot18dscqss0 * dscqss_dsc[15] +
    dwdot18dscqss16 * dscqss_dsc[575] + dwdot18dscqss1 * dscqss_dsc[50] +
    dwdot18dscqss17 * dscqss_dsc[610] + dwdot18dscqss2 * dscqss_dsc[85] +
    dwdot18dscqss3 * dscqss_dsc[120] + dwdot18dscqss4 * dscqss_dsc[155] +
    dwdot18dscqss5 * dscqss_dsc[190] + dwdot18dscqss6 * dscqss_dsc[225] +
    dwdot18dscqss7 * dscqss_dsc[260] + dwdot18dscqss9 * dscqss_dsc[330] +
    dwdot18dscqss11 * dscqss_dsc[400] + dwdot18dscqss12 * dscqss_dsc[435] +
    dwdot18dscqss14 * dscqss_dsc[505] + dwdot18dscqss13 * dscqss_dsc[470] +
    dwdot18dscqss15 * dscqss_dsc[540] + dwdot18dscqss8 * dscqss_dsc[295] +
    dwdot18dscqss10 * dscqss_dsc[365];
  J[594] =
    dwdot18dsc16 + dwdot18dscqss0 * dscqss_dsc[16] +
    dwdot18dscqss16 * dscqss_dsc[576] + dwdot18dscqss1 * dscqss_dsc[51] +
    dwdot18dscqss17 * dscqss_dsc[611] + dwdot18dscqss2 * dscqss_dsc[86] +
    dwdot18dscqss3 * dscqss_dsc[121] + dwdot18dscqss4 * dscqss_dsc[156] +
    dwdot18dscqss5 * dscqss_dsc[191] + dwdot18dscqss6 * dscqss_dsc[226] +
    dwdot18dscqss7 * dscqss_dsc[261] + dwdot18dscqss9 * dscqss_dsc[331] +
    dwdot18dscqss11 * dscqss_dsc[401] + dwdot18dscqss12 * dscqss_dsc[436] +
    dwdot18dscqss14 * dscqss_dsc[506] + dwdot18dscqss13 * dscqss_dsc[471] +
    dwdot18dscqss15 * dscqss_dsc[541] + dwdot18dscqss8 * dscqss_dsc[296] +
    dwdot18dscqss10 * dscqss_dsc[366];
  J[630] =
    dwdot18dsc17 + dwdot18dscqss0 * dscqss_dsc[17] +
    dwdot18dscqss16 * dscqss_dsc[577] + dwdot18dscqss1 * dscqss_dsc[52] +
    dwdot18dscqss17 * dscqss_dsc[612] + dwdot18dscqss2 * dscqss_dsc[87] +
    dwdot18dscqss3 * dscqss_dsc[122] + dwdot18dscqss4 * dscqss_dsc[157] +
    dwdot18dscqss5 * dscqss_dsc[192] + dwdot18dscqss6 * dscqss_dsc[227] +
    dwdot18dscqss7 * dscqss_dsc[262] + dwdot18dscqss9 * dscqss_dsc[332] +
    dwdot18dscqss11 * dscqss_dsc[402] + dwdot18dscqss12 * dscqss_dsc[437] +
    dwdot18dscqss14 * dscqss_dsc[507] + dwdot18dscqss13 * dscqss_dsc[472] +
    dwdot18dscqss15 * dscqss_dsc[542] + dwdot18dscqss8 * dscqss_dsc[297] +
    dwdot18dscqss10 * dscqss_dsc[367];
  J[666] =
    dwdot18dsc18 + dwdot18dscqss0 * dscqss_dsc[18] +
    dwdot18dscqss16 * dscqss_dsc[578] + dwdot18dscqss1 * dscqss_dsc[53] +
    dwdot18dscqss17 * dscqss_dsc[613] + dwdot18dscqss2 * dscqss_dsc[88] +
    dwdot18dscqss3 * dscqss_dsc[123] + dwdot18dscqss4 * dscqss_dsc[158] +
    dwdot18dscqss5 * dscqss_dsc[193] + dwdot18dscqss6 * dscqss_dsc[228] +
    dwdot18dscqss7 * dscqss_dsc[263] + dwdot18dscqss9 * dscqss_dsc[333] +
    dwdot18dscqss11 * dscqss_dsc[403] + dwdot18dscqss12 * dscqss_dsc[438] +
    dwdot18dscqss14 * dscqss_dsc[508] + dwdot18dscqss13 * dscqss_dsc[473] +
    dwdot18dscqss15 * dscqss_dsc[543] + dwdot18dscqss8 * dscqss_dsc[298] +
    dwdot18dscqss10 * dscqss_dsc[368];
  J[702] =
    dwdot18dsc19 + dwdot18dscqss0 * dscqss_dsc[19] +
    dwdot18dscqss16 * dscqss_dsc[579] + dwdot18dscqss1 * dscqss_dsc[54] +
    dwdot18dscqss17 * dscqss_dsc[614] + dwdot18dscqss2 * dscqss_dsc[89] +
    dwdot18dscqss3 * dscqss_dsc[124] + dwdot18dscqss4 * dscqss_dsc[159] +
    dwdot18dscqss5 * dscqss_dsc[194] + dwdot18dscqss6 * dscqss_dsc[229] +
    dwdot18dscqss7 * dscqss_dsc[264] + dwdot18dscqss9 * dscqss_dsc[334] +
    dwdot18dscqss11 * dscqss_dsc[404] + dwdot18dscqss12 * dscqss_dsc[439] +
    dwdot18dscqss14 * dscqss_dsc[509] + dwdot18dscqss13 * dscqss_dsc[474] +
    dwdot18dscqss15 * dscqss_dsc[544] + dwdot18dscqss8 * dscqss_dsc[299] +
    dwdot18dscqss10 * dscqss_dsc[369];
  J[738] =
    dwdot18dsc20 + dwdot18dscqss0 * dscqss_dsc[20] +
    dwdot18dscqss16 * dscqss_dsc[580] + dwdot18dscqss1 * dscqss_dsc[55] +
    dwdot18dscqss17 * dscqss_dsc[615] + dwdot18dscqss2 * dscqss_dsc[90] +
    dwdot18dscqss3 * dscqss_dsc[125] + dwdot18dscqss4 * dscqss_dsc[160] +
    dwdot18dscqss5 * dscqss_dsc[195] + dwdot18dscqss6 * dscqss_dsc[230] +
    dwdot18dscqss7 * dscqss_dsc[265] + dwdot18dscqss9 * dscqss_dsc[335] +
    dwdot18dscqss11 * dscqss_dsc[405] + dwdot18dscqss12 * dscqss_dsc[440] +
    dwdot18dscqss14 * dscqss_dsc[510] + dwdot18dscqss13 * dscqss_dsc[475] +
    dwdot18dscqss15 * dscqss_dsc[545] + dwdot18dscqss8 * dscqss_dsc[300] +
    dwdot18dscqss10 * dscqss_dsc[370];
  J[774] =
    dwdot18dsc21 + dwdot18dscqss0 * dscqss_dsc[21] +
    dwdot18dscqss16 * dscqss_dsc[581] + dwdot18dscqss1 * dscqss_dsc[56] +
    dwdot18dscqss17 * dscqss_dsc[616] + dwdot18dscqss2 * dscqss_dsc[91] +
    dwdot18dscqss3 * dscqss_dsc[126] + dwdot18dscqss4 * dscqss_dsc[161] +
    dwdot18dscqss5 * dscqss_dsc[196] + dwdot18dscqss6 * dscqss_dsc[231] +
    dwdot18dscqss7 * dscqss_dsc[266] + dwdot18dscqss9 * dscqss_dsc[336] +
    dwdot18dscqss11 * dscqss_dsc[406] + dwdot18dscqss12 * dscqss_dsc[441] +
    dwdot18dscqss14 * dscqss_dsc[511] + dwdot18dscqss13 * dscqss_dsc[476] +
    dwdot18dscqss15 * dscqss_dsc[546] + dwdot18dscqss8 * dscqss_dsc[301] +
    dwdot18dscqss10 * dscqss_dsc[371];
  J[810] =
    dwdot18dsc22 + dwdot18dscqss0 * dscqss_dsc[22] +
    dwdot18dscqss16 * dscqss_dsc[582] + dwdot18dscqss1 * dscqss_dsc[57] +
    dwdot18dscqss17 * dscqss_dsc[617] + dwdot18dscqss2 * dscqss_dsc[92] +
    dwdot18dscqss3 * dscqss_dsc[127] + dwdot18dscqss4 * dscqss_dsc[162] +
    dwdot18dscqss5 * dscqss_dsc[197] + dwdot18dscqss6 * dscqss_dsc[232] +
    dwdot18dscqss7 * dscqss_dsc[267] + dwdot18dscqss9 * dscqss_dsc[337] +
    dwdot18dscqss11 * dscqss_dsc[407] + dwdot18dscqss12 * dscqss_dsc[442] +
    dwdot18dscqss14 * dscqss_dsc[512] + dwdot18dscqss13 * dscqss_dsc[477] +
    dwdot18dscqss15 * dscqss_dsc[547] + dwdot18dscqss8 * dscqss_dsc[302] +
    dwdot18dscqss10 * dscqss_dsc[372];
  J[846] =
    dwdot18dsc23 + dwdot18dscqss0 * dscqss_dsc[23] +
    dwdot18dscqss16 * dscqss_dsc[583] + dwdot18dscqss1 * dscqss_dsc[58] +
    dwdot18dscqss17 * dscqss_dsc[618] + dwdot18dscqss2 * dscqss_dsc[93] +
    dwdot18dscqss3 * dscqss_dsc[128] + dwdot18dscqss4 * dscqss_dsc[163] +
    dwdot18dscqss5 * dscqss_dsc[198] + dwdot18dscqss6 * dscqss_dsc[233] +
    dwdot18dscqss7 * dscqss_dsc[268] + dwdot18dscqss9 * dscqss_dsc[338] +
    dwdot18dscqss11 * dscqss_dsc[408] + dwdot18dscqss12 * dscqss_dsc[443] +
    dwdot18dscqss14 * dscqss_dsc[513] + dwdot18dscqss13 * dscqss_dsc[478] +
    dwdot18dscqss15 * dscqss_dsc[548] + dwdot18dscqss8 * dscqss_dsc[303] +
    dwdot18dscqss10 * dscqss_dsc[373];
  J[882] =
    dwdot18dsc24 + dwdot18dscqss0 * dscqss_dsc[24] +
    dwdot18dscqss16 * dscqss_dsc[584] + dwdot18dscqss1 * dscqss_dsc[59] +
    dwdot18dscqss17 * dscqss_dsc[619] + dwdot18dscqss2 * dscqss_dsc[94] +
    dwdot18dscqss3 * dscqss_dsc[129] + dwdot18dscqss4 * dscqss_dsc[164] +
    dwdot18dscqss5 * dscqss_dsc[199] + dwdot18dscqss6 * dscqss_dsc[234] +
    dwdot18dscqss7 * dscqss_dsc[269] + dwdot18dscqss9 * dscqss_dsc[339] +
    dwdot18dscqss11 * dscqss_dsc[409] + dwdot18dscqss12 * dscqss_dsc[444] +
    dwdot18dscqss14 * dscqss_dsc[514] + dwdot18dscqss13 * dscqss_dsc[479] +
    dwdot18dscqss15 * dscqss_dsc[549] + dwdot18dscqss8 * dscqss_dsc[304] +
    dwdot18dscqss10 * dscqss_dsc[374];
  J[918] =
    dwdot18dsc25 + dwdot18dscqss0 * dscqss_dsc[25] +
    dwdot18dscqss16 * dscqss_dsc[585] + dwdot18dscqss1 * dscqss_dsc[60] +
    dwdot18dscqss17 * dscqss_dsc[620] + dwdot18dscqss2 * dscqss_dsc[95] +
    dwdot18dscqss3 * dscqss_dsc[130] + dwdot18dscqss4 * dscqss_dsc[165] +
    dwdot18dscqss5 * dscqss_dsc[200] + dwdot18dscqss6 * dscqss_dsc[235] +
    dwdot18dscqss7 * dscqss_dsc[270] + dwdot18dscqss9 * dscqss_dsc[340] +
    dwdot18dscqss11 * dscqss_dsc[410] + dwdot18dscqss12 * dscqss_dsc[445] +
    dwdot18dscqss14 * dscqss_dsc[515] + dwdot18dscqss13 * dscqss_dsc[480] +
    dwdot18dscqss15 * dscqss_dsc[550] + dwdot18dscqss8 * dscqss_dsc[305] +
    dwdot18dscqss10 * dscqss_dsc[375];
  J[954] =
    dwdot18dsc26 + dwdot18dscqss0 * dscqss_dsc[26] +
    dwdot18dscqss16 * dscqss_dsc[586] + dwdot18dscqss1 * dscqss_dsc[61] +
    dwdot18dscqss17 * dscqss_dsc[621] + dwdot18dscqss2 * dscqss_dsc[96] +
    dwdot18dscqss3 * dscqss_dsc[131] + dwdot18dscqss4 * dscqss_dsc[166] +
    dwdot18dscqss5 * dscqss_dsc[201] + dwdot18dscqss6 * dscqss_dsc[236] +
    dwdot18dscqss7 * dscqss_dsc[271] + dwdot18dscqss9 * dscqss_dsc[341] +
    dwdot18dscqss11 * dscqss_dsc[411] + dwdot18dscqss12 * dscqss_dsc[446] +
    dwdot18dscqss14 * dscqss_dsc[516] + dwdot18dscqss13 * dscqss_dsc[481] +
    dwdot18dscqss15 * dscqss_dsc[551] + dwdot18dscqss8 * dscqss_dsc[306] +
    dwdot18dscqss10 * dscqss_dsc[376];
  J[990] =
    dwdot18dsc27 + dwdot18dscqss0 * dscqss_dsc[27] +
    dwdot18dscqss16 * dscqss_dsc[587] + dwdot18dscqss1 * dscqss_dsc[62] +
    dwdot18dscqss17 * dscqss_dsc[622] + dwdot18dscqss2 * dscqss_dsc[97] +
    dwdot18dscqss3 * dscqss_dsc[132] + dwdot18dscqss4 * dscqss_dsc[167] +
    dwdot18dscqss5 * dscqss_dsc[202] + dwdot18dscqss6 * dscqss_dsc[237] +
    dwdot18dscqss7 * dscqss_dsc[272] + dwdot18dscqss9 * dscqss_dsc[342] +
    dwdot18dscqss11 * dscqss_dsc[412] + dwdot18dscqss12 * dscqss_dsc[447] +
    dwdot18dscqss14 * dscqss_dsc[517] + dwdot18dscqss13 * dscqss_dsc[482] +
    dwdot18dscqss15 * dscqss_dsc[552] + dwdot18dscqss8 * dscqss_dsc[307] +
    dwdot18dscqss10 * dscqss_dsc[377];
  J[1026] =
    dwdot18dsc28 + dwdot18dscqss0 * dscqss_dsc[28] +
    dwdot18dscqss16 * dscqss_dsc[588] + dwdot18dscqss1 * dscqss_dsc[63] +
    dwdot18dscqss17 * dscqss_dsc[623] + dwdot18dscqss2 * dscqss_dsc[98] +
    dwdot18dscqss3 * dscqss_dsc[133] + dwdot18dscqss4 * dscqss_dsc[168] +
    dwdot18dscqss5 * dscqss_dsc[203] + dwdot18dscqss6 * dscqss_dsc[238] +
    dwdot18dscqss7 * dscqss_dsc[273] + dwdot18dscqss9 * dscqss_dsc[343] +
    dwdot18dscqss11 * dscqss_dsc[413] + dwdot18dscqss12 * dscqss_dsc[448] +
    dwdot18dscqss14 * dscqss_dsc[518] + dwdot18dscqss13 * dscqss_dsc[483] +
    dwdot18dscqss15 * dscqss_dsc[553] + dwdot18dscqss8 * dscqss_dsc[308] +
    dwdot18dscqss10 * dscqss_dsc[378];
  J[1062] =
    dwdot18dsc29 + dwdot18dscqss0 * dscqss_dsc[29] +
    dwdot18dscqss16 * dscqss_dsc[589] + dwdot18dscqss1 * dscqss_dsc[64] +
    dwdot18dscqss17 * dscqss_dsc[624] + dwdot18dscqss2 * dscqss_dsc[99] +
    dwdot18dscqss3 * dscqss_dsc[134] + dwdot18dscqss4 * dscqss_dsc[169] +
    dwdot18dscqss5 * dscqss_dsc[204] + dwdot18dscqss6 * dscqss_dsc[239] +
    dwdot18dscqss7 * dscqss_dsc[274] + dwdot18dscqss9 * dscqss_dsc[344] +
    dwdot18dscqss11 * dscqss_dsc[414] + dwdot18dscqss12 * dscqss_dsc[449] +
    dwdot18dscqss14 * dscqss_dsc[519] + dwdot18dscqss13 * dscqss_dsc[484] +
    dwdot18dscqss15 * dscqss_dsc[554] + dwdot18dscqss8 * dscqss_dsc[309] +
    dwdot18dscqss10 * dscqss_dsc[379];
  J[1098] =
    dwdot18dsc30 + dwdot18dscqss0 * dscqss_dsc[30] +
    dwdot18dscqss16 * dscqss_dsc[590] + dwdot18dscqss1 * dscqss_dsc[65] +
    dwdot18dscqss17 * dscqss_dsc[625] + dwdot18dscqss2 * dscqss_dsc[100] +
    dwdot18dscqss3 * dscqss_dsc[135] + dwdot18dscqss4 * dscqss_dsc[170] +
    dwdot18dscqss5 * dscqss_dsc[205] + dwdot18dscqss6 * dscqss_dsc[240] +
    dwdot18dscqss7 * dscqss_dsc[275] + dwdot18dscqss9 * dscqss_dsc[345] +
    dwdot18dscqss11 * dscqss_dsc[415] + dwdot18dscqss12 * dscqss_dsc[450] +
    dwdot18dscqss14 * dscqss_dsc[520] + dwdot18dscqss13 * dscqss_dsc[485] +
    dwdot18dscqss15 * dscqss_dsc[555] + dwdot18dscqss8 * dscqss_dsc[310] +
    dwdot18dscqss10 * dscqss_dsc[380];
  J[1134] =
    dwdot18dsc31 + dwdot18dscqss0 * dscqss_dsc[31] +
    dwdot18dscqss16 * dscqss_dsc[591] + dwdot18dscqss1 * dscqss_dsc[66] +
    dwdot18dscqss17 * dscqss_dsc[626] + dwdot18dscqss2 * dscqss_dsc[101] +
    dwdot18dscqss3 * dscqss_dsc[136] + dwdot18dscqss4 * dscqss_dsc[171] +
    dwdot18dscqss5 * dscqss_dsc[206] + dwdot18dscqss6 * dscqss_dsc[241] +
    dwdot18dscqss7 * dscqss_dsc[276] + dwdot18dscqss9 * dscqss_dsc[346] +
    dwdot18dscqss11 * dscqss_dsc[416] + dwdot18dscqss12 * dscqss_dsc[451] +
    dwdot18dscqss14 * dscqss_dsc[521] + dwdot18dscqss13 * dscqss_dsc[486] +
    dwdot18dscqss15 * dscqss_dsc[556] + dwdot18dscqss8 * dscqss_dsc[311] +
    dwdot18dscqss10 * dscqss_dsc[381];
  J[1170] =
    dwdot18dsc32 + dwdot18dscqss0 * dscqss_dsc[32] +
    dwdot18dscqss16 * dscqss_dsc[592] + dwdot18dscqss1 * dscqss_dsc[67] +
    dwdot18dscqss17 * dscqss_dsc[627] + dwdot18dscqss2 * dscqss_dsc[102] +
    dwdot18dscqss3 * dscqss_dsc[137] + dwdot18dscqss4 * dscqss_dsc[172] +
    dwdot18dscqss5 * dscqss_dsc[207] + dwdot18dscqss6 * dscqss_dsc[242] +
    dwdot18dscqss7 * dscqss_dsc[277] + dwdot18dscqss9 * dscqss_dsc[347] +
    dwdot18dscqss11 * dscqss_dsc[417] + dwdot18dscqss12 * dscqss_dsc[452] +
    dwdot18dscqss14 * dscqss_dsc[522] + dwdot18dscqss13 * dscqss_dsc[487] +
    dwdot18dscqss15 * dscqss_dsc[557] + dwdot18dscqss8 * dscqss_dsc[312] +
    dwdot18dscqss10 * dscqss_dsc[382];
  J[1206] =
    dwdot18dsc33 + dwdot18dscqss0 * dscqss_dsc[33] +
    dwdot18dscqss16 * dscqss_dsc[593] + dwdot18dscqss1 * dscqss_dsc[68] +
    dwdot18dscqss17 * dscqss_dsc[628] + dwdot18dscqss2 * dscqss_dsc[103] +
    dwdot18dscqss3 * dscqss_dsc[138] + dwdot18dscqss4 * dscqss_dsc[173] +
    dwdot18dscqss5 * dscqss_dsc[208] + dwdot18dscqss6 * dscqss_dsc[243] +
    dwdot18dscqss7 * dscqss_dsc[278] + dwdot18dscqss9 * dscqss_dsc[348] +
    dwdot18dscqss11 * dscqss_dsc[418] + dwdot18dscqss12 * dscqss_dsc[453] +
    dwdot18dscqss14 * dscqss_dsc[523] + dwdot18dscqss13 * dscqss_dsc[488] +
    dwdot18dscqss15 * dscqss_dsc[558] + dwdot18dscqss8 * dscqss_dsc[313] +
    dwdot18dscqss10 * dscqss_dsc[383];
  J[1242] =
    dwdot18dsc34 + dwdot18dscqss0 * dscqss_dsc[34] +
    dwdot18dscqss16 * dscqss_dsc[594] + dwdot18dscqss1 * dscqss_dsc[69] +
    dwdot18dscqss17 * dscqss_dsc[629] + dwdot18dscqss2 * dscqss_dsc[104] +
    dwdot18dscqss3 * dscqss_dsc[139] + dwdot18dscqss4 * dscqss_dsc[174] +
    dwdot18dscqss5 * dscqss_dsc[209] + dwdot18dscqss6 * dscqss_dsc[244] +
    dwdot18dscqss7 * dscqss_dsc[279] + dwdot18dscqss9 * dscqss_dsc[349] +
    dwdot18dscqss11 * dscqss_dsc[419] + dwdot18dscqss12 * dscqss_dsc[454] +
    dwdot18dscqss14 * dscqss_dsc[524] + dwdot18dscqss13 * dscqss_dsc[489] +
    dwdot18dscqss15 * dscqss_dsc[559] + dwdot18dscqss8 * dscqss_dsc[314] +
    dwdot18dscqss10 * dscqss_dsc[384];
  J[19] =
    dwdot19dsc0 + dwdot19dscqss0 * dscqss_dsc[0] +
    dwdot19dscqss16 * dscqss_dsc[560] + dwdot19dscqss1 * dscqss_dsc[35] +
    dwdot19dscqss17 * dscqss_dsc[595] + dwdot19dscqss2 * dscqss_dsc[70] +
    dwdot19dscqss3 * dscqss_dsc[105] + dwdot19dscqss4 * dscqss_dsc[140] +
    dwdot19dscqss5 * dscqss_dsc[175] + dwdot19dscqss6 * dscqss_dsc[210] +
    dwdot19dscqss7 * dscqss_dsc[245] + dwdot19dscqss9 * dscqss_dsc[315] +
    dwdot19dscqss11 * dscqss_dsc[385] + dwdot19dscqss12 * dscqss_dsc[420] +
    dwdot19dscqss14 * dscqss_dsc[490] + dwdot19dscqss13 * dscqss_dsc[455] +
    dwdot19dscqss15 * dscqss_dsc[525] + dwdot19dscqss8 * dscqss_dsc[280] +
    dwdot19dscqss10 * dscqss_dsc[350];
  J[55] =
    dwdot19dsc1 + dwdot19dscqss0 * dscqss_dsc[1] +
    dwdot19dscqss16 * dscqss_dsc[561] + dwdot19dscqss1 * dscqss_dsc[36] +
    dwdot19dscqss17 * dscqss_dsc[596] + dwdot19dscqss2 * dscqss_dsc[71] +
    dwdot19dscqss3 * dscqss_dsc[106] + dwdot19dscqss4 * dscqss_dsc[141] +
    dwdot19dscqss5 * dscqss_dsc[176] + dwdot19dscqss6 * dscqss_dsc[211] +
    dwdot19dscqss7 * dscqss_dsc[246] + dwdot19dscqss9 * dscqss_dsc[316] +
    dwdot19dscqss11 * dscqss_dsc[386] + dwdot19dscqss12 * dscqss_dsc[421] +
    dwdot19dscqss14 * dscqss_dsc[491] + dwdot19dscqss13 * dscqss_dsc[456] +
    dwdot19dscqss15 * dscqss_dsc[526] + dwdot19dscqss8 * dscqss_dsc[281] +
    dwdot19dscqss10 * dscqss_dsc[351];
  J[91] =
    dwdot19dsc2 + dwdot19dscqss0 * dscqss_dsc[2] +
    dwdot19dscqss16 * dscqss_dsc[562] + dwdot19dscqss1 * dscqss_dsc[37] +
    dwdot19dscqss17 * dscqss_dsc[597] + dwdot19dscqss2 * dscqss_dsc[72] +
    dwdot19dscqss3 * dscqss_dsc[107] + dwdot19dscqss4 * dscqss_dsc[142] +
    dwdot19dscqss5 * dscqss_dsc[177] + dwdot19dscqss6 * dscqss_dsc[212] +
    dwdot19dscqss7 * dscqss_dsc[247] + dwdot19dscqss9 * dscqss_dsc[317] +
    dwdot19dscqss11 * dscqss_dsc[387] + dwdot19dscqss12 * dscqss_dsc[422] +
    dwdot19dscqss14 * dscqss_dsc[492] + dwdot19dscqss13 * dscqss_dsc[457] +
    dwdot19dscqss15 * dscqss_dsc[527] + dwdot19dscqss8 * dscqss_dsc[282] +
    dwdot19dscqss10 * dscqss_dsc[352];
  J[127] =
    dwdot19dsc3 + dwdot19dscqss0 * dscqss_dsc[3] +
    dwdot19dscqss16 * dscqss_dsc[563] + dwdot19dscqss1 * dscqss_dsc[38] +
    dwdot19dscqss17 * dscqss_dsc[598] + dwdot19dscqss2 * dscqss_dsc[73] +
    dwdot19dscqss3 * dscqss_dsc[108] + dwdot19dscqss4 * dscqss_dsc[143] +
    dwdot19dscqss5 * dscqss_dsc[178] + dwdot19dscqss6 * dscqss_dsc[213] +
    dwdot19dscqss7 * dscqss_dsc[248] + dwdot19dscqss9 * dscqss_dsc[318] +
    dwdot19dscqss11 * dscqss_dsc[388] + dwdot19dscqss12 * dscqss_dsc[423] +
    dwdot19dscqss14 * dscqss_dsc[493] + dwdot19dscqss13 * dscqss_dsc[458] +
    dwdot19dscqss15 * dscqss_dsc[528] + dwdot19dscqss8 * dscqss_dsc[283] +
    dwdot19dscqss10 * dscqss_dsc[353];
  J[163] =
    dwdot19dsc4 + dwdot19dscqss0 * dscqss_dsc[4] +
    dwdot19dscqss16 * dscqss_dsc[564] + dwdot19dscqss1 * dscqss_dsc[39] +
    dwdot19dscqss17 * dscqss_dsc[599] + dwdot19dscqss2 * dscqss_dsc[74] +
    dwdot19dscqss3 * dscqss_dsc[109] + dwdot19dscqss4 * dscqss_dsc[144] +
    dwdot19dscqss5 * dscqss_dsc[179] + dwdot19dscqss6 * dscqss_dsc[214] +
    dwdot19dscqss7 * dscqss_dsc[249] + dwdot19dscqss9 * dscqss_dsc[319] +
    dwdot19dscqss11 * dscqss_dsc[389] + dwdot19dscqss12 * dscqss_dsc[424] +
    dwdot19dscqss14 * dscqss_dsc[494] + dwdot19dscqss13 * dscqss_dsc[459] +
    dwdot19dscqss15 * dscqss_dsc[529] + dwdot19dscqss8 * dscqss_dsc[284] +
    dwdot19dscqss10 * dscqss_dsc[354];
  J[199] =
    dwdot19dsc5 + dwdot19dscqss0 * dscqss_dsc[5] +
    dwdot19dscqss16 * dscqss_dsc[565] + dwdot19dscqss1 * dscqss_dsc[40] +
    dwdot19dscqss17 * dscqss_dsc[600] + dwdot19dscqss2 * dscqss_dsc[75] +
    dwdot19dscqss3 * dscqss_dsc[110] + dwdot19dscqss4 * dscqss_dsc[145] +
    dwdot19dscqss5 * dscqss_dsc[180] + dwdot19dscqss6 * dscqss_dsc[215] +
    dwdot19dscqss7 * dscqss_dsc[250] + dwdot19dscqss9 * dscqss_dsc[320] +
    dwdot19dscqss11 * dscqss_dsc[390] + dwdot19dscqss12 * dscqss_dsc[425] +
    dwdot19dscqss14 * dscqss_dsc[495] + dwdot19dscqss13 * dscqss_dsc[460] +
    dwdot19dscqss15 * dscqss_dsc[530] + dwdot19dscqss8 * dscqss_dsc[285] +
    dwdot19dscqss10 * dscqss_dsc[355];
  J[235] =
    dwdot19dsc6 + dwdot19dscqss0 * dscqss_dsc[6] +
    dwdot19dscqss16 * dscqss_dsc[566] + dwdot19dscqss1 * dscqss_dsc[41] +
    dwdot19dscqss17 * dscqss_dsc[601] + dwdot19dscqss2 * dscqss_dsc[76] +
    dwdot19dscqss3 * dscqss_dsc[111] + dwdot19dscqss4 * dscqss_dsc[146] +
    dwdot19dscqss5 * dscqss_dsc[181] + dwdot19dscqss6 * dscqss_dsc[216] +
    dwdot19dscqss7 * dscqss_dsc[251] + dwdot19dscqss9 * dscqss_dsc[321] +
    dwdot19dscqss11 * dscqss_dsc[391] + dwdot19dscqss12 * dscqss_dsc[426] +
    dwdot19dscqss14 * dscqss_dsc[496] + dwdot19dscqss13 * dscqss_dsc[461] +
    dwdot19dscqss15 * dscqss_dsc[531] + dwdot19dscqss8 * dscqss_dsc[286] +
    dwdot19dscqss10 * dscqss_dsc[356];
  J[271] =
    dwdot19dsc7 + dwdot19dscqss0 * dscqss_dsc[7] +
    dwdot19dscqss16 * dscqss_dsc[567] + dwdot19dscqss1 * dscqss_dsc[42] +
    dwdot19dscqss17 * dscqss_dsc[602] + dwdot19dscqss2 * dscqss_dsc[77] +
    dwdot19dscqss3 * dscqss_dsc[112] + dwdot19dscqss4 * dscqss_dsc[147] +
    dwdot19dscqss5 * dscqss_dsc[182] + dwdot19dscqss6 * dscqss_dsc[217] +
    dwdot19dscqss7 * dscqss_dsc[252] + dwdot19dscqss9 * dscqss_dsc[322] +
    dwdot19dscqss11 * dscqss_dsc[392] + dwdot19dscqss12 * dscqss_dsc[427] +
    dwdot19dscqss14 * dscqss_dsc[497] + dwdot19dscqss13 * dscqss_dsc[462] +
    dwdot19dscqss15 * dscqss_dsc[532] + dwdot19dscqss8 * dscqss_dsc[287] +
    dwdot19dscqss10 * dscqss_dsc[357];
  J[307] =
    dwdot19dsc8 + dwdot19dscqss0 * dscqss_dsc[8] +
    dwdot19dscqss16 * dscqss_dsc[568] + dwdot19dscqss1 * dscqss_dsc[43] +
    dwdot19dscqss17 * dscqss_dsc[603] + dwdot19dscqss2 * dscqss_dsc[78] +
    dwdot19dscqss3 * dscqss_dsc[113] + dwdot19dscqss4 * dscqss_dsc[148] +
    dwdot19dscqss5 * dscqss_dsc[183] + dwdot19dscqss6 * dscqss_dsc[218] +
    dwdot19dscqss7 * dscqss_dsc[253] + dwdot19dscqss9 * dscqss_dsc[323] +
    dwdot19dscqss11 * dscqss_dsc[393] + dwdot19dscqss12 * dscqss_dsc[428] +
    dwdot19dscqss14 * dscqss_dsc[498] + dwdot19dscqss13 * dscqss_dsc[463] +
    dwdot19dscqss15 * dscqss_dsc[533] + dwdot19dscqss8 * dscqss_dsc[288] +
    dwdot19dscqss10 * dscqss_dsc[358];
  J[343] =
    dwdot19dsc9 + dwdot19dscqss0 * dscqss_dsc[9] +
    dwdot19dscqss16 * dscqss_dsc[569] + dwdot19dscqss1 * dscqss_dsc[44] +
    dwdot19dscqss17 * dscqss_dsc[604] + dwdot19dscqss2 * dscqss_dsc[79] +
    dwdot19dscqss3 * dscqss_dsc[114] + dwdot19dscqss4 * dscqss_dsc[149] +
    dwdot19dscqss5 * dscqss_dsc[184] + dwdot19dscqss6 * dscqss_dsc[219] +
    dwdot19dscqss7 * dscqss_dsc[254] + dwdot19dscqss9 * dscqss_dsc[324] +
    dwdot19dscqss11 * dscqss_dsc[394] + dwdot19dscqss12 * dscqss_dsc[429] +
    dwdot19dscqss14 * dscqss_dsc[499] + dwdot19dscqss13 * dscqss_dsc[464] +
    dwdot19dscqss15 * dscqss_dsc[534] + dwdot19dscqss8 * dscqss_dsc[289] +
    dwdot19dscqss10 * dscqss_dsc[359];
  J[379] =
    dwdot19dsc10 + dwdot19dscqss0 * dscqss_dsc[10] +
    dwdot19dscqss16 * dscqss_dsc[570] + dwdot19dscqss1 * dscqss_dsc[45] +
    dwdot19dscqss17 * dscqss_dsc[605] + dwdot19dscqss2 * dscqss_dsc[80] +
    dwdot19dscqss3 * dscqss_dsc[115] + dwdot19dscqss4 * dscqss_dsc[150] +
    dwdot19dscqss5 * dscqss_dsc[185] + dwdot19dscqss6 * dscqss_dsc[220] +
    dwdot19dscqss7 * dscqss_dsc[255] + dwdot19dscqss9 * dscqss_dsc[325] +
    dwdot19dscqss11 * dscqss_dsc[395] + dwdot19dscqss12 * dscqss_dsc[430] +
    dwdot19dscqss14 * dscqss_dsc[500] + dwdot19dscqss13 * dscqss_dsc[465] +
    dwdot19dscqss15 * dscqss_dsc[535] + dwdot19dscqss8 * dscqss_dsc[290] +
    dwdot19dscqss10 * dscqss_dsc[360];
  J[415] =
    dwdot19dsc11 + dwdot19dscqss0 * dscqss_dsc[11] +
    dwdot19dscqss16 * dscqss_dsc[571] + dwdot19dscqss1 * dscqss_dsc[46] +
    dwdot19dscqss17 * dscqss_dsc[606] + dwdot19dscqss2 * dscqss_dsc[81] +
    dwdot19dscqss3 * dscqss_dsc[116] + dwdot19dscqss4 * dscqss_dsc[151] +
    dwdot19dscqss5 * dscqss_dsc[186] + dwdot19dscqss6 * dscqss_dsc[221] +
    dwdot19dscqss7 * dscqss_dsc[256] + dwdot19dscqss9 * dscqss_dsc[326] +
    dwdot19dscqss11 * dscqss_dsc[396] + dwdot19dscqss12 * dscqss_dsc[431] +
    dwdot19dscqss14 * dscqss_dsc[501] + dwdot19dscqss13 * dscqss_dsc[466] +
    dwdot19dscqss15 * dscqss_dsc[536] + dwdot19dscqss8 * dscqss_dsc[291] +
    dwdot19dscqss10 * dscqss_dsc[361];
  J[451] =
    dwdot19dsc12 + dwdot19dscqss0 * dscqss_dsc[12] +
    dwdot19dscqss16 * dscqss_dsc[572] + dwdot19dscqss1 * dscqss_dsc[47] +
    dwdot19dscqss17 * dscqss_dsc[607] + dwdot19dscqss2 * dscqss_dsc[82] +
    dwdot19dscqss3 * dscqss_dsc[117] + dwdot19dscqss4 * dscqss_dsc[152] +
    dwdot19dscqss5 * dscqss_dsc[187] + dwdot19dscqss6 * dscqss_dsc[222] +
    dwdot19dscqss7 * dscqss_dsc[257] + dwdot19dscqss9 * dscqss_dsc[327] +
    dwdot19dscqss11 * dscqss_dsc[397] + dwdot19dscqss12 * dscqss_dsc[432] +
    dwdot19dscqss14 * dscqss_dsc[502] + dwdot19dscqss13 * dscqss_dsc[467] +
    dwdot19dscqss15 * dscqss_dsc[537] + dwdot19dscqss8 * dscqss_dsc[292] +
    dwdot19dscqss10 * dscqss_dsc[362];
  J[487] =
    dwdot19dsc13 + dwdot19dscqss0 * dscqss_dsc[13] +
    dwdot19dscqss16 * dscqss_dsc[573] + dwdot19dscqss1 * dscqss_dsc[48] +
    dwdot19dscqss17 * dscqss_dsc[608] + dwdot19dscqss2 * dscqss_dsc[83] +
    dwdot19dscqss3 * dscqss_dsc[118] + dwdot19dscqss4 * dscqss_dsc[153] +
    dwdot19dscqss5 * dscqss_dsc[188] + dwdot19dscqss6 * dscqss_dsc[223] +
    dwdot19dscqss7 * dscqss_dsc[258] + dwdot19dscqss9 * dscqss_dsc[328] +
    dwdot19dscqss11 * dscqss_dsc[398] + dwdot19dscqss12 * dscqss_dsc[433] +
    dwdot19dscqss14 * dscqss_dsc[503] + dwdot19dscqss13 * dscqss_dsc[468] +
    dwdot19dscqss15 * dscqss_dsc[538] + dwdot19dscqss8 * dscqss_dsc[293] +
    dwdot19dscqss10 * dscqss_dsc[363];
  J[523] =
    dwdot19dsc14 + dwdot19dscqss0 * dscqss_dsc[14] +
    dwdot19dscqss16 * dscqss_dsc[574] + dwdot19dscqss1 * dscqss_dsc[49] +
    dwdot19dscqss17 * dscqss_dsc[609] + dwdot19dscqss2 * dscqss_dsc[84] +
    dwdot19dscqss3 * dscqss_dsc[119] + dwdot19dscqss4 * dscqss_dsc[154] +
    dwdot19dscqss5 * dscqss_dsc[189] + dwdot19dscqss6 * dscqss_dsc[224] +
    dwdot19dscqss7 * dscqss_dsc[259] + dwdot19dscqss9 * dscqss_dsc[329] +
    dwdot19dscqss11 * dscqss_dsc[399] + dwdot19dscqss12 * dscqss_dsc[434] +
    dwdot19dscqss14 * dscqss_dsc[504] + dwdot19dscqss13 * dscqss_dsc[469] +
    dwdot19dscqss15 * dscqss_dsc[539] + dwdot19dscqss8 * dscqss_dsc[294] +
    dwdot19dscqss10 * dscqss_dsc[364];
  J[559] =
    dwdot19dsc15 + dwdot19dscqss0 * dscqss_dsc[15] +
    dwdot19dscqss16 * dscqss_dsc[575] + dwdot19dscqss1 * dscqss_dsc[50] +
    dwdot19dscqss17 * dscqss_dsc[610] + dwdot19dscqss2 * dscqss_dsc[85] +
    dwdot19dscqss3 * dscqss_dsc[120] + dwdot19dscqss4 * dscqss_dsc[155] +
    dwdot19dscqss5 * dscqss_dsc[190] + dwdot19dscqss6 * dscqss_dsc[225] +
    dwdot19dscqss7 * dscqss_dsc[260] + dwdot19dscqss9 * dscqss_dsc[330] +
    dwdot19dscqss11 * dscqss_dsc[400] + dwdot19dscqss12 * dscqss_dsc[435] +
    dwdot19dscqss14 * dscqss_dsc[505] + dwdot19dscqss13 * dscqss_dsc[470] +
    dwdot19dscqss15 * dscqss_dsc[540] + dwdot19dscqss8 * dscqss_dsc[295] +
    dwdot19dscqss10 * dscqss_dsc[365];
  J[595] =
    dwdot19dsc16 + dwdot19dscqss0 * dscqss_dsc[16] +
    dwdot19dscqss16 * dscqss_dsc[576] + dwdot19dscqss1 * dscqss_dsc[51] +
    dwdot19dscqss17 * dscqss_dsc[611] + dwdot19dscqss2 * dscqss_dsc[86] +
    dwdot19dscqss3 * dscqss_dsc[121] + dwdot19dscqss4 * dscqss_dsc[156] +
    dwdot19dscqss5 * dscqss_dsc[191] + dwdot19dscqss6 * dscqss_dsc[226] +
    dwdot19dscqss7 * dscqss_dsc[261] + dwdot19dscqss9 * dscqss_dsc[331] +
    dwdot19dscqss11 * dscqss_dsc[401] + dwdot19dscqss12 * dscqss_dsc[436] +
    dwdot19dscqss14 * dscqss_dsc[506] + dwdot19dscqss13 * dscqss_dsc[471] +
    dwdot19dscqss15 * dscqss_dsc[541] + dwdot19dscqss8 * dscqss_dsc[296] +
    dwdot19dscqss10 * dscqss_dsc[366];
  J[631] =
    dwdot19dsc17 + dwdot19dscqss0 * dscqss_dsc[17] +
    dwdot19dscqss16 * dscqss_dsc[577] + dwdot19dscqss1 * dscqss_dsc[52] +
    dwdot19dscqss17 * dscqss_dsc[612] + dwdot19dscqss2 * dscqss_dsc[87] +
    dwdot19dscqss3 * dscqss_dsc[122] + dwdot19dscqss4 * dscqss_dsc[157] +
    dwdot19dscqss5 * dscqss_dsc[192] + dwdot19dscqss6 * dscqss_dsc[227] +
    dwdot19dscqss7 * dscqss_dsc[262] + dwdot19dscqss9 * dscqss_dsc[332] +
    dwdot19dscqss11 * dscqss_dsc[402] + dwdot19dscqss12 * dscqss_dsc[437] +
    dwdot19dscqss14 * dscqss_dsc[507] + dwdot19dscqss13 * dscqss_dsc[472] +
    dwdot19dscqss15 * dscqss_dsc[542] + dwdot19dscqss8 * dscqss_dsc[297] +
    dwdot19dscqss10 * dscqss_dsc[367];
  J[667] =
    dwdot19dsc18 + dwdot19dscqss0 * dscqss_dsc[18] +
    dwdot19dscqss16 * dscqss_dsc[578] + dwdot19dscqss1 * dscqss_dsc[53] +
    dwdot19dscqss17 * dscqss_dsc[613] + dwdot19dscqss2 * dscqss_dsc[88] +
    dwdot19dscqss3 * dscqss_dsc[123] + dwdot19dscqss4 * dscqss_dsc[158] +
    dwdot19dscqss5 * dscqss_dsc[193] + dwdot19dscqss6 * dscqss_dsc[228] +
    dwdot19dscqss7 * dscqss_dsc[263] + dwdot19dscqss9 * dscqss_dsc[333] +
    dwdot19dscqss11 * dscqss_dsc[403] + dwdot19dscqss12 * dscqss_dsc[438] +
    dwdot19dscqss14 * dscqss_dsc[508] + dwdot19dscqss13 * dscqss_dsc[473] +
    dwdot19dscqss15 * dscqss_dsc[543] + dwdot19dscqss8 * dscqss_dsc[298] +
    dwdot19dscqss10 * dscqss_dsc[368];
  J[703] =
    dwdot19dsc19 + dwdot19dscqss0 * dscqss_dsc[19] +
    dwdot19dscqss16 * dscqss_dsc[579] + dwdot19dscqss1 * dscqss_dsc[54] +
    dwdot19dscqss17 * dscqss_dsc[614] + dwdot19dscqss2 * dscqss_dsc[89] +
    dwdot19dscqss3 * dscqss_dsc[124] + dwdot19dscqss4 * dscqss_dsc[159] +
    dwdot19dscqss5 * dscqss_dsc[194] + dwdot19dscqss6 * dscqss_dsc[229] +
    dwdot19dscqss7 * dscqss_dsc[264] + dwdot19dscqss9 * dscqss_dsc[334] +
    dwdot19dscqss11 * dscqss_dsc[404] + dwdot19dscqss12 * dscqss_dsc[439] +
    dwdot19dscqss14 * dscqss_dsc[509] + dwdot19dscqss13 * dscqss_dsc[474] +
    dwdot19dscqss15 * dscqss_dsc[544] + dwdot19dscqss8 * dscqss_dsc[299] +
    dwdot19dscqss10 * dscqss_dsc[369];
  J[739] =
    dwdot19dsc20 + dwdot19dscqss0 * dscqss_dsc[20] +
    dwdot19dscqss16 * dscqss_dsc[580] + dwdot19dscqss1 * dscqss_dsc[55] +
    dwdot19dscqss17 * dscqss_dsc[615] + dwdot19dscqss2 * dscqss_dsc[90] +
    dwdot19dscqss3 * dscqss_dsc[125] + dwdot19dscqss4 * dscqss_dsc[160] +
    dwdot19dscqss5 * dscqss_dsc[195] + dwdot19dscqss6 * dscqss_dsc[230] +
    dwdot19dscqss7 * dscqss_dsc[265] + dwdot19dscqss9 * dscqss_dsc[335] +
    dwdot19dscqss11 * dscqss_dsc[405] + dwdot19dscqss12 * dscqss_dsc[440] +
    dwdot19dscqss14 * dscqss_dsc[510] + dwdot19dscqss13 * dscqss_dsc[475] +
    dwdot19dscqss15 * dscqss_dsc[545] + dwdot19dscqss8 * dscqss_dsc[300] +
    dwdot19dscqss10 * dscqss_dsc[370];
  J[775] =
    dwdot19dsc21 + dwdot19dscqss0 * dscqss_dsc[21] +
    dwdot19dscqss16 * dscqss_dsc[581] + dwdot19dscqss1 * dscqss_dsc[56] +
    dwdot19dscqss17 * dscqss_dsc[616] + dwdot19dscqss2 * dscqss_dsc[91] +
    dwdot19dscqss3 * dscqss_dsc[126] + dwdot19dscqss4 * dscqss_dsc[161] +
    dwdot19dscqss5 * dscqss_dsc[196] + dwdot19dscqss6 * dscqss_dsc[231] +
    dwdot19dscqss7 * dscqss_dsc[266] + dwdot19dscqss9 * dscqss_dsc[336] +
    dwdot19dscqss11 * dscqss_dsc[406] + dwdot19dscqss12 * dscqss_dsc[441] +
    dwdot19dscqss14 * dscqss_dsc[511] + dwdot19dscqss13 * dscqss_dsc[476] +
    dwdot19dscqss15 * dscqss_dsc[546] + dwdot19dscqss8 * dscqss_dsc[301] +
    dwdot19dscqss10 * dscqss_dsc[371];
  J[811] =
    dwdot19dsc22 + dwdot19dscqss0 * dscqss_dsc[22] +
    dwdot19dscqss16 * dscqss_dsc[582] + dwdot19dscqss1 * dscqss_dsc[57] +
    dwdot19dscqss17 * dscqss_dsc[617] + dwdot19dscqss2 * dscqss_dsc[92] +
    dwdot19dscqss3 * dscqss_dsc[127] + dwdot19dscqss4 * dscqss_dsc[162] +
    dwdot19dscqss5 * dscqss_dsc[197] + dwdot19dscqss6 * dscqss_dsc[232] +
    dwdot19dscqss7 * dscqss_dsc[267] + dwdot19dscqss9 * dscqss_dsc[337] +
    dwdot19dscqss11 * dscqss_dsc[407] + dwdot19dscqss12 * dscqss_dsc[442] +
    dwdot19dscqss14 * dscqss_dsc[512] + dwdot19dscqss13 * dscqss_dsc[477] +
    dwdot19dscqss15 * dscqss_dsc[547] + dwdot19dscqss8 * dscqss_dsc[302] +
    dwdot19dscqss10 * dscqss_dsc[372];
  J[847] =
    dwdot19dsc23 + dwdot19dscqss0 * dscqss_dsc[23] +
    dwdot19dscqss16 * dscqss_dsc[583] + dwdot19dscqss1 * dscqss_dsc[58] +
    dwdot19dscqss17 * dscqss_dsc[618] + dwdot19dscqss2 * dscqss_dsc[93] +
    dwdot19dscqss3 * dscqss_dsc[128] + dwdot19dscqss4 * dscqss_dsc[163] +
    dwdot19dscqss5 * dscqss_dsc[198] + dwdot19dscqss6 * dscqss_dsc[233] +
    dwdot19dscqss7 * dscqss_dsc[268] + dwdot19dscqss9 * dscqss_dsc[338] +
    dwdot19dscqss11 * dscqss_dsc[408] + dwdot19dscqss12 * dscqss_dsc[443] +
    dwdot19dscqss14 * dscqss_dsc[513] + dwdot19dscqss13 * dscqss_dsc[478] +
    dwdot19dscqss15 * dscqss_dsc[548] + dwdot19dscqss8 * dscqss_dsc[303] +
    dwdot19dscqss10 * dscqss_dsc[373];
  J[883] =
    dwdot19dsc24 + dwdot19dscqss0 * dscqss_dsc[24] +
    dwdot19dscqss16 * dscqss_dsc[584] + dwdot19dscqss1 * dscqss_dsc[59] +
    dwdot19dscqss17 * dscqss_dsc[619] + dwdot19dscqss2 * dscqss_dsc[94] +
    dwdot19dscqss3 * dscqss_dsc[129] + dwdot19dscqss4 * dscqss_dsc[164] +
    dwdot19dscqss5 * dscqss_dsc[199] + dwdot19dscqss6 * dscqss_dsc[234] +
    dwdot19dscqss7 * dscqss_dsc[269] + dwdot19dscqss9 * dscqss_dsc[339] +
    dwdot19dscqss11 * dscqss_dsc[409] + dwdot19dscqss12 * dscqss_dsc[444] +
    dwdot19dscqss14 * dscqss_dsc[514] + dwdot19dscqss13 * dscqss_dsc[479] +
    dwdot19dscqss15 * dscqss_dsc[549] + dwdot19dscqss8 * dscqss_dsc[304] +
    dwdot19dscqss10 * dscqss_dsc[374];
  J[919] =
    dwdot19dsc25 + dwdot19dscqss0 * dscqss_dsc[25] +
    dwdot19dscqss16 * dscqss_dsc[585] + dwdot19dscqss1 * dscqss_dsc[60] +
    dwdot19dscqss17 * dscqss_dsc[620] + dwdot19dscqss2 * dscqss_dsc[95] +
    dwdot19dscqss3 * dscqss_dsc[130] + dwdot19dscqss4 * dscqss_dsc[165] +
    dwdot19dscqss5 * dscqss_dsc[200] + dwdot19dscqss6 * dscqss_dsc[235] +
    dwdot19dscqss7 * dscqss_dsc[270] + dwdot19dscqss9 * dscqss_dsc[340] +
    dwdot19dscqss11 * dscqss_dsc[410] + dwdot19dscqss12 * dscqss_dsc[445] +
    dwdot19dscqss14 * dscqss_dsc[515] + dwdot19dscqss13 * dscqss_dsc[480] +
    dwdot19dscqss15 * dscqss_dsc[550] + dwdot19dscqss8 * dscqss_dsc[305] +
    dwdot19dscqss10 * dscqss_dsc[375];
  J[955] =
    dwdot19dsc26 + dwdot19dscqss0 * dscqss_dsc[26] +
    dwdot19dscqss16 * dscqss_dsc[586] + dwdot19dscqss1 * dscqss_dsc[61] +
    dwdot19dscqss17 * dscqss_dsc[621] + dwdot19dscqss2 * dscqss_dsc[96] +
    dwdot19dscqss3 * dscqss_dsc[131] + dwdot19dscqss4 * dscqss_dsc[166] +
    dwdot19dscqss5 * dscqss_dsc[201] + dwdot19dscqss6 * dscqss_dsc[236] +
    dwdot19dscqss7 * dscqss_dsc[271] + dwdot19dscqss9 * dscqss_dsc[341] +
    dwdot19dscqss11 * dscqss_dsc[411] + dwdot19dscqss12 * dscqss_dsc[446] +
    dwdot19dscqss14 * dscqss_dsc[516] + dwdot19dscqss13 * dscqss_dsc[481] +
    dwdot19dscqss15 * dscqss_dsc[551] + dwdot19dscqss8 * dscqss_dsc[306] +
    dwdot19dscqss10 * dscqss_dsc[376];
  J[991] =
    dwdot19dsc27 + dwdot19dscqss0 * dscqss_dsc[27] +
    dwdot19dscqss16 * dscqss_dsc[587] + dwdot19dscqss1 * dscqss_dsc[62] +
    dwdot19dscqss17 * dscqss_dsc[622] + dwdot19dscqss2 * dscqss_dsc[97] +
    dwdot19dscqss3 * dscqss_dsc[132] + dwdot19dscqss4 * dscqss_dsc[167] +
    dwdot19dscqss5 * dscqss_dsc[202] + dwdot19dscqss6 * dscqss_dsc[237] +
    dwdot19dscqss7 * dscqss_dsc[272] + dwdot19dscqss9 * dscqss_dsc[342] +
    dwdot19dscqss11 * dscqss_dsc[412] + dwdot19dscqss12 * dscqss_dsc[447] +
    dwdot19dscqss14 * dscqss_dsc[517] + dwdot19dscqss13 * dscqss_dsc[482] +
    dwdot19dscqss15 * dscqss_dsc[552] + dwdot19dscqss8 * dscqss_dsc[307] +
    dwdot19dscqss10 * dscqss_dsc[377];
  J[1027] =
    dwdot19dsc28 + dwdot19dscqss0 * dscqss_dsc[28] +
    dwdot19dscqss16 * dscqss_dsc[588] + dwdot19dscqss1 * dscqss_dsc[63] +
    dwdot19dscqss17 * dscqss_dsc[623] + dwdot19dscqss2 * dscqss_dsc[98] +
    dwdot19dscqss3 * dscqss_dsc[133] + dwdot19dscqss4 * dscqss_dsc[168] +
    dwdot19dscqss5 * dscqss_dsc[203] + dwdot19dscqss6 * dscqss_dsc[238] +
    dwdot19dscqss7 * dscqss_dsc[273] + dwdot19dscqss9 * dscqss_dsc[343] +
    dwdot19dscqss11 * dscqss_dsc[413] + dwdot19dscqss12 * dscqss_dsc[448] +
    dwdot19dscqss14 * dscqss_dsc[518] + dwdot19dscqss13 * dscqss_dsc[483] +
    dwdot19dscqss15 * dscqss_dsc[553] + dwdot19dscqss8 * dscqss_dsc[308] +
    dwdot19dscqss10 * dscqss_dsc[378];
  J[1063] =
    dwdot19dsc29 + dwdot19dscqss0 * dscqss_dsc[29] +
    dwdot19dscqss16 * dscqss_dsc[589] + dwdot19dscqss1 * dscqss_dsc[64] +
    dwdot19dscqss17 * dscqss_dsc[624] + dwdot19dscqss2 * dscqss_dsc[99] +
    dwdot19dscqss3 * dscqss_dsc[134] + dwdot19dscqss4 * dscqss_dsc[169] +
    dwdot19dscqss5 * dscqss_dsc[204] + dwdot19dscqss6 * dscqss_dsc[239] +
    dwdot19dscqss7 * dscqss_dsc[274] + dwdot19dscqss9 * dscqss_dsc[344] +
    dwdot19dscqss11 * dscqss_dsc[414] + dwdot19dscqss12 * dscqss_dsc[449] +
    dwdot19dscqss14 * dscqss_dsc[519] + dwdot19dscqss13 * dscqss_dsc[484] +
    dwdot19dscqss15 * dscqss_dsc[554] + dwdot19dscqss8 * dscqss_dsc[309] +
    dwdot19dscqss10 * dscqss_dsc[379];
  J[1099] =
    dwdot19dsc30 + dwdot19dscqss0 * dscqss_dsc[30] +
    dwdot19dscqss16 * dscqss_dsc[590] + dwdot19dscqss1 * dscqss_dsc[65] +
    dwdot19dscqss17 * dscqss_dsc[625] + dwdot19dscqss2 * dscqss_dsc[100] +
    dwdot19dscqss3 * dscqss_dsc[135] + dwdot19dscqss4 * dscqss_dsc[170] +
    dwdot19dscqss5 * dscqss_dsc[205] + dwdot19dscqss6 * dscqss_dsc[240] +
    dwdot19dscqss7 * dscqss_dsc[275] + dwdot19dscqss9 * dscqss_dsc[345] +
    dwdot19dscqss11 * dscqss_dsc[415] + dwdot19dscqss12 * dscqss_dsc[450] +
    dwdot19dscqss14 * dscqss_dsc[520] + dwdot19dscqss13 * dscqss_dsc[485] +
    dwdot19dscqss15 * dscqss_dsc[555] + dwdot19dscqss8 * dscqss_dsc[310] +
    dwdot19dscqss10 * dscqss_dsc[380];
  J[1135] =
    dwdot19dsc31 + dwdot19dscqss0 * dscqss_dsc[31] +
    dwdot19dscqss16 * dscqss_dsc[591] + dwdot19dscqss1 * dscqss_dsc[66] +
    dwdot19dscqss17 * dscqss_dsc[626] + dwdot19dscqss2 * dscqss_dsc[101] +
    dwdot19dscqss3 * dscqss_dsc[136] + dwdot19dscqss4 * dscqss_dsc[171] +
    dwdot19dscqss5 * dscqss_dsc[206] + dwdot19dscqss6 * dscqss_dsc[241] +
    dwdot19dscqss7 * dscqss_dsc[276] + dwdot19dscqss9 * dscqss_dsc[346] +
    dwdot19dscqss11 * dscqss_dsc[416] + dwdot19dscqss12 * dscqss_dsc[451] +
    dwdot19dscqss14 * dscqss_dsc[521] + dwdot19dscqss13 * dscqss_dsc[486] +
    dwdot19dscqss15 * dscqss_dsc[556] + dwdot19dscqss8 * dscqss_dsc[311] +
    dwdot19dscqss10 * dscqss_dsc[381];
  J[1171] =
    dwdot19dsc32 + dwdot19dscqss0 * dscqss_dsc[32] +
    dwdot19dscqss16 * dscqss_dsc[592] + dwdot19dscqss1 * dscqss_dsc[67] +
    dwdot19dscqss17 * dscqss_dsc[627] + dwdot19dscqss2 * dscqss_dsc[102] +
    dwdot19dscqss3 * dscqss_dsc[137] + dwdot19dscqss4 * dscqss_dsc[172] +
    dwdot19dscqss5 * dscqss_dsc[207] + dwdot19dscqss6 * dscqss_dsc[242] +
    dwdot19dscqss7 * dscqss_dsc[277] + dwdot19dscqss9 * dscqss_dsc[347] +
    dwdot19dscqss11 * dscqss_dsc[417] + dwdot19dscqss12 * dscqss_dsc[452] +
    dwdot19dscqss14 * dscqss_dsc[522] + dwdot19dscqss13 * dscqss_dsc[487] +
    dwdot19dscqss15 * dscqss_dsc[557] + dwdot19dscqss8 * dscqss_dsc[312] +
    dwdot19dscqss10 * dscqss_dsc[382];
  J[1207] =
    dwdot19dsc33 + dwdot19dscqss0 * dscqss_dsc[33] +
    dwdot19dscqss16 * dscqss_dsc[593] + dwdot19dscqss1 * dscqss_dsc[68] +
    dwdot19dscqss17 * dscqss_dsc[628] + dwdot19dscqss2 * dscqss_dsc[103] +
    dwdot19dscqss3 * dscqss_dsc[138] + dwdot19dscqss4 * dscqss_dsc[173] +
    dwdot19dscqss5 * dscqss_dsc[208] + dwdot19dscqss6 * dscqss_dsc[243] +
    dwdot19dscqss7 * dscqss_dsc[278] + dwdot19dscqss9 * dscqss_dsc[348] +
    dwdot19dscqss11 * dscqss_dsc[418] + dwdot19dscqss12 * dscqss_dsc[453] +
    dwdot19dscqss14 * dscqss_dsc[523] + dwdot19dscqss13 * dscqss_dsc[488] +
    dwdot19dscqss15 * dscqss_dsc[558] + dwdot19dscqss8 * dscqss_dsc[313] +
    dwdot19dscqss10 * dscqss_dsc[383];
  J[1243] =
    dwdot19dsc34 + dwdot19dscqss0 * dscqss_dsc[34] +
    dwdot19dscqss16 * dscqss_dsc[594] + dwdot19dscqss1 * dscqss_dsc[69] +
    dwdot19dscqss17 * dscqss_dsc[629] + dwdot19dscqss2 * dscqss_dsc[104] +
    dwdot19dscqss3 * dscqss_dsc[139] + dwdot19dscqss4 * dscqss_dsc[174] +
    dwdot19dscqss5 * dscqss_dsc[209] + dwdot19dscqss6 * dscqss_dsc[244] +
    dwdot19dscqss7 * dscqss_dsc[279] + dwdot19dscqss9 * dscqss_dsc[349] +
    dwdot19dscqss11 * dscqss_dsc[419] + dwdot19dscqss12 * dscqss_dsc[454] +
    dwdot19dscqss14 * dscqss_dsc[524] + dwdot19dscqss13 * dscqss_dsc[489] +
    dwdot19dscqss15 * dscqss_dsc[559] + dwdot19dscqss8 * dscqss_dsc[314] +
    dwdot19dscqss10 * dscqss_dsc[384];
  J[20] =
    dwdot20dsc0 + dwdot20dscqss0 * dscqss_dsc[0] +
    dwdot20dscqss16 * dscqss_dsc[560] + dwdot20dscqss1 * dscqss_dsc[35] +
    dwdot20dscqss17 * dscqss_dsc[595] + dwdot20dscqss2 * dscqss_dsc[70] +
    dwdot20dscqss3 * dscqss_dsc[105] + dwdot20dscqss4 * dscqss_dsc[140] +
    dwdot20dscqss5 * dscqss_dsc[175] + dwdot20dscqss6 * dscqss_dsc[210] +
    dwdot20dscqss7 * dscqss_dsc[245] + dwdot20dscqss9 * dscqss_dsc[315] +
    dwdot20dscqss11 * dscqss_dsc[385] + dwdot20dscqss12 * dscqss_dsc[420] +
    dwdot20dscqss14 * dscqss_dsc[490] + dwdot20dscqss13 * dscqss_dsc[455] +
    dwdot20dscqss15 * dscqss_dsc[525] + dwdot20dscqss8 * dscqss_dsc[280] +
    dwdot20dscqss10 * dscqss_dsc[350];
  J[56] =
    dwdot20dsc1 + dwdot20dscqss0 * dscqss_dsc[1] +
    dwdot20dscqss16 * dscqss_dsc[561] + dwdot20dscqss1 * dscqss_dsc[36] +
    dwdot20dscqss17 * dscqss_dsc[596] + dwdot20dscqss2 * dscqss_dsc[71] +
    dwdot20dscqss3 * dscqss_dsc[106] + dwdot20dscqss4 * dscqss_dsc[141] +
    dwdot20dscqss5 * dscqss_dsc[176] + dwdot20dscqss6 * dscqss_dsc[211] +
    dwdot20dscqss7 * dscqss_dsc[246] + dwdot20dscqss9 * dscqss_dsc[316] +
    dwdot20dscqss11 * dscqss_dsc[386] + dwdot20dscqss12 * dscqss_dsc[421] +
    dwdot20dscqss14 * dscqss_dsc[491] + dwdot20dscqss13 * dscqss_dsc[456] +
    dwdot20dscqss15 * dscqss_dsc[526] + dwdot20dscqss8 * dscqss_dsc[281] +
    dwdot20dscqss10 * dscqss_dsc[351];
  J[92] =
    dwdot20dsc2 + dwdot20dscqss0 * dscqss_dsc[2] +
    dwdot20dscqss16 * dscqss_dsc[562] + dwdot20dscqss1 * dscqss_dsc[37] +
    dwdot20dscqss17 * dscqss_dsc[597] + dwdot20dscqss2 * dscqss_dsc[72] +
    dwdot20dscqss3 * dscqss_dsc[107] + dwdot20dscqss4 * dscqss_dsc[142] +
    dwdot20dscqss5 * dscqss_dsc[177] + dwdot20dscqss6 * dscqss_dsc[212] +
    dwdot20dscqss7 * dscqss_dsc[247] + dwdot20dscqss9 * dscqss_dsc[317] +
    dwdot20dscqss11 * dscqss_dsc[387] + dwdot20dscqss12 * dscqss_dsc[422] +
    dwdot20dscqss14 * dscqss_dsc[492] + dwdot20dscqss13 * dscqss_dsc[457] +
    dwdot20dscqss15 * dscqss_dsc[527] + dwdot20dscqss8 * dscqss_dsc[282] +
    dwdot20dscqss10 * dscqss_dsc[352];
  J[128] =
    dwdot20dsc3 + dwdot20dscqss0 * dscqss_dsc[3] +
    dwdot20dscqss16 * dscqss_dsc[563] + dwdot20dscqss1 * dscqss_dsc[38] +
    dwdot20dscqss17 * dscqss_dsc[598] + dwdot20dscqss2 * dscqss_dsc[73] +
    dwdot20dscqss3 * dscqss_dsc[108] + dwdot20dscqss4 * dscqss_dsc[143] +
    dwdot20dscqss5 * dscqss_dsc[178] + dwdot20dscqss6 * dscqss_dsc[213] +
    dwdot20dscqss7 * dscqss_dsc[248] + dwdot20dscqss9 * dscqss_dsc[318] +
    dwdot20dscqss11 * dscqss_dsc[388] + dwdot20dscqss12 * dscqss_dsc[423] +
    dwdot20dscqss14 * dscqss_dsc[493] + dwdot20dscqss13 * dscqss_dsc[458] +
    dwdot20dscqss15 * dscqss_dsc[528] + dwdot20dscqss8 * dscqss_dsc[283] +
    dwdot20dscqss10 * dscqss_dsc[353];
  J[164] =
    dwdot20dsc4 + dwdot20dscqss0 * dscqss_dsc[4] +
    dwdot20dscqss16 * dscqss_dsc[564] + dwdot20dscqss1 * dscqss_dsc[39] +
    dwdot20dscqss17 * dscqss_dsc[599] + dwdot20dscqss2 * dscqss_dsc[74] +
    dwdot20dscqss3 * dscqss_dsc[109] + dwdot20dscqss4 * dscqss_dsc[144] +
    dwdot20dscqss5 * dscqss_dsc[179] + dwdot20dscqss6 * dscqss_dsc[214] +
    dwdot20dscqss7 * dscqss_dsc[249] + dwdot20dscqss9 * dscqss_dsc[319] +
    dwdot20dscqss11 * dscqss_dsc[389] + dwdot20dscqss12 * dscqss_dsc[424] +
    dwdot20dscqss14 * dscqss_dsc[494] + dwdot20dscqss13 * dscqss_dsc[459] +
    dwdot20dscqss15 * dscqss_dsc[529] + dwdot20dscqss8 * dscqss_dsc[284] +
    dwdot20dscqss10 * dscqss_dsc[354];
  J[200] =
    dwdot20dsc5 + dwdot20dscqss0 * dscqss_dsc[5] +
    dwdot20dscqss16 * dscqss_dsc[565] + dwdot20dscqss1 * dscqss_dsc[40] +
    dwdot20dscqss17 * dscqss_dsc[600] + dwdot20dscqss2 * dscqss_dsc[75] +
    dwdot20dscqss3 * dscqss_dsc[110] + dwdot20dscqss4 * dscqss_dsc[145] +
    dwdot20dscqss5 * dscqss_dsc[180] + dwdot20dscqss6 * dscqss_dsc[215] +
    dwdot20dscqss7 * dscqss_dsc[250] + dwdot20dscqss9 * dscqss_dsc[320] +
    dwdot20dscqss11 * dscqss_dsc[390] + dwdot20dscqss12 * dscqss_dsc[425] +
    dwdot20dscqss14 * dscqss_dsc[495] + dwdot20dscqss13 * dscqss_dsc[460] +
    dwdot20dscqss15 * dscqss_dsc[530] + dwdot20dscqss8 * dscqss_dsc[285] +
    dwdot20dscqss10 * dscqss_dsc[355];
  J[236] =
    dwdot20dsc6 + dwdot20dscqss0 * dscqss_dsc[6] +
    dwdot20dscqss16 * dscqss_dsc[566] + dwdot20dscqss1 * dscqss_dsc[41] +
    dwdot20dscqss17 * dscqss_dsc[601] + dwdot20dscqss2 * dscqss_dsc[76] +
    dwdot20dscqss3 * dscqss_dsc[111] + dwdot20dscqss4 * dscqss_dsc[146] +
    dwdot20dscqss5 * dscqss_dsc[181] + dwdot20dscqss6 * dscqss_dsc[216] +
    dwdot20dscqss7 * dscqss_dsc[251] + dwdot20dscqss9 * dscqss_dsc[321] +
    dwdot20dscqss11 * dscqss_dsc[391] + dwdot20dscqss12 * dscqss_dsc[426] +
    dwdot20dscqss14 * dscqss_dsc[496] + dwdot20dscqss13 * dscqss_dsc[461] +
    dwdot20dscqss15 * dscqss_dsc[531] + dwdot20dscqss8 * dscqss_dsc[286] +
    dwdot20dscqss10 * dscqss_dsc[356];
  J[272] =
    dwdot20dsc7 + dwdot20dscqss0 * dscqss_dsc[7] +
    dwdot20dscqss16 * dscqss_dsc[567] + dwdot20dscqss1 * dscqss_dsc[42] +
    dwdot20dscqss17 * dscqss_dsc[602] + dwdot20dscqss2 * dscqss_dsc[77] +
    dwdot20dscqss3 * dscqss_dsc[112] + dwdot20dscqss4 * dscqss_dsc[147] +
    dwdot20dscqss5 * dscqss_dsc[182] + dwdot20dscqss6 * dscqss_dsc[217] +
    dwdot20dscqss7 * dscqss_dsc[252] + dwdot20dscqss9 * dscqss_dsc[322] +
    dwdot20dscqss11 * dscqss_dsc[392] + dwdot20dscqss12 * dscqss_dsc[427] +
    dwdot20dscqss14 * dscqss_dsc[497] + dwdot20dscqss13 * dscqss_dsc[462] +
    dwdot20dscqss15 * dscqss_dsc[532] + dwdot20dscqss8 * dscqss_dsc[287] +
    dwdot20dscqss10 * dscqss_dsc[357];
  J[308] =
    dwdot20dsc8 + dwdot20dscqss0 * dscqss_dsc[8] +
    dwdot20dscqss16 * dscqss_dsc[568] + dwdot20dscqss1 * dscqss_dsc[43] +
    dwdot20dscqss17 * dscqss_dsc[603] + dwdot20dscqss2 * dscqss_dsc[78] +
    dwdot20dscqss3 * dscqss_dsc[113] + dwdot20dscqss4 * dscqss_dsc[148] +
    dwdot20dscqss5 * dscqss_dsc[183] + dwdot20dscqss6 * dscqss_dsc[218] +
    dwdot20dscqss7 * dscqss_dsc[253] + dwdot20dscqss9 * dscqss_dsc[323] +
    dwdot20dscqss11 * dscqss_dsc[393] + dwdot20dscqss12 * dscqss_dsc[428] +
    dwdot20dscqss14 * dscqss_dsc[498] + dwdot20dscqss13 * dscqss_dsc[463] +
    dwdot20dscqss15 * dscqss_dsc[533] + dwdot20dscqss8 * dscqss_dsc[288] +
    dwdot20dscqss10 * dscqss_dsc[358];
  J[344] =
    dwdot20dsc9 + dwdot20dscqss0 * dscqss_dsc[9] +
    dwdot20dscqss16 * dscqss_dsc[569] + dwdot20dscqss1 * dscqss_dsc[44] +
    dwdot20dscqss17 * dscqss_dsc[604] + dwdot20dscqss2 * dscqss_dsc[79] +
    dwdot20dscqss3 * dscqss_dsc[114] + dwdot20dscqss4 * dscqss_dsc[149] +
    dwdot20dscqss5 * dscqss_dsc[184] + dwdot20dscqss6 * dscqss_dsc[219] +
    dwdot20dscqss7 * dscqss_dsc[254] + dwdot20dscqss9 * dscqss_dsc[324] +
    dwdot20dscqss11 * dscqss_dsc[394] + dwdot20dscqss12 * dscqss_dsc[429] +
    dwdot20dscqss14 * dscqss_dsc[499] + dwdot20dscqss13 * dscqss_dsc[464] +
    dwdot20dscqss15 * dscqss_dsc[534] + dwdot20dscqss8 * dscqss_dsc[289] +
    dwdot20dscqss10 * dscqss_dsc[359];
  J[380] =
    dwdot20dsc10 + dwdot20dscqss0 * dscqss_dsc[10] +
    dwdot20dscqss16 * dscqss_dsc[570] + dwdot20dscqss1 * dscqss_dsc[45] +
    dwdot20dscqss17 * dscqss_dsc[605] + dwdot20dscqss2 * dscqss_dsc[80] +
    dwdot20dscqss3 * dscqss_dsc[115] + dwdot20dscqss4 * dscqss_dsc[150] +
    dwdot20dscqss5 * dscqss_dsc[185] + dwdot20dscqss6 * dscqss_dsc[220] +
    dwdot20dscqss7 * dscqss_dsc[255] + dwdot20dscqss9 * dscqss_dsc[325] +
    dwdot20dscqss11 * dscqss_dsc[395] + dwdot20dscqss12 * dscqss_dsc[430] +
    dwdot20dscqss14 * dscqss_dsc[500] + dwdot20dscqss13 * dscqss_dsc[465] +
    dwdot20dscqss15 * dscqss_dsc[535] + dwdot20dscqss8 * dscqss_dsc[290] +
    dwdot20dscqss10 * dscqss_dsc[360];
  J[416] =
    dwdot20dsc11 + dwdot20dscqss0 * dscqss_dsc[11] +
    dwdot20dscqss16 * dscqss_dsc[571] + dwdot20dscqss1 * dscqss_dsc[46] +
    dwdot20dscqss17 * dscqss_dsc[606] + dwdot20dscqss2 * dscqss_dsc[81] +
    dwdot20dscqss3 * dscqss_dsc[116] + dwdot20dscqss4 * dscqss_dsc[151] +
    dwdot20dscqss5 * dscqss_dsc[186] + dwdot20dscqss6 * dscqss_dsc[221] +
    dwdot20dscqss7 * dscqss_dsc[256] + dwdot20dscqss9 * dscqss_dsc[326] +
    dwdot20dscqss11 * dscqss_dsc[396] + dwdot20dscqss12 * dscqss_dsc[431] +
    dwdot20dscqss14 * dscqss_dsc[501] + dwdot20dscqss13 * dscqss_dsc[466] +
    dwdot20dscqss15 * dscqss_dsc[536] + dwdot20dscqss8 * dscqss_dsc[291] +
    dwdot20dscqss10 * dscqss_dsc[361];
  J[452] =
    dwdot20dsc12 + dwdot20dscqss0 * dscqss_dsc[12] +
    dwdot20dscqss16 * dscqss_dsc[572] + dwdot20dscqss1 * dscqss_dsc[47] +
    dwdot20dscqss17 * dscqss_dsc[607] + dwdot20dscqss2 * dscqss_dsc[82] +
    dwdot20dscqss3 * dscqss_dsc[117] + dwdot20dscqss4 * dscqss_dsc[152] +
    dwdot20dscqss5 * dscqss_dsc[187] + dwdot20dscqss6 * dscqss_dsc[222] +
    dwdot20dscqss7 * dscqss_dsc[257] + dwdot20dscqss9 * dscqss_dsc[327] +
    dwdot20dscqss11 * dscqss_dsc[397] + dwdot20dscqss12 * dscqss_dsc[432] +
    dwdot20dscqss14 * dscqss_dsc[502] + dwdot20dscqss13 * dscqss_dsc[467] +
    dwdot20dscqss15 * dscqss_dsc[537] + dwdot20dscqss8 * dscqss_dsc[292] +
    dwdot20dscqss10 * dscqss_dsc[362];
  J[488] =
    dwdot20dsc13 + dwdot20dscqss0 * dscqss_dsc[13] +
    dwdot20dscqss16 * dscqss_dsc[573] + dwdot20dscqss1 * dscqss_dsc[48] +
    dwdot20dscqss17 * dscqss_dsc[608] + dwdot20dscqss2 * dscqss_dsc[83] +
    dwdot20dscqss3 * dscqss_dsc[118] + dwdot20dscqss4 * dscqss_dsc[153] +
    dwdot20dscqss5 * dscqss_dsc[188] + dwdot20dscqss6 * dscqss_dsc[223] +
    dwdot20dscqss7 * dscqss_dsc[258] + dwdot20dscqss9 * dscqss_dsc[328] +
    dwdot20dscqss11 * dscqss_dsc[398] + dwdot20dscqss12 * dscqss_dsc[433] +
    dwdot20dscqss14 * dscqss_dsc[503] + dwdot20dscqss13 * dscqss_dsc[468] +
    dwdot20dscqss15 * dscqss_dsc[538] + dwdot20dscqss8 * dscqss_dsc[293] +
    dwdot20dscqss10 * dscqss_dsc[363];
  J[524] =
    dwdot20dsc14 + dwdot20dscqss0 * dscqss_dsc[14] +
    dwdot20dscqss16 * dscqss_dsc[574] + dwdot20dscqss1 * dscqss_dsc[49] +
    dwdot20dscqss17 * dscqss_dsc[609] + dwdot20dscqss2 * dscqss_dsc[84] +
    dwdot20dscqss3 * dscqss_dsc[119] + dwdot20dscqss4 * dscqss_dsc[154] +
    dwdot20dscqss5 * dscqss_dsc[189] + dwdot20dscqss6 * dscqss_dsc[224] +
    dwdot20dscqss7 * dscqss_dsc[259] + dwdot20dscqss9 * dscqss_dsc[329] +
    dwdot20dscqss11 * dscqss_dsc[399] + dwdot20dscqss12 * dscqss_dsc[434] +
    dwdot20dscqss14 * dscqss_dsc[504] + dwdot20dscqss13 * dscqss_dsc[469] +
    dwdot20dscqss15 * dscqss_dsc[539] + dwdot20dscqss8 * dscqss_dsc[294] +
    dwdot20dscqss10 * dscqss_dsc[364];
  J[560] =
    dwdot20dsc15 + dwdot20dscqss0 * dscqss_dsc[15] +
    dwdot20dscqss16 * dscqss_dsc[575] + dwdot20dscqss1 * dscqss_dsc[50] +
    dwdot20dscqss17 * dscqss_dsc[610] + dwdot20dscqss2 * dscqss_dsc[85] +
    dwdot20dscqss3 * dscqss_dsc[120] + dwdot20dscqss4 * dscqss_dsc[155] +
    dwdot20dscqss5 * dscqss_dsc[190] + dwdot20dscqss6 * dscqss_dsc[225] +
    dwdot20dscqss7 * dscqss_dsc[260] + dwdot20dscqss9 * dscqss_dsc[330] +
    dwdot20dscqss11 * dscqss_dsc[400] + dwdot20dscqss12 * dscqss_dsc[435] +
    dwdot20dscqss14 * dscqss_dsc[505] + dwdot20dscqss13 * dscqss_dsc[470] +
    dwdot20dscqss15 * dscqss_dsc[540] + dwdot20dscqss8 * dscqss_dsc[295] +
    dwdot20dscqss10 * dscqss_dsc[365];
  J[596] =
    dwdot20dsc16 + dwdot20dscqss0 * dscqss_dsc[16] +
    dwdot20dscqss16 * dscqss_dsc[576] + dwdot20dscqss1 * dscqss_dsc[51] +
    dwdot20dscqss17 * dscqss_dsc[611] + dwdot20dscqss2 * dscqss_dsc[86] +
    dwdot20dscqss3 * dscqss_dsc[121] + dwdot20dscqss4 * dscqss_dsc[156] +
    dwdot20dscqss5 * dscqss_dsc[191] + dwdot20dscqss6 * dscqss_dsc[226] +
    dwdot20dscqss7 * dscqss_dsc[261] + dwdot20dscqss9 * dscqss_dsc[331] +
    dwdot20dscqss11 * dscqss_dsc[401] + dwdot20dscqss12 * dscqss_dsc[436] +
    dwdot20dscqss14 * dscqss_dsc[506] + dwdot20dscqss13 * dscqss_dsc[471] +
    dwdot20dscqss15 * dscqss_dsc[541] + dwdot20dscqss8 * dscqss_dsc[296] +
    dwdot20dscqss10 * dscqss_dsc[366];
  J[632] =
    dwdot20dsc17 + dwdot20dscqss0 * dscqss_dsc[17] +
    dwdot20dscqss16 * dscqss_dsc[577] + dwdot20dscqss1 * dscqss_dsc[52] +
    dwdot20dscqss17 * dscqss_dsc[612] + dwdot20dscqss2 * dscqss_dsc[87] +
    dwdot20dscqss3 * dscqss_dsc[122] + dwdot20dscqss4 * dscqss_dsc[157] +
    dwdot20dscqss5 * dscqss_dsc[192] + dwdot20dscqss6 * dscqss_dsc[227] +
    dwdot20dscqss7 * dscqss_dsc[262] + dwdot20dscqss9 * dscqss_dsc[332] +
    dwdot20dscqss11 * dscqss_dsc[402] + dwdot20dscqss12 * dscqss_dsc[437] +
    dwdot20dscqss14 * dscqss_dsc[507] + dwdot20dscqss13 * dscqss_dsc[472] +
    dwdot20dscqss15 * dscqss_dsc[542] + dwdot20dscqss8 * dscqss_dsc[297] +
    dwdot20dscqss10 * dscqss_dsc[367];
  J[668] =
    dwdot20dsc18 + dwdot20dscqss0 * dscqss_dsc[18] +
    dwdot20dscqss16 * dscqss_dsc[578] + dwdot20dscqss1 * dscqss_dsc[53] +
    dwdot20dscqss17 * dscqss_dsc[613] + dwdot20dscqss2 * dscqss_dsc[88] +
    dwdot20dscqss3 * dscqss_dsc[123] + dwdot20dscqss4 * dscqss_dsc[158] +
    dwdot20dscqss5 * dscqss_dsc[193] + dwdot20dscqss6 * dscqss_dsc[228] +
    dwdot20dscqss7 * dscqss_dsc[263] + dwdot20dscqss9 * dscqss_dsc[333] +
    dwdot20dscqss11 * dscqss_dsc[403] + dwdot20dscqss12 * dscqss_dsc[438] +
    dwdot20dscqss14 * dscqss_dsc[508] + dwdot20dscqss13 * dscqss_dsc[473] +
    dwdot20dscqss15 * dscqss_dsc[543] + dwdot20dscqss8 * dscqss_dsc[298] +
    dwdot20dscqss10 * dscqss_dsc[368];
  J[704] =
    dwdot20dsc19 + dwdot20dscqss0 * dscqss_dsc[19] +
    dwdot20dscqss16 * dscqss_dsc[579] + dwdot20dscqss1 * dscqss_dsc[54] +
    dwdot20dscqss17 * dscqss_dsc[614] + dwdot20dscqss2 * dscqss_dsc[89] +
    dwdot20dscqss3 * dscqss_dsc[124] + dwdot20dscqss4 * dscqss_dsc[159] +
    dwdot20dscqss5 * dscqss_dsc[194] + dwdot20dscqss6 * dscqss_dsc[229] +
    dwdot20dscqss7 * dscqss_dsc[264] + dwdot20dscqss9 * dscqss_dsc[334] +
    dwdot20dscqss11 * dscqss_dsc[404] + dwdot20dscqss12 * dscqss_dsc[439] +
    dwdot20dscqss14 * dscqss_dsc[509] + dwdot20dscqss13 * dscqss_dsc[474] +
    dwdot20dscqss15 * dscqss_dsc[544] + dwdot20dscqss8 * dscqss_dsc[299] +
    dwdot20dscqss10 * dscqss_dsc[369];
  J[740] =
    dwdot20dsc20 + dwdot20dscqss0 * dscqss_dsc[20] +
    dwdot20dscqss16 * dscqss_dsc[580] + dwdot20dscqss1 * dscqss_dsc[55] +
    dwdot20dscqss17 * dscqss_dsc[615] + dwdot20dscqss2 * dscqss_dsc[90] +
    dwdot20dscqss3 * dscqss_dsc[125] + dwdot20dscqss4 * dscqss_dsc[160] +
    dwdot20dscqss5 * dscqss_dsc[195] + dwdot20dscqss6 * dscqss_dsc[230] +
    dwdot20dscqss7 * dscqss_dsc[265] + dwdot20dscqss9 * dscqss_dsc[335] +
    dwdot20dscqss11 * dscqss_dsc[405] + dwdot20dscqss12 * dscqss_dsc[440] +
    dwdot20dscqss14 * dscqss_dsc[510] + dwdot20dscqss13 * dscqss_dsc[475] +
    dwdot20dscqss15 * dscqss_dsc[545] + dwdot20dscqss8 * dscqss_dsc[300] +
    dwdot20dscqss10 * dscqss_dsc[370];
  J[776] =
    dwdot20dsc21 + dwdot20dscqss0 * dscqss_dsc[21] +
    dwdot20dscqss16 * dscqss_dsc[581] + dwdot20dscqss1 * dscqss_dsc[56] +
    dwdot20dscqss17 * dscqss_dsc[616] + dwdot20dscqss2 * dscqss_dsc[91] +
    dwdot20dscqss3 * dscqss_dsc[126] + dwdot20dscqss4 * dscqss_dsc[161] +
    dwdot20dscqss5 * dscqss_dsc[196] + dwdot20dscqss6 * dscqss_dsc[231] +
    dwdot20dscqss7 * dscqss_dsc[266] + dwdot20dscqss9 * dscqss_dsc[336] +
    dwdot20dscqss11 * dscqss_dsc[406] + dwdot20dscqss12 * dscqss_dsc[441] +
    dwdot20dscqss14 * dscqss_dsc[511] + dwdot20dscqss13 * dscqss_dsc[476] +
    dwdot20dscqss15 * dscqss_dsc[546] + dwdot20dscqss8 * dscqss_dsc[301] +
    dwdot20dscqss10 * dscqss_dsc[371];
  J[812] =
    dwdot20dsc22 + dwdot20dscqss0 * dscqss_dsc[22] +
    dwdot20dscqss16 * dscqss_dsc[582] + dwdot20dscqss1 * dscqss_dsc[57] +
    dwdot20dscqss17 * dscqss_dsc[617] + dwdot20dscqss2 * dscqss_dsc[92] +
    dwdot20dscqss3 * dscqss_dsc[127] + dwdot20dscqss4 * dscqss_dsc[162] +
    dwdot20dscqss5 * dscqss_dsc[197] + dwdot20dscqss6 * dscqss_dsc[232] +
    dwdot20dscqss7 * dscqss_dsc[267] + dwdot20dscqss9 * dscqss_dsc[337] +
    dwdot20dscqss11 * dscqss_dsc[407] + dwdot20dscqss12 * dscqss_dsc[442] +
    dwdot20dscqss14 * dscqss_dsc[512] + dwdot20dscqss13 * dscqss_dsc[477] +
    dwdot20dscqss15 * dscqss_dsc[547] + dwdot20dscqss8 * dscqss_dsc[302] +
    dwdot20dscqss10 * dscqss_dsc[372];
  J[848] =
    dwdot20dsc23 + dwdot20dscqss0 * dscqss_dsc[23] +
    dwdot20dscqss16 * dscqss_dsc[583] + dwdot20dscqss1 * dscqss_dsc[58] +
    dwdot20dscqss17 * dscqss_dsc[618] + dwdot20dscqss2 * dscqss_dsc[93] +
    dwdot20dscqss3 * dscqss_dsc[128] + dwdot20dscqss4 * dscqss_dsc[163] +
    dwdot20dscqss5 * dscqss_dsc[198] + dwdot20dscqss6 * dscqss_dsc[233] +
    dwdot20dscqss7 * dscqss_dsc[268] + dwdot20dscqss9 * dscqss_dsc[338] +
    dwdot20dscqss11 * dscqss_dsc[408] + dwdot20dscqss12 * dscqss_dsc[443] +
    dwdot20dscqss14 * dscqss_dsc[513] + dwdot20dscqss13 * dscqss_dsc[478] +
    dwdot20dscqss15 * dscqss_dsc[548] + dwdot20dscqss8 * dscqss_dsc[303] +
    dwdot20dscqss10 * dscqss_dsc[373];
  J[884] =
    dwdot20dsc24 + dwdot20dscqss0 * dscqss_dsc[24] +
    dwdot20dscqss16 * dscqss_dsc[584] + dwdot20dscqss1 * dscqss_dsc[59] +
    dwdot20dscqss17 * dscqss_dsc[619] + dwdot20dscqss2 * dscqss_dsc[94] +
    dwdot20dscqss3 * dscqss_dsc[129] + dwdot20dscqss4 * dscqss_dsc[164] +
    dwdot20dscqss5 * dscqss_dsc[199] + dwdot20dscqss6 * dscqss_dsc[234] +
    dwdot20dscqss7 * dscqss_dsc[269] + dwdot20dscqss9 * dscqss_dsc[339] +
    dwdot20dscqss11 * dscqss_dsc[409] + dwdot20dscqss12 * dscqss_dsc[444] +
    dwdot20dscqss14 * dscqss_dsc[514] + dwdot20dscqss13 * dscqss_dsc[479] +
    dwdot20dscqss15 * dscqss_dsc[549] + dwdot20dscqss8 * dscqss_dsc[304] +
    dwdot20dscqss10 * dscqss_dsc[374];
  J[920] =
    dwdot20dsc25 + dwdot20dscqss0 * dscqss_dsc[25] +
    dwdot20dscqss16 * dscqss_dsc[585] + dwdot20dscqss1 * dscqss_dsc[60] +
    dwdot20dscqss17 * dscqss_dsc[620] + dwdot20dscqss2 * dscqss_dsc[95] +
    dwdot20dscqss3 * dscqss_dsc[130] + dwdot20dscqss4 * dscqss_dsc[165] +
    dwdot20dscqss5 * dscqss_dsc[200] + dwdot20dscqss6 * dscqss_dsc[235] +
    dwdot20dscqss7 * dscqss_dsc[270] + dwdot20dscqss9 * dscqss_dsc[340] +
    dwdot20dscqss11 * dscqss_dsc[410] + dwdot20dscqss12 * dscqss_dsc[445] +
    dwdot20dscqss14 * dscqss_dsc[515] + dwdot20dscqss13 * dscqss_dsc[480] +
    dwdot20dscqss15 * dscqss_dsc[550] + dwdot20dscqss8 * dscqss_dsc[305] +
    dwdot20dscqss10 * dscqss_dsc[375];
  J[956] =
    dwdot20dsc26 + dwdot20dscqss0 * dscqss_dsc[26] +
    dwdot20dscqss16 * dscqss_dsc[586] + dwdot20dscqss1 * dscqss_dsc[61] +
    dwdot20dscqss17 * dscqss_dsc[621] + dwdot20dscqss2 * dscqss_dsc[96] +
    dwdot20dscqss3 * dscqss_dsc[131] + dwdot20dscqss4 * dscqss_dsc[166] +
    dwdot20dscqss5 * dscqss_dsc[201] + dwdot20dscqss6 * dscqss_dsc[236] +
    dwdot20dscqss7 * dscqss_dsc[271] + dwdot20dscqss9 * dscqss_dsc[341] +
    dwdot20dscqss11 * dscqss_dsc[411] + dwdot20dscqss12 * dscqss_dsc[446] +
    dwdot20dscqss14 * dscqss_dsc[516] + dwdot20dscqss13 * dscqss_dsc[481] +
    dwdot20dscqss15 * dscqss_dsc[551] + dwdot20dscqss8 * dscqss_dsc[306] +
    dwdot20dscqss10 * dscqss_dsc[376];
  J[992] =
    dwdot20dsc27 + dwdot20dscqss0 * dscqss_dsc[27] +
    dwdot20dscqss16 * dscqss_dsc[587] + dwdot20dscqss1 * dscqss_dsc[62] +
    dwdot20dscqss17 * dscqss_dsc[622] + dwdot20dscqss2 * dscqss_dsc[97] +
    dwdot20dscqss3 * dscqss_dsc[132] + dwdot20dscqss4 * dscqss_dsc[167] +
    dwdot20dscqss5 * dscqss_dsc[202] + dwdot20dscqss6 * dscqss_dsc[237] +
    dwdot20dscqss7 * dscqss_dsc[272] + dwdot20dscqss9 * dscqss_dsc[342] +
    dwdot20dscqss11 * dscqss_dsc[412] + dwdot20dscqss12 * dscqss_dsc[447] +
    dwdot20dscqss14 * dscqss_dsc[517] + dwdot20dscqss13 * dscqss_dsc[482] +
    dwdot20dscqss15 * dscqss_dsc[552] + dwdot20dscqss8 * dscqss_dsc[307] +
    dwdot20dscqss10 * dscqss_dsc[377];
  J[1028] =
    dwdot20dsc28 + dwdot20dscqss0 * dscqss_dsc[28] +
    dwdot20dscqss16 * dscqss_dsc[588] + dwdot20dscqss1 * dscqss_dsc[63] +
    dwdot20dscqss17 * dscqss_dsc[623] + dwdot20dscqss2 * dscqss_dsc[98] +
    dwdot20dscqss3 * dscqss_dsc[133] + dwdot20dscqss4 * dscqss_dsc[168] +
    dwdot20dscqss5 * dscqss_dsc[203] + dwdot20dscqss6 * dscqss_dsc[238] +
    dwdot20dscqss7 * dscqss_dsc[273] + dwdot20dscqss9 * dscqss_dsc[343] +
    dwdot20dscqss11 * dscqss_dsc[413] + dwdot20dscqss12 * dscqss_dsc[448] +
    dwdot20dscqss14 * dscqss_dsc[518] + dwdot20dscqss13 * dscqss_dsc[483] +
    dwdot20dscqss15 * dscqss_dsc[553] + dwdot20dscqss8 * dscqss_dsc[308] +
    dwdot20dscqss10 * dscqss_dsc[378];
  J[1064] =
    dwdot20dsc29 + dwdot20dscqss0 * dscqss_dsc[29] +
    dwdot20dscqss16 * dscqss_dsc[589] + dwdot20dscqss1 * dscqss_dsc[64] +
    dwdot20dscqss17 * dscqss_dsc[624] + dwdot20dscqss2 * dscqss_dsc[99] +
    dwdot20dscqss3 * dscqss_dsc[134] + dwdot20dscqss4 * dscqss_dsc[169] +
    dwdot20dscqss5 * dscqss_dsc[204] + dwdot20dscqss6 * dscqss_dsc[239] +
    dwdot20dscqss7 * dscqss_dsc[274] + dwdot20dscqss9 * dscqss_dsc[344] +
    dwdot20dscqss11 * dscqss_dsc[414] + dwdot20dscqss12 * dscqss_dsc[449] +
    dwdot20dscqss14 * dscqss_dsc[519] + dwdot20dscqss13 * dscqss_dsc[484] +
    dwdot20dscqss15 * dscqss_dsc[554] + dwdot20dscqss8 * dscqss_dsc[309] +
    dwdot20dscqss10 * dscqss_dsc[379];
  J[1100] =
    dwdot20dsc30 + dwdot20dscqss0 * dscqss_dsc[30] +
    dwdot20dscqss16 * dscqss_dsc[590] + dwdot20dscqss1 * dscqss_dsc[65] +
    dwdot20dscqss17 * dscqss_dsc[625] + dwdot20dscqss2 * dscqss_dsc[100] +
    dwdot20dscqss3 * dscqss_dsc[135] + dwdot20dscqss4 * dscqss_dsc[170] +
    dwdot20dscqss5 * dscqss_dsc[205] + dwdot20dscqss6 * dscqss_dsc[240] +
    dwdot20dscqss7 * dscqss_dsc[275] + dwdot20dscqss9 * dscqss_dsc[345] +
    dwdot20dscqss11 * dscqss_dsc[415] + dwdot20dscqss12 * dscqss_dsc[450] +
    dwdot20dscqss14 * dscqss_dsc[520] + dwdot20dscqss13 * dscqss_dsc[485] +
    dwdot20dscqss15 * dscqss_dsc[555] + dwdot20dscqss8 * dscqss_dsc[310] +
    dwdot20dscqss10 * dscqss_dsc[380];
  J[1136] =
    dwdot20dsc31 + dwdot20dscqss0 * dscqss_dsc[31] +
    dwdot20dscqss16 * dscqss_dsc[591] + dwdot20dscqss1 * dscqss_dsc[66] +
    dwdot20dscqss17 * dscqss_dsc[626] + dwdot20dscqss2 * dscqss_dsc[101] +
    dwdot20dscqss3 * dscqss_dsc[136] + dwdot20dscqss4 * dscqss_dsc[171] +
    dwdot20dscqss5 * dscqss_dsc[206] + dwdot20dscqss6 * dscqss_dsc[241] +
    dwdot20dscqss7 * dscqss_dsc[276] + dwdot20dscqss9 * dscqss_dsc[346] +
    dwdot20dscqss11 * dscqss_dsc[416] + dwdot20dscqss12 * dscqss_dsc[451] +
    dwdot20dscqss14 * dscqss_dsc[521] + dwdot20dscqss13 * dscqss_dsc[486] +
    dwdot20dscqss15 * dscqss_dsc[556] + dwdot20dscqss8 * dscqss_dsc[311] +
    dwdot20dscqss10 * dscqss_dsc[381];
  J[1172] =
    dwdot20dsc32 + dwdot20dscqss0 * dscqss_dsc[32] +
    dwdot20dscqss16 * dscqss_dsc[592] + dwdot20dscqss1 * dscqss_dsc[67] +
    dwdot20dscqss17 * dscqss_dsc[627] + dwdot20dscqss2 * dscqss_dsc[102] +
    dwdot20dscqss3 * dscqss_dsc[137] + dwdot20dscqss4 * dscqss_dsc[172] +
    dwdot20dscqss5 * dscqss_dsc[207] + dwdot20dscqss6 * dscqss_dsc[242] +
    dwdot20dscqss7 * dscqss_dsc[277] + dwdot20dscqss9 * dscqss_dsc[347] +
    dwdot20dscqss11 * dscqss_dsc[417] + dwdot20dscqss12 * dscqss_dsc[452] +
    dwdot20dscqss14 * dscqss_dsc[522] + dwdot20dscqss13 * dscqss_dsc[487] +
    dwdot20dscqss15 * dscqss_dsc[557] + dwdot20dscqss8 * dscqss_dsc[312] +
    dwdot20dscqss10 * dscqss_dsc[382];
  J[1208] =
    dwdot20dsc33 + dwdot20dscqss0 * dscqss_dsc[33] +
    dwdot20dscqss16 * dscqss_dsc[593] + dwdot20dscqss1 * dscqss_dsc[68] +
    dwdot20dscqss17 * dscqss_dsc[628] + dwdot20dscqss2 * dscqss_dsc[103] +
    dwdot20dscqss3 * dscqss_dsc[138] + dwdot20dscqss4 * dscqss_dsc[173] +
    dwdot20dscqss5 * dscqss_dsc[208] + dwdot20dscqss6 * dscqss_dsc[243] +
    dwdot20dscqss7 * dscqss_dsc[278] + dwdot20dscqss9 * dscqss_dsc[348] +
    dwdot20dscqss11 * dscqss_dsc[418] + dwdot20dscqss12 * dscqss_dsc[453] +
    dwdot20dscqss14 * dscqss_dsc[523] + dwdot20dscqss13 * dscqss_dsc[488] +
    dwdot20dscqss15 * dscqss_dsc[558] + dwdot20dscqss8 * dscqss_dsc[313] +
    dwdot20dscqss10 * dscqss_dsc[383];
  J[1244] =
    dwdot20dsc34 + dwdot20dscqss0 * dscqss_dsc[34] +
    dwdot20dscqss16 * dscqss_dsc[594] + dwdot20dscqss1 * dscqss_dsc[69] +
    dwdot20dscqss17 * dscqss_dsc[629] + dwdot20dscqss2 * dscqss_dsc[104] +
    dwdot20dscqss3 * dscqss_dsc[139] + dwdot20dscqss4 * dscqss_dsc[174] +
    dwdot20dscqss5 * dscqss_dsc[209] + dwdot20dscqss6 * dscqss_dsc[244] +
    dwdot20dscqss7 * dscqss_dsc[279] + dwdot20dscqss9 * dscqss_dsc[349] +
    dwdot20dscqss11 * dscqss_dsc[419] + dwdot20dscqss12 * dscqss_dsc[454] +
    dwdot20dscqss14 * dscqss_dsc[524] + dwdot20dscqss13 * dscqss_dsc[489] +
    dwdot20dscqss15 * dscqss_dsc[559] + dwdot20dscqss8 * dscqss_dsc[314] +
    dwdot20dscqss10 * dscqss_dsc[384];
  J[21] =
    dwdot21dsc0 + dwdot21dscqss0 * dscqss_dsc[0] +
    dwdot21dscqss16 * dscqss_dsc[560] + dwdot21dscqss1 * dscqss_dsc[35] +
    dwdot21dscqss17 * dscqss_dsc[595] + dwdot21dscqss2 * dscqss_dsc[70] +
    dwdot21dscqss3 * dscqss_dsc[105] + dwdot21dscqss4 * dscqss_dsc[140] +
    dwdot21dscqss5 * dscqss_dsc[175] + dwdot21dscqss6 * dscqss_dsc[210] +
    dwdot21dscqss7 * dscqss_dsc[245] + dwdot21dscqss9 * dscqss_dsc[315] +
    dwdot21dscqss11 * dscqss_dsc[385] + dwdot21dscqss12 * dscqss_dsc[420] +
    dwdot21dscqss14 * dscqss_dsc[490] + dwdot21dscqss13 * dscqss_dsc[455] +
    dwdot21dscqss15 * dscqss_dsc[525] + dwdot21dscqss8 * dscqss_dsc[280] +
    dwdot21dscqss10 * dscqss_dsc[350];
  J[57] =
    dwdot21dsc1 + dwdot21dscqss0 * dscqss_dsc[1] +
    dwdot21dscqss16 * dscqss_dsc[561] + dwdot21dscqss1 * dscqss_dsc[36] +
    dwdot21dscqss17 * dscqss_dsc[596] + dwdot21dscqss2 * dscqss_dsc[71] +
    dwdot21dscqss3 * dscqss_dsc[106] + dwdot21dscqss4 * dscqss_dsc[141] +
    dwdot21dscqss5 * dscqss_dsc[176] + dwdot21dscqss6 * dscqss_dsc[211] +
    dwdot21dscqss7 * dscqss_dsc[246] + dwdot21dscqss9 * dscqss_dsc[316] +
    dwdot21dscqss11 * dscqss_dsc[386] + dwdot21dscqss12 * dscqss_dsc[421] +
    dwdot21dscqss14 * dscqss_dsc[491] + dwdot21dscqss13 * dscqss_dsc[456] +
    dwdot21dscqss15 * dscqss_dsc[526] + dwdot21dscqss8 * dscqss_dsc[281] +
    dwdot21dscqss10 * dscqss_dsc[351];
  J[93] =
    dwdot21dsc2 + dwdot21dscqss0 * dscqss_dsc[2] +
    dwdot21dscqss16 * dscqss_dsc[562] + dwdot21dscqss1 * dscqss_dsc[37] +
    dwdot21dscqss17 * dscqss_dsc[597] + dwdot21dscqss2 * dscqss_dsc[72] +
    dwdot21dscqss3 * dscqss_dsc[107] + dwdot21dscqss4 * dscqss_dsc[142] +
    dwdot21dscqss5 * dscqss_dsc[177] + dwdot21dscqss6 * dscqss_dsc[212] +
    dwdot21dscqss7 * dscqss_dsc[247] + dwdot21dscqss9 * dscqss_dsc[317] +
    dwdot21dscqss11 * dscqss_dsc[387] + dwdot21dscqss12 * dscqss_dsc[422] +
    dwdot21dscqss14 * dscqss_dsc[492] + dwdot21dscqss13 * dscqss_dsc[457] +
    dwdot21dscqss15 * dscqss_dsc[527] + dwdot21dscqss8 * dscqss_dsc[282] +
    dwdot21dscqss10 * dscqss_dsc[352];
  J[129] =
    dwdot21dsc3 + dwdot21dscqss0 * dscqss_dsc[3] +
    dwdot21dscqss16 * dscqss_dsc[563] + dwdot21dscqss1 * dscqss_dsc[38] +
    dwdot21dscqss17 * dscqss_dsc[598] + dwdot21dscqss2 * dscqss_dsc[73] +
    dwdot21dscqss3 * dscqss_dsc[108] + dwdot21dscqss4 * dscqss_dsc[143] +
    dwdot21dscqss5 * dscqss_dsc[178] + dwdot21dscqss6 * dscqss_dsc[213] +
    dwdot21dscqss7 * dscqss_dsc[248] + dwdot21dscqss9 * dscqss_dsc[318] +
    dwdot21dscqss11 * dscqss_dsc[388] + dwdot21dscqss12 * dscqss_dsc[423] +
    dwdot21dscqss14 * dscqss_dsc[493] + dwdot21dscqss13 * dscqss_dsc[458] +
    dwdot21dscqss15 * dscqss_dsc[528] + dwdot21dscqss8 * dscqss_dsc[283] +
    dwdot21dscqss10 * dscqss_dsc[353];
  J[165] =
    dwdot21dsc4 + dwdot21dscqss0 * dscqss_dsc[4] +
    dwdot21dscqss16 * dscqss_dsc[564] + dwdot21dscqss1 * dscqss_dsc[39] +
    dwdot21dscqss17 * dscqss_dsc[599] + dwdot21dscqss2 * dscqss_dsc[74] +
    dwdot21dscqss3 * dscqss_dsc[109] + dwdot21dscqss4 * dscqss_dsc[144] +
    dwdot21dscqss5 * dscqss_dsc[179] + dwdot21dscqss6 * dscqss_dsc[214] +
    dwdot21dscqss7 * dscqss_dsc[249] + dwdot21dscqss9 * dscqss_dsc[319] +
    dwdot21dscqss11 * dscqss_dsc[389] + dwdot21dscqss12 * dscqss_dsc[424] +
    dwdot21dscqss14 * dscqss_dsc[494] + dwdot21dscqss13 * dscqss_dsc[459] +
    dwdot21dscqss15 * dscqss_dsc[529] + dwdot21dscqss8 * dscqss_dsc[284] +
    dwdot21dscqss10 * dscqss_dsc[354];
  J[201] =
    dwdot21dsc5 + dwdot21dscqss0 * dscqss_dsc[5] +
    dwdot21dscqss16 * dscqss_dsc[565] + dwdot21dscqss1 * dscqss_dsc[40] +
    dwdot21dscqss17 * dscqss_dsc[600] + dwdot21dscqss2 * dscqss_dsc[75] +
    dwdot21dscqss3 * dscqss_dsc[110] + dwdot21dscqss4 * dscqss_dsc[145] +
    dwdot21dscqss5 * dscqss_dsc[180] + dwdot21dscqss6 * dscqss_dsc[215] +
    dwdot21dscqss7 * dscqss_dsc[250] + dwdot21dscqss9 * dscqss_dsc[320] +
    dwdot21dscqss11 * dscqss_dsc[390] + dwdot21dscqss12 * dscqss_dsc[425] +
    dwdot21dscqss14 * dscqss_dsc[495] + dwdot21dscqss13 * dscqss_dsc[460] +
    dwdot21dscqss15 * dscqss_dsc[530] + dwdot21dscqss8 * dscqss_dsc[285] +
    dwdot21dscqss10 * dscqss_dsc[355];
  J[237] =
    dwdot21dsc6 + dwdot21dscqss0 * dscqss_dsc[6] +
    dwdot21dscqss16 * dscqss_dsc[566] + dwdot21dscqss1 * dscqss_dsc[41] +
    dwdot21dscqss17 * dscqss_dsc[601] + dwdot21dscqss2 * dscqss_dsc[76] +
    dwdot21dscqss3 * dscqss_dsc[111] + dwdot21dscqss4 * dscqss_dsc[146] +
    dwdot21dscqss5 * dscqss_dsc[181] + dwdot21dscqss6 * dscqss_dsc[216] +
    dwdot21dscqss7 * dscqss_dsc[251] + dwdot21dscqss9 * dscqss_dsc[321] +
    dwdot21dscqss11 * dscqss_dsc[391] + dwdot21dscqss12 * dscqss_dsc[426] +
    dwdot21dscqss14 * dscqss_dsc[496] + dwdot21dscqss13 * dscqss_dsc[461] +
    dwdot21dscqss15 * dscqss_dsc[531] + dwdot21dscqss8 * dscqss_dsc[286] +
    dwdot21dscqss10 * dscqss_dsc[356];
  J[273] =
    dwdot21dsc7 + dwdot21dscqss0 * dscqss_dsc[7] +
    dwdot21dscqss16 * dscqss_dsc[567] + dwdot21dscqss1 * dscqss_dsc[42] +
    dwdot21dscqss17 * dscqss_dsc[602] + dwdot21dscqss2 * dscqss_dsc[77] +
    dwdot21dscqss3 * dscqss_dsc[112] + dwdot21dscqss4 * dscqss_dsc[147] +
    dwdot21dscqss5 * dscqss_dsc[182] + dwdot21dscqss6 * dscqss_dsc[217] +
    dwdot21dscqss7 * dscqss_dsc[252] + dwdot21dscqss9 * dscqss_dsc[322] +
    dwdot21dscqss11 * dscqss_dsc[392] + dwdot21dscqss12 * dscqss_dsc[427] +
    dwdot21dscqss14 * dscqss_dsc[497] + dwdot21dscqss13 * dscqss_dsc[462] +
    dwdot21dscqss15 * dscqss_dsc[532] + dwdot21dscqss8 * dscqss_dsc[287] +
    dwdot21dscqss10 * dscqss_dsc[357];
  J[309] =
    dwdot21dsc8 + dwdot21dscqss0 * dscqss_dsc[8] +
    dwdot21dscqss16 * dscqss_dsc[568] + dwdot21dscqss1 * dscqss_dsc[43] +
    dwdot21dscqss17 * dscqss_dsc[603] + dwdot21dscqss2 * dscqss_dsc[78] +
    dwdot21dscqss3 * dscqss_dsc[113] + dwdot21dscqss4 * dscqss_dsc[148] +
    dwdot21dscqss5 * dscqss_dsc[183] + dwdot21dscqss6 * dscqss_dsc[218] +
    dwdot21dscqss7 * dscqss_dsc[253] + dwdot21dscqss9 * dscqss_dsc[323] +
    dwdot21dscqss11 * dscqss_dsc[393] + dwdot21dscqss12 * dscqss_dsc[428] +
    dwdot21dscqss14 * dscqss_dsc[498] + dwdot21dscqss13 * dscqss_dsc[463] +
    dwdot21dscqss15 * dscqss_dsc[533] + dwdot21dscqss8 * dscqss_dsc[288] +
    dwdot21dscqss10 * dscqss_dsc[358];
  J[345] =
    dwdot21dsc9 + dwdot21dscqss0 * dscqss_dsc[9] +
    dwdot21dscqss16 * dscqss_dsc[569] + dwdot21dscqss1 * dscqss_dsc[44] +
    dwdot21dscqss17 * dscqss_dsc[604] + dwdot21dscqss2 * dscqss_dsc[79] +
    dwdot21dscqss3 * dscqss_dsc[114] + dwdot21dscqss4 * dscqss_dsc[149] +
    dwdot21dscqss5 * dscqss_dsc[184] + dwdot21dscqss6 * dscqss_dsc[219] +
    dwdot21dscqss7 * dscqss_dsc[254] + dwdot21dscqss9 * dscqss_dsc[324] +
    dwdot21dscqss11 * dscqss_dsc[394] + dwdot21dscqss12 * dscqss_dsc[429] +
    dwdot21dscqss14 * dscqss_dsc[499] + dwdot21dscqss13 * dscqss_dsc[464] +
    dwdot21dscqss15 * dscqss_dsc[534] + dwdot21dscqss8 * dscqss_dsc[289] +
    dwdot21dscqss10 * dscqss_dsc[359];
  J[381] =
    dwdot21dsc10 + dwdot21dscqss0 * dscqss_dsc[10] +
    dwdot21dscqss16 * dscqss_dsc[570] + dwdot21dscqss1 * dscqss_dsc[45] +
    dwdot21dscqss17 * dscqss_dsc[605] + dwdot21dscqss2 * dscqss_dsc[80] +
    dwdot21dscqss3 * dscqss_dsc[115] + dwdot21dscqss4 * dscqss_dsc[150] +
    dwdot21dscqss5 * dscqss_dsc[185] + dwdot21dscqss6 * dscqss_dsc[220] +
    dwdot21dscqss7 * dscqss_dsc[255] + dwdot21dscqss9 * dscqss_dsc[325] +
    dwdot21dscqss11 * dscqss_dsc[395] + dwdot21dscqss12 * dscqss_dsc[430] +
    dwdot21dscqss14 * dscqss_dsc[500] + dwdot21dscqss13 * dscqss_dsc[465] +
    dwdot21dscqss15 * dscqss_dsc[535] + dwdot21dscqss8 * dscqss_dsc[290] +
    dwdot21dscqss10 * dscqss_dsc[360];
  J[417] =
    dwdot21dsc11 + dwdot21dscqss0 * dscqss_dsc[11] +
    dwdot21dscqss16 * dscqss_dsc[571] + dwdot21dscqss1 * dscqss_dsc[46] +
    dwdot21dscqss17 * dscqss_dsc[606] + dwdot21dscqss2 * dscqss_dsc[81] +
    dwdot21dscqss3 * dscqss_dsc[116] + dwdot21dscqss4 * dscqss_dsc[151] +
    dwdot21dscqss5 * dscqss_dsc[186] + dwdot21dscqss6 * dscqss_dsc[221] +
    dwdot21dscqss7 * dscqss_dsc[256] + dwdot21dscqss9 * dscqss_dsc[326] +
    dwdot21dscqss11 * dscqss_dsc[396] + dwdot21dscqss12 * dscqss_dsc[431] +
    dwdot21dscqss14 * dscqss_dsc[501] + dwdot21dscqss13 * dscqss_dsc[466] +
    dwdot21dscqss15 * dscqss_dsc[536] + dwdot21dscqss8 * dscqss_dsc[291] +
    dwdot21dscqss10 * dscqss_dsc[361];
  J[453] =
    dwdot21dsc12 + dwdot21dscqss0 * dscqss_dsc[12] +
    dwdot21dscqss16 * dscqss_dsc[572] + dwdot21dscqss1 * dscqss_dsc[47] +
    dwdot21dscqss17 * dscqss_dsc[607] + dwdot21dscqss2 * dscqss_dsc[82] +
    dwdot21dscqss3 * dscqss_dsc[117] + dwdot21dscqss4 * dscqss_dsc[152] +
    dwdot21dscqss5 * dscqss_dsc[187] + dwdot21dscqss6 * dscqss_dsc[222] +
    dwdot21dscqss7 * dscqss_dsc[257] + dwdot21dscqss9 * dscqss_dsc[327] +
    dwdot21dscqss11 * dscqss_dsc[397] + dwdot21dscqss12 * dscqss_dsc[432] +
    dwdot21dscqss14 * dscqss_dsc[502] + dwdot21dscqss13 * dscqss_dsc[467] +
    dwdot21dscqss15 * dscqss_dsc[537] + dwdot21dscqss8 * dscqss_dsc[292] +
    dwdot21dscqss10 * dscqss_dsc[362];
  J[489] =
    dwdot21dsc13 + dwdot21dscqss0 * dscqss_dsc[13] +
    dwdot21dscqss16 * dscqss_dsc[573] + dwdot21dscqss1 * dscqss_dsc[48] +
    dwdot21dscqss17 * dscqss_dsc[608] + dwdot21dscqss2 * dscqss_dsc[83] +
    dwdot21dscqss3 * dscqss_dsc[118] + dwdot21dscqss4 * dscqss_dsc[153] +
    dwdot21dscqss5 * dscqss_dsc[188] + dwdot21dscqss6 * dscqss_dsc[223] +
    dwdot21dscqss7 * dscqss_dsc[258] + dwdot21dscqss9 * dscqss_dsc[328] +
    dwdot21dscqss11 * dscqss_dsc[398] + dwdot21dscqss12 * dscqss_dsc[433] +
    dwdot21dscqss14 * dscqss_dsc[503] + dwdot21dscqss13 * dscqss_dsc[468] +
    dwdot21dscqss15 * dscqss_dsc[538] + dwdot21dscqss8 * dscqss_dsc[293] +
    dwdot21dscqss10 * dscqss_dsc[363];
  J[525] =
    dwdot21dsc14 + dwdot21dscqss0 * dscqss_dsc[14] +
    dwdot21dscqss16 * dscqss_dsc[574] + dwdot21dscqss1 * dscqss_dsc[49] +
    dwdot21dscqss17 * dscqss_dsc[609] + dwdot21dscqss2 * dscqss_dsc[84] +
    dwdot21dscqss3 * dscqss_dsc[119] + dwdot21dscqss4 * dscqss_dsc[154] +
    dwdot21dscqss5 * dscqss_dsc[189] + dwdot21dscqss6 * dscqss_dsc[224] +
    dwdot21dscqss7 * dscqss_dsc[259] + dwdot21dscqss9 * dscqss_dsc[329] +
    dwdot21dscqss11 * dscqss_dsc[399] + dwdot21dscqss12 * dscqss_dsc[434] +
    dwdot21dscqss14 * dscqss_dsc[504] + dwdot21dscqss13 * dscqss_dsc[469] +
    dwdot21dscqss15 * dscqss_dsc[539] + dwdot21dscqss8 * dscqss_dsc[294] +
    dwdot21dscqss10 * dscqss_dsc[364];
  J[561] =
    dwdot21dsc15 + dwdot21dscqss0 * dscqss_dsc[15] +
    dwdot21dscqss16 * dscqss_dsc[575] + dwdot21dscqss1 * dscqss_dsc[50] +
    dwdot21dscqss17 * dscqss_dsc[610] + dwdot21dscqss2 * dscqss_dsc[85] +
    dwdot21dscqss3 * dscqss_dsc[120] + dwdot21dscqss4 * dscqss_dsc[155] +
    dwdot21dscqss5 * dscqss_dsc[190] + dwdot21dscqss6 * dscqss_dsc[225] +
    dwdot21dscqss7 * dscqss_dsc[260] + dwdot21dscqss9 * dscqss_dsc[330] +
    dwdot21dscqss11 * dscqss_dsc[400] + dwdot21dscqss12 * dscqss_dsc[435] +
    dwdot21dscqss14 * dscqss_dsc[505] + dwdot21dscqss13 * dscqss_dsc[470] +
    dwdot21dscqss15 * dscqss_dsc[540] + dwdot21dscqss8 * dscqss_dsc[295] +
    dwdot21dscqss10 * dscqss_dsc[365];
  J[597] =
    dwdot21dsc16 + dwdot21dscqss0 * dscqss_dsc[16] +
    dwdot21dscqss16 * dscqss_dsc[576] + dwdot21dscqss1 * dscqss_dsc[51] +
    dwdot21dscqss17 * dscqss_dsc[611] + dwdot21dscqss2 * dscqss_dsc[86] +
    dwdot21dscqss3 * dscqss_dsc[121] + dwdot21dscqss4 * dscqss_dsc[156] +
    dwdot21dscqss5 * dscqss_dsc[191] + dwdot21dscqss6 * dscqss_dsc[226] +
    dwdot21dscqss7 * dscqss_dsc[261] + dwdot21dscqss9 * dscqss_dsc[331] +
    dwdot21dscqss11 * dscqss_dsc[401] + dwdot21dscqss12 * dscqss_dsc[436] +
    dwdot21dscqss14 * dscqss_dsc[506] + dwdot21dscqss13 * dscqss_dsc[471] +
    dwdot21dscqss15 * dscqss_dsc[541] + dwdot21dscqss8 * dscqss_dsc[296] +
    dwdot21dscqss10 * dscqss_dsc[366];
  J[633] =
    dwdot21dsc17 + dwdot21dscqss0 * dscqss_dsc[17] +
    dwdot21dscqss16 * dscqss_dsc[577] + dwdot21dscqss1 * dscqss_dsc[52] +
    dwdot21dscqss17 * dscqss_dsc[612] + dwdot21dscqss2 * dscqss_dsc[87] +
    dwdot21dscqss3 * dscqss_dsc[122] + dwdot21dscqss4 * dscqss_dsc[157] +
    dwdot21dscqss5 * dscqss_dsc[192] + dwdot21dscqss6 * dscqss_dsc[227] +
    dwdot21dscqss7 * dscqss_dsc[262] + dwdot21dscqss9 * dscqss_dsc[332] +
    dwdot21dscqss11 * dscqss_dsc[402] + dwdot21dscqss12 * dscqss_dsc[437] +
    dwdot21dscqss14 * dscqss_dsc[507] + dwdot21dscqss13 * dscqss_dsc[472] +
    dwdot21dscqss15 * dscqss_dsc[542] + dwdot21dscqss8 * dscqss_dsc[297] +
    dwdot21dscqss10 * dscqss_dsc[367];
  J[669] =
    dwdot21dsc18 + dwdot21dscqss0 * dscqss_dsc[18] +
    dwdot21dscqss16 * dscqss_dsc[578] + dwdot21dscqss1 * dscqss_dsc[53] +
    dwdot21dscqss17 * dscqss_dsc[613] + dwdot21dscqss2 * dscqss_dsc[88] +
    dwdot21dscqss3 * dscqss_dsc[123] + dwdot21dscqss4 * dscqss_dsc[158] +
    dwdot21dscqss5 * dscqss_dsc[193] + dwdot21dscqss6 * dscqss_dsc[228] +
    dwdot21dscqss7 * dscqss_dsc[263] + dwdot21dscqss9 * dscqss_dsc[333] +
    dwdot21dscqss11 * dscqss_dsc[403] + dwdot21dscqss12 * dscqss_dsc[438] +
    dwdot21dscqss14 * dscqss_dsc[508] + dwdot21dscqss13 * dscqss_dsc[473] +
    dwdot21dscqss15 * dscqss_dsc[543] + dwdot21dscqss8 * dscqss_dsc[298] +
    dwdot21dscqss10 * dscqss_dsc[368];
  J[705] =
    dwdot21dsc19 + dwdot21dscqss0 * dscqss_dsc[19] +
    dwdot21dscqss16 * dscqss_dsc[579] + dwdot21dscqss1 * dscqss_dsc[54] +
    dwdot21dscqss17 * dscqss_dsc[614] + dwdot21dscqss2 * dscqss_dsc[89] +
    dwdot21dscqss3 * dscqss_dsc[124] + dwdot21dscqss4 * dscqss_dsc[159] +
    dwdot21dscqss5 * dscqss_dsc[194] + dwdot21dscqss6 * dscqss_dsc[229] +
    dwdot21dscqss7 * dscqss_dsc[264] + dwdot21dscqss9 * dscqss_dsc[334] +
    dwdot21dscqss11 * dscqss_dsc[404] + dwdot21dscqss12 * dscqss_dsc[439] +
    dwdot21dscqss14 * dscqss_dsc[509] + dwdot21dscqss13 * dscqss_dsc[474] +
    dwdot21dscqss15 * dscqss_dsc[544] + dwdot21dscqss8 * dscqss_dsc[299] +
    dwdot21dscqss10 * dscqss_dsc[369];
  J[741] =
    dwdot21dsc20 + dwdot21dscqss0 * dscqss_dsc[20] +
    dwdot21dscqss16 * dscqss_dsc[580] + dwdot21dscqss1 * dscqss_dsc[55] +
    dwdot21dscqss17 * dscqss_dsc[615] + dwdot21dscqss2 * dscqss_dsc[90] +
    dwdot21dscqss3 * dscqss_dsc[125] + dwdot21dscqss4 * dscqss_dsc[160] +
    dwdot21dscqss5 * dscqss_dsc[195] + dwdot21dscqss6 * dscqss_dsc[230] +
    dwdot21dscqss7 * dscqss_dsc[265] + dwdot21dscqss9 * dscqss_dsc[335] +
    dwdot21dscqss11 * dscqss_dsc[405] + dwdot21dscqss12 * dscqss_dsc[440] +
    dwdot21dscqss14 * dscqss_dsc[510] + dwdot21dscqss13 * dscqss_dsc[475] +
    dwdot21dscqss15 * dscqss_dsc[545] + dwdot21dscqss8 * dscqss_dsc[300] +
    dwdot21dscqss10 * dscqss_dsc[370];
  J[777] =
    dwdot21dsc21 + dwdot21dscqss0 * dscqss_dsc[21] +
    dwdot21dscqss16 * dscqss_dsc[581] + dwdot21dscqss1 * dscqss_dsc[56] +
    dwdot21dscqss17 * dscqss_dsc[616] + dwdot21dscqss2 * dscqss_dsc[91] +
    dwdot21dscqss3 * dscqss_dsc[126] + dwdot21dscqss4 * dscqss_dsc[161] +
    dwdot21dscqss5 * dscqss_dsc[196] + dwdot21dscqss6 * dscqss_dsc[231] +
    dwdot21dscqss7 * dscqss_dsc[266] + dwdot21dscqss9 * dscqss_dsc[336] +
    dwdot21dscqss11 * dscqss_dsc[406] + dwdot21dscqss12 * dscqss_dsc[441] +
    dwdot21dscqss14 * dscqss_dsc[511] + dwdot21dscqss13 * dscqss_dsc[476] +
    dwdot21dscqss15 * dscqss_dsc[546] + dwdot21dscqss8 * dscqss_dsc[301] +
    dwdot21dscqss10 * dscqss_dsc[371];
  J[813] =
    dwdot21dsc22 + dwdot21dscqss0 * dscqss_dsc[22] +
    dwdot21dscqss16 * dscqss_dsc[582] + dwdot21dscqss1 * dscqss_dsc[57] +
    dwdot21dscqss17 * dscqss_dsc[617] + dwdot21dscqss2 * dscqss_dsc[92] +
    dwdot21dscqss3 * dscqss_dsc[127] + dwdot21dscqss4 * dscqss_dsc[162] +
    dwdot21dscqss5 * dscqss_dsc[197] + dwdot21dscqss6 * dscqss_dsc[232] +
    dwdot21dscqss7 * dscqss_dsc[267] + dwdot21dscqss9 * dscqss_dsc[337] +
    dwdot21dscqss11 * dscqss_dsc[407] + dwdot21dscqss12 * dscqss_dsc[442] +
    dwdot21dscqss14 * dscqss_dsc[512] + dwdot21dscqss13 * dscqss_dsc[477] +
    dwdot21dscqss15 * dscqss_dsc[547] + dwdot21dscqss8 * dscqss_dsc[302] +
    dwdot21dscqss10 * dscqss_dsc[372];
  J[849] =
    dwdot21dsc23 + dwdot21dscqss0 * dscqss_dsc[23] +
    dwdot21dscqss16 * dscqss_dsc[583] + dwdot21dscqss1 * dscqss_dsc[58] +
    dwdot21dscqss17 * dscqss_dsc[618] + dwdot21dscqss2 * dscqss_dsc[93] +
    dwdot21dscqss3 * dscqss_dsc[128] + dwdot21dscqss4 * dscqss_dsc[163] +
    dwdot21dscqss5 * dscqss_dsc[198] + dwdot21dscqss6 * dscqss_dsc[233] +
    dwdot21dscqss7 * dscqss_dsc[268] + dwdot21dscqss9 * dscqss_dsc[338] +
    dwdot21dscqss11 * dscqss_dsc[408] + dwdot21dscqss12 * dscqss_dsc[443] +
    dwdot21dscqss14 * dscqss_dsc[513] + dwdot21dscqss13 * dscqss_dsc[478] +
    dwdot21dscqss15 * dscqss_dsc[548] + dwdot21dscqss8 * dscqss_dsc[303] +
    dwdot21dscqss10 * dscqss_dsc[373];
  J[885] =
    dwdot21dsc24 + dwdot21dscqss0 * dscqss_dsc[24] +
    dwdot21dscqss16 * dscqss_dsc[584] + dwdot21dscqss1 * dscqss_dsc[59] +
    dwdot21dscqss17 * dscqss_dsc[619] + dwdot21dscqss2 * dscqss_dsc[94] +
    dwdot21dscqss3 * dscqss_dsc[129] + dwdot21dscqss4 * dscqss_dsc[164] +
    dwdot21dscqss5 * dscqss_dsc[199] + dwdot21dscqss6 * dscqss_dsc[234] +
    dwdot21dscqss7 * dscqss_dsc[269] + dwdot21dscqss9 * dscqss_dsc[339] +
    dwdot21dscqss11 * dscqss_dsc[409] + dwdot21dscqss12 * dscqss_dsc[444] +
    dwdot21dscqss14 * dscqss_dsc[514] + dwdot21dscqss13 * dscqss_dsc[479] +
    dwdot21dscqss15 * dscqss_dsc[549] + dwdot21dscqss8 * dscqss_dsc[304] +
    dwdot21dscqss10 * dscqss_dsc[374];
  J[921] =
    dwdot21dsc25 + dwdot21dscqss0 * dscqss_dsc[25] +
    dwdot21dscqss16 * dscqss_dsc[585] + dwdot21dscqss1 * dscqss_dsc[60] +
    dwdot21dscqss17 * dscqss_dsc[620] + dwdot21dscqss2 * dscqss_dsc[95] +
    dwdot21dscqss3 * dscqss_dsc[130] + dwdot21dscqss4 * dscqss_dsc[165] +
    dwdot21dscqss5 * dscqss_dsc[200] + dwdot21dscqss6 * dscqss_dsc[235] +
    dwdot21dscqss7 * dscqss_dsc[270] + dwdot21dscqss9 * dscqss_dsc[340] +
    dwdot21dscqss11 * dscqss_dsc[410] + dwdot21dscqss12 * dscqss_dsc[445] +
    dwdot21dscqss14 * dscqss_dsc[515] + dwdot21dscqss13 * dscqss_dsc[480] +
    dwdot21dscqss15 * dscqss_dsc[550] + dwdot21dscqss8 * dscqss_dsc[305] +
    dwdot21dscqss10 * dscqss_dsc[375];
  J[957] =
    dwdot21dsc26 + dwdot21dscqss0 * dscqss_dsc[26] +
    dwdot21dscqss16 * dscqss_dsc[586] + dwdot21dscqss1 * dscqss_dsc[61] +
    dwdot21dscqss17 * dscqss_dsc[621] + dwdot21dscqss2 * dscqss_dsc[96] +
    dwdot21dscqss3 * dscqss_dsc[131] + dwdot21dscqss4 * dscqss_dsc[166] +
    dwdot21dscqss5 * dscqss_dsc[201] + dwdot21dscqss6 * dscqss_dsc[236] +
    dwdot21dscqss7 * dscqss_dsc[271] + dwdot21dscqss9 * dscqss_dsc[341] +
    dwdot21dscqss11 * dscqss_dsc[411] + dwdot21dscqss12 * dscqss_dsc[446] +
    dwdot21dscqss14 * dscqss_dsc[516] + dwdot21dscqss13 * dscqss_dsc[481] +
    dwdot21dscqss15 * dscqss_dsc[551] + dwdot21dscqss8 * dscqss_dsc[306] +
    dwdot21dscqss10 * dscqss_dsc[376];
  J[993] =
    dwdot21dsc27 + dwdot21dscqss0 * dscqss_dsc[27] +
    dwdot21dscqss16 * dscqss_dsc[587] + dwdot21dscqss1 * dscqss_dsc[62] +
    dwdot21dscqss17 * dscqss_dsc[622] + dwdot21dscqss2 * dscqss_dsc[97] +
    dwdot21dscqss3 * dscqss_dsc[132] + dwdot21dscqss4 * dscqss_dsc[167] +
    dwdot21dscqss5 * dscqss_dsc[202] + dwdot21dscqss6 * dscqss_dsc[237] +
    dwdot21dscqss7 * dscqss_dsc[272] + dwdot21dscqss9 * dscqss_dsc[342] +
    dwdot21dscqss11 * dscqss_dsc[412] + dwdot21dscqss12 * dscqss_dsc[447] +
    dwdot21dscqss14 * dscqss_dsc[517] + dwdot21dscqss13 * dscqss_dsc[482] +
    dwdot21dscqss15 * dscqss_dsc[552] + dwdot21dscqss8 * dscqss_dsc[307] +
    dwdot21dscqss10 * dscqss_dsc[377];
  J[1029] =
    dwdot21dsc28 + dwdot21dscqss0 * dscqss_dsc[28] +
    dwdot21dscqss16 * dscqss_dsc[588] + dwdot21dscqss1 * dscqss_dsc[63] +
    dwdot21dscqss17 * dscqss_dsc[623] + dwdot21dscqss2 * dscqss_dsc[98] +
    dwdot21dscqss3 * dscqss_dsc[133] + dwdot21dscqss4 * dscqss_dsc[168] +
    dwdot21dscqss5 * dscqss_dsc[203] + dwdot21dscqss6 * dscqss_dsc[238] +
    dwdot21dscqss7 * dscqss_dsc[273] + dwdot21dscqss9 * dscqss_dsc[343] +
    dwdot21dscqss11 * dscqss_dsc[413] + dwdot21dscqss12 * dscqss_dsc[448] +
    dwdot21dscqss14 * dscqss_dsc[518] + dwdot21dscqss13 * dscqss_dsc[483] +
    dwdot21dscqss15 * dscqss_dsc[553] + dwdot21dscqss8 * dscqss_dsc[308] +
    dwdot21dscqss10 * dscqss_dsc[378];
  J[1065] =
    dwdot21dsc29 + dwdot21dscqss0 * dscqss_dsc[29] +
    dwdot21dscqss16 * dscqss_dsc[589] + dwdot21dscqss1 * dscqss_dsc[64] +
    dwdot21dscqss17 * dscqss_dsc[624] + dwdot21dscqss2 * dscqss_dsc[99] +
    dwdot21dscqss3 * dscqss_dsc[134] + dwdot21dscqss4 * dscqss_dsc[169] +
    dwdot21dscqss5 * dscqss_dsc[204] + dwdot21dscqss6 * dscqss_dsc[239] +
    dwdot21dscqss7 * dscqss_dsc[274] + dwdot21dscqss9 * dscqss_dsc[344] +
    dwdot21dscqss11 * dscqss_dsc[414] + dwdot21dscqss12 * dscqss_dsc[449] +
    dwdot21dscqss14 * dscqss_dsc[519] + dwdot21dscqss13 * dscqss_dsc[484] +
    dwdot21dscqss15 * dscqss_dsc[554] + dwdot21dscqss8 * dscqss_dsc[309] +
    dwdot21dscqss10 * dscqss_dsc[379];
  J[1101] =
    dwdot21dsc30 + dwdot21dscqss0 * dscqss_dsc[30] +
    dwdot21dscqss16 * dscqss_dsc[590] + dwdot21dscqss1 * dscqss_dsc[65] +
    dwdot21dscqss17 * dscqss_dsc[625] + dwdot21dscqss2 * dscqss_dsc[100] +
    dwdot21dscqss3 * dscqss_dsc[135] + dwdot21dscqss4 * dscqss_dsc[170] +
    dwdot21dscqss5 * dscqss_dsc[205] + dwdot21dscqss6 * dscqss_dsc[240] +
    dwdot21dscqss7 * dscqss_dsc[275] + dwdot21dscqss9 * dscqss_dsc[345] +
    dwdot21dscqss11 * dscqss_dsc[415] + dwdot21dscqss12 * dscqss_dsc[450] +
    dwdot21dscqss14 * dscqss_dsc[520] + dwdot21dscqss13 * dscqss_dsc[485] +
    dwdot21dscqss15 * dscqss_dsc[555] + dwdot21dscqss8 * dscqss_dsc[310] +
    dwdot21dscqss10 * dscqss_dsc[380];
  J[1137] =
    dwdot21dsc31 + dwdot21dscqss0 * dscqss_dsc[31] +
    dwdot21dscqss16 * dscqss_dsc[591] + dwdot21dscqss1 * dscqss_dsc[66] +
    dwdot21dscqss17 * dscqss_dsc[626] + dwdot21dscqss2 * dscqss_dsc[101] +
    dwdot21dscqss3 * dscqss_dsc[136] + dwdot21dscqss4 * dscqss_dsc[171] +
    dwdot21dscqss5 * dscqss_dsc[206] + dwdot21dscqss6 * dscqss_dsc[241] +
    dwdot21dscqss7 * dscqss_dsc[276] + dwdot21dscqss9 * dscqss_dsc[346] +
    dwdot21dscqss11 * dscqss_dsc[416] + dwdot21dscqss12 * dscqss_dsc[451] +
    dwdot21dscqss14 * dscqss_dsc[521] + dwdot21dscqss13 * dscqss_dsc[486] +
    dwdot21dscqss15 * dscqss_dsc[556] + dwdot21dscqss8 * dscqss_dsc[311] +
    dwdot21dscqss10 * dscqss_dsc[381];
  J[1173] =
    dwdot21dsc32 + dwdot21dscqss0 * dscqss_dsc[32] +
    dwdot21dscqss16 * dscqss_dsc[592] + dwdot21dscqss1 * dscqss_dsc[67] +
    dwdot21dscqss17 * dscqss_dsc[627] + dwdot21dscqss2 * dscqss_dsc[102] +
    dwdot21dscqss3 * dscqss_dsc[137] + dwdot21dscqss4 * dscqss_dsc[172] +
    dwdot21dscqss5 * dscqss_dsc[207] + dwdot21dscqss6 * dscqss_dsc[242] +
    dwdot21dscqss7 * dscqss_dsc[277] + dwdot21dscqss9 * dscqss_dsc[347] +
    dwdot21dscqss11 * dscqss_dsc[417] + dwdot21dscqss12 * dscqss_dsc[452] +
    dwdot21dscqss14 * dscqss_dsc[522] + dwdot21dscqss13 * dscqss_dsc[487] +
    dwdot21dscqss15 * dscqss_dsc[557] + dwdot21dscqss8 * dscqss_dsc[312] +
    dwdot21dscqss10 * dscqss_dsc[382];
  J[1209] =
    dwdot21dsc33 + dwdot21dscqss0 * dscqss_dsc[33] +
    dwdot21dscqss16 * dscqss_dsc[593] + dwdot21dscqss1 * dscqss_dsc[68] +
    dwdot21dscqss17 * dscqss_dsc[628] + dwdot21dscqss2 * dscqss_dsc[103] +
    dwdot21dscqss3 * dscqss_dsc[138] + dwdot21dscqss4 * dscqss_dsc[173] +
    dwdot21dscqss5 * dscqss_dsc[208] + dwdot21dscqss6 * dscqss_dsc[243] +
    dwdot21dscqss7 * dscqss_dsc[278] + dwdot21dscqss9 * dscqss_dsc[348] +
    dwdot21dscqss11 * dscqss_dsc[418] + dwdot21dscqss12 * dscqss_dsc[453] +
    dwdot21dscqss14 * dscqss_dsc[523] + dwdot21dscqss13 * dscqss_dsc[488] +
    dwdot21dscqss15 * dscqss_dsc[558] + dwdot21dscqss8 * dscqss_dsc[313] +
    dwdot21dscqss10 * dscqss_dsc[383];
  J[1245] =
    dwdot21dsc34 + dwdot21dscqss0 * dscqss_dsc[34] +
    dwdot21dscqss16 * dscqss_dsc[594] + dwdot21dscqss1 * dscqss_dsc[69] +
    dwdot21dscqss17 * dscqss_dsc[629] + dwdot21dscqss2 * dscqss_dsc[104] +
    dwdot21dscqss3 * dscqss_dsc[139] + dwdot21dscqss4 * dscqss_dsc[174] +
    dwdot21dscqss5 * dscqss_dsc[209] + dwdot21dscqss6 * dscqss_dsc[244] +
    dwdot21dscqss7 * dscqss_dsc[279] + dwdot21dscqss9 * dscqss_dsc[349] +
    dwdot21dscqss11 * dscqss_dsc[419] + dwdot21dscqss12 * dscqss_dsc[454] +
    dwdot21dscqss14 * dscqss_dsc[524] + dwdot21dscqss13 * dscqss_dsc[489] +
    dwdot21dscqss15 * dscqss_dsc[559] + dwdot21dscqss8 * dscqss_dsc[314] +
    dwdot21dscqss10 * dscqss_dsc[384];
  J[22] =
    dwdot22dsc0 + dwdot22dscqss0 * dscqss_dsc[0] +
    dwdot22dscqss16 * dscqss_dsc[560] + dwdot22dscqss1 * dscqss_dsc[35] +
    dwdot22dscqss17 * dscqss_dsc[595] + dwdot22dscqss2 * dscqss_dsc[70] +
    dwdot22dscqss3 * dscqss_dsc[105] + dwdot22dscqss4 * dscqss_dsc[140] +
    dwdot22dscqss5 * dscqss_dsc[175] + dwdot22dscqss6 * dscqss_dsc[210] +
    dwdot22dscqss7 * dscqss_dsc[245] + dwdot22dscqss9 * dscqss_dsc[315] +
    dwdot22dscqss11 * dscqss_dsc[385] + dwdot22dscqss12 * dscqss_dsc[420] +
    dwdot22dscqss14 * dscqss_dsc[490] + dwdot22dscqss13 * dscqss_dsc[455] +
    dwdot22dscqss15 * dscqss_dsc[525] + dwdot22dscqss8 * dscqss_dsc[280] +
    dwdot22dscqss10 * dscqss_dsc[350];
  J[58] =
    dwdot22dsc1 + dwdot22dscqss0 * dscqss_dsc[1] +
    dwdot22dscqss16 * dscqss_dsc[561] + dwdot22dscqss1 * dscqss_dsc[36] +
    dwdot22dscqss17 * dscqss_dsc[596] + dwdot22dscqss2 * dscqss_dsc[71] +
    dwdot22dscqss3 * dscqss_dsc[106] + dwdot22dscqss4 * dscqss_dsc[141] +
    dwdot22dscqss5 * dscqss_dsc[176] + dwdot22dscqss6 * dscqss_dsc[211] +
    dwdot22dscqss7 * dscqss_dsc[246] + dwdot22dscqss9 * dscqss_dsc[316] +
    dwdot22dscqss11 * dscqss_dsc[386] + dwdot22dscqss12 * dscqss_dsc[421] +
    dwdot22dscqss14 * dscqss_dsc[491] + dwdot22dscqss13 * dscqss_dsc[456] +
    dwdot22dscqss15 * dscqss_dsc[526] + dwdot22dscqss8 * dscqss_dsc[281] +
    dwdot22dscqss10 * dscqss_dsc[351];
  J[94] =
    dwdot22dsc2 + dwdot22dscqss0 * dscqss_dsc[2] +
    dwdot22dscqss16 * dscqss_dsc[562] + dwdot22dscqss1 * dscqss_dsc[37] +
    dwdot22dscqss17 * dscqss_dsc[597] + dwdot22dscqss2 * dscqss_dsc[72] +
    dwdot22dscqss3 * dscqss_dsc[107] + dwdot22dscqss4 * dscqss_dsc[142] +
    dwdot22dscqss5 * dscqss_dsc[177] + dwdot22dscqss6 * dscqss_dsc[212] +
    dwdot22dscqss7 * dscqss_dsc[247] + dwdot22dscqss9 * dscqss_dsc[317] +
    dwdot22dscqss11 * dscqss_dsc[387] + dwdot22dscqss12 * dscqss_dsc[422] +
    dwdot22dscqss14 * dscqss_dsc[492] + dwdot22dscqss13 * dscqss_dsc[457] +
    dwdot22dscqss15 * dscqss_dsc[527] + dwdot22dscqss8 * dscqss_dsc[282] +
    dwdot22dscqss10 * dscqss_dsc[352];
  J[130] =
    dwdot22dsc3 + dwdot22dscqss0 * dscqss_dsc[3] +
    dwdot22dscqss16 * dscqss_dsc[563] + dwdot22dscqss1 * dscqss_dsc[38] +
    dwdot22dscqss17 * dscqss_dsc[598] + dwdot22dscqss2 * dscqss_dsc[73] +
    dwdot22dscqss3 * dscqss_dsc[108] + dwdot22dscqss4 * dscqss_dsc[143] +
    dwdot22dscqss5 * dscqss_dsc[178] + dwdot22dscqss6 * dscqss_dsc[213] +
    dwdot22dscqss7 * dscqss_dsc[248] + dwdot22dscqss9 * dscqss_dsc[318] +
    dwdot22dscqss11 * dscqss_dsc[388] + dwdot22dscqss12 * dscqss_dsc[423] +
    dwdot22dscqss14 * dscqss_dsc[493] + dwdot22dscqss13 * dscqss_dsc[458] +
    dwdot22dscqss15 * dscqss_dsc[528] + dwdot22dscqss8 * dscqss_dsc[283] +
    dwdot22dscqss10 * dscqss_dsc[353];
  J[166] =
    dwdot22dsc4 + dwdot22dscqss0 * dscqss_dsc[4] +
    dwdot22dscqss16 * dscqss_dsc[564] + dwdot22dscqss1 * dscqss_dsc[39] +
    dwdot22dscqss17 * dscqss_dsc[599] + dwdot22dscqss2 * dscqss_dsc[74] +
    dwdot22dscqss3 * dscqss_dsc[109] + dwdot22dscqss4 * dscqss_dsc[144] +
    dwdot22dscqss5 * dscqss_dsc[179] + dwdot22dscqss6 * dscqss_dsc[214] +
    dwdot22dscqss7 * dscqss_dsc[249] + dwdot22dscqss9 * dscqss_dsc[319] +
    dwdot22dscqss11 * dscqss_dsc[389] + dwdot22dscqss12 * dscqss_dsc[424] +
    dwdot22dscqss14 * dscqss_dsc[494] + dwdot22dscqss13 * dscqss_dsc[459] +
    dwdot22dscqss15 * dscqss_dsc[529] + dwdot22dscqss8 * dscqss_dsc[284] +
    dwdot22dscqss10 * dscqss_dsc[354];
  J[202] =
    dwdot22dsc5 + dwdot22dscqss0 * dscqss_dsc[5] +
    dwdot22dscqss16 * dscqss_dsc[565] + dwdot22dscqss1 * dscqss_dsc[40] +
    dwdot22dscqss17 * dscqss_dsc[600] + dwdot22dscqss2 * dscqss_dsc[75] +
    dwdot22dscqss3 * dscqss_dsc[110] + dwdot22dscqss4 * dscqss_dsc[145] +
    dwdot22dscqss5 * dscqss_dsc[180] + dwdot22dscqss6 * dscqss_dsc[215] +
    dwdot22dscqss7 * dscqss_dsc[250] + dwdot22dscqss9 * dscqss_dsc[320] +
    dwdot22dscqss11 * dscqss_dsc[390] + dwdot22dscqss12 * dscqss_dsc[425] +
    dwdot22dscqss14 * dscqss_dsc[495] + dwdot22dscqss13 * dscqss_dsc[460] +
    dwdot22dscqss15 * dscqss_dsc[530] + dwdot22dscqss8 * dscqss_dsc[285] +
    dwdot22dscqss10 * dscqss_dsc[355];
  J[238] =
    dwdot22dsc6 + dwdot22dscqss0 * dscqss_dsc[6] +
    dwdot22dscqss16 * dscqss_dsc[566] + dwdot22dscqss1 * dscqss_dsc[41] +
    dwdot22dscqss17 * dscqss_dsc[601] + dwdot22dscqss2 * dscqss_dsc[76] +
    dwdot22dscqss3 * dscqss_dsc[111] + dwdot22dscqss4 * dscqss_dsc[146] +
    dwdot22dscqss5 * dscqss_dsc[181] + dwdot22dscqss6 * dscqss_dsc[216] +
    dwdot22dscqss7 * dscqss_dsc[251] + dwdot22dscqss9 * dscqss_dsc[321] +
    dwdot22dscqss11 * dscqss_dsc[391] + dwdot22dscqss12 * dscqss_dsc[426] +
    dwdot22dscqss14 * dscqss_dsc[496] + dwdot22dscqss13 * dscqss_dsc[461] +
    dwdot22dscqss15 * dscqss_dsc[531] + dwdot22dscqss8 * dscqss_dsc[286] +
    dwdot22dscqss10 * dscqss_dsc[356];
  J[274] =
    dwdot22dsc7 + dwdot22dscqss0 * dscqss_dsc[7] +
    dwdot22dscqss16 * dscqss_dsc[567] + dwdot22dscqss1 * dscqss_dsc[42] +
    dwdot22dscqss17 * dscqss_dsc[602] + dwdot22dscqss2 * dscqss_dsc[77] +
    dwdot22dscqss3 * dscqss_dsc[112] + dwdot22dscqss4 * dscqss_dsc[147] +
    dwdot22dscqss5 * dscqss_dsc[182] + dwdot22dscqss6 * dscqss_dsc[217] +
    dwdot22dscqss7 * dscqss_dsc[252] + dwdot22dscqss9 * dscqss_dsc[322] +
    dwdot22dscqss11 * dscqss_dsc[392] + dwdot22dscqss12 * dscqss_dsc[427] +
    dwdot22dscqss14 * dscqss_dsc[497] + dwdot22dscqss13 * dscqss_dsc[462] +
    dwdot22dscqss15 * dscqss_dsc[532] + dwdot22dscqss8 * dscqss_dsc[287] +
    dwdot22dscqss10 * dscqss_dsc[357];
  J[310] =
    dwdot22dsc8 + dwdot22dscqss0 * dscqss_dsc[8] +
    dwdot22dscqss16 * dscqss_dsc[568] + dwdot22dscqss1 * dscqss_dsc[43] +
    dwdot22dscqss17 * dscqss_dsc[603] + dwdot22dscqss2 * dscqss_dsc[78] +
    dwdot22dscqss3 * dscqss_dsc[113] + dwdot22dscqss4 * dscqss_dsc[148] +
    dwdot22dscqss5 * dscqss_dsc[183] + dwdot22dscqss6 * dscqss_dsc[218] +
    dwdot22dscqss7 * dscqss_dsc[253] + dwdot22dscqss9 * dscqss_dsc[323] +
    dwdot22dscqss11 * dscqss_dsc[393] + dwdot22dscqss12 * dscqss_dsc[428] +
    dwdot22dscqss14 * dscqss_dsc[498] + dwdot22dscqss13 * dscqss_dsc[463] +
    dwdot22dscqss15 * dscqss_dsc[533] + dwdot22dscqss8 * dscqss_dsc[288] +
    dwdot22dscqss10 * dscqss_dsc[358];
  J[346] =
    dwdot22dsc9 + dwdot22dscqss0 * dscqss_dsc[9] +
    dwdot22dscqss16 * dscqss_dsc[569] + dwdot22dscqss1 * dscqss_dsc[44] +
    dwdot22dscqss17 * dscqss_dsc[604] + dwdot22dscqss2 * dscqss_dsc[79] +
    dwdot22dscqss3 * dscqss_dsc[114] + dwdot22dscqss4 * dscqss_dsc[149] +
    dwdot22dscqss5 * dscqss_dsc[184] + dwdot22dscqss6 * dscqss_dsc[219] +
    dwdot22dscqss7 * dscqss_dsc[254] + dwdot22dscqss9 * dscqss_dsc[324] +
    dwdot22dscqss11 * dscqss_dsc[394] + dwdot22dscqss12 * dscqss_dsc[429] +
    dwdot22dscqss14 * dscqss_dsc[499] + dwdot22dscqss13 * dscqss_dsc[464] +
    dwdot22dscqss15 * dscqss_dsc[534] + dwdot22dscqss8 * dscqss_dsc[289] +
    dwdot22dscqss10 * dscqss_dsc[359];
  J[382] =
    dwdot22dsc10 + dwdot22dscqss0 * dscqss_dsc[10] +
    dwdot22dscqss16 * dscqss_dsc[570] + dwdot22dscqss1 * dscqss_dsc[45] +
    dwdot22dscqss17 * dscqss_dsc[605] + dwdot22dscqss2 * dscqss_dsc[80] +
    dwdot22dscqss3 * dscqss_dsc[115] + dwdot22dscqss4 * dscqss_dsc[150] +
    dwdot22dscqss5 * dscqss_dsc[185] + dwdot22dscqss6 * dscqss_dsc[220] +
    dwdot22dscqss7 * dscqss_dsc[255] + dwdot22dscqss9 * dscqss_dsc[325] +
    dwdot22dscqss11 * dscqss_dsc[395] + dwdot22dscqss12 * dscqss_dsc[430] +
    dwdot22dscqss14 * dscqss_dsc[500] + dwdot22dscqss13 * dscqss_dsc[465] +
    dwdot22dscqss15 * dscqss_dsc[535] + dwdot22dscqss8 * dscqss_dsc[290] +
    dwdot22dscqss10 * dscqss_dsc[360];
  J[418] =
    dwdot22dsc11 + dwdot22dscqss0 * dscqss_dsc[11] +
    dwdot22dscqss16 * dscqss_dsc[571] + dwdot22dscqss1 * dscqss_dsc[46] +
    dwdot22dscqss17 * dscqss_dsc[606] + dwdot22dscqss2 * dscqss_dsc[81] +
    dwdot22dscqss3 * dscqss_dsc[116] + dwdot22dscqss4 * dscqss_dsc[151] +
    dwdot22dscqss5 * dscqss_dsc[186] + dwdot22dscqss6 * dscqss_dsc[221] +
    dwdot22dscqss7 * dscqss_dsc[256] + dwdot22dscqss9 * dscqss_dsc[326] +
    dwdot22dscqss11 * dscqss_dsc[396] + dwdot22dscqss12 * dscqss_dsc[431] +
    dwdot22dscqss14 * dscqss_dsc[501] + dwdot22dscqss13 * dscqss_dsc[466] +
    dwdot22dscqss15 * dscqss_dsc[536] + dwdot22dscqss8 * dscqss_dsc[291] +
    dwdot22dscqss10 * dscqss_dsc[361];
  J[454] =
    dwdot22dsc12 + dwdot22dscqss0 * dscqss_dsc[12] +
    dwdot22dscqss16 * dscqss_dsc[572] + dwdot22dscqss1 * dscqss_dsc[47] +
    dwdot22dscqss17 * dscqss_dsc[607] + dwdot22dscqss2 * dscqss_dsc[82] +
    dwdot22dscqss3 * dscqss_dsc[117] + dwdot22dscqss4 * dscqss_dsc[152] +
    dwdot22dscqss5 * dscqss_dsc[187] + dwdot22dscqss6 * dscqss_dsc[222] +
    dwdot22dscqss7 * dscqss_dsc[257] + dwdot22dscqss9 * dscqss_dsc[327] +
    dwdot22dscqss11 * dscqss_dsc[397] + dwdot22dscqss12 * dscqss_dsc[432] +
    dwdot22dscqss14 * dscqss_dsc[502] + dwdot22dscqss13 * dscqss_dsc[467] +
    dwdot22dscqss15 * dscqss_dsc[537] + dwdot22dscqss8 * dscqss_dsc[292] +
    dwdot22dscqss10 * dscqss_dsc[362];
  J[490] =
    dwdot22dsc13 + dwdot22dscqss0 * dscqss_dsc[13] +
    dwdot22dscqss16 * dscqss_dsc[573] + dwdot22dscqss1 * dscqss_dsc[48] +
    dwdot22dscqss17 * dscqss_dsc[608] + dwdot22dscqss2 * dscqss_dsc[83] +
    dwdot22dscqss3 * dscqss_dsc[118] + dwdot22dscqss4 * dscqss_dsc[153] +
    dwdot22dscqss5 * dscqss_dsc[188] + dwdot22dscqss6 * dscqss_dsc[223] +
    dwdot22dscqss7 * dscqss_dsc[258] + dwdot22dscqss9 * dscqss_dsc[328] +
    dwdot22dscqss11 * dscqss_dsc[398] + dwdot22dscqss12 * dscqss_dsc[433] +
    dwdot22dscqss14 * dscqss_dsc[503] + dwdot22dscqss13 * dscqss_dsc[468] +
    dwdot22dscqss15 * dscqss_dsc[538] + dwdot22dscqss8 * dscqss_dsc[293] +
    dwdot22dscqss10 * dscqss_dsc[363];
  J[526] =
    dwdot22dsc14 + dwdot22dscqss0 * dscqss_dsc[14] +
    dwdot22dscqss16 * dscqss_dsc[574] + dwdot22dscqss1 * dscqss_dsc[49] +
    dwdot22dscqss17 * dscqss_dsc[609] + dwdot22dscqss2 * dscqss_dsc[84] +
    dwdot22dscqss3 * dscqss_dsc[119] + dwdot22dscqss4 * dscqss_dsc[154] +
    dwdot22dscqss5 * dscqss_dsc[189] + dwdot22dscqss6 * dscqss_dsc[224] +
    dwdot22dscqss7 * dscqss_dsc[259] + dwdot22dscqss9 * dscqss_dsc[329] +
    dwdot22dscqss11 * dscqss_dsc[399] + dwdot22dscqss12 * dscqss_dsc[434] +
    dwdot22dscqss14 * dscqss_dsc[504] + dwdot22dscqss13 * dscqss_dsc[469] +
    dwdot22dscqss15 * dscqss_dsc[539] + dwdot22dscqss8 * dscqss_dsc[294] +
    dwdot22dscqss10 * dscqss_dsc[364];
  J[562] =
    dwdot22dsc15 + dwdot22dscqss0 * dscqss_dsc[15] +
    dwdot22dscqss16 * dscqss_dsc[575] + dwdot22dscqss1 * dscqss_dsc[50] +
    dwdot22dscqss17 * dscqss_dsc[610] + dwdot22dscqss2 * dscqss_dsc[85] +
    dwdot22dscqss3 * dscqss_dsc[120] + dwdot22dscqss4 * dscqss_dsc[155] +
    dwdot22dscqss5 * dscqss_dsc[190] + dwdot22dscqss6 * dscqss_dsc[225] +
    dwdot22dscqss7 * dscqss_dsc[260] + dwdot22dscqss9 * dscqss_dsc[330] +
    dwdot22dscqss11 * dscqss_dsc[400] + dwdot22dscqss12 * dscqss_dsc[435] +
    dwdot22dscqss14 * dscqss_dsc[505] + dwdot22dscqss13 * dscqss_dsc[470] +
    dwdot22dscqss15 * dscqss_dsc[540] + dwdot22dscqss8 * dscqss_dsc[295] +
    dwdot22dscqss10 * dscqss_dsc[365];
  J[598] =
    dwdot22dsc16 + dwdot22dscqss0 * dscqss_dsc[16] +
    dwdot22dscqss16 * dscqss_dsc[576] + dwdot22dscqss1 * dscqss_dsc[51] +
    dwdot22dscqss17 * dscqss_dsc[611] + dwdot22dscqss2 * dscqss_dsc[86] +
    dwdot22dscqss3 * dscqss_dsc[121] + dwdot22dscqss4 * dscqss_dsc[156] +
    dwdot22dscqss5 * dscqss_dsc[191] + dwdot22dscqss6 * dscqss_dsc[226] +
    dwdot22dscqss7 * dscqss_dsc[261] + dwdot22dscqss9 * dscqss_dsc[331] +
    dwdot22dscqss11 * dscqss_dsc[401] + dwdot22dscqss12 * dscqss_dsc[436] +
    dwdot22dscqss14 * dscqss_dsc[506] + dwdot22dscqss13 * dscqss_dsc[471] +
    dwdot22dscqss15 * dscqss_dsc[541] + dwdot22dscqss8 * dscqss_dsc[296] +
    dwdot22dscqss10 * dscqss_dsc[366];
  J[634] =
    dwdot22dsc17 + dwdot22dscqss0 * dscqss_dsc[17] +
    dwdot22dscqss16 * dscqss_dsc[577] + dwdot22dscqss1 * dscqss_dsc[52] +
    dwdot22dscqss17 * dscqss_dsc[612] + dwdot22dscqss2 * dscqss_dsc[87] +
    dwdot22dscqss3 * dscqss_dsc[122] + dwdot22dscqss4 * dscqss_dsc[157] +
    dwdot22dscqss5 * dscqss_dsc[192] + dwdot22dscqss6 * dscqss_dsc[227] +
    dwdot22dscqss7 * dscqss_dsc[262] + dwdot22dscqss9 * dscqss_dsc[332] +
    dwdot22dscqss11 * dscqss_dsc[402] + dwdot22dscqss12 * dscqss_dsc[437] +
    dwdot22dscqss14 * dscqss_dsc[507] + dwdot22dscqss13 * dscqss_dsc[472] +
    dwdot22dscqss15 * dscqss_dsc[542] + dwdot22dscqss8 * dscqss_dsc[297] +
    dwdot22dscqss10 * dscqss_dsc[367];
  J[670] =
    dwdot22dsc18 + dwdot22dscqss0 * dscqss_dsc[18] +
    dwdot22dscqss16 * dscqss_dsc[578] + dwdot22dscqss1 * dscqss_dsc[53] +
    dwdot22dscqss17 * dscqss_dsc[613] + dwdot22dscqss2 * dscqss_dsc[88] +
    dwdot22dscqss3 * dscqss_dsc[123] + dwdot22dscqss4 * dscqss_dsc[158] +
    dwdot22dscqss5 * dscqss_dsc[193] + dwdot22dscqss6 * dscqss_dsc[228] +
    dwdot22dscqss7 * dscqss_dsc[263] + dwdot22dscqss9 * dscqss_dsc[333] +
    dwdot22dscqss11 * dscqss_dsc[403] + dwdot22dscqss12 * dscqss_dsc[438] +
    dwdot22dscqss14 * dscqss_dsc[508] + dwdot22dscqss13 * dscqss_dsc[473] +
    dwdot22dscqss15 * dscqss_dsc[543] + dwdot22dscqss8 * dscqss_dsc[298] +
    dwdot22dscqss10 * dscqss_dsc[368];
  J[706] =
    dwdot22dsc19 + dwdot22dscqss0 * dscqss_dsc[19] +
    dwdot22dscqss16 * dscqss_dsc[579] + dwdot22dscqss1 * dscqss_dsc[54] +
    dwdot22dscqss17 * dscqss_dsc[614] + dwdot22dscqss2 * dscqss_dsc[89] +
    dwdot22dscqss3 * dscqss_dsc[124] + dwdot22dscqss4 * dscqss_dsc[159] +
    dwdot22dscqss5 * dscqss_dsc[194] + dwdot22dscqss6 * dscqss_dsc[229] +
    dwdot22dscqss7 * dscqss_dsc[264] + dwdot22dscqss9 * dscqss_dsc[334] +
    dwdot22dscqss11 * dscqss_dsc[404] + dwdot22dscqss12 * dscqss_dsc[439] +
    dwdot22dscqss14 * dscqss_dsc[509] + dwdot22dscqss13 * dscqss_dsc[474] +
    dwdot22dscqss15 * dscqss_dsc[544] + dwdot22dscqss8 * dscqss_dsc[299] +
    dwdot22dscqss10 * dscqss_dsc[369];
  J[742] =
    dwdot22dsc20 + dwdot22dscqss0 * dscqss_dsc[20] +
    dwdot22dscqss16 * dscqss_dsc[580] + dwdot22dscqss1 * dscqss_dsc[55] +
    dwdot22dscqss17 * dscqss_dsc[615] + dwdot22dscqss2 * dscqss_dsc[90] +
    dwdot22dscqss3 * dscqss_dsc[125] + dwdot22dscqss4 * dscqss_dsc[160] +
    dwdot22dscqss5 * dscqss_dsc[195] + dwdot22dscqss6 * dscqss_dsc[230] +
    dwdot22dscqss7 * dscqss_dsc[265] + dwdot22dscqss9 * dscqss_dsc[335] +
    dwdot22dscqss11 * dscqss_dsc[405] + dwdot22dscqss12 * dscqss_dsc[440] +
    dwdot22dscqss14 * dscqss_dsc[510] + dwdot22dscqss13 * dscqss_dsc[475] +
    dwdot22dscqss15 * dscqss_dsc[545] + dwdot22dscqss8 * dscqss_dsc[300] +
    dwdot22dscqss10 * dscqss_dsc[370];
  J[778] =
    dwdot22dsc21 + dwdot22dscqss0 * dscqss_dsc[21] +
    dwdot22dscqss16 * dscqss_dsc[581] + dwdot22dscqss1 * dscqss_dsc[56] +
    dwdot22dscqss17 * dscqss_dsc[616] + dwdot22dscqss2 * dscqss_dsc[91] +
    dwdot22dscqss3 * dscqss_dsc[126] + dwdot22dscqss4 * dscqss_dsc[161] +
    dwdot22dscqss5 * dscqss_dsc[196] + dwdot22dscqss6 * dscqss_dsc[231] +
    dwdot22dscqss7 * dscqss_dsc[266] + dwdot22dscqss9 * dscqss_dsc[336] +
    dwdot22dscqss11 * dscqss_dsc[406] + dwdot22dscqss12 * dscqss_dsc[441] +
    dwdot22dscqss14 * dscqss_dsc[511] + dwdot22dscqss13 * dscqss_dsc[476] +
    dwdot22dscqss15 * dscqss_dsc[546] + dwdot22dscqss8 * dscqss_dsc[301] +
    dwdot22dscqss10 * dscqss_dsc[371];
  J[814] =
    dwdot22dsc22 + dwdot22dscqss0 * dscqss_dsc[22] +
    dwdot22dscqss16 * dscqss_dsc[582] + dwdot22dscqss1 * dscqss_dsc[57] +
    dwdot22dscqss17 * dscqss_dsc[617] + dwdot22dscqss2 * dscqss_dsc[92] +
    dwdot22dscqss3 * dscqss_dsc[127] + dwdot22dscqss4 * dscqss_dsc[162] +
    dwdot22dscqss5 * dscqss_dsc[197] + dwdot22dscqss6 * dscqss_dsc[232] +
    dwdot22dscqss7 * dscqss_dsc[267] + dwdot22dscqss9 * dscqss_dsc[337] +
    dwdot22dscqss11 * dscqss_dsc[407] + dwdot22dscqss12 * dscqss_dsc[442] +
    dwdot22dscqss14 * dscqss_dsc[512] + dwdot22dscqss13 * dscqss_dsc[477] +
    dwdot22dscqss15 * dscqss_dsc[547] + dwdot22dscqss8 * dscqss_dsc[302] +
    dwdot22dscqss10 * dscqss_dsc[372];
  J[850] =
    dwdot22dsc23 + dwdot22dscqss0 * dscqss_dsc[23] +
    dwdot22dscqss16 * dscqss_dsc[583] + dwdot22dscqss1 * dscqss_dsc[58] +
    dwdot22dscqss17 * dscqss_dsc[618] + dwdot22dscqss2 * dscqss_dsc[93] +
    dwdot22dscqss3 * dscqss_dsc[128] + dwdot22dscqss4 * dscqss_dsc[163] +
    dwdot22dscqss5 * dscqss_dsc[198] + dwdot22dscqss6 * dscqss_dsc[233] +
    dwdot22dscqss7 * dscqss_dsc[268] + dwdot22dscqss9 * dscqss_dsc[338] +
    dwdot22dscqss11 * dscqss_dsc[408] + dwdot22dscqss12 * dscqss_dsc[443] +
    dwdot22dscqss14 * dscqss_dsc[513] + dwdot22dscqss13 * dscqss_dsc[478] +
    dwdot22dscqss15 * dscqss_dsc[548] + dwdot22dscqss8 * dscqss_dsc[303] +
    dwdot22dscqss10 * dscqss_dsc[373];
  J[886] =
    dwdot22dsc24 + dwdot22dscqss0 * dscqss_dsc[24] +
    dwdot22dscqss16 * dscqss_dsc[584] + dwdot22dscqss1 * dscqss_dsc[59] +
    dwdot22dscqss17 * dscqss_dsc[619] + dwdot22dscqss2 * dscqss_dsc[94] +
    dwdot22dscqss3 * dscqss_dsc[129] + dwdot22dscqss4 * dscqss_dsc[164] +
    dwdot22dscqss5 * dscqss_dsc[199] + dwdot22dscqss6 * dscqss_dsc[234] +
    dwdot22dscqss7 * dscqss_dsc[269] + dwdot22dscqss9 * dscqss_dsc[339] +
    dwdot22dscqss11 * dscqss_dsc[409] + dwdot22dscqss12 * dscqss_dsc[444] +
    dwdot22dscqss14 * dscqss_dsc[514] + dwdot22dscqss13 * dscqss_dsc[479] +
    dwdot22dscqss15 * dscqss_dsc[549] + dwdot22dscqss8 * dscqss_dsc[304] +
    dwdot22dscqss10 * dscqss_dsc[374];
  J[922] =
    dwdot22dsc25 + dwdot22dscqss0 * dscqss_dsc[25] +
    dwdot22dscqss16 * dscqss_dsc[585] + dwdot22dscqss1 * dscqss_dsc[60] +
    dwdot22dscqss17 * dscqss_dsc[620] + dwdot22dscqss2 * dscqss_dsc[95] +
    dwdot22dscqss3 * dscqss_dsc[130] + dwdot22dscqss4 * dscqss_dsc[165] +
    dwdot22dscqss5 * dscqss_dsc[200] + dwdot22dscqss6 * dscqss_dsc[235] +
    dwdot22dscqss7 * dscqss_dsc[270] + dwdot22dscqss9 * dscqss_dsc[340] +
    dwdot22dscqss11 * dscqss_dsc[410] + dwdot22dscqss12 * dscqss_dsc[445] +
    dwdot22dscqss14 * dscqss_dsc[515] + dwdot22dscqss13 * dscqss_dsc[480] +
    dwdot22dscqss15 * dscqss_dsc[550] + dwdot22dscqss8 * dscqss_dsc[305] +
    dwdot22dscqss10 * dscqss_dsc[375];
  J[958] =
    dwdot22dsc26 + dwdot22dscqss0 * dscqss_dsc[26] +
    dwdot22dscqss16 * dscqss_dsc[586] + dwdot22dscqss1 * dscqss_dsc[61] +
    dwdot22dscqss17 * dscqss_dsc[621] + dwdot22dscqss2 * dscqss_dsc[96] +
    dwdot22dscqss3 * dscqss_dsc[131] + dwdot22dscqss4 * dscqss_dsc[166] +
    dwdot22dscqss5 * dscqss_dsc[201] + dwdot22dscqss6 * dscqss_dsc[236] +
    dwdot22dscqss7 * dscqss_dsc[271] + dwdot22dscqss9 * dscqss_dsc[341] +
    dwdot22dscqss11 * dscqss_dsc[411] + dwdot22dscqss12 * dscqss_dsc[446] +
    dwdot22dscqss14 * dscqss_dsc[516] + dwdot22dscqss13 * dscqss_dsc[481] +
    dwdot22dscqss15 * dscqss_dsc[551] + dwdot22dscqss8 * dscqss_dsc[306] +
    dwdot22dscqss10 * dscqss_dsc[376];
  J[994] =
    dwdot22dsc27 + dwdot22dscqss0 * dscqss_dsc[27] +
    dwdot22dscqss16 * dscqss_dsc[587] + dwdot22dscqss1 * dscqss_dsc[62] +
    dwdot22dscqss17 * dscqss_dsc[622] + dwdot22dscqss2 * dscqss_dsc[97] +
    dwdot22dscqss3 * dscqss_dsc[132] + dwdot22dscqss4 * dscqss_dsc[167] +
    dwdot22dscqss5 * dscqss_dsc[202] + dwdot22dscqss6 * dscqss_dsc[237] +
    dwdot22dscqss7 * dscqss_dsc[272] + dwdot22dscqss9 * dscqss_dsc[342] +
    dwdot22dscqss11 * dscqss_dsc[412] + dwdot22dscqss12 * dscqss_dsc[447] +
    dwdot22dscqss14 * dscqss_dsc[517] + dwdot22dscqss13 * dscqss_dsc[482] +
    dwdot22dscqss15 * dscqss_dsc[552] + dwdot22dscqss8 * dscqss_dsc[307] +
    dwdot22dscqss10 * dscqss_dsc[377];
  J[1030] =
    dwdot22dsc28 + dwdot22dscqss0 * dscqss_dsc[28] +
    dwdot22dscqss16 * dscqss_dsc[588] + dwdot22dscqss1 * dscqss_dsc[63] +
    dwdot22dscqss17 * dscqss_dsc[623] + dwdot22dscqss2 * dscqss_dsc[98] +
    dwdot22dscqss3 * dscqss_dsc[133] + dwdot22dscqss4 * dscqss_dsc[168] +
    dwdot22dscqss5 * dscqss_dsc[203] + dwdot22dscqss6 * dscqss_dsc[238] +
    dwdot22dscqss7 * dscqss_dsc[273] + dwdot22dscqss9 * dscqss_dsc[343] +
    dwdot22dscqss11 * dscqss_dsc[413] + dwdot22dscqss12 * dscqss_dsc[448] +
    dwdot22dscqss14 * dscqss_dsc[518] + dwdot22dscqss13 * dscqss_dsc[483] +
    dwdot22dscqss15 * dscqss_dsc[553] + dwdot22dscqss8 * dscqss_dsc[308] +
    dwdot22dscqss10 * dscqss_dsc[378];
  J[1066] =
    dwdot22dsc29 + dwdot22dscqss0 * dscqss_dsc[29] +
    dwdot22dscqss16 * dscqss_dsc[589] + dwdot22dscqss1 * dscqss_dsc[64] +
    dwdot22dscqss17 * dscqss_dsc[624] + dwdot22dscqss2 * dscqss_dsc[99] +
    dwdot22dscqss3 * dscqss_dsc[134] + dwdot22dscqss4 * dscqss_dsc[169] +
    dwdot22dscqss5 * dscqss_dsc[204] + dwdot22dscqss6 * dscqss_dsc[239] +
    dwdot22dscqss7 * dscqss_dsc[274] + dwdot22dscqss9 * dscqss_dsc[344] +
    dwdot22dscqss11 * dscqss_dsc[414] + dwdot22dscqss12 * dscqss_dsc[449] +
    dwdot22dscqss14 * dscqss_dsc[519] + dwdot22dscqss13 * dscqss_dsc[484] +
    dwdot22dscqss15 * dscqss_dsc[554] + dwdot22dscqss8 * dscqss_dsc[309] +
    dwdot22dscqss10 * dscqss_dsc[379];
  J[1102] =
    dwdot22dsc30 + dwdot22dscqss0 * dscqss_dsc[30] +
    dwdot22dscqss16 * dscqss_dsc[590] + dwdot22dscqss1 * dscqss_dsc[65] +
    dwdot22dscqss17 * dscqss_dsc[625] + dwdot22dscqss2 * dscqss_dsc[100] +
    dwdot22dscqss3 * dscqss_dsc[135] + dwdot22dscqss4 * dscqss_dsc[170] +
    dwdot22dscqss5 * dscqss_dsc[205] + dwdot22dscqss6 * dscqss_dsc[240] +
    dwdot22dscqss7 * dscqss_dsc[275] + dwdot22dscqss9 * dscqss_dsc[345] +
    dwdot22dscqss11 * dscqss_dsc[415] + dwdot22dscqss12 * dscqss_dsc[450] +
    dwdot22dscqss14 * dscqss_dsc[520] + dwdot22dscqss13 * dscqss_dsc[485] +
    dwdot22dscqss15 * dscqss_dsc[555] + dwdot22dscqss8 * dscqss_dsc[310] +
    dwdot22dscqss10 * dscqss_dsc[380];
  J[1138] =
    dwdot22dsc31 + dwdot22dscqss0 * dscqss_dsc[31] +
    dwdot22dscqss16 * dscqss_dsc[591] + dwdot22dscqss1 * dscqss_dsc[66] +
    dwdot22dscqss17 * dscqss_dsc[626] + dwdot22dscqss2 * dscqss_dsc[101] +
    dwdot22dscqss3 * dscqss_dsc[136] + dwdot22dscqss4 * dscqss_dsc[171] +
    dwdot22dscqss5 * dscqss_dsc[206] + dwdot22dscqss6 * dscqss_dsc[241] +
    dwdot22dscqss7 * dscqss_dsc[276] + dwdot22dscqss9 * dscqss_dsc[346] +
    dwdot22dscqss11 * dscqss_dsc[416] + dwdot22dscqss12 * dscqss_dsc[451] +
    dwdot22dscqss14 * dscqss_dsc[521] + dwdot22dscqss13 * dscqss_dsc[486] +
    dwdot22dscqss15 * dscqss_dsc[556] + dwdot22dscqss8 * dscqss_dsc[311] +
    dwdot22dscqss10 * dscqss_dsc[381];
  J[1174] =
    dwdot22dsc32 + dwdot22dscqss0 * dscqss_dsc[32] +
    dwdot22dscqss16 * dscqss_dsc[592] + dwdot22dscqss1 * dscqss_dsc[67] +
    dwdot22dscqss17 * dscqss_dsc[627] + dwdot22dscqss2 * dscqss_dsc[102] +
    dwdot22dscqss3 * dscqss_dsc[137] + dwdot22dscqss4 * dscqss_dsc[172] +
    dwdot22dscqss5 * dscqss_dsc[207] + dwdot22dscqss6 * dscqss_dsc[242] +
    dwdot22dscqss7 * dscqss_dsc[277] + dwdot22dscqss9 * dscqss_dsc[347] +
    dwdot22dscqss11 * dscqss_dsc[417] + dwdot22dscqss12 * dscqss_dsc[452] +
    dwdot22dscqss14 * dscqss_dsc[522] + dwdot22dscqss13 * dscqss_dsc[487] +
    dwdot22dscqss15 * dscqss_dsc[557] + dwdot22dscqss8 * dscqss_dsc[312] +
    dwdot22dscqss10 * dscqss_dsc[382];
  J[1210] =
    dwdot22dsc33 + dwdot22dscqss0 * dscqss_dsc[33] +
    dwdot22dscqss16 * dscqss_dsc[593] + dwdot22dscqss1 * dscqss_dsc[68] +
    dwdot22dscqss17 * dscqss_dsc[628] + dwdot22dscqss2 * dscqss_dsc[103] +
    dwdot22dscqss3 * dscqss_dsc[138] + dwdot22dscqss4 * dscqss_dsc[173] +
    dwdot22dscqss5 * dscqss_dsc[208] + dwdot22dscqss6 * dscqss_dsc[243] +
    dwdot22dscqss7 * dscqss_dsc[278] + dwdot22dscqss9 * dscqss_dsc[348] +
    dwdot22dscqss11 * dscqss_dsc[418] + dwdot22dscqss12 * dscqss_dsc[453] +
    dwdot22dscqss14 * dscqss_dsc[523] + dwdot22dscqss13 * dscqss_dsc[488] +
    dwdot22dscqss15 * dscqss_dsc[558] + dwdot22dscqss8 * dscqss_dsc[313] +
    dwdot22dscqss10 * dscqss_dsc[383];
  J[1246] =
    dwdot22dsc34 + dwdot22dscqss0 * dscqss_dsc[34] +
    dwdot22dscqss16 * dscqss_dsc[594] + dwdot22dscqss1 * dscqss_dsc[69] +
    dwdot22dscqss17 * dscqss_dsc[629] + dwdot22dscqss2 * dscqss_dsc[104] +
    dwdot22dscqss3 * dscqss_dsc[139] + dwdot22dscqss4 * dscqss_dsc[174] +
    dwdot22dscqss5 * dscqss_dsc[209] + dwdot22dscqss6 * dscqss_dsc[244] +
    dwdot22dscqss7 * dscqss_dsc[279] + dwdot22dscqss9 * dscqss_dsc[349] +
    dwdot22dscqss11 * dscqss_dsc[419] + dwdot22dscqss12 * dscqss_dsc[454] +
    dwdot22dscqss14 * dscqss_dsc[524] + dwdot22dscqss13 * dscqss_dsc[489] +
    dwdot22dscqss15 * dscqss_dsc[559] + dwdot22dscqss8 * dscqss_dsc[314] +
    dwdot22dscqss10 * dscqss_dsc[384];
  J[23] =
    dwdot23dsc0 + dwdot23dscqss0 * dscqss_dsc[0] +
    dwdot23dscqss16 * dscqss_dsc[560] + dwdot23dscqss1 * dscqss_dsc[35] +
    dwdot23dscqss17 * dscqss_dsc[595] + dwdot23dscqss2 * dscqss_dsc[70] +
    dwdot23dscqss3 * dscqss_dsc[105] + dwdot23dscqss4 * dscqss_dsc[140] +
    dwdot23dscqss5 * dscqss_dsc[175] + dwdot23dscqss6 * dscqss_dsc[210] +
    dwdot23dscqss7 * dscqss_dsc[245] + dwdot23dscqss9 * dscqss_dsc[315] +
    dwdot23dscqss11 * dscqss_dsc[385] + dwdot23dscqss12 * dscqss_dsc[420] +
    dwdot23dscqss14 * dscqss_dsc[490] + dwdot23dscqss13 * dscqss_dsc[455] +
    dwdot23dscqss15 * dscqss_dsc[525] + dwdot23dscqss8 * dscqss_dsc[280] +
    dwdot23dscqss10 * dscqss_dsc[350];
  J[59] =
    dwdot23dsc1 + dwdot23dscqss0 * dscqss_dsc[1] +
    dwdot23dscqss16 * dscqss_dsc[561] + dwdot23dscqss1 * dscqss_dsc[36] +
    dwdot23dscqss17 * dscqss_dsc[596] + dwdot23dscqss2 * dscqss_dsc[71] +
    dwdot23dscqss3 * dscqss_dsc[106] + dwdot23dscqss4 * dscqss_dsc[141] +
    dwdot23dscqss5 * dscqss_dsc[176] + dwdot23dscqss6 * dscqss_dsc[211] +
    dwdot23dscqss7 * dscqss_dsc[246] + dwdot23dscqss9 * dscqss_dsc[316] +
    dwdot23dscqss11 * dscqss_dsc[386] + dwdot23dscqss12 * dscqss_dsc[421] +
    dwdot23dscqss14 * dscqss_dsc[491] + dwdot23dscqss13 * dscqss_dsc[456] +
    dwdot23dscqss15 * dscqss_dsc[526] + dwdot23dscqss8 * dscqss_dsc[281] +
    dwdot23dscqss10 * dscqss_dsc[351];
  J[95] =
    dwdot23dsc2 + dwdot23dscqss0 * dscqss_dsc[2] +
    dwdot23dscqss16 * dscqss_dsc[562] + dwdot23dscqss1 * dscqss_dsc[37] +
    dwdot23dscqss17 * dscqss_dsc[597] + dwdot23dscqss2 * dscqss_dsc[72] +
    dwdot23dscqss3 * dscqss_dsc[107] + dwdot23dscqss4 * dscqss_dsc[142] +
    dwdot23dscqss5 * dscqss_dsc[177] + dwdot23dscqss6 * dscqss_dsc[212] +
    dwdot23dscqss7 * dscqss_dsc[247] + dwdot23dscqss9 * dscqss_dsc[317] +
    dwdot23dscqss11 * dscqss_dsc[387] + dwdot23dscqss12 * dscqss_dsc[422] +
    dwdot23dscqss14 * dscqss_dsc[492] + dwdot23dscqss13 * dscqss_dsc[457] +
    dwdot23dscqss15 * dscqss_dsc[527] + dwdot23dscqss8 * dscqss_dsc[282] +
    dwdot23dscqss10 * dscqss_dsc[352];
  J[131] =
    dwdot23dsc3 + dwdot23dscqss0 * dscqss_dsc[3] +
    dwdot23dscqss16 * dscqss_dsc[563] + dwdot23dscqss1 * dscqss_dsc[38] +
    dwdot23dscqss17 * dscqss_dsc[598] + dwdot23dscqss2 * dscqss_dsc[73] +
    dwdot23dscqss3 * dscqss_dsc[108] + dwdot23dscqss4 * dscqss_dsc[143] +
    dwdot23dscqss5 * dscqss_dsc[178] + dwdot23dscqss6 * dscqss_dsc[213] +
    dwdot23dscqss7 * dscqss_dsc[248] + dwdot23dscqss9 * dscqss_dsc[318] +
    dwdot23dscqss11 * dscqss_dsc[388] + dwdot23dscqss12 * dscqss_dsc[423] +
    dwdot23dscqss14 * dscqss_dsc[493] + dwdot23dscqss13 * dscqss_dsc[458] +
    dwdot23dscqss15 * dscqss_dsc[528] + dwdot23dscqss8 * dscqss_dsc[283] +
    dwdot23dscqss10 * dscqss_dsc[353];
  J[167] =
    dwdot23dsc4 + dwdot23dscqss0 * dscqss_dsc[4] +
    dwdot23dscqss16 * dscqss_dsc[564] + dwdot23dscqss1 * dscqss_dsc[39] +
    dwdot23dscqss17 * dscqss_dsc[599] + dwdot23dscqss2 * dscqss_dsc[74] +
    dwdot23dscqss3 * dscqss_dsc[109] + dwdot23dscqss4 * dscqss_dsc[144] +
    dwdot23dscqss5 * dscqss_dsc[179] + dwdot23dscqss6 * dscqss_dsc[214] +
    dwdot23dscqss7 * dscqss_dsc[249] + dwdot23dscqss9 * dscqss_dsc[319] +
    dwdot23dscqss11 * dscqss_dsc[389] + dwdot23dscqss12 * dscqss_dsc[424] +
    dwdot23dscqss14 * dscqss_dsc[494] + dwdot23dscqss13 * dscqss_dsc[459] +
    dwdot23dscqss15 * dscqss_dsc[529] + dwdot23dscqss8 * dscqss_dsc[284] +
    dwdot23dscqss10 * dscqss_dsc[354];
  J[203] =
    dwdot23dsc5 + dwdot23dscqss0 * dscqss_dsc[5] +
    dwdot23dscqss16 * dscqss_dsc[565] + dwdot23dscqss1 * dscqss_dsc[40] +
    dwdot23dscqss17 * dscqss_dsc[600] + dwdot23dscqss2 * dscqss_dsc[75] +
    dwdot23dscqss3 * dscqss_dsc[110] + dwdot23dscqss4 * dscqss_dsc[145] +
    dwdot23dscqss5 * dscqss_dsc[180] + dwdot23dscqss6 * dscqss_dsc[215] +
    dwdot23dscqss7 * dscqss_dsc[250] + dwdot23dscqss9 * dscqss_dsc[320] +
    dwdot23dscqss11 * dscqss_dsc[390] + dwdot23dscqss12 * dscqss_dsc[425] +
    dwdot23dscqss14 * dscqss_dsc[495] + dwdot23dscqss13 * dscqss_dsc[460] +
    dwdot23dscqss15 * dscqss_dsc[530] + dwdot23dscqss8 * dscqss_dsc[285] +
    dwdot23dscqss10 * dscqss_dsc[355];
  J[239] =
    dwdot23dsc6 + dwdot23dscqss0 * dscqss_dsc[6] +
    dwdot23dscqss16 * dscqss_dsc[566] + dwdot23dscqss1 * dscqss_dsc[41] +
    dwdot23dscqss17 * dscqss_dsc[601] + dwdot23dscqss2 * dscqss_dsc[76] +
    dwdot23dscqss3 * dscqss_dsc[111] + dwdot23dscqss4 * dscqss_dsc[146] +
    dwdot23dscqss5 * dscqss_dsc[181] + dwdot23dscqss6 * dscqss_dsc[216] +
    dwdot23dscqss7 * dscqss_dsc[251] + dwdot23dscqss9 * dscqss_dsc[321] +
    dwdot23dscqss11 * dscqss_dsc[391] + dwdot23dscqss12 * dscqss_dsc[426] +
    dwdot23dscqss14 * dscqss_dsc[496] + dwdot23dscqss13 * dscqss_dsc[461] +
    dwdot23dscqss15 * dscqss_dsc[531] + dwdot23dscqss8 * dscqss_dsc[286] +
    dwdot23dscqss10 * dscqss_dsc[356];
  J[275] =
    dwdot23dsc7 + dwdot23dscqss0 * dscqss_dsc[7] +
    dwdot23dscqss16 * dscqss_dsc[567] + dwdot23dscqss1 * dscqss_dsc[42] +
    dwdot23dscqss17 * dscqss_dsc[602] + dwdot23dscqss2 * dscqss_dsc[77] +
    dwdot23dscqss3 * dscqss_dsc[112] + dwdot23dscqss4 * dscqss_dsc[147] +
    dwdot23dscqss5 * dscqss_dsc[182] + dwdot23dscqss6 * dscqss_dsc[217] +
    dwdot23dscqss7 * dscqss_dsc[252] + dwdot23dscqss9 * dscqss_dsc[322] +
    dwdot23dscqss11 * dscqss_dsc[392] + dwdot23dscqss12 * dscqss_dsc[427] +
    dwdot23dscqss14 * dscqss_dsc[497] + dwdot23dscqss13 * dscqss_dsc[462] +
    dwdot23dscqss15 * dscqss_dsc[532] + dwdot23dscqss8 * dscqss_dsc[287] +
    dwdot23dscqss10 * dscqss_dsc[357];
  J[311] =
    dwdot23dsc8 + dwdot23dscqss0 * dscqss_dsc[8] +
    dwdot23dscqss16 * dscqss_dsc[568] + dwdot23dscqss1 * dscqss_dsc[43] +
    dwdot23dscqss17 * dscqss_dsc[603] + dwdot23dscqss2 * dscqss_dsc[78] +
    dwdot23dscqss3 * dscqss_dsc[113] + dwdot23dscqss4 * dscqss_dsc[148] +
    dwdot23dscqss5 * dscqss_dsc[183] + dwdot23dscqss6 * dscqss_dsc[218] +
    dwdot23dscqss7 * dscqss_dsc[253] + dwdot23dscqss9 * dscqss_dsc[323] +
    dwdot23dscqss11 * dscqss_dsc[393] + dwdot23dscqss12 * dscqss_dsc[428] +
    dwdot23dscqss14 * dscqss_dsc[498] + dwdot23dscqss13 * dscqss_dsc[463] +
    dwdot23dscqss15 * dscqss_dsc[533] + dwdot23dscqss8 * dscqss_dsc[288] +
    dwdot23dscqss10 * dscqss_dsc[358];
  J[347] =
    dwdot23dsc9 + dwdot23dscqss0 * dscqss_dsc[9] +
    dwdot23dscqss16 * dscqss_dsc[569] + dwdot23dscqss1 * dscqss_dsc[44] +
    dwdot23dscqss17 * dscqss_dsc[604] + dwdot23dscqss2 * dscqss_dsc[79] +
    dwdot23dscqss3 * dscqss_dsc[114] + dwdot23dscqss4 * dscqss_dsc[149] +
    dwdot23dscqss5 * dscqss_dsc[184] + dwdot23dscqss6 * dscqss_dsc[219] +
    dwdot23dscqss7 * dscqss_dsc[254] + dwdot23dscqss9 * dscqss_dsc[324] +
    dwdot23dscqss11 * dscqss_dsc[394] + dwdot23dscqss12 * dscqss_dsc[429] +
    dwdot23dscqss14 * dscqss_dsc[499] + dwdot23dscqss13 * dscqss_dsc[464] +
    dwdot23dscqss15 * dscqss_dsc[534] + dwdot23dscqss8 * dscqss_dsc[289] +
    dwdot23dscqss10 * dscqss_dsc[359];
  J[383] =
    dwdot23dsc10 + dwdot23dscqss0 * dscqss_dsc[10] +
    dwdot23dscqss16 * dscqss_dsc[570] + dwdot23dscqss1 * dscqss_dsc[45] +
    dwdot23dscqss17 * dscqss_dsc[605] + dwdot23dscqss2 * dscqss_dsc[80] +
    dwdot23dscqss3 * dscqss_dsc[115] + dwdot23dscqss4 * dscqss_dsc[150] +
    dwdot23dscqss5 * dscqss_dsc[185] + dwdot23dscqss6 * dscqss_dsc[220] +
    dwdot23dscqss7 * dscqss_dsc[255] + dwdot23dscqss9 * dscqss_dsc[325] +
    dwdot23dscqss11 * dscqss_dsc[395] + dwdot23dscqss12 * dscqss_dsc[430] +
    dwdot23dscqss14 * dscqss_dsc[500] + dwdot23dscqss13 * dscqss_dsc[465] +
    dwdot23dscqss15 * dscqss_dsc[535] + dwdot23dscqss8 * dscqss_dsc[290] +
    dwdot23dscqss10 * dscqss_dsc[360];
  J[419] =
    dwdot23dsc11 + dwdot23dscqss0 * dscqss_dsc[11] +
    dwdot23dscqss16 * dscqss_dsc[571] + dwdot23dscqss1 * dscqss_dsc[46] +
    dwdot23dscqss17 * dscqss_dsc[606] + dwdot23dscqss2 * dscqss_dsc[81] +
    dwdot23dscqss3 * dscqss_dsc[116] + dwdot23dscqss4 * dscqss_dsc[151] +
    dwdot23dscqss5 * dscqss_dsc[186] + dwdot23dscqss6 * dscqss_dsc[221] +
    dwdot23dscqss7 * dscqss_dsc[256] + dwdot23dscqss9 * dscqss_dsc[326] +
    dwdot23dscqss11 * dscqss_dsc[396] + dwdot23dscqss12 * dscqss_dsc[431] +
    dwdot23dscqss14 * dscqss_dsc[501] + dwdot23dscqss13 * dscqss_dsc[466] +
    dwdot23dscqss15 * dscqss_dsc[536] + dwdot23dscqss8 * dscqss_dsc[291] +
    dwdot23dscqss10 * dscqss_dsc[361];
  J[455] =
    dwdot23dsc12 + dwdot23dscqss0 * dscqss_dsc[12] +
    dwdot23dscqss16 * dscqss_dsc[572] + dwdot23dscqss1 * dscqss_dsc[47] +
    dwdot23dscqss17 * dscqss_dsc[607] + dwdot23dscqss2 * dscqss_dsc[82] +
    dwdot23dscqss3 * dscqss_dsc[117] + dwdot23dscqss4 * dscqss_dsc[152] +
    dwdot23dscqss5 * dscqss_dsc[187] + dwdot23dscqss6 * dscqss_dsc[222] +
    dwdot23dscqss7 * dscqss_dsc[257] + dwdot23dscqss9 * dscqss_dsc[327] +
    dwdot23dscqss11 * dscqss_dsc[397] + dwdot23dscqss12 * dscqss_dsc[432] +
    dwdot23dscqss14 * dscqss_dsc[502] + dwdot23dscqss13 * dscqss_dsc[467] +
    dwdot23dscqss15 * dscqss_dsc[537] + dwdot23dscqss8 * dscqss_dsc[292] +
    dwdot23dscqss10 * dscqss_dsc[362];
  J[491] =
    dwdot23dsc13 + dwdot23dscqss0 * dscqss_dsc[13] +
    dwdot23dscqss16 * dscqss_dsc[573] + dwdot23dscqss1 * dscqss_dsc[48] +
    dwdot23dscqss17 * dscqss_dsc[608] + dwdot23dscqss2 * dscqss_dsc[83] +
    dwdot23dscqss3 * dscqss_dsc[118] + dwdot23dscqss4 * dscqss_dsc[153] +
    dwdot23dscqss5 * dscqss_dsc[188] + dwdot23dscqss6 * dscqss_dsc[223] +
    dwdot23dscqss7 * dscqss_dsc[258] + dwdot23dscqss9 * dscqss_dsc[328] +
    dwdot23dscqss11 * dscqss_dsc[398] + dwdot23dscqss12 * dscqss_dsc[433] +
    dwdot23dscqss14 * dscqss_dsc[503] + dwdot23dscqss13 * dscqss_dsc[468] +
    dwdot23dscqss15 * dscqss_dsc[538] + dwdot23dscqss8 * dscqss_dsc[293] +
    dwdot23dscqss10 * dscqss_dsc[363];
  J[527] =
    dwdot23dsc14 + dwdot23dscqss0 * dscqss_dsc[14] +
    dwdot23dscqss16 * dscqss_dsc[574] + dwdot23dscqss1 * dscqss_dsc[49] +
    dwdot23dscqss17 * dscqss_dsc[609] + dwdot23dscqss2 * dscqss_dsc[84] +
    dwdot23dscqss3 * dscqss_dsc[119] + dwdot23dscqss4 * dscqss_dsc[154] +
    dwdot23dscqss5 * dscqss_dsc[189] + dwdot23dscqss6 * dscqss_dsc[224] +
    dwdot23dscqss7 * dscqss_dsc[259] + dwdot23dscqss9 * dscqss_dsc[329] +
    dwdot23dscqss11 * dscqss_dsc[399] + dwdot23dscqss12 * dscqss_dsc[434] +
    dwdot23dscqss14 * dscqss_dsc[504] + dwdot23dscqss13 * dscqss_dsc[469] +
    dwdot23dscqss15 * dscqss_dsc[539] + dwdot23dscqss8 * dscqss_dsc[294] +
    dwdot23dscqss10 * dscqss_dsc[364];
  J[563] =
    dwdot23dsc15 + dwdot23dscqss0 * dscqss_dsc[15] +
    dwdot23dscqss16 * dscqss_dsc[575] + dwdot23dscqss1 * dscqss_dsc[50] +
    dwdot23dscqss17 * dscqss_dsc[610] + dwdot23dscqss2 * dscqss_dsc[85] +
    dwdot23dscqss3 * dscqss_dsc[120] + dwdot23dscqss4 * dscqss_dsc[155] +
    dwdot23dscqss5 * dscqss_dsc[190] + dwdot23dscqss6 * dscqss_dsc[225] +
    dwdot23dscqss7 * dscqss_dsc[260] + dwdot23dscqss9 * dscqss_dsc[330] +
    dwdot23dscqss11 * dscqss_dsc[400] + dwdot23dscqss12 * dscqss_dsc[435] +
    dwdot23dscqss14 * dscqss_dsc[505] + dwdot23dscqss13 * dscqss_dsc[470] +
    dwdot23dscqss15 * dscqss_dsc[540] + dwdot23dscqss8 * dscqss_dsc[295] +
    dwdot23dscqss10 * dscqss_dsc[365];
  J[599] =
    dwdot23dsc16 + dwdot23dscqss0 * dscqss_dsc[16] +
    dwdot23dscqss16 * dscqss_dsc[576] + dwdot23dscqss1 * dscqss_dsc[51] +
    dwdot23dscqss17 * dscqss_dsc[611] + dwdot23dscqss2 * dscqss_dsc[86] +
    dwdot23dscqss3 * dscqss_dsc[121] + dwdot23dscqss4 * dscqss_dsc[156] +
    dwdot23dscqss5 * dscqss_dsc[191] + dwdot23dscqss6 * dscqss_dsc[226] +
    dwdot23dscqss7 * dscqss_dsc[261] + dwdot23dscqss9 * dscqss_dsc[331] +
    dwdot23dscqss11 * dscqss_dsc[401] + dwdot23dscqss12 * dscqss_dsc[436] +
    dwdot23dscqss14 * dscqss_dsc[506] + dwdot23dscqss13 * dscqss_dsc[471] +
    dwdot23dscqss15 * dscqss_dsc[541] + dwdot23dscqss8 * dscqss_dsc[296] +
    dwdot23dscqss10 * dscqss_dsc[366];
  J[635] =
    dwdot23dsc17 + dwdot23dscqss0 * dscqss_dsc[17] +
    dwdot23dscqss16 * dscqss_dsc[577] + dwdot23dscqss1 * dscqss_dsc[52] +
    dwdot23dscqss17 * dscqss_dsc[612] + dwdot23dscqss2 * dscqss_dsc[87] +
    dwdot23dscqss3 * dscqss_dsc[122] + dwdot23dscqss4 * dscqss_dsc[157] +
    dwdot23dscqss5 * dscqss_dsc[192] + dwdot23dscqss6 * dscqss_dsc[227] +
    dwdot23dscqss7 * dscqss_dsc[262] + dwdot23dscqss9 * dscqss_dsc[332] +
    dwdot23dscqss11 * dscqss_dsc[402] + dwdot23dscqss12 * dscqss_dsc[437] +
    dwdot23dscqss14 * dscqss_dsc[507] + dwdot23dscqss13 * dscqss_dsc[472] +
    dwdot23dscqss15 * dscqss_dsc[542] + dwdot23dscqss8 * dscqss_dsc[297] +
    dwdot23dscqss10 * dscqss_dsc[367];
  J[671] =
    dwdot23dsc18 + dwdot23dscqss0 * dscqss_dsc[18] +
    dwdot23dscqss16 * dscqss_dsc[578] + dwdot23dscqss1 * dscqss_dsc[53] +
    dwdot23dscqss17 * dscqss_dsc[613] + dwdot23dscqss2 * dscqss_dsc[88] +
    dwdot23dscqss3 * dscqss_dsc[123] + dwdot23dscqss4 * dscqss_dsc[158] +
    dwdot23dscqss5 * dscqss_dsc[193] + dwdot23dscqss6 * dscqss_dsc[228] +
    dwdot23dscqss7 * dscqss_dsc[263] + dwdot23dscqss9 * dscqss_dsc[333] +
    dwdot23dscqss11 * dscqss_dsc[403] + dwdot23dscqss12 * dscqss_dsc[438] +
    dwdot23dscqss14 * dscqss_dsc[508] + dwdot23dscqss13 * dscqss_dsc[473] +
    dwdot23dscqss15 * dscqss_dsc[543] + dwdot23dscqss8 * dscqss_dsc[298] +
    dwdot23dscqss10 * dscqss_dsc[368];
  J[707] =
    dwdot23dsc19 + dwdot23dscqss0 * dscqss_dsc[19] +
    dwdot23dscqss16 * dscqss_dsc[579] + dwdot23dscqss1 * dscqss_dsc[54] +
    dwdot23dscqss17 * dscqss_dsc[614] + dwdot23dscqss2 * dscqss_dsc[89] +
    dwdot23dscqss3 * dscqss_dsc[124] + dwdot23dscqss4 * dscqss_dsc[159] +
    dwdot23dscqss5 * dscqss_dsc[194] + dwdot23dscqss6 * dscqss_dsc[229] +
    dwdot23dscqss7 * dscqss_dsc[264] + dwdot23dscqss9 * dscqss_dsc[334] +
    dwdot23dscqss11 * dscqss_dsc[404] + dwdot23dscqss12 * dscqss_dsc[439] +
    dwdot23dscqss14 * dscqss_dsc[509] + dwdot23dscqss13 * dscqss_dsc[474] +
    dwdot23dscqss15 * dscqss_dsc[544] + dwdot23dscqss8 * dscqss_dsc[299] +
    dwdot23dscqss10 * dscqss_dsc[369];
  J[743] =
    dwdot23dsc20 + dwdot23dscqss0 * dscqss_dsc[20] +
    dwdot23dscqss16 * dscqss_dsc[580] + dwdot23dscqss1 * dscqss_dsc[55] +
    dwdot23dscqss17 * dscqss_dsc[615] + dwdot23dscqss2 * dscqss_dsc[90] +
    dwdot23dscqss3 * dscqss_dsc[125] + dwdot23dscqss4 * dscqss_dsc[160] +
    dwdot23dscqss5 * dscqss_dsc[195] + dwdot23dscqss6 * dscqss_dsc[230] +
    dwdot23dscqss7 * dscqss_dsc[265] + dwdot23dscqss9 * dscqss_dsc[335] +
    dwdot23dscqss11 * dscqss_dsc[405] + dwdot23dscqss12 * dscqss_dsc[440] +
    dwdot23dscqss14 * dscqss_dsc[510] + dwdot23dscqss13 * dscqss_dsc[475] +
    dwdot23dscqss15 * dscqss_dsc[545] + dwdot23dscqss8 * dscqss_dsc[300] +
    dwdot23dscqss10 * dscqss_dsc[370];
  J[779] =
    dwdot23dsc21 + dwdot23dscqss0 * dscqss_dsc[21] +
    dwdot23dscqss16 * dscqss_dsc[581] + dwdot23dscqss1 * dscqss_dsc[56] +
    dwdot23dscqss17 * dscqss_dsc[616] + dwdot23dscqss2 * dscqss_dsc[91] +
    dwdot23dscqss3 * dscqss_dsc[126] + dwdot23dscqss4 * dscqss_dsc[161] +
    dwdot23dscqss5 * dscqss_dsc[196] + dwdot23dscqss6 * dscqss_dsc[231] +
    dwdot23dscqss7 * dscqss_dsc[266] + dwdot23dscqss9 * dscqss_dsc[336] +
    dwdot23dscqss11 * dscqss_dsc[406] + dwdot23dscqss12 * dscqss_dsc[441] +
    dwdot23dscqss14 * dscqss_dsc[511] + dwdot23dscqss13 * dscqss_dsc[476] +
    dwdot23dscqss15 * dscqss_dsc[546] + dwdot23dscqss8 * dscqss_dsc[301] +
    dwdot23dscqss10 * dscqss_dsc[371];
  J[815] =
    dwdot23dsc22 + dwdot23dscqss0 * dscqss_dsc[22] +
    dwdot23dscqss16 * dscqss_dsc[582] + dwdot23dscqss1 * dscqss_dsc[57] +
    dwdot23dscqss17 * dscqss_dsc[617] + dwdot23dscqss2 * dscqss_dsc[92] +
    dwdot23dscqss3 * dscqss_dsc[127] + dwdot23dscqss4 * dscqss_dsc[162] +
    dwdot23dscqss5 * dscqss_dsc[197] + dwdot23dscqss6 * dscqss_dsc[232] +
    dwdot23dscqss7 * dscqss_dsc[267] + dwdot23dscqss9 * dscqss_dsc[337] +
    dwdot23dscqss11 * dscqss_dsc[407] + dwdot23dscqss12 * dscqss_dsc[442] +
    dwdot23dscqss14 * dscqss_dsc[512] + dwdot23dscqss13 * dscqss_dsc[477] +
    dwdot23dscqss15 * dscqss_dsc[547] + dwdot23dscqss8 * dscqss_dsc[302] +
    dwdot23dscqss10 * dscqss_dsc[372];
  J[851] =
    dwdot23dsc23 + dwdot23dscqss0 * dscqss_dsc[23] +
    dwdot23dscqss16 * dscqss_dsc[583] + dwdot23dscqss1 * dscqss_dsc[58] +
    dwdot23dscqss17 * dscqss_dsc[618] + dwdot23dscqss2 * dscqss_dsc[93] +
    dwdot23dscqss3 * dscqss_dsc[128] + dwdot23dscqss4 * dscqss_dsc[163] +
    dwdot23dscqss5 * dscqss_dsc[198] + dwdot23dscqss6 * dscqss_dsc[233] +
    dwdot23dscqss7 * dscqss_dsc[268] + dwdot23dscqss9 * dscqss_dsc[338] +
    dwdot23dscqss11 * dscqss_dsc[408] + dwdot23dscqss12 * dscqss_dsc[443] +
    dwdot23dscqss14 * dscqss_dsc[513] + dwdot23dscqss13 * dscqss_dsc[478] +
    dwdot23dscqss15 * dscqss_dsc[548] + dwdot23dscqss8 * dscqss_dsc[303] +
    dwdot23dscqss10 * dscqss_dsc[373];
  J[887] =
    dwdot23dsc24 + dwdot23dscqss0 * dscqss_dsc[24] +
    dwdot23dscqss16 * dscqss_dsc[584] + dwdot23dscqss1 * dscqss_dsc[59] +
    dwdot23dscqss17 * dscqss_dsc[619] + dwdot23dscqss2 * dscqss_dsc[94] +
    dwdot23dscqss3 * dscqss_dsc[129] + dwdot23dscqss4 * dscqss_dsc[164] +
    dwdot23dscqss5 * dscqss_dsc[199] + dwdot23dscqss6 * dscqss_dsc[234] +
    dwdot23dscqss7 * dscqss_dsc[269] + dwdot23dscqss9 * dscqss_dsc[339] +
    dwdot23dscqss11 * dscqss_dsc[409] + dwdot23dscqss12 * dscqss_dsc[444] +
    dwdot23dscqss14 * dscqss_dsc[514] + dwdot23dscqss13 * dscqss_dsc[479] +
    dwdot23dscqss15 * dscqss_dsc[549] + dwdot23dscqss8 * dscqss_dsc[304] +
    dwdot23dscqss10 * dscqss_dsc[374];
  J[923] =
    dwdot23dsc25 + dwdot23dscqss0 * dscqss_dsc[25] +
    dwdot23dscqss16 * dscqss_dsc[585] + dwdot23dscqss1 * dscqss_dsc[60] +
    dwdot23dscqss17 * dscqss_dsc[620] + dwdot23dscqss2 * dscqss_dsc[95] +
    dwdot23dscqss3 * dscqss_dsc[130] + dwdot23dscqss4 * dscqss_dsc[165] +
    dwdot23dscqss5 * dscqss_dsc[200] + dwdot23dscqss6 * dscqss_dsc[235] +
    dwdot23dscqss7 * dscqss_dsc[270] + dwdot23dscqss9 * dscqss_dsc[340] +
    dwdot23dscqss11 * dscqss_dsc[410] + dwdot23dscqss12 * dscqss_dsc[445] +
    dwdot23dscqss14 * dscqss_dsc[515] + dwdot23dscqss13 * dscqss_dsc[480] +
    dwdot23dscqss15 * dscqss_dsc[550] + dwdot23dscqss8 * dscqss_dsc[305] +
    dwdot23dscqss10 * dscqss_dsc[375];
  J[959] =
    dwdot23dsc26 + dwdot23dscqss0 * dscqss_dsc[26] +
    dwdot23dscqss16 * dscqss_dsc[586] + dwdot23dscqss1 * dscqss_dsc[61] +
    dwdot23dscqss17 * dscqss_dsc[621] + dwdot23dscqss2 * dscqss_dsc[96] +
    dwdot23dscqss3 * dscqss_dsc[131] + dwdot23dscqss4 * dscqss_dsc[166] +
    dwdot23dscqss5 * dscqss_dsc[201] + dwdot23dscqss6 * dscqss_dsc[236] +
    dwdot23dscqss7 * dscqss_dsc[271] + dwdot23dscqss9 * dscqss_dsc[341] +
    dwdot23dscqss11 * dscqss_dsc[411] + dwdot23dscqss12 * dscqss_dsc[446] +
    dwdot23dscqss14 * dscqss_dsc[516] + dwdot23dscqss13 * dscqss_dsc[481] +
    dwdot23dscqss15 * dscqss_dsc[551] + dwdot23dscqss8 * dscqss_dsc[306] +
    dwdot23dscqss10 * dscqss_dsc[376];
  J[995] =
    dwdot23dsc27 + dwdot23dscqss0 * dscqss_dsc[27] +
    dwdot23dscqss16 * dscqss_dsc[587] + dwdot23dscqss1 * dscqss_dsc[62] +
    dwdot23dscqss17 * dscqss_dsc[622] + dwdot23dscqss2 * dscqss_dsc[97] +
    dwdot23dscqss3 * dscqss_dsc[132] + dwdot23dscqss4 * dscqss_dsc[167] +
    dwdot23dscqss5 * dscqss_dsc[202] + dwdot23dscqss6 * dscqss_dsc[237] +
    dwdot23dscqss7 * dscqss_dsc[272] + dwdot23dscqss9 * dscqss_dsc[342] +
    dwdot23dscqss11 * dscqss_dsc[412] + dwdot23dscqss12 * dscqss_dsc[447] +
    dwdot23dscqss14 * dscqss_dsc[517] + dwdot23dscqss13 * dscqss_dsc[482] +
    dwdot23dscqss15 * dscqss_dsc[552] + dwdot23dscqss8 * dscqss_dsc[307] +
    dwdot23dscqss10 * dscqss_dsc[377];
  J[1031] =
    dwdot23dsc28 + dwdot23dscqss0 * dscqss_dsc[28] +
    dwdot23dscqss16 * dscqss_dsc[588] + dwdot23dscqss1 * dscqss_dsc[63] +
    dwdot23dscqss17 * dscqss_dsc[623] + dwdot23dscqss2 * dscqss_dsc[98] +
    dwdot23dscqss3 * dscqss_dsc[133] + dwdot23dscqss4 * dscqss_dsc[168] +
    dwdot23dscqss5 * dscqss_dsc[203] + dwdot23dscqss6 * dscqss_dsc[238] +
    dwdot23dscqss7 * dscqss_dsc[273] + dwdot23dscqss9 * dscqss_dsc[343] +
    dwdot23dscqss11 * dscqss_dsc[413] + dwdot23dscqss12 * dscqss_dsc[448] +
    dwdot23dscqss14 * dscqss_dsc[518] + dwdot23dscqss13 * dscqss_dsc[483] +
    dwdot23dscqss15 * dscqss_dsc[553] + dwdot23dscqss8 * dscqss_dsc[308] +
    dwdot23dscqss10 * dscqss_dsc[378];
  J[1067] =
    dwdot23dsc29 + dwdot23dscqss0 * dscqss_dsc[29] +
    dwdot23dscqss16 * dscqss_dsc[589] + dwdot23dscqss1 * dscqss_dsc[64] +
    dwdot23dscqss17 * dscqss_dsc[624] + dwdot23dscqss2 * dscqss_dsc[99] +
    dwdot23dscqss3 * dscqss_dsc[134] + dwdot23dscqss4 * dscqss_dsc[169] +
    dwdot23dscqss5 * dscqss_dsc[204] + dwdot23dscqss6 * dscqss_dsc[239] +
    dwdot23dscqss7 * dscqss_dsc[274] + dwdot23dscqss9 * dscqss_dsc[344] +
    dwdot23dscqss11 * dscqss_dsc[414] + dwdot23dscqss12 * dscqss_dsc[449] +
    dwdot23dscqss14 * dscqss_dsc[519] + dwdot23dscqss13 * dscqss_dsc[484] +
    dwdot23dscqss15 * dscqss_dsc[554] + dwdot23dscqss8 * dscqss_dsc[309] +
    dwdot23dscqss10 * dscqss_dsc[379];
  J[1103] =
    dwdot23dsc30 + dwdot23dscqss0 * dscqss_dsc[30] +
    dwdot23dscqss16 * dscqss_dsc[590] + dwdot23dscqss1 * dscqss_dsc[65] +
    dwdot23dscqss17 * dscqss_dsc[625] + dwdot23dscqss2 * dscqss_dsc[100] +
    dwdot23dscqss3 * dscqss_dsc[135] + dwdot23dscqss4 * dscqss_dsc[170] +
    dwdot23dscqss5 * dscqss_dsc[205] + dwdot23dscqss6 * dscqss_dsc[240] +
    dwdot23dscqss7 * dscqss_dsc[275] + dwdot23dscqss9 * dscqss_dsc[345] +
    dwdot23dscqss11 * dscqss_dsc[415] + dwdot23dscqss12 * dscqss_dsc[450] +
    dwdot23dscqss14 * dscqss_dsc[520] + dwdot23dscqss13 * dscqss_dsc[485] +
    dwdot23dscqss15 * dscqss_dsc[555] + dwdot23dscqss8 * dscqss_dsc[310] +
    dwdot23dscqss10 * dscqss_dsc[380];
  J[1139] =
    dwdot23dsc31 + dwdot23dscqss0 * dscqss_dsc[31] +
    dwdot23dscqss16 * dscqss_dsc[591] + dwdot23dscqss1 * dscqss_dsc[66] +
    dwdot23dscqss17 * dscqss_dsc[626] + dwdot23dscqss2 * dscqss_dsc[101] +
    dwdot23dscqss3 * dscqss_dsc[136] + dwdot23dscqss4 * dscqss_dsc[171] +
    dwdot23dscqss5 * dscqss_dsc[206] + dwdot23dscqss6 * dscqss_dsc[241] +
    dwdot23dscqss7 * dscqss_dsc[276] + dwdot23dscqss9 * dscqss_dsc[346] +
    dwdot23dscqss11 * dscqss_dsc[416] + dwdot23dscqss12 * dscqss_dsc[451] +
    dwdot23dscqss14 * dscqss_dsc[521] + dwdot23dscqss13 * dscqss_dsc[486] +
    dwdot23dscqss15 * dscqss_dsc[556] + dwdot23dscqss8 * dscqss_dsc[311] +
    dwdot23dscqss10 * dscqss_dsc[381];
  J[1175] =
    dwdot23dsc32 + dwdot23dscqss0 * dscqss_dsc[32] +
    dwdot23dscqss16 * dscqss_dsc[592] + dwdot23dscqss1 * dscqss_dsc[67] +
    dwdot23dscqss17 * dscqss_dsc[627] + dwdot23dscqss2 * dscqss_dsc[102] +
    dwdot23dscqss3 * dscqss_dsc[137] + dwdot23dscqss4 * dscqss_dsc[172] +
    dwdot23dscqss5 * dscqss_dsc[207] + dwdot23dscqss6 * dscqss_dsc[242] +
    dwdot23dscqss7 * dscqss_dsc[277] + dwdot23dscqss9 * dscqss_dsc[347] +
    dwdot23dscqss11 * dscqss_dsc[417] + dwdot23dscqss12 * dscqss_dsc[452] +
    dwdot23dscqss14 * dscqss_dsc[522] + dwdot23dscqss13 * dscqss_dsc[487] +
    dwdot23dscqss15 * dscqss_dsc[557] + dwdot23dscqss8 * dscqss_dsc[312] +
    dwdot23dscqss10 * dscqss_dsc[382];
  J[1211] =
    dwdot23dsc33 + dwdot23dscqss0 * dscqss_dsc[33] +
    dwdot23dscqss16 * dscqss_dsc[593] + dwdot23dscqss1 * dscqss_dsc[68] +
    dwdot23dscqss17 * dscqss_dsc[628] + dwdot23dscqss2 * dscqss_dsc[103] +
    dwdot23dscqss3 * dscqss_dsc[138] + dwdot23dscqss4 * dscqss_dsc[173] +
    dwdot23dscqss5 * dscqss_dsc[208] + dwdot23dscqss6 * dscqss_dsc[243] +
    dwdot23dscqss7 * dscqss_dsc[278] + dwdot23dscqss9 * dscqss_dsc[348] +
    dwdot23dscqss11 * dscqss_dsc[418] + dwdot23dscqss12 * dscqss_dsc[453] +
    dwdot23dscqss14 * dscqss_dsc[523] + dwdot23dscqss13 * dscqss_dsc[488] +
    dwdot23dscqss15 * dscqss_dsc[558] + dwdot23dscqss8 * dscqss_dsc[313] +
    dwdot23dscqss10 * dscqss_dsc[383];
  J[1247] =
    dwdot23dsc34 + dwdot23dscqss0 * dscqss_dsc[34] +
    dwdot23dscqss16 * dscqss_dsc[594] + dwdot23dscqss1 * dscqss_dsc[69] +
    dwdot23dscqss17 * dscqss_dsc[629] + dwdot23dscqss2 * dscqss_dsc[104] +
    dwdot23dscqss3 * dscqss_dsc[139] + dwdot23dscqss4 * dscqss_dsc[174] +
    dwdot23dscqss5 * dscqss_dsc[209] + dwdot23dscqss6 * dscqss_dsc[244] +
    dwdot23dscqss7 * dscqss_dsc[279] + dwdot23dscqss9 * dscqss_dsc[349] +
    dwdot23dscqss11 * dscqss_dsc[419] + dwdot23dscqss12 * dscqss_dsc[454] +
    dwdot23dscqss14 * dscqss_dsc[524] + dwdot23dscqss13 * dscqss_dsc[489] +
    dwdot23dscqss15 * dscqss_dsc[559] + dwdot23dscqss8 * dscqss_dsc[314] +
    dwdot23dscqss10 * dscqss_dsc[384];
  J[24] =
    dwdot24dsc0 + dwdot24dscqss0 * dscqss_dsc[0] +
    dwdot24dscqss16 * dscqss_dsc[560] + dwdot24dscqss1 * dscqss_dsc[35] +
    dwdot24dscqss17 * dscqss_dsc[595] + dwdot24dscqss2 * dscqss_dsc[70] +
    dwdot24dscqss3 * dscqss_dsc[105] + dwdot24dscqss4 * dscqss_dsc[140] +
    dwdot24dscqss5 * dscqss_dsc[175] + dwdot24dscqss6 * dscqss_dsc[210] +
    dwdot24dscqss7 * dscqss_dsc[245] + dwdot24dscqss9 * dscqss_dsc[315] +
    dwdot24dscqss11 * dscqss_dsc[385] + dwdot24dscqss12 * dscqss_dsc[420] +
    dwdot24dscqss14 * dscqss_dsc[490] + dwdot24dscqss13 * dscqss_dsc[455] +
    dwdot24dscqss15 * dscqss_dsc[525] + dwdot24dscqss8 * dscqss_dsc[280] +
    dwdot24dscqss10 * dscqss_dsc[350];
  J[60] =
    dwdot24dsc1 + dwdot24dscqss0 * dscqss_dsc[1] +
    dwdot24dscqss16 * dscqss_dsc[561] + dwdot24dscqss1 * dscqss_dsc[36] +
    dwdot24dscqss17 * dscqss_dsc[596] + dwdot24dscqss2 * dscqss_dsc[71] +
    dwdot24dscqss3 * dscqss_dsc[106] + dwdot24dscqss4 * dscqss_dsc[141] +
    dwdot24dscqss5 * dscqss_dsc[176] + dwdot24dscqss6 * dscqss_dsc[211] +
    dwdot24dscqss7 * dscqss_dsc[246] + dwdot24dscqss9 * dscqss_dsc[316] +
    dwdot24dscqss11 * dscqss_dsc[386] + dwdot24dscqss12 * dscqss_dsc[421] +
    dwdot24dscqss14 * dscqss_dsc[491] + dwdot24dscqss13 * dscqss_dsc[456] +
    dwdot24dscqss15 * dscqss_dsc[526] + dwdot24dscqss8 * dscqss_dsc[281] +
    dwdot24dscqss10 * dscqss_dsc[351];
  J[96] =
    dwdot24dsc2 + dwdot24dscqss0 * dscqss_dsc[2] +
    dwdot24dscqss16 * dscqss_dsc[562] + dwdot24dscqss1 * dscqss_dsc[37] +
    dwdot24dscqss17 * dscqss_dsc[597] + dwdot24dscqss2 * dscqss_dsc[72] +
    dwdot24dscqss3 * dscqss_dsc[107] + dwdot24dscqss4 * dscqss_dsc[142] +
    dwdot24dscqss5 * dscqss_dsc[177] + dwdot24dscqss6 * dscqss_dsc[212] +
    dwdot24dscqss7 * dscqss_dsc[247] + dwdot24dscqss9 * dscqss_dsc[317] +
    dwdot24dscqss11 * dscqss_dsc[387] + dwdot24dscqss12 * dscqss_dsc[422] +
    dwdot24dscqss14 * dscqss_dsc[492] + dwdot24dscqss13 * dscqss_dsc[457] +
    dwdot24dscqss15 * dscqss_dsc[527] + dwdot24dscqss8 * dscqss_dsc[282] +
    dwdot24dscqss10 * dscqss_dsc[352];
  J[132] =
    dwdot24dsc3 + dwdot24dscqss0 * dscqss_dsc[3] +
    dwdot24dscqss16 * dscqss_dsc[563] + dwdot24dscqss1 * dscqss_dsc[38] +
    dwdot24dscqss17 * dscqss_dsc[598] + dwdot24dscqss2 * dscqss_dsc[73] +
    dwdot24dscqss3 * dscqss_dsc[108] + dwdot24dscqss4 * dscqss_dsc[143] +
    dwdot24dscqss5 * dscqss_dsc[178] + dwdot24dscqss6 * dscqss_dsc[213] +
    dwdot24dscqss7 * dscqss_dsc[248] + dwdot24dscqss9 * dscqss_dsc[318] +
    dwdot24dscqss11 * dscqss_dsc[388] + dwdot24dscqss12 * dscqss_dsc[423] +
    dwdot24dscqss14 * dscqss_dsc[493] + dwdot24dscqss13 * dscqss_dsc[458] +
    dwdot24dscqss15 * dscqss_dsc[528] + dwdot24dscqss8 * dscqss_dsc[283] +
    dwdot24dscqss10 * dscqss_dsc[353];
  J[168] =
    dwdot24dsc4 + dwdot24dscqss0 * dscqss_dsc[4] +
    dwdot24dscqss16 * dscqss_dsc[564] + dwdot24dscqss1 * dscqss_dsc[39] +
    dwdot24dscqss17 * dscqss_dsc[599] + dwdot24dscqss2 * dscqss_dsc[74] +
    dwdot24dscqss3 * dscqss_dsc[109] + dwdot24dscqss4 * dscqss_dsc[144] +
    dwdot24dscqss5 * dscqss_dsc[179] + dwdot24dscqss6 * dscqss_dsc[214] +
    dwdot24dscqss7 * dscqss_dsc[249] + dwdot24dscqss9 * dscqss_dsc[319] +
    dwdot24dscqss11 * dscqss_dsc[389] + dwdot24dscqss12 * dscqss_dsc[424] +
    dwdot24dscqss14 * dscqss_dsc[494] + dwdot24dscqss13 * dscqss_dsc[459] +
    dwdot24dscqss15 * dscqss_dsc[529] + dwdot24dscqss8 * dscqss_dsc[284] +
    dwdot24dscqss10 * dscqss_dsc[354];
  J[204] =
    dwdot24dsc5 + dwdot24dscqss0 * dscqss_dsc[5] +
    dwdot24dscqss16 * dscqss_dsc[565] + dwdot24dscqss1 * dscqss_dsc[40] +
    dwdot24dscqss17 * dscqss_dsc[600] + dwdot24dscqss2 * dscqss_dsc[75] +
    dwdot24dscqss3 * dscqss_dsc[110] + dwdot24dscqss4 * dscqss_dsc[145] +
    dwdot24dscqss5 * dscqss_dsc[180] + dwdot24dscqss6 * dscqss_dsc[215] +
    dwdot24dscqss7 * dscqss_dsc[250] + dwdot24dscqss9 * dscqss_dsc[320] +
    dwdot24dscqss11 * dscqss_dsc[390] + dwdot24dscqss12 * dscqss_dsc[425] +
    dwdot24dscqss14 * dscqss_dsc[495] + dwdot24dscqss13 * dscqss_dsc[460] +
    dwdot24dscqss15 * dscqss_dsc[530] + dwdot24dscqss8 * dscqss_dsc[285] +
    dwdot24dscqss10 * dscqss_dsc[355];
  J[240] =
    dwdot24dsc6 + dwdot24dscqss0 * dscqss_dsc[6] +
    dwdot24dscqss16 * dscqss_dsc[566] + dwdot24dscqss1 * dscqss_dsc[41] +
    dwdot24dscqss17 * dscqss_dsc[601] + dwdot24dscqss2 * dscqss_dsc[76] +
    dwdot24dscqss3 * dscqss_dsc[111] + dwdot24dscqss4 * dscqss_dsc[146] +
    dwdot24dscqss5 * dscqss_dsc[181] + dwdot24dscqss6 * dscqss_dsc[216] +
    dwdot24dscqss7 * dscqss_dsc[251] + dwdot24dscqss9 * dscqss_dsc[321] +
    dwdot24dscqss11 * dscqss_dsc[391] + dwdot24dscqss12 * dscqss_dsc[426] +
    dwdot24dscqss14 * dscqss_dsc[496] + dwdot24dscqss13 * dscqss_dsc[461] +
    dwdot24dscqss15 * dscqss_dsc[531] + dwdot24dscqss8 * dscqss_dsc[286] +
    dwdot24dscqss10 * dscqss_dsc[356];
  J[276] =
    dwdot24dsc7 + dwdot24dscqss0 * dscqss_dsc[7] +
    dwdot24dscqss16 * dscqss_dsc[567] + dwdot24dscqss1 * dscqss_dsc[42] +
    dwdot24dscqss17 * dscqss_dsc[602] + dwdot24dscqss2 * dscqss_dsc[77] +
    dwdot24dscqss3 * dscqss_dsc[112] + dwdot24dscqss4 * dscqss_dsc[147] +
    dwdot24dscqss5 * dscqss_dsc[182] + dwdot24dscqss6 * dscqss_dsc[217] +
    dwdot24dscqss7 * dscqss_dsc[252] + dwdot24dscqss9 * dscqss_dsc[322] +
    dwdot24dscqss11 * dscqss_dsc[392] + dwdot24dscqss12 * dscqss_dsc[427] +
    dwdot24dscqss14 * dscqss_dsc[497] + dwdot24dscqss13 * dscqss_dsc[462] +
    dwdot24dscqss15 * dscqss_dsc[532] + dwdot24dscqss8 * dscqss_dsc[287] +
    dwdot24dscqss10 * dscqss_dsc[357];
  J[312] =
    dwdot24dsc8 + dwdot24dscqss0 * dscqss_dsc[8] +
    dwdot24dscqss16 * dscqss_dsc[568] + dwdot24dscqss1 * dscqss_dsc[43] +
    dwdot24dscqss17 * dscqss_dsc[603] + dwdot24dscqss2 * dscqss_dsc[78] +
    dwdot24dscqss3 * dscqss_dsc[113] + dwdot24dscqss4 * dscqss_dsc[148] +
    dwdot24dscqss5 * dscqss_dsc[183] + dwdot24dscqss6 * dscqss_dsc[218] +
    dwdot24dscqss7 * dscqss_dsc[253] + dwdot24dscqss9 * dscqss_dsc[323] +
    dwdot24dscqss11 * dscqss_dsc[393] + dwdot24dscqss12 * dscqss_dsc[428] +
    dwdot24dscqss14 * dscqss_dsc[498] + dwdot24dscqss13 * dscqss_dsc[463] +
    dwdot24dscqss15 * dscqss_dsc[533] + dwdot24dscqss8 * dscqss_dsc[288] +
    dwdot24dscqss10 * dscqss_dsc[358];
  J[348] =
    dwdot24dsc9 + dwdot24dscqss0 * dscqss_dsc[9] +
    dwdot24dscqss16 * dscqss_dsc[569] + dwdot24dscqss1 * dscqss_dsc[44] +
    dwdot24dscqss17 * dscqss_dsc[604] + dwdot24dscqss2 * dscqss_dsc[79] +
    dwdot24dscqss3 * dscqss_dsc[114] + dwdot24dscqss4 * dscqss_dsc[149] +
    dwdot24dscqss5 * dscqss_dsc[184] + dwdot24dscqss6 * dscqss_dsc[219] +
    dwdot24dscqss7 * dscqss_dsc[254] + dwdot24dscqss9 * dscqss_dsc[324] +
    dwdot24dscqss11 * dscqss_dsc[394] + dwdot24dscqss12 * dscqss_dsc[429] +
    dwdot24dscqss14 * dscqss_dsc[499] + dwdot24dscqss13 * dscqss_dsc[464] +
    dwdot24dscqss15 * dscqss_dsc[534] + dwdot24dscqss8 * dscqss_dsc[289] +
    dwdot24dscqss10 * dscqss_dsc[359];
  J[384] =
    dwdot24dsc10 + dwdot24dscqss0 * dscqss_dsc[10] +
    dwdot24dscqss16 * dscqss_dsc[570] + dwdot24dscqss1 * dscqss_dsc[45] +
    dwdot24dscqss17 * dscqss_dsc[605] + dwdot24dscqss2 * dscqss_dsc[80] +
    dwdot24dscqss3 * dscqss_dsc[115] + dwdot24dscqss4 * dscqss_dsc[150] +
    dwdot24dscqss5 * dscqss_dsc[185] + dwdot24dscqss6 * dscqss_dsc[220] +
    dwdot24dscqss7 * dscqss_dsc[255] + dwdot24dscqss9 * dscqss_dsc[325] +
    dwdot24dscqss11 * dscqss_dsc[395] + dwdot24dscqss12 * dscqss_dsc[430] +
    dwdot24dscqss14 * dscqss_dsc[500] + dwdot24dscqss13 * dscqss_dsc[465] +
    dwdot24dscqss15 * dscqss_dsc[535] + dwdot24dscqss8 * dscqss_dsc[290] +
    dwdot24dscqss10 * dscqss_dsc[360];
  J[420] =
    dwdot24dsc11 + dwdot24dscqss0 * dscqss_dsc[11] +
    dwdot24dscqss16 * dscqss_dsc[571] + dwdot24dscqss1 * dscqss_dsc[46] +
    dwdot24dscqss17 * dscqss_dsc[606] + dwdot24dscqss2 * dscqss_dsc[81] +
    dwdot24dscqss3 * dscqss_dsc[116] + dwdot24dscqss4 * dscqss_dsc[151] +
    dwdot24dscqss5 * dscqss_dsc[186] + dwdot24dscqss6 * dscqss_dsc[221] +
    dwdot24dscqss7 * dscqss_dsc[256] + dwdot24dscqss9 * dscqss_dsc[326] +
    dwdot24dscqss11 * dscqss_dsc[396] + dwdot24dscqss12 * dscqss_dsc[431] +
    dwdot24dscqss14 * dscqss_dsc[501] + dwdot24dscqss13 * dscqss_dsc[466] +
    dwdot24dscqss15 * dscqss_dsc[536] + dwdot24dscqss8 * dscqss_dsc[291] +
    dwdot24dscqss10 * dscqss_dsc[361];
  J[456] =
    dwdot24dsc12 + dwdot24dscqss0 * dscqss_dsc[12] +
    dwdot24dscqss16 * dscqss_dsc[572] + dwdot24dscqss1 * dscqss_dsc[47] +
    dwdot24dscqss17 * dscqss_dsc[607] + dwdot24dscqss2 * dscqss_dsc[82] +
    dwdot24dscqss3 * dscqss_dsc[117] + dwdot24dscqss4 * dscqss_dsc[152] +
    dwdot24dscqss5 * dscqss_dsc[187] + dwdot24dscqss6 * dscqss_dsc[222] +
    dwdot24dscqss7 * dscqss_dsc[257] + dwdot24dscqss9 * dscqss_dsc[327] +
    dwdot24dscqss11 * dscqss_dsc[397] + dwdot24dscqss12 * dscqss_dsc[432] +
    dwdot24dscqss14 * dscqss_dsc[502] + dwdot24dscqss13 * dscqss_dsc[467] +
    dwdot24dscqss15 * dscqss_dsc[537] + dwdot24dscqss8 * dscqss_dsc[292] +
    dwdot24dscqss10 * dscqss_dsc[362];
  J[492] =
    dwdot24dsc13 + dwdot24dscqss0 * dscqss_dsc[13] +
    dwdot24dscqss16 * dscqss_dsc[573] + dwdot24dscqss1 * dscqss_dsc[48] +
    dwdot24dscqss17 * dscqss_dsc[608] + dwdot24dscqss2 * dscqss_dsc[83] +
    dwdot24dscqss3 * dscqss_dsc[118] + dwdot24dscqss4 * dscqss_dsc[153] +
    dwdot24dscqss5 * dscqss_dsc[188] + dwdot24dscqss6 * dscqss_dsc[223] +
    dwdot24dscqss7 * dscqss_dsc[258] + dwdot24dscqss9 * dscqss_dsc[328] +
    dwdot24dscqss11 * dscqss_dsc[398] + dwdot24dscqss12 * dscqss_dsc[433] +
    dwdot24dscqss14 * dscqss_dsc[503] + dwdot24dscqss13 * dscqss_dsc[468] +
    dwdot24dscqss15 * dscqss_dsc[538] + dwdot24dscqss8 * dscqss_dsc[293] +
    dwdot24dscqss10 * dscqss_dsc[363];
  J[528] =
    dwdot24dsc14 + dwdot24dscqss0 * dscqss_dsc[14] +
    dwdot24dscqss16 * dscqss_dsc[574] + dwdot24dscqss1 * dscqss_dsc[49] +
    dwdot24dscqss17 * dscqss_dsc[609] + dwdot24dscqss2 * dscqss_dsc[84] +
    dwdot24dscqss3 * dscqss_dsc[119] + dwdot24dscqss4 * dscqss_dsc[154] +
    dwdot24dscqss5 * dscqss_dsc[189] + dwdot24dscqss6 * dscqss_dsc[224] +
    dwdot24dscqss7 * dscqss_dsc[259] + dwdot24dscqss9 * dscqss_dsc[329] +
    dwdot24dscqss11 * dscqss_dsc[399] + dwdot24dscqss12 * dscqss_dsc[434] +
    dwdot24dscqss14 * dscqss_dsc[504] + dwdot24dscqss13 * dscqss_dsc[469] +
    dwdot24dscqss15 * dscqss_dsc[539] + dwdot24dscqss8 * dscqss_dsc[294] +
    dwdot24dscqss10 * dscqss_dsc[364];
  J[564] =
    dwdot24dsc15 + dwdot24dscqss0 * dscqss_dsc[15] +
    dwdot24dscqss16 * dscqss_dsc[575] + dwdot24dscqss1 * dscqss_dsc[50] +
    dwdot24dscqss17 * dscqss_dsc[610] + dwdot24dscqss2 * dscqss_dsc[85] +
    dwdot24dscqss3 * dscqss_dsc[120] + dwdot24dscqss4 * dscqss_dsc[155] +
    dwdot24dscqss5 * dscqss_dsc[190] + dwdot24dscqss6 * dscqss_dsc[225] +
    dwdot24dscqss7 * dscqss_dsc[260] + dwdot24dscqss9 * dscqss_dsc[330] +
    dwdot24dscqss11 * dscqss_dsc[400] + dwdot24dscqss12 * dscqss_dsc[435] +
    dwdot24dscqss14 * dscqss_dsc[505] + dwdot24dscqss13 * dscqss_dsc[470] +
    dwdot24dscqss15 * dscqss_dsc[540] + dwdot24dscqss8 * dscqss_dsc[295] +
    dwdot24dscqss10 * dscqss_dsc[365];
  J[600] =
    dwdot24dsc16 + dwdot24dscqss0 * dscqss_dsc[16] +
    dwdot24dscqss16 * dscqss_dsc[576] + dwdot24dscqss1 * dscqss_dsc[51] +
    dwdot24dscqss17 * dscqss_dsc[611] + dwdot24dscqss2 * dscqss_dsc[86] +
    dwdot24dscqss3 * dscqss_dsc[121] + dwdot24dscqss4 * dscqss_dsc[156] +
    dwdot24dscqss5 * dscqss_dsc[191] + dwdot24dscqss6 * dscqss_dsc[226] +
    dwdot24dscqss7 * dscqss_dsc[261] + dwdot24dscqss9 * dscqss_dsc[331] +
    dwdot24dscqss11 * dscqss_dsc[401] + dwdot24dscqss12 * dscqss_dsc[436] +
    dwdot24dscqss14 * dscqss_dsc[506] + dwdot24dscqss13 * dscqss_dsc[471] +
    dwdot24dscqss15 * dscqss_dsc[541] + dwdot24dscqss8 * dscqss_dsc[296] +
    dwdot24dscqss10 * dscqss_dsc[366];
  J[636] =
    dwdot24dsc17 + dwdot24dscqss0 * dscqss_dsc[17] +
    dwdot24dscqss16 * dscqss_dsc[577] + dwdot24dscqss1 * dscqss_dsc[52] +
    dwdot24dscqss17 * dscqss_dsc[612] + dwdot24dscqss2 * dscqss_dsc[87] +
    dwdot24dscqss3 * dscqss_dsc[122] + dwdot24dscqss4 * dscqss_dsc[157] +
    dwdot24dscqss5 * dscqss_dsc[192] + dwdot24dscqss6 * dscqss_dsc[227] +
    dwdot24dscqss7 * dscqss_dsc[262] + dwdot24dscqss9 * dscqss_dsc[332] +
    dwdot24dscqss11 * dscqss_dsc[402] + dwdot24dscqss12 * dscqss_dsc[437] +
    dwdot24dscqss14 * dscqss_dsc[507] + dwdot24dscqss13 * dscqss_dsc[472] +
    dwdot24dscqss15 * dscqss_dsc[542] + dwdot24dscqss8 * dscqss_dsc[297] +
    dwdot24dscqss10 * dscqss_dsc[367];
  J[672] =
    dwdot24dsc18 + dwdot24dscqss0 * dscqss_dsc[18] +
    dwdot24dscqss16 * dscqss_dsc[578] + dwdot24dscqss1 * dscqss_dsc[53] +
    dwdot24dscqss17 * dscqss_dsc[613] + dwdot24dscqss2 * dscqss_dsc[88] +
    dwdot24dscqss3 * dscqss_dsc[123] + dwdot24dscqss4 * dscqss_dsc[158] +
    dwdot24dscqss5 * dscqss_dsc[193] + dwdot24dscqss6 * dscqss_dsc[228] +
    dwdot24dscqss7 * dscqss_dsc[263] + dwdot24dscqss9 * dscqss_dsc[333] +
    dwdot24dscqss11 * dscqss_dsc[403] + dwdot24dscqss12 * dscqss_dsc[438] +
    dwdot24dscqss14 * dscqss_dsc[508] + dwdot24dscqss13 * dscqss_dsc[473] +
    dwdot24dscqss15 * dscqss_dsc[543] + dwdot24dscqss8 * dscqss_dsc[298] +
    dwdot24dscqss10 * dscqss_dsc[368];
  J[708] =
    dwdot24dsc19 + dwdot24dscqss0 * dscqss_dsc[19] +
    dwdot24dscqss16 * dscqss_dsc[579] + dwdot24dscqss1 * dscqss_dsc[54] +
    dwdot24dscqss17 * dscqss_dsc[614] + dwdot24dscqss2 * dscqss_dsc[89] +
    dwdot24dscqss3 * dscqss_dsc[124] + dwdot24dscqss4 * dscqss_dsc[159] +
    dwdot24dscqss5 * dscqss_dsc[194] + dwdot24dscqss6 * dscqss_dsc[229] +
    dwdot24dscqss7 * dscqss_dsc[264] + dwdot24dscqss9 * dscqss_dsc[334] +
    dwdot24dscqss11 * dscqss_dsc[404] + dwdot24dscqss12 * dscqss_dsc[439] +
    dwdot24dscqss14 * dscqss_dsc[509] + dwdot24dscqss13 * dscqss_dsc[474] +
    dwdot24dscqss15 * dscqss_dsc[544] + dwdot24dscqss8 * dscqss_dsc[299] +
    dwdot24dscqss10 * dscqss_dsc[369];
  J[744] =
    dwdot24dsc20 + dwdot24dscqss0 * dscqss_dsc[20] +
    dwdot24dscqss16 * dscqss_dsc[580] + dwdot24dscqss1 * dscqss_dsc[55] +
    dwdot24dscqss17 * dscqss_dsc[615] + dwdot24dscqss2 * dscqss_dsc[90] +
    dwdot24dscqss3 * dscqss_dsc[125] + dwdot24dscqss4 * dscqss_dsc[160] +
    dwdot24dscqss5 * dscqss_dsc[195] + dwdot24dscqss6 * dscqss_dsc[230] +
    dwdot24dscqss7 * dscqss_dsc[265] + dwdot24dscqss9 * dscqss_dsc[335] +
    dwdot24dscqss11 * dscqss_dsc[405] + dwdot24dscqss12 * dscqss_dsc[440] +
    dwdot24dscqss14 * dscqss_dsc[510] + dwdot24dscqss13 * dscqss_dsc[475] +
    dwdot24dscqss15 * dscqss_dsc[545] + dwdot24dscqss8 * dscqss_dsc[300] +
    dwdot24dscqss10 * dscqss_dsc[370];
  J[780] =
    dwdot24dsc21 + dwdot24dscqss0 * dscqss_dsc[21] +
    dwdot24dscqss16 * dscqss_dsc[581] + dwdot24dscqss1 * dscqss_dsc[56] +
    dwdot24dscqss17 * dscqss_dsc[616] + dwdot24dscqss2 * dscqss_dsc[91] +
    dwdot24dscqss3 * dscqss_dsc[126] + dwdot24dscqss4 * dscqss_dsc[161] +
    dwdot24dscqss5 * dscqss_dsc[196] + dwdot24dscqss6 * dscqss_dsc[231] +
    dwdot24dscqss7 * dscqss_dsc[266] + dwdot24dscqss9 * dscqss_dsc[336] +
    dwdot24dscqss11 * dscqss_dsc[406] + dwdot24dscqss12 * dscqss_dsc[441] +
    dwdot24dscqss14 * dscqss_dsc[511] + dwdot24dscqss13 * dscqss_dsc[476] +
    dwdot24dscqss15 * dscqss_dsc[546] + dwdot24dscqss8 * dscqss_dsc[301] +
    dwdot24dscqss10 * dscqss_dsc[371];
  J[816] =
    dwdot24dsc22 + dwdot24dscqss0 * dscqss_dsc[22] +
    dwdot24dscqss16 * dscqss_dsc[582] + dwdot24dscqss1 * dscqss_dsc[57] +
    dwdot24dscqss17 * dscqss_dsc[617] + dwdot24dscqss2 * dscqss_dsc[92] +
    dwdot24dscqss3 * dscqss_dsc[127] + dwdot24dscqss4 * dscqss_dsc[162] +
    dwdot24dscqss5 * dscqss_dsc[197] + dwdot24dscqss6 * dscqss_dsc[232] +
    dwdot24dscqss7 * dscqss_dsc[267] + dwdot24dscqss9 * dscqss_dsc[337] +
    dwdot24dscqss11 * dscqss_dsc[407] + dwdot24dscqss12 * dscqss_dsc[442] +
    dwdot24dscqss14 * dscqss_dsc[512] + dwdot24dscqss13 * dscqss_dsc[477] +
    dwdot24dscqss15 * dscqss_dsc[547] + dwdot24dscqss8 * dscqss_dsc[302] +
    dwdot24dscqss10 * dscqss_dsc[372];
  J[852] =
    dwdot24dsc23 + dwdot24dscqss0 * dscqss_dsc[23] +
    dwdot24dscqss16 * dscqss_dsc[583] + dwdot24dscqss1 * dscqss_dsc[58] +
    dwdot24dscqss17 * dscqss_dsc[618] + dwdot24dscqss2 * dscqss_dsc[93] +
    dwdot24dscqss3 * dscqss_dsc[128] + dwdot24dscqss4 * dscqss_dsc[163] +
    dwdot24dscqss5 * dscqss_dsc[198] + dwdot24dscqss6 * dscqss_dsc[233] +
    dwdot24dscqss7 * dscqss_dsc[268] + dwdot24dscqss9 * dscqss_dsc[338] +
    dwdot24dscqss11 * dscqss_dsc[408] + dwdot24dscqss12 * dscqss_dsc[443] +
    dwdot24dscqss14 * dscqss_dsc[513] + dwdot24dscqss13 * dscqss_dsc[478] +
    dwdot24dscqss15 * dscqss_dsc[548] + dwdot24dscqss8 * dscqss_dsc[303] +
    dwdot24dscqss10 * dscqss_dsc[373];
  J[888] =
    dwdot24dsc24 + dwdot24dscqss0 * dscqss_dsc[24] +
    dwdot24dscqss16 * dscqss_dsc[584] + dwdot24dscqss1 * dscqss_dsc[59] +
    dwdot24dscqss17 * dscqss_dsc[619] + dwdot24dscqss2 * dscqss_dsc[94] +
    dwdot24dscqss3 * dscqss_dsc[129] + dwdot24dscqss4 * dscqss_dsc[164] +
    dwdot24dscqss5 * dscqss_dsc[199] + dwdot24dscqss6 * dscqss_dsc[234] +
    dwdot24dscqss7 * dscqss_dsc[269] + dwdot24dscqss9 * dscqss_dsc[339] +
    dwdot24dscqss11 * dscqss_dsc[409] + dwdot24dscqss12 * dscqss_dsc[444] +
    dwdot24dscqss14 * dscqss_dsc[514] + dwdot24dscqss13 * dscqss_dsc[479] +
    dwdot24dscqss15 * dscqss_dsc[549] + dwdot24dscqss8 * dscqss_dsc[304] +
    dwdot24dscqss10 * dscqss_dsc[374];
  J[924] =
    dwdot24dsc25 + dwdot24dscqss0 * dscqss_dsc[25] +
    dwdot24dscqss16 * dscqss_dsc[585] + dwdot24dscqss1 * dscqss_dsc[60] +
    dwdot24dscqss17 * dscqss_dsc[620] + dwdot24dscqss2 * dscqss_dsc[95] +
    dwdot24dscqss3 * dscqss_dsc[130] + dwdot24dscqss4 * dscqss_dsc[165] +
    dwdot24dscqss5 * dscqss_dsc[200] + dwdot24dscqss6 * dscqss_dsc[235] +
    dwdot24dscqss7 * dscqss_dsc[270] + dwdot24dscqss9 * dscqss_dsc[340] +
    dwdot24dscqss11 * dscqss_dsc[410] + dwdot24dscqss12 * dscqss_dsc[445] +
    dwdot24dscqss14 * dscqss_dsc[515] + dwdot24dscqss13 * dscqss_dsc[480] +
    dwdot24dscqss15 * dscqss_dsc[550] + dwdot24dscqss8 * dscqss_dsc[305] +
    dwdot24dscqss10 * dscqss_dsc[375];
  J[960] =
    dwdot24dsc26 + dwdot24dscqss0 * dscqss_dsc[26] +
    dwdot24dscqss16 * dscqss_dsc[586] + dwdot24dscqss1 * dscqss_dsc[61] +
    dwdot24dscqss17 * dscqss_dsc[621] + dwdot24dscqss2 * dscqss_dsc[96] +
    dwdot24dscqss3 * dscqss_dsc[131] + dwdot24dscqss4 * dscqss_dsc[166] +
    dwdot24dscqss5 * dscqss_dsc[201] + dwdot24dscqss6 * dscqss_dsc[236] +
    dwdot24dscqss7 * dscqss_dsc[271] + dwdot24dscqss9 * dscqss_dsc[341] +
    dwdot24dscqss11 * dscqss_dsc[411] + dwdot24dscqss12 * dscqss_dsc[446] +
    dwdot24dscqss14 * dscqss_dsc[516] + dwdot24dscqss13 * dscqss_dsc[481] +
    dwdot24dscqss15 * dscqss_dsc[551] + dwdot24dscqss8 * dscqss_dsc[306] +
    dwdot24dscqss10 * dscqss_dsc[376];
  J[996] =
    dwdot24dsc27 + dwdot24dscqss0 * dscqss_dsc[27] +
    dwdot24dscqss16 * dscqss_dsc[587] + dwdot24dscqss1 * dscqss_dsc[62] +
    dwdot24dscqss17 * dscqss_dsc[622] + dwdot24dscqss2 * dscqss_dsc[97] +
    dwdot24dscqss3 * dscqss_dsc[132] + dwdot24dscqss4 * dscqss_dsc[167] +
    dwdot24dscqss5 * dscqss_dsc[202] + dwdot24dscqss6 * dscqss_dsc[237] +
    dwdot24dscqss7 * dscqss_dsc[272] + dwdot24dscqss9 * dscqss_dsc[342] +
    dwdot24dscqss11 * dscqss_dsc[412] + dwdot24dscqss12 * dscqss_dsc[447] +
    dwdot24dscqss14 * dscqss_dsc[517] + dwdot24dscqss13 * dscqss_dsc[482] +
    dwdot24dscqss15 * dscqss_dsc[552] + dwdot24dscqss8 * dscqss_dsc[307] +
    dwdot24dscqss10 * dscqss_dsc[377];
  J[1032] =
    dwdot24dsc28 + dwdot24dscqss0 * dscqss_dsc[28] +
    dwdot24dscqss16 * dscqss_dsc[588] + dwdot24dscqss1 * dscqss_dsc[63] +
    dwdot24dscqss17 * dscqss_dsc[623] + dwdot24dscqss2 * dscqss_dsc[98] +
    dwdot24dscqss3 * dscqss_dsc[133] + dwdot24dscqss4 * dscqss_dsc[168] +
    dwdot24dscqss5 * dscqss_dsc[203] + dwdot24dscqss6 * dscqss_dsc[238] +
    dwdot24dscqss7 * dscqss_dsc[273] + dwdot24dscqss9 * dscqss_dsc[343] +
    dwdot24dscqss11 * dscqss_dsc[413] + dwdot24dscqss12 * dscqss_dsc[448] +
    dwdot24dscqss14 * dscqss_dsc[518] + dwdot24dscqss13 * dscqss_dsc[483] +
    dwdot24dscqss15 * dscqss_dsc[553] + dwdot24dscqss8 * dscqss_dsc[308] +
    dwdot24dscqss10 * dscqss_dsc[378];
  J[1068] =
    dwdot24dsc29 + dwdot24dscqss0 * dscqss_dsc[29] +
    dwdot24dscqss16 * dscqss_dsc[589] + dwdot24dscqss1 * dscqss_dsc[64] +
    dwdot24dscqss17 * dscqss_dsc[624] + dwdot24dscqss2 * dscqss_dsc[99] +
    dwdot24dscqss3 * dscqss_dsc[134] + dwdot24dscqss4 * dscqss_dsc[169] +
    dwdot24dscqss5 * dscqss_dsc[204] + dwdot24dscqss6 * dscqss_dsc[239] +
    dwdot24dscqss7 * dscqss_dsc[274] + dwdot24dscqss9 * dscqss_dsc[344] +
    dwdot24dscqss11 * dscqss_dsc[414] + dwdot24dscqss12 * dscqss_dsc[449] +
    dwdot24dscqss14 * dscqss_dsc[519] + dwdot24dscqss13 * dscqss_dsc[484] +
    dwdot24dscqss15 * dscqss_dsc[554] + dwdot24dscqss8 * dscqss_dsc[309] +
    dwdot24dscqss10 * dscqss_dsc[379];
  J[1104] =
    dwdot24dsc30 + dwdot24dscqss0 * dscqss_dsc[30] +
    dwdot24dscqss16 * dscqss_dsc[590] + dwdot24dscqss1 * dscqss_dsc[65] +
    dwdot24dscqss17 * dscqss_dsc[625] + dwdot24dscqss2 * dscqss_dsc[100] +
    dwdot24dscqss3 * dscqss_dsc[135] + dwdot24dscqss4 * dscqss_dsc[170] +
    dwdot24dscqss5 * dscqss_dsc[205] + dwdot24dscqss6 * dscqss_dsc[240] +
    dwdot24dscqss7 * dscqss_dsc[275] + dwdot24dscqss9 * dscqss_dsc[345] +
    dwdot24dscqss11 * dscqss_dsc[415] + dwdot24dscqss12 * dscqss_dsc[450] +
    dwdot24dscqss14 * dscqss_dsc[520] + dwdot24dscqss13 * dscqss_dsc[485] +
    dwdot24dscqss15 * dscqss_dsc[555] + dwdot24dscqss8 * dscqss_dsc[310] +
    dwdot24dscqss10 * dscqss_dsc[380];
  J[1140] =
    dwdot24dsc31 + dwdot24dscqss0 * dscqss_dsc[31] +
    dwdot24dscqss16 * dscqss_dsc[591] + dwdot24dscqss1 * dscqss_dsc[66] +
    dwdot24dscqss17 * dscqss_dsc[626] + dwdot24dscqss2 * dscqss_dsc[101] +
    dwdot24dscqss3 * dscqss_dsc[136] + dwdot24dscqss4 * dscqss_dsc[171] +
    dwdot24dscqss5 * dscqss_dsc[206] + dwdot24dscqss6 * dscqss_dsc[241] +
    dwdot24dscqss7 * dscqss_dsc[276] + dwdot24dscqss9 * dscqss_dsc[346] +
    dwdot24dscqss11 * dscqss_dsc[416] + dwdot24dscqss12 * dscqss_dsc[451] +
    dwdot24dscqss14 * dscqss_dsc[521] + dwdot24dscqss13 * dscqss_dsc[486] +
    dwdot24dscqss15 * dscqss_dsc[556] + dwdot24dscqss8 * dscqss_dsc[311] +
    dwdot24dscqss10 * dscqss_dsc[381];
  J[1176] =
    dwdot24dsc32 + dwdot24dscqss0 * dscqss_dsc[32] +
    dwdot24dscqss16 * dscqss_dsc[592] + dwdot24dscqss1 * dscqss_dsc[67] +
    dwdot24dscqss17 * dscqss_dsc[627] + dwdot24dscqss2 * dscqss_dsc[102] +
    dwdot24dscqss3 * dscqss_dsc[137] + dwdot24dscqss4 * dscqss_dsc[172] +
    dwdot24dscqss5 * dscqss_dsc[207] + dwdot24dscqss6 * dscqss_dsc[242] +
    dwdot24dscqss7 * dscqss_dsc[277] + dwdot24dscqss9 * dscqss_dsc[347] +
    dwdot24dscqss11 * dscqss_dsc[417] + dwdot24dscqss12 * dscqss_dsc[452] +
    dwdot24dscqss14 * dscqss_dsc[522] + dwdot24dscqss13 * dscqss_dsc[487] +
    dwdot24dscqss15 * dscqss_dsc[557] + dwdot24dscqss8 * dscqss_dsc[312] +
    dwdot24dscqss10 * dscqss_dsc[382];
  J[1212] =
    dwdot24dsc33 + dwdot24dscqss0 * dscqss_dsc[33] +
    dwdot24dscqss16 * dscqss_dsc[593] + dwdot24dscqss1 * dscqss_dsc[68] +
    dwdot24dscqss17 * dscqss_dsc[628] + dwdot24dscqss2 * dscqss_dsc[103] +
    dwdot24dscqss3 * dscqss_dsc[138] + dwdot24dscqss4 * dscqss_dsc[173] +
    dwdot24dscqss5 * dscqss_dsc[208] + dwdot24dscqss6 * dscqss_dsc[243] +
    dwdot24dscqss7 * dscqss_dsc[278] + dwdot24dscqss9 * dscqss_dsc[348] +
    dwdot24dscqss11 * dscqss_dsc[418] + dwdot24dscqss12 * dscqss_dsc[453] +
    dwdot24dscqss14 * dscqss_dsc[523] + dwdot24dscqss13 * dscqss_dsc[488] +
    dwdot24dscqss15 * dscqss_dsc[558] + dwdot24dscqss8 * dscqss_dsc[313] +
    dwdot24dscqss10 * dscqss_dsc[383];
  J[1248] =
    dwdot24dsc34 + dwdot24dscqss0 * dscqss_dsc[34] +
    dwdot24dscqss16 * dscqss_dsc[594] + dwdot24dscqss1 * dscqss_dsc[69] +
    dwdot24dscqss17 * dscqss_dsc[629] + dwdot24dscqss2 * dscqss_dsc[104] +
    dwdot24dscqss3 * dscqss_dsc[139] + dwdot24dscqss4 * dscqss_dsc[174] +
    dwdot24dscqss5 * dscqss_dsc[209] + dwdot24dscqss6 * dscqss_dsc[244] +
    dwdot24dscqss7 * dscqss_dsc[279] + dwdot24dscqss9 * dscqss_dsc[349] +
    dwdot24dscqss11 * dscqss_dsc[419] + dwdot24dscqss12 * dscqss_dsc[454] +
    dwdot24dscqss14 * dscqss_dsc[524] + dwdot24dscqss13 * dscqss_dsc[489] +
    dwdot24dscqss15 * dscqss_dsc[559] + dwdot24dscqss8 * dscqss_dsc[314] +
    dwdot24dscqss10 * dscqss_dsc[384];
  J[25] =
    dwdot25dsc0 + dwdot25dscqss0 * dscqss_dsc[0] +
    dwdot25dscqss16 * dscqss_dsc[560] + dwdot25dscqss1 * dscqss_dsc[35] +
    dwdot25dscqss17 * dscqss_dsc[595] + dwdot25dscqss2 * dscqss_dsc[70] +
    dwdot25dscqss3 * dscqss_dsc[105] + dwdot25dscqss4 * dscqss_dsc[140] +
    dwdot25dscqss5 * dscqss_dsc[175] + dwdot25dscqss6 * dscqss_dsc[210] +
    dwdot25dscqss7 * dscqss_dsc[245] + dwdot25dscqss9 * dscqss_dsc[315] +
    dwdot25dscqss11 * dscqss_dsc[385] + dwdot25dscqss12 * dscqss_dsc[420] +
    dwdot25dscqss14 * dscqss_dsc[490] + dwdot25dscqss13 * dscqss_dsc[455] +
    dwdot25dscqss15 * dscqss_dsc[525] + dwdot25dscqss8 * dscqss_dsc[280] +
    dwdot25dscqss10 * dscqss_dsc[350];
  J[61] =
    dwdot25dsc1 + dwdot25dscqss0 * dscqss_dsc[1] +
    dwdot25dscqss16 * dscqss_dsc[561] + dwdot25dscqss1 * dscqss_dsc[36] +
    dwdot25dscqss17 * dscqss_dsc[596] + dwdot25dscqss2 * dscqss_dsc[71] +
    dwdot25dscqss3 * dscqss_dsc[106] + dwdot25dscqss4 * dscqss_dsc[141] +
    dwdot25dscqss5 * dscqss_dsc[176] + dwdot25dscqss6 * dscqss_dsc[211] +
    dwdot25dscqss7 * dscqss_dsc[246] + dwdot25dscqss9 * dscqss_dsc[316] +
    dwdot25dscqss11 * dscqss_dsc[386] + dwdot25dscqss12 * dscqss_dsc[421] +
    dwdot25dscqss14 * dscqss_dsc[491] + dwdot25dscqss13 * dscqss_dsc[456] +
    dwdot25dscqss15 * dscqss_dsc[526] + dwdot25dscqss8 * dscqss_dsc[281] +
    dwdot25dscqss10 * dscqss_dsc[351];
  J[97] =
    dwdot25dsc2 + dwdot25dscqss0 * dscqss_dsc[2] +
    dwdot25dscqss16 * dscqss_dsc[562] + dwdot25dscqss1 * dscqss_dsc[37] +
    dwdot25dscqss17 * dscqss_dsc[597] + dwdot25dscqss2 * dscqss_dsc[72] +
    dwdot25dscqss3 * dscqss_dsc[107] + dwdot25dscqss4 * dscqss_dsc[142] +
    dwdot25dscqss5 * dscqss_dsc[177] + dwdot25dscqss6 * dscqss_dsc[212] +
    dwdot25dscqss7 * dscqss_dsc[247] + dwdot25dscqss9 * dscqss_dsc[317] +
    dwdot25dscqss11 * dscqss_dsc[387] + dwdot25dscqss12 * dscqss_dsc[422] +
    dwdot25dscqss14 * dscqss_dsc[492] + dwdot25dscqss13 * dscqss_dsc[457] +
    dwdot25dscqss15 * dscqss_dsc[527] + dwdot25dscqss8 * dscqss_dsc[282] +
    dwdot25dscqss10 * dscqss_dsc[352];
  J[133] =
    dwdot25dsc3 + dwdot25dscqss0 * dscqss_dsc[3] +
    dwdot25dscqss16 * dscqss_dsc[563] + dwdot25dscqss1 * dscqss_dsc[38] +
    dwdot25dscqss17 * dscqss_dsc[598] + dwdot25dscqss2 * dscqss_dsc[73] +
    dwdot25dscqss3 * dscqss_dsc[108] + dwdot25dscqss4 * dscqss_dsc[143] +
    dwdot25dscqss5 * dscqss_dsc[178] + dwdot25dscqss6 * dscqss_dsc[213] +
    dwdot25dscqss7 * dscqss_dsc[248] + dwdot25dscqss9 * dscqss_dsc[318] +
    dwdot25dscqss11 * dscqss_dsc[388] + dwdot25dscqss12 * dscqss_dsc[423] +
    dwdot25dscqss14 * dscqss_dsc[493] + dwdot25dscqss13 * dscqss_dsc[458] +
    dwdot25dscqss15 * dscqss_dsc[528] + dwdot25dscqss8 * dscqss_dsc[283] +
    dwdot25dscqss10 * dscqss_dsc[353];
  J[169] =
    dwdot25dsc4 + dwdot25dscqss0 * dscqss_dsc[4] +
    dwdot25dscqss16 * dscqss_dsc[564] + dwdot25dscqss1 * dscqss_dsc[39] +
    dwdot25dscqss17 * dscqss_dsc[599] + dwdot25dscqss2 * dscqss_dsc[74] +
    dwdot25dscqss3 * dscqss_dsc[109] + dwdot25dscqss4 * dscqss_dsc[144] +
    dwdot25dscqss5 * dscqss_dsc[179] + dwdot25dscqss6 * dscqss_dsc[214] +
    dwdot25dscqss7 * dscqss_dsc[249] + dwdot25dscqss9 * dscqss_dsc[319] +
    dwdot25dscqss11 * dscqss_dsc[389] + dwdot25dscqss12 * dscqss_dsc[424] +
    dwdot25dscqss14 * dscqss_dsc[494] + dwdot25dscqss13 * dscqss_dsc[459] +
    dwdot25dscqss15 * dscqss_dsc[529] + dwdot25dscqss8 * dscqss_dsc[284] +
    dwdot25dscqss10 * dscqss_dsc[354];
  J[205] =
    dwdot25dsc5 + dwdot25dscqss0 * dscqss_dsc[5] +
    dwdot25dscqss16 * dscqss_dsc[565] + dwdot25dscqss1 * dscqss_dsc[40] +
    dwdot25dscqss17 * dscqss_dsc[600] + dwdot25dscqss2 * dscqss_dsc[75] +
    dwdot25dscqss3 * dscqss_dsc[110] + dwdot25dscqss4 * dscqss_dsc[145] +
    dwdot25dscqss5 * dscqss_dsc[180] + dwdot25dscqss6 * dscqss_dsc[215] +
    dwdot25dscqss7 * dscqss_dsc[250] + dwdot25dscqss9 * dscqss_dsc[320] +
    dwdot25dscqss11 * dscqss_dsc[390] + dwdot25dscqss12 * dscqss_dsc[425] +
    dwdot25dscqss14 * dscqss_dsc[495] + dwdot25dscqss13 * dscqss_dsc[460] +
    dwdot25dscqss15 * dscqss_dsc[530] + dwdot25dscqss8 * dscqss_dsc[285] +
    dwdot25dscqss10 * dscqss_dsc[355];
  J[241] =
    dwdot25dsc6 + dwdot25dscqss0 * dscqss_dsc[6] +
    dwdot25dscqss16 * dscqss_dsc[566] + dwdot25dscqss1 * dscqss_dsc[41] +
    dwdot25dscqss17 * dscqss_dsc[601] + dwdot25dscqss2 * dscqss_dsc[76] +
    dwdot25dscqss3 * dscqss_dsc[111] + dwdot25dscqss4 * dscqss_dsc[146] +
    dwdot25dscqss5 * dscqss_dsc[181] + dwdot25dscqss6 * dscqss_dsc[216] +
    dwdot25dscqss7 * dscqss_dsc[251] + dwdot25dscqss9 * dscqss_dsc[321] +
    dwdot25dscqss11 * dscqss_dsc[391] + dwdot25dscqss12 * dscqss_dsc[426] +
    dwdot25dscqss14 * dscqss_dsc[496] + dwdot25dscqss13 * dscqss_dsc[461] +
    dwdot25dscqss15 * dscqss_dsc[531] + dwdot25dscqss8 * dscqss_dsc[286] +
    dwdot25dscqss10 * dscqss_dsc[356];
  J[277] =
    dwdot25dsc7 + dwdot25dscqss0 * dscqss_dsc[7] +
    dwdot25dscqss16 * dscqss_dsc[567] + dwdot25dscqss1 * dscqss_dsc[42] +
    dwdot25dscqss17 * dscqss_dsc[602] + dwdot25dscqss2 * dscqss_dsc[77] +
    dwdot25dscqss3 * dscqss_dsc[112] + dwdot25dscqss4 * dscqss_dsc[147] +
    dwdot25dscqss5 * dscqss_dsc[182] + dwdot25dscqss6 * dscqss_dsc[217] +
    dwdot25dscqss7 * dscqss_dsc[252] + dwdot25dscqss9 * dscqss_dsc[322] +
    dwdot25dscqss11 * dscqss_dsc[392] + dwdot25dscqss12 * dscqss_dsc[427] +
    dwdot25dscqss14 * dscqss_dsc[497] + dwdot25dscqss13 * dscqss_dsc[462] +
    dwdot25dscqss15 * dscqss_dsc[532] + dwdot25dscqss8 * dscqss_dsc[287] +
    dwdot25dscqss10 * dscqss_dsc[357];
  J[313] =
    dwdot25dsc8 + dwdot25dscqss0 * dscqss_dsc[8] +
    dwdot25dscqss16 * dscqss_dsc[568] + dwdot25dscqss1 * dscqss_dsc[43] +
    dwdot25dscqss17 * dscqss_dsc[603] + dwdot25dscqss2 * dscqss_dsc[78] +
    dwdot25dscqss3 * dscqss_dsc[113] + dwdot25dscqss4 * dscqss_dsc[148] +
    dwdot25dscqss5 * dscqss_dsc[183] + dwdot25dscqss6 * dscqss_dsc[218] +
    dwdot25dscqss7 * dscqss_dsc[253] + dwdot25dscqss9 * dscqss_dsc[323] +
    dwdot25dscqss11 * dscqss_dsc[393] + dwdot25dscqss12 * dscqss_dsc[428] +
    dwdot25dscqss14 * dscqss_dsc[498] + dwdot25dscqss13 * dscqss_dsc[463] +
    dwdot25dscqss15 * dscqss_dsc[533] + dwdot25dscqss8 * dscqss_dsc[288] +
    dwdot25dscqss10 * dscqss_dsc[358];
  J[349] =
    dwdot25dsc9 + dwdot25dscqss0 * dscqss_dsc[9] +
    dwdot25dscqss16 * dscqss_dsc[569] + dwdot25dscqss1 * dscqss_dsc[44] +
    dwdot25dscqss17 * dscqss_dsc[604] + dwdot25dscqss2 * dscqss_dsc[79] +
    dwdot25dscqss3 * dscqss_dsc[114] + dwdot25dscqss4 * dscqss_dsc[149] +
    dwdot25dscqss5 * dscqss_dsc[184] + dwdot25dscqss6 * dscqss_dsc[219] +
    dwdot25dscqss7 * dscqss_dsc[254] + dwdot25dscqss9 * dscqss_dsc[324] +
    dwdot25dscqss11 * dscqss_dsc[394] + dwdot25dscqss12 * dscqss_dsc[429] +
    dwdot25dscqss14 * dscqss_dsc[499] + dwdot25dscqss13 * dscqss_dsc[464] +
    dwdot25dscqss15 * dscqss_dsc[534] + dwdot25dscqss8 * dscqss_dsc[289] +
    dwdot25dscqss10 * dscqss_dsc[359];
  J[385] =
    dwdot25dsc10 + dwdot25dscqss0 * dscqss_dsc[10] +
    dwdot25dscqss16 * dscqss_dsc[570] + dwdot25dscqss1 * dscqss_dsc[45] +
    dwdot25dscqss17 * dscqss_dsc[605] + dwdot25dscqss2 * dscqss_dsc[80] +
    dwdot25dscqss3 * dscqss_dsc[115] + dwdot25dscqss4 * dscqss_dsc[150] +
    dwdot25dscqss5 * dscqss_dsc[185] + dwdot25dscqss6 * dscqss_dsc[220] +
    dwdot25dscqss7 * dscqss_dsc[255] + dwdot25dscqss9 * dscqss_dsc[325] +
    dwdot25dscqss11 * dscqss_dsc[395] + dwdot25dscqss12 * dscqss_dsc[430] +
    dwdot25dscqss14 * dscqss_dsc[500] + dwdot25dscqss13 * dscqss_dsc[465] +
    dwdot25dscqss15 * dscqss_dsc[535] + dwdot25dscqss8 * dscqss_dsc[290] +
    dwdot25dscqss10 * dscqss_dsc[360];
  J[421] =
    dwdot25dsc11 + dwdot25dscqss0 * dscqss_dsc[11] +
    dwdot25dscqss16 * dscqss_dsc[571] + dwdot25dscqss1 * dscqss_dsc[46] +
    dwdot25dscqss17 * dscqss_dsc[606] + dwdot25dscqss2 * dscqss_dsc[81] +
    dwdot25dscqss3 * dscqss_dsc[116] + dwdot25dscqss4 * dscqss_dsc[151] +
    dwdot25dscqss5 * dscqss_dsc[186] + dwdot25dscqss6 * dscqss_dsc[221] +
    dwdot25dscqss7 * dscqss_dsc[256] + dwdot25dscqss9 * dscqss_dsc[326] +
    dwdot25dscqss11 * dscqss_dsc[396] + dwdot25dscqss12 * dscqss_dsc[431] +
    dwdot25dscqss14 * dscqss_dsc[501] + dwdot25dscqss13 * dscqss_dsc[466] +
    dwdot25dscqss15 * dscqss_dsc[536] + dwdot25dscqss8 * dscqss_dsc[291] +
    dwdot25dscqss10 * dscqss_dsc[361];
  J[457] =
    dwdot25dsc12 + dwdot25dscqss0 * dscqss_dsc[12] +
    dwdot25dscqss16 * dscqss_dsc[572] + dwdot25dscqss1 * dscqss_dsc[47] +
    dwdot25dscqss17 * dscqss_dsc[607] + dwdot25dscqss2 * dscqss_dsc[82] +
    dwdot25dscqss3 * dscqss_dsc[117] + dwdot25dscqss4 * dscqss_dsc[152] +
    dwdot25dscqss5 * dscqss_dsc[187] + dwdot25dscqss6 * dscqss_dsc[222] +
    dwdot25dscqss7 * dscqss_dsc[257] + dwdot25dscqss9 * dscqss_dsc[327] +
    dwdot25dscqss11 * dscqss_dsc[397] + dwdot25dscqss12 * dscqss_dsc[432] +
    dwdot25dscqss14 * dscqss_dsc[502] + dwdot25dscqss13 * dscqss_dsc[467] +
    dwdot25dscqss15 * dscqss_dsc[537] + dwdot25dscqss8 * dscqss_dsc[292] +
    dwdot25dscqss10 * dscqss_dsc[362];
  J[493] =
    dwdot25dsc13 + dwdot25dscqss0 * dscqss_dsc[13] +
    dwdot25dscqss16 * dscqss_dsc[573] + dwdot25dscqss1 * dscqss_dsc[48] +
    dwdot25dscqss17 * dscqss_dsc[608] + dwdot25dscqss2 * dscqss_dsc[83] +
    dwdot25dscqss3 * dscqss_dsc[118] + dwdot25dscqss4 * dscqss_dsc[153] +
    dwdot25dscqss5 * dscqss_dsc[188] + dwdot25dscqss6 * dscqss_dsc[223] +
    dwdot25dscqss7 * dscqss_dsc[258] + dwdot25dscqss9 * dscqss_dsc[328] +
    dwdot25dscqss11 * dscqss_dsc[398] + dwdot25dscqss12 * dscqss_dsc[433] +
    dwdot25dscqss14 * dscqss_dsc[503] + dwdot25dscqss13 * dscqss_dsc[468] +
    dwdot25dscqss15 * dscqss_dsc[538] + dwdot25dscqss8 * dscqss_dsc[293] +
    dwdot25dscqss10 * dscqss_dsc[363];
  J[529] =
    dwdot25dsc14 + dwdot25dscqss0 * dscqss_dsc[14] +
    dwdot25dscqss16 * dscqss_dsc[574] + dwdot25dscqss1 * dscqss_dsc[49] +
    dwdot25dscqss17 * dscqss_dsc[609] + dwdot25dscqss2 * dscqss_dsc[84] +
    dwdot25dscqss3 * dscqss_dsc[119] + dwdot25dscqss4 * dscqss_dsc[154] +
    dwdot25dscqss5 * dscqss_dsc[189] + dwdot25dscqss6 * dscqss_dsc[224] +
    dwdot25dscqss7 * dscqss_dsc[259] + dwdot25dscqss9 * dscqss_dsc[329] +
    dwdot25dscqss11 * dscqss_dsc[399] + dwdot25dscqss12 * dscqss_dsc[434] +
    dwdot25dscqss14 * dscqss_dsc[504] + dwdot25dscqss13 * dscqss_dsc[469] +
    dwdot25dscqss15 * dscqss_dsc[539] + dwdot25dscqss8 * dscqss_dsc[294] +
    dwdot25dscqss10 * dscqss_dsc[364];
  J[565] =
    dwdot25dsc15 + dwdot25dscqss0 * dscqss_dsc[15] +
    dwdot25dscqss16 * dscqss_dsc[575] + dwdot25dscqss1 * dscqss_dsc[50] +
    dwdot25dscqss17 * dscqss_dsc[610] + dwdot25dscqss2 * dscqss_dsc[85] +
    dwdot25dscqss3 * dscqss_dsc[120] + dwdot25dscqss4 * dscqss_dsc[155] +
    dwdot25dscqss5 * dscqss_dsc[190] + dwdot25dscqss6 * dscqss_dsc[225] +
    dwdot25dscqss7 * dscqss_dsc[260] + dwdot25dscqss9 * dscqss_dsc[330] +
    dwdot25dscqss11 * dscqss_dsc[400] + dwdot25dscqss12 * dscqss_dsc[435] +
    dwdot25dscqss14 * dscqss_dsc[505] + dwdot25dscqss13 * dscqss_dsc[470] +
    dwdot25dscqss15 * dscqss_dsc[540] + dwdot25dscqss8 * dscqss_dsc[295] +
    dwdot25dscqss10 * dscqss_dsc[365];
  J[601] =
    dwdot25dsc16 + dwdot25dscqss0 * dscqss_dsc[16] +
    dwdot25dscqss16 * dscqss_dsc[576] + dwdot25dscqss1 * dscqss_dsc[51] +
    dwdot25dscqss17 * dscqss_dsc[611] + dwdot25dscqss2 * dscqss_dsc[86] +
    dwdot25dscqss3 * dscqss_dsc[121] + dwdot25dscqss4 * dscqss_dsc[156] +
    dwdot25dscqss5 * dscqss_dsc[191] + dwdot25dscqss6 * dscqss_dsc[226] +
    dwdot25dscqss7 * dscqss_dsc[261] + dwdot25dscqss9 * dscqss_dsc[331] +
    dwdot25dscqss11 * dscqss_dsc[401] + dwdot25dscqss12 * dscqss_dsc[436] +
    dwdot25dscqss14 * dscqss_dsc[506] + dwdot25dscqss13 * dscqss_dsc[471] +
    dwdot25dscqss15 * dscqss_dsc[541] + dwdot25dscqss8 * dscqss_dsc[296] +
    dwdot25dscqss10 * dscqss_dsc[366];
  J[637] =
    dwdot25dsc17 + dwdot25dscqss0 * dscqss_dsc[17] +
    dwdot25dscqss16 * dscqss_dsc[577] + dwdot25dscqss1 * dscqss_dsc[52] +
    dwdot25dscqss17 * dscqss_dsc[612] + dwdot25dscqss2 * dscqss_dsc[87] +
    dwdot25dscqss3 * dscqss_dsc[122] + dwdot25dscqss4 * dscqss_dsc[157] +
    dwdot25dscqss5 * dscqss_dsc[192] + dwdot25dscqss6 * dscqss_dsc[227] +
    dwdot25dscqss7 * dscqss_dsc[262] + dwdot25dscqss9 * dscqss_dsc[332] +
    dwdot25dscqss11 * dscqss_dsc[402] + dwdot25dscqss12 * dscqss_dsc[437] +
    dwdot25dscqss14 * dscqss_dsc[507] + dwdot25dscqss13 * dscqss_dsc[472] +
    dwdot25dscqss15 * dscqss_dsc[542] + dwdot25dscqss8 * dscqss_dsc[297] +
    dwdot25dscqss10 * dscqss_dsc[367];
  J[673] =
    dwdot25dsc18 + dwdot25dscqss0 * dscqss_dsc[18] +
    dwdot25dscqss16 * dscqss_dsc[578] + dwdot25dscqss1 * dscqss_dsc[53] +
    dwdot25dscqss17 * dscqss_dsc[613] + dwdot25dscqss2 * dscqss_dsc[88] +
    dwdot25dscqss3 * dscqss_dsc[123] + dwdot25dscqss4 * dscqss_dsc[158] +
    dwdot25dscqss5 * dscqss_dsc[193] + dwdot25dscqss6 * dscqss_dsc[228] +
    dwdot25dscqss7 * dscqss_dsc[263] + dwdot25dscqss9 * dscqss_dsc[333] +
    dwdot25dscqss11 * dscqss_dsc[403] + dwdot25dscqss12 * dscqss_dsc[438] +
    dwdot25dscqss14 * dscqss_dsc[508] + dwdot25dscqss13 * dscqss_dsc[473] +
    dwdot25dscqss15 * dscqss_dsc[543] + dwdot25dscqss8 * dscqss_dsc[298] +
    dwdot25dscqss10 * dscqss_dsc[368];
  J[709] =
    dwdot25dsc19 + dwdot25dscqss0 * dscqss_dsc[19] +
    dwdot25dscqss16 * dscqss_dsc[579] + dwdot25dscqss1 * dscqss_dsc[54] +
    dwdot25dscqss17 * dscqss_dsc[614] + dwdot25dscqss2 * dscqss_dsc[89] +
    dwdot25dscqss3 * dscqss_dsc[124] + dwdot25dscqss4 * dscqss_dsc[159] +
    dwdot25dscqss5 * dscqss_dsc[194] + dwdot25dscqss6 * dscqss_dsc[229] +
    dwdot25dscqss7 * dscqss_dsc[264] + dwdot25dscqss9 * dscqss_dsc[334] +
    dwdot25dscqss11 * dscqss_dsc[404] + dwdot25dscqss12 * dscqss_dsc[439] +
    dwdot25dscqss14 * dscqss_dsc[509] + dwdot25dscqss13 * dscqss_dsc[474] +
    dwdot25dscqss15 * dscqss_dsc[544] + dwdot25dscqss8 * dscqss_dsc[299] +
    dwdot25dscqss10 * dscqss_dsc[369];
  J[745] =
    dwdot25dsc20 + dwdot25dscqss0 * dscqss_dsc[20] +
    dwdot25dscqss16 * dscqss_dsc[580] + dwdot25dscqss1 * dscqss_dsc[55] +
    dwdot25dscqss17 * dscqss_dsc[615] + dwdot25dscqss2 * dscqss_dsc[90] +
    dwdot25dscqss3 * dscqss_dsc[125] + dwdot25dscqss4 * dscqss_dsc[160] +
    dwdot25dscqss5 * dscqss_dsc[195] + dwdot25dscqss6 * dscqss_dsc[230] +
    dwdot25dscqss7 * dscqss_dsc[265] + dwdot25dscqss9 * dscqss_dsc[335] +
    dwdot25dscqss11 * dscqss_dsc[405] + dwdot25dscqss12 * dscqss_dsc[440] +
    dwdot25dscqss14 * dscqss_dsc[510] + dwdot25dscqss13 * dscqss_dsc[475] +
    dwdot25dscqss15 * dscqss_dsc[545] + dwdot25dscqss8 * dscqss_dsc[300] +
    dwdot25dscqss10 * dscqss_dsc[370];
  J[781] =
    dwdot25dsc21 + dwdot25dscqss0 * dscqss_dsc[21] +
    dwdot25dscqss16 * dscqss_dsc[581] + dwdot25dscqss1 * dscqss_dsc[56] +
    dwdot25dscqss17 * dscqss_dsc[616] + dwdot25dscqss2 * dscqss_dsc[91] +
    dwdot25dscqss3 * dscqss_dsc[126] + dwdot25dscqss4 * dscqss_dsc[161] +
    dwdot25dscqss5 * dscqss_dsc[196] + dwdot25dscqss6 * dscqss_dsc[231] +
    dwdot25dscqss7 * dscqss_dsc[266] + dwdot25dscqss9 * dscqss_dsc[336] +
    dwdot25dscqss11 * dscqss_dsc[406] + dwdot25dscqss12 * dscqss_dsc[441] +
    dwdot25dscqss14 * dscqss_dsc[511] + dwdot25dscqss13 * dscqss_dsc[476] +
    dwdot25dscqss15 * dscqss_dsc[546] + dwdot25dscqss8 * dscqss_dsc[301] +
    dwdot25dscqss10 * dscqss_dsc[371];
  J[817] =
    dwdot25dsc22 + dwdot25dscqss0 * dscqss_dsc[22] +
    dwdot25dscqss16 * dscqss_dsc[582] + dwdot25dscqss1 * dscqss_dsc[57] +
    dwdot25dscqss17 * dscqss_dsc[617] + dwdot25dscqss2 * dscqss_dsc[92] +
    dwdot25dscqss3 * dscqss_dsc[127] + dwdot25dscqss4 * dscqss_dsc[162] +
    dwdot25dscqss5 * dscqss_dsc[197] + dwdot25dscqss6 * dscqss_dsc[232] +
    dwdot25dscqss7 * dscqss_dsc[267] + dwdot25dscqss9 * dscqss_dsc[337] +
    dwdot25dscqss11 * dscqss_dsc[407] + dwdot25dscqss12 * dscqss_dsc[442] +
    dwdot25dscqss14 * dscqss_dsc[512] + dwdot25dscqss13 * dscqss_dsc[477] +
    dwdot25dscqss15 * dscqss_dsc[547] + dwdot25dscqss8 * dscqss_dsc[302] +
    dwdot25dscqss10 * dscqss_dsc[372];
  J[853] =
    dwdot25dsc23 + dwdot25dscqss0 * dscqss_dsc[23] +
    dwdot25dscqss16 * dscqss_dsc[583] + dwdot25dscqss1 * dscqss_dsc[58] +
    dwdot25dscqss17 * dscqss_dsc[618] + dwdot25dscqss2 * dscqss_dsc[93] +
    dwdot25dscqss3 * dscqss_dsc[128] + dwdot25dscqss4 * dscqss_dsc[163] +
    dwdot25dscqss5 * dscqss_dsc[198] + dwdot25dscqss6 * dscqss_dsc[233] +
    dwdot25dscqss7 * dscqss_dsc[268] + dwdot25dscqss9 * dscqss_dsc[338] +
    dwdot25dscqss11 * dscqss_dsc[408] + dwdot25dscqss12 * dscqss_dsc[443] +
    dwdot25dscqss14 * dscqss_dsc[513] + dwdot25dscqss13 * dscqss_dsc[478] +
    dwdot25dscqss15 * dscqss_dsc[548] + dwdot25dscqss8 * dscqss_dsc[303] +
    dwdot25dscqss10 * dscqss_dsc[373];
  J[889] =
    dwdot25dsc24 + dwdot25dscqss0 * dscqss_dsc[24] +
    dwdot25dscqss16 * dscqss_dsc[584] + dwdot25dscqss1 * dscqss_dsc[59] +
    dwdot25dscqss17 * dscqss_dsc[619] + dwdot25dscqss2 * dscqss_dsc[94] +
    dwdot25dscqss3 * dscqss_dsc[129] + dwdot25dscqss4 * dscqss_dsc[164] +
    dwdot25dscqss5 * dscqss_dsc[199] + dwdot25dscqss6 * dscqss_dsc[234] +
    dwdot25dscqss7 * dscqss_dsc[269] + dwdot25dscqss9 * dscqss_dsc[339] +
    dwdot25dscqss11 * dscqss_dsc[409] + dwdot25dscqss12 * dscqss_dsc[444] +
    dwdot25dscqss14 * dscqss_dsc[514] + dwdot25dscqss13 * dscqss_dsc[479] +
    dwdot25dscqss15 * dscqss_dsc[549] + dwdot25dscqss8 * dscqss_dsc[304] +
    dwdot25dscqss10 * dscqss_dsc[374];
  J[925] =
    dwdot25dsc25 + dwdot25dscqss0 * dscqss_dsc[25] +
    dwdot25dscqss16 * dscqss_dsc[585] + dwdot25dscqss1 * dscqss_dsc[60] +
    dwdot25dscqss17 * dscqss_dsc[620] + dwdot25dscqss2 * dscqss_dsc[95] +
    dwdot25dscqss3 * dscqss_dsc[130] + dwdot25dscqss4 * dscqss_dsc[165] +
    dwdot25dscqss5 * dscqss_dsc[200] + dwdot25dscqss6 * dscqss_dsc[235] +
    dwdot25dscqss7 * dscqss_dsc[270] + dwdot25dscqss9 * dscqss_dsc[340] +
    dwdot25dscqss11 * dscqss_dsc[410] + dwdot25dscqss12 * dscqss_dsc[445] +
    dwdot25dscqss14 * dscqss_dsc[515] + dwdot25dscqss13 * dscqss_dsc[480] +
    dwdot25dscqss15 * dscqss_dsc[550] + dwdot25dscqss8 * dscqss_dsc[305] +
    dwdot25dscqss10 * dscqss_dsc[375];
  J[961] =
    dwdot25dsc26 + dwdot25dscqss0 * dscqss_dsc[26] +
    dwdot25dscqss16 * dscqss_dsc[586] + dwdot25dscqss1 * dscqss_dsc[61] +
    dwdot25dscqss17 * dscqss_dsc[621] + dwdot25dscqss2 * dscqss_dsc[96] +
    dwdot25dscqss3 * dscqss_dsc[131] + dwdot25dscqss4 * dscqss_dsc[166] +
    dwdot25dscqss5 * dscqss_dsc[201] + dwdot25dscqss6 * dscqss_dsc[236] +
    dwdot25dscqss7 * dscqss_dsc[271] + dwdot25dscqss9 * dscqss_dsc[341] +
    dwdot25dscqss11 * dscqss_dsc[411] + dwdot25dscqss12 * dscqss_dsc[446] +
    dwdot25dscqss14 * dscqss_dsc[516] + dwdot25dscqss13 * dscqss_dsc[481] +
    dwdot25dscqss15 * dscqss_dsc[551] + dwdot25dscqss8 * dscqss_dsc[306] +
    dwdot25dscqss10 * dscqss_dsc[376];
  J[997] =
    dwdot25dsc27 + dwdot25dscqss0 * dscqss_dsc[27] +
    dwdot25dscqss16 * dscqss_dsc[587] + dwdot25dscqss1 * dscqss_dsc[62] +
    dwdot25dscqss17 * dscqss_dsc[622] + dwdot25dscqss2 * dscqss_dsc[97] +
    dwdot25dscqss3 * dscqss_dsc[132] + dwdot25dscqss4 * dscqss_dsc[167] +
    dwdot25dscqss5 * dscqss_dsc[202] + dwdot25dscqss6 * dscqss_dsc[237] +
    dwdot25dscqss7 * dscqss_dsc[272] + dwdot25dscqss9 * dscqss_dsc[342] +
    dwdot25dscqss11 * dscqss_dsc[412] + dwdot25dscqss12 * dscqss_dsc[447] +
    dwdot25dscqss14 * dscqss_dsc[517] + dwdot25dscqss13 * dscqss_dsc[482] +
    dwdot25dscqss15 * dscqss_dsc[552] + dwdot25dscqss8 * dscqss_dsc[307] +
    dwdot25dscqss10 * dscqss_dsc[377];
  J[1033] =
    dwdot25dsc28 + dwdot25dscqss0 * dscqss_dsc[28] +
    dwdot25dscqss16 * dscqss_dsc[588] + dwdot25dscqss1 * dscqss_dsc[63] +
    dwdot25dscqss17 * dscqss_dsc[623] + dwdot25dscqss2 * dscqss_dsc[98] +
    dwdot25dscqss3 * dscqss_dsc[133] + dwdot25dscqss4 * dscqss_dsc[168] +
    dwdot25dscqss5 * dscqss_dsc[203] + dwdot25dscqss6 * dscqss_dsc[238] +
    dwdot25dscqss7 * dscqss_dsc[273] + dwdot25dscqss9 * dscqss_dsc[343] +
    dwdot25dscqss11 * dscqss_dsc[413] + dwdot25dscqss12 * dscqss_dsc[448] +
    dwdot25dscqss14 * dscqss_dsc[518] + dwdot25dscqss13 * dscqss_dsc[483] +
    dwdot25dscqss15 * dscqss_dsc[553] + dwdot25dscqss8 * dscqss_dsc[308] +
    dwdot25dscqss10 * dscqss_dsc[378];
  J[1069] =
    dwdot25dsc29 + dwdot25dscqss0 * dscqss_dsc[29] +
    dwdot25dscqss16 * dscqss_dsc[589] + dwdot25dscqss1 * dscqss_dsc[64] +
    dwdot25dscqss17 * dscqss_dsc[624] + dwdot25dscqss2 * dscqss_dsc[99] +
    dwdot25dscqss3 * dscqss_dsc[134] + dwdot25dscqss4 * dscqss_dsc[169] +
    dwdot25dscqss5 * dscqss_dsc[204] + dwdot25dscqss6 * dscqss_dsc[239] +
    dwdot25dscqss7 * dscqss_dsc[274] + dwdot25dscqss9 * dscqss_dsc[344] +
    dwdot25dscqss11 * dscqss_dsc[414] + dwdot25dscqss12 * dscqss_dsc[449] +
    dwdot25dscqss14 * dscqss_dsc[519] + dwdot25dscqss13 * dscqss_dsc[484] +
    dwdot25dscqss15 * dscqss_dsc[554] + dwdot25dscqss8 * dscqss_dsc[309] +
    dwdot25dscqss10 * dscqss_dsc[379];
  J[1105] =
    dwdot25dsc30 + dwdot25dscqss0 * dscqss_dsc[30] +
    dwdot25dscqss16 * dscqss_dsc[590] + dwdot25dscqss1 * dscqss_dsc[65] +
    dwdot25dscqss17 * dscqss_dsc[625] + dwdot25dscqss2 * dscqss_dsc[100] +
    dwdot25dscqss3 * dscqss_dsc[135] + dwdot25dscqss4 * dscqss_dsc[170] +
    dwdot25dscqss5 * dscqss_dsc[205] + dwdot25dscqss6 * dscqss_dsc[240] +
    dwdot25dscqss7 * dscqss_dsc[275] + dwdot25dscqss9 * dscqss_dsc[345] +
    dwdot25dscqss11 * dscqss_dsc[415] + dwdot25dscqss12 * dscqss_dsc[450] +
    dwdot25dscqss14 * dscqss_dsc[520] + dwdot25dscqss13 * dscqss_dsc[485] +
    dwdot25dscqss15 * dscqss_dsc[555] + dwdot25dscqss8 * dscqss_dsc[310] +
    dwdot25dscqss10 * dscqss_dsc[380];
  J[1141] =
    dwdot25dsc31 + dwdot25dscqss0 * dscqss_dsc[31] +
    dwdot25dscqss16 * dscqss_dsc[591] + dwdot25dscqss1 * dscqss_dsc[66] +
    dwdot25dscqss17 * dscqss_dsc[626] + dwdot25dscqss2 * dscqss_dsc[101] +
    dwdot25dscqss3 * dscqss_dsc[136] + dwdot25dscqss4 * dscqss_dsc[171] +
    dwdot25dscqss5 * dscqss_dsc[206] + dwdot25dscqss6 * dscqss_dsc[241] +
    dwdot25dscqss7 * dscqss_dsc[276] + dwdot25dscqss9 * dscqss_dsc[346] +
    dwdot25dscqss11 * dscqss_dsc[416] + dwdot25dscqss12 * dscqss_dsc[451] +
    dwdot25dscqss14 * dscqss_dsc[521] + dwdot25dscqss13 * dscqss_dsc[486] +
    dwdot25dscqss15 * dscqss_dsc[556] + dwdot25dscqss8 * dscqss_dsc[311] +
    dwdot25dscqss10 * dscqss_dsc[381];
  J[1177] =
    dwdot25dsc32 + dwdot25dscqss0 * dscqss_dsc[32] +
    dwdot25dscqss16 * dscqss_dsc[592] + dwdot25dscqss1 * dscqss_dsc[67] +
    dwdot25dscqss17 * dscqss_dsc[627] + dwdot25dscqss2 * dscqss_dsc[102] +
    dwdot25dscqss3 * dscqss_dsc[137] + dwdot25dscqss4 * dscqss_dsc[172] +
    dwdot25dscqss5 * dscqss_dsc[207] + dwdot25dscqss6 * dscqss_dsc[242] +
    dwdot25dscqss7 * dscqss_dsc[277] + dwdot25dscqss9 * dscqss_dsc[347] +
    dwdot25dscqss11 * dscqss_dsc[417] + dwdot25dscqss12 * dscqss_dsc[452] +
    dwdot25dscqss14 * dscqss_dsc[522] + dwdot25dscqss13 * dscqss_dsc[487] +
    dwdot25dscqss15 * dscqss_dsc[557] + dwdot25dscqss8 * dscqss_dsc[312] +
    dwdot25dscqss10 * dscqss_dsc[382];
  J[1213] =
    dwdot25dsc33 + dwdot25dscqss0 * dscqss_dsc[33] +
    dwdot25dscqss16 * dscqss_dsc[593] + dwdot25dscqss1 * dscqss_dsc[68] +
    dwdot25dscqss17 * dscqss_dsc[628] + dwdot25dscqss2 * dscqss_dsc[103] +
    dwdot25dscqss3 * dscqss_dsc[138] + dwdot25dscqss4 * dscqss_dsc[173] +
    dwdot25dscqss5 * dscqss_dsc[208] + dwdot25dscqss6 * dscqss_dsc[243] +
    dwdot25dscqss7 * dscqss_dsc[278] + dwdot25dscqss9 * dscqss_dsc[348] +
    dwdot25dscqss11 * dscqss_dsc[418] + dwdot25dscqss12 * dscqss_dsc[453] +
    dwdot25dscqss14 * dscqss_dsc[523] + dwdot25dscqss13 * dscqss_dsc[488] +
    dwdot25dscqss15 * dscqss_dsc[558] + dwdot25dscqss8 * dscqss_dsc[313] +
    dwdot25dscqss10 * dscqss_dsc[383];
  J[1249] =
    dwdot25dsc34 + dwdot25dscqss0 * dscqss_dsc[34] +
    dwdot25dscqss16 * dscqss_dsc[594] + dwdot25dscqss1 * dscqss_dsc[69] +
    dwdot25dscqss17 * dscqss_dsc[629] + dwdot25dscqss2 * dscqss_dsc[104] +
    dwdot25dscqss3 * dscqss_dsc[139] + dwdot25dscqss4 * dscqss_dsc[174] +
    dwdot25dscqss5 * dscqss_dsc[209] + dwdot25dscqss6 * dscqss_dsc[244] +
    dwdot25dscqss7 * dscqss_dsc[279] + dwdot25dscqss9 * dscqss_dsc[349] +
    dwdot25dscqss11 * dscqss_dsc[419] + dwdot25dscqss12 * dscqss_dsc[454] +
    dwdot25dscqss14 * dscqss_dsc[524] + dwdot25dscqss13 * dscqss_dsc[489] +
    dwdot25dscqss15 * dscqss_dsc[559] + dwdot25dscqss8 * dscqss_dsc[314] +
    dwdot25dscqss10 * dscqss_dsc[384];
  J[26] =
    dwdot26dsc0 + dwdot26dscqss0 * dscqss_dsc[0] +
    dwdot26dscqss16 * dscqss_dsc[560] + dwdot26dscqss1 * dscqss_dsc[35] +
    dwdot26dscqss17 * dscqss_dsc[595] + dwdot26dscqss2 * dscqss_dsc[70] +
    dwdot26dscqss3 * dscqss_dsc[105] + dwdot26dscqss4 * dscqss_dsc[140] +
    dwdot26dscqss5 * dscqss_dsc[175] + dwdot26dscqss6 * dscqss_dsc[210] +
    dwdot26dscqss7 * dscqss_dsc[245] + dwdot26dscqss9 * dscqss_dsc[315] +
    dwdot26dscqss11 * dscqss_dsc[385] + dwdot26dscqss12 * dscqss_dsc[420] +
    dwdot26dscqss14 * dscqss_dsc[490] + dwdot26dscqss13 * dscqss_dsc[455] +
    dwdot26dscqss15 * dscqss_dsc[525] + dwdot26dscqss8 * dscqss_dsc[280] +
    dwdot26dscqss10 * dscqss_dsc[350];
  J[62] =
    dwdot26dsc1 + dwdot26dscqss0 * dscqss_dsc[1] +
    dwdot26dscqss16 * dscqss_dsc[561] + dwdot26dscqss1 * dscqss_dsc[36] +
    dwdot26dscqss17 * dscqss_dsc[596] + dwdot26dscqss2 * dscqss_dsc[71] +
    dwdot26dscqss3 * dscqss_dsc[106] + dwdot26dscqss4 * dscqss_dsc[141] +
    dwdot26dscqss5 * dscqss_dsc[176] + dwdot26dscqss6 * dscqss_dsc[211] +
    dwdot26dscqss7 * dscqss_dsc[246] + dwdot26dscqss9 * dscqss_dsc[316] +
    dwdot26dscqss11 * dscqss_dsc[386] + dwdot26dscqss12 * dscqss_dsc[421] +
    dwdot26dscqss14 * dscqss_dsc[491] + dwdot26dscqss13 * dscqss_dsc[456] +
    dwdot26dscqss15 * dscqss_dsc[526] + dwdot26dscqss8 * dscqss_dsc[281] +
    dwdot26dscqss10 * dscqss_dsc[351];
  J[98] =
    dwdot26dsc2 + dwdot26dscqss0 * dscqss_dsc[2] +
    dwdot26dscqss16 * dscqss_dsc[562] + dwdot26dscqss1 * dscqss_dsc[37] +
    dwdot26dscqss17 * dscqss_dsc[597] + dwdot26dscqss2 * dscqss_dsc[72] +
    dwdot26dscqss3 * dscqss_dsc[107] + dwdot26dscqss4 * dscqss_dsc[142] +
    dwdot26dscqss5 * dscqss_dsc[177] + dwdot26dscqss6 * dscqss_dsc[212] +
    dwdot26dscqss7 * dscqss_dsc[247] + dwdot26dscqss9 * dscqss_dsc[317] +
    dwdot26dscqss11 * dscqss_dsc[387] + dwdot26dscqss12 * dscqss_dsc[422] +
    dwdot26dscqss14 * dscqss_dsc[492] + dwdot26dscqss13 * dscqss_dsc[457] +
    dwdot26dscqss15 * dscqss_dsc[527] + dwdot26dscqss8 * dscqss_dsc[282] +
    dwdot26dscqss10 * dscqss_dsc[352];
  J[134] =
    dwdot26dsc3 + dwdot26dscqss0 * dscqss_dsc[3] +
    dwdot26dscqss16 * dscqss_dsc[563] + dwdot26dscqss1 * dscqss_dsc[38] +
    dwdot26dscqss17 * dscqss_dsc[598] + dwdot26dscqss2 * dscqss_dsc[73] +
    dwdot26dscqss3 * dscqss_dsc[108] + dwdot26dscqss4 * dscqss_dsc[143] +
    dwdot26dscqss5 * dscqss_dsc[178] + dwdot26dscqss6 * dscqss_dsc[213] +
    dwdot26dscqss7 * dscqss_dsc[248] + dwdot26dscqss9 * dscqss_dsc[318] +
    dwdot26dscqss11 * dscqss_dsc[388] + dwdot26dscqss12 * dscqss_dsc[423] +
    dwdot26dscqss14 * dscqss_dsc[493] + dwdot26dscqss13 * dscqss_dsc[458] +
    dwdot26dscqss15 * dscqss_dsc[528] + dwdot26dscqss8 * dscqss_dsc[283] +
    dwdot26dscqss10 * dscqss_dsc[353];
  J[170] =
    dwdot26dsc4 + dwdot26dscqss0 * dscqss_dsc[4] +
    dwdot26dscqss16 * dscqss_dsc[564] + dwdot26dscqss1 * dscqss_dsc[39] +
    dwdot26dscqss17 * dscqss_dsc[599] + dwdot26dscqss2 * dscqss_dsc[74] +
    dwdot26dscqss3 * dscqss_dsc[109] + dwdot26dscqss4 * dscqss_dsc[144] +
    dwdot26dscqss5 * dscqss_dsc[179] + dwdot26dscqss6 * dscqss_dsc[214] +
    dwdot26dscqss7 * dscqss_dsc[249] + dwdot26dscqss9 * dscqss_dsc[319] +
    dwdot26dscqss11 * dscqss_dsc[389] + dwdot26dscqss12 * dscqss_dsc[424] +
    dwdot26dscqss14 * dscqss_dsc[494] + dwdot26dscqss13 * dscqss_dsc[459] +
    dwdot26dscqss15 * dscqss_dsc[529] + dwdot26dscqss8 * dscqss_dsc[284] +
    dwdot26dscqss10 * dscqss_dsc[354];
  J[206] =
    dwdot26dsc5 + dwdot26dscqss0 * dscqss_dsc[5] +
    dwdot26dscqss16 * dscqss_dsc[565] + dwdot26dscqss1 * dscqss_dsc[40] +
    dwdot26dscqss17 * dscqss_dsc[600] + dwdot26dscqss2 * dscqss_dsc[75] +
    dwdot26dscqss3 * dscqss_dsc[110] + dwdot26dscqss4 * dscqss_dsc[145] +
    dwdot26dscqss5 * dscqss_dsc[180] + dwdot26dscqss6 * dscqss_dsc[215] +
    dwdot26dscqss7 * dscqss_dsc[250] + dwdot26dscqss9 * dscqss_dsc[320] +
    dwdot26dscqss11 * dscqss_dsc[390] + dwdot26dscqss12 * dscqss_dsc[425] +
    dwdot26dscqss14 * dscqss_dsc[495] + dwdot26dscqss13 * dscqss_dsc[460] +
    dwdot26dscqss15 * dscqss_dsc[530] + dwdot26dscqss8 * dscqss_dsc[285] +
    dwdot26dscqss10 * dscqss_dsc[355];
  J[242] =
    dwdot26dsc6 + dwdot26dscqss0 * dscqss_dsc[6] +
    dwdot26dscqss16 * dscqss_dsc[566] + dwdot26dscqss1 * dscqss_dsc[41] +
    dwdot26dscqss17 * dscqss_dsc[601] + dwdot26dscqss2 * dscqss_dsc[76] +
    dwdot26dscqss3 * dscqss_dsc[111] + dwdot26dscqss4 * dscqss_dsc[146] +
    dwdot26dscqss5 * dscqss_dsc[181] + dwdot26dscqss6 * dscqss_dsc[216] +
    dwdot26dscqss7 * dscqss_dsc[251] + dwdot26dscqss9 * dscqss_dsc[321] +
    dwdot26dscqss11 * dscqss_dsc[391] + dwdot26dscqss12 * dscqss_dsc[426] +
    dwdot26dscqss14 * dscqss_dsc[496] + dwdot26dscqss13 * dscqss_dsc[461] +
    dwdot26dscqss15 * dscqss_dsc[531] + dwdot26dscqss8 * dscqss_dsc[286] +
    dwdot26dscqss10 * dscqss_dsc[356];
  J[278] =
    dwdot26dsc7 + dwdot26dscqss0 * dscqss_dsc[7] +
    dwdot26dscqss16 * dscqss_dsc[567] + dwdot26dscqss1 * dscqss_dsc[42] +
    dwdot26dscqss17 * dscqss_dsc[602] + dwdot26dscqss2 * dscqss_dsc[77] +
    dwdot26dscqss3 * dscqss_dsc[112] + dwdot26dscqss4 * dscqss_dsc[147] +
    dwdot26dscqss5 * dscqss_dsc[182] + dwdot26dscqss6 * dscqss_dsc[217] +
    dwdot26dscqss7 * dscqss_dsc[252] + dwdot26dscqss9 * dscqss_dsc[322] +
    dwdot26dscqss11 * dscqss_dsc[392] + dwdot26dscqss12 * dscqss_dsc[427] +
    dwdot26dscqss14 * dscqss_dsc[497] + dwdot26dscqss13 * dscqss_dsc[462] +
    dwdot26dscqss15 * dscqss_dsc[532] + dwdot26dscqss8 * dscqss_dsc[287] +
    dwdot26dscqss10 * dscqss_dsc[357];
  J[314] =
    dwdot26dsc8 + dwdot26dscqss0 * dscqss_dsc[8] +
    dwdot26dscqss16 * dscqss_dsc[568] + dwdot26dscqss1 * dscqss_dsc[43] +
    dwdot26dscqss17 * dscqss_dsc[603] + dwdot26dscqss2 * dscqss_dsc[78] +
    dwdot26dscqss3 * dscqss_dsc[113] + dwdot26dscqss4 * dscqss_dsc[148] +
    dwdot26dscqss5 * dscqss_dsc[183] + dwdot26dscqss6 * dscqss_dsc[218] +
    dwdot26dscqss7 * dscqss_dsc[253] + dwdot26dscqss9 * dscqss_dsc[323] +
    dwdot26dscqss11 * dscqss_dsc[393] + dwdot26dscqss12 * dscqss_dsc[428] +
    dwdot26dscqss14 * dscqss_dsc[498] + dwdot26dscqss13 * dscqss_dsc[463] +
    dwdot26dscqss15 * dscqss_dsc[533] + dwdot26dscqss8 * dscqss_dsc[288] +
    dwdot26dscqss10 * dscqss_dsc[358];
  J[350] =
    dwdot26dsc9 + dwdot26dscqss0 * dscqss_dsc[9] +
    dwdot26dscqss16 * dscqss_dsc[569] + dwdot26dscqss1 * dscqss_dsc[44] +
    dwdot26dscqss17 * dscqss_dsc[604] + dwdot26dscqss2 * dscqss_dsc[79] +
    dwdot26dscqss3 * dscqss_dsc[114] + dwdot26dscqss4 * dscqss_dsc[149] +
    dwdot26dscqss5 * dscqss_dsc[184] + dwdot26dscqss6 * dscqss_dsc[219] +
    dwdot26dscqss7 * dscqss_dsc[254] + dwdot26dscqss9 * dscqss_dsc[324] +
    dwdot26dscqss11 * dscqss_dsc[394] + dwdot26dscqss12 * dscqss_dsc[429] +
    dwdot26dscqss14 * dscqss_dsc[499] + dwdot26dscqss13 * dscqss_dsc[464] +
    dwdot26dscqss15 * dscqss_dsc[534] + dwdot26dscqss8 * dscqss_dsc[289] +
    dwdot26dscqss10 * dscqss_dsc[359];
  J[386] =
    dwdot26dsc10 + dwdot26dscqss0 * dscqss_dsc[10] +
    dwdot26dscqss16 * dscqss_dsc[570] + dwdot26dscqss1 * dscqss_dsc[45] +
    dwdot26dscqss17 * dscqss_dsc[605] + dwdot26dscqss2 * dscqss_dsc[80] +
    dwdot26dscqss3 * dscqss_dsc[115] + dwdot26dscqss4 * dscqss_dsc[150] +
    dwdot26dscqss5 * dscqss_dsc[185] + dwdot26dscqss6 * dscqss_dsc[220] +
    dwdot26dscqss7 * dscqss_dsc[255] + dwdot26dscqss9 * dscqss_dsc[325] +
    dwdot26dscqss11 * dscqss_dsc[395] + dwdot26dscqss12 * dscqss_dsc[430] +
    dwdot26dscqss14 * dscqss_dsc[500] + dwdot26dscqss13 * dscqss_dsc[465] +
    dwdot26dscqss15 * dscqss_dsc[535] + dwdot26dscqss8 * dscqss_dsc[290] +
    dwdot26dscqss10 * dscqss_dsc[360];
  J[422] =
    dwdot26dsc11 + dwdot26dscqss0 * dscqss_dsc[11] +
    dwdot26dscqss16 * dscqss_dsc[571] + dwdot26dscqss1 * dscqss_dsc[46] +
    dwdot26dscqss17 * dscqss_dsc[606] + dwdot26dscqss2 * dscqss_dsc[81] +
    dwdot26dscqss3 * dscqss_dsc[116] + dwdot26dscqss4 * dscqss_dsc[151] +
    dwdot26dscqss5 * dscqss_dsc[186] + dwdot26dscqss6 * dscqss_dsc[221] +
    dwdot26dscqss7 * dscqss_dsc[256] + dwdot26dscqss9 * dscqss_dsc[326] +
    dwdot26dscqss11 * dscqss_dsc[396] + dwdot26dscqss12 * dscqss_dsc[431] +
    dwdot26dscqss14 * dscqss_dsc[501] + dwdot26dscqss13 * dscqss_dsc[466] +
    dwdot26dscqss15 * dscqss_dsc[536] + dwdot26dscqss8 * dscqss_dsc[291] +
    dwdot26dscqss10 * dscqss_dsc[361];
  J[458] =
    dwdot26dsc12 + dwdot26dscqss0 * dscqss_dsc[12] +
    dwdot26dscqss16 * dscqss_dsc[572] + dwdot26dscqss1 * dscqss_dsc[47] +
    dwdot26dscqss17 * dscqss_dsc[607] + dwdot26dscqss2 * dscqss_dsc[82] +
    dwdot26dscqss3 * dscqss_dsc[117] + dwdot26dscqss4 * dscqss_dsc[152] +
    dwdot26dscqss5 * dscqss_dsc[187] + dwdot26dscqss6 * dscqss_dsc[222] +
    dwdot26dscqss7 * dscqss_dsc[257] + dwdot26dscqss9 * dscqss_dsc[327] +
    dwdot26dscqss11 * dscqss_dsc[397] + dwdot26dscqss12 * dscqss_dsc[432] +
    dwdot26dscqss14 * dscqss_dsc[502] + dwdot26dscqss13 * dscqss_dsc[467] +
    dwdot26dscqss15 * dscqss_dsc[537] + dwdot26dscqss8 * dscqss_dsc[292] +
    dwdot26dscqss10 * dscqss_dsc[362];
  J[494] =
    dwdot26dsc13 + dwdot26dscqss0 * dscqss_dsc[13] +
    dwdot26dscqss16 * dscqss_dsc[573] + dwdot26dscqss1 * dscqss_dsc[48] +
    dwdot26dscqss17 * dscqss_dsc[608] + dwdot26dscqss2 * dscqss_dsc[83] +
    dwdot26dscqss3 * dscqss_dsc[118] + dwdot26dscqss4 * dscqss_dsc[153] +
    dwdot26dscqss5 * dscqss_dsc[188] + dwdot26dscqss6 * dscqss_dsc[223] +
    dwdot26dscqss7 * dscqss_dsc[258] + dwdot26dscqss9 * dscqss_dsc[328] +
    dwdot26dscqss11 * dscqss_dsc[398] + dwdot26dscqss12 * dscqss_dsc[433] +
    dwdot26dscqss14 * dscqss_dsc[503] + dwdot26dscqss13 * dscqss_dsc[468] +
    dwdot26dscqss15 * dscqss_dsc[538] + dwdot26dscqss8 * dscqss_dsc[293] +
    dwdot26dscqss10 * dscqss_dsc[363];
  J[530] =
    dwdot26dsc14 + dwdot26dscqss0 * dscqss_dsc[14] +
    dwdot26dscqss16 * dscqss_dsc[574] + dwdot26dscqss1 * dscqss_dsc[49] +
    dwdot26dscqss17 * dscqss_dsc[609] + dwdot26dscqss2 * dscqss_dsc[84] +
    dwdot26dscqss3 * dscqss_dsc[119] + dwdot26dscqss4 * dscqss_dsc[154] +
    dwdot26dscqss5 * dscqss_dsc[189] + dwdot26dscqss6 * dscqss_dsc[224] +
    dwdot26dscqss7 * dscqss_dsc[259] + dwdot26dscqss9 * dscqss_dsc[329] +
    dwdot26dscqss11 * dscqss_dsc[399] + dwdot26dscqss12 * dscqss_dsc[434] +
    dwdot26dscqss14 * dscqss_dsc[504] + dwdot26dscqss13 * dscqss_dsc[469] +
    dwdot26dscqss15 * dscqss_dsc[539] + dwdot26dscqss8 * dscqss_dsc[294] +
    dwdot26dscqss10 * dscqss_dsc[364];
  J[566] =
    dwdot26dsc15 + dwdot26dscqss0 * dscqss_dsc[15] +
    dwdot26dscqss16 * dscqss_dsc[575] + dwdot26dscqss1 * dscqss_dsc[50] +
    dwdot26dscqss17 * dscqss_dsc[610] + dwdot26dscqss2 * dscqss_dsc[85] +
    dwdot26dscqss3 * dscqss_dsc[120] + dwdot26dscqss4 * dscqss_dsc[155] +
    dwdot26dscqss5 * dscqss_dsc[190] + dwdot26dscqss6 * dscqss_dsc[225] +
    dwdot26dscqss7 * dscqss_dsc[260] + dwdot26dscqss9 * dscqss_dsc[330] +
    dwdot26dscqss11 * dscqss_dsc[400] + dwdot26dscqss12 * dscqss_dsc[435] +
    dwdot26dscqss14 * dscqss_dsc[505] + dwdot26dscqss13 * dscqss_dsc[470] +
    dwdot26dscqss15 * dscqss_dsc[540] + dwdot26dscqss8 * dscqss_dsc[295] +
    dwdot26dscqss10 * dscqss_dsc[365];
  J[602] =
    dwdot26dsc16 + dwdot26dscqss0 * dscqss_dsc[16] +
    dwdot26dscqss16 * dscqss_dsc[576] + dwdot26dscqss1 * dscqss_dsc[51] +
    dwdot26dscqss17 * dscqss_dsc[611] + dwdot26dscqss2 * dscqss_dsc[86] +
    dwdot26dscqss3 * dscqss_dsc[121] + dwdot26dscqss4 * dscqss_dsc[156] +
    dwdot26dscqss5 * dscqss_dsc[191] + dwdot26dscqss6 * dscqss_dsc[226] +
    dwdot26dscqss7 * dscqss_dsc[261] + dwdot26dscqss9 * dscqss_dsc[331] +
    dwdot26dscqss11 * dscqss_dsc[401] + dwdot26dscqss12 * dscqss_dsc[436] +
    dwdot26dscqss14 * dscqss_dsc[506] + dwdot26dscqss13 * dscqss_dsc[471] +
    dwdot26dscqss15 * dscqss_dsc[541] + dwdot26dscqss8 * dscqss_dsc[296] +
    dwdot26dscqss10 * dscqss_dsc[366];
  J[638] =
    dwdot26dsc17 + dwdot26dscqss0 * dscqss_dsc[17] +
    dwdot26dscqss16 * dscqss_dsc[577] + dwdot26dscqss1 * dscqss_dsc[52] +
    dwdot26dscqss17 * dscqss_dsc[612] + dwdot26dscqss2 * dscqss_dsc[87] +
    dwdot26dscqss3 * dscqss_dsc[122] + dwdot26dscqss4 * dscqss_dsc[157] +
    dwdot26dscqss5 * dscqss_dsc[192] + dwdot26dscqss6 * dscqss_dsc[227] +
    dwdot26dscqss7 * dscqss_dsc[262] + dwdot26dscqss9 * dscqss_dsc[332] +
    dwdot26dscqss11 * dscqss_dsc[402] + dwdot26dscqss12 * dscqss_dsc[437] +
    dwdot26dscqss14 * dscqss_dsc[507] + dwdot26dscqss13 * dscqss_dsc[472] +
    dwdot26dscqss15 * dscqss_dsc[542] + dwdot26dscqss8 * dscqss_dsc[297] +
    dwdot26dscqss10 * dscqss_dsc[367];
  J[674] =
    dwdot26dsc18 + dwdot26dscqss0 * dscqss_dsc[18] +
    dwdot26dscqss16 * dscqss_dsc[578] + dwdot26dscqss1 * dscqss_dsc[53] +
    dwdot26dscqss17 * dscqss_dsc[613] + dwdot26dscqss2 * dscqss_dsc[88] +
    dwdot26dscqss3 * dscqss_dsc[123] + dwdot26dscqss4 * dscqss_dsc[158] +
    dwdot26dscqss5 * dscqss_dsc[193] + dwdot26dscqss6 * dscqss_dsc[228] +
    dwdot26dscqss7 * dscqss_dsc[263] + dwdot26dscqss9 * dscqss_dsc[333] +
    dwdot26dscqss11 * dscqss_dsc[403] + dwdot26dscqss12 * dscqss_dsc[438] +
    dwdot26dscqss14 * dscqss_dsc[508] + dwdot26dscqss13 * dscqss_dsc[473] +
    dwdot26dscqss15 * dscqss_dsc[543] + dwdot26dscqss8 * dscqss_dsc[298] +
    dwdot26dscqss10 * dscqss_dsc[368];
  J[710] =
    dwdot26dsc19 + dwdot26dscqss0 * dscqss_dsc[19] +
    dwdot26dscqss16 * dscqss_dsc[579] + dwdot26dscqss1 * dscqss_dsc[54] +
    dwdot26dscqss17 * dscqss_dsc[614] + dwdot26dscqss2 * dscqss_dsc[89] +
    dwdot26dscqss3 * dscqss_dsc[124] + dwdot26dscqss4 * dscqss_dsc[159] +
    dwdot26dscqss5 * dscqss_dsc[194] + dwdot26dscqss6 * dscqss_dsc[229] +
    dwdot26dscqss7 * dscqss_dsc[264] + dwdot26dscqss9 * dscqss_dsc[334] +
    dwdot26dscqss11 * dscqss_dsc[404] + dwdot26dscqss12 * dscqss_dsc[439] +
    dwdot26dscqss14 * dscqss_dsc[509] + dwdot26dscqss13 * dscqss_dsc[474] +
    dwdot26dscqss15 * dscqss_dsc[544] + dwdot26dscqss8 * dscqss_dsc[299] +
    dwdot26dscqss10 * dscqss_dsc[369];
  J[746] =
    dwdot26dsc20 + dwdot26dscqss0 * dscqss_dsc[20] +
    dwdot26dscqss16 * dscqss_dsc[580] + dwdot26dscqss1 * dscqss_dsc[55] +
    dwdot26dscqss17 * dscqss_dsc[615] + dwdot26dscqss2 * dscqss_dsc[90] +
    dwdot26dscqss3 * dscqss_dsc[125] + dwdot26dscqss4 * dscqss_dsc[160] +
    dwdot26dscqss5 * dscqss_dsc[195] + dwdot26dscqss6 * dscqss_dsc[230] +
    dwdot26dscqss7 * dscqss_dsc[265] + dwdot26dscqss9 * dscqss_dsc[335] +
    dwdot26dscqss11 * dscqss_dsc[405] + dwdot26dscqss12 * dscqss_dsc[440] +
    dwdot26dscqss14 * dscqss_dsc[510] + dwdot26dscqss13 * dscqss_dsc[475] +
    dwdot26dscqss15 * dscqss_dsc[545] + dwdot26dscqss8 * dscqss_dsc[300] +
    dwdot26dscqss10 * dscqss_dsc[370];
  J[782] =
    dwdot26dsc21 + dwdot26dscqss0 * dscqss_dsc[21] +
    dwdot26dscqss16 * dscqss_dsc[581] + dwdot26dscqss1 * dscqss_dsc[56] +
    dwdot26dscqss17 * dscqss_dsc[616] + dwdot26dscqss2 * dscqss_dsc[91] +
    dwdot26dscqss3 * dscqss_dsc[126] + dwdot26dscqss4 * dscqss_dsc[161] +
    dwdot26dscqss5 * dscqss_dsc[196] + dwdot26dscqss6 * dscqss_dsc[231] +
    dwdot26dscqss7 * dscqss_dsc[266] + dwdot26dscqss9 * dscqss_dsc[336] +
    dwdot26dscqss11 * dscqss_dsc[406] + dwdot26dscqss12 * dscqss_dsc[441] +
    dwdot26dscqss14 * dscqss_dsc[511] + dwdot26dscqss13 * dscqss_dsc[476] +
    dwdot26dscqss15 * dscqss_dsc[546] + dwdot26dscqss8 * dscqss_dsc[301] +
    dwdot26dscqss10 * dscqss_dsc[371];
  J[818] =
    dwdot26dsc22 + dwdot26dscqss0 * dscqss_dsc[22] +
    dwdot26dscqss16 * dscqss_dsc[582] + dwdot26dscqss1 * dscqss_dsc[57] +
    dwdot26dscqss17 * dscqss_dsc[617] + dwdot26dscqss2 * dscqss_dsc[92] +
    dwdot26dscqss3 * dscqss_dsc[127] + dwdot26dscqss4 * dscqss_dsc[162] +
    dwdot26dscqss5 * dscqss_dsc[197] + dwdot26dscqss6 * dscqss_dsc[232] +
    dwdot26dscqss7 * dscqss_dsc[267] + dwdot26dscqss9 * dscqss_dsc[337] +
    dwdot26dscqss11 * dscqss_dsc[407] + dwdot26dscqss12 * dscqss_dsc[442] +
    dwdot26dscqss14 * dscqss_dsc[512] + dwdot26dscqss13 * dscqss_dsc[477] +
    dwdot26dscqss15 * dscqss_dsc[547] + dwdot26dscqss8 * dscqss_dsc[302] +
    dwdot26dscqss10 * dscqss_dsc[372];
  J[854] =
    dwdot26dsc23 + dwdot26dscqss0 * dscqss_dsc[23] +
    dwdot26dscqss16 * dscqss_dsc[583] + dwdot26dscqss1 * dscqss_dsc[58] +
    dwdot26dscqss17 * dscqss_dsc[618] + dwdot26dscqss2 * dscqss_dsc[93] +
    dwdot26dscqss3 * dscqss_dsc[128] + dwdot26dscqss4 * dscqss_dsc[163] +
    dwdot26dscqss5 * dscqss_dsc[198] + dwdot26dscqss6 * dscqss_dsc[233] +
    dwdot26dscqss7 * dscqss_dsc[268] + dwdot26dscqss9 * dscqss_dsc[338] +
    dwdot26dscqss11 * dscqss_dsc[408] + dwdot26dscqss12 * dscqss_dsc[443] +
    dwdot26dscqss14 * dscqss_dsc[513] + dwdot26dscqss13 * dscqss_dsc[478] +
    dwdot26dscqss15 * dscqss_dsc[548] + dwdot26dscqss8 * dscqss_dsc[303] +
    dwdot26dscqss10 * dscqss_dsc[373];
  J[890] =
    dwdot26dsc24 + dwdot26dscqss0 * dscqss_dsc[24] +
    dwdot26dscqss16 * dscqss_dsc[584] + dwdot26dscqss1 * dscqss_dsc[59] +
    dwdot26dscqss17 * dscqss_dsc[619] + dwdot26dscqss2 * dscqss_dsc[94] +
    dwdot26dscqss3 * dscqss_dsc[129] + dwdot26dscqss4 * dscqss_dsc[164] +
    dwdot26dscqss5 * dscqss_dsc[199] + dwdot26dscqss6 * dscqss_dsc[234] +
    dwdot26dscqss7 * dscqss_dsc[269] + dwdot26dscqss9 * dscqss_dsc[339] +
    dwdot26dscqss11 * dscqss_dsc[409] + dwdot26dscqss12 * dscqss_dsc[444] +
    dwdot26dscqss14 * dscqss_dsc[514] + dwdot26dscqss13 * dscqss_dsc[479] +
    dwdot26dscqss15 * dscqss_dsc[549] + dwdot26dscqss8 * dscqss_dsc[304] +
    dwdot26dscqss10 * dscqss_dsc[374];
  J[926] =
    dwdot26dsc25 + dwdot26dscqss0 * dscqss_dsc[25] +
    dwdot26dscqss16 * dscqss_dsc[585] + dwdot26dscqss1 * dscqss_dsc[60] +
    dwdot26dscqss17 * dscqss_dsc[620] + dwdot26dscqss2 * dscqss_dsc[95] +
    dwdot26dscqss3 * dscqss_dsc[130] + dwdot26dscqss4 * dscqss_dsc[165] +
    dwdot26dscqss5 * dscqss_dsc[200] + dwdot26dscqss6 * dscqss_dsc[235] +
    dwdot26dscqss7 * dscqss_dsc[270] + dwdot26dscqss9 * dscqss_dsc[340] +
    dwdot26dscqss11 * dscqss_dsc[410] + dwdot26dscqss12 * dscqss_dsc[445] +
    dwdot26dscqss14 * dscqss_dsc[515] + dwdot26dscqss13 * dscqss_dsc[480] +
    dwdot26dscqss15 * dscqss_dsc[550] + dwdot26dscqss8 * dscqss_dsc[305] +
    dwdot26dscqss10 * dscqss_dsc[375];
  J[962] =
    dwdot26dsc26 + dwdot26dscqss0 * dscqss_dsc[26] +
    dwdot26dscqss16 * dscqss_dsc[586] + dwdot26dscqss1 * dscqss_dsc[61] +
    dwdot26dscqss17 * dscqss_dsc[621] + dwdot26dscqss2 * dscqss_dsc[96] +
    dwdot26dscqss3 * dscqss_dsc[131] + dwdot26dscqss4 * dscqss_dsc[166] +
    dwdot26dscqss5 * dscqss_dsc[201] + dwdot26dscqss6 * dscqss_dsc[236] +
    dwdot26dscqss7 * dscqss_dsc[271] + dwdot26dscqss9 * dscqss_dsc[341] +
    dwdot26dscqss11 * dscqss_dsc[411] + dwdot26dscqss12 * dscqss_dsc[446] +
    dwdot26dscqss14 * dscqss_dsc[516] + dwdot26dscqss13 * dscqss_dsc[481] +
    dwdot26dscqss15 * dscqss_dsc[551] + dwdot26dscqss8 * dscqss_dsc[306] +
    dwdot26dscqss10 * dscqss_dsc[376];
  J[998] =
    dwdot26dsc27 + dwdot26dscqss0 * dscqss_dsc[27] +
    dwdot26dscqss16 * dscqss_dsc[587] + dwdot26dscqss1 * dscqss_dsc[62] +
    dwdot26dscqss17 * dscqss_dsc[622] + dwdot26dscqss2 * dscqss_dsc[97] +
    dwdot26dscqss3 * dscqss_dsc[132] + dwdot26dscqss4 * dscqss_dsc[167] +
    dwdot26dscqss5 * dscqss_dsc[202] + dwdot26dscqss6 * dscqss_dsc[237] +
    dwdot26dscqss7 * dscqss_dsc[272] + dwdot26dscqss9 * dscqss_dsc[342] +
    dwdot26dscqss11 * dscqss_dsc[412] + dwdot26dscqss12 * dscqss_dsc[447] +
    dwdot26dscqss14 * dscqss_dsc[517] + dwdot26dscqss13 * dscqss_dsc[482] +
    dwdot26dscqss15 * dscqss_dsc[552] + dwdot26dscqss8 * dscqss_dsc[307] +
    dwdot26dscqss10 * dscqss_dsc[377];
  J[1034] =
    dwdot26dsc28 + dwdot26dscqss0 * dscqss_dsc[28] +
    dwdot26dscqss16 * dscqss_dsc[588] + dwdot26dscqss1 * dscqss_dsc[63] +
    dwdot26dscqss17 * dscqss_dsc[623] + dwdot26dscqss2 * dscqss_dsc[98] +
    dwdot26dscqss3 * dscqss_dsc[133] + dwdot26dscqss4 * dscqss_dsc[168] +
    dwdot26dscqss5 * dscqss_dsc[203] + dwdot26dscqss6 * dscqss_dsc[238] +
    dwdot26dscqss7 * dscqss_dsc[273] + dwdot26dscqss9 * dscqss_dsc[343] +
    dwdot26dscqss11 * dscqss_dsc[413] + dwdot26dscqss12 * dscqss_dsc[448] +
    dwdot26dscqss14 * dscqss_dsc[518] + dwdot26dscqss13 * dscqss_dsc[483] +
    dwdot26dscqss15 * dscqss_dsc[553] + dwdot26dscqss8 * dscqss_dsc[308] +
    dwdot26dscqss10 * dscqss_dsc[378];
  J[1070] =
    dwdot26dsc29 + dwdot26dscqss0 * dscqss_dsc[29] +
    dwdot26dscqss16 * dscqss_dsc[589] + dwdot26dscqss1 * dscqss_dsc[64] +
    dwdot26dscqss17 * dscqss_dsc[624] + dwdot26dscqss2 * dscqss_dsc[99] +
    dwdot26dscqss3 * dscqss_dsc[134] + dwdot26dscqss4 * dscqss_dsc[169] +
    dwdot26dscqss5 * dscqss_dsc[204] + dwdot26dscqss6 * dscqss_dsc[239] +
    dwdot26dscqss7 * dscqss_dsc[274] + dwdot26dscqss9 * dscqss_dsc[344] +
    dwdot26dscqss11 * dscqss_dsc[414] + dwdot26dscqss12 * dscqss_dsc[449] +
    dwdot26dscqss14 * dscqss_dsc[519] + dwdot26dscqss13 * dscqss_dsc[484] +
    dwdot26dscqss15 * dscqss_dsc[554] + dwdot26dscqss8 * dscqss_dsc[309] +
    dwdot26dscqss10 * dscqss_dsc[379];
  J[1106] =
    dwdot26dsc30 + dwdot26dscqss0 * dscqss_dsc[30] +
    dwdot26dscqss16 * dscqss_dsc[590] + dwdot26dscqss1 * dscqss_dsc[65] +
    dwdot26dscqss17 * dscqss_dsc[625] + dwdot26dscqss2 * dscqss_dsc[100] +
    dwdot26dscqss3 * dscqss_dsc[135] + dwdot26dscqss4 * dscqss_dsc[170] +
    dwdot26dscqss5 * dscqss_dsc[205] + dwdot26dscqss6 * dscqss_dsc[240] +
    dwdot26dscqss7 * dscqss_dsc[275] + dwdot26dscqss9 * dscqss_dsc[345] +
    dwdot26dscqss11 * dscqss_dsc[415] + dwdot26dscqss12 * dscqss_dsc[450] +
    dwdot26dscqss14 * dscqss_dsc[520] + dwdot26dscqss13 * dscqss_dsc[485] +
    dwdot26dscqss15 * dscqss_dsc[555] + dwdot26dscqss8 * dscqss_dsc[310] +
    dwdot26dscqss10 * dscqss_dsc[380];
  J[1142] =
    dwdot26dsc31 + dwdot26dscqss0 * dscqss_dsc[31] +
    dwdot26dscqss16 * dscqss_dsc[591] + dwdot26dscqss1 * dscqss_dsc[66] +
    dwdot26dscqss17 * dscqss_dsc[626] + dwdot26dscqss2 * dscqss_dsc[101] +
    dwdot26dscqss3 * dscqss_dsc[136] + dwdot26dscqss4 * dscqss_dsc[171] +
    dwdot26dscqss5 * dscqss_dsc[206] + dwdot26dscqss6 * dscqss_dsc[241] +
    dwdot26dscqss7 * dscqss_dsc[276] + dwdot26dscqss9 * dscqss_dsc[346] +
    dwdot26dscqss11 * dscqss_dsc[416] + dwdot26dscqss12 * dscqss_dsc[451] +
    dwdot26dscqss14 * dscqss_dsc[521] + dwdot26dscqss13 * dscqss_dsc[486] +
    dwdot26dscqss15 * dscqss_dsc[556] + dwdot26dscqss8 * dscqss_dsc[311] +
    dwdot26dscqss10 * dscqss_dsc[381];
  J[1178] =
    dwdot26dsc32 + dwdot26dscqss0 * dscqss_dsc[32] +
    dwdot26dscqss16 * dscqss_dsc[592] + dwdot26dscqss1 * dscqss_dsc[67] +
    dwdot26dscqss17 * dscqss_dsc[627] + dwdot26dscqss2 * dscqss_dsc[102] +
    dwdot26dscqss3 * dscqss_dsc[137] + dwdot26dscqss4 * dscqss_dsc[172] +
    dwdot26dscqss5 * dscqss_dsc[207] + dwdot26dscqss6 * dscqss_dsc[242] +
    dwdot26dscqss7 * dscqss_dsc[277] + dwdot26dscqss9 * dscqss_dsc[347] +
    dwdot26dscqss11 * dscqss_dsc[417] + dwdot26dscqss12 * dscqss_dsc[452] +
    dwdot26dscqss14 * dscqss_dsc[522] + dwdot26dscqss13 * dscqss_dsc[487] +
    dwdot26dscqss15 * dscqss_dsc[557] + dwdot26dscqss8 * dscqss_dsc[312] +
    dwdot26dscqss10 * dscqss_dsc[382];
  J[1214] =
    dwdot26dsc33 + dwdot26dscqss0 * dscqss_dsc[33] +
    dwdot26dscqss16 * dscqss_dsc[593] + dwdot26dscqss1 * dscqss_dsc[68] +
    dwdot26dscqss17 * dscqss_dsc[628] + dwdot26dscqss2 * dscqss_dsc[103] +
    dwdot26dscqss3 * dscqss_dsc[138] + dwdot26dscqss4 * dscqss_dsc[173] +
    dwdot26dscqss5 * dscqss_dsc[208] + dwdot26dscqss6 * dscqss_dsc[243] +
    dwdot26dscqss7 * dscqss_dsc[278] + dwdot26dscqss9 * dscqss_dsc[348] +
    dwdot26dscqss11 * dscqss_dsc[418] + dwdot26dscqss12 * dscqss_dsc[453] +
    dwdot26dscqss14 * dscqss_dsc[523] + dwdot26dscqss13 * dscqss_dsc[488] +
    dwdot26dscqss15 * dscqss_dsc[558] + dwdot26dscqss8 * dscqss_dsc[313] +
    dwdot26dscqss10 * dscqss_dsc[383];
  J[1250] =
    dwdot26dsc34 + dwdot26dscqss0 * dscqss_dsc[34] +
    dwdot26dscqss16 * dscqss_dsc[594] + dwdot26dscqss1 * dscqss_dsc[69] +
    dwdot26dscqss17 * dscqss_dsc[629] + dwdot26dscqss2 * dscqss_dsc[104] +
    dwdot26dscqss3 * dscqss_dsc[139] + dwdot26dscqss4 * dscqss_dsc[174] +
    dwdot26dscqss5 * dscqss_dsc[209] + dwdot26dscqss6 * dscqss_dsc[244] +
    dwdot26dscqss7 * dscqss_dsc[279] + dwdot26dscqss9 * dscqss_dsc[349] +
    dwdot26dscqss11 * dscqss_dsc[419] + dwdot26dscqss12 * dscqss_dsc[454] +
    dwdot26dscqss14 * dscqss_dsc[524] + dwdot26dscqss13 * dscqss_dsc[489] +
    dwdot26dscqss15 * dscqss_dsc[559] + dwdot26dscqss8 * dscqss_dsc[314] +
    dwdot26dscqss10 * dscqss_dsc[384];
  J[27] =
    dwdot27dsc0 + dwdot27dscqss0 * dscqss_dsc[0] +
    dwdot27dscqss16 * dscqss_dsc[560] + dwdot27dscqss1 * dscqss_dsc[35] +
    dwdot27dscqss17 * dscqss_dsc[595] + dwdot27dscqss2 * dscqss_dsc[70] +
    dwdot27dscqss3 * dscqss_dsc[105] + dwdot27dscqss4 * dscqss_dsc[140] +
    dwdot27dscqss5 * dscqss_dsc[175] + dwdot27dscqss6 * dscqss_dsc[210] +
    dwdot27dscqss7 * dscqss_dsc[245] + dwdot27dscqss9 * dscqss_dsc[315] +
    dwdot27dscqss11 * dscqss_dsc[385] + dwdot27dscqss12 * dscqss_dsc[420] +
    dwdot27dscqss14 * dscqss_dsc[490] + dwdot27dscqss13 * dscqss_dsc[455] +
    dwdot27dscqss15 * dscqss_dsc[525] + dwdot27dscqss8 * dscqss_dsc[280] +
    dwdot27dscqss10 * dscqss_dsc[350];
  J[63] =
    dwdot27dsc1 + dwdot27dscqss0 * dscqss_dsc[1] +
    dwdot27dscqss16 * dscqss_dsc[561] + dwdot27dscqss1 * dscqss_dsc[36] +
    dwdot27dscqss17 * dscqss_dsc[596] + dwdot27dscqss2 * dscqss_dsc[71] +
    dwdot27dscqss3 * dscqss_dsc[106] + dwdot27dscqss4 * dscqss_dsc[141] +
    dwdot27dscqss5 * dscqss_dsc[176] + dwdot27dscqss6 * dscqss_dsc[211] +
    dwdot27dscqss7 * dscqss_dsc[246] + dwdot27dscqss9 * dscqss_dsc[316] +
    dwdot27dscqss11 * dscqss_dsc[386] + dwdot27dscqss12 * dscqss_dsc[421] +
    dwdot27dscqss14 * dscqss_dsc[491] + dwdot27dscqss13 * dscqss_dsc[456] +
    dwdot27dscqss15 * dscqss_dsc[526] + dwdot27dscqss8 * dscqss_dsc[281] +
    dwdot27dscqss10 * dscqss_dsc[351];
  J[99] =
    dwdot27dsc2 + dwdot27dscqss0 * dscqss_dsc[2] +
    dwdot27dscqss16 * dscqss_dsc[562] + dwdot27dscqss1 * dscqss_dsc[37] +
    dwdot27dscqss17 * dscqss_dsc[597] + dwdot27dscqss2 * dscqss_dsc[72] +
    dwdot27dscqss3 * dscqss_dsc[107] + dwdot27dscqss4 * dscqss_dsc[142] +
    dwdot27dscqss5 * dscqss_dsc[177] + dwdot27dscqss6 * dscqss_dsc[212] +
    dwdot27dscqss7 * dscqss_dsc[247] + dwdot27dscqss9 * dscqss_dsc[317] +
    dwdot27dscqss11 * dscqss_dsc[387] + dwdot27dscqss12 * dscqss_dsc[422] +
    dwdot27dscqss14 * dscqss_dsc[492] + dwdot27dscqss13 * dscqss_dsc[457] +
    dwdot27dscqss15 * dscqss_dsc[527] + dwdot27dscqss8 * dscqss_dsc[282] +
    dwdot27dscqss10 * dscqss_dsc[352];
  J[135] =
    dwdot27dsc3 + dwdot27dscqss0 * dscqss_dsc[3] +
    dwdot27dscqss16 * dscqss_dsc[563] + dwdot27dscqss1 * dscqss_dsc[38] +
    dwdot27dscqss17 * dscqss_dsc[598] + dwdot27dscqss2 * dscqss_dsc[73] +
    dwdot27dscqss3 * dscqss_dsc[108] + dwdot27dscqss4 * dscqss_dsc[143] +
    dwdot27dscqss5 * dscqss_dsc[178] + dwdot27dscqss6 * dscqss_dsc[213] +
    dwdot27dscqss7 * dscqss_dsc[248] + dwdot27dscqss9 * dscqss_dsc[318] +
    dwdot27dscqss11 * dscqss_dsc[388] + dwdot27dscqss12 * dscqss_dsc[423] +
    dwdot27dscqss14 * dscqss_dsc[493] + dwdot27dscqss13 * dscqss_dsc[458] +
    dwdot27dscqss15 * dscqss_dsc[528] + dwdot27dscqss8 * dscqss_dsc[283] +
    dwdot27dscqss10 * dscqss_dsc[353];
  J[171] =
    dwdot27dsc4 + dwdot27dscqss0 * dscqss_dsc[4] +
    dwdot27dscqss16 * dscqss_dsc[564] + dwdot27dscqss1 * dscqss_dsc[39] +
    dwdot27dscqss17 * dscqss_dsc[599] + dwdot27dscqss2 * dscqss_dsc[74] +
    dwdot27dscqss3 * dscqss_dsc[109] + dwdot27dscqss4 * dscqss_dsc[144] +
    dwdot27dscqss5 * dscqss_dsc[179] + dwdot27dscqss6 * dscqss_dsc[214] +
    dwdot27dscqss7 * dscqss_dsc[249] + dwdot27dscqss9 * dscqss_dsc[319] +
    dwdot27dscqss11 * dscqss_dsc[389] + dwdot27dscqss12 * dscqss_dsc[424] +
    dwdot27dscqss14 * dscqss_dsc[494] + dwdot27dscqss13 * dscqss_dsc[459] +
    dwdot27dscqss15 * dscqss_dsc[529] + dwdot27dscqss8 * dscqss_dsc[284] +
    dwdot27dscqss10 * dscqss_dsc[354];
  J[207] =
    dwdot27dsc5 + dwdot27dscqss0 * dscqss_dsc[5] +
    dwdot27dscqss16 * dscqss_dsc[565] + dwdot27dscqss1 * dscqss_dsc[40] +
    dwdot27dscqss17 * dscqss_dsc[600] + dwdot27dscqss2 * dscqss_dsc[75] +
    dwdot27dscqss3 * dscqss_dsc[110] + dwdot27dscqss4 * dscqss_dsc[145] +
    dwdot27dscqss5 * dscqss_dsc[180] + dwdot27dscqss6 * dscqss_dsc[215] +
    dwdot27dscqss7 * dscqss_dsc[250] + dwdot27dscqss9 * dscqss_dsc[320] +
    dwdot27dscqss11 * dscqss_dsc[390] + dwdot27dscqss12 * dscqss_dsc[425] +
    dwdot27dscqss14 * dscqss_dsc[495] + dwdot27dscqss13 * dscqss_dsc[460] +
    dwdot27dscqss15 * dscqss_dsc[530] + dwdot27dscqss8 * dscqss_dsc[285] +
    dwdot27dscqss10 * dscqss_dsc[355];
  J[243] =
    dwdot27dsc6 + dwdot27dscqss0 * dscqss_dsc[6] +
    dwdot27dscqss16 * dscqss_dsc[566] + dwdot27dscqss1 * dscqss_dsc[41] +
    dwdot27dscqss17 * dscqss_dsc[601] + dwdot27dscqss2 * dscqss_dsc[76] +
    dwdot27dscqss3 * dscqss_dsc[111] + dwdot27dscqss4 * dscqss_dsc[146] +
    dwdot27dscqss5 * dscqss_dsc[181] + dwdot27dscqss6 * dscqss_dsc[216] +
    dwdot27dscqss7 * dscqss_dsc[251] + dwdot27dscqss9 * dscqss_dsc[321] +
    dwdot27dscqss11 * dscqss_dsc[391] + dwdot27dscqss12 * dscqss_dsc[426] +
    dwdot27dscqss14 * dscqss_dsc[496] + dwdot27dscqss13 * dscqss_dsc[461] +
    dwdot27dscqss15 * dscqss_dsc[531] + dwdot27dscqss8 * dscqss_dsc[286] +
    dwdot27dscqss10 * dscqss_dsc[356];
  J[279] =
    dwdot27dsc7 + dwdot27dscqss0 * dscqss_dsc[7] +
    dwdot27dscqss16 * dscqss_dsc[567] + dwdot27dscqss1 * dscqss_dsc[42] +
    dwdot27dscqss17 * dscqss_dsc[602] + dwdot27dscqss2 * dscqss_dsc[77] +
    dwdot27dscqss3 * dscqss_dsc[112] + dwdot27dscqss4 * dscqss_dsc[147] +
    dwdot27dscqss5 * dscqss_dsc[182] + dwdot27dscqss6 * dscqss_dsc[217] +
    dwdot27dscqss7 * dscqss_dsc[252] + dwdot27dscqss9 * dscqss_dsc[322] +
    dwdot27dscqss11 * dscqss_dsc[392] + dwdot27dscqss12 * dscqss_dsc[427] +
    dwdot27dscqss14 * dscqss_dsc[497] + dwdot27dscqss13 * dscqss_dsc[462] +
    dwdot27dscqss15 * dscqss_dsc[532] + dwdot27dscqss8 * dscqss_dsc[287] +
    dwdot27dscqss10 * dscqss_dsc[357];
  J[315] =
    dwdot27dsc8 + dwdot27dscqss0 * dscqss_dsc[8] +
    dwdot27dscqss16 * dscqss_dsc[568] + dwdot27dscqss1 * dscqss_dsc[43] +
    dwdot27dscqss17 * dscqss_dsc[603] + dwdot27dscqss2 * dscqss_dsc[78] +
    dwdot27dscqss3 * dscqss_dsc[113] + dwdot27dscqss4 * dscqss_dsc[148] +
    dwdot27dscqss5 * dscqss_dsc[183] + dwdot27dscqss6 * dscqss_dsc[218] +
    dwdot27dscqss7 * dscqss_dsc[253] + dwdot27dscqss9 * dscqss_dsc[323] +
    dwdot27dscqss11 * dscqss_dsc[393] + dwdot27dscqss12 * dscqss_dsc[428] +
    dwdot27dscqss14 * dscqss_dsc[498] + dwdot27dscqss13 * dscqss_dsc[463] +
    dwdot27dscqss15 * dscqss_dsc[533] + dwdot27dscqss8 * dscqss_dsc[288] +
    dwdot27dscqss10 * dscqss_dsc[358];
  J[351] =
    dwdot27dsc9 + dwdot27dscqss0 * dscqss_dsc[9] +
    dwdot27dscqss16 * dscqss_dsc[569] + dwdot27dscqss1 * dscqss_dsc[44] +
    dwdot27dscqss17 * dscqss_dsc[604] + dwdot27dscqss2 * dscqss_dsc[79] +
    dwdot27dscqss3 * dscqss_dsc[114] + dwdot27dscqss4 * dscqss_dsc[149] +
    dwdot27dscqss5 * dscqss_dsc[184] + dwdot27dscqss6 * dscqss_dsc[219] +
    dwdot27dscqss7 * dscqss_dsc[254] + dwdot27dscqss9 * dscqss_dsc[324] +
    dwdot27dscqss11 * dscqss_dsc[394] + dwdot27dscqss12 * dscqss_dsc[429] +
    dwdot27dscqss14 * dscqss_dsc[499] + dwdot27dscqss13 * dscqss_dsc[464] +
    dwdot27dscqss15 * dscqss_dsc[534] + dwdot27dscqss8 * dscqss_dsc[289] +
    dwdot27dscqss10 * dscqss_dsc[359];
  J[387] =
    dwdot27dsc10 + dwdot27dscqss0 * dscqss_dsc[10] +
    dwdot27dscqss16 * dscqss_dsc[570] + dwdot27dscqss1 * dscqss_dsc[45] +
    dwdot27dscqss17 * dscqss_dsc[605] + dwdot27dscqss2 * dscqss_dsc[80] +
    dwdot27dscqss3 * dscqss_dsc[115] + dwdot27dscqss4 * dscqss_dsc[150] +
    dwdot27dscqss5 * dscqss_dsc[185] + dwdot27dscqss6 * dscqss_dsc[220] +
    dwdot27dscqss7 * dscqss_dsc[255] + dwdot27dscqss9 * dscqss_dsc[325] +
    dwdot27dscqss11 * dscqss_dsc[395] + dwdot27dscqss12 * dscqss_dsc[430] +
    dwdot27dscqss14 * dscqss_dsc[500] + dwdot27dscqss13 * dscqss_dsc[465] +
    dwdot27dscqss15 * dscqss_dsc[535] + dwdot27dscqss8 * dscqss_dsc[290] +
    dwdot27dscqss10 * dscqss_dsc[360];
  J[423] =
    dwdot27dsc11 + dwdot27dscqss0 * dscqss_dsc[11] +
    dwdot27dscqss16 * dscqss_dsc[571] + dwdot27dscqss1 * dscqss_dsc[46] +
    dwdot27dscqss17 * dscqss_dsc[606] + dwdot27dscqss2 * dscqss_dsc[81] +
    dwdot27dscqss3 * dscqss_dsc[116] + dwdot27dscqss4 * dscqss_dsc[151] +
    dwdot27dscqss5 * dscqss_dsc[186] + dwdot27dscqss6 * dscqss_dsc[221] +
    dwdot27dscqss7 * dscqss_dsc[256] + dwdot27dscqss9 * dscqss_dsc[326] +
    dwdot27dscqss11 * dscqss_dsc[396] + dwdot27dscqss12 * dscqss_dsc[431] +
    dwdot27dscqss14 * dscqss_dsc[501] + dwdot27dscqss13 * dscqss_dsc[466] +
    dwdot27dscqss15 * dscqss_dsc[536] + dwdot27dscqss8 * dscqss_dsc[291] +
    dwdot27dscqss10 * dscqss_dsc[361];
  J[459] =
    dwdot27dsc12 + dwdot27dscqss0 * dscqss_dsc[12] +
    dwdot27dscqss16 * dscqss_dsc[572] + dwdot27dscqss1 * dscqss_dsc[47] +
    dwdot27dscqss17 * dscqss_dsc[607] + dwdot27dscqss2 * dscqss_dsc[82] +
    dwdot27dscqss3 * dscqss_dsc[117] + dwdot27dscqss4 * dscqss_dsc[152] +
    dwdot27dscqss5 * dscqss_dsc[187] + dwdot27dscqss6 * dscqss_dsc[222] +
    dwdot27dscqss7 * dscqss_dsc[257] + dwdot27dscqss9 * dscqss_dsc[327] +
    dwdot27dscqss11 * dscqss_dsc[397] + dwdot27dscqss12 * dscqss_dsc[432] +
    dwdot27dscqss14 * dscqss_dsc[502] + dwdot27dscqss13 * dscqss_dsc[467] +
    dwdot27dscqss15 * dscqss_dsc[537] + dwdot27dscqss8 * dscqss_dsc[292] +
    dwdot27dscqss10 * dscqss_dsc[362];
  J[495] =
    dwdot27dsc13 + dwdot27dscqss0 * dscqss_dsc[13] +
    dwdot27dscqss16 * dscqss_dsc[573] + dwdot27dscqss1 * dscqss_dsc[48] +
    dwdot27dscqss17 * dscqss_dsc[608] + dwdot27dscqss2 * dscqss_dsc[83] +
    dwdot27dscqss3 * dscqss_dsc[118] + dwdot27dscqss4 * dscqss_dsc[153] +
    dwdot27dscqss5 * dscqss_dsc[188] + dwdot27dscqss6 * dscqss_dsc[223] +
    dwdot27dscqss7 * dscqss_dsc[258] + dwdot27dscqss9 * dscqss_dsc[328] +
    dwdot27dscqss11 * dscqss_dsc[398] + dwdot27dscqss12 * dscqss_dsc[433] +
    dwdot27dscqss14 * dscqss_dsc[503] + dwdot27dscqss13 * dscqss_dsc[468] +
    dwdot27dscqss15 * dscqss_dsc[538] + dwdot27dscqss8 * dscqss_dsc[293] +
    dwdot27dscqss10 * dscqss_dsc[363];
  J[531] =
    dwdot27dsc14 + dwdot27dscqss0 * dscqss_dsc[14] +
    dwdot27dscqss16 * dscqss_dsc[574] + dwdot27dscqss1 * dscqss_dsc[49] +
    dwdot27dscqss17 * dscqss_dsc[609] + dwdot27dscqss2 * dscqss_dsc[84] +
    dwdot27dscqss3 * dscqss_dsc[119] + dwdot27dscqss4 * dscqss_dsc[154] +
    dwdot27dscqss5 * dscqss_dsc[189] + dwdot27dscqss6 * dscqss_dsc[224] +
    dwdot27dscqss7 * dscqss_dsc[259] + dwdot27dscqss9 * dscqss_dsc[329] +
    dwdot27dscqss11 * dscqss_dsc[399] + dwdot27dscqss12 * dscqss_dsc[434] +
    dwdot27dscqss14 * dscqss_dsc[504] + dwdot27dscqss13 * dscqss_dsc[469] +
    dwdot27dscqss15 * dscqss_dsc[539] + dwdot27dscqss8 * dscqss_dsc[294] +
    dwdot27dscqss10 * dscqss_dsc[364];
  J[567] =
    dwdot27dsc15 + dwdot27dscqss0 * dscqss_dsc[15] +
    dwdot27dscqss16 * dscqss_dsc[575] + dwdot27dscqss1 * dscqss_dsc[50] +
    dwdot27dscqss17 * dscqss_dsc[610] + dwdot27dscqss2 * dscqss_dsc[85] +
    dwdot27dscqss3 * dscqss_dsc[120] + dwdot27dscqss4 * dscqss_dsc[155] +
    dwdot27dscqss5 * dscqss_dsc[190] + dwdot27dscqss6 * dscqss_dsc[225] +
    dwdot27dscqss7 * dscqss_dsc[260] + dwdot27dscqss9 * dscqss_dsc[330] +
    dwdot27dscqss11 * dscqss_dsc[400] + dwdot27dscqss12 * dscqss_dsc[435] +
    dwdot27dscqss14 * dscqss_dsc[505] + dwdot27dscqss13 * dscqss_dsc[470] +
    dwdot27dscqss15 * dscqss_dsc[540] + dwdot27dscqss8 * dscqss_dsc[295] +
    dwdot27dscqss10 * dscqss_dsc[365];
  J[603] =
    dwdot27dsc16 + dwdot27dscqss0 * dscqss_dsc[16] +
    dwdot27dscqss16 * dscqss_dsc[576] + dwdot27dscqss1 * dscqss_dsc[51] +
    dwdot27dscqss17 * dscqss_dsc[611] + dwdot27dscqss2 * dscqss_dsc[86] +
    dwdot27dscqss3 * dscqss_dsc[121] + dwdot27dscqss4 * dscqss_dsc[156] +
    dwdot27dscqss5 * dscqss_dsc[191] + dwdot27dscqss6 * dscqss_dsc[226] +
    dwdot27dscqss7 * dscqss_dsc[261] + dwdot27dscqss9 * dscqss_dsc[331] +
    dwdot27dscqss11 * dscqss_dsc[401] + dwdot27dscqss12 * dscqss_dsc[436] +
    dwdot27dscqss14 * dscqss_dsc[506] + dwdot27dscqss13 * dscqss_dsc[471] +
    dwdot27dscqss15 * dscqss_dsc[541] + dwdot27dscqss8 * dscqss_dsc[296] +
    dwdot27dscqss10 * dscqss_dsc[366];
  J[639] =
    dwdot27dsc17 + dwdot27dscqss0 * dscqss_dsc[17] +
    dwdot27dscqss16 * dscqss_dsc[577] + dwdot27dscqss1 * dscqss_dsc[52] +
    dwdot27dscqss17 * dscqss_dsc[612] + dwdot27dscqss2 * dscqss_dsc[87] +
    dwdot27dscqss3 * dscqss_dsc[122] + dwdot27dscqss4 * dscqss_dsc[157] +
    dwdot27dscqss5 * dscqss_dsc[192] + dwdot27dscqss6 * dscqss_dsc[227] +
    dwdot27dscqss7 * dscqss_dsc[262] + dwdot27dscqss9 * dscqss_dsc[332] +
    dwdot27dscqss11 * dscqss_dsc[402] + dwdot27dscqss12 * dscqss_dsc[437] +
    dwdot27dscqss14 * dscqss_dsc[507] + dwdot27dscqss13 * dscqss_dsc[472] +
    dwdot27dscqss15 * dscqss_dsc[542] + dwdot27dscqss8 * dscqss_dsc[297] +
    dwdot27dscqss10 * dscqss_dsc[367];
  J[675] =
    dwdot27dsc18 + dwdot27dscqss0 * dscqss_dsc[18] +
    dwdot27dscqss16 * dscqss_dsc[578] + dwdot27dscqss1 * dscqss_dsc[53] +
    dwdot27dscqss17 * dscqss_dsc[613] + dwdot27dscqss2 * dscqss_dsc[88] +
    dwdot27dscqss3 * dscqss_dsc[123] + dwdot27dscqss4 * dscqss_dsc[158] +
    dwdot27dscqss5 * dscqss_dsc[193] + dwdot27dscqss6 * dscqss_dsc[228] +
    dwdot27dscqss7 * dscqss_dsc[263] + dwdot27dscqss9 * dscqss_dsc[333] +
    dwdot27dscqss11 * dscqss_dsc[403] + dwdot27dscqss12 * dscqss_dsc[438] +
    dwdot27dscqss14 * dscqss_dsc[508] + dwdot27dscqss13 * dscqss_dsc[473] +
    dwdot27dscqss15 * dscqss_dsc[543] + dwdot27dscqss8 * dscqss_dsc[298] +
    dwdot27dscqss10 * dscqss_dsc[368];
  J[711] =
    dwdot27dsc19 + dwdot27dscqss0 * dscqss_dsc[19] +
    dwdot27dscqss16 * dscqss_dsc[579] + dwdot27dscqss1 * dscqss_dsc[54] +
    dwdot27dscqss17 * dscqss_dsc[614] + dwdot27dscqss2 * dscqss_dsc[89] +
    dwdot27dscqss3 * dscqss_dsc[124] + dwdot27dscqss4 * dscqss_dsc[159] +
    dwdot27dscqss5 * dscqss_dsc[194] + dwdot27dscqss6 * dscqss_dsc[229] +
    dwdot27dscqss7 * dscqss_dsc[264] + dwdot27dscqss9 * dscqss_dsc[334] +
    dwdot27dscqss11 * dscqss_dsc[404] + dwdot27dscqss12 * dscqss_dsc[439] +
    dwdot27dscqss14 * dscqss_dsc[509] + dwdot27dscqss13 * dscqss_dsc[474] +
    dwdot27dscqss15 * dscqss_dsc[544] + dwdot27dscqss8 * dscqss_dsc[299] +
    dwdot27dscqss10 * dscqss_dsc[369];
  J[747] =
    dwdot27dsc20 + dwdot27dscqss0 * dscqss_dsc[20] +
    dwdot27dscqss16 * dscqss_dsc[580] + dwdot27dscqss1 * dscqss_dsc[55] +
    dwdot27dscqss17 * dscqss_dsc[615] + dwdot27dscqss2 * dscqss_dsc[90] +
    dwdot27dscqss3 * dscqss_dsc[125] + dwdot27dscqss4 * dscqss_dsc[160] +
    dwdot27dscqss5 * dscqss_dsc[195] + dwdot27dscqss6 * dscqss_dsc[230] +
    dwdot27dscqss7 * dscqss_dsc[265] + dwdot27dscqss9 * dscqss_dsc[335] +
    dwdot27dscqss11 * dscqss_dsc[405] + dwdot27dscqss12 * dscqss_dsc[440] +
    dwdot27dscqss14 * dscqss_dsc[510] + dwdot27dscqss13 * dscqss_dsc[475] +
    dwdot27dscqss15 * dscqss_dsc[545] + dwdot27dscqss8 * dscqss_dsc[300] +
    dwdot27dscqss10 * dscqss_dsc[370];
  J[783] =
    dwdot27dsc21 + dwdot27dscqss0 * dscqss_dsc[21] +
    dwdot27dscqss16 * dscqss_dsc[581] + dwdot27dscqss1 * dscqss_dsc[56] +
    dwdot27dscqss17 * dscqss_dsc[616] + dwdot27dscqss2 * dscqss_dsc[91] +
    dwdot27dscqss3 * dscqss_dsc[126] + dwdot27dscqss4 * dscqss_dsc[161] +
    dwdot27dscqss5 * dscqss_dsc[196] + dwdot27dscqss6 * dscqss_dsc[231] +
    dwdot27dscqss7 * dscqss_dsc[266] + dwdot27dscqss9 * dscqss_dsc[336] +
    dwdot27dscqss11 * dscqss_dsc[406] + dwdot27dscqss12 * dscqss_dsc[441] +
    dwdot27dscqss14 * dscqss_dsc[511] + dwdot27dscqss13 * dscqss_dsc[476] +
    dwdot27dscqss15 * dscqss_dsc[546] + dwdot27dscqss8 * dscqss_dsc[301] +
    dwdot27dscqss10 * dscqss_dsc[371];
  J[819] =
    dwdot27dsc22 + dwdot27dscqss0 * dscqss_dsc[22] +
    dwdot27dscqss16 * dscqss_dsc[582] + dwdot27dscqss1 * dscqss_dsc[57] +
    dwdot27dscqss17 * dscqss_dsc[617] + dwdot27dscqss2 * dscqss_dsc[92] +
    dwdot27dscqss3 * dscqss_dsc[127] + dwdot27dscqss4 * dscqss_dsc[162] +
    dwdot27dscqss5 * dscqss_dsc[197] + dwdot27dscqss6 * dscqss_dsc[232] +
    dwdot27dscqss7 * dscqss_dsc[267] + dwdot27dscqss9 * dscqss_dsc[337] +
    dwdot27dscqss11 * dscqss_dsc[407] + dwdot27dscqss12 * dscqss_dsc[442] +
    dwdot27dscqss14 * dscqss_dsc[512] + dwdot27dscqss13 * dscqss_dsc[477] +
    dwdot27dscqss15 * dscqss_dsc[547] + dwdot27dscqss8 * dscqss_dsc[302] +
    dwdot27dscqss10 * dscqss_dsc[372];
  J[855] =
    dwdot27dsc23 + dwdot27dscqss0 * dscqss_dsc[23] +
    dwdot27dscqss16 * dscqss_dsc[583] + dwdot27dscqss1 * dscqss_dsc[58] +
    dwdot27dscqss17 * dscqss_dsc[618] + dwdot27dscqss2 * dscqss_dsc[93] +
    dwdot27dscqss3 * dscqss_dsc[128] + dwdot27dscqss4 * dscqss_dsc[163] +
    dwdot27dscqss5 * dscqss_dsc[198] + dwdot27dscqss6 * dscqss_dsc[233] +
    dwdot27dscqss7 * dscqss_dsc[268] + dwdot27dscqss9 * dscqss_dsc[338] +
    dwdot27dscqss11 * dscqss_dsc[408] + dwdot27dscqss12 * dscqss_dsc[443] +
    dwdot27dscqss14 * dscqss_dsc[513] + dwdot27dscqss13 * dscqss_dsc[478] +
    dwdot27dscqss15 * dscqss_dsc[548] + dwdot27dscqss8 * dscqss_dsc[303] +
    dwdot27dscqss10 * dscqss_dsc[373];
  J[891] =
    dwdot27dsc24 + dwdot27dscqss0 * dscqss_dsc[24] +
    dwdot27dscqss16 * dscqss_dsc[584] + dwdot27dscqss1 * dscqss_dsc[59] +
    dwdot27dscqss17 * dscqss_dsc[619] + dwdot27dscqss2 * dscqss_dsc[94] +
    dwdot27dscqss3 * dscqss_dsc[129] + dwdot27dscqss4 * dscqss_dsc[164] +
    dwdot27dscqss5 * dscqss_dsc[199] + dwdot27dscqss6 * dscqss_dsc[234] +
    dwdot27dscqss7 * dscqss_dsc[269] + dwdot27dscqss9 * dscqss_dsc[339] +
    dwdot27dscqss11 * dscqss_dsc[409] + dwdot27dscqss12 * dscqss_dsc[444] +
    dwdot27dscqss14 * dscqss_dsc[514] + dwdot27dscqss13 * dscqss_dsc[479] +
    dwdot27dscqss15 * dscqss_dsc[549] + dwdot27dscqss8 * dscqss_dsc[304] +
    dwdot27dscqss10 * dscqss_dsc[374];
  J[927] =
    dwdot27dsc25 + dwdot27dscqss0 * dscqss_dsc[25] +
    dwdot27dscqss16 * dscqss_dsc[585] + dwdot27dscqss1 * dscqss_dsc[60] +
    dwdot27dscqss17 * dscqss_dsc[620] + dwdot27dscqss2 * dscqss_dsc[95] +
    dwdot27dscqss3 * dscqss_dsc[130] + dwdot27dscqss4 * dscqss_dsc[165] +
    dwdot27dscqss5 * dscqss_dsc[200] + dwdot27dscqss6 * dscqss_dsc[235] +
    dwdot27dscqss7 * dscqss_dsc[270] + dwdot27dscqss9 * dscqss_dsc[340] +
    dwdot27dscqss11 * dscqss_dsc[410] + dwdot27dscqss12 * dscqss_dsc[445] +
    dwdot27dscqss14 * dscqss_dsc[515] + dwdot27dscqss13 * dscqss_dsc[480] +
    dwdot27dscqss15 * dscqss_dsc[550] + dwdot27dscqss8 * dscqss_dsc[305] +
    dwdot27dscqss10 * dscqss_dsc[375];
  J[963] =
    dwdot27dsc26 + dwdot27dscqss0 * dscqss_dsc[26] +
    dwdot27dscqss16 * dscqss_dsc[586] + dwdot27dscqss1 * dscqss_dsc[61] +
    dwdot27dscqss17 * dscqss_dsc[621] + dwdot27dscqss2 * dscqss_dsc[96] +
    dwdot27dscqss3 * dscqss_dsc[131] + dwdot27dscqss4 * dscqss_dsc[166] +
    dwdot27dscqss5 * dscqss_dsc[201] + dwdot27dscqss6 * dscqss_dsc[236] +
    dwdot27dscqss7 * dscqss_dsc[271] + dwdot27dscqss9 * dscqss_dsc[341] +
    dwdot27dscqss11 * dscqss_dsc[411] + dwdot27dscqss12 * dscqss_dsc[446] +
    dwdot27dscqss14 * dscqss_dsc[516] + dwdot27dscqss13 * dscqss_dsc[481] +
    dwdot27dscqss15 * dscqss_dsc[551] + dwdot27dscqss8 * dscqss_dsc[306] +
    dwdot27dscqss10 * dscqss_dsc[376];
  J[999] =
    dwdot27dsc27 + dwdot27dscqss0 * dscqss_dsc[27] +
    dwdot27dscqss16 * dscqss_dsc[587] + dwdot27dscqss1 * dscqss_dsc[62] +
    dwdot27dscqss17 * dscqss_dsc[622] + dwdot27dscqss2 * dscqss_dsc[97] +
    dwdot27dscqss3 * dscqss_dsc[132] + dwdot27dscqss4 * dscqss_dsc[167] +
    dwdot27dscqss5 * dscqss_dsc[202] + dwdot27dscqss6 * dscqss_dsc[237] +
    dwdot27dscqss7 * dscqss_dsc[272] + dwdot27dscqss9 * dscqss_dsc[342] +
    dwdot27dscqss11 * dscqss_dsc[412] + dwdot27dscqss12 * dscqss_dsc[447] +
    dwdot27dscqss14 * dscqss_dsc[517] + dwdot27dscqss13 * dscqss_dsc[482] +
    dwdot27dscqss15 * dscqss_dsc[552] + dwdot27dscqss8 * dscqss_dsc[307] +
    dwdot27dscqss10 * dscqss_dsc[377];
  J[1035] =
    dwdot27dsc28 + dwdot27dscqss0 * dscqss_dsc[28] +
    dwdot27dscqss16 * dscqss_dsc[588] + dwdot27dscqss1 * dscqss_dsc[63] +
    dwdot27dscqss17 * dscqss_dsc[623] + dwdot27dscqss2 * dscqss_dsc[98] +
    dwdot27dscqss3 * dscqss_dsc[133] + dwdot27dscqss4 * dscqss_dsc[168] +
    dwdot27dscqss5 * dscqss_dsc[203] + dwdot27dscqss6 * dscqss_dsc[238] +
    dwdot27dscqss7 * dscqss_dsc[273] + dwdot27dscqss9 * dscqss_dsc[343] +
    dwdot27dscqss11 * dscqss_dsc[413] + dwdot27dscqss12 * dscqss_dsc[448] +
    dwdot27dscqss14 * dscqss_dsc[518] + dwdot27dscqss13 * dscqss_dsc[483] +
    dwdot27dscqss15 * dscqss_dsc[553] + dwdot27dscqss8 * dscqss_dsc[308] +
    dwdot27dscqss10 * dscqss_dsc[378];
  J[1071] =
    dwdot27dsc29 + dwdot27dscqss0 * dscqss_dsc[29] +
    dwdot27dscqss16 * dscqss_dsc[589] + dwdot27dscqss1 * dscqss_dsc[64] +
    dwdot27dscqss17 * dscqss_dsc[624] + dwdot27dscqss2 * dscqss_dsc[99] +
    dwdot27dscqss3 * dscqss_dsc[134] + dwdot27dscqss4 * dscqss_dsc[169] +
    dwdot27dscqss5 * dscqss_dsc[204] + dwdot27dscqss6 * dscqss_dsc[239] +
    dwdot27dscqss7 * dscqss_dsc[274] + dwdot27dscqss9 * dscqss_dsc[344] +
    dwdot27dscqss11 * dscqss_dsc[414] + dwdot27dscqss12 * dscqss_dsc[449] +
    dwdot27dscqss14 * dscqss_dsc[519] + dwdot27dscqss13 * dscqss_dsc[484] +
    dwdot27dscqss15 * dscqss_dsc[554] + dwdot27dscqss8 * dscqss_dsc[309] +
    dwdot27dscqss10 * dscqss_dsc[379];
  J[1107] =
    dwdot27dsc30 + dwdot27dscqss0 * dscqss_dsc[30] +
    dwdot27dscqss16 * dscqss_dsc[590] + dwdot27dscqss1 * dscqss_dsc[65] +
    dwdot27dscqss17 * dscqss_dsc[625] + dwdot27dscqss2 * dscqss_dsc[100] +
    dwdot27dscqss3 * dscqss_dsc[135] + dwdot27dscqss4 * dscqss_dsc[170] +
    dwdot27dscqss5 * dscqss_dsc[205] + dwdot27dscqss6 * dscqss_dsc[240] +
    dwdot27dscqss7 * dscqss_dsc[275] + dwdot27dscqss9 * dscqss_dsc[345] +
    dwdot27dscqss11 * dscqss_dsc[415] + dwdot27dscqss12 * dscqss_dsc[450] +
    dwdot27dscqss14 * dscqss_dsc[520] + dwdot27dscqss13 * dscqss_dsc[485] +
    dwdot27dscqss15 * dscqss_dsc[555] + dwdot27dscqss8 * dscqss_dsc[310] +
    dwdot27dscqss10 * dscqss_dsc[380];
  J[1143] =
    dwdot27dsc31 + dwdot27dscqss0 * dscqss_dsc[31] +
    dwdot27dscqss16 * dscqss_dsc[591] + dwdot27dscqss1 * dscqss_dsc[66] +
    dwdot27dscqss17 * dscqss_dsc[626] + dwdot27dscqss2 * dscqss_dsc[101] +
    dwdot27dscqss3 * dscqss_dsc[136] + dwdot27dscqss4 * dscqss_dsc[171] +
    dwdot27dscqss5 * dscqss_dsc[206] + dwdot27dscqss6 * dscqss_dsc[241] +
    dwdot27dscqss7 * dscqss_dsc[276] + dwdot27dscqss9 * dscqss_dsc[346] +
    dwdot27dscqss11 * dscqss_dsc[416] + dwdot27dscqss12 * dscqss_dsc[451] +
    dwdot27dscqss14 * dscqss_dsc[521] + dwdot27dscqss13 * dscqss_dsc[486] +
    dwdot27dscqss15 * dscqss_dsc[556] + dwdot27dscqss8 * dscqss_dsc[311] +
    dwdot27dscqss10 * dscqss_dsc[381];
  J[1179] =
    dwdot27dsc32 + dwdot27dscqss0 * dscqss_dsc[32] +
    dwdot27dscqss16 * dscqss_dsc[592] + dwdot27dscqss1 * dscqss_dsc[67] +
    dwdot27dscqss17 * dscqss_dsc[627] + dwdot27dscqss2 * dscqss_dsc[102] +
    dwdot27dscqss3 * dscqss_dsc[137] + dwdot27dscqss4 * dscqss_dsc[172] +
    dwdot27dscqss5 * dscqss_dsc[207] + dwdot27dscqss6 * dscqss_dsc[242] +
    dwdot27dscqss7 * dscqss_dsc[277] + dwdot27dscqss9 * dscqss_dsc[347] +
    dwdot27dscqss11 * dscqss_dsc[417] + dwdot27dscqss12 * dscqss_dsc[452] +
    dwdot27dscqss14 * dscqss_dsc[522] + dwdot27dscqss13 * dscqss_dsc[487] +
    dwdot27dscqss15 * dscqss_dsc[557] + dwdot27dscqss8 * dscqss_dsc[312] +
    dwdot27dscqss10 * dscqss_dsc[382];
  J[1215] =
    dwdot27dsc33 + dwdot27dscqss0 * dscqss_dsc[33] +
    dwdot27dscqss16 * dscqss_dsc[593] + dwdot27dscqss1 * dscqss_dsc[68] +
    dwdot27dscqss17 * dscqss_dsc[628] + dwdot27dscqss2 * dscqss_dsc[103] +
    dwdot27dscqss3 * dscqss_dsc[138] + dwdot27dscqss4 * dscqss_dsc[173] +
    dwdot27dscqss5 * dscqss_dsc[208] + dwdot27dscqss6 * dscqss_dsc[243] +
    dwdot27dscqss7 * dscqss_dsc[278] + dwdot27dscqss9 * dscqss_dsc[348] +
    dwdot27dscqss11 * dscqss_dsc[418] + dwdot27dscqss12 * dscqss_dsc[453] +
    dwdot27dscqss14 * dscqss_dsc[523] + dwdot27dscqss13 * dscqss_dsc[488] +
    dwdot27dscqss15 * dscqss_dsc[558] + dwdot27dscqss8 * dscqss_dsc[313] +
    dwdot27dscqss10 * dscqss_dsc[383];
  J[1251] =
    dwdot27dsc34 + dwdot27dscqss0 * dscqss_dsc[34] +
    dwdot27dscqss16 * dscqss_dsc[594] + dwdot27dscqss1 * dscqss_dsc[69] +
    dwdot27dscqss17 * dscqss_dsc[629] + dwdot27dscqss2 * dscqss_dsc[104] +
    dwdot27dscqss3 * dscqss_dsc[139] + dwdot27dscqss4 * dscqss_dsc[174] +
    dwdot27dscqss5 * dscqss_dsc[209] + dwdot27dscqss6 * dscqss_dsc[244] +
    dwdot27dscqss7 * dscqss_dsc[279] + dwdot27dscqss9 * dscqss_dsc[349] +
    dwdot27dscqss11 * dscqss_dsc[419] + dwdot27dscqss12 * dscqss_dsc[454] +
    dwdot27dscqss14 * dscqss_dsc[524] + dwdot27dscqss13 * dscqss_dsc[489] +
    dwdot27dscqss15 * dscqss_dsc[559] + dwdot27dscqss8 * dscqss_dsc[314] +
    dwdot27dscqss10 * dscqss_dsc[384];
  J[28] =
    dwdot28dsc0 + dwdot28dscqss0 * dscqss_dsc[0] +
    dwdot28dscqss16 * dscqss_dsc[560] + dwdot28dscqss1 * dscqss_dsc[35] +
    dwdot28dscqss17 * dscqss_dsc[595] + dwdot28dscqss2 * dscqss_dsc[70] +
    dwdot28dscqss3 * dscqss_dsc[105] + dwdot28dscqss4 * dscqss_dsc[140] +
    dwdot28dscqss5 * dscqss_dsc[175] + dwdot28dscqss6 * dscqss_dsc[210] +
    dwdot28dscqss7 * dscqss_dsc[245] + dwdot28dscqss9 * dscqss_dsc[315] +
    dwdot28dscqss11 * dscqss_dsc[385] + dwdot28dscqss12 * dscqss_dsc[420] +
    dwdot28dscqss14 * dscqss_dsc[490] + dwdot28dscqss13 * dscqss_dsc[455] +
    dwdot28dscqss15 * dscqss_dsc[525] + dwdot28dscqss8 * dscqss_dsc[280] +
    dwdot28dscqss10 * dscqss_dsc[350];
  J[64] =
    dwdot28dsc1 + dwdot28dscqss0 * dscqss_dsc[1] +
    dwdot28dscqss16 * dscqss_dsc[561] + dwdot28dscqss1 * dscqss_dsc[36] +
    dwdot28dscqss17 * dscqss_dsc[596] + dwdot28dscqss2 * dscqss_dsc[71] +
    dwdot28dscqss3 * dscqss_dsc[106] + dwdot28dscqss4 * dscqss_dsc[141] +
    dwdot28dscqss5 * dscqss_dsc[176] + dwdot28dscqss6 * dscqss_dsc[211] +
    dwdot28dscqss7 * dscqss_dsc[246] + dwdot28dscqss9 * dscqss_dsc[316] +
    dwdot28dscqss11 * dscqss_dsc[386] + dwdot28dscqss12 * dscqss_dsc[421] +
    dwdot28dscqss14 * dscqss_dsc[491] + dwdot28dscqss13 * dscqss_dsc[456] +
    dwdot28dscqss15 * dscqss_dsc[526] + dwdot28dscqss8 * dscqss_dsc[281] +
    dwdot28dscqss10 * dscqss_dsc[351];
  J[100] =
    dwdot28dsc2 + dwdot28dscqss0 * dscqss_dsc[2] +
    dwdot28dscqss16 * dscqss_dsc[562] + dwdot28dscqss1 * dscqss_dsc[37] +
    dwdot28dscqss17 * dscqss_dsc[597] + dwdot28dscqss2 * dscqss_dsc[72] +
    dwdot28dscqss3 * dscqss_dsc[107] + dwdot28dscqss4 * dscqss_dsc[142] +
    dwdot28dscqss5 * dscqss_dsc[177] + dwdot28dscqss6 * dscqss_dsc[212] +
    dwdot28dscqss7 * dscqss_dsc[247] + dwdot28dscqss9 * dscqss_dsc[317] +
    dwdot28dscqss11 * dscqss_dsc[387] + dwdot28dscqss12 * dscqss_dsc[422] +
    dwdot28dscqss14 * dscqss_dsc[492] + dwdot28dscqss13 * dscqss_dsc[457] +
    dwdot28dscqss15 * dscqss_dsc[527] + dwdot28dscqss8 * dscqss_dsc[282] +
    dwdot28dscqss10 * dscqss_dsc[352];
  J[136] =
    dwdot28dsc3 + dwdot28dscqss0 * dscqss_dsc[3] +
    dwdot28dscqss16 * dscqss_dsc[563] + dwdot28dscqss1 * dscqss_dsc[38] +
    dwdot28dscqss17 * dscqss_dsc[598] + dwdot28dscqss2 * dscqss_dsc[73] +
    dwdot28dscqss3 * dscqss_dsc[108] + dwdot28dscqss4 * dscqss_dsc[143] +
    dwdot28dscqss5 * dscqss_dsc[178] + dwdot28dscqss6 * dscqss_dsc[213] +
    dwdot28dscqss7 * dscqss_dsc[248] + dwdot28dscqss9 * dscqss_dsc[318] +
    dwdot28dscqss11 * dscqss_dsc[388] + dwdot28dscqss12 * dscqss_dsc[423] +
    dwdot28dscqss14 * dscqss_dsc[493] + dwdot28dscqss13 * dscqss_dsc[458] +
    dwdot28dscqss15 * dscqss_dsc[528] + dwdot28dscqss8 * dscqss_dsc[283] +
    dwdot28dscqss10 * dscqss_dsc[353];
  J[172] =
    dwdot28dsc4 + dwdot28dscqss0 * dscqss_dsc[4] +
    dwdot28dscqss16 * dscqss_dsc[564] + dwdot28dscqss1 * dscqss_dsc[39] +
    dwdot28dscqss17 * dscqss_dsc[599] + dwdot28dscqss2 * dscqss_dsc[74] +
    dwdot28dscqss3 * dscqss_dsc[109] + dwdot28dscqss4 * dscqss_dsc[144] +
    dwdot28dscqss5 * dscqss_dsc[179] + dwdot28dscqss6 * dscqss_dsc[214] +
    dwdot28dscqss7 * dscqss_dsc[249] + dwdot28dscqss9 * dscqss_dsc[319] +
    dwdot28dscqss11 * dscqss_dsc[389] + dwdot28dscqss12 * dscqss_dsc[424] +
    dwdot28dscqss14 * dscqss_dsc[494] + dwdot28dscqss13 * dscqss_dsc[459] +
    dwdot28dscqss15 * dscqss_dsc[529] + dwdot28dscqss8 * dscqss_dsc[284] +
    dwdot28dscqss10 * dscqss_dsc[354];
  J[208] =
    dwdot28dsc5 + dwdot28dscqss0 * dscqss_dsc[5] +
    dwdot28dscqss16 * dscqss_dsc[565] + dwdot28dscqss1 * dscqss_dsc[40] +
    dwdot28dscqss17 * dscqss_dsc[600] + dwdot28dscqss2 * dscqss_dsc[75] +
    dwdot28dscqss3 * dscqss_dsc[110] + dwdot28dscqss4 * dscqss_dsc[145] +
    dwdot28dscqss5 * dscqss_dsc[180] + dwdot28dscqss6 * dscqss_dsc[215] +
    dwdot28dscqss7 * dscqss_dsc[250] + dwdot28dscqss9 * dscqss_dsc[320] +
    dwdot28dscqss11 * dscqss_dsc[390] + dwdot28dscqss12 * dscqss_dsc[425] +
    dwdot28dscqss14 * dscqss_dsc[495] + dwdot28dscqss13 * dscqss_dsc[460] +
    dwdot28dscqss15 * dscqss_dsc[530] + dwdot28dscqss8 * dscqss_dsc[285] +
    dwdot28dscqss10 * dscqss_dsc[355];
  J[244] =
    dwdot28dsc6 + dwdot28dscqss0 * dscqss_dsc[6] +
    dwdot28dscqss16 * dscqss_dsc[566] + dwdot28dscqss1 * dscqss_dsc[41] +
    dwdot28dscqss17 * dscqss_dsc[601] + dwdot28dscqss2 * dscqss_dsc[76] +
    dwdot28dscqss3 * dscqss_dsc[111] + dwdot28dscqss4 * dscqss_dsc[146] +
    dwdot28dscqss5 * dscqss_dsc[181] + dwdot28dscqss6 * dscqss_dsc[216] +
    dwdot28dscqss7 * dscqss_dsc[251] + dwdot28dscqss9 * dscqss_dsc[321] +
    dwdot28dscqss11 * dscqss_dsc[391] + dwdot28dscqss12 * dscqss_dsc[426] +
    dwdot28dscqss14 * dscqss_dsc[496] + dwdot28dscqss13 * dscqss_dsc[461] +
    dwdot28dscqss15 * dscqss_dsc[531] + dwdot28dscqss8 * dscqss_dsc[286] +
    dwdot28dscqss10 * dscqss_dsc[356];
  J[280] =
    dwdot28dsc7 + dwdot28dscqss0 * dscqss_dsc[7] +
    dwdot28dscqss16 * dscqss_dsc[567] + dwdot28dscqss1 * dscqss_dsc[42] +
    dwdot28dscqss17 * dscqss_dsc[602] + dwdot28dscqss2 * dscqss_dsc[77] +
    dwdot28dscqss3 * dscqss_dsc[112] + dwdot28dscqss4 * dscqss_dsc[147] +
    dwdot28dscqss5 * dscqss_dsc[182] + dwdot28dscqss6 * dscqss_dsc[217] +
    dwdot28dscqss7 * dscqss_dsc[252] + dwdot28dscqss9 * dscqss_dsc[322] +
    dwdot28dscqss11 * dscqss_dsc[392] + dwdot28dscqss12 * dscqss_dsc[427] +
    dwdot28dscqss14 * dscqss_dsc[497] + dwdot28dscqss13 * dscqss_dsc[462] +
    dwdot28dscqss15 * dscqss_dsc[532] + dwdot28dscqss8 * dscqss_dsc[287] +
    dwdot28dscqss10 * dscqss_dsc[357];
  J[316] =
    dwdot28dsc8 + dwdot28dscqss0 * dscqss_dsc[8] +
    dwdot28dscqss16 * dscqss_dsc[568] + dwdot28dscqss1 * dscqss_dsc[43] +
    dwdot28dscqss17 * dscqss_dsc[603] + dwdot28dscqss2 * dscqss_dsc[78] +
    dwdot28dscqss3 * dscqss_dsc[113] + dwdot28dscqss4 * dscqss_dsc[148] +
    dwdot28dscqss5 * dscqss_dsc[183] + dwdot28dscqss6 * dscqss_dsc[218] +
    dwdot28dscqss7 * dscqss_dsc[253] + dwdot28dscqss9 * dscqss_dsc[323] +
    dwdot28dscqss11 * dscqss_dsc[393] + dwdot28dscqss12 * dscqss_dsc[428] +
    dwdot28dscqss14 * dscqss_dsc[498] + dwdot28dscqss13 * dscqss_dsc[463] +
    dwdot28dscqss15 * dscqss_dsc[533] + dwdot28dscqss8 * dscqss_dsc[288] +
    dwdot28dscqss10 * dscqss_dsc[358];
  J[352] =
    dwdot28dsc9 + dwdot28dscqss0 * dscqss_dsc[9] +
    dwdot28dscqss16 * dscqss_dsc[569] + dwdot28dscqss1 * dscqss_dsc[44] +
    dwdot28dscqss17 * dscqss_dsc[604] + dwdot28dscqss2 * dscqss_dsc[79] +
    dwdot28dscqss3 * dscqss_dsc[114] + dwdot28dscqss4 * dscqss_dsc[149] +
    dwdot28dscqss5 * dscqss_dsc[184] + dwdot28dscqss6 * dscqss_dsc[219] +
    dwdot28dscqss7 * dscqss_dsc[254] + dwdot28dscqss9 * dscqss_dsc[324] +
    dwdot28dscqss11 * dscqss_dsc[394] + dwdot28dscqss12 * dscqss_dsc[429] +
    dwdot28dscqss14 * dscqss_dsc[499] + dwdot28dscqss13 * dscqss_dsc[464] +
    dwdot28dscqss15 * dscqss_dsc[534] + dwdot28dscqss8 * dscqss_dsc[289] +
    dwdot28dscqss10 * dscqss_dsc[359];
  J[388] =
    dwdot28dsc10 + dwdot28dscqss0 * dscqss_dsc[10] +
    dwdot28dscqss16 * dscqss_dsc[570] + dwdot28dscqss1 * dscqss_dsc[45] +
    dwdot28dscqss17 * dscqss_dsc[605] + dwdot28dscqss2 * dscqss_dsc[80] +
    dwdot28dscqss3 * dscqss_dsc[115] + dwdot28dscqss4 * dscqss_dsc[150] +
    dwdot28dscqss5 * dscqss_dsc[185] + dwdot28dscqss6 * dscqss_dsc[220] +
    dwdot28dscqss7 * dscqss_dsc[255] + dwdot28dscqss9 * dscqss_dsc[325] +
    dwdot28dscqss11 * dscqss_dsc[395] + dwdot28dscqss12 * dscqss_dsc[430] +
    dwdot28dscqss14 * dscqss_dsc[500] + dwdot28dscqss13 * dscqss_dsc[465] +
    dwdot28dscqss15 * dscqss_dsc[535] + dwdot28dscqss8 * dscqss_dsc[290] +
    dwdot28dscqss10 * dscqss_dsc[360];
  J[424] =
    dwdot28dsc11 + dwdot28dscqss0 * dscqss_dsc[11] +
    dwdot28dscqss16 * dscqss_dsc[571] + dwdot28dscqss1 * dscqss_dsc[46] +
    dwdot28dscqss17 * dscqss_dsc[606] + dwdot28dscqss2 * dscqss_dsc[81] +
    dwdot28dscqss3 * dscqss_dsc[116] + dwdot28dscqss4 * dscqss_dsc[151] +
    dwdot28dscqss5 * dscqss_dsc[186] + dwdot28dscqss6 * dscqss_dsc[221] +
    dwdot28dscqss7 * dscqss_dsc[256] + dwdot28dscqss9 * dscqss_dsc[326] +
    dwdot28dscqss11 * dscqss_dsc[396] + dwdot28dscqss12 * dscqss_dsc[431] +
    dwdot28dscqss14 * dscqss_dsc[501] + dwdot28dscqss13 * dscqss_dsc[466] +
    dwdot28dscqss15 * dscqss_dsc[536] + dwdot28dscqss8 * dscqss_dsc[291] +
    dwdot28dscqss10 * dscqss_dsc[361];
  J[460] =
    dwdot28dsc12 + dwdot28dscqss0 * dscqss_dsc[12] +
    dwdot28dscqss16 * dscqss_dsc[572] + dwdot28dscqss1 * dscqss_dsc[47] +
    dwdot28dscqss17 * dscqss_dsc[607] + dwdot28dscqss2 * dscqss_dsc[82] +
    dwdot28dscqss3 * dscqss_dsc[117] + dwdot28dscqss4 * dscqss_dsc[152] +
    dwdot28dscqss5 * dscqss_dsc[187] + dwdot28dscqss6 * dscqss_dsc[222] +
    dwdot28dscqss7 * dscqss_dsc[257] + dwdot28dscqss9 * dscqss_dsc[327] +
    dwdot28dscqss11 * dscqss_dsc[397] + dwdot28dscqss12 * dscqss_dsc[432] +
    dwdot28dscqss14 * dscqss_dsc[502] + dwdot28dscqss13 * dscqss_dsc[467] +
    dwdot28dscqss15 * dscqss_dsc[537] + dwdot28dscqss8 * dscqss_dsc[292] +
    dwdot28dscqss10 * dscqss_dsc[362];
  J[496] =
    dwdot28dsc13 + dwdot28dscqss0 * dscqss_dsc[13] +
    dwdot28dscqss16 * dscqss_dsc[573] + dwdot28dscqss1 * dscqss_dsc[48] +
    dwdot28dscqss17 * dscqss_dsc[608] + dwdot28dscqss2 * dscqss_dsc[83] +
    dwdot28dscqss3 * dscqss_dsc[118] + dwdot28dscqss4 * dscqss_dsc[153] +
    dwdot28dscqss5 * dscqss_dsc[188] + dwdot28dscqss6 * dscqss_dsc[223] +
    dwdot28dscqss7 * dscqss_dsc[258] + dwdot28dscqss9 * dscqss_dsc[328] +
    dwdot28dscqss11 * dscqss_dsc[398] + dwdot28dscqss12 * dscqss_dsc[433] +
    dwdot28dscqss14 * dscqss_dsc[503] + dwdot28dscqss13 * dscqss_dsc[468] +
    dwdot28dscqss15 * dscqss_dsc[538] + dwdot28dscqss8 * dscqss_dsc[293] +
    dwdot28dscqss10 * dscqss_dsc[363];
  J[532] =
    dwdot28dsc14 + dwdot28dscqss0 * dscqss_dsc[14] +
    dwdot28dscqss16 * dscqss_dsc[574] + dwdot28dscqss1 * dscqss_dsc[49] +
    dwdot28dscqss17 * dscqss_dsc[609] + dwdot28dscqss2 * dscqss_dsc[84] +
    dwdot28dscqss3 * dscqss_dsc[119] + dwdot28dscqss4 * dscqss_dsc[154] +
    dwdot28dscqss5 * dscqss_dsc[189] + dwdot28dscqss6 * dscqss_dsc[224] +
    dwdot28dscqss7 * dscqss_dsc[259] + dwdot28dscqss9 * dscqss_dsc[329] +
    dwdot28dscqss11 * dscqss_dsc[399] + dwdot28dscqss12 * dscqss_dsc[434] +
    dwdot28dscqss14 * dscqss_dsc[504] + dwdot28dscqss13 * dscqss_dsc[469] +
    dwdot28dscqss15 * dscqss_dsc[539] + dwdot28dscqss8 * dscqss_dsc[294] +
    dwdot28dscqss10 * dscqss_dsc[364];
  J[568] =
    dwdot28dsc15 + dwdot28dscqss0 * dscqss_dsc[15] +
    dwdot28dscqss16 * dscqss_dsc[575] + dwdot28dscqss1 * dscqss_dsc[50] +
    dwdot28dscqss17 * dscqss_dsc[610] + dwdot28dscqss2 * dscqss_dsc[85] +
    dwdot28dscqss3 * dscqss_dsc[120] + dwdot28dscqss4 * dscqss_dsc[155] +
    dwdot28dscqss5 * dscqss_dsc[190] + dwdot28dscqss6 * dscqss_dsc[225] +
    dwdot28dscqss7 * dscqss_dsc[260] + dwdot28dscqss9 * dscqss_dsc[330] +
    dwdot28dscqss11 * dscqss_dsc[400] + dwdot28dscqss12 * dscqss_dsc[435] +
    dwdot28dscqss14 * dscqss_dsc[505] + dwdot28dscqss13 * dscqss_dsc[470] +
    dwdot28dscqss15 * dscqss_dsc[540] + dwdot28dscqss8 * dscqss_dsc[295] +
    dwdot28dscqss10 * dscqss_dsc[365];
  J[604] =
    dwdot28dsc16 + dwdot28dscqss0 * dscqss_dsc[16] +
    dwdot28dscqss16 * dscqss_dsc[576] + dwdot28dscqss1 * dscqss_dsc[51] +
    dwdot28dscqss17 * dscqss_dsc[611] + dwdot28dscqss2 * dscqss_dsc[86] +
    dwdot28dscqss3 * dscqss_dsc[121] + dwdot28dscqss4 * dscqss_dsc[156] +
    dwdot28dscqss5 * dscqss_dsc[191] + dwdot28dscqss6 * dscqss_dsc[226] +
    dwdot28dscqss7 * dscqss_dsc[261] + dwdot28dscqss9 * dscqss_dsc[331] +
    dwdot28dscqss11 * dscqss_dsc[401] + dwdot28dscqss12 * dscqss_dsc[436] +
    dwdot28dscqss14 * dscqss_dsc[506] + dwdot28dscqss13 * dscqss_dsc[471] +
    dwdot28dscqss15 * dscqss_dsc[541] + dwdot28dscqss8 * dscqss_dsc[296] +
    dwdot28dscqss10 * dscqss_dsc[366];
  J[640] =
    dwdot28dsc17 + dwdot28dscqss0 * dscqss_dsc[17] +
    dwdot28dscqss16 * dscqss_dsc[577] + dwdot28dscqss1 * dscqss_dsc[52] +
    dwdot28dscqss17 * dscqss_dsc[612] + dwdot28dscqss2 * dscqss_dsc[87] +
    dwdot28dscqss3 * dscqss_dsc[122] + dwdot28dscqss4 * dscqss_dsc[157] +
    dwdot28dscqss5 * dscqss_dsc[192] + dwdot28dscqss6 * dscqss_dsc[227] +
    dwdot28dscqss7 * dscqss_dsc[262] + dwdot28dscqss9 * dscqss_dsc[332] +
    dwdot28dscqss11 * dscqss_dsc[402] + dwdot28dscqss12 * dscqss_dsc[437] +
    dwdot28dscqss14 * dscqss_dsc[507] + dwdot28dscqss13 * dscqss_dsc[472] +
    dwdot28dscqss15 * dscqss_dsc[542] + dwdot28dscqss8 * dscqss_dsc[297] +
    dwdot28dscqss10 * dscqss_dsc[367];
  J[676] =
    dwdot28dsc18 + dwdot28dscqss0 * dscqss_dsc[18] +
    dwdot28dscqss16 * dscqss_dsc[578] + dwdot28dscqss1 * dscqss_dsc[53] +
    dwdot28dscqss17 * dscqss_dsc[613] + dwdot28dscqss2 * dscqss_dsc[88] +
    dwdot28dscqss3 * dscqss_dsc[123] + dwdot28dscqss4 * dscqss_dsc[158] +
    dwdot28dscqss5 * dscqss_dsc[193] + dwdot28dscqss6 * dscqss_dsc[228] +
    dwdot28dscqss7 * dscqss_dsc[263] + dwdot28dscqss9 * dscqss_dsc[333] +
    dwdot28dscqss11 * dscqss_dsc[403] + dwdot28dscqss12 * dscqss_dsc[438] +
    dwdot28dscqss14 * dscqss_dsc[508] + dwdot28dscqss13 * dscqss_dsc[473] +
    dwdot28dscqss15 * dscqss_dsc[543] + dwdot28dscqss8 * dscqss_dsc[298] +
    dwdot28dscqss10 * dscqss_dsc[368];
  J[712] =
    dwdot28dsc19 + dwdot28dscqss0 * dscqss_dsc[19] +
    dwdot28dscqss16 * dscqss_dsc[579] + dwdot28dscqss1 * dscqss_dsc[54] +
    dwdot28dscqss17 * dscqss_dsc[614] + dwdot28dscqss2 * dscqss_dsc[89] +
    dwdot28dscqss3 * dscqss_dsc[124] + dwdot28dscqss4 * dscqss_dsc[159] +
    dwdot28dscqss5 * dscqss_dsc[194] + dwdot28dscqss6 * dscqss_dsc[229] +
    dwdot28dscqss7 * dscqss_dsc[264] + dwdot28dscqss9 * dscqss_dsc[334] +
    dwdot28dscqss11 * dscqss_dsc[404] + dwdot28dscqss12 * dscqss_dsc[439] +
    dwdot28dscqss14 * dscqss_dsc[509] + dwdot28dscqss13 * dscqss_dsc[474] +
    dwdot28dscqss15 * dscqss_dsc[544] + dwdot28dscqss8 * dscqss_dsc[299] +
    dwdot28dscqss10 * dscqss_dsc[369];
  J[748] =
    dwdot28dsc20 + dwdot28dscqss0 * dscqss_dsc[20] +
    dwdot28dscqss16 * dscqss_dsc[580] + dwdot28dscqss1 * dscqss_dsc[55] +
    dwdot28dscqss17 * dscqss_dsc[615] + dwdot28dscqss2 * dscqss_dsc[90] +
    dwdot28dscqss3 * dscqss_dsc[125] + dwdot28dscqss4 * dscqss_dsc[160] +
    dwdot28dscqss5 * dscqss_dsc[195] + dwdot28dscqss6 * dscqss_dsc[230] +
    dwdot28dscqss7 * dscqss_dsc[265] + dwdot28dscqss9 * dscqss_dsc[335] +
    dwdot28dscqss11 * dscqss_dsc[405] + dwdot28dscqss12 * dscqss_dsc[440] +
    dwdot28dscqss14 * dscqss_dsc[510] + dwdot28dscqss13 * dscqss_dsc[475] +
    dwdot28dscqss15 * dscqss_dsc[545] + dwdot28dscqss8 * dscqss_dsc[300] +
    dwdot28dscqss10 * dscqss_dsc[370];
  J[784] =
    dwdot28dsc21 + dwdot28dscqss0 * dscqss_dsc[21] +
    dwdot28dscqss16 * dscqss_dsc[581] + dwdot28dscqss1 * dscqss_dsc[56] +
    dwdot28dscqss17 * dscqss_dsc[616] + dwdot28dscqss2 * dscqss_dsc[91] +
    dwdot28dscqss3 * dscqss_dsc[126] + dwdot28dscqss4 * dscqss_dsc[161] +
    dwdot28dscqss5 * dscqss_dsc[196] + dwdot28dscqss6 * dscqss_dsc[231] +
    dwdot28dscqss7 * dscqss_dsc[266] + dwdot28dscqss9 * dscqss_dsc[336] +
    dwdot28dscqss11 * dscqss_dsc[406] + dwdot28dscqss12 * dscqss_dsc[441] +
    dwdot28dscqss14 * dscqss_dsc[511] + dwdot28dscqss13 * dscqss_dsc[476] +
    dwdot28dscqss15 * dscqss_dsc[546] + dwdot28dscqss8 * dscqss_dsc[301] +
    dwdot28dscqss10 * dscqss_dsc[371];
  J[820] =
    dwdot28dsc22 + dwdot28dscqss0 * dscqss_dsc[22] +
    dwdot28dscqss16 * dscqss_dsc[582] + dwdot28dscqss1 * dscqss_dsc[57] +
    dwdot28dscqss17 * dscqss_dsc[617] + dwdot28dscqss2 * dscqss_dsc[92] +
    dwdot28dscqss3 * dscqss_dsc[127] + dwdot28dscqss4 * dscqss_dsc[162] +
    dwdot28dscqss5 * dscqss_dsc[197] + dwdot28dscqss6 * dscqss_dsc[232] +
    dwdot28dscqss7 * dscqss_dsc[267] + dwdot28dscqss9 * dscqss_dsc[337] +
    dwdot28dscqss11 * dscqss_dsc[407] + dwdot28dscqss12 * dscqss_dsc[442] +
    dwdot28dscqss14 * dscqss_dsc[512] + dwdot28dscqss13 * dscqss_dsc[477] +
    dwdot28dscqss15 * dscqss_dsc[547] + dwdot28dscqss8 * dscqss_dsc[302] +
    dwdot28dscqss10 * dscqss_dsc[372];
  J[856] =
    dwdot28dsc23 + dwdot28dscqss0 * dscqss_dsc[23] +
    dwdot28dscqss16 * dscqss_dsc[583] + dwdot28dscqss1 * dscqss_dsc[58] +
    dwdot28dscqss17 * dscqss_dsc[618] + dwdot28dscqss2 * dscqss_dsc[93] +
    dwdot28dscqss3 * dscqss_dsc[128] + dwdot28dscqss4 * dscqss_dsc[163] +
    dwdot28dscqss5 * dscqss_dsc[198] + dwdot28dscqss6 * dscqss_dsc[233] +
    dwdot28dscqss7 * dscqss_dsc[268] + dwdot28dscqss9 * dscqss_dsc[338] +
    dwdot28dscqss11 * dscqss_dsc[408] + dwdot28dscqss12 * dscqss_dsc[443] +
    dwdot28dscqss14 * dscqss_dsc[513] + dwdot28dscqss13 * dscqss_dsc[478] +
    dwdot28dscqss15 * dscqss_dsc[548] + dwdot28dscqss8 * dscqss_dsc[303] +
    dwdot28dscqss10 * dscqss_dsc[373];
  J[892] =
    dwdot28dsc24 + dwdot28dscqss0 * dscqss_dsc[24] +
    dwdot28dscqss16 * dscqss_dsc[584] + dwdot28dscqss1 * dscqss_dsc[59] +
    dwdot28dscqss17 * dscqss_dsc[619] + dwdot28dscqss2 * dscqss_dsc[94] +
    dwdot28dscqss3 * dscqss_dsc[129] + dwdot28dscqss4 * dscqss_dsc[164] +
    dwdot28dscqss5 * dscqss_dsc[199] + dwdot28dscqss6 * dscqss_dsc[234] +
    dwdot28dscqss7 * dscqss_dsc[269] + dwdot28dscqss9 * dscqss_dsc[339] +
    dwdot28dscqss11 * dscqss_dsc[409] + dwdot28dscqss12 * dscqss_dsc[444] +
    dwdot28dscqss14 * dscqss_dsc[514] + dwdot28dscqss13 * dscqss_dsc[479] +
    dwdot28dscqss15 * dscqss_dsc[549] + dwdot28dscqss8 * dscqss_dsc[304] +
    dwdot28dscqss10 * dscqss_dsc[374];
  J[928] =
    dwdot28dsc25 + dwdot28dscqss0 * dscqss_dsc[25] +
    dwdot28dscqss16 * dscqss_dsc[585] + dwdot28dscqss1 * dscqss_dsc[60] +
    dwdot28dscqss17 * dscqss_dsc[620] + dwdot28dscqss2 * dscqss_dsc[95] +
    dwdot28dscqss3 * dscqss_dsc[130] + dwdot28dscqss4 * dscqss_dsc[165] +
    dwdot28dscqss5 * dscqss_dsc[200] + dwdot28dscqss6 * dscqss_dsc[235] +
    dwdot28dscqss7 * dscqss_dsc[270] + dwdot28dscqss9 * dscqss_dsc[340] +
    dwdot28dscqss11 * dscqss_dsc[410] + dwdot28dscqss12 * dscqss_dsc[445] +
    dwdot28dscqss14 * dscqss_dsc[515] + dwdot28dscqss13 * dscqss_dsc[480] +
    dwdot28dscqss15 * dscqss_dsc[550] + dwdot28dscqss8 * dscqss_dsc[305] +
    dwdot28dscqss10 * dscqss_dsc[375];
  J[964] =
    dwdot28dsc26 + dwdot28dscqss0 * dscqss_dsc[26] +
    dwdot28dscqss16 * dscqss_dsc[586] + dwdot28dscqss1 * dscqss_dsc[61] +
    dwdot28dscqss17 * dscqss_dsc[621] + dwdot28dscqss2 * dscqss_dsc[96] +
    dwdot28dscqss3 * dscqss_dsc[131] + dwdot28dscqss4 * dscqss_dsc[166] +
    dwdot28dscqss5 * dscqss_dsc[201] + dwdot28dscqss6 * dscqss_dsc[236] +
    dwdot28dscqss7 * dscqss_dsc[271] + dwdot28dscqss9 * dscqss_dsc[341] +
    dwdot28dscqss11 * dscqss_dsc[411] + dwdot28dscqss12 * dscqss_dsc[446] +
    dwdot28dscqss14 * dscqss_dsc[516] + dwdot28dscqss13 * dscqss_dsc[481] +
    dwdot28dscqss15 * dscqss_dsc[551] + dwdot28dscqss8 * dscqss_dsc[306] +
    dwdot28dscqss10 * dscqss_dsc[376];
  J[1000] =
    dwdot28dsc27 + dwdot28dscqss0 * dscqss_dsc[27] +
    dwdot28dscqss16 * dscqss_dsc[587] + dwdot28dscqss1 * dscqss_dsc[62] +
    dwdot28dscqss17 * dscqss_dsc[622] + dwdot28dscqss2 * dscqss_dsc[97] +
    dwdot28dscqss3 * dscqss_dsc[132] + dwdot28dscqss4 * dscqss_dsc[167] +
    dwdot28dscqss5 * dscqss_dsc[202] + dwdot28dscqss6 * dscqss_dsc[237] +
    dwdot28dscqss7 * dscqss_dsc[272] + dwdot28dscqss9 * dscqss_dsc[342] +
    dwdot28dscqss11 * dscqss_dsc[412] + dwdot28dscqss12 * dscqss_dsc[447] +
    dwdot28dscqss14 * dscqss_dsc[517] + dwdot28dscqss13 * dscqss_dsc[482] +
    dwdot28dscqss15 * dscqss_dsc[552] + dwdot28dscqss8 * dscqss_dsc[307] +
    dwdot28dscqss10 * dscqss_dsc[377];
  J[1036] =
    dwdot28dsc28 + dwdot28dscqss0 * dscqss_dsc[28] +
    dwdot28dscqss16 * dscqss_dsc[588] + dwdot28dscqss1 * dscqss_dsc[63] +
    dwdot28dscqss17 * dscqss_dsc[623] + dwdot28dscqss2 * dscqss_dsc[98] +
    dwdot28dscqss3 * dscqss_dsc[133] + dwdot28dscqss4 * dscqss_dsc[168] +
    dwdot28dscqss5 * dscqss_dsc[203] + dwdot28dscqss6 * dscqss_dsc[238] +
    dwdot28dscqss7 * dscqss_dsc[273] + dwdot28dscqss9 * dscqss_dsc[343] +
    dwdot28dscqss11 * dscqss_dsc[413] + dwdot28dscqss12 * dscqss_dsc[448] +
    dwdot28dscqss14 * dscqss_dsc[518] + dwdot28dscqss13 * dscqss_dsc[483] +
    dwdot28dscqss15 * dscqss_dsc[553] + dwdot28dscqss8 * dscqss_dsc[308] +
    dwdot28dscqss10 * dscqss_dsc[378];
  J[1072] =
    dwdot28dsc29 + dwdot28dscqss0 * dscqss_dsc[29] +
    dwdot28dscqss16 * dscqss_dsc[589] + dwdot28dscqss1 * dscqss_dsc[64] +
    dwdot28dscqss17 * dscqss_dsc[624] + dwdot28dscqss2 * dscqss_dsc[99] +
    dwdot28dscqss3 * dscqss_dsc[134] + dwdot28dscqss4 * dscqss_dsc[169] +
    dwdot28dscqss5 * dscqss_dsc[204] + dwdot28dscqss6 * dscqss_dsc[239] +
    dwdot28dscqss7 * dscqss_dsc[274] + dwdot28dscqss9 * dscqss_dsc[344] +
    dwdot28dscqss11 * dscqss_dsc[414] + dwdot28dscqss12 * dscqss_dsc[449] +
    dwdot28dscqss14 * dscqss_dsc[519] + dwdot28dscqss13 * dscqss_dsc[484] +
    dwdot28dscqss15 * dscqss_dsc[554] + dwdot28dscqss8 * dscqss_dsc[309] +
    dwdot28dscqss10 * dscqss_dsc[379];
  J[1108] =
    dwdot28dsc30 + dwdot28dscqss0 * dscqss_dsc[30] +
    dwdot28dscqss16 * dscqss_dsc[590] + dwdot28dscqss1 * dscqss_dsc[65] +
    dwdot28dscqss17 * dscqss_dsc[625] + dwdot28dscqss2 * dscqss_dsc[100] +
    dwdot28dscqss3 * dscqss_dsc[135] + dwdot28dscqss4 * dscqss_dsc[170] +
    dwdot28dscqss5 * dscqss_dsc[205] + dwdot28dscqss6 * dscqss_dsc[240] +
    dwdot28dscqss7 * dscqss_dsc[275] + dwdot28dscqss9 * dscqss_dsc[345] +
    dwdot28dscqss11 * dscqss_dsc[415] + dwdot28dscqss12 * dscqss_dsc[450] +
    dwdot28dscqss14 * dscqss_dsc[520] + dwdot28dscqss13 * dscqss_dsc[485] +
    dwdot28dscqss15 * dscqss_dsc[555] + dwdot28dscqss8 * dscqss_dsc[310] +
    dwdot28dscqss10 * dscqss_dsc[380];
  J[1144] =
    dwdot28dsc31 + dwdot28dscqss0 * dscqss_dsc[31] +
    dwdot28dscqss16 * dscqss_dsc[591] + dwdot28dscqss1 * dscqss_dsc[66] +
    dwdot28dscqss17 * dscqss_dsc[626] + dwdot28dscqss2 * dscqss_dsc[101] +
    dwdot28dscqss3 * dscqss_dsc[136] + dwdot28dscqss4 * dscqss_dsc[171] +
    dwdot28dscqss5 * dscqss_dsc[206] + dwdot28dscqss6 * dscqss_dsc[241] +
    dwdot28dscqss7 * dscqss_dsc[276] + dwdot28dscqss9 * dscqss_dsc[346] +
    dwdot28dscqss11 * dscqss_dsc[416] + dwdot28dscqss12 * dscqss_dsc[451] +
    dwdot28dscqss14 * dscqss_dsc[521] + dwdot28dscqss13 * dscqss_dsc[486] +
    dwdot28dscqss15 * dscqss_dsc[556] + dwdot28dscqss8 * dscqss_dsc[311] +
    dwdot28dscqss10 * dscqss_dsc[381];
  J[1180] =
    dwdot28dsc32 + dwdot28dscqss0 * dscqss_dsc[32] +
    dwdot28dscqss16 * dscqss_dsc[592] + dwdot28dscqss1 * dscqss_dsc[67] +
    dwdot28dscqss17 * dscqss_dsc[627] + dwdot28dscqss2 * dscqss_dsc[102] +
    dwdot28dscqss3 * dscqss_dsc[137] + dwdot28dscqss4 * dscqss_dsc[172] +
    dwdot28dscqss5 * dscqss_dsc[207] + dwdot28dscqss6 * dscqss_dsc[242] +
    dwdot28dscqss7 * dscqss_dsc[277] + dwdot28dscqss9 * dscqss_dsc[347] +
    dwdot28dscqss11 * dscqss_dsc[417] + dwdot28dscqss12 * dscqss_dsc[452] +
    dwdot28dscqss14 * dscqss_dsc[522] + dwdot28dscqss13 * dscqss_dsc[487] +
    dwdot28dscqss15 * dscqss_dsc[557] + dwdot28dscqss8 * dscqss_dsc[312] +
    dwdot28dscqss10 * dscqss_dsc[382];
  J[1216] =
    dwdot28dsc33 + dwdot28dscqss0 * dscqss_dsc[33] +
    dwdot28dscqss16 * dscqss_dsc[593] + dwdot28dscqss1 * dscqss_dsc[68] +
    dwdot28dscqss17 * dscqss_dsc[628] + dwdot28dscqss2 * dscqss_dsc[103] +
    dwdot28dscqss3 * dscqss_dsc[138] + dwdot28dscqss4 * dscqss_dsc[173] +
    dwdot28dscqss5 * dscqss_dsc[208] + dwdot28dscqss6 * dscqss_dsc[243] +
    dwdot28dscqss7 * dscqss_dsc[278] + dwdot28dscqss9 * dscqss_dsc[348] +
    dwdot28dscqss11 * dscqss_dsc[418] + dwdot28dscqss12 * dscqss_dsc[453] +
    dwdot28dscqss14 * dscqss_dsc[523] + dwdot28dscqss13 * dscqss_dsc[488] +
    dwdot28dscqss15 * dscqss_dsc[558] + dwdot28dscqss8 * dscqss_dsc[313] +
    dwdot28dscqss10 * dscqss_dsc[383];
  J[1252] =
    dwdot28dsc34 + dwdot28dscqss0 * dscqss_dsc[34] +
    dwdot28dscqss16 * dscqss_dsc[594] + dwdot28dscqss1 * dscqss_dsc[69] +
    dwdot28dscqss17 * dscqss_dsc[629] + dwdot28dscqss2 * dscqss_dsc[104] +
    dwdot28dscqss3 * dscqss_dsc[139] + dwdot28dscqss4 * dscqss_dsc[174] +
    dwdot28dscqss5 * dscqss_dsc[209] + dwdot28dscqss6 * dscqss_dsc[244] +
    dwdot28dscqss7 * dscqss_dsc[279] + dwdot28dscqss9 * dscqss_dsc[349] +
    dwdot28dscqss11 * dscqss_dsc[419] + dwdot28dscqss12 * dscqss_dsc[454] +
    dwdot28dscqss14 * dscqss_dsc[524] + dwdot28dscqss13 * dscqss_dsc[489] +
    dwdot28dscqss15 * dscqss_dsc[559] + dwdot28dscqss8 * dscqss_dsc[314] +
    dwdot28dscqss10 * dscqss_dsc[384];
  J[29] =
    dwdot29dsc0 + dwdot29dscqss0 * dscqss_dsc[0] +
    dwdot29dscqss16 * dscqss_dsc[560] + dwdot29dscqss1 * dscqss_dsc[35] +
    dwdot29dscqss17 * dscqss_dsc[595] + dwdot29dscqss2 * dscqss_dsc[70] +
    dwdot29dscqss3 * dscqss_dsc[105] + dwdot29dscqss4 * dscqss_dsc[140] +
    dwdot29dscqss5 * dscqss_dsc[175] + dwdot29dscqss6 * dscqss_dsc[210] +
    dwdot29dscqss7 * dscqss_dsc[245] + dwdot29dscqss9 * dscqss_dsc[315] +
    dwdot29dscqss11 * dscqss_dsc[385] + dwdot29dscqss12 * dscqss_dsc[420] +
    dwdot29dscqss14 * dscqss_dsc[490] + dwdot29dscqss13 * dscqss_dsc[455] +
    dwdot29dscqss15 * dscqss_dsc[525] + dwdot29dscqss8 * dscqss_dsc[280] +
    dwdot29dscqss10 * dscqss_dsc[350];
  J[65] =
    dwdot29dsc1 + dwdot29dscqss0 * dscqss_dsc[1] +
    dwdot29dscqss16 * dscqss_dsc[561] + dwdot29dscqss1 * dscqss_dsc[36] +
    dwdot29dscqss17 * dscqss_dsc[596] + dwdot29dscqss2 * dscqss_dsc[71] +
    dwdot29dscqss3 * dscqss_dsc[106] + dwdot29dscqss4 * dscqss_dsc[141] +
    dwdot29dscqss5 * dscqss_dsc[176] + dwdot29dscqss6 * dscqss_dsc[211] +
    dwdot29dscqss7 * dscqss_dsc[246] + dwdot29dscqss9 * dscqss_dsc[316] +
    dwdot29dscqss11 * dscqss_dsc[386] + dwdot29dscqss12 * dscqss_dsc[421] +
    dwdot29dscqss14 * dscqss_dsc[491] + dwdot29dscqss13 * dscqss_dsc[456] +
    dwdot29dscqss15 * dscqss_dsc[526] + dwdot29dscqss8 * dscqss_dsc[281] +
    dwdot29dscqss10 * dscqss_dsc[351];
  J[101] =
    dwdot29dsc2 + dwdot29dscqss0 * dscqss_dsc[2] +
    dwdot29dscqss16 * dscqss_dsc[562] + dwdot29dscqss1 * dscqss_dsc[37] +
    dwdot29dscqss17 * dscqss_dsc[597] + dwdot29dscqss2 * dscqss_dsc[72] +
    dwdot29dscqss3 * dscqss_dsc[107] + dwdot29dscqss4 * dscqss_dsc[142] +
    dwdot29dscqss5 * dscqss_dsc[177] + dwdot29dscqss6 * dscqss_dsc[212] +
    dwdot29dscqss7 * dscqss_dsc[247] + dwdot29dscqss9 * dscqss_dsc[317] +
    dwdot29dscqss11 * dscqss_dsc[387] + dwdot29dscqss12 * dscqss_dsc[422] +
    dwdot29dscqss14 * dscqss_dsc[492] + dwdot29dscqss13 * dscqss_dsc[457] +
    dwdot29dscqss15 * dscqss_dsc[527] + dwdot29dscqss8 * dscqss_dsc[282] +
    dwdot29dscqss10 * dscqss_dsc[352];
  J[137] =
    dwdot29dsc3 + dwdot29dscqss0 * dscqss_dsc[3] +
    dwdot29dscqss16 * dscqss_dsc[563] + dwdot29dscqss1 * dscqss_dsc[38] +
    dwdot29dscqss17 * dscqss_dsc[598] + dwdot29dscqss2 * dscqss_dsc[73] +
    dwdot29dscqss3 * dscqss_dsc[108] + dwdot29dscqss4 * dscqss_dsc[143] +
    dwdot29dscqss5 * dscqss_dsc[178] + dwdot29dscqss6 * dscqss_dsc[213] +
    dwdot29dscqss7 * dscqss_dsc[248] + dwdot29dscqss9 * dscqss_dsc[318] +
    dwdot29dscqss11 * dscqss_dsc[388] + dwdot29dscqss12 * dscqss_dsc[423] +
    dwdot29dscqss14 * dscqss_dsc[493] + dwdot29dscqss13 * dscqss_dsc[458] +
    dwdot29dscqss15 * dscqss_dsc[528] + dwdot29dscqss8 * dscqss_dsc[283] +
    dwdot29dscqss10 * dscqss_dsc[353];
  J[173] =
    dwdot29dsc4 + dwdot29dscqss0 * dscqss_dsc[4] +
    dwdot29dscqss16 * dscqss_dsc[564] + dwdot29dscqss1 * dscqss_dsc[39] +
    dwdot29dscqss17 * dscqss_dsc[599] + dwdot29dscqss2 * dscqss_dsc[74] +
    dwdot29dscqss3 * dscqss_dsc[109] + dwdot29dscqss4 * dscqss_dsc[144] +
    dwdot29dscqss5 * dscqss_dsc[179] + dwdot29dscqss6 * dscqss_dsc[214] +
    dwdot29dscqss7 * dscqss_dsc[249] + dwdot29dscqss9 * dscqss_dsc[319] +
    dwdot29dscqss11 * dscqss_dsc[389] + dwdot29dscqss12 * dscqss_dsc[424] +
    dwdot29dscqss14 * dscqss_dsc[494] + dwdot29dscqss13 * dscqss_dsc[459] +
    dwdot29dscqss15 * dscqss_dsc[529] + dwdot29dscqss8 * dscqss_dsc[284] +
    dwdot29dscqss10 * dscqss_dsc[354];
  J[209] =
    dwdot29dsc5 + dwdot29dscqss0 * dscqss_dsc[5] +
    dwdot29dscqss16 * dscqss_dsc[565] + dwdot29dscqss1 * dscqss_dsc[40] +
    dwdot29dscqss17 * dscqss_dsc[600] + dwdot29dscqss2 * dscqss_dsc[75] +
    dwdot29dscqss3 * dscqss_dsc[110] + dwdot29dscqss4 * dscqss_dsc[145] +
    dwdot29dscqss5 * dscqss_dsc[180] + dwdot29dscqss6 * dscqss_dsc[215] +
    dwdot29dscqss7 * dscqss_dsc[250] + dwdot29dscqss9 * dscqss_dsc[320] +
    dwdot29dscqss11 * dscqss_dsc[390] + dwdot29dscqss12 * dscqss_dsc[425] +
    dwdot29dscqss14 * dscqss_dsc[495] + dwdot29dscqss13 * dscqss_dsc[460] +
    dwdot29dscqss15 * dscqss_dsc[530] + dwdot29dscqss8 * dscqss_dsc[285] +
    dwdot29dscqss10 * dscqss_dsc[355];
  J[245] =
    dwdot29dsc6 + dwdot29dscqss0 * dscqss_dsc[6] +
    dwdot29dscqss16 * dscqss_dsc[566] + dwdot29dscqss1 * dscqss_dsc[41] +
    dwdot29dscqss17 * dscqss_dsc[601] + dwdot29dscqss2 * dscqss_dsc[76] +
    dwdot29dscqss3 * dscqss_dsc[111] + dwdot29dscqss4 * dscqss_dsc[146] +
    dwdot29dscqss5 * dscqss_dsc[181] + dwdot29dscqss6 * dscqss_dsc[216] +
    dwdot29dscqss7 * dscqss_dsc[251] + dwdot29dscqss9 * dscqss_dsc[321] +
    dwdot29dscqss11 * dscqss_dsc[391] + dwdot29dscqss12 * dscqss_dsc[426] +
    dwdot29dscqss14 * dscqss_dsc[496] + dwdot29dscqss13 * dscqss_dsc[461] +
    dwdot29dscqss15 * dscqss_dsc[531] + dwdot29dscqss8 * dscqss_dsc[286] +
    dwdot29dscqss10 * dscqss_dsc[356];
  J[281] =
    dwdot29dsc7 + dwdot29dscqss0 * dscqss_dsc[7] +
    dwdot29dscqss16 * dscqss_dsc[567] + dwdot29dscqss1 * dscqss_dsc[42] +
    dwdot29dscqss17 * dscqss_dsc[602] + dwdot29dscqss2 * dscqss_dsc[77] +
    dwdot29dscqss3 * dscqss_dsc[112] + dwdot29dscqss4 * dscqss_dsc[147] +
    dwdot29dscqss5 * dscqss_dsc[182] + dwdot29dscqss6 * dscqss_dsc[217] +
    dwdot29dscqss7 * dscqss_dsc[252] + dwdot29dscqss9 * dscqss_dsc[322] +
    dwdot29dscqss11 * dscqss_dsc[392] + dwdot29dscqss12 * dscqss_dsc[427] +
    dwdot29dscqss14 * dscqss_dsc[497] + dwdot29dscqss13 * dscqss_dsc[462] +
    dwdot29dscqss15 * dscqss_dsc[532] + dwdot29dscqss8 * dscqss_dsc[287] +
    dwdot29dscqss10 * dscqss_dsc[357];
  J[317] =
    dwdot29dsc8 + dwdot29dscqss0 * dscqss_dsc[8] +
    dwdot29dscqss16 * dscqss_dsc[568] + dwdot29dscqss1 * dscqss_dsc[43] +
    dwdot29dscqss17 * dscqss_dsc[603] + dwdot29dscqss2 * dscqss_dsc[78] +
    dwdot29dscqss3 * dscqss_dsc[113] + dwdot29dscqss4 * dscqss_dsc[148] +
    dwdot29dscqss5 * dscqss_dsc[183] + dwdot29dscqss6 * dscqss_dsc[218] +
    dwdot29dscqss7 * dscqss_dsc[253] + dwdot29dscqss9 * dscqss_dsc[323] +
    dwdot29dscqss11 * dscqss_dsc[393] + dwdot29dscqss12 * dscqss_dsc[428] +
    dwdot29dscqss14 * dscqss_dsc[498] + dwdot29dscqss13 * dscqss_dsc[463] +
    dwdot29dscqss15 * dscqss_dsc[533] + dwdot29dscqss8 * dscqss_dsc[288] +
    dwdot29dscqss10 * dscqss_dsc[358];
  J[353] =
    dwdot29dsc9 + dwdot29dscqss0 * dscqss_dsc[9] +
    dwdot29dscqss16 * dscqss_dsc[569] + dwdot29dscqss1 * dscqss_dsc[44] +
    dwdot29dscqss17 * dscqss_dsc[604] + dwdot29dscqss2 * dscqss_dsc[79] +
    dwdot29dscqss3 * dscqss_dsc[114] + dwdot29dscqss4 * dscqss_dsc[149] +
    dwdot29dscqss5 * dscqss_dsc[184] + dwdot29dscqss6 * dscqss_dsc[219] +
    dwdot29dscqss7 * dscqss_dsc[254] + dwdot29dscqss9 * dscqss_dsc[324] +
    dwdot29dscqss11 * dscqss_dsc[394] + dwdot29dscqss12 * dscqss_dsc[429] +
    dwdot29dscqss14 * dscqss_dsc[499] + dwdot29dscqss13 * dscqss_dsc[464] +
    dwdot29dscqss15 * dscqss_dsc[534] + dwdot29dscqss8 * dscqss_dsc[289] +
    dwdot29dscqss10 * dscqss_dsc[359];
  J[389] =
    dwdot29dsc10 + dwdot29dscqss0 * dscqss_dsc[10] +
    dwdot29dscqss16 * dscqss_dsc[570] + dwdot29dscqss1 * dscqss_dsc[45] +
    dwdot29dscqss17 * dscqss_dsc[605] + dwdot29dscqss2 * dscqss_dsc[80] +
    dwdot29dscqss3 * dscqss_dsc[115] + dwdot29dscqss4 * dscqss_dsc[150] +
    dwdot29dscqss5 * dscqss_dsc[185] + dwdot29dscqss6 * dscqss_dsc[220] +
    dwdot29dscqss7 * dscqss_dsc[255] + dwdot29dscqss9 * dscqss_dsc[325] +
    dwdot29dscqss11 * dscqss_dsc[395] + dwdot29dscqss12 * dscqss_dsc[430] +
    dwdot29dscqss14 * dscqss_dsc[500] + dwdot29dscqss13 * dscqss_dsc[465] +
    dwdot29dscqss15 * dscqss_dsc[535] + dwdot29dscqss8 * dscqss_dsc[290] +
    dwdot29dscqss10 * dscqss_dsc[360];
  J[425] =
    dwdot29dsc11 + dwdot29dscqss0 * dscqss_dsc[11] +
    dwdot29dscqss16 * dscqss_dsc[571] + dwdot29dscqss1 * dscqss_dsc[46] +
    dwdot29dscqss17 * dscqss_dsc[606] + dwdot29dscqss2 * dscqss_dsc[81] +
    dwdot29dscqss3 * dscqss_dsc[116] + dwdot29dscqss4 * dscqss_dsc[151] +
    dwdot29dscqss5 * dscqss_dsc[186] + dwdot29dscqss6 * dscqss_dsc[221] +
    dwdot29dscqss7 * dscqss_dsc[256] + dwdot29dscqss9 * dscqss_dsc[326] +
    dwdot29dscqss11 * dscqss_dsc[396] + dwdot29dscqss12 * dscqss_dsc[431] +
    dwdot29dscqss14 * dscqss_dsc[501] + dwdot29dscqss13 * dscqss_dsc[466] +
    dwdot29dscqss15 * dscqss_dsc[536] + dwdot29dscqss8 * dscqss_dsc[291] +
    dwdot29dscqss10 * dscqss_dsc[361];
  J[461] =
    dwdot29dsc12 + dwdot29dscqss0 * dscqss_dsc[12] +
    dwdot29dscqss16 * dscqss_dsc[572] + dwdot29dscqss1 * dscqss_dsc[47] +
    dwdot29dscqss17 * dscqss_dsc[607] + dwdot29dscqss2 * dscqss_dsc[82] +
    dwdot29dscqss3 * dscqss_dsc[117] + dwdot29dscqss4 * dscqss_dsc[152] +
    dwdot29dscqss5 * dscqss_dsc[187] + dwdot29dscqss6 * dscqss_dsc[222] +
    dwdot29dscqss7 * dscqss_dsc[257] + dwdot29dscqss9 * dscqss_dsc[327] +
    dwdot29dscqss11 * dscqss_dsc[397] + dwdot29dscqss12 * dscqss_dsc[432] +
    dwdot29dscqss14 * dscqss_dsc[502] + dwdot29dscqss13 * dscqss_dsc[467] +
    dwdot29dscqss15 * dscqss_dsc[537] + dwdot29dscqss8 * dscqss_dsc[292] +
    dwdot29dscqss10 * dscqss_dsc[362];
  J[497] =
    dwdot29dsc13 + dwdot29dscqss0 * dscqss_dsc[13] +
    dwdot29dscqss16 * dscqss_dsc[573] + dwdot29dscqss1 * dscqss_dsc[48] +
    dwdot29dscqss17 * dscqss_dsc[608] + dwdot29dscqss2 * dscqss_dsc[83] +
    dwdot29dscqss3 * dscqss_dsc[118] + dwdot29dscqss4 * dscqss_dsc[153] +
    dwdot29dscqss5 * dscqss_dsc[188] + dwdot29dscqss6 * dscqss_dsc[223] +
    dwdot29dscqss7 * dscqss_dsc[258] + dwdot29dscqss9 * dscqss_dsc[328] +
    dwdot29dscqss11 * dscqss_dsc[398] + dwdot29dscqss12 * dscqss_dsc[433] +
    dwdot29dscqss14 * dscqss_dsc[503] + dwdot29dscqss13 * dscqss_dsc[468] +
    dwdot29dscqss15 * dscqss_dsc[538] + dwdot29dscqss8 * dscqss_dsc[293] +
    dwdot29dscqss10 * dscqss_dsc[363];
  J[533] =
    dwdot29dsc14 + dwdot29dscqss0 * dscqss_dsc[14] +
    dwdot29dscqss16 * dscqss_dsc[574] + dwdot29dscqss1 * dscqss_dsc[49] +
    dwdot29dscqss17 * dscqss_dsc[609] + dwdot29dscqss2 * dscqss_dsc[84] +
    dwdot29dscqss3 * dscqss_dsc[119] + dwdot29dscqss4 * dscqss_dsc[154] +
    dwdot29dscqss5 * dscqss_dsc[189] + dwdot29dscqss6 * dscqss_dsc[224] +
    dwdot29dscqss7 * dscqss_dsc[259] + dwdot29dscqss9 * dscqss_dsc[329] +
    dwdot29dscqss11 * dscqss_dsc[399] + dwdot29dscqss12 * dscqss_dsc[434] +
    dwdot29dscqss14 * dscqss_dsc[504] + dwdot29dscqss13 * dscqss_dsc[469] +
    dwdot29dscqss15 * dscqss_dsc[539] + dwdot29dscqss8 * dscqss_dsc[294] +
    dwdot29dscqss10 * dscqss_dsc[364];
  J[569] =
    dwdot29dsc15 + dwdot29dscqss0 * dscqss_dsc[15] +
    dwdot29dscqss16 * dscqss_dsc[575] + dwdot29dscqss1 * dscqss_dsc[50] +
    dwdot29dscqss17 * dscqss_dsc[610] + dwdot29dscqss2 * dscqss_dsc[85] +
    dwdot29dscqss3 * dscqss_dsc[120] + dwdot29dscqss4 * dscqss_dsc[155] +
    dwdot29dscqss5 * dscqss_dsc[190] + dwdot29dscqss6 * dscqss_dsc[225] +
    dwdot29dscqss7 * dscqss_dsc[260] + dwdot29dscqss9 * dscqss_dsc[330] +
    dwdot29dscqss11 * dscqss_dsc[400] + dwdot29dscqss12 * dscqss_dsc[435] +
    dwdot29dscqss14 * dscqss_dsc[505] + dwdot29dscqss13 * dscqss_dsc[470] +
    dwdot29dscqss15 * dscqss_dsc[540] + dwdot29dscqss8 * dscqss_dsc[295] +
    dwdot29dscqss10 * dscqss_dsc[365];
  J[605] =
    dwdot29dsc16 + dwdot29dscqss0 * dscqss_dsc[16] +
    dwdot29dscqss16 * dscqss_dsc[576] + dwdot29dscqss1 * dscqss_dsc[51] +
    dwdot29dscqss17 * dscqss_dsc[611] + dwdot29dscqss2 * dscqss_dsc[86] +
    dwdot29dscqss3 * dscqss_dsc[121] + dwdot29dscqss4 * dscqss_dsc[156] +
    dwdot29dscqss5 * dscqss_dsc[191] + dwdot29dscqss6 * dscqss_dsc[226] +
    dwdot29dscqss7 * dscqss_dsc[261] + dwdot29dscqss9 * dscqss_dsc[331] +
    dwdot29dscqss11 * dscqss_dsc[401] + dwdot29dscqss12 * dscqss_dsc[436] +
    dwdot29dscqss14 * dscqss_dsc[506] + dwdot29dscqss13 * dscqss_dsc[471] +
    dwdot29dscqss15 * dscqss_dsc[541] + dwdot29dscqss8 * dscqss_dsc[296] +
    dwdot29dscqss10 * dscqss_dsc[366];
  J[641] =
    dwdot29dsc17 + dwdot29dscqss0 * dscqss_dsc[17] +
    dwdot29dscqss16 * dscqss_dsc[577] + dwdot29dscqss1 * dscqss_dsc[52] +
    dwdot29dscqss17 * dscqss_dsc[612] + dwdot29dscqss2 * dscqss_dsc[87] +
    dwdot29dscqss3 * dscqss_dsc[122] + dwdot29dscqss4 * dscqss_dsc[157] +
    dwdot29dscqss5 * dscqss_dsc[192] + dwdot29dscqss6 * dscqss_dsc[227] +
    dwdot29dscqss7 * dscqss_dsc[262] + dwdot29dscqss9 * dscqss_dsc[332] +
    dwdot29dscqss11 * dscqss_dsc[402] + dwdot29dscqss12 * dscqss_dsc[437] +
    dwdot29dscqss14 * dscqss_dsc[507] + dwdot29dscqss13 * dscqss_dsc[472] +
    dwdot29dscqss15 * dscqss_dsc[542] + dwdot29dscqss8 * dscqss_dsc[297] +
    dwdot29dscqss10 * dscqss_dsc[367];
  J[677] =
    dwdot29dsc18 + dwdot29dscqss0 * dscqss_dsc[18] +
    dwdot29dscqss16 * dscqss_dsc[578] + dwdot29dscqss1 * dscqss_dsc[53] +
    dwdot29dscqss17 * dscqss_dsc[613] + dwdot29dscqss2 * dscqss_dsc[88] +
    dwdot29dscqss3 * dscqss_dsc[123] + dwdot29dscqss4 * dscqss_dsc[158] +
    dwdot29dscqss5 * dscqss_dsc[193] + dwdot29dscqss6 * dscqss_dsc[228] +
    dwdot29dscqss7 * dscqss_dsc[263] + dwdot29dscqss9 * dscqss_dsc[333] +
    dwdot29dscqss11 * dscqss_dsc[403] + dwdot29dscqss12 * dscqss_dsc[438] +
    dwdot29dscqss14 * dscqss_dsc[508] + dwdot29dscqss13 * dscqss_dsc[473] +
    dwdot29dscqss15 * dscqss_dsc[543] + dwdot29dscqss8 * dscqss_dsc[298] +
    dwdot29dscqss10 * dscqss_dsc[368];
  J[713] =
    dwdot29dsc19 + dwdot29dscqss0 * dscqss_dsc[19] +
    dwdot29dscqss16 * dscqss_dsc[579] + dwdot29dscqss1 * dscqss_dsc[54] +
    dwdot29dscqss17 * dscqss_dsc[614] + dwdot29dscqss2 * dscqss_dsc[89] +
    dwdot29dscqss3 * dscqss_dsc[124] + dwdot29dscqss4 * dscqss_dsc[159] +
    dwdot29dscqss5 * dscqss_dsc[194] + dwdot29dscqss6 * dscqss_dsc[229] +
    dwdot29dscqss7 * dscqss_dsc[264] + dwdot29dscqss9 * dscqss_dsc[334] +
    dwdot29dscqss11 * dscqss_dsc[404] + dwdot29dscqss12 * dscqss_dsc[439] +
    dwdot29dscqss14 * dscqss_dsc[509] + dwdot29dscqss13 * dscqss_dsc[474] +
    dwdot29dscqss15 * dscqss_dsc[544] + dwdot29dscqss8 * dscqss_dsc[299] +
    dwdot29dscqss10 * dscqss_dsc[369];
  J[749] =
    dwdot29dsc20 + dwdot29dscqss0 * dscqss_dsc[20] +
    dwdot29dscqss16 * dscqss_dsc[580] + dwdot29dscqss1 * dscqss_dsc[55] +
    dwdot29dscqss17 * dscqss_dsc[615] + dwdot29dscqss2 * dscqss_dsc[90] +
    dwdot29dscqss3 * dscqss_dsc[125] + dwdot29dscqss4 * dscqss_dsc[160] +
    dwdot29dscqss5 * dscqss_dsc[195] + dwdot29dscqss6 * dscqss_dsc[230] +
    dwdot29dscqss7 * dscqss_dsc[265] + dwdot29dscqss9 * dscqss_dsc[335] +
    dwdot29dscqss11 * dscqss_dsc[405] + dwdot29dscqss12 * dscqss_dsc[440] +
    dwdot29dscqss14 * dscqss_dsc[510] + dwdot29dscqss13 * dscqss_dsc[475] +
    dwdot29dscqss15 * dscqss_dsc[545] + dwdot29dscqss8 * dscqss_dsc[300] +
    dwdot29dscqss10 * dscqss_dsc[370];
  J[785] =
    dwdot29dsc21 + dwdot29dscqss0 * dscqss_dsc[21] +
    dwdot29dscqss16 * dscqss_dsc[581] + dwdot29dscqss1 * dscqss_dsc[56] +
    dwdot29dscqss17 * dscqss_dsc[616] + dwdot29dscqss2 * dscqss_dsc[91] +
    dwdot29dscqss3 * dscqss_dsc[126] + dwdot29dscqss4 * dscqss_dsc[161] +
    dwdot29dscqss5 * dscqss_dsc[196] + dwdot29dscqss6 * dscqss_dsc[231] +
    dwdot29dscqss7 * dscqss_dsc[266] + dwdot29dscqss9 * dscqss_dsc[336] +
    dwdot29dscqss11 * dscqss_dsc[406] + dwdot29dscqss12 * dscqss_dsc[441] +
    dwdot29dscqss14 * dscqss_dsc[511] + dwdot29dscqss13 * dscqss_dsc[476] +
    dwdot29dscqss15 * dscqss_dsc[546] + dwdot29dscqss8 * dscqss_dsc[301] +
    dwdot29dscqss10 * dscqss_dsc[371];
  J[821] =
    dwdot29dsc22 + dwdot29dscqss0 * dscqss_dsc[22] +
    dwdot29dscqss16 * dscqss_dsc[582] + dwdot29dscqss1 * dscqss_dsc[57] +
    dwdot29dscqss17 * dscqss_dsc[617] + dwdot29dscqss2 * dscqss_dsc[92] +
    dwdot29dscqss3 * dscqss_dsc[127] + dwdot29dscqss4 * dscqss_dsc[162] +
    dwdot29dscqss5 * dscqss_dsc[197] + dwdot29dscqss6 * dscqss_dsc[232] +
    dwdot29dscqss7 * dscqss_dsc[267] + dwdot29dscqss9 * dscqss_dsc[337] +
    dwdot29dscqss11 * dscqss_dsc[407] + dwdot29dscqss12 * dscqss_dsc[442] +
    dwdot29dscqss14 * dscqss_dsc[512] + dwdot29dscqss13 * dscqss_dsc[477] +
    dwdot29dscqss15 * dscqss_dsc[547] + dwdot29dscqss8 * dscqss_dsc[302] +
    dwdot29dscqss10 * dscqss_dsc[372];
  J[857] =
    dwdot29dsc23 + dwdot29dscqss0 * dscqss_dsc[23] +
    dwdot29dscqss16 * dscqss_dsc[583] + dwdot29dscqss1 * dscqss_dsc[58] +
    dwdot29dscqss17 * dscqss_dsc[618] + dwdot29dscqss2 * dscqss_dsc[93] +
    dwdot29dscqss3 * dscqss_dsc[128] + dwdot29dscqss4 * dscqss_dsc[163] +
    dwdot29dscqss5 * dscqss_dsc[198] + dwdot29dscqss6 * dscqss_dsc[233] +
    dwdot29dscqss7 * dscqss_dsc[268] + dwdot29dscqss9 * dscqss_dsc[338] +
    dwdot29dscqss11 * dscqss_dsc[408] + dwdot29dscqss12 * dscqss_dsc[443] +
    dwdot29dscqss14 * dscqss_dsc[513] + dwdot29dscqss13 * dscqss_dsc[478] +
    dwdot29dscqss15 * dscqss_dsc[548] + dwdot29dscqss8 * dscqss_dsc[303] +
    dwdot29dscqss10 * dscqss_dsc[373];
  J[893] =
    dwdot29dsc24 + dwdot29dscqss0 * dscqss_dsc[24] +
    dwdot29dscqss16 * dscqss_dsc[584] + dwdot29dscqss1 * dscqss_dsc[59] +
    dwdot29dscqss17 * dscqss_dsc[619] + dwdot29dscqss2 * dscqss_dsc[94] +
    dwdot29dscqss3 * dscqss_dsc[129] + dwdot29dscqss4 * dscqss_dsc[164] +
    dwdot29dscqss5 * dscqss_dsc[199] + dwdot29dscqss6 * dscqss_dsc[234] +
    dwdot29dscqss7 * dscqss_dsc[269] + dwdot29dscqss9 * dscqss_dsc[339] +
    dwdot29dscqss11 * dscqss_dsc[409] + dwdot29dscqss12 * dscqss_dsc[444] +
    dwdot29dscqss14 * dscqss_dsc[514] + dwdot29dscqss13 * dscqss_dsc[479] +
    dwdot29dscqss15 * dscqss_dsc[549] + dwdot29dscqss8 * dscqss_dsc[304] +
    dwdot29dscqss10 * dscqss_dsc[374];
  J[929] =
    dwdot29dsc25 + dwdot29dscqss0 * dscqss_dsc[25] +
    dwdot29dscqss16 * dscqss_dsc[585] + dwdot29dscqss1 * dscqss_dsc[60] +
    dwdot29dscqss17 * dscqss_dsc[620] + dwdot29dscqss2 * dscqss_dsc[95] +
    dwdot29dscqss3 * dscqss_dsc[130] + dwdot29dscqss4 * dscqss_dsc[165] +
    dwdot29dscqss5 * dscqss_dsc[200] + dwdot29dscqss6 * dscqss_dsc[235] +
    dwdot29dscqss7 * dscqss_dsc[270] + dwdot29dscqss9 * dscqss_dsc[340] +
    dwdot29dscqss11 * dscqss_dsc[410] + dwdot29dscqss12 * dscqss_dsc[445] +
    dwdot29dscqss14 * dscqss_dsc[515] + dwdot29dscqss13 * dscqss_dsc[480] +
    dwdot29dscqss15 * dscqss_dsc[550] + dwdot29dscqss8 * dscqss_dsc[305] +
    dwdot29dscqss10 * dscqss_dsc[375];
  J[965] =
    dwdot29dsc26 + dwdot29dscqss0 * dscqss_dsc[26] +
    dwdot29dscqss16 * dscqss_dsc[586] + dwdot29dscqss1 * dscqss_dsc[61] +
    dwdot29dscqss17 * dscqss_dsc[621] + dwdot29dscqss2 * dscqss_dsc[96] +
    dwdot29dscqss3 * dscqss_dsc[131] + dwdot29dscqss4 * dscqss_dsc[166] +
    dwdot29dscqss5 * dscqss_dsc[201] + dwdot29dscqss6 * dscqss_dsc[236] +
    dwdot29dscqss7 * dscqss_dsc[271] + dwdot29dscqss9 * dscqss_dsc[341] +
    dwdot29dscqss11 * dscqss_dsc[411] + dwdot29dscqss12 * dscqss_dsc[446] +
    dwdot29dscqss14 * dscqss_dsc[516] + dwdot29dscqss13 * dscqss_dsc[481] +
    dwdot29dscqss15 * dscqss_dsc[551] + dwdot29dscqss8 * dscqss_dsc[306] +
    dwdot29dscqss10 * dscqss_dsc[376];
  J[1001] =
    dwdot29dsc27 + dwdot29dscqss0 * dscqss_dsc[27] +
    dwdot29dscqss16 * dscqss_dsc[587] + dwdot29dscqss1 * dscqss_dsc[62] +
    dwdot29dscqss17 * dscqss_dsc[622] + dwdot29dscqss2 * dscqss_dsc[97] +
    dwdot29dscqss3 * dscqss_dsc[132] + dwdot29dscqss4 * dscqss_dsc[167] +
    dwdot29dscqss5 * dscqss_dsc[202] + dwdot29dscqss6 * dscqss_dsc[237] +
    dwdot29dscqss7 * dscqss_dsc[272] + dwdot29dscqss9 * dscqss_dsc[342] +
    dwdot29dscqss11 * dscqss_dsc[412] + dwdot29dscqss12 * dscqss_dsc[447] +
    dwdot29dscqss14 * dscqss_dsc[517] + dwdot29dscqss13 * dscqss_dsc[482] +
    dwdot29dscqss15 * dscqss_dsc[552] + dwdot29dscqss8 * dscqss_dsc[307] +
    dwdot29dscqss10 * dscqss_dsc[377];
  J[1037] =
    dwdot29dsc28 + dwdot29dscqss0 * dscqss_dsc[28] +
    dwdot29dscqss16 * dscqss_dsc[588] + dwdot29dscqss1 * dscqss_dsc[63] +
    dwdot29dscqss17 * dscqss_dsc[623] + dwdot29dscqss2 * dscqss_dsc[98] +
    dwdot29dscqss3 * dscqss_dsc[133] + dwdot29dscqss4 * dscqss_dsc[168] +
    dwdot29dscqss5 * dscqss_dsc[203] + dwdot29dscqss6 * dscqss_dsc[238] +
    dwdot29dscqss7 * dscqss_dsc[273] + dwdot29dscqss9 * dscqss_dsc[343] +
    dwdot29dscqss11 * dscqss_dsc[413] + dwdot29dscqss12 * dscqss_dsc[448] +
    dwdot29dscqss14 * dscqss_dsc[518] + dwdot29dscqss13 * dscqss_dsc[483] +
    dwdot29dscqss15 * dscqss_dsc[553] + dwdot29dscqss8 * dscqss_dsc[308] +
    dwdot29dscqss10 * dscqss_dsc[378];
  J[1073] =
    dwdot29dsc29 + dwdot29dscqss0 * dscqss_dsc[29] +
    dwdot29dscqss16 * dscqss_dsc[589] + dwdot29dscqss1 * dscqss_dsc[64] +
    dwdot29dscqss17 * dscqss_dsc[624] + dwdot29dscqss2 * dscqss_dsc[99] +
    dwdot29dscqss3 * dscqss_dsc[134] + dwdot29dscqss4 * dscqss_dsc[169] +
    dwdot29dscqss5 * dscqss_dsc[204] + dwdot29dscqss6 * dscqss_dsc[239] +
    dwdot29dscqss7 * dscqss_dsc[274] + dwdot29dscqss9 * dscqss_dsc[344] +
    dwdot29dscqss11 * dscqss_dsc[414] + dwdot29dscqss12 * dscqss_dsc[449] +
    dwdot29dscqss14 * dscqss_dsc[519] + dwdot29dscqss13 * dscqss_dsc[484] +
    dwdot29dscqss15 * dscqss_dsc[554] + dwdot29dscqss8 * dscqss_dsc[309] +
    dwdot29dscqss10 * dscqss_dsc[379];
  J[1109] =
    dwdot29dsc30 + dwdot29dscqss0 * dscqss_dsc[30] +
    dwdot29dscqss16 * dscqss_dsc[590] + dwdot29dscqss1 * dscqss_dsc[65] +
    dwdot29dscqss17 * dscqss_dsc[625] + dwdot29dscqss2 * dscqss_dsc[100] +
    dwdot29dscqss3 * dscqss_dsc[135] + dwdot29dscqss4 * dscqss_dsc[170] +
    dwdot29dscqss5 * dscqss_dsc[205] + dwdot29dscqss6 * dscqss_dsc[240] +
    dwdot29dscqss7 * dscqss_dsc[275] + dwdot29dscqss9 * dscqss_dsc[345] +
    dwdot29dscqss11 * dscqss_dsc[415] + dwdot29dscqss12 * dscqss_dsc[450] +
    dwdot29dscqss14 * dscqss_dsc[520] + dwdot29dscqss13 * dscqss_dsc[485] +
    dwdot29dscqss15 * dscqss_dsc[555] + dwdot29dscqss8 * dscqss_dsc[310] +
    dwdot29dscqss10 * dscqss_dsc[380];
  J[1145] =
    dwdot29dsc31 + dwdot29dscqss0 * dscqss_dsc[31] +
    dwdot29dscqss16 * dscqss_dsc[591] + dwdot29dscqss1 * dscqss_dsc[66] +
    dwdot29dscqss17 * dscqss_dsc[626] + dwdot29dscqss2 * dscqss_dsc[101] +
    dwdot29dscqss3 * dscqss_dsc[136] + dwdot29dscqss4 * dscqss_dsc[171] +
    dwdot29dscqss5 * dscqss_dsc[206] + dwdot29dscqss6 * dscqss_dsc[241] +
    dwdot29dscqss7 * dscqss_dsc[276] + dwdot29dscqss9 * dscqss_dsc[346] +
    dwdot29dscqss11 * dscqss_dsc[416] + dwdot29dscqss12 * dscqss_dsc[451] +
    dwdot29dscqss14 * dscqss_dsc[521] + dwdot29dscqss13 * dscqss_dsc[486] +
    dwdot29dscqss15 * dscqss_dsc[556] + dwdot29dscqss8 * dscqss_dsc[311] +
    dwdot29dscqss10 * dscqss_dsc[381];
  J[1181] =
    dwdot29dsc32 + dwdot29dscqss0 * dscqss_dsc[32] +
    dwdot29dscqss16 * dscqss_dsc[592] + dwdot29dscqss1 * dscqss_dsc[67] +
    dwdot29dscqss17 * dscqss_dsc[627] + dwdot29dscqss2 * dscqss_dsc[102] +
    dwdot29dscqss3 * dscqss_dsc[137] + dwdot29dscqss4 * dscqss_dsc[172] +
    dwdot29dscqss5 * dscqss_dsc[207] + dwdot29dscqss6 * dscqss_dsc[242] +
    dwdot29dscqss7 * dscqss_dsc[277] + dwdot29dscqss9 * dscqss_dsc[347] +
    dwdot29dscqss11 * dscqss_dsc[417] + dwdot29dscqss12 * dscqss_dsc[452] +
    dwdot29dscqss14 * dscqss_dsc[522] + dwdot29dscqss13 * dscqss_dsc[487] +
    dwdot29dscqss15 * dscqss_dsc[557] + dwdot29dscqss8 * dscqss_dsc[312] +
    dwdot29dscqss10 * dscqss_dsc[382];
  J[1217] =
    dwdot29dsc33 + dwdot29dscqss0 * dscqss_dsc[33] +
    dwdot29dscqss16 * dscqss_dsc[593] + dwdot29dscqss1 * dscqss_dsc[68] +
    dwdot29dscqss17 * dscqss_dsc[628] + dwdot29dscqss2 * dscqss_dsc[103] +
    dwdot29dscqss3 * dscqss_dsc[138] + dwdot29dscqss4 * dscqss_dsc[173] +
    dwdot29dscqss5 * dscqss_dsc[208] + dwdot29dscqss6 * dscqss_dsc[243] +
    dwdot29dscqss7 * dscqss_dsc[278] + dwdot29dscqss9 * dscqss_dsc[348] +
    dwdot29dscqss11 * dscqss_dsc[418] + dwdot29dscqss12 * dscqss_dsc[453] +
    dwdot29dscqss14 * dscqss_dsc[523] + dwdot29dscqss13 * dscqss_dsc[488] +
    dwdot29dscqss15 * dscqss_dsc[558] + dwdot29dscqss8 * dscqss_dsc[313] +
    dwdot29dscqss10 * dscqss_dsc[383];
  J[1253] =
    dwdot29dsc34 + dwdot29dscqss0 * dscqss_dsc[34] +
    dwdot29dscqss16 * dscqss_dsc[594] + dwdot29dscqss1 * dscqss_dsc[69] +
    dwdot29dscqss17 * dscqss_dsc[629] + dwdot29dscqss2 * dscqss_dsc[104] +
    dwdot29dscqss3 * dscqss_dsc[139] + dwdot29dscqss4 * dscqss_dsc[174] +
    dwdot29dscqss5 * dscqss_dsc[209] + dwdot29dscqss6 * dscqss_dsc[244] +
    dwdot29dscqss7 * dscqss_dsc[279] + dwdot29dscqss9 * dscqss_dsc[349] +
    dwdot29dscqss11 * dscqss_dsc[419] + dwdot29dscqss12 * dscqss_dsc[454] +
    dwdot29dscqss14 * dscqss_dsc[524] + dwdot29dscqss13 * dscqss_dsc[489] +
    dwdot29dscqss15 * dscqss_dsc[559] + dwdot29dscqss8 * dscqss_dsc[314] +
    dwdot29dscqss10 * dscqss_dsc[384];
  J[30] =
    dwdot30dsc0 + dwdot30dscqss0 * dscqss_dsc[0] +
    dwdot30dscqss16 * dscqss_dsc[560] + dwdot30dscqss1 * dscqss_dsc[35] +
    dwdot30dscqss17 * dscqss_dsc[595] + dwdot30dscqss2 * dscqss_dsc[70] +
    dwdot30dscqss3 * dscqss_dsc[105] + dwdot30dscqss4 * dscqss_dsc[140] +
    dwdot30dscqss5 * dscqss_dsc[175] + dwdot30dscqss6 * dscqss_dsc[210] +
    dwdot30dscqss7 * dscqss_dsc[245] + dwdot30dscqss9 * dscqss_dsc[315] +
    dwdot30dscqss11 * dscqss_dsc[385] + dwdot30dscqss12 * dscqss_dsc[420] +
    dwdot30dscqss14 * dscqss_dsc[490] + dwdot30dscqss13 * dscqss_dsc[455] +
    dwdot30dscqss15 * dscqss_dsc[525] + dwdot30dscqss8 * dscqss_dsc[280] +
    dwdot30dscqss10 * dscqss_dsc[350];
  J[66] =
    dwdot30dsc1 + dwdot30dscqss0 * dscqss_dsc[1] +
    dwdot30dscqss16 * dscqss_dsc[561] + dwdot30dscqss1 * dscqss_dsc[36] +
    dwdot30dscqss17 * dscqss_dsc[596] + dwdot30dscqss2 * dscqss_dsc[71] +
    dwdot30dscqss3 * dscqss_dsc[106] + dwdot30dscqss4 * dscqss_dsc[141] +
    dwdot30dscqss5 * dscqss_dsc[176] + dwdot30dscqss6 * dscqss_dsc[211] +
    dwdot30dscqss7 * dscqss_dsc[246] + dwdot30dscqss9 * dscqss_dsc[316] +
    dwdot30dscqss11 * dscqss_dsc[386] + dwdot30dscqss12 * dscqss_dsc[421] +
    dwdot30dscqss14 * dscqss_dsc[491] + dwdot30dscqss13 * dscqss_dsc[456] +
    dwdot30dscqss15 * dscqss_dsc[526] + dwdot30dscqss8 * dscqss_dsc[281] +
    dwdot30dscqss10 * dscqss_dsc[351];
  J[102] =
    dwdot30dsc2 + dwdot30dscqss0 * dscqss_dsc[2] +
    dwdot30dscqss16 * dscqss_dsc[562] + dwdot30dscqss1 * dscqss_dsc[37] +
    dwdot30dscqss17 * dscqss_dsc[597] + dwdot30dscqss2 * dscqss_dsc[72] +
    dwdot30dscqss3 * dscqss_dsc[107] + dwdot30dscqss4 * dscqss_dsc[142] +
    dwdot30dscqss5 * dscqss_dsc[177] + dwdot30dscqss6 * dscqss_dsc[212] +
    dwdot30dscqss7 * dscqss_dsc[247] + dwdot30dscqss9 * dscqss_dsc[317] +
    dwdot30dscqss11 * dscqss_dsc[387] + dwdot30dscqss12 * dscqss_dsc[422] +
    dwdot30dscqss14 * dscqss_dsc[492] + dwdot30dscqss13 * dscqss_dsc[457] +
    dwdot30dscqss15 * dscqss_dsc[527] + dwdot30dscqss8 * dscqss_dsc[282] +
    dwdot30dscqss10 * dscqss_dsc[352];
  J[138] =
    dwdot30dsc3 + dwdot30dscqss0 * dscqss_dsc[3] +
    dwdot30dscqss16 * dscqss_dsc[563] + dwdot30dscqss1 * dscqss_dsc[38] +
    dwdot30dscqss17 * dscqss_dsc[598] + dwdot30dscqss2 * dscqss_dsc[73] +
    dwdot30dscqss3 * dscqss_dsc[108] + dwdot30dscqss4 * dscqss_dsc[143] +
    dwdot30dscqss5 * dscqss_dsc[178] + dwdot30dscqss6 * dscqss_dsc[213] +
    dwdot30dscqss7 * dscqss_dsc[248] + dwdot30dscqss9 * dscqss_dsc[318] +
    dwdot30dscqss11 * dscqss_dsc[388] + dwdot30dscqss12 * dscqss_dsc[423] +
    dwdot30dscqss14 * dscqss_dsc[493] + dwdot30dscqss13 * dscqss_dsc[458] +
    dwdot30dscqss15 * dscqss_dsc[528] + dwdot30dscqss8 * dscqss_dsc[283] +
    dwdot30dscqss10 * dscqss_dsc[353];
  J[174] =
    dwdot30dsc4 + dwdot30dscqss0 * dscqss_dsc[4] +
    dwdot30dscqss16 * dscqss_dsc[564] + dwdot30dscqss1 * dscqss_dsc[39] +
    dwdot30dscqss17 * dscqss_dsc[599] + dwdot30dscqss2 * dscqss_dsc[74] +
    dwdot30dscqss3 * dscqss_dsc[109] + dwdot30dscqss4 * dscqss_dsc[144] +
    dwdot30dscqss5 * dscqss_dsc[179] + dwdot30dscqss6 * dscqss_dsc[214] +
    dwdot30dscqss7 * dscqss_dsc[249] + dwdot30dscqss9 * dscqss_dsc[319] +
    dwdot30dscqss11 * dscqss_dsc[389] + dwdot30dscqss12 * dscqss_dsc[424] +
    dwdot30dscqss14 * dscqss_dsc[494] + dwdot30dscqss13 * dscqss_dsc[459] +
    dwdot30dscqss15 * dscqss_dsc[529] + dwdot30dscqss8 * dscqss_dsc[284] +
    dwdot30dscqss10 * dscqss_dsc[354];
  J[210] =
    dwdot30dsc5 + dwdot30dscqss0 * dscqss_dsc[5] +
    dwdot30dscqss16 * dscqss_dsc[565] + dwdot30dscqss1 * dscqss_dsc[40] +
    dwdot30dscqss17 * dscqss_dsc[600] + dwdot30dscqss2 * dscqss_dsc[75] +
    dwdot30dscqss3 * dscqss_dsc[110] + dwdot30dscqss4 * dscqss_dsc[145] +
    dwdot30dscqss5 * dscqss_dsc[180] + dwdot30dscqss6 * dscqss_dsc[215] +
    dwdot30dscqss7 * dscqss_dsc[250] + dwdot30dscqss9 * dscqss_dsc[320] +
    dwdot30dscqss11 * dscqss_dsc[390] + dwdot30dscqss12 * dscqss_dsc[425] +
    dwdot30dscqss14 * dscqss_dsc[495] + dwdot30dscqss13 * dscqss_dsc[460] +
    dwdot30dscqss15 * dscqss_dsc[530] + dwdot30dscqss8 * dscqss_dsc[285] +
    dwdot30dscqss10 * dscqss_dsc[355];
  J[246] =
    dwdot30dsc6 + dwdot30dscqss0 * dscqss_dsc[6] +
    dwdot30dscqss16 * dscqss_dsc[566] + dwdot30dscqss1 * dscqss_dsc[41] +
    dwdot30dscqss17 * dscqss_dsc[601] + dwdot30dscqss2 * dscqss_dsc[76] +
    dwdot30dscqss3 * dscqss_dsc[111] + dwdot30dscqss4 * dscqss_dsc[146] +
    dwdot30dscqss5 * dscqss_dsc[181] + dwdot30dscqss6 * dscqss_dsc[216] +
    dwdot30dscqss7 * dscqss_dsc[251] + dwdot30dscqss9 * dscqss_dsc[321] +
    dwdot30dscqss11 * dscqss_dsc[391] + dwdot30dscqss12 * dscqss_dsc[426] +
    dwdot30dscqss14 * dscqss_dsc[496] + dwdot30dscqss13 * dscqss_dsc[461] +
    dwdot30dscqss15 * dscqss_dsc[531] + dwdot30dscqss8 * dscqss_dsc[286] +
    dwdot30dscqss10 * dscqss_dsc[356];
  J[282] =
    dwdot30dsc7 + dwdot30dscqss0 * dscqss_dsc[7] +
    dwdot30dscqss16 * dscqss_dsc[567] + dwdot30dscqss1 * dscqss_dsc[42] +
    dwdot30dscqss17 * dscqss_dsc[602] + dwdot30dscqss2 * dscqss_dsc[77] +
    dwdot30dscqss3 * dscqss_dsc[112] + dwdot30dscqss4 * dscqss_dsc[147] +
    dwdot30dscqss5 * dscqss_dsc[182] + dwdot30dscqss6 * dscqss_dsc[217] +
    dwdot30dscqss7 * dscqss_dsc[252] + dwdot30dscqss9 * dscqss_dsc[322] +
    dwdot30dscqss11 * dscqss_dsc[392] + dwdot30dscqss12 * dscqss_dsc[427] +
    dwdot30dscqss14 * dscqss_dsc[497] + dwdot30dscqss13 * dscqss_dsc[462] +
    dwdot30dscqss15 * dscqss_dsc[532] + dwdot30dscqss8 * dscqss_dsc[287] +
    dwdot30dscqss10 * dscqss_dsc[357];
  J[318] =
    dwdot30dsc8 + dwdot30dscqss0 * dscqss_dsc[8] +
    dwdot30dscqss16 * dscqss_dsc[568] + dwdot30dscqss1 * dscqss_dsc[43] +
    dwdot30dscqss17 * dscqss_dsc[603] + dwdot30dscqss2 * dscqss_dsc[78] +
    dwdot30dscqss3 * dscqss_dsc[113] + dwdot30dscqss4 * dscqss_dsc[148] +
    dwdot30dscqss5 * dscqss_dsc[183] + dwdot30dscqss6 * dscqss_dsc[218] +
    dwdot30dscqss7 * dscqss_dsc[253] + dwdot30dscqss9 * dscqss_dsc[323] +
    dwdot30dscqss11 * dscqss_dsc[393] + dwdot30dscqss12 * dscqss_dsc[428] +
    dwdot30dscqss14 * dscqss_dsc[498] + dwdot30dscqss13 * dscqss_dsc[463] +
    dwdot30dscqss15 * dscqss_dsc[533] + dwdot30dscqss8 * dscqss_dsc[288] +
    dwdot30dscqss10 * dscqss_dsc[358];
  J[354] =
    dwdot30dsc9 + dwdot30dscqss0 * dscqss_dsc[9] +
    dwdot30dscqss16 * dscqss_dsc[569] + dwdot30dscqss1 * dscqss_dsc[44] +
    dwdot30dscqss17 * dscqss_dsc[604] + dwdot30dscqss2 * dscqss_dsc[79] +
    dwdot30dscqss3 * dscqss_dsc[114] + dwdot30dscqss4 * dscqss_dsc[149] +
    dwdot30dscqss5 * dscqss_dsc[184] + dwdot30dscqss6 * dscqss_dsc[219] +
    dwdot30dscqss7 * dscqss_dsc[254] + dwdot30dscqss9 * dscqss_dsc[324] +
    dwdot30dscqss11 * dscqss_dsc[394] + dwdot30dscqss12 * dscqss_dsc[429] +
    dwdot30dscqss14 * dscqss_dsc[499] + dwdot30dscqss13 * dscqss_dsc[464] +
    dwdot30dscqss15 * dscqss_dsc[534] + dwdot30dscqss8 * dscqss_dsc[289] +
    dwdot30dscqss10 * dscqss_dsc[359];
  J[390] =
    dwdot30dsc10 + dwdot30dscqss0 * dscqss_dsc[10] +
    dwdot30dscqss16 * dscqss_dsc[570] + dwdot30dscqss1 * dscqss_dsc[45] +
    dwdot30dscqss17 * dscqss_dsc[605] + dwdot30dscqss2 * dscqss_dsc[80] +
    dwdot30dscqss3 * dscqss_dsc[115] + dwdot30dscqss4 * dscqss_dsc[150] +
    dwdot30dscqss5 * dscqss_dsc[185] + dwdot30dscqss6 * dscqss_dsc[220] +
    dwdot30dscqss7 * dscqss_dsc[255] + dwdot30dscqss9 * dscqss_dsc[325] +
    dwdot30dscqss11 * dscqss_dsc[395] + dwdot30dscqss12 * dscqss_dsc[430] +
    dwdot30dscqss14 * dscqss_dsc[500] + dwdot30dscqss13 * dscqss_dsc[465] +
    dwdot30dscqss15 * dscqss_dsc[535] + dwdot30dscqss8 * dscqss_dsc[290] +
    dwdot30dscqss10 * dscqss_dsc[360];
  J[426] =
    dwdot30dsc11 + dwdot30dscqss0 * dscqss_dsc[11] +
    dwdot30dscqss16 * dscqss_dsc[571] + dwdot30dscqss1 * dscqss_dsc[46] +
    dwdot30dscqss17 * dscqss_dsc[606] + dwdot30dscqss2 * dscqss_dsc[81] +
    dwdot30dscqss3 * dscqss_dsc[116] + dwdot30dscqss4 * dscqss_dsc[151] +
    dwdot30dscqss5 * dscqss_dsc[186] + dwdot30dscqss6 * dscqss_dsc[221] +
    dwdot30dscqss7 * dscqss_dsc[256] + dwdot30dscqss9 * dscqss_dsc[326] +
    dwdot30dscqss11 * dscqss_dsc[396] + dwdot30dscqss12 * dscqss_dsc[431] +
    dwdot30dscqss14 * dscqss_dsc[501] + dwdot30dscqss13 * dscqss_dsc[466] +
    dwdot30dscqss15 * dscqss_dsc[536] + dwdot30dscqss8 * dscqss_dsc[291] +
    dwdot30dscqss10 * dscqss_dsc[361];
  J[462] =
    dwdot30dsc12 + dwdot30dscqss0 * dscqss_dsc[12] +
    dwdot30dscqss16 * dscqss_dsc[572] + dwdot30dscqss1 * dscqss_dsc[47] +
    dwdot30dscqss17 * dscqss_dsc[607] + dwdot30dscqss2 * dscqss_dsc[82] +
    dwdot30dscqss3 * dscqss_dsc[117] + dwdot30dscqss4 * dscqss_dsc[152] +
    dwdot30dscqss5 * dscqss_dsc[187] + dwdot30dscqss6 * dscqss_dsc[222] +
    dwdot30dscqss7 * dscqss_dsc[257] + dwdot30dscqss9 * dscqss_dsc[327] +
    dwdot30dscqss11 * dscqss_dsc[397] + dwdot30dscqss12 * dscqss_dsc[432] +
    dwdot30dscqss14 * dscqss_dsc[502] + dwdot30dscqss13 * dscqss_dsc[467] +
    dwdot30dscqss15 * dscqss_dsc[537] + dwdot30dscqss8 * dscqss_dsc[292] +
    dwdot30dscqss10 * dscqss_dsc[362];
  J[498] =
    dwdot30dsc13 + dwdot30dscqss0 * dscqss_dsc[13] +
    dwdot30dscqss16 * dscqss_dsc[573] + dwdot30dscqss1 * dscqss_dsc[48] +
    dwdot30dscqss17 * dscqss_dsc[608] + dwdot30dscqss2 * dscqss_dsc[83] +
    dwdot30dscqss3 * dscqss_dsc[118] + dwdot30dscqss4 * dscqss_dsc[153] +
    dwdot30dscqss5 * dscqss_dsc[188] + dwdot30dscqss6 * dscqss_dsc[223] +
    dwdot30dscqss7 * dscqss_dsc[258] + dwdot30dscqss9 * dscqss_dsc[328] +
    dwdot30dscqss11 * dscqss_dsc[398] + dwdot30dscqss12 * dscqss_dsc[433] +
    dwdot30dscqss14 * dscqss_dsc[503] + dwdot30dscqss13 * dscqss_dsc[468] +
    dwdot30dscqss15 * dscqss_dsc[538] + dwdot30dscqss8 * dscqss_dsc[293] +
    dwdot30dscqss10 * dscqss_dsc[363];
  J[534] =
    dwdot30dsc14 + dwdot30dscqss0 * dscqss_dsc[14] +
    dwdot30dscqss16 * dscqss_dsc[574] + dwdot30dscqss1 * dscqss_dsc[49] +
    dwdot30dscqss17 * dscqss_dsc[609] + dwdot30dscqss2 * dscqss_dsc[84] +
    dwdot30dscqss3 * dscqss_dsc[119] + dwdot30dscqss4 * dscqss_dsc[154] +
    dwdot30dscqss5 * dscqss_dsc[189] + dwdot30dscqss6 * dscqss_dsc[224] +
    dwdot30dscqss7 * dscqss_dsc[259] + dwdot30dscqss9 * dscqss_dsc[329] +
    dwdot30dscqss11 * dscqss_dsc[399] + dwdot30dscqss12 * dscqss_dsc[434] +
    dwdot30dscqss14 * dscqss_dsc[504] + dwdot30dscqss13 * dscqss_dsc[469] +
    dwdot30dscqss15 * dscqss_dsc[539] + dwdot30dscqss8 * dscqss_dsc[294] +
    dwdot30dscqss10 * dscqss_dsc[364];
  J[570] =
    dwdot30dsc15 + dwdot30dscqss0 * dscqss_dsc[15] +
    dwdot30dscqss16 * dscqss_dsc[575] + dwdot30dscqss1 * dscqss_dsc[50] +
    dwdot30dscqss17 * dscqss_dsc[610] + dwdot30dscqss2 * dscqss_dsc[85] +
    dwdot30dscqss3 * dscqss_dsc[120] + dwdot30dscqss4 * dscqss_dsc[155] +
    dwdot30dscqss5 * dscqss_dsc[190] + dwdot30dscqss6 * dscqss_dsc[225] +
    dwdot30dscqss7 * dscqss_dsc[260] + dwdot30dscqss9 * dscqss_dsc[330] +
    dwdot30dscqss11 * dscqss_dsc[400] + dwdot30dscqss12 * dscqss_dsc[435] +
    dwdot30dscqss14 * dscqss_dsc[505] + dwdot30dscqss13 * dscqss_dsc[470] +
    dwdot30dscqss15 * dscqss_dsc[540] + dwdot30dscqss8 * dscqss_dsc[295] +
    dwdot30dscqss10 * dscqss_dsc[365];
  J[606] =
    dwdot30dsc16 + dwdot30dscqss0 * dscqss_dsc[16] +
    dwdot30dscqss16 * dscqss_dsc[576] + dwdot30dscqss1 * dscqss_dsc[51] +
    dwdot30dscqss17 * dscqss_dsc[611] + dwdot30dscqss2 * dscqss_dsc[86] +
    dwdot30dscqss3 * dscqss_dsc[121] + dwdot30dscqss4 * dscqss_dsc[156] +
    dwdot30dscqss5 * dscqss_dsc[191] + dwdot30dscqss6 * dscqss_dsc[226] +
    dwdot30dscqss7 * dscqss_dsc[261] + dwdot30dscqss9 * dscqss_dsc[331] +
    dwdot30dscqss11 * dscqss_dsc[401] + dwdot30dscqss12 * dscqss_dsc[436] +
    dwdot30dscqss14 * dscqss_dsc[506] + dwdot30dscqss13 * dscqss_dsc[471] +
    dwdot30dscqss15 * dscqss_dsc[541] + dwdot30dscqss8 * dscqss_dsc[296] +
    dwdot30dscqss10 * dscqss_dsc[366];
  J[642] =
    dwdot30dsc17 + dwdot30dscqss0 * dscqss_dsc[17] +
    dwdot30dscqss16 * dscqss_dsc[577] + dwdot30dscqss1 * dscqss_dsc[52] +
    dwdot30dscqss17 * dscqss_dsc[612] + dwdot30dscqss2 * dscqss_dsc[87] +
    dwdot30dscqss3 * dscqss_dsc[122] + dwdot30dscqss4 * dscqss_dsc[157] +
    dwdot30dscqss5 * dscqss_dsc[192] + dwdot30dscqss6 * dscqss_dsc[227] +
    dwdot30dscqss7 * dscqss_dsc[262] + dwdot30dscqss9 * dscqss_dsc[332] +
    dwdot30dscqss11 * dscqss_dsc[402] + dwdot30dscqss12 * dscqss_dsc[437] +
    dwdot30dscqss14 * dscqss_dsc[507] + dwdot30dscqss13 * dscqss_dsc[472] +
    dwdot30dscqss15 * dscqss_dsc[542] + dwdot30dscqss8 * dscqss_dsc[297] +
    dwdot30dscqss10 * dscqss_dsc[367];
  J[678] =
    dwdot30dsc18 + dwdot30dscqss0 * dscqss_dsc[18] +
    dwdot30dscqss16 * dscqss_dsc[578] + dwdot30dscqss1 * dscqss_dsc[53] +
    dwdot30dscqss17 * dscqss_dsc[613] + dwdot30dscqss2 * dscqss_dsc[88] +
    dwdot30dscqss3 * dscqss_dsc[123] + dwdot30dscqss4 * dscqss_dsc[158] +
    dwdot30dscqss5 * dscqss_dsc[193] + dwdot30dscqss6 * dscqss_dsc[228] +
    dwdot30dscqss7 * dscqss_dsc[263] + dwdot30dscqss9 * dscqss_dsc[333] +
    dwdot30dscqss11 * dscqss_dsc[403] + dwdot30dscqss12 * dscqss_dsc[438] +
    dwdot30dscqss14 * dscqss_dsc[508] + dwdot30dscqss13 * dscqss_dsc[473] +
    dwdot30dscqss15 * dscqss_dsc[543] + dwdot30dscqss8 * dscqss_dsc[298] +
    dwdot30dscqss10 * dscqss_dsc[368];
  J[714] =
    dwdot30dsc19 + dwdot30dscqss0 * dscqss_dsc[19] +
    dwdot30dscqss16 * dscqss_dsc[579] + dwdot30dscqss1 * dscqss_dsc[54] +
    dwdot30dscqss17 * dscqss_dsc[614] + dwdot30dscqss2 * dscqss_dsc[89] +
    dwdot30dscqss3 * dscqss_dsc[124] + dwdot30dscqss4 * dscqss_dsc[159] +
    dwdot30dscqss5 * dscqss_dsc[194] + dwdot30dscqss6 * dscqss_dsc[229] +
    dwdot30dscqss7 * dscqss_dsc[264] + dwdot30dscqss9 * dscqss_dsc[334] +
    dwdot30dscqss11 * dscqss_dsc[404] + dwdot30dscqss12 * dscqss_dsc[439] +
    dwdot30dscqss14 * dscqss_dsc[509] + dwdot30dscqss13 * dscqss_dsc[474] +
    dwdot30dscqss15 * dscqss_dsc[544] + dwdot30dscqss8 * dscqss_dsc[299] +
    dwdot30dscqss10 * dscqss_dsc[369];
  J[750] =
    dwdot30dsc20 + dwdot30dscqss0 * dscqss_dsc[20] +
    dwdot30dscqss16 * dscqss_dsc[580] + dwdot30dscqss1 * dscqss_dsc[55] +
    dwdot30dscqss17 * dscqss_dsc[615] + dwdot30dscqss2 * dscqss_dsc[90] +
    dwdot30dscqss3 * dscqss_dsc[125] + dwdot30dscqss4 * dscqss_dsc[160] +
    dwdot30dscqss5 * dscqss_dsc[195] + dwdot30dscqss6 * dscqss_dsc[230] +
    dwdot30dscqss7 * dscqss_dsc[265] + dwdot30dscqss9 * dscqss_dsc[335] +
    dwdot30dscqss11 * dscqss_dsc[405] + dwdot30dscqss12 * dscqss_dsc[440] +
    dwdot30dscqss14 * dscqss_dsc[510] + dwdot30dscqss13 * dscqss_dsc[475] +
    dwdot30dscqss15 * dscqss_dsc[545] + dwdot30dscqss8 * dscqss_dsc[300] +
    dwdot30dscqss10 * dscqss_dsc[370];
  J[786] =
    dwdot30dsc21 + dwdot30dscqss0 * dscqss_dsc[21] +
    dwdot30dscqss16 * dscqss_dsc[581] + dwdot30dscqss1 * dscqss_dsc[56] +
    dwdot30dscqss17 * dscqss_dsc[616] + dwdot30dscqss2 * dscqss_dsc[91] +
    dwdot30dscqss3 * dscqss_dsc[126] + dwdot30dscqss4 * dscqss_dsc[161] +
    dwdot30dscqss5 * dscqss_dsc[196] + dwdot30dscqss6 * dscqss_dsc[231] +
    dwdot30dscqss7 * dscqss_dsc[266] + dwdot30dscqss9 * dscqss_dsc[336] +
    dwdot30dscqss11 * dscqss_dsc[406] + dwdot30dscqss12 * dscqss_dsc[441] +
    dwdot30dscqss14 * dscqss_dsc[511] + dwdot30dscqss13 * dscqss_dsc[476] +
    dwdot30dscqss15 * dscqss_dsc[546] + dwdot30dscqss8 * dscqss_dsc[301] +
    dwdot30dscqss10 * dscqss_dsc[371];
  J[822] =
    dwdot30dsc22 + dwdot30dscqss0 * dscqss_dsc[22] +
    dwdot30dscqss16 * dscqss_dsc[582] + dwdot30dscqss1 * dscqss_dsc[57] +
    dwdot30dscqss17 * dscqss_dsc[617] + dwdot30dscqss2 * dscqss_dsc[92] +
    dwdot30dscqss3 * dscqss_dsc[127] + dwdot30dscqss4 * dscqss_dsc[162] +
    dwdot30dscqss5 * dscqss_dsc[197] + dwdot30dscqss6 * dscqss_dsc[232] +
    dwdot30dscqss7 * dscqss_dsc[267] + dwdot30dscqss9 * dscqss_dsc[337] +
    dwdot30dscqss11 * dscqss_dsc[407] + dwdot30dscqss12 * dscqss_dsc[442] +
    dwdot30dscqss14 * dscqss_dsc[512] + dwdot30dscqss13 * dscqss_dsc[477] +
    dwdot30dscqss15 * dscqss_dsc[547] + dwdot30dscqss8 * dscqss_dsc[302] +
    dwdot30dscqss10 * dscqss_dsc[372];
  J[858] =
    dwdot30dsc23 + dwdot30dscqss0 * dscqss_dsc[23] +
    dwdot30dscqss16 * dscqss_dsc[583] + dwdot30dscqss1 * dscqss_dsc[58] +
    dwdot30dscqss17 * dscqss_dsc[618] + dwdot30dscqss2 * dscqss_dsc[93] +
    dwdot30dscqss3 * dscqss_dsc[128] + dwdot30dscqss4 * dscqss_dsc[163] +
    dwdot30dscqss5 * dscqss_dsc[198] + dwdot30dscqss6 * dscqss_dsc[233] +
    dwdot30dscqss7 * dscqss_dsc[268] + dwdot30dscqss9 * dscqss_dsc[338] +
    dwdot30dscqss11 * dscqss_dsc[408] + dwdot30dscqss12 * dscqss_dsc[443] +
    dwdot30dscqss14 * dscqss_dsc[513] + dwdot30dscqss13 * dscqss_dsc[478] +
    dwdot30dscqss15 * dscqss_dsc[548] + dwdot30dscqss8 * dscqss_dsc[303] +
    dwdot30dscqss10 * dscqss_dsc[373];
  J[894] =
    dwdot30dsc24 + dwdot30dscqss0 * dscqss_dsc[24] +
    dwdot30dscqss16 * dscqss_dsc[584] + dwdot30dscqss1 * dscqss_dsc[59] +
    dwdot30dscqss17 * dscqss_dsc[619] + dwdot30dscqss2 * dscqss_dsc[94] +
    dwdot30dscqss3 * dscqss_dsc[129] + dwdot30dscqss4 * dscqss_dsc[164] +
    dwdot30dscqss5 * dscqss_dsc[199] + dwdot30dscqss6 * dscqss_dsc[234] +
    dwdot30dscqss7 * dscqss_dsc[269] + dwdot30dscqss9 * dscqss_dsc[339] +
    dwdot30dscqss11 * dscqss_dsc[409] + dwdot30dscqss12 * dscqss_dsc[444] +
    dwdot30dscqss14 * dscqss_dsc[514] + dwdot30dscqss13 * dscqss_dsc[479] +
    dwdot30dscqss15 * dscqss_dsc[549] + dwdot30dscqss8 * dscqss_dsc[304] +
    dwdot30dscqss10 * dscqss_dsc[374];
  J[930] =
    dwdot30dsc25 + dwdot30dscqss0 * dscqss_dsc[25] +
    dwdot30dscqss16 * dscqss_dsc[585] + dwdot30dscqss1 * dscqss_dsc[60] +
    dwdot30dscqss17 * dscqss_dsc[620] + dwdot30dscqss2 * dscqss_dsc[95] +
    dwdot30dscqss3 * dscqss_dsc[130] + dwdot30dscqss4 * dscqss_dsc[165] +
    dwdot30dscqss5 * dscqss_dsc[200] + dwdot30dscqss6 * dscqss_dsc[235] +
    dwdot30dscqss7 * dscqss_dsc[270] + dwdot30dscqss9 * dscqss_dsc[340] +
    dwdot30dscqss11 * dscqss_dsc[410] + dwdot30dscqss12 * dscqss_dsc[445] +
    dwdot30dscqss14 * dscqss_dsc[515] + dwdot30dscqss13 * dscqss_dsc[480] +
    dwdot30dscqss15 * dscqss_dsc[550] + dwdot30dscqss8 * dscqss_dsc[305] +
    dwdot30dscqss10 * dscqss_dsc[375];
  J[966] =
    dwdot30dsc26 + dwdot30dscqss0 * dscqss_dsc[26] +
    dwdot30dscqss16 * dscqss_dsc[586] + dwdot30dscqss1 * dscqss_dsc[61] +
    dwdot30dscqss17 * dscqss_dsc[621] + dwdot30dscqss2 * dscqss_dsc[96] +
    dwdot30dscqss3 * dscqss_dsc[131] + dwdot30dscqss4 * dscqss_dsc[166] +
    dwdot30dscqss5 * dscqss_dsc[201] + dwdot30dscqss6 * dscqss_dsc[236] +
    dwdot30dscqss7 * dscqss_dsc[271] + dwdot30dscqss9 * dscqss_dsc[341] +
    dwdot30dscqss11 * dscqss_dsc[411] + dwdot30dscqss12 * dscqss_dsc[446] +
    dwdot30dscqss14 * dscqss_dsc[516] + dwdot30dscqss13 * dscqss_dsc[481] +
    dwdot30dscqss15 * dscqss_dsc[551] + dwdot30dscqss8 * dscqss_dsc[306] +
    dwdot30dscqss10 * dscqss_dsc[376];
  J[1002] =
    dwdot30dsc27 + dwdot30dscqss0 * dscqss_dsc[27] +
    dwdot30dscqss16 * dscqss_dsc[587] + dwdot30dscqss1 * dscqss_dsc[62] +
    dwdot30dscqss17 * dscqss_dsc[622] + dwdot30dscqss2 * dscqss_dsc[97] +
    dwdot30dscqss3 * dscqss_dsc[132] + dwdot30dscqss4 * dscqss_dsc[167] +
    dwdot30dscqss5 * dscqss_dsc[202] + dwdot30dscqss6 * dscqss_dsc[237] +
    dwdot30dscqss7 * dscqss_dsc[272] + dwdot30dscqss9 * dscqss_dsc[342] +
    dwdot30dscqss11 * dscqss_dsc[412] + dwdot30dscqss12 * dscqss_dsc[447] +
    dwdot30dscqss14 * dscqss_dsc[517] + dwdot30dscqss13 * dscqss_dsc[482] +
    dwdot30dscqss15 * dscqss_dsc[552] + dwdot30dscqss8 * dscqss_dsc[307] +
    dwdot30dscqss10 * dscqss_dsc[377];
  J[1038] =
    dwdot30dsc28 + dwdot30dscqss0 * dscqss_dsc[28] +
    dwdot30dscqss16 * dscqss_dsc[588] + dwdot30dscqss1 * dscqss_dsc[63] +
    dwdot30dscqss17 * dscqss_dsc[623] + dwdot30dscqss2 * dscqss_dsc[98] +
    dwdot30dscqss3 * dscqss_dsc[133] + dwdot30dscqss4 * dscqss_dsc[168] +
    dwdot30dscqss5 * dscqss_dsc[203] + dwdot30dscqss6 * dscqss_dsc[238] +
    dwdot30dscqss7 * dscqss_dsc[273] + dwdot30dscqss9 * dscqss_dsc[343] +
    dwdot30dscqss11 * dscqss_dsc[413] + dwdot30dscqss12 * dscqss_dsc[448] +
    dwdot30dscqss14 * dscqss_dsc[518] + dwdot30dscqss13 * dscqss_dsc[483] +
    dwdot30dscqss15 * dscqss_dsc[553] + dwdot30dscqss8 * dscqss_dsc[308] +
    dwdot30dscqss10 * dscqss_dsc[378];
  J[1074] =
    dwdot30dsc29 + dwdot30dscqss0 * dscqss_dsc[29] +
    dwdot30dscqss16 * dscqss_dsc[589] + dwdot30dscqss1 * dscqss_dsc[64] +
    dwdot30dscqss17 * dscqss_dsc[624] + dwdot30dscqss2 * dscqss_dsc[99] +
    dwdot30dscqss3 * dscqss_dsc[134] + dwdot30dscqss4 * dscqss_dsc[169] +
    dwdot30dscqss5 * dscqss_dsc[204] + dwdot30dscqss6 * dscqss_dsc[239] +
    dwdot30dscqss7 * dscqss_dsc[274] + dwdot30dscqss9 * dscqss_dsc[344] +
    dwdot30dscqss11 * dscqss_dsc[414] + dwdot30dscqss12 * dscqss_dsc[449] +
    dwdot30dscqss14 * dscqss_dsc[519] + dwdot30dscqss13 * dscqss_dsc[484] +
    dwdot30dscqss15 * dscqss_dsc[554] + dwdot30dscqss8 * dscqss_dsc[309] +
    dwdot30dscqss10 * dscqss_dsc[379];
  J[1110] =
    dwdot30dsc30 + dwdot30dscqss0 * dscqss_dsc[30] +
    dwdot30dscqss16 * dscqss_dsc[590] + dwdot30dscqss1 * dscqss_dsc[65] +
    dwdot30dscqss17 * dscqss_dsc[625] + dwdot30dscqss2 * dscqss_dsc[100] +
    dwdot30dscqss3 * dscqss_dsc[135] + dwdot30dscqss4 * dscqss_dsc[170] +
    dwdot30dscqss5 * dscqss_dsc[205] + dwdot30dscqss6 * dscqss_dsc[240] +
    dwdot30dscqss7 * dscqss_dsc[275] + dwdot30dscqss9 * dscqss_dsc[345] +
    dwdot30dscqss11 * dscqss_dsc[415] + dwdot30dscqss12 * dscqss_dsc[450] +
    dwdot30dscqss14 * dscqss_dsc[520] + dwdot30dscqss13 * dscqss_dsc[485] +
    dwdot30dscqss15 * dscqss_dsc[555] + dwdot30dscqss8 * dscqss_dsc[310] +
    dwdot30dscqss10 * dscqss_dsc[380];
  J[1146] =
    dwdot30dsc31 + dwdot30dscqss0 * dscqss_dsc[31] +
    dwdot30dscqss16 * dscqss_dsc[591] + dwdot30dscqss1 * dscqss_dsc[66] +
    dwdot30dscqss17 * dscqss_dsc[626] + dwdot30dscqss2 * dscqss_dsc[101] +
    dwdot30dscqss3 * dscqss_dsc[136] + dwdot30dscqss4 * dscqss_dsc[171] +
    dwdot30dscqss5 * dscqss_dsc[206] + dwdot30dscqss6 * dscqss_dsc[241] +
    dwdot30dscqss7 * dscqss_dsc[276] + dwdot30dscqss9 * dscqss_dsc[346] +
    dwdot30dscqss11 * dscqss_dsc[416] + dwdot30dscqss12 * dscqss_dsc[451] +
    dwdot30dscqss14 * dscqss_dsc[521] + dwdot30dscqss13 * dscqss_dsc[486] +
    dwdot30dscqss15 * dscqss_dsc[556] + dwdot30dscqss8 * dscqss_dsc[311] +
    dwdot30dscqss10 * dscqss_dsc[381];
  J[1182] =
    dwdot30dsc32 + dwdot30dscqss0 * dscqss_dsc[32] +
    dwdot30dscqss16 * dscqss_dsc[592] + dwdot30dscqss1 * dscqss_dsc[67] +
    dwdot30dscqss17 * dscqss_dsc[627] + dwdot30dscqss2 * dscqss_dsc[102] +
    dwdot30dscqss3 * dscqss_dsc[137] + dwdot30dscqss4 * dscqss_dsc[172] +
    dwdot30dscqss5 * dscqss_dsc[207] + dwdot30dscqss6 * dscqss_dsc[242] +
    dwdot30dscqss7 * dscqss_dsc[277] + dwdot30dscqss9 * dscqss_dsc[347] +
    dwdot30dscqss11 * dscqss_dsc[417] + dwdot30dscqss12 * dscqss_dsc[452] +
    dwdot30dscqss14 * dscqss_dsc[522] + dwdot30dscqss13 * dscqss_dsc[487] +
    dwdot30dscqss15 * dscqss_dsc[557] + dwdot30dscqss8 * dscqss_dsc[312] +
    dwdot30dscqss10 * dscqss_dsc[382];
  J[1218] =
    dwdot30dsc33 + dwdot30dscqss0 * dscqss_dsc[33] +
    dwdot30dscqss16 * dscqss_dsc[593] + dwdot30dscqss1 * dscqss_dsc[68] +
    dwdot30dscqss17 * dscqss_dsc[628] + dwdot30dscqss2 * dscqss_dsc[103] +
    dwdot30dscqss3 * dscqss_dsc[138] + dwdot30dscqss4 * dscqss_dsc[173] +
    dwdot30dscqss5 * dscqss_dsc[208] + dwdot30dscqss6 * dscqss_dsc[243] +
    dwdot30dscqss7 * dscqss_dsc[278] + dwdot30dscqss9 * dscqss_dsc[348] +
    dwdot30dscqss11 * dscqss_dsc[418] + dwdot30dscqss12 * dscqss_dsc[453] +
    dwdot30dscqss14 * dscqss_dsc[523] + dwdot30dscqss13 * dscqss_dsc[488] +
    dwdot30dscqss15 * dscqss_dsc[558] + dwdot30dscqss8 * dscqss_dsc[313] +
    dwdot30dscqss10 * dscqss_dsc[383];
  J[1254] =
    dwdot30dsc34 + dwdot30dscqss0 * dscqss_dsc[34] +
    dwdot30dscqss16 * dscqss_dsc[594] + dwdot30dscqss1 * dscqss_dsc[69] +
    dwdot30dscqss17 * dscqss_dsc[629] + dwdot30dscqss2 * dscqss_dsc[104] +
    dwdot30dscqss3 * dscqss_dsc[139] + dwdot30dscqss4 * dscqss_dsc[174] +
    dwdot30dscqss5 * dscqss_dsc[209] + dwdot30dscqss6 * dscqss_dsc[244] +
    dwdot30dscqss7 * dscqss_dsc[279] + dwdot30dscqss9 * dscqss_dsc[349] +
    dwdot30dscqss11 * dscqss_dsc[419] + dwdot30dscqss12 * dscqss_dsc[454] +
    dwdot30dscqss14 * dscqss_dsc[524] + dwdot30dscqss13 * dscqss_dsc[489] +
    dwdot30dscqss15 * dscqss_dsc[559] + dwdot30dscqss8 * dscqss_dsc[314] +
    dwdot30dscqss10 * dscqss_dsc[384];
  J[31] =
    dwdot31dsc0 + dwdot31dscqss0 * dscqss_dsc[0] +
    dwdot31dscqss16 * dscqss_dsc[560] + dwdot31dscqss1 * dscqss_dsc[35] +
    dwdot31dscqss17 * dscqss_dsc[595] + dwdot31dscqss2 * dscqss_dsc[70] +
    dwdot31dscqss3 * dscqss_dsc[105] + dwdot31dscqss4 * dscqss_dsc[140] +
    dwdot31dscqss5 * dscqss_dsc[175] + dwdot31dscqss6 * dscqss_dsc[210] +
    dwdot31dscqss7 * dscqss_dsc[245] + dwdot31dscqss9 * dscqss_dsc[315] +
    dwdot31dscqss11 * dscqss_dsc[385] + dwdot31dscqss12 * dscqss_dsc[420] +
    dwdot31dscqss14 * dscqss_dsc[490] + dwdot31dscqss13 * dscqss_dsc[455] +
    dwdot31dscqss15 * dscqss_dsc[525] + dwdot31dscqss8 * dscqss_dsc[280] +
    dwdot31dscqss10 * dscqss_dsc[350];
  J[67] =
    dwdot31dsc1 + dwdot31dscqss0 * dscqss_dsc[1] +
    dwdot31dscqss16 * dscqss_dsc[561] + dwdot31dscqss1 * dscqss_dsc[36] +
    dwdot31dscqss17 * dscqss_dsc[596] + dwdot31dscqss2 * dscqss_dsc[71] +
    dwdot31dscqss3 * dscqss_dsc[106] + dwdot31dscqss4 * dscqss_dsc[141] +
    dwdot31dscqss5 * dscqss_dsc[176] + dwdot31dscqss6 * dscqss_dsc[211] +
    dwdot31dscqss7 * dscqss_dsc[246] + dwdot31dscqss9 * dscqss_dsc[316] +
    dwdot31dscqss11 * dscqss_dsc[386] + dwdot31dscqss12 * dscqss_dsc[421] +
    dwdot31dscqss14 * dscqss_dsc[491] + dwdot31dscqss13 * dscqss_dsc[456] +
    dwdot31dscqss15 * dscqss_dsc[526] + dwdot31dscqss8 * dscqss_dsc[281] +
    dwdot31dscqss10 * dscqss_dsc[351];
  J[103] =
    dwdot31dsc2 + dwdot31dscqss0 * dscqss_dsc[2] +
    dwdot31dscqss16 * dscqss_dsc[562] + dwdot31dscqss1 * dscqss_dsc[37] +
    dwdot31dscqss17 * dscqss_dsc[597] + dwdot31dscqss2 * dscqss_dsc[72] +
    dwdot31dscqss3 * dscqss_dsc[107] + dwdot31dscqss4 * dscqss_dsc[142] +
    dwdot31dscqss5 * dscqss_dsc[177] + dwdot31dscqss6 * dscqss_dsc[212] +
    dwdot31dscqss7 * dscqss_dsc[247] + dwdot31dscqss9 * dscqss_dsc[317] +
    dwdot31dscqss11 * dscqss_dsc[387] + dwdot31dscqss12 * dscqss_dsc[422] +
    dwdot31dscqss14 * dscqss_dsc[492] + dwdot31dscqss13 * dscqss_dsc[457] +
    dwdot31dscqss15 * dscqss_dsc[527] + dwdot31dscqss8 * dscqss_dsc[282] +
    dwdot31dscqss10 * dscqss_dsc[352];
  J[139] =
    dwdot31dsc3 + dwdot31dscqss0 * dscqss_dsc[3] +
    dwdot31dscqss16 * dscqss_dsc[563] + dwdot31dscqss1 * dscqss_dsc[38] +
    dwdot31dscqss17 * dscqss_dsc[598] + dwdot31dscqss2 * dscqss_dsc[73] +
    dwdot31dscqss3 * dscqss_dsc[108] + dwdot31dscqss4 * dscqss_dsc[143] +
    dwdot31dscqss5 * dscqss_dsc[178] + dwdot31dscqss6 * dscqss_dsc[213] +
    dwdot31dscqss7 * dscqss_dsc[248] + dwdot31dscqss9 * dscqss_dsc[318] +
    dwdot31dscqss11 * dscqss_dsc[388] + dwdot31dscqss12 * dscqss_dsc[423] +
    dwdot31dscqss14 * dscqss_dsc[493] + dwdot31dscqss13 * dscqss_dsc[458] +
    dwdot31dscqss15 * dscqss_dsc[528] + dwdot31dscqss8 * dscqss_dsc[283] +
    dwdot31dscqss10 * dscqss_dsc[353];
  J[175] =
    dwdot31dsc4 + dwdot31dscqss0 * dscqss_dsc[4] +
    dwdot31dscqss16 * dscqss_dsc[564] + dwdot31dscqss1 * dscqss_dsc[39] +
    dwdot31dscqss17 * dscqss_dsc[599] + dwdot31dscqss2 * dscqss_dsc[74] +
    dwdot31dscqss3 * dscqss_dsc[109] + dwdot31dscqss4 * dscqss_dsc[144] +
    dwdot31dscqss5 * dscqss_dsc[179] + dwdot31dscqss6 * dscqss_dsc[214] +
    dwdot31dscqss7 * dscqss_dsc[249] + dwdot31dscqss9 * dscqss_dsc[319] +
    dwdot31dscqss11 * dscqss_dsc[389] + dwdot31dscqss12 * dscqss_dsc[424] +
    dwdot31dscqss14 * dscqss_dsc[494] + dwdot31dscqss13 * dscqss_dsc[459] +
    dwdot31dscqss15 * dscqss_dsc[529] + dwdot31dscqss8 * dscqss_dsc[284] +
    dwdot31dscqss10 * dscqss_dsc[354];
  J[211] =
    dwdot31dsc5 + dwdot31dscqss0 * dscqss_dsc[5] +
    dwdot31dscqss16 * dscqss_dsc[565] + dwdot31dscqss1 * dscqss_dsc[40] +
    dwdot31dscqss17 * dscqss_dsc[600] + dwdot31dscqss2 * dscqss_dsc[75] +
    dwdot31dscqss3 * dscqss_dsc[110] + dwdot31dscqss4 * dscqss_dsc[145] +
    dwdot31dscqss5 * dscqss_dsc[180] + dwdot31dscqss6 * dscqss_dsc[215] +
    dwdot31dscqss7 * dscqss_dsc[250] + dwdot31dscqss9 * dscqss_dsc[320] +
    dwdot31dscqss11 * dscqss_dsc[390] + dwdot31dscqss12 * dscqss_dsc[425] +
    dwdot31dscqss14 * dscqss_dsc[495] + dwdot31dscqss13 * dscqss_dsc[460] +
    dwdot31dscqss15 * dscqss_dsc[530] + dwdot31dscqss8 * dscqss_dsc[285] +
    dwdot31dscqss10 * dscqss_dsc[355];
  J[247] =
    dwdot31dsc6 + dwdot31dscqss0 * dscqss_dsc[6] +
    dwdot31dscqss16 * dscqss_dsc[566] + dwdot31dscqss1 * dscqss_dsc[41] +
    dwdot31dscqss17 * dscqss_dsc[601] + dwdot31dscqss2 * dscqss_dsc[76] +
    dwdot31dscqss3 * dscqss_dsc[111] + dwdot31dscqss4 * dscqss_dsc[146] +
    dwdot31dscqss5 * dscqss_dsc[181] + dwdot31dscqss6 * dscqss_dsc[216] +
    dwdot31dscqss7 * dscqss_dsc[251] + dwdot31dscqss9 * dscqss_dsc[321] +
    dwdot31dscqss11 * dscqss_dsc[391] + dwdot31dscqss12 * dscqss_dsc[426] +
    dwdot31dscqss14 * dscqss_dsc[496] + dwdot31dscqss13 * dscqss_dsc[461] +
    dwdot31dscqss15 * dscqss_dsc[531] + dwdot31dscqss8 * dscqss_dsc[286] +
    dwdot31dscqss10 * dscqss_dsc[356];
  J[283] =
    dwdot31dsc7 + dwdot31dscqss0 * dscqss_dsc[7] +
    dwdot31dscqss16 * dscqss_dsc[567] + dwdot31dscqss1 * dscqss_dsc[42] +
    dwdot31dscqss17 * dscqss_dsc[602] + dwdot31dscqss2 * dscqss_dsc[77] +
    dwdot31dscqss3 * dscqss_dsc[112] + dwdot31dscqss4 * dscqss_dsc[147] +
    dwdot31dscqss5 * dscqss_dsc[182] + dwdot31dscqss6 * dscqss_dsc[217] +
    dwdot31dscqss7 * dscqss_dsc[252] + dwdot31dscqss9 * dscqss_dsc[322] +
    dwdot31dscqss11 * dscqss_dsc[392] + dwdot31dscqss12 * dscqss_dsc[427] +
    dwdot31dscqss14 * dscqss_dsc[497] + dwdot31dscqss13 * dscqss_dsc[462] +
    dwdot31dscqss15 * dscqss_dsc[532] + dwdot31dscqss8 * dscqss_dsc[287] +
    dwdot31dscqss10 * dscqss_dsc[357];
  J[319] =
    dwdot31dsc8 + dwdot31dscqss0 * dscqss_dsc[8] +
    dwdot31dscqss16 * dscqss_dsc[568] + dwdot31dscqss1 * dscqss_dsc[43] +
    dwdot31dscqss17 * dscqss_dsc[603] + dwdot31dscqss2 * dscqss_dsc[78] +
    dwdot31dscqss3 * dscqss_dsc[113] + dwdot31dscqss4 * dscqss_dsc[148] +
    dwdot31dscqss5 * dscqss_dsc[183] + dwdot31dscqss6 * dscqss_dsc[218] +
    dwdot31dscqss7 * dscqss_dsc[253] + dwdot31dscqss9 * dscqss_dsc[323] +
    dwdot31dscqss11 * dscqss_dsc[393] + dwdot31dscqss12 * dscqss_dsc[428] +
    dwdot31dscqss14 * dscqss_dsc[498] + dwdot31dscqss13 * dscqss_dsc[463] +
    dwdot31dscqss15 * dscqss_dsc[533] + dwdot31dscqss8 * dscqss_dsc[288] +
    dwdot31dscqss10 * dscqss_dsc[358];
  J[355] =
    dwdot31dsc9 + dwdot31dscqss0 * dscqss_dsc[9] +
    dwdot31dscqss16 * dscqss_dsc[569] + dwdot31dscqss1 * dscqss_dsc[44] +
    dwdot31dscqss17 * dscqss_dsc[604] + dwdot31dscqss2 * dscqss_dsc[79] +
    dwdot31dscqss3 * dscqss_dsc[114] + dwdot31dscqss4 * dscqss_dsc[149] +
    dwdot31dscqss5 * dscqss_dsc[184] + dwdot31dscqss6 * dscqss_dsc[219] +
    dwdot31dscqss7 * dscqss_dsc[254] + dwdot31dscqss9 * dscqss_dsc[324] +
    dwdot31dscqss11 * dscqss_dsc[394] + dwdot31dscqss12 * dscqss_dsc[429] +
    dwdot31dscqss14 * dscqss_dsc[499] + dwdot31dscqss13 * dscqss_dsc[464] +
    dwdot31dscqss15 * dscqss_dsc[534] + dwdot31dscqss8 * dscqss_dsc[289] +
    dwdot31dscqss10 * dscqss_dsc[359];
  J[391] =
    dwdot31dsc10 + dwdot31dscqss0 * dscqss_dsc[10] +
    dwdot31dscqss16 * dscqss_dsc[570] + dwdot31dscqss1 * dscqss_dsc[45] +
    dwdot31dscqss17 * dscqss_dsc[605] + dwdot31dscqss2 * dscqss_dsc[80] +
    dwdot31dscqss3 * dscqss_dsc[115] + dwdot31dscqss4 * dscqss_dsc[150] +
    dwdot31dscqss5 * dscqss_dsc[185] + dwdot31dscqss6 * dscqss_dsc[220] +
    dwdot31dscqss7 * dscqss_dsc[255] + dwdot31dscqss9 * dscqss_dsc[325] +
    dwdot31dscqss11 * dscqss_dsc[395] + dwdot31dscqss12 * dscqss_dsc[430] +
    dwdot31dscqss14 * dscqss_dsc[500] + dwdot31dscqss13 * dscqss_dsc[465] +
    dwdot31dscqss15 * dscqss_dsc[535] + dwdot31dscqss8 * dscqss_dsc[290] +
    dwdot31dscqss10 * dscqss_dsc[360];
  J[427] =
    dwdot31dsc11 + dwdot31dscqss0 * dscqss_dsc[11] +
    dwdot31dscqss16 * dscqss_dsc[571] + dwdot31dscqss1 * dscqss_dsc[46] +
    dwdot31dscqss17 * dscqss_dsc[606] + dwdot31dscqss2 * dscqss_dsc[81] +
    dwdot31dscqss3 * dscqss_dsc[116] + dwdot31dscqss4 * dscqss_dsc[151] +
    dwdot31dscqss5 * dscqss_dsc[186] + dwdot31dscqss6 * dscqss_dsc[221] +
    dwdot31dscqss7 * dscqss_dsc[256] + dwdot31dscqss9 * dscqss_dsc[326] +
    dwdot31dscqss11 * dscqss_dsc[396] + dwdot31dscqss12 * dscqss_dsc[431] +
    dwdot31dscqss14 * dscqss_dsc[501] + dwdot31dscqss13 * dscqss_dsc[466] +
    dwdot31dscqss15 * dscqss_dsc[536] + dwdot31dscqss8 * dscqss_dsc[291] +
    dwdot31dscqss10 * dscqss_dsc[361];
  J[463] =
    dwdot31dsc12 + dwdot31dscqss0 * dscqss_dsc[12] +
    dwdot31dscqss16 * dscqss_dsc[572] + dwdot31dscqss1 * dscqss_dsc[47] +
    dwdot31dscqss17 * dscqss_dsc[607] + dwdot31dscqss2 * dscqss_dsc[82] +
    dwdot31dscqss3 * dscqss_dsc[117] + dwdot31dscqss4 * dscqss_dsc[152] +
    dwdot31dscqss5 * dscqss_dsc[187] + dwdot31dscqss6 * dscqss_dsc[222] +
    dwdot31dscqss7 * dscqss_dsc[257] + dwdot31dscqss9 * dscqss_dsc[327] +
    dwdot31dscqss11 * dscqss_dsc[397] + dwdot31dscqss12 * dscqss_dsc[432] +
    dwdot31dscqss14 * dscqss_dsc[502] + dwdot31dscqss13 * dscqss_dsc[467] +
    dwdot31dscqss15 * dscqss_dsc[537] + dwdot31dscqss8 * dscqss_dsc[292] +
    dwdot31dscqss10 * dscqss_dsc[362];
  J[499] =
    dwdot31dsc13 + dwdot31dscqss0 * dscqss_dsc[13] +
    dwdot31dscqss16 * dscqss_dsc[573] + dwdot31dscqss1 * dscqss_dsc[48] +
    dwdot31dscqss17 * dscqss_dsc[608] + dwdot31dscqss2 * dscqss_dsc[83] +
    dwdot31dscqss3 * dscqss_dsc[118] + dwdot31dscqss4 * dscqss_dsc[153] +
    dwdot31dscqss5 * dscqss_dsc[188] + dwdot31dscqss6 * dscqss_dsc[223] +
    dwdot31dscqss7 * dscqss_dsc[258] + dwdot31dscqss9 * dscqss_dsc[328] +
    dwdot31dscqss11 * dscqss_dsc[398] + dwdot31dscqss12 * dscqss_dsc[433] +
    dwdot31dscqss14 * dscqss_dsc[503] + dwdot31dscqss13 * dscqss_dsc[468] +
    dwdot31dscqss15 * dscqss_dsc[538] + dwdot31dscqss8 * dscqss_dsc[293] +
    dwdot31dscqss10 * dscqss_dsc[363];
  J[535] =
    dwdot31dsc14 + dwdot31dscqss0 * dscqss_dsc[14] +
    dwdot31dscqss16 * dscqss_dsc[574] + dwdot31dscqss1 * dscqss_dsc[49] +
    dwdot31dscqss17 * dscqss_dsc[609] + dwdot31dscqss2 * dscqss_dsc[84] +
    dwdot31dscqss3 * dscqss_dsc[119] + dwdot31dscqss4 * dscqss_dsc[154] +
    dwdot31dscqss5 * dscqss_dsc[189] + dwdot31dscqss6 * dscqss_dsc[224] +
    dwdot31dscqss7 * dscqss_dsc[259] + dwdot31dscqss9 * dscqss_dsc[329] +
    dwdot31dscqss11 * dscqss_dsc[399] + dwdot31dscqss12 * dscqss_dsc[434] +
    dwdot31dscqss14 * dscqss_dsc[504] + dwdot31dscqss13 * dscqss_dsc[469] +
    dwdot31dscqss15 * dscqss_dsc[539] + dwdot31dscqss8 * dscqss_dsc[294] +
    dwdot31dscqss10 * dscqss_dsc[364];
  J[571] =
    dwdot31dsc15 + dwdot31dscqss0 * dscqss_dsc[15] +
    dwdot31dscqss16 * dscqss_dsc[575] + dwdot31dscqss1 * dscqss_dsc[50] +
    dwdot31dscqss17 * dscqss_dsc[610] + dwdot31dscqss2 * dscqss_dsc[85] +
    dwdot31dscqss3 * dscqss_dsc[120] + dwdot31dscqss4 * dscqss_dsc[155] +
    dwdot31dscqss5 * dscqss_dsc[190] + dwdot31dscqss6 * dscqss_dsc[225] +
    dwdot31dscqss7 * dscqss_dsc[260] + dwdot31dscqss9 * dscqss_dsc[330] +
    dwdot31dscqss11 * dscqss_dsc[400] + dwdot31dscqss12 * dscqss_dsc[435] +
    dwdot31dscqss14 * dscqss_dsc[505] + dwdot31dscqss13 * dscqss_dsc[470] +
    dwdot31dscqss15 * dscqss_dsc[540] + dwdot31dscqss8 * dscqss_dsc[295] +
    dwdot31dscqss10 * dscqss_dsc[365];
  J[607] =
    dwdot31dsc16 + dwdot31dscqss0 * dscqss_dsc[16] +
    dwdot31dscqss16 * dscqss_dsc[576] + dwdot31dscqss1 * dscqss_dsc[51] +
    dwdot31dscqss17 * dscqss_dsc[611] + dwdot31dscqss2 * dscqss_dsc[86] +
    dwdot31dscqss3 * dscqss_dsc[121] + dwdot31dscqss4 * dscqss_dsc[156] +
    dwdot31dscqss5 * dscqss_dsc[191] + dwdot31dscqss6 * dscqss_dsc[226] +
    dwdot31dscqss7 * dscqss_dsc[261] + dwdot31dscqss9 * dscqss_dsc[331] +
    dwdot31dscqss11 * dscqss_dsc[401] + dwdot31dscqss12 * dscqss_dsc[436] +
    dwdot31dscqss14 * dscqss_dsc[506] + dwdot31dscqss13 * dscqss_dsc[471] +
    dwdot31dscqss15 * dscqss_dsc[541] + dwdot31dscqss8 * dscqss_dsc[296] +
    dwdot31dscqss10 * dscqss_dsc[366];
  J[643] =
    dwdot31dsc17 + dwdot31dscqss0 * dscqss_dsc[17] +
    dwdot31dscqss16 * dscqss_dsc[577] + dwdot31dscqss1 * dscqss_dsc[52] +
    dwdot31dscqss17 * dscqss_dsc[612] + dwdot31dscqss2 * dscqss_dsc[87] +
    dwdot31dscqss3 * dscqss_dsc[122] + dwdot31dscqss4 * dscqss_dsc[157] +
    dwdot31dscqss5 * dscqss_dsc[192] + dwdot31dscqss6 * dscqss_dsc[227] +
    dwdot31dscqss7 * dscqss_dsc[262] + dwdot31dscqss9 * dscqss_dsc[332] +
    dwdot31dscqss11 * dscqss_dsc[402] + dwdot31dscqss12 * dscqss_dsc[437] +
    dwdot31dscqss14 * dscqss_dsc[507] + dwdot31dscqss13 * dscqss_dsc[472] +
    dwdot31dscqss15 * dscqss_dsc[542] + dwdot31dscqss8 * dscqss_dsc[297] +
    dwdot31dscqss10 * dscqss_dsc[367];
  J[679] =
    dwdot31dsc18 + dwdot31dscqss0 * dscqss_dsc[18] +
    dwdot31dscqss16 * dscqss_dsc[578] + dwdot31dscqss1 * dscqss_dsc[53] +
    dwdot31dscqss17 * dscqss_dsc[613] + dwdot31dscqss2 * dscqss_dsc[88] +
    dwdot31dscqss3 * dscqss_dsc[123] + dwdot31dscqss4 * dscqss_dsc[158] +
    dwdot31dscqss5 * dscqss_dsc[193] + dwdot31dscqss6 * dscqss_dsc[228] +
    dwdot31dscqss7 * dscqss_dsc[263] + dwdot31dscqss9 * dscqss_dsc[333] +
    dwdot31dscqss11 * dscqss_dsc[403] + dwdot31dscqss12 * dscqss_dsc[438] +
    dwdot31dscqss14 * dscqss_dsc[508] + dwdot31dscqss13 * dscqss_dsc[473] +
    dwdot31dscqss15 * dscqss_dsc[543] + dwdot31dscqss8 * dscqss_dsc[298] +
    dwdot31dscqss10 * dscqss_dsc[368];
  J[715] =
    dwdot31dsc19 + dwdot31dscqss0 * dscqss_dsc[19] +
    dwdot31dscqss16 * dscqss_dsc[579] + dwdot31dscqss1 * dscqss_dsc[54] +
    dwdot31dscqss17 * dscqss_dsc[614] + dwdot31dscqss2 * dscqss_dsc[89] +
    dwdot31dscqss3 * dscqss_dsc[124] + dwdot31dscqss4 * dscqss_dsc[159] +
    dwdot31dscqss5 * dscqss_dsc[194] + dwdot31dscqss6 * dscqss_dsc[229] +
    dwdot31dscqss7 * dscqss_dsc[264] + dwdot31dscqss9 * dscqss_dsc[334] +
    dwdot31dscqss11 * dscqss_dsc[404] + dwdot31dscqss12 * dscqss_dsc[439] +
    dwdot31dscqss14 * dscqss_dsc[509] + dwdot31dscqss13 * dscqss_dsc[474] +
    dwdot31dscqss15 * dscqss_dsc[544] + dwdot31dscqss8 * dscqss_dsc[299] +
    dwdot31dscqss10 * dscqss_dsc[369];
  J[751] =
    dwdot31dsc20 + dwdot31dscqss0 * dscqss_dsc[20] +
    dwdot31dscqss16 * dscqss_dsc[580] + dwdot31dscqss1 * dscqss_dsc[55] +
    dwdot31dscqss17 * dscqss_dsc[615] + dwdot31dscqss2 * dscqss_dsc[90] +
    dwdot31dscqss3 * dscqss_dsc[125] + dwdot31dscqss4 * dscqss_dsc[160] +
    dwdot31dscqss5 * dscqss_dsc[195] + dwdot31dscqss6 * dscqss_dsc[230] +
    dwdot31dscqss7 * dscqss_dsc[265] + dwdot31dscqss9 * dscqss_dsc[335] +
    dwdot31dscqss11 * dscqss_dsc[405] + dwdot31dscqss12 * dscqss_dsc[440] +
    dwdot31dscqss14 * dscqss_dsc[510] + dwdot31dscqss13 * dscqss_dsc[475] +
    dwdot31dscqss15 * dscqss_dsc[545] + dwdot31dscqss8 * dscqss_dsc[300] +
    dwdot31dscqss10 * dscqss_dsc[370];
  J[787] =
    dwdot31dsc21 + dwdot31dscqss0 * dscqss_dsc[21] +
    dwdot31dscqss16 * dscqss_dsc[581] + dwdot31dscqss1 * dscqss_dsc[56] +
    dwdot31dscqss17 * dscqss_dsc[616] + dwdot31dscqss2 * dscqss_dsc[91] +
    dwdot31dscqss3 * dscqss_dsc[126] + dwdot31dscqss4 * dscqss_dsc[161] +
    dwdot31dscqss5 * dscqss_dsc[196] + dwdot31dscqss6 * dscqss_dsc[231] +
    dwdot31dscqss7 * dscqss_dsc[266] + dwdot31dscqss9 * dscqss_dsc[336] +
    dwdot31dscqss11 * dscqss_dsc[406] + dwdot31dscqss12 * dscqss_dsc[441] +
    dwdot31dscqss14 * dscqss_dsc[511] + dwdot31dscqss13 * dscqss_dsc[476] +
    dwdot31dscqss15 * dscqss_dsc[546] + dwdot31dscqss8 * dscqss_dsc[301] +
    dwdot31dscqss10 * dscqss_dsc[371];
  J[823] =
    dwdot31dsc22 + dwdot31dscqss0 * dscqss_dsc[22] +
    dwdot31dscqss16 * dscqss_dsc[582] + dwdot31dscqss1 * dscqss_dsc[57] +
    dwdot31dscqss17 * dscqss_dsc[617] + dwdot31dscqss2 * dscqss_dsc[92] +
    dwdot31dscqss3 * dscqss_dsc[127] + dwdot31dscqss4 * dscqss_dsc[162] +
    dwdot31dscqss5 * dscqss_dsc[197] + dwdot31dscqss6 * dscqss_dsc[232] +
    dwdot31dscqss7 * dscqss_dsc[267] + dwdot31dscqss9 * dscqss_dsc[337] +
    dwdot31dscqss11 * dscqss_dsc[407] + dwdot31dscqss12 * dscqss_dsc[442] +
    dwdot31dscqss14 * dscqss_dsc[512] + dwdot31dscqss13 * dscqss_dsc[477] +
    dwdot31dscqss15 * dscqss_dsc[547] + dwdot31dscqss8 * dscqss_dsc[302] +
    dwdot31dscqss10 * dscqss_dsc[372];
  J[859] =
    dwdot31dsc23 + dwdot31dscqss0 * dscqss_dsc[23] +
    dwdot31dscqss16 * dscqss_dsc[583] + dwdot31dscqss1 * dscqss_dsc[58] +
    dwdot31dscqss17 * dscqss_dsc[618] + dwdot31dscqss2 * dscqss_dsc[93] +
    dwdot31dscqss3 * dscqss_dsc[128] + dwdot31dscqss4 * dscqss_dsc[163] +
    dwdot31dscqss5 * dscqss_dsc[198] + dwdot31dscqss6 * dscqss_dsc[233] +
    dwdot31dscqss7 * dscqss_dsc[268] + dwdot31dscqss9 * dscqss_dsc[338] +
    dwdot31dscqss11 * dscqss_dsc[408] + dwdot31dscqss12 * dscqss_dsc[443] +
    dwdot31dscqss14 * dscqss_dsc[513] + dwdot31dscqss13 * dscqss_dsc[478] +
    dwdot31dscqss15 * dscqss_dsc[548] + dwdot31dscqss8 * dscqss_dsc[303] +
    dwdot31dscqss10 * dscqss_dsc[373];
  J[895] =
    dwdot31dsc24 + dwdot31dscqss0 * dscqss_dsc[24] +
    dwdot31dscqss16 * dscqss_dsc[584] + dwdot31dscqss1 * dscqss_dsc[59] +
    dwdot31dscqss17 * dscqss_dsc[619] + dwdot31dscqss2 * dscqss_dsc[94] +
    dwdot31dscqss3 * dscqss_dsc[129] + dwdot31dscqss4 * dscqss_dsc[164] +
    dwdot31dscqss5 * dscqss_dsc[199] + dwdot31dscqss6 * dscqss_dsc[234] +
    dwdot31dscqss7 * dscqss_dsc[269] + dwdot31dscqss9 * dscqss_dsc[339] +
    dwdot31dscqss11 * dscqss_dsc[409] + dwdot31dscqss12 * dscqss_dsc[444] +
    dwdot31dscqss14 * dscqss_dsc[514] + dwdot31dscqss13 * dscqss_dsc[479] +
    dwdot31dscqss15 * dscqss_dsc[549] + dwdot31dscqss8 * dscqss_dsc[304] +
    dwdot31dscqss10 * dscqss_dsc[374];
  J[931] =
    dwdot31dsc25 + dwdot31dscqss0 * dscqss_dsc[25] +
    dwdot31dscqss16 * dscqss_dsc[585] + dwdot31dscqss1 * dscqss_dsc[60] +
    dwdot31dscqss17 * dscqss_dsc[620] + dwdot31dscqss2 * dscqss_dsc[95] +
    dwdot31dscqss3 * dscqss_dsc[130] + dwdot31dscqss4 * dscqss_dsc[165] +
    dwdot31dscqss5 * dscqss_dsc[200] + dwdot31dscqss6 * dscqss_dsc[235] +
    dwdot31dscqss7 * dscqss_dsc[270] + dwdot31dscqss9 * dscqss_dsc[340] +
    dwdot31dscqss11 * dscqss_dsc[410] + dwdot31dscqss12 * dscqss_dsc[445] +
    dwdot31dscqss14 * dscqss_dsc[515] + dwdot31dscqss13 * dscqss_dsc[480] +
    dwdot31dscqss15 * dscqss_dsc[550] + dwdot31dscqss8 * dscqss_dsc[305] +
    dwdot31dscqss10 * dscqss_dsc[375];
  J[967] =
    dwdot31dsc26 + dwdot31dscqss0 * dscqss_dsc[26] +
    dwdot31dscqss16 * dscqss_dsc[586] + dwdot31dscqss1 * dscqss_dsc[61] +
    dwdot31dscqss17 * dscqss_dsc[621] + dwdot31dscqss2 * dscqss_dsc[96] +
    dwdot31dscqss3 * dscqss_dsc[131] + dwdot31dscqss4 * dscqss_dsc[166] +
    dwdot31dscqss5 * dscqss_dsc[201] + dwdot31dscqss6 * dscqss_dsc[236] +
    dwdot31dscqss7 * dscqss_dsc[271] + dwdot31dscqss9 * dscqss_dsc[341] +
    dwdot31dscqss11 * dscqss_dsc[411] + dwdot31dscqss12 * dscqss_dsc[446] +
    dwdot31dscqss14 * dscqss_dsc[516] + dwdot31dscqss13 * dscqss_dsc[481] +
    dwdot31dscqss15 * dscqss_dsc[551] + dwdot31dscqss8 * dscqss_dsc[306] +
    dwdot31dscqss10 * dscqss_dsc[376];
  J[1003] =
    dwdot31dsc27 + dwdot31dscqss0 * dscqss_dsc[27] +
    dwdot31dscqss16 * dscqss_dsc[587] + dwdot31dscqss1 * dscqss_dsc[62] +
    dwdot31dscqss17 * dscqss_dsc[622] + dwdot31dscqss2 * dscqss_dsc[97] +
    dwdot31dscqss3 * dscqss_dsc[132] + dwdot31dscqss4 * dscqss_dsc[167] +
    dwdot31dscqss5 * dscqss_dsc[202] + dwdot31dscqss6 * dscqss_dsc[237] +
    dwdot31dscqss7 * dscqss_dsc[272] + dwdot31dscqss9 * dscqss_dsc[342] +
    dwdot31dscqss11 * dscqss_dsc[412] + dwdot31dscqss12 * dscqss_dsc[447] +
    dwdot31dscqss14 * dscqss_dsc[517] + dwdot31dscqss13 * dscqss_dsc[482] +
    dwdot31dscqss15 * dscqss_dsc[552] + dwdot31dscqss8 * dscqss_dsc[307] +
    dwdot31dscqss10 * dscqss_dsc[377];
  J[1039] =
    dwdot31dsc28 + dwdot31dscqss0 * dscqss_dsc[28] +
    dwdot31dscqss16 * dscqss_dsc[588] + dwdot31dscqss1 * dscqss_dsc[63] +
    dwdot31dscqss17 * dscqss_dsc[623] + dwdot31dscqss2 * dscqss_dsc[98] +
    dwdot31dscqss3 * dscqss_dsc[133] + dwdot31dscqss4 * dscqss_dsc[168] +
    dwdot31dscqss5 * dscqss_dsc[203] + dwdot31dscqss6 * dscqss_dsc[238] +
    dwdot31dscqss7 * dscqss_dsc[273] + dwdot31dscqss9 * dscqss_dsc[343] +
    dwdot31dscqss11 * dscqss_dsc[413] + dwdot31dscqss12 * dscqss_dsc[448] +
    dwdot31dscqss14 * dscqss_dsc[518] + dwdot31dscqss13 * dscqss_dsc[483] +
    dwdot31dscqss15 * dscqss_dsc[553] + dwdot31dscqss8 * dscqss_dsc[308] +
    dwdot31dscqss10 * dscqss_dsc[378];
  J[1075] =
    dwdot31dsc29 + dwdot31dscqss0 * dscqss_dsc[29] +
    dwdot31dscqss16 * dscqss_dsc[589] + dwdot31dscqss1 * dscqss_dsc[64] +
    dwdot31dscqss17 * dscqss_dsc[624] + dwdot31dscqss2 * dscqss_dsc[99] +
    dwdot31dscqss3 * dscqss_dsc[134] + dwdot31dscqss4 * dscqss_dsc[169] +
    dwdot31dscqss5 * dscqss_dsc[204] + dwdot31dscqss6 * dscqss_dsc[239] +
    dwdot31dscqss7 * dscqss_dsc[274] + dwdot31dscqss9 * dscqss_dsc[344] +
    dwdot31dscqss11 * dscqss_dsc[414] + dwdot31dscqss12 * dscqss_dsc[449] +
    dwdot31dscqss14 * dscqss_dsc[519] + dwdot31dscqss13 * dscqss_dsc[484] +
    dwdot31dscqss15 * dscqss_dsc[554] + dwdot31dscqss8 * dscqss_dsc[309] +
    dwdot31dscqss10 * dscqss_dsc[379];
  J[1111] =
    dwdot31dsc30 + dwdot31dscqss0 * dscqss_dsc[30] +
    dwdot31dscqss16 * dscqss_dsc[590] + dwdot31dscqss1 * dscqss_dsc[65] +
    dwdot31dscqss17 * dscqss_dsc[625] + dwdot31dscqss2 * dscqss_dsc[100] +
    dwdot31dscqss3 * dscqss_dsc[135] + dwdot31dscqss4 * dscqss_dsc[170] +
    dwdot31dscqss5 * dscqss_dsc[205] + dwdot31dscqss6 * dscqss_dsc[240] +
    dwdot31dscqss7 * dscqss_dsc[275] + dwdot31dscqss9 * dscqss_dsc[345] +
    dwdot31dscqss11 * dscqss_dsc[415] + dwdot31dscqss12 * dscqss_dsc[450] +
    dwdot31dscqss14 * dscqss_dsc[520] + dwdot31dscqss13 * dscqss_dsc[485] +
    dwdot31dscqss15 * dscqss_dsc[555] + dwdot31dscqss8 * dscqss_dsc[310] +
    dwdot31dscqss10 * dscqss_dsc[380];
  J[1147] =
    dwdot31dsc31 + dwdot31dscqss0 * dscqss_dsc[31] +
    dwdot31dscqss16 * dscqss_dsc[591] + dwdot31dscqss1 * dscqss_dsc[66] +
    dwdot31dscqss17 * dscqss_dsc[626] + dwdot31dscqss2 * dscqss_dsc[101] +
    dwdot31dscqss3 * dscqss_dsc[136] + dwdot31dscqss4 * dscqss_dsc[171] +
    dwdot31dscqss5 * dscqss_dsc[206] + dwdot31dscqss6 * dscqss_dsc[241] +
    dwdot31dscqss7 * dscqss_dsc[276] + dwdot31dscqss9 * dscqss_dsc[346] +
    dwdot31dscqss11 * dscqss_dsc[416] + dwdot31dscqss12 * dscqss_dsc[451] +
    dwdot31dscqss14 * dscqss_dsc[521] + dwdot31dscqss13 * dscqss_dsc[486] +
    dwdot31dscqss15 * dscqss_dsc[556] + dwdot31dscqss8 * dscqss_dsc[311] +
    dwdot31dscqss10 * dscqss_dsc[381];
  J[1183] =
    dwdot31dsc32 + dwdot31dscqss0 * dscqss_dsc[32] +
    dwdot31dscqss16 * dscqss_dsc[592] + dwdot31dscqss1 * dscqss_dsc[67] +
    dwdot31dscqss17 * dscqss_dsc[627] + dwdot31dscqss2 * dscqss_dsc[102] +
    dwdot31dscqss3 * dscqss_dsc[137] + dwdot31dscqss4 * dscqss_dsc[172] +
    dwdot31dscqss5 * dscqss_dsc[207] + dwdot31dscqss6 * dscqss_dsc[242] +
    dwdot31dscqss7 * dscqss_dsc[277] + dwdot31dscqss9 * dscqss_dsc[347] +
    dwdot31dscqss11 * dscqss_dsc[417] + dwdot31dscqss12 * dscqss_dsc[452] +
    dwdot31dscqss14 * dscqss_dsc[522] + dwdot31dscqss13 * dscqss_dsc[487] +
    dwdot31dscqss15 * dscqss_dsc[557] + dwdot31dscqss8 * dscqss_dsc[312] +
    dwdot31dscqss10 * dscqss_dsc[382];
  J[1219] =
    dwdot31dsc33 + dwdot31dscqss0 * dscqss_dsc[33] +
    dwdot31dscqss16 * dscqss_dsc[593] + dwdot31dscqss1 * dscqss_dsc[68] +
    dwdot31dscqss17 * dscqss_dsc[628] + dwdot31dscqss2 * dscqss_dsc[103] +
    dwdot31dscqss3 * dscqss_dsc[138] + dwdot31dscqss4 * dscqss_dsc[173] +
    dwdot31dscqss5 * dscqss_dsc[208] + dwdot31dscqss6 * dscqss_dsc[243] +
    dwdot31dscqss7 * dscqss_dsc[278] + dwdot31dscqss9 * dscqss_dsc[348] +
    dwdot31dscqss11 * dscqss_dsc[418] + dwdot31dscqss12 * dscqss_dsc[453] +
    dwdot31dscqss14 * dscqss_dsc[523] + dwdot31dscqss13 * dscqss_dsc[488] +
    dwdot31dscqss15 * dscqss_dsc[558] + dwdot31dscqss8 * dscqss_dsc[313] +
    dwdot31dscqss10 * dscqss_dsc[383];
  J[1255] =
    dwdot31dsc34 + dwdot31dscqss0 * dscqss_dsc[34] +
    dwdot31dscqss16 * dscqss_dsc[594] + dwdot31dscqss1 * dscqss_dsc[69] +
    dwdot31dscqss17 * dscqss_dsc[629] + dwdot31dscqss2 * dscqss_dsc[104] +
    dwdot31dscqss3 * dscqss_dsc[139] + dwdot31dscqss4 * dscqss_dsc[174] +
    dwdot31dscqss5 * dscqss_dsc[209] + dwdot31dscqss6 * dscqss_dsc[244] +
    dwdot31dscqss7 * dscqss_dsc[279] + dwdot31dscqss9 * dscqss_dsc[349] +
    dwdot31dscqss11 * dscqss_dsc[419] + dwdot31dscqss12 * dscqss_dsc[454] +
    dwdot31dscqss14 * dscqss_dsc[524] + dwdot31dscqss13 * dscqss_dsc[489] +
    dwdot31dscqss15 * dscqss_dsc[559] + dwdot31dscqss8 * dscqss_dsc[314] +
    dwdot31dscqss10 * dscqss_dsc[384];
  J[32] =
    dwdot32dsc0 + dwdot32dscqss0 * dscqss_dsc[0] +
    dwdot32dscqss16 * dscqss_dsc[560] + dwdot32dscqss1 * dscqss_dsc[35] +
    dwdot32dscqss17 * dscqss_dsc[595] + dwdot32dscqss2 * dscqss_dsc[70] +
    dwdot32dscqss3 * dscqss_dsc[105] + dwdot32dscqss4 * dscqss_dsc[140] +
    dwdot32dscqss5 * dscqss_dsc[175] + dwdot32dscqss6 * dscqss_dsc[210] +
    dwdot32dscqss7 * dscqss_dsc[245] + dwdot32dscqss9 * dscqss_dsc[315] +
    dwdot32dscqss11 * dscqss_dsc[385] + dwdot32dscqss12 * dscqss_dsc[420] +
    dwdot32dscqss14 * dscqss_dsc[490] + dwdot32dscqss13 * dscqss_dsc[455] +
    dwdot32dscqss15 * dscqss_dsc[525] + dwdot32dscqss8 * dscqss_dsc[280] +
    dwdot32dscqss10 * dscqss_dsc[350];
  J[68] =
    dwdot32dsc1 + dwdot32dscqss0 * dscqss_dsc[1] +
    dwdot32dscqss16 * dscqss_dsc[561] + dwdot32dscqss1 * dscqss_dsc[36] +
    dwdot32dscqss17 * dscqss_dsc[596] + dwdot32dscqss2 * dscqss_dsc[71] +
    dwdot32dscqss3 * dscqss_dsc[106] + dwdot32dscqss4 * dscqss_dsc[141] +
    dwdot32dscqss5 * dscqss_dsc[176] + dwdot32dscqss6 * dscqss_dsc[211] +
    dwdot32dscqss7 * dscqss_dsc[246] + dwdot32dscqss9 * dscqss_dsc[316] +
    dwdot32dscqss11 * dscqss_dsc[386] + dwdot32dscqss12 * dscqss_dsc[421] +
    dwdot32dscqss14 * dscqss_dsc[491] + dwdot32dscqss13 * dscqss_dsc[456] +
    dwdot32dscqss15 * dscqss_dsc[526] + dwdot32dscqss8 * dscqss_dsc[281] +
    dwdot32dscqss10 * dscqss_dsc[351];
  J[104] =
    dwdot32dsc2 + dwdot32dscqss0 * dscqss_dsc[2] +
    dwdot32dscqss16 * dscqss_dsc[562] + dwdot32dscqss1 * dscqss_dsc[37] +
    dwdot32dscqss17 * dscqss_dsc[597] + dwdot32dscqss2 * dscqss_dsc[72] +
    dwdot32dscqss3 * dscqss_dsc[107] + dwdot32dscqss4 * dscqss_dsc[142] +
    dwdot32dscqss5 * dscqss_dsc[177] + dwdot32dscqss6 * dscqss_dsc[212] +
    dwdot32dscqss7 * dscqss_dsc[247] + dwdot32dscqss9 * dscqss_dsc[317] +
    dwdot32dscqss11 * dscqss_dsc[387] + dwdot32dscqss12 * dscqss_dsc[422] +
    dwdot32dscqss14 * dscqss_dsc[492] + dwdot32dscqss13 * dscqss_dsc[457] +
    dwdot32dscqss15 * dscqss_dsc[527] + dwdot32dscqss8 * dscqss_dsc[282] +
    dwdot32dscqss10 * dscqss_dsc[352];
  J[140] =
    dwdot32dsc3 + dwdot32dscqss0 * dscqss_dsc[3] +
    dwdot32dscqss16 * dscqss_dsc[563] + dwdot32dscqss1 * dscqss_dsc[38] +
    dwdot32dscqss17 * dscqss_dsc[598] + dwdot32dscqss2 * dscqss_dsc[73] +
    dwdot32dscqss3 * dscqss_dsc[108] + dwdot32dscqss4 * dscqss_dsc[143] +
    dwdot32dscqss5 * dscqss_dsc[178] + dwdot32dscqss6 * dscqss_dsc[213] +
    dwdot32dscqss7 * dscqss_dsc[248] + dwdot32dscqss9 * dscqss_dsc[318] +
    dwdot32dscqss11 * dscqss_dsc[388] + dwdot32dscqss12 * dscqss_dsc[423] +
    dwdot32dscqss14 * dscqss_dsc[493] + dwdot32dscqss13 * dscqss_dsc[458] +
    dwdot32dscqss15 * dscqss_dsc[528] + dwdot32dscqss8 * dscqss_dsc[283] +
    dwdot32dscqss10 * dscqss_dsc[353];
  J[176] =
    dwdot32dsc4 + dwdot32dscqss0 * dscqss_dsc[4] +
    dwdot32dscqss16 * dscqss_dsc[564] + dwdot32dscqss1 * dscqss_dsc[39] +
    dwdot32dscqss17 * dscqss_dsc[599] + dwdot32dscqss2 * dscqss_dsc[74] +
    dwdot32dscqss3 * dscqss_dsc[109] + dwdot32dscqss4 * dscqss_dsc[144] +
    dwdot32dscqss5 * dscqss_dsc[179] + dwdot32dscqss6 * dscqss_dsc[214] +
    dwdot32dscqss7 * dscqss_dsc[249] + dwdot32dscqss9 * dscqss_dsc[319] +
    dwdot32dscqss11 * dscqss_dsc[389] + dwdot32dscqss12 * dscqss_dsc[424] +
    dwdot32dscqss14 * dscqss_dsc[494] + dwdot32dscqss13 * dscqss_dsc[459] +
    dwdot32dscqss15 * dscqss_dsc[529] + dwdot32dscqss8 * dscqss_dsc[284] +
    dwdot32dscqss10 * dscqss_dsc[354];
  J[212] =
    dwdot32dsc5 + dwdot32dscqss0 * dscqss_dsc[5] +
    dwdot32dscqss16 * dscqss_dsc[565] + dwdot32dscqss1 * dscqss_dsc[40] +
    dwdot32dscqss17 * dscqss_dsc[600] + dwdot32dscqss2 * dscqss_dsc[75] +
    dwdot32dscqss3 * dscqss_dsc[110] + dwdot32dscqss4 * dscqss_dsc[145] +
    dwdot32dscqss5 * dscqss_dsc[180] + dwdot32dscqss6 * dscqss_dsc[215] +
    dwdot32dscqss7 * dscqss_dsc[250] + dwdot32dscqss9 * dscqss_dsc[320] +
    dwdot32dscqss11 * dscqss_dsc[390] + dwdot32dscqss12 * dscqss_dsc[425] +
    dwdot32dscqss14 * dscqss_dsc[495] + dwdot32dscqss13 * dscqss_dsc[460] +
    dwdot32dscqss15 * dscqss_dsc[530] + dwdot32dscqss8 * dscqss_dsc[285] +
    dwdot32dscqss10 * dscqss_dsc[355];
  J[248] =
    dwdot32dsc6 + dwdot32dscqss0 * dscqss_dsc[6] +
    dwdot32dscqss16 * dscqss_dsc[566] + dwdot32dscqss1 * dscqss_dsc[41] +
    dwdot32dscqss17 * dscqss_dsc[601] + dwdot32dscqss2 * dscqss_dsc[76] +
    dwdot32dscqss3 * dscqss_dsc[111] + dwdot32dscqss4 * dscqss_dsc[146] +
    dwdot32dscqss5 * dscqss_dsc[181] + dwdot32dscqss6 * dscqss_dsc[216] +
    dwdot32dscqss7 * dscqss_dsc[251] + dwdot32dscqss9 * dscqss_dsc[321] +
    dwdot32dscqss11 * dscqss_dsc[391] + dwdot32dscqss12 * dscqss_dsc[426] +
    dwdot32dscqss14 * dscqss_dsc[496] + dwdot32dscqss13 * dscqss_dsc[461] +
    dwdot32dscqss15 * dscqss_dsc[531] + dwdot32dscqss8 * dscqss_dsc[286] +
    dwdot32dscqss10 * dscqss_dsc[356];
  J[284] =
    dwdot32dsc7 + dwdot32dscqss0 * dscqss_dsc[7] +
    dwdot32dscqss16 * dscqss_dsc[567] + dwdot32dscqss1 * dscqss_dsc[42] +
    dwdot32dscqss17 * dscqss_dsc[602] + dwdot32dscqss2 * dscqss_dsc[77] +
    dwdot32dscqss3 * dscqss_dsc[112] + dwdot32dscqss4 * dscqss_dsc[147] +
    dwdot32dscqss5 * dscqss_dsc[182] + dwdot32dscqss6 * dscqss_dsc[217] +
    dwdot32dscqss7 * dscqss_dsc[252] + dwdot32dscqss9 * dscqss_dsc[322] +
    dwdot32dscqss11 * dscqss_dsc[392] + dwdot32dscqss12 * dscqss_dsc[427] +
    dwdot32dscqss14 * dscqss_dsc[497] + dwdot32dscqss13 * dscqss_dsc[462] +
    dwdot32dscqss15 * dscqss_dsc[532] + dwdot32dscqss8 * dscqss_dsc[287] +
    dwdot32dscqss10 * dscqss_dsc[357];
  J[320] =
    dwdot32dsc8 + dwdot32dscqss0 * dscqss_dsc[8] +
    dwdot32dscqss16 * dscqss_dsc[568] + dwdot32dscqss1 * dscqss_dsc[43] +
    dwdot32dscqss17 * dscqss_dsc[603] + dwdot32dscqss2 * dscqss_dsc[78] +
    dwdot32dscqss3 * dscqss_dsc[113] + dwdot32dscqss4 * dscqss_dsc[148] +
    dwdot32dscqss5 * dscqss_dsc[183] + dwdot32dscqss6 * dscqss_dsc[218] +
    dwdot32dscqss7 * dscqss_dsc[253] + dwdot32dscqss9 * dscqss_dsc[323] +
    dwdot32dscqss11 * dscqss_dsc[393] + dwdot32dscqss12 * dscqss_dsc[428] +
    dwdot32dscqss14 * dscqss_dsc[498] + dwdot32dscqss13 * dscqss_dsc[463] +
    dwdot32dscqss15 * dscqss_dsc[533] + dwdot32dscqss8 * dscqss_dsc[288] +
    dwdot32dscqss10 * dscqss_dsc[358];
  J[356] =
    dwdot32dsc9 + dwdot32dscqss0 * dscqss_dsc[9] +
    dwdot32dscqss16 * dscqss_dsc[569] + dwdot32dscqss1 * dscqss_dsc[44] +
    dwdot32dscqss17 * dscqss_dsc[604] + dwdot32dscqss2 * dscqss_dsc[79] +
    dwdot32dscqss3 * dscqss_dsc[114] + dwdot32dscqss4 * dscqss_dsc[149] +
    dwdot32dscqss5 * dscqss_dsc[184] + dwdot32dscqss6 * dscqss_dsc[219] +
    dwdot32dscqss7 * dscqss_dsc[254] + dwdot32dscqss9 * dscqss_dsc[324] +
    dwdot32dscqss11 * dscqss_dsc[394] + dwdot32dscqss12 * dscqss_dsc[429] +
    dwdot32dscqss14 * dscqss_dsc[499] + dwdot32dscqss13 * dscqss_dsc[464] +
    dwdot32dscqss15 * dscqss_dsc[534] + dwdot32dscqss8 * dscqss_dsc[289] +
    dwdot32dscqss10 * dscqss_dsc[359];
  J[392] =
    dwdot32dsc10 + dwdot32dscqss0 * dscqss_dsc[10] +
    dwdot32dscqss16 * dscqss_dsc[570] + dwdot32dscqss1 * dscqss_dsc[45] +
    dwdot32dscqss17 * dscqss_dsc[605] + dwdot32dscqss2 * dscqss_dsc[80] +
    dwdot32dscqss3 * dscqss_dsc[115] + dwdot32dscqss4 * dscqss_dsc[150] +
    dwdot32dscqss5 * dscqss_dsc[185] + dwdot32dscqss6 * dscqss_dsc[220] +
    dwdot32dscqss7 * dscqss_dsc[255] + dwdot32dscqss9 * dscqss_dsc[325] +
    dwdot32dscqss11 * dscqss_dsc[395] + dwdot32dscqss12 * dscqss_dsc[430] +
    dwdot32dscqss14 * dscqss_dsc[500] + dwdot32dscqss13 * dscqss_dsc[465] +
    dwdot32dscqss15 * dscqss_dsc[535] + dwdot32dscqss8 * dscqss_dsc[290] +
    dwdot32dscqss10 * dscqss_dsc[360];
  J[428] =
    dwdot32dsc11 + dwdot32dscqss0 * dscqss_dsc[11] +
    dwdot32dscqss16 * dscqss_dsc[571] + dwdot32dscqss1 * dscqss_dsc[46] +
    dwdot32dscqss17 * dscqss_dsc[606] + dwdot32dscqss2 * dscqss_dsc[81] +
    dwdot32dscqss3 * dscqss_dsc[116] + dwdot32dscqss4 * dscqss_dsc[151] +
    dwdot32dscqss5 * dscqss_dsc[186] + dwdot32dscqss6 * dscqss_dsc[221] +
    dwdot32dscqss7 * dscqss_dsc[256] + dwdot32dscqss9 * dscqss_dsc[326] +
    dwdot32dscqss11 * dscqss_dsc[396] + dwdot32dscqss12 * dscqss_dsc[431] +
    dwdot32dscqss14 * dscqss_dsc[501] + dwdot32dscqss13 * dscqss_dsc[466] +
    dwdot32dscqss15 * dscqss_dsc[536] + dwdot32dscqss8 * dscqss_dsc[291] +
    dwdot32dscqss10 * dscqss_dsc[361];
  J[464] =
    dwdot32dsc12 + dwdot32dscqss0 * dscqss_dsc[12] +
    dwdot32dscqss16 * dscqss_dsc[572] + dwdot32dscqss1 * dscqss_dsc[47] +
    dwdot32dscqss17 * dscqss_dsc[607] + dwdot32dscqss2 * dscqss_dsc[82] +
    dwdot32dscqss3 * dscqss_dsc[117] + dwdot32dscqss4 * dscqss_dsc[152] +
    dwdot32dscqss5 * dscqss_dsc[187] + dwdot32dscqss6 * dscqss_dsc[222] +
    dwdot32dscqss7 * dscqss_dsc[257] + dwdot32dscqss9 * dscqss_dsc[327] +
    dwdot32dscqss11 * dscqss_dsc[397] + dwdot32dscqss12 * dscqss_dsc[432] +
    dwdot32dscqss14 * dscqss_dsc[502] + dwdot32dscqss13 * dscqss_dsc[467] +
    dwdot32dscqss15 * dscqss_dsc[537] + dwdot32dscqss8 * dscqss_dsc[292] +
    dwdot32dscqss10 * dscqss_dsc[362];
  J[500] =
    dwdot32dsc13 + dwdot32dscqss0 * dscqss_dsc[13] +
    dwdot32dscqss16 * dscqss_dsc[573] + dwdot32dscqss1 * dscqss_dsc[48] +
    dwdot32dscqss17 * dscqss_dsc[608] + dwdot32dscqss2 * dscqss_dsc[83] +
    dwdot32dscqss3 * dscqss_dsc[118] + dwdot32dscqss4 * dscqss_dsc[153] +
    dwdot32dscqss5 * dscqss_dsc[188] + dwdot32dscqss6 * dscqss_dsc[223] +
    dwdot32dscqss7 * dscqss_dsc[258] + dwdot32dscqss9 * dscqss_dsc[328] +
    dwdot32dscqss11 * dscqss_dsc[398] + dwdot32dscqss12 * dscqss_dsc[433] +
    dwdot32dscqss14 * dscqss_dsc[503] + dwdot32dscqss13 * dscqss_dsc[468] +
    dwdot32dscqss15 * dscqss_dsc[538] + dwdot32dscqss8 * dscqss_dsc[293] +
    dwdot32dscqss10 * dscqss_dsc[363];
  J[536] =
    dwdot32dsc14 + dwdot32dscqss0 * dscqss_dsc[14] +
    dwdot32dscqss16 * dscqss_dsc[574] + dwdot32dscqss1 * dscqss_dsc[49] +
    dwdot32dscqss17 * dscqss_dsc[609] + dwdot32dscqss2 * dscqss_dsc[84] +
    dwdot32dscqss3 * dscqss_dsc[119] + dwdot32dscqss4 * dscqss_dsc[154] +
    dwdot32dscqss5 * dscqss_dsc[189] + dwdot32dscqss6 * dscqss_dsc[224] +
    dwdot32dscqss7 * dscqss_dsc[259] + dwdot32dscqss9 * dscqss_dsc[329] +
    dwdot32dscqss11 * dscqss_dsc[399] + dwdot32dscqss12 * dscqss_dsc[434] +
    dwdot32dscqss14 * dscqss_dsc[504] + dwdot32dscqss13 * dscqss_dsc[469] +
    dwdot32dscqss15 * dscqss_dsc[539] + dwdot32dscqss8 * dscqss_dsc[294] +
    dwdot32dscqss10 * dscqss_dsc[364];
  J[572] =
    dwdot32dsc15 + dwdot32dscqss0 * dscqss_dsc[15] +
    dwdot32dscqss16 * dscqss_dsc[575] + dwdot32dscqss1 * dscqss_dsc[50] +
    dwdot32dscqss17 * dscqss_dsc[610] + dwdot32dscqss2 * dscqss_dsc[85] +
    dwdot32dscqss3 * dscqss_dsc[120] + dwdot32dscqss4 * dscqss_dsc[155] +
    dwdot32dscqss5 * dscqss_dsc[190] + dwdot32dscqss6 * dscqss_dsc[225] +
    dwdot32dscqss7 * dscqss_dsc[260] + dwdot32dscqss9 * dscqss_dsc[330] +
    dwdot32dscqss11 * dscqss_dsc[400] + dwdot32dscqss12 * dscqss_dsc[435] +
    dwdot32dscqss14 * dscqss_dsc[505] + dwdot32dscqss13 * dscqss_dsc[470] +
    dwdot32dscqss15 * dscqss_dsc[540] + dwdot32dscqss8 * dscqss_dsc[295] +
    dwdot32dscqss10 * dscqss_dsc[365];
  J[608] =
    dwdot32dsc16 + dwdot32dscqss0 * dscqss_dsc[16] +
    dwdot32dscqss16 * dscqss_dsc[576] + dwdot32dscqss1 * dscqss_dsc[51] +
    dwdot32dscqss17 * dscqss_dsc[611] + dwdot32dscqss2 * dscqss_dsc[86] +
    dwdot32dscqss3 * dscqss_dsc[121] + dwdot32dscqss4 * dscqss_dsc[156] +
    dwdot32dscqss5 * dscqss_dsc[191] + dwdot32dscqss6 * dscqss_dsc[226] +
    dwdot32dscqss7 * dscqss_dsc[261] + dwdot32dscqss9 * dscqss_dsc[331] +
    dwdot32dscqss11 * dscqss_dsc[401] + dwdot32dscqss12 * dscqss_dsc[436] +
    dwdot32dscqss14 * dscqss_dsc[506] + dwdot32dscqss13 * dscqss_dsc[471] +
    dwdot32dscqss15 * dscqss_dsc[541] + dwdot32dscqss8 * dscqss_dsc[296] +
    dwdot32dscqss10 * dscqss_dsc[366];
  J[644] =
    dwdot32dsc17 + dwdot32dscqss0 * dscqss_dsc[17] +
    dwdot32dscqss16 * dscqss_dsc[577] + dwdot32dscqss1 * dscqss_dsc[52] +
    dwdot32dscqss17 * dscqss_dsc[612] + dwdot32dscqss2 * dscqss_dsc[87] +
    dwdot32dscqss3 * dscqss_dsc[122] + dwdot32dscqss4 * dscqss_dsc[157] +
    dwdot32dscqss5 * dscqss_dsc[192] + dwdot32dscqss6 * dscqss_dsc[227] +
    dwdot32dscqss7 * dscqss_dsc[262] + dwdot32dscqss9 * dscqss_dsc[332] +
    dwdot32dscqss11 * dscqss_dsc[402] + dwdot32dscqss12 * dscqss_dsc[437] +
    dwdot32dscqss14 * dscqss_dsc[507] + dwdot32dscqss13 * dscqss_dsc[472] +
    dwdot32dscqss15 * dscqss_dsc[542] + dwdot32dscqss8 * dscqss_dsc[297] +
    dwdot32dscqss10 * dscqss_dsc[367];
  J[680] =
    dwdot32dsc18 + dwdot32dscqss0 * dscqss_dsc[18] +
    dwdot32dscqss16 * dscqss_dsc[578] + dwdot32dscqss1 * dscqss_dsc[53] +
    dwdot32dscqss17 * dscqss_dsc[613] + dwdot32dscqss2 * dscqss_dsc[88] +
    dwdot32dscqss3 * dscqss_dsc[123] + dwdot32dscqss4 * dscqss_dsc[158] +
    dwdot32dscqss5 * dscqss_dsc[193] + dwdot32dscqss6 * dscqss_dsc[228] +
    dwdot32dscqss7 * dscqss_dsc[263] + dwdot32dscqss9 * dscqss_dsc[333] +
    dwdot32dscqss11 * dscqss_dsc[403] + dwdot32dscqss12 * dscqss_dsc[438] +
    dwdot32dscqss14 * dscqss_dsc[508] + dwdot32dscqss13 * dscqss_dsc[473] +
    dwdot32dscqss15 * dscqss_dsc[543] + dwdot32dscqss8 * dscqss_dsc[298] +
    dwdot32dscqss10 * dscqss_dsc[368];
  J[716] =
    dwdot32dsc19 + dwdot32dscqss0 * dscqss_dsc[19] +
    dwdot32dscqss16 * dscqss_dsc[579] + dwdot32dscqss1 * dscqss_dsc[54] +
    dwdot32dscqss17 * dscqss_dsc[614] + dwdot32dscqss2 * dscqss_dsc[89] +
    dwdot32dscqss3 * dscqss_dsc[124] + dwdot32dscqss4 * dscqss_dsc[159] +
    dwdot32dscqss5 * dscqss_dsc[194] + dwdot32dscqss6 * dscqss_dsc[229] +
    dwdot32dscqss7 * dscqss_dsc[264] + dwdot32dscqss9 * dscqss_dsc[334] +
    dwdot32dscqss11 * dscqss_dsc[404] + dwdot32dscqss12 * dscqss_dsc[439] +
    dwdot32dscqss14 * dscqss_dsc[509] + dwdot32dscqss13 * dscqss_dsc[474] +
    dwdot32dscqss15 * dscqss_dsc[544] + dwdot32dscqss8 * dscqss_dsc[299] +
    dwdot32dscqss10 * dscqss_dsc[369];
  J[752] =
    dwdot32dsc20 + dwdot32dscqss0 * dscqss_dsc[20] +
    dwdot32dscqss16 * dscqss_dsc[580] + dwdot32dscqss1 * dscqss_dsc[55] +
    dwdot32dscqss17 * dscqss_dsc[615] + dwdot32dscqss2 * dscqss_dsc[90] +
    dwdot32dscqss3 * dscqss_dsc[125] + dwdot32dscqss4 * dscqss_dsc[160] +
    dwdot32dscqss5 * dscqss_dsc[195] + dwdot32dscqss6 * dscqss_dsc[230] +
    dwdot32dscqss7 * dscqss_dsc[265] + dwdot32dscqss9 * dscqss_dsc[335] +
    dwdot32dscqss11 * dscqss_dsc[405] + dwdot32dscqss12 * dscqss_dsc[440] +
    dwdot32dscqss14 * dscqss_dsc[510] + dwdot32dscqss13 * dscqss_dsc[475] +
    dwdot32dscqss15 * dscqss_dsc[545] + dwdot32dscqss8 * dscqss_dsc[300] +
    dwdot32dscqss10 * dscqss_dsc[370];
  J[788] =
    dwdot32dsc21 + dwdot32dscqss0 * dscqss_dsc[21] +
    dwdot32dscqss16 * dscqss_dsc[581] + dwdot32dscqss1 * dscqss_dsc[56] +
    dwdot32dscqss17 * dscqss_dsc[616] + dwdot32dscqss2 * dscqss_dsc[91] +
    dwdot32dscqss3 * dscqss_dsc[126] + dwdot32dscqss4 * dscqss_dsc[161] +
    dwdot32dscqss5 * dscqss_dsc[196] + dwdot32dscqss6 * dscqss_dsc[231] +
    dwdot32dscqss7 * dscqss_dsc[266] + dwdot32dscqss9 * dscqss_dsc[336] +
    dwdot32dscqss11 * dscqss_dsc[406] + dwdot32dscqss12 * dscqss_dsc[441] +
    dwdot32dscqss14 * dscqss_dsc[511] + dwdot32dscqss13 * dscqss_dsc[476] +
    dwdot32dscqss15 * dscqss_dsc[546] + dwdot32dscqss8 * dscqss_dsc[301] +
    dwdot32dscqss10 * dscqss_dsc[371];
  J[824] =
    dwdot32dsc22 + dwdot32dscqss0 * dscqss_dsc[22] +
    dwdot32dscqss16 * dscqss_dsc[582] + dwdot32dscqss1 * dscqss_dsc[57] +
    dwdot32dscqss17 * dscqss_dsc[617] + dwdot32dscqss2 * dscqss_dsc[92] +
    dwdot32dscqss3 * dscqss_dsc[127] + dwdot32dscqss4 * dscqss_dsc[162] +
    dwdot32dscqss5 * dscqss_dsc[197] + dwdot32dscqss6 * dscqss_dsc[232] +
    dwdot32dscqss7 * dscqss_dsc[267] + dwdot32dscqss9 * dscqss_dsc[337] +
    dwdot32dscqss11 * dscqss_dsc[407] + dwdot32dscqss12 * dscqss_dsc[442] +
    dwdot32dscqss14 * dscqss_dsc[512] + dwdot32dscqss13 * dscqss_dsc[477] +
    dwdot32dscqss15 * dscqss_dsc[547] + dwdot32dscqss8 * dscqss_dsc[302] +
    dwdot32dscqss10 * dscqss_dsc[372];
  J[860] =
    dwdot32dsc23 + dwdot32dscqss0 * dscqss_dsc[23] +
    dwdot32dscqss16 * dscqss_dsc[583] + dwdot32dscqss1 * dscqss_dsc[58] +
    dwdot32dscqss17 * dscqss_dsc[618] + dwdot32dscqss2 * dscqss_dsc[93] +
    dwdot32dscqss3 * dscqss_dsc[128] + dwdot32dscqss4 * dscqss_dsc[163] +
    dwdot32dscqss5 * dscqss_dsc[198] + dwdot32dscqss6 * dscqss_dsc[233] +
    dwdot32dscqss7 * dscqss_dsc[268] + dwdot32dscqss9 * dscqss_dsc[338] +
    dwdot32dscqss11 * dscqss_dsc[408] + dwdot32dscqss12 * dscqss_dsc[443] +
    dwdot32dscqss14 * dscqss_dsc[513] + dwdot32dscqss13 * dscqss_dsc[478] +
    dwdot32dscqss15 * dscqss_dsc[548] + dwdot32dscqss8 * dscqss_dsc[303] +
    dwdot32dscqss10 * dscqss_dsc[373];
  J[896] =
    dwdot32dsc24 + dwdot32dscqss0 * dscqss_dsc[24] +
    dwdot32dscqss16 * dscqss_dsc[584] + dwdot32dscqss1 * dscqss_dsc[59] +
    dwdot32dscqss17 * dscqss_dsc[619] + dwdot32dscqss2 * dscqss_dsc[94] +
    dwdot32dscqss3 * dscqss_dsc[129] + dwdot32dscqss4 * dscqss_dsc[164] +
    dwdot32dscqss5 * dscqss_dsc[199] + dwdot32dscqss6 * dscqss_dsc[234] +
    dwdot32dscqss7 * dscqss_dsc[269] + dwdot32dscqss9 * dscqss_dsc[339] +
    dwdot32dscqss11 * dscqss_dsc[409] + dwdot32dscqss12 * dscqss_dsc[444] +
    dwdot32dscqss14 * dscqss_dsc[514] + dwdot32dscqss13 * dscqss_dsc[479] +
    dwdot32dscqss15 * dscqss_dsc[549] + dwdot32dscqss8 * dscqss_dsc[304] +
    dwdot32dscqss10 * dscqss_dsc[374];
  J[932] =
    dwdot32dsc25 + dwdot32dscqss0 * dscqss_dsc[25] +
    dwdot32dscqss16 * dscqss_dsc[585] + dwdot32dscqss1 * dscqss_dsc[60] +
    dwdot32dscqss17 * dscqss_dsc[620] + dwdot32dscqss2 * dscqss_dsc[95] +
    dwdot32dscqss3 * dscqss_dsc[130] + dwdot32dscqss4 * dscqss_dsc[165] +
    dwdot32dscqss5 * dscqss_dsc[200] + dwdot32dscqss6 * dscqss_dsc[235] +
    dwdot32dscqss7 * dscqss_dsc[270] + dwdot32dscqss9 * dscqss_dsc[340] +
    dwdot32dscqss11 * dscqss_dsc[410] + dwdot32dscqss12 * dscqss_dsc[445] +
    dwdot32dscqss14 * dscqss_dsc[515] + dwdot32dscqss13 * dscqss_dsc[480] +
    dwdot32dscqss15 * dscqss_dsc[550] + dwdot32dscqss8 * dscqss_dsc[305] +
    dwdot32dscqss10 * dscqss_dsc[375];
  J[968] =
    dwdot32dsc26 + dwdot32dscqss0 * dscqss_dsc[26] +
    dwdot32dscqss16 * dscqss_dsc[586] + dwdot32dscqss1 * dscqss_dsc[61] +
    dwdot32dscqss17 * dscqss_dsc[621] + dwdot32dscqss2 * dscqss_dsc[96] +
    dwdot32dscqss3 * dscqss_dsc[131] + dwdot32dscqss4 * dscqss_dsc[166] +
    dwdot32dscqss5 * dscqss_dsc[201] + dwdot32dscqss6 * dscqss_dsc[236] +
    dwdot32dscqss7 * dscqss_dsc[271] + dwdot32dscqss9 * dscqss_dsc[341] +
    dwdot32dscqss11 * dscqss_dsc[411] + dwdot32dscqss12 * dscqss_dsc[446] +
    dwdot32dscqss14 * dscqss_dsc[516] + dwdot32dscqss13 * dscqss_dsc[481] +
    dwdot32dscqss15 * dscqss_dsc[551] + dwdot32dscqss8 * dscqss_dsc[306] +
    dwdot32dscqss10 * dscqss_dsc[376];
  J[1004] =
    dwdot32dsc27 + dwdot32dscqss0 * dscqss_dsc[27] +
    dwdot32dscqss16 * dscqss_dsc[587] + dwdot32dscqss1 * dscqss_dsc[62] +
    dwdot32dscqss17 * dscqss_dsc[622] + dwdot32dscqss2 * dscqss_dsc[97] +
    dwdot32dscqss3 * dscqss_dsc[132] + dwdot32dscqss4 * dscqss_dsc[167] +
    dwdot32dscqss5 * dscqss_dsc[202] + dwdot32dscqss6 * dscqss_dsc[237] +
    dwdot32dscqss7 * dscqss_dsc[272] + dwdot32dscqss9 * dscqss_dsc[342] +
    dwdot32dscqss11 * dscqss_dsc[412] + dwdot32dscqss12 * dscqss_dsc[447] +
    dwdot32dscqss14 * dscqss_dsc[517] + dwdot32dscqss13 * dscqss_dsc[482] +
    dwdot32dscqss15 * dscqss_dsc[552] + dwdot32dscqss8 * dscqss_dsc[307] +
    dwdot32dscqss10 * dscqss_dsc[377];
  J[1040] =
    dwdot32dsc28 + dwdot32dscqss0 * dscqss_dsc[28] +
    dwdot32dscqss16 * dscqss_dsc[588] + dwdot32dscqss1 * dscqss_dsc[63] +
    dwdot32dscqss17 * dscqss_dsc[623] + dwdot32dscqss2 * dscqss_dsc[98] +
    dwdot32dscqss3 * dscqss_dsc[133] + dwdot32dscqss4 * dscqss_dsc[168] +
    dwdot32dscqss5 * dscqss_dsc[203] + dwdot32dscqss6 * dscqss_dsc[238] +
    dwdot32dscqss7 * dscqss_dsc[273] + dwdot32dscqss9 * dscqss_dsc[343] +
    dwdot32dscqss11 * dscqss_dsc[413] + dwdot32dscqss12 * dscqss_dsc[448] +
    dwdot32dscqss14 * dscqss_dsc[518] + dwdot32dscqss13 * dscqss_dsc[483] +
    dwdot32dscqss15 * dscqss_dsc[553] + dwdot32dscqss8 * dscqss_dsc[308] +
    dwdot32dscqss10 * dscqss_dsc[378];
  J[1076] =
    dwdot32dsc29 + dwdot32dscqss0 * dscqss_dsc[29] +
    dwdot32dscqss16 * dscqss_dsc[589] + dwdot32dscqss1 * dscqss_dsc[64] +
    dwdot32dscqss17 * dscqss_dsc[624] + dwdot32dscqss2 * dscqss_dsc[99] +
    dwdot32dscqss3 * dscqss_dsc[134] + dwdot32dscqss4 * dscqss_dsc[169] +
    dwdot32dscqss5 * dscqss_dsc[204] + dwdot32dscqss6 * dscqss_dsc[239] +
    dwdot32dscqss7 * dscqss_dsc[274] + dwdot32dscqss9 * dscqss_dsc[344] +
    dwdot32dscqss11 * dscqss_dsc[414] + dwdot32dscqss12 * dscqss_dsc[449] +
    dwdot32dscqss14 * dscqss_dsc[519] + dwdot32dscqss13 * dscqss_dsc[484] +
    dwdot32dscqss15 * dscqss_dsc[554] + dwdot32dscqss8 * dscqss_dsc[309] +
    dwdot32dscqss10 * dscqss_dsc[379];
  J[1112] =
    dwdot32dsc30 + dwdot32dscqss0 * dscqss_dsc[30] +
    dwdot32dscqss16 * dscqss_dsc[590] + dwdot32dscqss1 * dscqss_dsc[65] +
    dwdot32dscqss17 * dscqss_dsc[625] + dwdot32dscqss2 * dscqss_dsc[100] +
    dwdot32dscqss3 * dscqss_dsc[135] + dwdot32dscqss4 * dscqss_dsc[170] +
    dwdot32dscqss5 * dscqss_dsc[205] + dwdot32dscqss6 * dscqss_dsc[240] +
    dwdot32dscqss7 * dscqss_dsc[275] + dwdot32dscqss9 * dscqss_dsc[345] +
    dwdot32dscqss11 * dscqss_dsc[415] + dwdot32dscqss12 * dscqss_dsc[450] +
    dwdot32dscqss14 * dscqss_dsc[520] + dwdot32dscqss13 * dscqss_dsc[485] +
    dwdot32dscqss15 * dscqss_dsc[555] + dwdot32dscqss8 * dscqss_dsc[310] +
    dwdot32dscqss10 * dscqss_dsc[380];
  J[1148] =
    dwdot32dsc31 + dwdot32dscqss0 * dscqss_dsc[31] +
    dwdot32dscqss16 * dscqss_dsc[591] + dwdot32dscqss1 * dscqss_dsc[66] +
    dwdot32dscqss17 * dscqss_dsc[626] + dwdot32dscqss2 * dscqss_dsc[101] +
    dwdot32dscqss3 * dscqss_dsc[136] + dwdot32dscqss4 * dscqss_dsc[171] +
    dwdot32dscqss5 * dscqss_dsc[206] + dwdot32dscqss6 * dscqss_dsc[241] +
    dwdot32dscqss7 * dscqss_dsc[276] + dwdot32dscqss9 * dscqss_dsc[346] +
    dwdot32dscqss11 * dscqss_dsc[416] + dwdot32dscqss12 * dscqss_dsc[451] +
    dwdot32dscqss14 * dscqss_dsc[521] + dwdot32dscqss13 * dscqss_dsc[486] +
    dwdot32dscqss15 * dscqss_dsc[556] + dwdot32dscqss8 * dscqss_dsc[311] +
    dwdot32dscqss10 * dscqss_dsc[381];
  J[1184] =
    dwdot32dsc32 + dwdot32dscqss0 * dscqss_dsc[32] +
    dwdot32dscqss16 * dscqss_dsc[592] + dwdot32dscqss1 * dscqss_dsc[67] +
    dwdot32dscqss17 * dscqss_dsc[627] + dwdot32dscqss2 * dscqss_dsc[102] +
    dwdot32dscqss3 * dscqss_dsc[137] + dwdot32dscqss4 * dscqss_dsc[172] +
    dwdot32dscqss5 * dscqss_dsc[207] + dwdot32dscqss6 * dscqss_dsc[242] +
    dwdot32dscqss7 * dscqss_dsc[277] + dwdot32dscqss9 * dscqss_dsc[347] +
    dwdot32dscqss11 * dscqss_dsc[417] + dwdot32dscqss12 * dscqss_dsc[452] +
    dwdot32dscqss14 * dscqss_dsc[522] + dwdot32dscqss13 * dscqss_dsc[487] +
    dwdot32dscqss15 * dscqss_dsc[557] + dwdot32dscqss8 * dscqss_dsc[312] +
    dwdot32dscqss10 * dscqss_dsc[382];
  J[1220] =
    dwdot32dsc33 + dwdot32dscqss0 * dscqss_dsc[33] +
    dwdot32dscqss16 * dscqss_dsc[593] + dwdot32dscqss1 * dscqss_dsc[68] +
    dwdot32dscqss17 * dscqss_dsc[628] + dwdot32dscqss2 * dscqss_dsc[103] +
    dwdot32dscqss3 * dscqss_dsc[138] + dwdot32dscqss4 * dscqss_dsc[173] +
    dwdot32dscqss5 * dscqss_dsc[208] + dwdot32dscqss6 * dscqss_dsc[243] +
    dwdot32dscqss7 * dscqss_dsc[278] + dwdot32dscqss9 * dscqss_dsc[348] +
    dwdot32dscqss11 * dscqss_dsc[418] + dwdot32dscqss12 * dscqss_dsc[453] +
    dwdot32dscqss14 * dscqss_dsc[523] + dwdot32dscqss13 * dscqss_dsc[488] +
    dwdot32dscqss15 * dscqss_dsc[558] + dwdot32dscqss8 * dscqss_dsc[313] +
    dwdot32dscqss10 * dscqss_dsc[383];
  J[1256] =
    dwdot32dsc34 + dwdot32dscqss0 * dscqss_dsc[34] +
    dwdot32dscqss16 * dscqss_dsc[594] + dwdot32dscqss1 * dscqss_dsc[69] +
    dwdot32dscqss17 * dscqss_dsc[629] + dwdot32dscqss2 * dscqss_dsc[104] +
    dwdot32dscqss3 * dscqss_dsc[139] + dwdot32dscqss4 * dscqss_dsc[174] +
    dwdot32dscqss5 * dscqss_dsc[209] + dwdot32dscqss6 * dscqss_dsc[244] +
    dwdot32dscqss7 * dscqss_dsc[279] + dwdot32dscqss9 * dscqss_dsc[349] +
    dwdot32dscqss11 * dscqss_dsc[419] + dwdot32dscqss12 * dscqss_dsc[454] +
    dwdot32dscqss14 * dscqss_dsc[524] + dwdot32dscqss13 * dscqss_dsc[489] +
    dwdot32dscqss15 * dscqss_dsc[559] + dwdot32dscqss8 * dscqss_dsc[314] +
    dwdot32dscqss10 * dscqss_dsc[384];
  J[33] =
    dwdot33dsc0 + dwdot33dscqss0 * dscqss_dsc[0] +
    dwdot33dscqss16 * dscqss_dsc[560] + dwdot33dscqss1 * dscqss_dsc[35] +
    dwdot33dscqss17 * dscqss_dsc[595] + dwdot33dscqss2 * dscqss_dsc[70] +
    dwdot33dscqss3 * dscqss_dsc[105] + dwdot33dscqss4 * dscqss_dsc[140] +
    dwdot33dscqss5 * dscqss_dsc[175] + dwdot33dscqss6 * dscqss_dsc[210] +
    dwdot33dscqss7 * dscqss_dsc[245] + dwdot33dscqss9 * dscqss_dsc[315] +
    dwdot33dscqss11 * dscqss_dsc[385] + dwdot33dscqss12 * dscqss_dsc[420] +
    dwdot33dscqss14 * dscqss_dsc[490] + dwdot33dscqss13 * dscqss_dsc[455] +
    dwdot33dscqss15 * dscqss_dsc[525] + dwdot33dscqss8 * dscqss_dsc[280] +
    dwdot33dscqss10 * dscqss_dsc[350];
  J[69] =
    dwdot33dsc1 + dwdot33dscqss0 * dscqss_dsc[1] +
    dwdot33dscqss16 * dscqss_dsc[561] + dwdot33dscqss1 * dscqss_dsc[36] +
    dwdot33dscqss17 * dscqss_dsc[596] + dwdot33dscqss2 * dscqss_dsc[71] +
    dwdot33dscqss3 * dscqss_dsc[106] + dwdot33dscqss4 * dscqss_dsc[141] +
    dwdot33dscqss5 * dscqss_dsc[176] + dwdot33dscqss6 * dscqss_dsc[211] +
    dwdot33dscqss7 * dscqss_dsc[246] + dwdot33dscqss9 * dscqss_dsc[316] +
    dwdot33dscqss11 * dscqss_dsc[386] + dwdot33dscqss12 * dscqss_dsc[421] +
    dwdot33dscqss14 * dscqss_dsc[491] + dwdot33dscqss13 * dscqss_dsc[456] +
    dwdot33dscqss15 * dscqss_dsc[526] + dwdot33dscqss8 * dscqss_dsc[281] +
    dwdot33dscqss10 * dscqss_dsc[351];
  J[105] =
    dwdot33dsc2 + dwdot33dscqss0 * dscqss_dsc[2] +
    dwdot33dscqss16 * dscqss_dsc[562] + dwdot33dscqss1 * dscqss_dsc[37] +
    dwdot33dscqss17 * dscqss_dsc[597] + dwdot33dscqss2 * dscqss_dsc[72] +
    dwdot33dscqss3 * dscqss_dsc[107] + dwdot33dscqss4 * dscqss_dsc[142] +
    dwdot33dscqss5 * dscqss_dsc[177] + dwdot33dscqss6 * dscqss_dsc[212] +
    dwdot33dscqss7 * dscqss_dsc[247] + dwdot33dscqss9 * dscqss_dsc[317] +
    dwdot33dscqss11 * dscqss_dsc[387] + dwdot33dscqss12 * dscqss_dsc[422] +
    dwdot33dscqss14 * dscqss_dsc[492] + dwdot33dscqss13 * dscqss_dsc[457] +
    dwdot33dscqss15 * dscqss_dsc[527] + dwdot33dscqss8 * dscqss_dsc[282] +
    dwdot33dscqss10 * dscqss_dsc[352];
  J[141] =
    dwdot33dsc3 + dwdot33dscqss0 * dscqss_dsc[3] +
    dwdot33dscqss16 * dscqss_dsc[563] + dwdot33dscqss1 * dscqss_dsc[38] +
    dwdot33dscqss17 * dscqss_dsc[598] + dwdot33dscqss2 * dscqss_dsc[73] +
    dwdot33dscqss3 * dscqss_dsc[108] + dwdot33dscqss4 * dscqss_dsc[143] +
    dwdot33dscqss5 * dscqss_dsc[178] + dwdot33dscqss6 * dscqss_dsc[213] +
    dwdot33dscqss7 * dscqss_dsc[248] + dwdot33dscqss9 * dscqss_dsc[318] +
    dwdot33dscqss11 * dscqss_dsc[388] + dwdot33dscqss12 * dscqss_dsc[423] +
    dwdot33dscqss14 * dscqss_dsc[493] + dwdot33dscqss13 * dscqss_dsc[458] +
    dwdot33dscqss15 * dscqss_dsc[528] + dwdot33dscqss8 * dscqss_dsc[283] +
    dwdot33dscqss10 * dscqss_dsc[353];
  J[177] =
    dwdot33dsc4 + dwdot33dscqss0 * dscqss_dsc[4] +
    dwdot33dscqss16 * dscqss_dsc[564] + dwdot33dscqss1 * dscqss_dsc[39] +
    dwdot33dscqss17 * dscqss_dsc[599] + dwdot33dscqss2 * dscqss_dsc[74] +
    dwdot33dscqss3 * dscqss_dsc[109] + dwdot33dscqss4 * dscqss_dsc[144] +
    dwdot33dscqss5 * dscqss_dsc[179] + dwdot33dscqss6 * dscqss_dsc[214] +
    dwdot33dscqss7 * dscqss_dsc[249] + dwdot33dscqss9 * dscqss_dsc[319] +
    dwdot33dscqss11 * dscqss_dsc[389] + dwdot33dscqss12 * dscqss_dsc[424] +
    dwdot33dscqss14 * dscqss_dsc[494] + dwdot33dscqss13 * dscqss_dsc[459] +
    dwdot33dscqss15 * dscqss_dsc[529] + dwdot33dscqss8 * dscqss_dsc[284] +
    dwdot33dscqss10 * dscqss_dsc[354];
  J[213] =
    dwdot33dsc5 + dwdot33dscqss0 * dscqss_dsc[5] +
    dwdot33dscqss16 * dscqss_dsc[565] + dwdot33dscqss1 * dscqss_dsc[40] +
    dwdot33dscqss17 * dscqss_dsc[600] + dwdot33dscqss2 * dscqss_dsc[75] +
    dwdot33dscqss3 * dscqss_dsc[110] + dwdot33dscqss4 * dscqss_dsc[145] +
    dwdot33dscqss5 * dscqss_dsc[180] + dwdot33dscqss6 * dscqss_dsc[215] +
    dwdot33dscqss7 * dscqss_dsc[250] + dwdot33dscqss9 * dscqss_dsc[320] +
    dwdot33dscqss11 * dscqss_dsc[390] + dwdot33dscqss12 * dscqss_dsc[425] +
    dwdot33dscqss14 * dscqss_dsc[495] + dwdot33dscqss13 * dscqss_dsc[460] +
    dwdot33dscqss15 * dscqss_dsc[530] + dwdot33dscqss8 * dscqss_dsc[285] +
    dwdot33dscqss10 * dscqss_dsc[355];
  J[249] =
    dwdot33dsc6 + dwdot33dscqss0 * dscqss_dsc[6] +
    dwdot33dscqss16 * dscqss_dsc[566] + dwdot33dscqss1 * dscqss_dsc[41] +
    dwdot33dscqss17 * dscqss_dsc[601] + dwdot33dscqss2 * dscqss_dsc[76] +
    dwdot33dscqss3 * dscqss_dsc[111] + dwdot33dscqss4 * dscqss_dsc[146] +
    dwdot33dscqss5 * dscqss_dsc[181] + dwdot33dscqss6 * dscqss_dsc[216] +
    dwdot33dscqss7 * dscqss_dsc[251] + dwdot33dscqss9 * dscqss_dsc[321] +
    dwdot33dscqss11 * dscqss_dsc[391] + dwdot33dscqss12 * dscqss_dsc[426] +
    dwdot33dscqss14 * dscqss_dsc[496] + dwdot33dscqss13 * dscqss_dsc[461] +
    dwdot33dscqss15 * dscqss_dsc[531] + dwdot33dscqss8 * dscqss_dsc[286] +
    dwdot33dscqss10 * dscqss_dsc[356];
  J[285] =
    dwdot33dsc7 + dwdot33dscqss0 * dscqss_dsc[7] +
    dwdot33dscqss16 * dscqss_dsc[567] + dwdot33dscqss1 * dscqss_dsc[42] +
    dwdot33dscqss17 * dscqss_dsc[602] + dwdot33dscqss2 * dscqss_dsc[77] +
    dwdot33dscqss3 * dscqss_dsc[112] + dwdot33dscqss4 * dscqss_dsc[147] +
    dwdot33dscqss5 * dscqss_dsc[182] + dwdot33dscqss6 * dscqss_dsc[217] +
    dwdot33dscqss7 * dscqss_dsc[252] + dwdot33dscqss9 * dscqss_dsc[322] +
    dwdot33dscqss11 * dscqss_dsc[392] + dwdot33dscqss12 * dscqss_dsc[427] +
    dwdot33dscqss14 * dscqss_dsc[497] + dwdot33dscqss13 * dscqss_dsc[462] +
    dwdot33dscqss15 * dscqss_dsc[532] + dwdot33dscqss8 * dscqss_dsc[287] +
    dwdot33dscqss10 * dscqss_dsc[357];
  J[321] =
    dwdot33dsc8 + dwdot33dscqss0 * dscqss_dsc[8] +
    dwdot33dscqss16 * dscqss_dsc[568] + dwdot33dscqss1 * dscqss_dsc[43] +
    dwdot33dscqss17 * dscqss_dsc[603] + dwdot33dscqss2 * dscqss_dsc[78] +
    dwdot33dscqss3 * dscqss_dsc[113] + dwdot33dscqss4 * dscqss_dsc[148] +
    dwdot33dscqss5 * dscqss_dsc[183] + dwdot33dscqss6 * dscqss_dsc[218] +
    dwdot33dscqss7 * dscqss_dsc[253] + dwdot33dscqss9 * dscqss_dsc[323] +
    dwdot33dscqss11 * dscqss_dsc[393] + dwdot33dscqss12 * dscqss_dsc[428] +
    dwdot33dscqss14 * dscqss_dsc[498] + dwdot33dscqss13 * dscqss_dsc[463] +
    dwdot33dscqss15 * dscqss_dsc[533] + dwdot33dscqss8 * dscqss_dsc[288] +
    dwdot33dscqss10 * dscqss_dsc[358];
  J[357] =
    dwdot33dsc9 + dwdot33dscqss0 * dscqss_dsc[9] +
    dwdot33dscqss16 * dscqss_dsc[569] + dwdot33dscqss1 * dscqss_dsc[44] +
    dwdot33dscqss17 * dscqss_dsc[604] + dwdot33dscqss2 * dscqss_dsc[79] +
    dwdot33dscqss3 * dscqss_dsc[114] + dwdot33dscqss4 * dscqss_dsc[149] +
    dwdot33dscqss5 * dscqss_dsc[184] + dwdot33dscqss6 * dscqss_dsc[219] +
    dwdot33dscqss7 * dscqss_dsc[254] + dwdot33dscqss9 * dscqss_dsc[324] +
    dwdot33dscqss11 * dscqss_dsc[394] + dwdot33dscqss12 * dscqss_dsc[429] +
    dwdot33dscqss14 * dscqss_dsc[499] + dwdot33dscqss13 * dscqss_dsc[464] +
    dwdot33dscqss15 * dscqss_dsc[534] + dwdot33dscqss8 * dscqss_dsc[289] +
    dwdot33dscqss10 * dscqss_dsc[359];
  J[393] =
    dwdot33dsc10 + dwdot33dscqss0 * dscqss_dsc[10] +
    dwdot33dscqss16 * dscqss_dsc[570] + dwdot33dscqss1 * dscqss_dsc[45] +
    dwdot33dscqss17 * dscqss_dsc[605] + dwdot33dscqss2 * dscqss_dsc[80] +
    dwdot33dscqss3 * dscqss_dsc[115] + dwdot33dscqss4 * dscqss_dsc[150] +
    dwdot33dscqss5 * dscqss_dsc[185] + dwdot33dscqss6 * dscqss_dsc[220] +
    dwdot33dscqss7 * dscqss_dsc[255] + dwdot33dscqss9 * dscqss_dsc[325] +
    dwdot33dscqss11 * dscqss_dsc[395] + dwdot33dscqss12 * dscqss_dsc[430] +
    dwdot33dscqss14 * dscqss_dsc[500] + dwdot33dscqss13 * dscqss_dsc[465] +
    dwdot33dscqss15 * dscqss_dsc[535] + dwdot33dscqss8 * dscqss_dsc[290] +
    dwdot33dscqss10 * dscqss_dsc[360];
  J[429] =
    dwdot33dsc11 + dwdot33dscqss0 * dscqss_dsc[11] +
    dwdot33dscqss16 * dscqss_dsc[571] + dwdot33dscqss1 * dscqss_dsc[46] +
    dwdot33dscqss17 * dscqss_dsc[606] + dwdot33dscqss2 * dscqss_dsc[81] +
    dwdot33dscqss3 * dscqss_dsc[116] + dwdot33dscqss4 * dscqss_dsc[151] +
    dwdot33dscqss5 * dscqss_dsc[186] + dwdot33dscqss6 * dscqss_dsc[221] +
    dwdot33dscqss7 * dscqss_dsc[256] + dwdot33dscqss9 * dscqss_dsc[326] +
    dwdot33dscqss11 * dscqss_dsc[396] + dwdot33dscqss12 * dscqss_dsc[431] +
    dwdot33dscqss14 * dscqss_dsc[501] + dwdot33dscqss13 * dscqss_dsc[466] +
    dwdot33dscqss15 * dscqss_dsc[536] + dwdot33dscqss8 * dscqss_dsc[291] +
    dwdot33dscqss10 * dscqss_dsc[361];
  J[465] =
    dwdot33dsc12 + dwdot33dscqss0 * dscqss_dsc[12] +
    dwdot33dscqss16 * dscqss_dsc[572] + dwdot33dscqss1 * dscqss_dsc[47] +
    dwdot33dscqss17 * dscqss_dsc[607] + dwdot33dscqss2 * dscqss_dsc[82] +
    dwdot33dscqss3 * dscqss_dsc[117] + dwdot33dscqss4 * dscqss_dsc[152] +
    dwdot33dscqss5 * dscqss_dsc[187] + dwdot33dscqss6 * dscqss_dsc[222] +
    dwdot33dscqss7 * dscqss_dsc[257] + dwdot33dscqss9 * dscqss_dsc[327] +
    dwdot33dscqss11 * dscqss_dsc[397] + dwdot33dscqss12 * dscqss_dsc[432] +
    dwdot33dscqss14 * dscqss_dsc[502] + dwdot33dscqss13 * dscqss_dsc[467] +
    dwdot33dscqss15 * dscqss_dsc[537] + dwdot33dscqss8 * dscqss_dsc[292] +
    dwdot33dscqss10 * dscqss_dsc[362];
  J[501] =
    dwdot33dsc13 + dwdot33dscqss0 * dscqss_dsc[13] +
    dwdot33dscqss16 * dscqss_dsc[573] + dwdot33dscqss1 * dscqss_dsc[48] +
    dwdot33dscqss17 * dscqss_dsc[608] + dwdot33dscqss2 * dscqss_dsc[83] +
    dwdot33dscqss3 * dscqss_dsc[118] + dwdot33dscqss4 * dscqss_dsc[153] +
    dwdot33dscqss5 * dscqss_dsc[188] + dwdot33dscqss6 * dscqss_dsc[223] +
    dwdot33dscqss7 * dscqss_dsc[258] + dwdot33dscqss9 * dscqss_dsc[328] +
    dwdot33dscqss11 * dscqss_dsc[398] + dwdot33dscqss12 * dscqss_dsc[433] +
    dwdot33dscqss14 * dscqss_dsc[503] + dwdot33dscqss13 * dscqss_dsc[468] +
    dwdot33dscqss15 * dscqss_dsc[538] + dwdot33dscqss8 * dscqss_dsc[293] +
    dwdot33dscqss10 * dscqss_dsc[363];
  J[537] =
    dwdot33dsc14 + dwdot33dscqss0 * dscqss_dsc[14] +
    dwdot33dscqss16 * dscqss_dsc[574] + dwdot33dscqss1 * dscqss_dsc[49] +
    dwdot33dscqss17 * dscqss_dsc[609] + dwdot33dscqss2 * dscqss_dsc[84] +
    dwdot33dscqss3 * dscqss_dsc[119] + dwdot33dscqss4 * dscqss_dsc[154] +
    dwdot33dscqss5 * dscqss_dsc[189] + dwdot33dscqss6 * dscqss_dsc[224] +
    dwdot33dscqss7 * dscqss_dsc[259] + dwdot33dscqss9 * dscqss_dsc[329] +
    dwdot33dscqss11 * dscqss_dsc[399] + dwdot33dscqss12 * dscqss_dsc[434] +
    dwdot33dscqss14 * dscqss_dsc[504] + dwdot33dscqss13 * dscqss_dsc[469] +
    dwdot33dscqss15 * dscqss_dsc[539] + dwdot33dscqss8 * dscqss_dsc[294] +
    dwdot33dscqss10 * dscqss_dsc[364];
  J[573] =
    dwdot33dsc15 + dwdot33dscqss0 * dscqss_dsc[15] +
    dwdot33dscqss16 * dscqss_dsc[575] + dwdot33dscqss1 * dscqss_dsc[50] +
    dwdot33dscqss17 * dscqss_dsc[610] + dwdot33dscqss2 * dscqss_dsc[85] +
    dwdot33dscqss3 * dscqss_dsc[120] + dwdot33dscqss4 * dscqss_dsc[155] +
    dwdot33dscqss5 * dscqss_dsc[190] + dwdot33dscqss6 * dscqss_dsc[225] +
    dwdot33dscqss7 * dscqss_dsc[260] + dwdot33dscqss9 * dscqss_dsc[330] +
    dwdot33dscqss11 * dscqss_dsc[400] + dwdot33dscqss12 * dscqss_dsc[435] +
    dwdot33dscqss14 * dscqss_dsc[505] + dwdot33dscqss13 * dscqss_dsc[470] +
    dwdot33dscqss15 * dscqss_dsc[540] + dwdot33dscqss8 * dscqss_dsc[295] +
    dwdot33dscqss10 * dscqss_dsc[365];
  J[609] =
    dwdot33dsc16 + dwdot33dscqss0 * dscqss_dsc[16] +
    dwdot33dscqss16 * dscqss_dsc[576] + dwdot33dscqss1 * dscqss_dsc[51] +
    dwdot33dscqss17 * dscqss_dsc[611] + dwdot33dscqss2 * dscqss_dsc[86] +
    dwdot33dscqss3 * dscqss_dsc[121] + dwdot33dscqss4 * dscqss_dsc[156] +
    dwdot33dscqss5 * dscqss_dsc[191] + dwdot33dscqss6 * dscqss_dsc[226] +
    dwdot33dscqss7 * dscqss_dsc[261] + dwdot33dscqss9 * dscqss_dsc[331] +
    dwdot33dscqss11 * dscqss_dsc[401] + dwdot33dscqss12 * dscqss_dsc[436] +
    dwdot33dscqss14 * dscqss_dsc[506] + dwdot33dscqss13 * dscqss_dsc[471] +
    dwdot33dscqss15 * dscqss_dsc[541] + dwdot33dscqss8 * dscqss_dsc[296] +
    dwdot33dscqss10 * dscqss_dsc[366];
  J[645] =
    dwdot33dsc17 + dwdot33dscqss0 * dscqss_dsc[17] +
    dwdot33dscqss16 * dscqss_dsc[577] + dwdot33dscqss1 * dscqss_dsc[52] +
    dwdot33dscqss17 * dscqss_dsc[612] + dwdot33dscqss2 * dscqss_dsc[87] +
    dwdot33dscqss3 * dscqss_dsc[122] + dwdot33dscqss4 * dscqss_dsc[157] +
    dwdot33dscqss5 * dscqss_dsc[192] + dwdot33dscqss6 * dscqss_dsc[227] +
    dwdot33dscqss7 * dscqss_dsc[262] + dwdot33dscqss9 * dscqss_dsc[332] +
    dwdot33dscqss11 * dscqss_dsc[402] + dwdot33dscqss12 * dscqss_dsc[437] +
    dwdot33dscqss14 * dscqss_dsc[507] + dwdot33dscqss13 * dscqss_dsc[472] +
    dwdot33dscqss15 * dscqss_dsc[542] + dwdot33dscqss8 * dscqss_dsc[297] +
    dwdot33dscqss10 * dscqss_dsc[367];
  J[681] =
    dwdot33dsc18 + dwdot33dscqss0 * dscqss_dsc[18] +
    dwdot33dscqss16 * dscqss_dsc[578] + dwdot33dscqss1 * dscqss_dsc[53] +
    dwdot33dscqss17 * dscqss_dsc[613] + dwdot33dscqss2 * dscqss_dsc[88] +
    dwdot33dscqss3 * dscqss_dsc[123] + dwdot33dscqss4 * dscqss_dsc[158] +
    dwdot33dscqss5 * dscqss_dsc[193] + dwdot33dscqss6 * dscqss_dsc[228] +
    dwdot33dscqss7 * dscqss_dsc[263] + dwdot33dscqss9 * dscqss_dsc[333] +
    dwdot33dscqss11 * dscqss_dsc[403] + dwdot33dscqss12 * dscqss_dsc[438] +
    dwdot33dscqss14 * dscqss_dsc[508] + dwdot33dscqss13 * dscqss_dsc[473] +
    dwdot33dscqss15 * dscqss_dsc[543] + dwdot33dscqss8 * dscqss_dsc[298] +
    dwdot33dscqss10 * dscqss_dsc[368];
  J[717] =
    dwdot33dsc19 + dwdot33dscqss0 * dscqss_dsc[19] +
    dwdot33dscqss16 * dscqss_dsc[579] + dwdot33dscqss1 * dscqss_dsc[54] +
    dwdot33dscqss17 * dscqss_dsc[614] + dwdot33dscqss2 * dscqss_dsc[89] +
    dwdot33dscqss3 * dscqss_dsc[124] + dwdot33dscqss4 * dscqss_dsc[159] +
    dwdot33dscqss5 * dscqss_dsc[194] + dwdot33dscqss6 * dscqss_dsc[229] +
    dwdot33dscqss7 * dscqss_dsc[264] + dwdot33dscqss9 * dscqss_dsc[334] +
    dwdot33dscqss11 * dscqss_dsc[404] + dwdot33dscqss12 * dscqss_dsc[439] +
    dwdot33dscqss14 * dscqss_dsc[509] + dwdot33dscqss13 * dscqss_dsc[474] +
    dwdot33dscqss15 * dscqss_dsc[544] + dwdot33dscqss8 * dscqss_dsc[299] +
    dwdot33dscqss10 * dscqss_dsc[369];
  J[753] =
    dwdot33dsc20 + dwdot33dscqss0 * dscqss_dsc[20] +
    dwdot33dscqss16 * dscqss_dsc[580] + dwdot33dscqss1 * dscqss_dsc[55] +
    dwdot33dscqss17 * dscqss_dsc[615] + dwdot33dscqss2 * dscqss_dsc[90] +
    dwdot33dscqss3 * dscqss_dsc[125] + dwdot33dscqss4 * dscqss_dsc[160] +
    dwdot33dscqss5 * dscqss_dsc[195] + dwdot33dscqss6 * dscqss_dsc[230] +
    dwdot33dscqss7 * dscqss_dsc[265] + dwdot33dscqss9 * dscqss_dsc[335] +
    dwdot33dscqss11 * dscqss_dsc[405] + dwdot33dscqss12 * dscqss_dsc[440] +
    dwdot33dscqss14 * dscqss_dsc[510] + dwdot33dscqss13 * dscqss_dsc[475] +
    dwdot33dscqss15 * dscqss_dsc[545] + dwdot33dscqss8 * dscqss_dsc[300] +
    dwdot33dscqss10 * dscqss_dsc[370];
  J[789] =
    dwdot33dsc21 + dwdot33dscqss0 * dscqss_dsc[21] +
    dwdot33dscqss16 * dscqss_dsc[581] + dwdot33dscqss1 * dscqss_dsc[56] +
    dwdot33dscqss17 * dscqss_dsc[616] + dwdot33dscqss2 * dscqss_dsc[91] +
    dwdot33dscqss3 * dscqss_dsc[126] + dwdot33dscqss4 * dscqss_dsc[161] +
    dwdot33dscqss5 * dscqss_dsc[196] + dwdot33dscqss6 * dscqss_dsc[231] +
    dwdot33dscqss7 * dscqss_dsc[266] + dwdot33dscqss9 * dscqss_dsc[336] +
    dwdot33dscqss11 * dscqss_dsc[406] + dwdot33dscqss12 * dscqss_dsc[441] +
    dwdot33dscqss14 * dscqss_dsc[511] + dwdot33dscqss13 * dscqss_dsc[476] +
    dwdot33dscqss15 * dscqss_dsc[546] + dwdot33dscqss8 * dscqss_dsc[301] +
    dwdot33dscqss10 * dscqss_dsc[371];
  J[825] =
    dwdot33dsc22 + dwdot33dscqss0 * dscqss_dsc[22] +
    dwdot33dscqss16 * dscqss_dsc[582] + dwdot33dscqss1 * dscqss_dsc[57] +
    dwdot33dscqss17 * dscqss_dsc[617] + dwdot33dscqss2 * dscqss_dsc[92] +
    dwdot33dscqss3 * dscqss_dsc[127] + dwdot33dscqss4 * dscqss_dsc[162] +
    dwdot33dscqss5 * dscqss_dsc[197] + dwdot33dscqss6 * dscqss_dsc[232] +
    dwdot33dscqss7 * dscqss_dsc[267] + dwdot33dscqss9 * dscqss_dsc[337] +
    dwdot33dscqss11 * dscqss_dsc[407] + dwdot33dscqss12 * dscqss_dsc[442] +
    dwdot33dscqss14 * dscqss_dsc[512] + dwdot33dscqss13 * dscqss_dsc[477] +
    dwdot33dscqss15 * dscqss_dsc[547] + dwdot33dscqss8 * dscqss_dsc[302] +
    dwdot33dscqss10 * dscqss_dsc[372];
  J[861] =
    dwdot33dsc23 + dwdot33dscqss0 * dscqss_dsc[23] +
    dwdot33dscqss16 * dscqss_dsc[583] + dwdot33dscqss1 * dscqss_dsc[58] +
    dwdot33dscqss17 * dscqss_dsc[618] + dwdot33dscqss2 * dscqss_dsc[93] +
    dwdot33dscqss3 * dscqss_dsc[128] + dwdot33dscqss4 * dscqss_dsc[163] +
    dwdot33dscqss5 * dscqss_dsc[198] + dwdot33dscqss6 * dscqss_dsc[233] +
    dwdot33dscqss7 * dscqss_dsc[268] + dwdot33dscqss9 * dscqss_dsc[338] +
    dwdot33dscqss11 * dscqss_dsc[408] + dwdot33dscqss12 * dscqss_dsc[443] +
    dwdot33dscqss14 * dscqss_dsc[513] + dwdot33dscqss13 * dscqss_dsc[478] +
    dwdot33dscqss15 * dscqss_dsc[548] + dwdot33dscqss8 * dscqss_dsc[303] +
    dwdot33dscqss10 * dscqss_dsc[373];
  J[897] =
    dwdot33dsc24 + dwdot33dscqss0 * dscqss_dsc[24] +
    dwdot33dscqss16 * dscqss_dsc[584] + dwdot33dscqss1 * dscqss_dsc[59] +
    dwdot33dscqss17 * dscqss_dsc[619] + dwdot33dscqss2 * dscqss_dsc[94] +
    dwdot33dscqss3 * dscqss_dsc[129] + dwdot33dscqss4 * dscqss_dsc[164] +
    dwdot33dscqss5 * dscqss_dsc[199] + dwdot33dscqss6 * dscqss_dsc[234] +
    dwdot33dscqss7 * dscqss_dsc[269] + dwdot33dscqss9 * dscqss_dsc[339] +
    dwdot33dscqss11 * dscqss_dsc[409] + dwdot33dscqss12 * dscqss_dsc[444] +
    dwdot33dscqss14 * dscqss_dsc[514] + dwdot33dscqss13 * dscqss_dsc[479] +
    dwdot33dscqss15 * dscqss_dsc[549] + dwdot33dscqss8 * dscqss_dsc[304] +
    dwdot33dscqss10 * dscqss_dsc[374];
  J[933] =
    dwdot33dsc25 + dwdot33dscqss0 * dscqss_dsc[25] +
    dwdot33dscqss16 * dscqss_dsc[585] + dwdot33dscqss1 * dscqss_dsc[60] +
    dwdot33dscqss17 * dscqss_dsc[620] + dwdot33dscqss2 * dscqss_dsc[95] +
    dwdot33dscqss3 * dscqss_dsc[130] + dwdot33dscqss4 * dscqss_dsc[165] +
    dwdot33dscqss5 * dscqss_dsc[200] + dwdot33dscqss6 * dscqss_dsc[235] +
    dwdot33dscqss7 * dscqss_dsc[270] + dwdot33dscqss9 * dscqss_dsc[340] +
    dwdot33dscqss11 * dscqss_dsc[410] + dwdot33dscqss12 * dscqss_dsc[445] +
    dwdot33dscqss14 * dscqss_dsc[515] + dwdot33dscqss13 * dscqss_dsc[480] +
    dwdot33dscqss15 * dscqss_dsc[550] + dwdot33dscqss8 * dscqss_dsc[305] +
    dwdot33dscqss10 * dscqss_dsc[375];
  J[969] =
    dwdot33dsc26 + dwdot33dscqss0 * dscqss_dsc[26] +
    dwdot33dscqss16 * dscqss_dsc[586] + dwdot33dscqss1 * dscqss_dsc[61] +
    dwdot33dscqss17 * dscqss_dsc[621] + dwdot33dscqss2 * dscqss_dsc[96] +
    dwdot33dscqss3 * dscqss_dsc[131] + dwdot33dscqss4 * dscqss_dsc[166] +
    dwdot33dscqss5 * dscqss_dsc[201] + dwdot33dscqss6 * dscqss_dsc[236] +
    dwdot33dscqss7 * dscqss_dsc[271] + dwdot33dscqss9 * dscqss_dsc[341] +
    dwdot33dscqss11 * dscqss_dsc[411] + dwdot33dscqss12 * dscqss_dsc[446] +
    dwdot33dscqss14 * dscqss_dsc[516] + dwdot33dscqss13 * dscqss_dsc[481] +
    dwdot33dscqss15 * dscqss_dsc[551] + dwdot33dscqss8 * dscqss_dsc[306] +
    dwdot33dscqss10 * dscqss_dsc[376];
  J[1005] =
    dwdot33dsc27 + dwdot33dscqss0 * dscqss_dsc[27] +
    dwdot33dscqss16 * dscqss_dsc[587] + dwdot33dscqss1 * dscqss_dsc[62] +
    dwdot33dscqss17 * dscqss_dsc[622] + dwdot33dscqss2 * dscqss_dsc[97] +
    dwdot33dscqss3 * dscqss_dsc[132] + dwdot33dscqss4 * dscqss_dsc[167] +
    dwdot33dscqss5 * dscqss_dsc[202] + dwdot33dscqss6 * dscqss_dsc[237] +
    dwdot33dscqss7 * dscqss_dsc[272] + dwdot33dscqss9 * dscqss_dsc[342] +
    dwdot33dscqss11 * dscqss_dsc[412] + dwdot33dscqss12 * dscqss_dsc[447] +
    dwdot33dscqss14 * dscqss_dsc[517] + dwdot33dscqss13 * dscqss_dsc[482] +
    dwdot33dscqss15 * dscqss_dsc[552] + dwdot33dscqss8 * dscqss_dsc[307] +
    dwdot33dscqss10 * dscqss_dsc[377];
  J[1041] =
    dwdot33dsc28 + dwdot33dscqss0 * dscqss_dsc[28] +
    dwdot33dscqss16 * dscqss_dsc[588] + dwdot33dscqss1 * dscqss_dsc[63] +
    dwdot33dscqss17 * dscqss_dsc[623] + dwdot33dscqss2 * dscqss_dsc[98] +
    dwdot33dscqss3 * dscqss_dsc[133] + dwdot33dscqss4 * dscqss_dsc[168] +
    dwdot33dscqss5 * dscqss_dsc[203] + dwdot33dscqss6 * dscqss_dsc[238] +
    dwdot33dscqss7 * dscqss_dsc[273] + dwdot33dscqss9 * dscqss_dsc[343] +
    dwdot33dscqss11 * dscqss_dsc[413] + dwdot33dscqss12 * dscqss_dsc[448] +
    dwdot33dscqss14 * dscqss_dsc[518] + dwdot33dscqss13 * dscqss_dsc[483] +
    dwdot33dscqss15 * dscqss_dsc[553] + dwdot33dscqss8 * dscqss_dsc[308] +
    dwdot33dscqss10 * dscqss_dsc[378];
  J[1077] =
    dwdot33dsc29 + dwdot33dscqss0 * dscqss_dsc[29] +
    dwdot33dscqss16 * dscqss_dsc[589] + dwdot33dscqss1 * dscqss_dsc[64] +
    dwdot33dscqss17 * dscqss_dsc[624] + dwdot33dscqss2 * dscqss_dsc[99] +
    dwdot33dscqss3 * dscqss_dsc[134] + dwdot33dscqss4 * dscqss_dsc[169] +
    dwdot33dscqss5 * dscqss_dsc[204] + dwdot33dscqss6 * dscqss_dsc[239] +
    dwdot33dscqss7 * dscqss_dsc[274] + dwdot33dscqss9 * dscqss_dsc[344] +
    dwdot33dscqss11 * dscqss_dsc[414] + dwdot33dscqss12 * dscqss_dsc[449] +
    dwdot33dscqss14 * dscqss_dsc[519] + dwdot33dscqss13 * dscqss_dsc[484] +
    dwdot33dscqss15 * dscqss_dsc[554] + dwdot33dscqss8 * dscqss_dsc[309] +
    dwdot33dscqss10 * dscqss_dsc[379];
  J[1113] =
    dwdot33dsc30 + dwdot33dscqss0 * dscqss_dsc[30] +
    dwdot33dscqss16 * dscqss_dsc[590] + dwdot33dscqss1 * dscqss_dsc[65] +
    dwdot33dscqss17 * dscqss_dsc[625] + dwdot33dscqss2 * dscqss_dsc[100] +
    dwdot33dscqss3 * dscqss_dsc[135] + dwdot33dscqss4 * dscqss_dsc[170] +
    dwdot33dscqss5 * dscqss_dsc[205] + dwdot33dscqss6 * dscqss_dsc[240] +
    dwdot33dscqss7 * dscqss_dsc[275] + dwdot33dscqss9 * dscqss_dsc[345] +
    dwdot33dscqss11 * dscqss_dsc[415] + dwdot33dscqss12 * dscqss_dsc[450] +
    dwdot33dscqss14 * dscqss_dsc[520] + dwdot33dscqss13 * dscqss_dsc[485] +
    dwdot33dscqss15 * dscqss_dsc[555] + dwdot33dscqss8 * dscqss_dsc[310] +
    dwdot33dscqss10 * dscqss_dsc[380];
  J[1149] =
    dwdot33dsc31 + dwdot33dscqss0 * dscqss_dsc[31] +
    dwdot33dscqss16 * dscqss_dsc[591] + dwdot33dscqss1 * dscqss_dsc[66] +
    dwdot33dscqss17 * dscqss_dsc[626] + dwdot33dscqss2 * dscqss_dsc[101] +
    dwdot33dscqss3 * dscqss_dsc[136] + dwdot33dscqss4 * dscqss_dsc[171] +
    dwdot33dscqss5 * dscqss_dsc[206] + dwdot33dscqss6 * dscqss_dsc[241] +
    dwdot33dscqss7 * dscqss_dsc[276] + dwdot33dscqss9 * dscqss_dsc[346] +
    dwdot33dscqss11 * dscqss_dsc[416] + dwdot33dscqss12 * dscqss_dsc[451] +
    dwdot33dscqss14 * dscqss_dsc[521] + dwdot33dscqss13 * dscqss_dsc[486] +
    dwdot33dscqss15 * dscqss_dsc[556] + dwdot33dscqss8 * dscqss_dsc[311] +
    dwdot33dscqss10 * dscqss_dsc[381];
  J[1185] =
    dwdot33dsc32 + dwdot33dscqss0 * dscqss_dsc[32] +
    dwdot33dscqss16 * dscqss_dsc[592] + dwdot33dscqss1 * dscqss_dsc[67] +
    dwdot33dscqss17 * dscqss_dsc[627] + dwdot33dscqss2 * dscqss_dsc[102] +
    dwdot33dscqss3 * dscqss_dsc[137] + dwdot33dscqss4 * dscqss_dsc[172] +
    dwdot33dscqss5 * dscqss_dsc[207] + dwdot33dscqss6 * dscqss_dsc[242] +
    dwdot33dscqss7 * dscqss_dsc[277] + dwdot33dscqss9 * dscqss_dsc[347] +
    dwdot33dscqss11 * dscqss_dsc[417] + dwdot33dscqss12 * dscqss_dsc[452] +
    dwdot33dscqss14 * dscqss_dsc[522] + dwdot33dscqss13 * dscqss_dsc[487] +
    dwdot33dscqss15 * dscqss_dsc[557] + dwdot33dscqss8 * dscqss_dsc[312] +
    dwdot33dscqss10 * dscqss_dsc[382];
  J[1221] =
    dwdot33dsc33 + dwdot33dscqss0 * dscqss_dsc[33] +
    dwdot33dscqss16 * dscqss_dsc[593] + dwdot33dscqss1 * dscqss_dsc[68] +
    dwdot33dscqss17 * dscqss_dsc[628] + dwdot33dscqss2 * dscqss_dsc[103] +
    dwdot33dscqss3 * dscqss_dsc[138] + dwdot33dscqss4 * dscqss_dsc[173] +
    dwdot33dscqss5 * dscqss_dsc[208] + dwdot33dscqss6 * dscqss_dsc[243] +
    dwdot33dscqss7 * dscqss_dsc[278] + dwdot33dscqss9 * dscqss_dsc[348] +
    dwdot33dscqss11 * dscqss_dsc[418] + dwdot33dscqss12 * dscqss_dsc[453] +
    dwdot33dscqss14 * dscqss_dsc[523] + dwdot33dscqss13 * dscqss_dsc[488] +
    dwdot33dscqss15 * dscqss_dsc[558] + dwdot33dscqss8 * dscqss_dsc[313] +
    dwdot33dscqss10 * dscqss_dsc[383];
  J[1257] =
    dwdot33dsc34 + dwdot33dscqss0 * dscqss_dsc[34] +
    dwdot33dscqss16 * dscqss_dsc[594] + dwdot33dscqss1 * dscqss_dsc[69] +
    dwdot33dscqss17 * dscqss_dsc[629] + dwdot33dscqss2 * dscqss_dsc[104] +
    dwdot33dscqss3 * dscqss_dsc[139] + dwdot33dscqss4 * dscqss_dsc[174] +
    dwdot33dscqss5 * dscqss_dsc[209] + dwdot33dscqss6 * dscqss_dsc[244] +
    dwdot33dscqss7 * dscqss_dsc[279] + dwdot33dscqss9 * dscqss_dsc[349] +
    dwdot33dscqss11 * dscqss_dsc[419] + dwdot33dscqss12 * dscqss_dsc[454] +
    dwdot33dscqss14 * dscqss_dsc[524] + dwdot33dscqss13 * dscqss_dsc[489] +
    dwdot33dscqss15 * dscqss_dsc[559] + dwdot33dscqss8 * dscqss_dsc[314] +
    dwdot33dscqss10 * dscqss_dsc[384];
  J[34] =
    dwdot34dsc0 + dwdot34dscqss0 * dscqss_dsc[0] +
    dwdot34dscqss16 * dscqss_dsc[560] + dwdot34dscqss1 * dscqss_dsc[35] +
    dwdot34dscqss17 * dscqss_dsc[595] + dwdot34dscqss2 * dscqss_dsc[70] +
    dwdot34dscqss3 * dscqss_dsc[105] + dwdot34dscqss4 * dscqss_dsc[140] +
    dwdot34dscqss5 * dscqss_dsc[175] + dwdot34dscqss6 * dscqss_dsc[210] +
    dwdot34dscqss7 * dscqss_dsc[245] + dwdot34dscqss9 * dscqss_dsc[315] +
    dwdot34dscqss11 * dscqss_dsc[385] + dwdot34dscqss12 * dscqss_dsc[420] +
    dwdot34dscqss14 * dscqss_dsc[490] + dwdot34dscqss13 * dscqss_dsc[455] +
    dwdot34dscqss15 * dscqss_dsc[525] + dwdot34dscqss8 * dscqss_dsc[280] +
    dwdot34dscqss10 * dscqss_dsc[350];
  J[70] =
    dwdot34dsc1 + dwdot34dscqss0 * dscqss_dsc[1] +
    dwdot34dscqss16 * dscqss_dsc[561] + dwdot34dscqss1 * dscqss_dsc[36] +
    dwdot34dscqss17 * dscqss_dsc[596] + dwdot34dscqss2 * dscqss_dsc[71] +
    dwdot34dscqss3 * dscqss_dsc[106] + dwdot34dscqss4 * dscqss_dsc[141] +
    dwdot34dscqss5 * dscqss_dsc[176] + dwdot34dscqss6 * dscqss_dsc[211] +
    dwdot34dscqss7 * dscqss_dsc[246] + dwdot34dscqss9 * dscqss_dsc[316] +
    dwdot34dscqss11 * dscqss_dsc[386] + dwdot34dscqss12 * dscqss_dsc[421] +
    dwdot34dscqss14 * dscqss_dsc[491] + dwdot34dscqss13 * dscqss_dsc[456] +
    dwdot34dscqss15 * dscqss_dsc[526] + dwdot34dscqss8 * dscqss_dsc[281] +
    dwdot34dscqss10 * dscqss_dsc[351];
  J[106] =
    dwdot34dsc2 + dwdot34dscqss0 * dscqss_dsc[2] +
    dwdot34dscqss16 * dscqss_dsc[562] + dwdot34dscqss1 * dscqss_dsc[37] +
    dwdot34dscqss17 * dscqss_dsc[597] + dwdot34dscqss2 * dscqss_dsc[72] +
    dwdot34dscqss3 * dscqss_dsc[107] + dwdot34dscqss4 * dscqss_dsc[142] +
    dwdot34dscqss5 * dscqss_dsc[177] + dwdot34dscqss6 * dscqss_dsc[212] +
    dwdot34dscqss7 * dscqss_dsc[247] + dwdot34dscqss9 * dscqss_dsc[317] +
    dwdot34dscqss11 * dscqss_dsc[387] + dwdot34dscqss12 * dscqss_dsc[422] +
    dwdot34dscqss14 * dscqss_dsc[492] + dwdot34dscqss13 * dscqss_dsc[457] +
    dwdot34dscqss15 * dscqss_dsc[527] + dwdot34dscqss8 * dscqss_dsc[282] +
    dwdot34dscqss10 * dscqss_dsc[352];
  J[142] =
    dwdot34dsc3 + dwdot34dscqss0 * dscqss_dsc[3] +
    dwdot34dscqss16 * dscqss_dsc[563] + dwdot34dscqss1 * dscqss_dsc[38] +
    dwdot34dscqss17 * dscqss_dsc[598] + dwdot34dscqss2 * dscqss_dsc[73] +
    dwdot34dscqss3 * dscqss_dsc[108] + dwdot34dscqss4 * dscqss_dsc[143] +
    dwdot34dscqss5 * dscqss_dsc[178] + dwdot34dscqss6 * dscqss_dsc[213] +
    dwdot34dscqss7 * dscqss_dsc[248] + dwdot34dscqss9 * dscqss_dsc[318] +
    dwdot34dscqss11 * dscqss_dsc[388] + dwdot34dscqss12 * dscqss_dsc[423] +
    dwdot34dscqss14 * dscqss_dsc[493] + dwdot34dscqss13 * dscqss_dsc[458] +
    dwdot34dscqss15 * dscqss_dsc[528] + dwdot34dscqss8 * dscqss_dsc[283] +
    dwdot34dscqss10 * dscqss_dsc[353];
  J[178] =
    dwdot34dsc4 + dwdot34dscqss0 * dscqss_dsc[4] +
    dwdot34dscqss16 * dscqss_dsc[564] + dwdot34dscqss1 * dscqss_dsc[39] +
    dwdot34dscqss17 * dscqss_dsc[599] + dwdot34dscqss2 * dscqss_dsc[74] +
    dwdot34dscqss3 * dscqss_dsc[109] + dwdot34dscqss4 * dscqss_dsc[144] +
    dwdot34dscqss5 * dscqss_dsc[179] + dwdot34dscqss6 * dscqss_dsc[214] +
    dwdot34dscqss7 * dscqss_dsc[249] + dwdot34dscqss9 * dscqss_dsc[319] +
    dwdot34dscqss11 * dscqss_dsc[389] + dwdot34dscqss12 * dscqss_dsc[424] +
    dwdot34dscqss14 * dscqss_dsc[494] + dwdot34dscqss13 * dscqss_dsc[459] +
    dwdot34dscqss15 * dscqss_dsc[529] + dwdot34dscqss8 * dscqss_dsc[284] +
    dwdot34dscqss10 * dscqss_dsc[354];
  J[214] =
    dwdot34dsc5 + dwdot34dscqss0 * dscqss_dsc[5] +
    dwdot34dscqss16 * dscqss_dsc[565] + dwdot34dscqss1 * dscqss_dsc[40] +
    dwdot34dscqss17 * dscqss_dsc[600] + dwdot34dscqss2 * dscqss_dsc[75] +
    dwdot34dscqss3 * dscqss_dsc[110] + dwdot34dscqss4 * dscqss_dsc[145] +
    dwdot34dscqss5 * dscqss_dsc[180] + dwdot34dscqss6 * dscqss_dsc[215] +
    dwdot34dscqss7 * dscqss_dsc[250] + dwdot34dscqss9 * dscqss_dsc[320] +
    dwdot34dscqss11 * dscqss_dsc[390] + dwdot34dscqss12 * dscqss_dsc[425] +
    dwdot34dscqss14 * dscqss_dsc[495] + dwdot34dscqss13 * dscqss_dsc[460] +
    dwdot34dscqss15 * dscqss_dsc[530] + dwdot34dscqss8 * dscqss_dsc[285] +
    dwdot34dscqss10 * dscqss_dsc[355];
  J[250] =
    dwdot34dsc6 + dwdot34dscqss0 * dscqss_dsc[6] +
    dwdot34dscqss16 * dscqss_dsc[566] + dwdot34dscqss1 * dscqss_dsc[41] +
    dwdot34dscqss17 * dscqss_dsc[601] + dwdot34dscqss2 * dscqss_dsc[76] +
    dwdot34dscqss3 * dscqss_dsc[111] + dwdot34dscqss4 * dscqss_dsc[146] +
    dwdot34dscqss5 * dscqss_dsc[181] + dwdot34dscqss6 * dscqss_dsc[216] +
    dwdot34dscqss7 * dscqss_dsc[251] + dwdot34dscqss9 * dscqss_dsc[321] +
    dwdot34dscqss11 * dscqss_dsc[391] + dwdot34dscqss12 * dscqss_dsc[426] +
    dwdot34dscqss14 * dscqss_dsc[496] + dwdot34dscqss13 * dscqss_dsc[461] +
    dwdot34dscqss15 * dscqss_dsc[531] + dwdot34dscqss8 * dscqss_dsc[286] +
    dwdot34dscqss10 * dscqss_dsc[356];
  J[286] =
    dwdot34dsc7 + dwdot34dscqss0 * dscqss_dsc[7] +
    dwdot34dscqss16 * dscqss_dsc[567] + dwdot34dscqss1 * dscqss_dsc[42] +
    dwdot34dscqss17 * dscqss_dsc[602] + dwdot34dscqss2 * dscqss_dsc[77] +
    dwdot34dscqss3 * dscqss_dsc[112] + dwdot34dscqss4 * dscqss_dsc[147] +
    dwdot34dscqss5 * dscqss_dsc[182] + dwdot34dscqss6 * dscqss_dsc[217] +
    dwdot34dscqss7 * dscqss_dsc[252] + dwdot34dscqss9 * dscqss_dsc[322] +
    dwdot34dscqss11 * dscqss_dsc[392] + dwdot34dscqss12 * dscqss_dsc[427] +
    dwdot34dscqss14 * dscqss_dsc[497] + dwdot34dscqss13 * dscqss_dsc[462] +
    dwdot34dscqss15 * dscqss_dsc[532] + dwdot34dscqss8 * dscqss_dsc[287] +
    dwdot34dscqss10 * dscqss_dsc[357];
  J[322] =
    dwdot34dsc8 + dwdot34dscqss0 * dscqss_dsc[8] +
    dwdot34dscqss16 * dscqss_dsc[568] + dwdot34dscqss1 * dscqss_dsc[43] +
    dwdot34dscqss17 * dscqss_dsc[603] + dwdot34dscqss2 * dscqss_dsc[78] +
    dwdot34dscqss3 * dscqss_dsc[113] + dwdot34dscqss4 * dscqss_dsc[148] +
    dwdot34dscqss5 * dscqss_dsc[183] + dwdot34dscqss6 * dscqss_dsc[218] +
    dwdot34dscqss7 * dscqss_dsc[253] + dwdot34dscqss9 * dscqss_dsc[323] +
    dwdot34dscqss11 * dscqss_dsc[393] + dwdot34dscqss12 * dscqss_dsc[428] +
    dwdot34dscqss14 * dscqss_dsc[498] + dwdot34dscqss13 * dscqss_dsc[463] +
    dwdot34dscqss15 * dscqss_dsc[533] + dwdot34dscqss8 * dscqss_dsc[288] +
    dwdot34dscqss10 * dscqss_dsc[358];
  J[358] =
    dwdot34dsc9 + dwdot34dscqss0 * dscqss_dsc[9] +
    dwdot34dscqss16 * dscqss_dsc[569] + dwdot34dscqss1 * dscqss_dsc[44] +
    dwdot34dscqss17 * dscqss_dsc[604] + dwdot34dscqss2 * dscqss_dsc[79] +
    dwdot34dscqss3 * dscqss_dsc[114] + dwdot34dscqss4 * dscqss_dsc[149] +
    dwdot34dscqss5 * dscqss_dsc[184] + dwdot34dscqss6 * dscqss_dsc[219] +
    dwdot34dscqss7 * dscqss_dsc[254] + dwdot34dscqss9 * dscqss_dsc[324] +
    dwdot34dscqss11 * dscqss_dsc[394] + dwdot34dscqss12 * dscqss_dsc[429] +
    dwdot34dscqss14 * dscqss_dsc[499] + dwdot34dscqss13 * dscqss_dsc[464] +
    dwdot34dscqss15 * dscqss_dsc[534] + dwdot34dscqss8 * dscqss_dsc[289] +
    dwdot34dscqss10 * dscqss_dsc[359];
  J[394] =
    dwdot34dsc10 + dwdot34dscqss0 * dscqss_dsc[10] +
    dwdot34dscqss16 * dscqss_dsc[570] + dwdot34dscqss1 * dscqss_dsc[45] +
    dwdot34dscqss17 * dscqss_dsc[605] + dwdot34dscqss2 * dscqss_dsc[80] +
    dwdot34dscqss3 * dscqss_dsc[115] + dwdot34dscqss4 * dscqss_dsc[150] +
    dwdot34dscqss5 * dscqss_dsc[185] + dwdot34dscqss6 * dscqss_dsc[220] +
    dwdot34dscqss7 * dscqss_dsc[255] + dwdot34dscqss9 * dscqss_dsc[325] +
    dwdot34dscqss11 * dscqss_dsc[395] + dwdot34dscqss12 * dscqss_dsc[430] +
    dwdot34dscqss14 * dscqss_dsc[500] + dwdot34dscqss13 * dscqss_dsc[465] +
    dwdot34dscqss15 * dscqss_dsc[535] + dwdot34dscqss8 * dscqss_dsc[290] +
    dwdot34dscqss10 * dscqss_dsc[360];
  J[430] =
    dwdot34dsc11 + dwdot34dscqss0 * dscqss_dsc[11] +
    dwdot34dscqss16 * dscqss_dsc[571] + dwdot34dscqss1 * dscqss_dsc[46] +
    dwdot34dscqss17 * dscqss_dsc[606] + dwdot34dscqss2 * dscqss_dsc[81] +
    dwdot34dscqss3 * dscqss_dsc[116] + dwdot34dscqss4 * dscqss_dsc[151] +
    dwdot34dscqss5 * dscqss_dsc[186] + dwdot34dscqss6 * dscqss_dsc[221] +
    dwdot34dscqss7 * dscqss_dsc[256] + dwdot34dscqss9 * dscqss_dsc[326] +
    dwdot34dscqss11 * dscqss_dsc[396] + dwdot34dscqss12 * dscqss_dsc[431] +
    dwdot34dscqss14 * dscqss_dsc[501] + dwdot34dscqss13 * dscqss_dsc[466] +
    dwdot34dscqss15 * dscqss_dsc[536] + dwdot34dscqss8 * dscqss_dsc[291] +
    dwdot34dscqss10 * dscqss_dsc[361];
  J[466] =
    dwdot34dsc12 + dwdot34dscqss0 * dscqss_dsc[12] +
    dwdot34dscqss16 * dscqss_dsc[572] + dwdot34dscqss1 * dscqss_dsc[47] +
    dwdot34dscqss17 * dscqss_dsc[607] + dwdot34dscqss2 * dscqss_dsc[82] +
    dwdot34dscqss3 * dscqss_dsc[117] + dwdot34dscqss4 * dscqss_dsc[152] +
    dwdot34dscqss5 * dscqss_dsc[187] + dwdot34dscqss6 * dscqss_dsc[222] +
    dwdot34dscqss7 * dscqss_dsc[257] + dwdot34dscqss9 * dscqss_dsc[327] +
    dwdot34dscqss11 * dscqss_dsc[397] + dwdot34dscqss12 * dscqss_dsc[432] +
    dwdot34dscqss14 * dscqss_dsc[502] + dwdot34dscqss13 * dscqss_dsc[467] +
    dwdot34dscqss15 * dscqss_dsc[537] + dwdot34dscqss8 * dscqss_dsc[292] +
    dwdot34dscqss10 * dscqss_dsc[362];
  J[502] =
    dwdot34dsc13 + dwdot34dscqss0 * dscqss_dsc[13] +
    dwdot34dscqss16 * dscqss_dsc[573] + dwdot34dscqss1 * dscqss_dsc[48] +
    dwdot34dscqss17 * dscqss_dsc[608] + dwdot34dscqss2 * dscqss_dsc[83] +
    dwdot34dscqss3 * dscqss_dsc[118] + dwdot34dscqss4 * dscqss_dsc[153] +
    dwdot34dscqss5 * dscqss_dsc[188] + dwdot34dscqss6 * dscqss_dsc[223] +
    dwdot34dscqss7 * dscqss_dsc[258] + dwdot34dscqss9 * dscqss_dsc[328] +
    dwdot34dscqss11 * dscqss_dsc[398] + dwdot34dscqss12 * dscqss_dsc[433] +
    dwdot34dscqss14 * dscqss_dsc[503] + dwdot34dscqss13 * dscqss_dsc[468] +
    dwdot34dscqss15 * dscqss_dsc[538] + dwdot34dscqss8 * dscqss_dsc[293] +
    dwdot34dscqss10 * dscqss_dsc[363];
  J[538] =
    dwdot34dsc14 + dwdot34dscqss0 * dscqss_dsc[14] +
    dwdot34dscqss16 * dscqss_dsc[574] + dwdot34dscqss1 * dscqss_dsc[49] +
    dwdot34dscqss17 * dscqss_dsc[609] + dwdot34dscqss2 * dscqss_dsc[84] +
    dwdot34dscqss3 * dscqss_dsc[119] + dwdot34dscqss4 * dscqss_dsc[154] +
    dwdot34dscqss5 * dscqss_dsc[189] + dwdot34dscqss6 * dscqss_dsc[224] +
    dwdot34dscqss7 * dscqss_dsc[259] + dwdot34dscqss9 * dscqss_dsc[329] +
    dwdot34dscqss11 * dscqss_dsc[399] + dwdot34dscqss12 * dscqss_dsc[434] +
    dwdot34dscqss14 * dscqss_dsc[504] + dwdot34dscqss13 * dscqss_dsc[469] +
    dwdot34dscqss15 * dscqss_dsc[539] + dwdot34dscqss8 * dscqss_dsc[294] +
    dwdot34dscqss10 * dscqss_dsc[364];
  J[574] =
    dwdot34dsc15 + dwdot34dscqss0 * dscqss_dsc[15] +
    dwdot34dscqss16 * dscqss_dsc[575] + dwdot34dscqss1 * dscqss_dsc[50] +
    dwdot34dscqss17 * dscqss_dsc[610] + dwdot34dscqss2 * dscqss_dsc[85] +
    dwdot34dscqss3 * dscqss_dsc[120] + dwdot34dscqss4 * dscqss_dsc[155] +
    dwdot34dscqss5 * dscqss_dsc[190] + dwdot34dscqss6 * dscqss_dsc[225] +
    dwdot34dscqss7 * dscqss_dsc[260] + dwdot34dscqss9 * dscqss_dsc[330] +
    dwdot34dscqss11 * dscqss_dsc[400] + dwdot34dscqss12 * dscqss_dsc[435] +
    dwdot34dscqss14 * dscqss_dsc[505] + dwdot34dscqss13 * dscqss_dsc[470] +
    dwdot34dscqss15 * dscqss_dsc[540] + dwdot34dscqss8 * dscqss_dsc[295] +
    dwdot34dscqss10 * dscqss_dsc[365];
  J[610] =
    dwdot34dsc16 + dwdot34dscqss0 * dscqss_dsc[16] +
    dwdot34dscqss16 * dscqss_dsc[576] + dwdot34dscqss1 * dscqss_dsc[51] +
    dwdot34dscqss17 * dscqss_dsc[611] + dwdot34dscqss2 * dscqss_dsc[86] +
    dwdot34dscqss3 * dscqss_dsc[121] + dwdot34dscqss4 * dscqss_dsc[156] +
    dwdot34dscqss5 * dscqss_dsc[191] + dwdot34dscqss6 * dscqss_dsc[226] +
    dwdot34dscqss7 * dscqss_dsc[261] + dwdot34dscqss9 * dscqss_dsc[331] +
    dwdot34dscqss11 * dscqss_dsc[401] + dwdot34dscqss12 * dscqss_dsc[436] +
    dwdot34dscqss14 * dscqss_dsc[506] + dwdot34dscqss13 * dscqss_dsc[471] +
    dwdot34dscqss15 * dscqss_dsc[541] + dwdot34dscqss8 * dscqss_dsc[296] +
    dwdot34dscqss10 * dscqss_dsc[366];
  J[646] =
    dwdot34dsc17 + dwdot34dscqss0 * dscqss_dsc[17] +
    dwdot34dscqss16 * dscqss_dsc[577] + dwdot34dscqss1 * dscqss_dsc[52] +
    dwdot34dscqss17 * dscqss_dsc[612] + dwdot34dscqss2 * dscqss_dsc[87] +
    dwdot34dscqss3 * dscqss_dsc[122] + dwdot34dscqss4 * dscqss_dsc[157] +
    dwdot34dscqss5 * dscqss_dsc[192] + dwdot34dscqss6 * dscqss_dsc[227] +
    dwdot34dscqss7 * dscqss_dsc[262] + dwdot34dscqss9 * dscqss_dsc[332] +
    dwdot34dscqss11 * dscqss_dsc[402] + dwdot34dscqss12 * dscqss_dsc[437] +
    dwdot34dscqss14 * dscqss_dsc[507] + dwdot34dscqss13 * dscqss_dsc[472] +
    dwdot34dscqss15 * dscqss_dsc[542] + dwdot34dscqss8 * dscqss_dsc[297] +
    dwdot34dscqss10 * dscqss_dsc[367];
  J[682] =
    dwdot34dsc18 + dwdot34dscqss0 * dscqss_dsc[18] +
    dwdot34dscqss16 * dscqss_dsc[578] + dwdot34dscqss1 * dscqss_dsc[53] +
    dwdot34dscqss17 * dscqss_dsc[613] + dwdot34dscqss2 * dscqss_dsc[88] +
    dwdot34dscqss3 * dscqss_dsc[123] + dwdot34dscqss4 * dscqss_dsc[158] +
    dwdot34dscqss5 * dscqss_dsc[193] + dwdot34dscqss6 * dscqss_dsc[228] +
    dwdot34dscqss7 * dscqss_dsc[263] + dwdot34dscqss9 * dscqss_dsc[333] +
    dwdot34dscqss11 * dscqss_dsc[403] + dwdot34dscqss12 * dscqss_dsc[438] +
    dwdot34dscqss14 * dscqss_dsc[508] + dwdot34dscqss13 * dscqss_dsc[473] +
    dwdot34dscqss15 * dscqss_dsc[543] + dwdot34dscqss8 * dscqss_dsc[298] +
    dwdot34dscqss10 * dscqss_dsc[368];
  J[718] =
    dwdot34dsc19 + dwdot34dscqss0 * dscqss_dsc[19] +
    dwdot34dscqss16 * dscqss_dsc[579] + dwdot34dscqss1 * dscqss_dsc[54] +
    dwdot34dscqss17 * dscqss_dsc[614] + dwdot34dscqss2 * dscqss_dsc[89] +
    dwdot34dscqss3 * dscqss_dsc[124] + dwdot34dscqss4 * dscqss_dsc[159] +
    dwdot34dscqss5 * dscqss_dsc[194] + dwdot34dscqss6 * dscqss_dsc[229] +
    dwdot34dscqss7 * dscqss_dsc[264] + dwdot34dscqss9 * dscqss_dsc[334] +
    dwdot34dscqss11 * dscqss_dsc[404] + dwdot34dscqss12 * dscqss_dsc[439] +
    dwdot34dscqss14 * dscqss_dsc[509] + dwdot34dscqss13 * dscqss_dsc[474] +
    dwdot34dscqss15 * dscqss_dsc[544] + dwdot34dscqss8 * dscqss_dsc[299] +
    dwdot34dscqss10 * dscqss_dsc[369];
  J[754] =
    dwdot34dsc20 + dwdot34dscqss0 * dscqss_dsc[20] +
    dwdot34dscqss16 * dscqss_dsc[580] + dwdot34dscqss1 * dscqss_dsc[55] +
    dwdot34dscqss17 * dscqss_dsc[615] + dwdot34dscqss2 * dscqss_dsc[90] +
    dwdot34dscqss3 * dscqss_dsc[125] + dwdot34dscqss4 * dscqss_dsc[160] +
    dwdot34dscqss5 * dscqss_dsc[195] + dwdot34dscqss6 * dscqss_dsc[230] +
    dwdot34dscqss7 * dscqss_dsc[265] + dwdot34dscqss9 * dscqss_dsc[335] +
    dwdot34dscqss11 * dscqss_dsc[405] + dwdot34dscqss12 * dscqss_dsc[440] +
    dwdot34dscqss14 * dscqss_dsc[510] + dwdot34dscqss13 * dscqss_dsc[475] +
    dwdot34dscqss15 * dscqss_dsc[545] + dwdot34dscqss8 * dscqss_dsc[300] +
    dwdot34dscqss10 * dscqss_dsc[370];
  J[790] =
    dwdot34dsc21 + dwdot34dscqss0 * dscqss_dsc[21] +
    dwdot34dscqss16 * dscqss_dsc[581] + dwdot34dscqss1 * dscqss_dsc[56] +
    dwdot34dscqss17 * dscqss_dsc[616] + dwdot34dscqss2 * dscqss_dsc[91] +
    dwdot34dscqss3 * dscqss_dsc[126] + dwdot34dscqss4 * dscqss_dsc[161] +
    dwdot34dscqss5 * dscqss_dsc[196] + dwdot34dscqss6 * dscqss_dsc[231] +
    dwdot34dscqss7 * dscqss_dsc[266] + dwdot34dscqss9 * dscqss_dsc[336] +
    dwdot34dscqss11 * dscqss_dsc[406] + dwdot34dscqss12 * dscqss_dsc[441] +
    dwdot34dscqss14 * dscqss_dsc[511] + dwdot34dscqss13 * dscqss_dsc[476] +
    dwdot34dscqss15 * dscqss_dsc[546] + dwdot34dscqss8 * dscqss_dsc[301] +
    dwdot34dscqss10 * dscqss_dsc[371];
  J[826] =
    dwdot34dsc22 + dwdot34dscqss0 * dscqss_dsc[22] +
    dwdot34dscqss16 * dscqss_dsc[582] + dwdot34dscqss1 * dscqss_dsc[57] +
    dwdot34dscqss17 * dscqss_dsc[617] + dwdot34dscqss2 * dscqss_dsc[92] +
    dwdot34dscqss3 * dscqss_dsc[127] + dwdot34dscqss4 * dscqss_dsc[162] +
    dwdot34dscqss5 * dscqss_dsc[197] + dwdot34dscqss6 * dscqss_dsc[232] +
    dwdot34dscqss7 * dscqss_dsc[267] + dwdot34dscqss9 * dscqss_dsc[337] +
    dwdot34dscqss11 * dscqss_dsc[407] + dwdot34dscqss12 * dscqss_dsc[442] +
    dwdot34dscqss14 * dscqss_dsc[512] + dwdot34dscqss13 * dscqss_dsc[477] +
    dwdot34dscqss15 * dscqss_dsc[547] + dwdot34dscqss8 * dscqss_dsc[302] +
    dwdot34dscqss10 * dscqss_dsc[372];
  J[862] =
    dwdot34dsc23 + dwdot34dscqss0 * dscqss_dsc[23] +
    dwdot34dscqss16 * dscqss_dsc[583] + dwdot34dscqss1 * dscqss_dsc[58] +
    dwdot34dscqss17 * dscqss_dsc[618] + dwdot34dscqss2 * dscqss_dsc[93] +
    dwdot34dscqss3 * dscqss_dsc[128] + dwdot34dscqss4 * dscqss_dsc[163] +
    dwdot34dscqss5 * dscqss_dsc[198] + dwdot34dscqss6 * dscqss_dsc[233] +
    dwdot34dscqss7 * dscqss_dsc[268] + dwdot34dscqss9 * dscqss_dsc[338] +
    dwdot34dscqss11 * dscqss_dsc[408] + dwdot34dscqss12 * dscqss_dsc[443] +
    dwdot34dscqss14 * dscqss_dsc[513] + dwdot34dscqss13 * dscqss_dsc[478] +
    dwdot34dscqss15 * dscqss_dsc[548] + dwdot34dscqss8 * dscqss_dsc[303] +
    dwdot34dscqss10 * dscqss_dsc[373];
  J[898] =
    dwdot34dsc24 + dwdot34dscqss0 * dscqss_dsc[24] +
    dwdot34dscqss16 * dscqss_dsc[584] + dwdot34dscqss1 * dscqss_dsc[59] +
    dwdot34dscqss17 * dscqss_dsc[619] + dwdot34dscqss2 * dscqss_dsc[94] +
    dwdot34dscqss3 * dscqss_dsc[129] + dwdot34dscqss4 * dscqss_dsc[164] +
    dwdot34dscqss5 * dscqss_dsc[199] + dwdot34dscqss6 * dscqss_dsc[234] +
    dwdot34dscqss7 * dscqss_dsc[269] + dwdot34dscqss9 * dscqss_dsc[339] +
    dwdot34dscqss11 * dscqss_dsc[409] + dwdot34dscqss12 * dscqss_dsc[444] +
    dwdot34dscqss14 * dscqss_dsc[514] + dwdot34dscqss13 * dscqss_dsc[479] +
    dwdot34dscqss15 * dscqss_dsc[549] + dwdot34dscqss8 * dscqss_dsc[304] +
    dwdot34dscqss10 * dscqss_dsc[374];
  J[934] =
    dwdot34dsc25 + dwdot34dscqss0 * dscqss_dsc[25] +
    dwdot34dscqss16 * dscqss_dsc[585] + dwdot34dscqss1 * dscqss_dsc[60] +
    dwdot34dscqss17 * dscqss_dsc[620] + dwdot34dscqss2 * dscqss_dsc[95] +
    dwdot34dscqss3 * dscqss_dsc[130] + dwdot34dscqss4 * dscqss_dsc[165] +
    dwdot34dscqss5 * dscqss_dsc[200] + dwdot34dscqss6 * dscqss_dsc[235] +
    dwdot34dscqss7 * dscqss_dsc[270] + dwdot34dscqss9 * dscqss_dsc[340] +
    dwdot34dscqss11 * dscqss_dsc[410] + dwdot34dscqss12 * dscqss_dsc[445] +
    dwdot34dscqss14 * dscqss_dsc[515] + dwdot34dscqss13 * dscqss_dsc[480] +
    dwdot34dscqss15 * dscqss_dsc[550] + dwdot34dscqss8 * dscqss_dsc[305] +
    dwdot34dscqss10 * dscqss_dsc[375];
  J[970] =
    dwdot34dsc26 + dwdot34dscqss0 * dscqss_dsc[26] +
    dwdot34dscqss16 * dscqss_dsc[586] + dwdot34dscqss1 * dscqss_dsc[61] +
    dwdot34dscqss17 * dscqss_dsc[621] + dwdot34dscqss2 * dscqss_dsc[96] +
    dwdot34dscqss3 * dscqss_dsc[131] + dwdot34dscqss4 * dscqss_dsc[166] +
    dwdot34dscqss5 * dscqss_dsc[201] + dwdot34dscqss6 * dscqss_dsc[236] +
    dwdot34dscqss7 * dscqss_dsc[271] + dwdot34dscqss9 * dscqss_dsc[341] +
    dwdot34dscqss11 * dscqss_dsc[411] + dwdot34dscqss12 * dscqss_dsc[446] +
    dwdot34dscqss14 * dscqss_dsc[516] + dwdot34dscqss13 * dscqss_dsc[481] +
    dwdot34dscqss15 * dscqss_dsc[551] + dwdot34dscqss8 * dscqss_dsc[306] +
    dwdot34dscqss10 * dscqss_dsc[376];
  J[1006] =
    dwdot34dsc27 + dwdot34dscqss0 * dscqss_dsc[27] +
    dwdot34dscqss16 * dscqss_dsc[587] + dwdot34dscqss1 * dscqss_dsc[62] +
    dwdot34dscqss17 * dscqss_dsc[622] + dwdot34dscqss2 * dscqss_dsc[97] +
    dwdot34dscqss3 * dscqss_dsc[132] + dwdot34dscqss4 * dscqss_dsc[167] +
    dwdot34dscqss5 * dscqss_dsc[202] + dwdot34dscqss6 * dscqss_dsc[237] +
    dwdot34dscqss7 * dscqss_dsc[272] + dwdot34dscqss9 * dscqss_dsc[342] +
    dwdot34dscqss11 * dscqss_dsc[412] + dwdot34dscqss12 * dscqss_dsc[447] +
    dwdot34dscqss14 * dscqss_dsc[517] + dwdot34dscqss13 * dscqss_dsc[482] +
    dwdot34dscqss15 * dscqss_dsc[552] + dwdot34dscqss8 * dscqss_dsc[307] +
    dwdot34dscqss10 * dscqss_dsc[377];
  J[1042] =
    dwdot34dsc28 + dwdot34dscqss0 * dscqss_dsc[28] +
    dwdot34dscqss16 * dscqss_dsc[588] + dwdot34dscqss1 * dscqss_dsc[63] +
    dwdot34dscqss17 * dscqss_dsc[623] + dwdot34dscqss2 * dscqss_dsc[98] +
    dwdot34dscqss3 * dscqss_dsc[133] + dwdot34dscqss4 * dscqss_dsc[168] +
    dwdot34dscqss5 * dscqss_dsc[203] + dwdot34dscqss6 * dscqss_dsc[238] +
    dwdot34dscqss7 * dscqss_dsc[273] + dwdot34dscqss9 * dscqss_dsc[343] +
    dwdot34dscqss11 * dscqss_dsc[413] + dwdot34dscqss12 * dscqss_dsc[448] +
    dwdot34dscqss14 * dscqss_dsc[518] + dwdot34dscqss13 * dscqss_dsc[483] +
    dwdot34dscqss15 * dscqss_dsc[553] + dwdot34dscqss8 * dscqss_dsc[308] +
    dwdot34dscqss10 * dscqss_dsc[378];
  J[1078] =
    dwdot34dsc29 + dwdot34dscqss0 * dscqss_dsc[29] +
    dwdot34dscqss16 * dscqss_dsc[589] + dwdot34dscqss1 * dscqss_dsc[64] +
    dwdot34dscqss17 * dscqss_dsc[624] + dwdot34dscqss2 * dscqss_dsc[99] +
    dwdot34dscqss3 * dscqss_dsc[134] + dwdot34dscqss4 * dscqss_dsc[169] +
    dwdot34dscqss5 * dscqss_dsc[204] + dwdot34dscqss6 * dscqss_dsc[239] +
    dwdot34dscqss7 * dscqss_dsc[274] + dwdot34dscqss9 * dscqss_dsc[344] +
    dwdot34dscqss11 * dscqss_dsc[414] + dwdot34dscqss12 * dscqss_dsc[449] +
    dwdot34dscqss14 * dscqss_dsc[519] + dwdot34dscqss13 * dscqss_dsc[484] +
    dwdot34dscqss15 * dscqss_dsc[554] + dwdot34dscqss8 * dscqss_dsc[309] +
    dwdot34dscqss10 * dscqss_dsc[379];
  J[1114] =
    dwdot34dsc30 + dwdot34dscqss0 * dscqss_dsc[30] +
    dwdot34dscqss16 * dscqss_dsc[590] + dwdot34dscqss1 * dscqss_dsc[65] +
    dwdot34dscqss17 * dscqss_dsc[625] + dwdot34dscqss2 * dscqss_dsc[100] +
    dwdot34dscqss3 * dscqss_dsc[135] + dwdot34dscqss4 * dscqss_dsc[170] +
    dwdot34dscqss5 * dscqss_dsc[205] + dwdot34dscqss6 * dscqss_dsc[240] +
    dwdot34dscqss7 * dscqss_dsc[275] + dwdot34dscqss9 * dscqss_dsc[345] +
    dwdot34dscqss11 * dscqss_dsc[415] + dwdot34dscqss12 * dscqss_dsc[450] +
    dwdot34dscqss14 * dscqss_dsc[520] + dwdot34dscqss13 * dscqss_dsc[485] +
    dwdot34dscqss15 * dscqss_dsc[555] + dwdot34dscqss8 * dscqss_dsc[310] +
    dwdot34dscqss10 * dscqss_dsc[380];
  J[1150] =
    dwdot34dsc31 + dwdot34dscqss0 * dscqss_dsc[31] +
    dwdot34dscqss16 * dscqss_dsc[591] + dwdot34dscqss1 * dscqss_dsc[66] +
    dwdot34dscqss17 * dscqss_dsc[626] + dwdot34dscqss2 * dscqss_dsc[101] +
    dwdot34dscqss3 * dscqss_dsc[136] + dwdot34dscqss4 * dscqss_dsc[171] +
    dwdot34dscqss5 * dscqss_dsc[206] + dwdot34dscqss6 * dscqss_dsc[241] +
    dwdot34dscqss7 * dscqss_dsc[276] + dwdot34dscqss9 * dscqss_dsc[346] +
    dwdot34dscqss11 * dscqss_dsc[416] + dwdot34dscqss12 * dscqss_dsc[451] +
    dwdot34dscqss14 * dscqss_dsc[521] + dwdot34dscqss13 * dscqss_dsc[486] +
    dwdot34dscqss15 * dscqss_dsc[556] + dwdot34dscqss8 * dscqss_dsc[311] +
    dwdot34dscqss10 * dscqss_dsc[381];
  J[1186] =
    dwdot34dsc32 + dwdot34dscqss0 * dscqss_dsc[32] +
    dwdot34dscqss16 * dscqss_dsc[592] + dwdot34dscqss1 * dscqss_dsc[67] +
    dwdot34dscqss17 * dscqss_dsc[627] + dwdot34dscqss2 * dscqss_dsc[102] +
    dwdot34dscqss3 * dscqss_dsc[137] + dwdot34dscqss4 * dscqss_dsc[172] +
    dwdot34dscqss5 * dscqss_dsc[207] + dwdot34dscqss6 * dscqss_dsc[242] +
    dwdot34dscqss7 * dscqss_dsc[277] + dwdot34dscqss9 * dscqss_dsc[347] +
    dwdot34dscqss11 * dscqss_dsc[417] + dwdot34dscqss12 * dscqss_dsc[452] +
    dwdot34dscqss14 * dscqss_dsc[522] + dwdot34dscqss13 * dscqss_dsc[487] +
    dwdot34dscqss15 * dscqss_dsc[557] + dwdot34dscqss8 * dscqss_dsc[312] +
    dwdot34dscqss10 * dscqss_dsc[382];
  J[1222] =
    dwdot34dsc33 + dwdot34dscqss0 * dscqss_dsc[33] +
    dwdot34dscqss16 * dscqss_dsc[593] + dwdot34dscqss1 * dscqss_dsc[68] +
    dwdot34dscqss17 * dscqss_dsc[628] + dwdot34dscqss2 * dscqss_dsc[103] +
    dwdot34dscqss3 * dscqss_dsc[138] + dwdot34dscqss4 * dscqss_dsc[173] +
    dwdot34dscqss5 * dscqss_dsc[208] + dwdot34dscqss6 * dscqss_dsc[243] +
    dwdot34dscqss7 * dscqss_dsc[278] + dwdot34dscqss9 * dscqss_dsc[348] +
    dwdot34dscqss11 * dscqss_dsc[418] + dwdot34dscqss12 * dscqss_dsc[453] +
    dwdot34dscqss14 * dscqss_dsc[523] + dwdot34dscqss13 * dscqss_dsc[488] +
    dwdot34dscqss15 * dscqss_dsc[558] + dwdot34dscqss8 * dscqss_dsc[313] +
    dwdot34dscqss10 * dscqss_dsc[383];
  J[1258] =
    dwdot34dsc34 + dwdot34dscqss0 * dscqss_dsc[34] +
    dwdot34dscqss16 * dscqss_dsc[594] + dwdot34dscqss1 * dscqss_dsc[69] +
    dwdot34dscqss17 * dscqss_dsc[629] + dwdot34dscqss2 * dscqss_dsc[104] +
    dwdot34dscqss3 * dscqss_dsc[139] + dwdot34dscqss4 * dscqss_dsc[174] +
    dwdot34dscqss5 * dscqss_dsc[209] + dwdot34dscqss6 * dscqss_dsc[244] +
    dwdot34dscqss7 * dscqss_dsc[279] + dwdot34dscqss9 * dscqss_dsc[349] +
    dwdot34dscqss11 * dscqss_dsc[419] + dwdot34dscqss12 * dscqss_dsc[454] +
    dwdot34dscqss14 * dscqss_dsc[524] + dwdot34dscqss13 * dscqss_dsc[489] +
    dwdot34dscqss15 * dscqss_dsc[559] + dwdot34dscqss8 * dscqss_dsc[314] +
    dwdot34dscqss10 * dscqss_dsc[384];

  for (int k = 0; k < 35; k++) {
    J[1260 + k] = (wdot_pert1[k] - wdot[k]) / (pertT);
  }
  amrex::Real c_R[35], dcRdT[35], e_RT[35];
  amrex::Real* eh_RT;
  if (consP == 1) {
    cp_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    speciesInternalEnergy(e_RT, tc);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 35; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[1260 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 35; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 35; ++m) {
      dehmixdc += eh_RT[m] * J[k * 36 + m];
    }
    J[k * 36 + 35] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[1295] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[35];

  for (int k = 0; k < 35; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 35; k++) {
    J[1260 + k] *= 1.e-6;
    J[k * 36 + 35] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 142;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 24500;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 35;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 1.70340000E+02;
  WT[1] = 1.00800000E+00;
  WT[2] = 1.59990000E+01;
  WT[3] = 1.70070000E+01;
  WT[4] = 3.30060000E+01;
  WT[5] = 2.01600000E+00;
  WT[6] = 1.80150000E+01;
  WT[7] = 3.40140000E+01;
  WT[8] = 3.19980000E+01;
  WT[9] = 1.50350000E+01;
  WT[10] = 1.60430000E+01;
  WT[11] = 3.00260000E+01;
  WT[12] = 2.80100000E+01;
  WT[13] = 4.40090000E+01;
  WT[14] = 2.60380000E+01;
  WT[15] = 2.80540000E+01;
  WT[16] = 3.00700000E+01;
  WT[17] = 4.30450000E+01;
  WT[18] = 4.10730000E+01;
  WT[19] = 4.20810000E+01;
  WT[20] = 5.60640000E+01;
  WT[21] = 5.51000000E+01;
  WT[22] = 5.61080000E+01;
  WT[23] = 6.91270000E+01;
  WT[24] = 7.01350000E+01;
  WT[25] = 8.41620000E+01;
  WT[26] = 9.81890000E+01;
  WT[27] = 1.12216000E+02;
  WT[28] = 1.26243000E+02;
  WT[29] = 1.27251000E+02;
  WT[30] = 1.40270000E+02;
  WT[31] = 1.68324000E+02;
  WT[32] = 2.01330000E+02;
  WT[33] = 2.16321000E+02;
  WT[34] = 2.80140000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 7.89980000E+02;
  EPS[1] = 1.45000000E+02;
  EPS[2] = 8.00000000E+01;
  EPS[3] = 8.00000000E+01;
  EPS[4] = 1.07400000E+02;
  EPS[5] = 3.80000000E+01;
  EPS[6] = 5.72400000E+02;
  EPS[7] = 1.07400000E+02;
  EPS[8] = 1.07400000E+02;
  EPS[9] = 1.44000000E+02;
  EPS[10] = 1.41400000E+02;
  EPS[11] = 4.98000000E+02;
  EPS[12] = 9.81000000E+01;
  EPS[13] = 2.44000000E+02;
  EPS[14] = 2.09000000E+02;
  EPS[15] = 2.80800000E+02;
  EPS[16] = 2.52300000E+02;
  EPS[17] = 4.36000000E+02;
  EPS[18] = 2.66800000E+02;
  EPS[19] = 2.66800000E+02;
  EPS[20] = 3.57000000E+02;
  EPS[21] = 3.57000000E+02;
  EPS[22] = 3.57000000E+02;
  EPS[23] = 4.48508000E+02;
  EPS[24] = 4.48508000E+02;
  EPS[25] = 5.04629000E+02;
  EPS[26] = 5.57947000E+02;
  EPS[27] = 6.08488000E+02;
  EPS[28] = 6.55390000E+02;
  EPS[29] = 6.60032000E+02;
  EPS[30] = 6.98122000E+02;
  EPS[31] = 7.75294000E+02;
  EPS[32] = 8.05031000E+02;
  EPS[33] = 8.39348000E+02;
  EPS[34] = 9.75300000E+01;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 7.04700000E+00;
  SIG[1] = 2.05000000E+00;
  SIG[2] = 2.75000000E+00;
  SIG[3] = 2.75000000E+00;
  SIG[4] = 3.45800000E+00;
  SIG[5] = 2.92000000E+00;
  SIG[6] = 2.60500000E+00;
  SIG[7] = 3.45800000E+00;
  SIG[8] = 3.45800000E+00;
  SIG[9] = 3.80000000E+00;
  SIG[10] = 3.74600000E+00;
  SIG[11] = 3.59000000E+00;
  SIG[12] = 3.65000000E+00;
  SIG[13] = 3.76300000E+00;
  SIG[14] = 4.10000000E+00;
  SIG[15] = 3.97100000E+00;
  SIG[16] = 4.30200000E+00;
  SIG[17] = 3.97000000E+00;
  SIG[18] = 4.98200000E+00;
  SIG[19] = 4.98200000E+00;
  SIG[20] = 5.17600000E+00;
  SIG[21] = 5.17600000E+00;
  SIG[22] = 5.17600000E+00;
  SIG[23] = 5.34200000E+00;
  SIG[24] = 5.34200000E+00;
  SIG[25] = 5.62800000E+00;
  SIG[26] = 5.87600000E+00;
  SIG[27] = 6.10000000E+00;
  SIG[28] = 6.33100000E+00;
  SIG[29] = 6.46700000E+00;
  SIG[30] = 6.57800000E+00;
  SIG[31] = 7.09000000E+00;
  SIG[32] = 7.10200000E+00;
  SIG[33] = 7.27300000E+00;
  SIG[34] = 3.62100000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 0.00000000E+00;
  DIP[6] = 1.84400000E+00;
  DIP[7] = 0.00000000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 0.00000000E+00;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 0.00000000E+00;
  DIP[14] = 0.00000000E+00;
  DIP[15] = 0.00000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 0.00000000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
  DIP[22] = 0.00000000E+00;
  DIP[23] = 0.00000000E+00;
  DIP[24] = 0.00000000E+00;
  DIP[25] = 0.00000000E+00;
  DIP[26] = 0.00000000E+00;
  DIP[27] = 0.00000000E+00;
  DIP[28] = 0.00000000E+00;
  DIP[29] = 0.00000000E+00;
  DIP[30] = 0.00000000E+00;
  DIP[31] = 0.00000000E+00;
  DIP[32] = 0.00000000E+00;
  DIP[33] = 0.00000000E+00;
  DIP[34] = 0.00000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 0.00000000E+00;
  POL[1] = 0.00000000E+00;
  POL[2] = 0.00000000E+00;
  POL[3] = 0.00000000E+00;
  POL[4] = 0.00000000E+00;
  POL[5] = 7.90000000E-01;
  POL[6] = 0.00000000E+00;
  POL[7] = 0.00000000E+00;
  POL[8] = 1.60000000E+00;
  POL[9] = 0.00000000E+00;
  POL[10] = 2.60000000E+00;
  POL[11] = 0.00000000E+00;
  POL[12] = 1.95000000E+00;
  POL[13] = 2.65000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 0.00000000E+00;
  POL[16] = 0.00000000E+00;
  POL[17] = 0.00000000E+00;
  POL[18] = 0.00000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 0.00000000E+00;
  POL[22] = 0.00000000E+00;
  POL[23] = 0.00000000E+00;
  POL[24] = 0.00000000E+00;
  POL[25] = 0.00000000E+00;
  POL[26] = 0.00000000E+00;
  POL[27] = 0.00000000E+00;
  POL[28] = 0.00000000E+00;
  POL[29] = 0.00000000E+00;
  POL[30] = 0.00000000E+00;
  POL[31] = 0.00000000E+00;
  POL[32] = 0.00000000E+00;
  POL[33] = 0.00000000E+00;
  POL[34] = 1.76000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 1.00000000E+00;
  ZROT[1] = 0.00000000E+00;
  ZROT[2] = 0.00000000E+00;
  ZROT[3] = 0.00000000E+00;
  ZROT[4] = 1.00000000E+00;
  ZROT[5] = 2.80000000E+02;
  ZROT[6] = 4.00000000E+00;
  ZROT[7] = 3.80000000E+00;
  ZROT[8] = 3.80000000E+00;
  ZROT[9] = 0.00000000E+00;
  ZROT[10] = 1.30000000E+01;
  ZROT[11] = 2.00000000E+00;
  ZROT[12] = 1.80000000E+00;
  ZROT[13] = 2.10000000E+00;
  ZROT[14] = 2.50000000E+00;
  ZROT[15] = 1.50000000E+00;
  ZROT[16] = 1.50000000E+00;
  ZROT[17] = 2.00000000E+00;
  ZROT[18] = 1.00000000E+00;
  ZROT[19] = 1.00000000E+00;
  ZROT[20] = 1.00000000E+00;
  ZROT[21] = 1.00000000E+00;
  ZROT[22] = 1.00000000E+00;
  ZROT[23] = 1.00000000E+00;
  ZROT[24] = 1.00000000E+00;
  ZROT[25] = 1.00000000E+00;
  ZROT[26] = 1.00000000E+00;
  ZROT[27] = 1.00000000E+00;
  ZROT[28] = 1.00000000E+00;
  ZROT[29] = 1.00000000E+00;
  ZROT[30] = 1.00000000E+00;
  ZROT[31] = 1.00000000E+00;
  ZROT[32] = 1.00000000E+00;
  ZROT[33] = 1.00000000E+00;
  ZROT[34] = 4.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 2;
  NLIN[1] = 0;
  NLIN[2] = 0;
  NLIN[3] = 1;
  NLIN[4] = 2;
  NLIN[5] = 1;
  NLIN[6] = 2;
  NLIN[7] = 2;
  NLIN[8] = 1;
  NLIN[9] = 1;
  NLIN[10] = 2;
  NLIN[11] = 2;
  NLIN[12] = 1;
  NLIN[13] = 1;
  NLIN[14] = 1;
  NLIN[15] = 2;
  NLIN[16] = 2;
  NLIN[17] = 2;
  NLIN[18] = 2;
  NLIN[19] = 2;
  NLIN[20] = 2;
  NLIN[21] = 2;
  NLIN[22] = 2;
  NLIN[23] = 2;
  NLIN[24] = 2;
  NLIN[25] = 2;
  NLIN[26] = 2;
  NLIN[27] = 2;
  NLIN[28] = 2;
  NLIN[29] = 2;
  NLIN[30] = 2;
  NLIN[31] = 2;
  NLIN[32] = 2;
  NLIN[33] = 2;
  NLIN[34] = 1;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -7.22654243E+00;
  COFETA[1] = -3.12842246E+00;
  COFETA[2] = 6.69477571E-01;
  COFETA[3] = -3.60312934E-02;
  COFETA[4] = -2.04078253E+01;
  COFETA[5] = 3.65436395E+00;
  COFETA[6] = -3.98339635E-01;
  COFETA[7] = 1.75883009E-02;
  COFETA[8] = -1.50926370E+01;
  COFETA[9] = 1.92606504E+00;
  COFETA[10] = -1.73487476E-01;
  COFETA[11] = 7.82572931E-03;
  COFETA[12] = -1.50620876E+01;
  COFETA[13] = 1.92606504E+00;
  COFETA[14] = -1.73487476E-01;
  COFETA[15] = 7.82572931E-03;
  COFETA[16] = -1.71463359E+01;
  COFETA[17] = 2.68036374E+00;
  COFETA[18] = -2.72570227E-01;
  COFETA[19] = 1.21650964E-02;
  COFETA[20] = -1.38347555E+01;
  COFETA[21] = 1.00106621E+00;
  COFETA[22] = -4.98105694E-02;
  COFETA[23] = 2.31450475E-03;
  COFETA[24] = -1.05420930E+01;
  COFETA[25] = -1.37777266E+00;
  COFETA[26] = 4.20502561E-01;
  COFETA[27] = -2.40627344E-02;
  COFETA[28] = -1.71312945E+01;
  COFETA[29] = 2.68036374E+00;
  COFETA[30] = -2.72570227E-01;
  COFETA[31] = 1.21650964E-02;
  COFETA[32] = -1.71618439E+01;
  COFETA[33] = 2.68036374E+00;
  COFETA[34] = -2.72570227E-01;
  COFETA[35] = 1.21650964E-02;
  COFETA[36] = -2.02316522E+01;
  COFETA[37] = 3.63241793E+00;
  COFETA[38] = -3.95581049E-01;
  COFETA[39] = 1.74725495E-02;
  COFETA[40] = -2.00094678E+01;
  COFETA[41] = 3.57220167E+00;
  COFETA[42] = -3.87936446E-01;
  COFETA[43] = 1.71483254E-02;
  COFETA[44] = -1.98330663E+01;
  COFETA[45] = 2.69480162E+00;
  COFETA[46] = -1.65880845E-01;
  COFETA[47] = 3.14504769E-03;
  COFETA[48] = -1.66188439E+01;
  COFETA[49] = 2.40307799E+00;
  COFETA[50] = -2.36167638E-01;
  COFETA[51] = 1.05714061E-02;
  COFETA[52] = -2.40015087E+01;
  COFETA[53] = 5.14359547E+00;
  COFETA[54] = -5.74269731E-01;
  COFETA[55] = 2.44937679E-02;
  COFETA[56] = -2.33666497E+01;
  COFETA[57] = 4.80350223E+00;
  COFETA[58] = -5.38341336E-01;
  COFETA[59] = 2.32747213E-02;
  COFETA[60] = -2.50655480E+01;
  COFETA[61] = 5.33982977E+00;
  COFETA[62] = -5.89982992E-01;
  COFETA[63] = 2.47780650E-02;
  COFETA[64] = -2.46410962E+01;
  COFETA[65] = 5.19497183E+00;
  COFETA[66] = -5.78827339E-01;
  COFETA[67] = 2.46050921E-02;
  COFETA[68] = -2.23277248E+01;
  COFETA[69] = 3.86433912E+00;
  COFETA[70] = -3.41553983E-01;
  COFETA[71] = 1.17083447E-02;
  COFETA[72] = -2.51527894E+01;
  COFETA[73] = 5.30723075E+00;
  COFETA[74] = -5.89742369E-01;
  COFETA[75] = 2.49294033E-02;
  COFETA[76] = -2.51406667E+01;
  COFETA[77] = 5.30723075E+00;
  COFETA[78] = -5.89742369E-01;
  COFETA[79] = 2.49294033E-02;
  COFETA[80] = -2.48320190E+01;
  COFETA[81] = 4.94595777E+00;
  COFETA[82] = -5.12278955E-01;
  COFETA[83] = 2.03286378E-02;
  COFETA[84] = -2.48406911E+01;
  COFETA[85] = 4.94595777E+00;
  COFETA[86] = -5.12278955E-01;
  COFETA[87] = 2.03286378E-02;
  COFETA[88] = -2.48316268E+01;
  COFETA[89] = 4.94595777E+00;
  COFETA[90] = -5.12278955E-01;
  COFETA[91] = 2.03286378E-02;
  COFETA[92] = -2.22556509E+01;
  COFETA[93] = 3.65583269E+00;
  COFETA[94] = -3.09681973E-01;
  COFETA[95] = 1.01347367E-02;
  COFETA[96] = -2.22484126E+01;
  COFETA[97] = 3.65583269E+00;
  COFETA[98] = -3.09681973E-01;
  COFETA[99] = 1.01347367E-02;
  COFETA[100] = -1.99265616E+01;
  COFETA[101] = 2.56014100E+00;
  COFETA[102] = -1.45913962E-01;
  COFETA[103] = 2.18129625E-03;
  COFETA[104] = -1.75766508E+01;
  COFETA[105] = 1.47718088E+00;
  COFETA[106] = 1.33842258E-02;
  COFETA[107] = -5.45446078E-03;
  COFETA[108] = -1.51262729E+01;
  COFETA[109] = 3.71381902E-01;
  COFETA[110] = 1.73700335E-01;
  COFETA[111] = -1.30510322E-02;
  COFETA[112] = -1.29964204E+01;
  COFETA[113] = -5.82992847E-01;
  COFETA[114] = 3.10614522E-01;
  COFETA[115] = -1.94724805E-02;
  COFETA[116] = -1.28241860E+01;
  COFETA[117] = -6.75983155E-01;
  COFETA[118] = 3.23857491E-01;
  COFETA[119] = -2.00893320E-02;
  COFETA[120] = -1.10600854E+01;
  COFETA[121] = -1.44434970E+00;
  COFETA[122] = 4.32898375E-01;
  COFETA[123] = -2.51531493E-02;
  COFETA[124] = -7.82458198E+00;
  COFETA[125] = -2.87790249E+00;
  COFETA[126] = 6.34514847E-01;
  COFETA[127] = -3.44344136E-02;
  COFETA[128] = -6.55009863E+00;
  COFETA[129] = -3.39070398E+00;
  COFETA[130] = 7.06046571E-01;
  COFETA[131] = -3.77010172E-02;
  COFETA[132] = -5.21188020E+00;
  COFETA[133] = -3.96972532E+00;
  COFETA[134] = 7.86375770E-01;
  COFETA[135] = -4.13504402E-02;
  COFETA[136] = -1.65695492E+01;
  COFETA[137] = 2.39056562E+00;
  COFETA[138] = -2.34558144E-01;
  COFETA[139] = 1.05024037E-02;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = -9.35546056E+00;
  COFLAM[1] = 3.31628813E+00;
  COFLAM[2] = -1.07145282E-02;
  COFLAM[3] = -1.24086090E-02;
  COFLAM[4] = -8.57944636E-01;
  COFLAM[5] = 3.65436395E+00;
  COFLAM[6] = -3.98339635E-01;
  COFLAM[7] = 1.75883009E-02;
  COFLAM[8] = 1.69268564E+00;
  COFLAM[9] = 1.92606504E+00;
  COFLAM[10] = -1.73487476E-01;
  COFLAM[11] = 7.82572931E-03;
  COFLAM[12] = 1.50119775E+01;
  COFLAM[13] = -3.63267617E+00;
  COFLAM[14] = 5.92838774E-01;
  COFLAM[15] = -2.62920291E-02;
  COFLAM[16] = -1.12959874E+00;
  COFLAM[17] = 2.34014328E+00;
  COFLAM[18] = -1.63245076E-01;
  COFLAM[19] = 5.80319843E-03;
  COFLAM[20] = 9.24082480E+00;
  COFLAM[21] = -4.69567526E-01;
  COFLAM[22] = 1.15980102E-01;
  COFLAM[23] = -2.61033156E-03;
  COFLAM[24] = 2.33729836E+01;
  COFLAM[25] = -8.96536178E+00;
  COFLAM[26] = 1.52828630E+00;
  COFLAM[27] = -7.58551616E-02;
  COFLAM[28] = 8.84006318E-01;
  COFLAM[29] = 1.31525455E+00;
  COFLAM[30] = 1.91773906E-02;
  COFLAM[31] = -4.41642314E-03;
  COFLAM[32] = -1.93717634E+00;
  COFLAM[33] = 2.89110257E+00;
  COFLAM[34] = -2.71096988E-01;
  COFLAM[35] = 1.15344939E-02;
  COFLAM[36] = 1.39937895E+01;
  COFLAM[37] = -4.64256403E+00;
  COFLAM[38] = 9.07728510E-01;
  COFLAM[39] = -4.77274380E-02;
  COFLAM[40] = 1.33091614E+01;
  COFLAM[41] = -4.96140250E+00;
  COFLAM[42] = 1.03295495E+00;
  COFLAM[43] = -5.63420011E-02;
  COFLAM[44] = 5.39305623E+00;
  COFLAM[45] = -2.39312259E+00;
  COFLAM[46] = 7.39585006E-01;
  COFLAM[47] = -4.58435469E-02;
  COFLAM[48] = 1.18777275E+01;
  COFLAM[49] = -3.15463597E+00;
  COFLAM[50] = 6.01972754E-01;
  COFLAM[51] = -3.03211015E-02;
  COFLAM[52] = -1.13649201E+01;
  COFLAM[53] = 5.88177354E+00;
  COFLAM[54] = -5.68651792E-01;
  COFLAM[55] = 2.03561484E-02;
  COFLAM[56] = -7.70164041E+00;
  COFLAM[57] = 4.56884430E+00;
  COFLAM[58] = -4.04747578E-01;
  COFLAM[59] = 1.40841066E-02;
  COFLAM[60] = -1.46152767E+01;
  COFLAM[61] = 6.36251222E+00;
  COFLAM[62] = -5.03831917E-01;
  COFLAM[63] = 1.26120967E-02;
  COFLAM[64] = -1.09902158E+01;
  COFLAM[65] = 4.70647555E+00;
  COFLAM[66] = -2.52272322E-01;
  COFLAM[67] = 1.75186734E-04;
  COFLAM[68] = -6.27424897E+00;
  COFLAM[69] = 2.90471284E+00;
  COFLAM[70] = -4.35144336E-02;
  COFLAM[71] = -7.77922743E-03;
  COFLAM[72] = -2.14189910E+01;
  COFLAM[73] = 9.40840962E+00;
  COFLAM[74] = -9.66247319E-01;
  COFLAM[75] = 3.55085303E-02;
  COFLAM[76] = -1.70514626E+01;
  COFLAM[77] = 7.35906672E+00;
  COFLAM[78] = -6.52820712E-01;
  COFLAM[79] = 1.99982085E-02;
  COFLAM[80] = -1.81837054E+01;
  COFLAM[81] = 7.64582536E+00;
  COFLAM[82] = -6.80296906E-01;
  COFLAM[83] = 2.04082640E-02;
  COFLAM[84] = -1.65417594E+01;
  COFLAM[85] = 7.11744311E+00;
  COFLAM[86] = -6.16669095E-01;
  COFLAM[87] = 1.81367161E-02;
  COFLAM[88] = -1.45831859E+01;
  COFLAM[89] = 5.90742404E+00;
  COFLAM[90] = -3.94364795E-01;
  COFLAM[91] = 5.56233024E-03;
  COFLAM[92] = -3.46263100E+01;
  COFLAM[93] = 1.40704427E+01;
  COFLAM[94] = -1.51405261E+00;
  COFLAM[95] = 5.69632846E-02;
  COFLAM[96] = -1.86689184E+01;
  COFLAM[97] = 7.65011301E+00;
  COFLAM[98] = -6.46093077E-01;
  COFLAM[99] = 1.78356522E-02;
  COFLAM[100] = -1.75774950E+01;
  COFLAM[101] = 7.09949666E+00;
  COFLAM[102] = -5.61324023E-01;
  COFLAM[103] = 1.36473771E-02;
  COFLAM[104] = -1.64736860E+01;
  COFLAM[105] = 6.56030958E+00;
  COFLAM[106] = -4.79947764E-01;
  COFLAM[107] = 9.69177111E-03;
  COFLAM[108] = -1.49547457E+01;
  COFLAM[109] = 5.85879159E+00;
  COFLAM[110] = -3.77230053E-01;
  COFLAM[111] = 4.79861804E-03;
  COFLAM[112] = -1.37648703E+01;
  COFLAM[113] = 5.30662213E+00;
  COFLAM[114] = -2.96948912E-01;
  COFLAM[115] = 1.00864302E-03;
  COFLAM[116] = -1.20691352E+01;
  COFLAM[117] = 4.57988963E+00;
  COFLAM[118] = -1.94853890E-01;
  COFLAM[119] = -3.74099968E-03;
  COFLAM[120] = -1.25669867E+01;
  COFLAM[121] = 4.75862123E+00;
  COFLAM[122] = -2.18414353E-01;
  COFLAM[123] = -2.65674589E-03;
  COFLAM[124] = -1.05264352E+01;
  COFLAM[125] = 3.82519699E+00;
  COFLAM[126] = -8.57053164E-02;
  COFLAM[127] = -8.80477027E-03;
  COFLAM[128] = -1.09133608E+01;
  COFLAM[129] = 4.21990911E+00;
  COFLAM[130] = -1.87708496E-01;
  COFLAM[131] = -1.69129839E-03;
  COFLAM[132] = -6.84098916E+00;
  COFLAM[133] = 2.34795152E+00;
  COFLAM[134] = 8.90948044E-02;
  COFLAM[135] = -1.52021686E-02;
  COFLAM[136] = 1.29305954E+01;
  COFLAM[137] = -3.52816965E+00;
  COFLAM[138] = 6.45498434E-01;
  COFLAM[139] = -3.19375023E-02;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -1.28665148E+01;
  COFD[1] = 1.40407102E-01;
  COFD[2] = 3.41555146E-01;
  COFD[3] = -2.03644864E-02;
  COFD[4] = -2.09727935E+01;
  COFD[5] = 5.49979971E+00;
  COFD[6] = -4.62000942E-01;
  COFD[7] = 1.85549745E-02;
  COFD[8] = -2.17906749E+01;
  COFD[9] = 5.43781703E+00;
  COFD[10] = -4.75415362E-01;
  COFD[11] = 1.99887429E-02;
  COFD[12] = -2.18185268E+01;
  COFD[13] = 5.43781703E+00;
  COFD[14] = -4.75415362E-01;
  COFD[15] = 1.99887429E-02;
  COFD[16] = -2.28852566E+01;
  COFD[17] = 5.60324057E+00;
  COFD[18] = -4.88278590E-01;
  COFD[19] = 2.02076422E-02;
  COFD[20] = -1.85196652E+01;
  COFD[21] = 4.68077396E+00;
  COFD[22] = -3.91229141E-01;
  COFD[23] = 1.69020200E-02;
  COFD[24] = -1.47122747E+01;
  COFD[25] = 1.67339458E+00;
  COFD[26] = 1.22536705E-01;
  COFD[27] = -1.01692680E-02;
  COFD[28] = -2.28978256E+01;
  COFD[29] = 5.60324057E+00;
  COFD[30] = -4.88278590E-01;
  COFD[31] = 2.02076422E-02;
  COFD[32] = -2.28722333E+01;
  COFD[33] = 5.60324057E+00;
  COFD[34] = -4.88278590E-01;
  COFD[35] = 2.02076422E-02;
  COFD[36] = -2.26337129E+01;
  COFD[37] = 5.50133264E+00;
  COFD[38] = -4.62484498E-01;
  COFD[39] = 1.85871217E-02;
  COFD[40] = -2.26491370E+01;
  COFD[41] = 5.50690143E+00;
  COFD[42] = -4.64003349E-01;
  COFD[43] = 1.86846584E-02;
  COFD[44] = -1.64683697E+01;
  COFD[45] = 2.28170571E+00;
  COFD[46] = 3.44078407E-02;
  COFD[47] = -6.01703889E-03;
  COFD[48] = -2.27747741E+01;
  COFD[49] = 5.60263382E+00;
  COFD[50] = -4.91348327E-01;
  COFD[51] = 2.04651120E-02;
  COFD[52] = -2.17131539E+01;
  COFD[53] = 4.69815223E+00;
  COFD[54] = -3.28454103E-01;
  COFD[55] = 1.15970636E-02;
  COFD[56] = -2.22067717E+01;
  COFD[57] = 5.03874797E+00;
  COFD[58] = -3.82440213E-01;
  COFD[59] = 1.43232015E-02;
  COFD[60] = -2.08912810E+01;
  COFD[61] = 4.35422933E+00;
  COFD[62] = -2.74727512E-01;
  COFD[63] = 8.91328380E-03;
  COFD[64] = -2.15101026E+01;
  COFD[65] = 4.62311744E+00;
  COFD[66] = -3.16576672E-01;
  COFD[67] = 1.09982058E-02;
  COFD[68] = -1.78379202E+01;
  COFD[69] = 2.81667592E+00;
  COFD[70] = -4.44112417E-02;
  COFD[71] = -2.24836515E-03;
  COFD[72] = -2.15057005E+01;
  COFD[73] = 4.49401210E+00;
  COFD[74] = -2.96300228E-01;
  COFD[75] = 9.98228772E-03;
  COFD[76] = -2.15154449E+01;
  COFD[77] = 4.49401210E+00;
  COFD[78] = -2.96300228E-01;
  COFD[79] = 9.98228772E-03;
  COFD[80] = -1.98610330E+01;
  COFD[81] = 3.61510430E+00;
  COFD[82] = -1.62429647E-01;
  COFD[83] = 3.41379096E-03;
  COFD[84] = -1.98544943E+01;
  COFD[85] = 3.61510430E+00;
  COFD[86] = -1.62429647E-01;
  COFD[87] = 3.41379096E-03;
  COFD[88] = -1.98613280E+01;
  COFD[89] = 3.61510430E+00;
  COFD[90] = -1.62429647E-01;
  COFD[91] = 3.41379096E-03;
  COFD[92] = -1.79641953E+01;
  COFD[93] = 2.68406243E+00;
  COFD[94] = -2.49058117E-02;
  COFD[95] = -3.18217796E-03;
  COFD[96] = -1.79693333E+01;
  COFD[97] = 2.68406243E+00;
  COFD[98] = -2.49058117E-02;
  COFD[99] = -3.18217796E-03;
  COFD[100] = -1.71023549E+01;
  COFD[101] = 2.22992608E+00;
  COFD[102] = 4.19679647E-02;
  COFD[103] = -6.37519657E-03;
  COFD[104] = -1.62450421E+01;
  COFD[105] = 1.79898308E+00;
  COFD[106] = 1.04422970E-01;
  COFD[107] = -9.31788260E-03;
  COFD[108] = -1.54004377E+01;
  COFD[109] = 1.38485345E+00;
  COFD[110] = 1.63989484E-01;
  COFD[111] = -1.21088577E-02;
  COFD[112] = -1.46746702E+01;
  COFD[113] = 1.02870676E+00;
  COFD[114] = 2.14984638E-01;
  COFD[115] = -1.44879090E-02;
  COFD[116] = -1.46203241E+01;
  COFD[117] = 9.94330848E-01;
  COFD[118] = 2.19902430E-01;
  COFD[119] = -1.47171735E-02;
  COFD[120] = -1.40460915E+01;
  COFD[121] = 7.18763378E-01;
  COFD[122] = 2.59237872E-01;
  COFD[123] = -1.65477278E-02;
  COFD[124] = -1.30635373E+01;
  COFD[125] = 2.26455242E-01;
  COFD[126] = 3.29362482E-01;
  COFD[127] = -1.98017964E-02;
  COFD[128] = -1.27059833E+01;
  COFD[129] = 4.81478906E-02;
  COFD[130] = 3.54630676E-01;
  COFD[131] = -2.09687597E-02;
  COFD[132] = -1.22701310E+01;
  COFD[133] = -1.61500371E-01;
  COFD[134] = 3.84217824E-01;
  COFD[135] = -2.23309656E-02;
  COFD[136] = -2.27628265E+01;
  COFD[137] = 5.60192583E+00;
  COFD[138] = -4.91455403E-01;
  COFD[139] = 2.04776556E-02;
  COFD[140] = -2.09727935E+01;
  COFD[141] = 5.49979971E+00;
  COFD[142] = -4.62000942E-01;
  COFD[143] = 1.85549745E-02;
  COFD[144] = -1.47968875E+01;
  COFD[145] = 4.23027636E+00;
  COFD[146] = -3.36139991E-01;
  COFD[147] = 1.46507621E-02;
  COFD[148] = -1.34230419E+01;
  COFD[149] = 3.48624238E+00;
  COFD[150] = -2.41554467E-01;
  COFD[151] = 1.06263545E-02;
  COFD[152] = -1.34248014E+01;
  COFD[153] = 3.48624238E+00;
  COFD[154] = -2.41554467E-01;
  COFD[155] = 1.06263545E-02;
  COFD[156] = -1.46554904E+01;
  COFD[157] = 3.83606243E+00;
  COFD[158] = -2.86076532E-01;
  COFD[159] = 1.25205829E-02;
  COFD[160] = -1.14366544E+01;
  COFD[161] = 2.78323501E+00;
  COFD[162] = -1.51214064E-01;
  COFD[163] = 6.75150012E-03;
  COFD[164] = -1.95739720E+01;
  COFD[165] = 5.61113230E+00;
  COFD[166] = -4.90190187E-01;
  COFD[167] = 2.03260675E-02;
  COFD[168] = -1.46559297E+01;
  COFD[169] = 3.83606243E+00;
  COFD[170] = -2.86076532E-01;
  COFD[171] = 1.25205829E-02;
  COFD[172] = -1.46550238E+01;
  COFD[173] = 3.83606243E+00;
  COFD[174] = -2.86076532E-01;
  COFD[175] = 1.25205829E-02;
  COFD[176] = -1.57995045E+01;
  COFD[177] = 4.22225052E+00;
  COFD[178] = -3.35156428E-01;
  COFD[179] = 1.46104855E-02;
  COFD[180] = -1.57199190E+01;
  COFD[181] = 4.19936335E+00;
  COFD[182] = -3.32311009E-01;
  COFD[183] = 1.44921003E-02;
  COFD[184] = -1.97550243E+01;
  COFD[185] = 5.56931926E+00;
  COFD[186] = -4.89105511E-01;
  COFD[187] = 2.04493129E-02;
  COFD[188] = -1.43151328E+01;
  COFD[189] = 3.68038508E+00;
  COFD[190] = -2.65779346E-01;
  COFD[191] = 1.16360771E-02;
  COFD[192] = -1.76147183E+01;
  COFD[193] = 4.86049500E+00;
  COFD[194] = -4.12200578E-01;
  COFD[195] = 1.77160971E-02;
  COFD[196] = -1.72232379E+01;
  COFD[197] = 4.69060745E+00;
  COFD[198] = -3.92369888E-01;
  COFD[199] = 1.69459661E-02;
  COFD[200] = -1.82252070E+01;
  COFD[201] = 5.05237312E+00;
  COFD[202] = -4.35182396E-01;
  COFD[203] = 1.86363074E-02;
  COFD[204] = -1.79345106E+01;
  COFD[205] = 4.91373893E+00;
  COFD[206] = -4.18747629E-01;
  COFD[207] = 1.79856610E-02;
  COFD[208] = -1.94691588E+01;
  COFD[209] = 5.43830787E+00;
  COFD[210] = -4.75472880E-01;
  COFD[211] = 1.99909996E-02;
  COFD[212] = -1.83539845E+01;
  COFD[213] = 4.98756925E+00;
  COFD[214] = -4.27526072E-01;
  COFD[215] = 1.83341755E-02;
  COFD[216] = -1.83542714E+01;
  COFD[217] = 4.98756925E+00;
  COFD[218] = -4.27526072E-01;
  COFD[219] = 1.83341755E-02;
  COFD[220] = -1.94091246E+01;
  COFD[221] = 5.32291505E+00;
  COFD[222] = -4.65883522E-01;
  COFD[223] = 1.97916109E-02;
  COFD[224] = -1.94089702E+01;
  COFD[225] = 5.32291505E+00;
  COFD[226] = -4.65883522E-01;
  COFD[227] = 1.97916109E-02;
  COFD[228] = -1.94091316E+01;
  COFD[229] = 5.32291505E+00;
  COFD[230] = -4.65883522E-01;
  COFD[231] = 1.97916109E-02;
  COFD[232] = -1.99878889E+01;
  COFD[233] = 5.47248098E+00;
  COFD[234] = -4.79290468E-01;
  COFD[235] = 2.01323903E-02;
  COFD[236] = -1.99879922E+01;
  COFD[237] = 5.47248098E+00;
  COFD[238] = -4.79290468E-01;
  COFD[239] = 2.01323903E-02;
  COFD[240] = -2.04125771E+01;
  COFD[241] = 5.57739710E+00;
  COFD[242] = -4.89778630E-01;
  COFD[243] = 2.04637924E-02;
  COFD[244] = -2.06420448E+01;
  COFD[245] = 5.61233640E+00;
  COFD[246] = -4.91245632E-01;
  COFD[247] = 2.04073252E-02;
  COFD[248] = -2.07168035E+01;
  COFD[249] = 5.58797624E+00;
  COFD[250] = -4.84623564E-01;
  COFD[251] = 1.99817352E-02;
  COFD[252] = -2.08359032E+01;
  COFD[253] = 5.58518783E+00;
  COFD[254] = -4.81282144E-01;
  COFD[255] = 1.97176495E-02;
  COFD[256] = -2.08746358E+01;
  COFD[257] = 5.58521622E+00;
  COFD[258] = -4.81014671E-01;
  COFD[259] = 1.96952964E-02;
  COFD[260] = -2.09388450E+01;
  COFD[261] = 5.57974996E+00;
  COFD[262] = -4.78112864E-01;
  COFD[263] = 1.94826410E-02;
  COFD[264] = -2.09750990E+01;
  COFD[265] = 5.50429364E+00;
  COFD[266] = -4.63372495E-01;
  COFD[267] = 1.86455814E-02;
  COFD[268] = -2.09816459E+01;
  COFD[269] = 5.49082104E+00;
  COFD[270] = -4.60014303E-01;
  COFD[271] = 1.84365627E-02;
  COFD[272] = -2.09649992E+01;
  COFD[273] = 5.45055984E+00;
  COFD[274] = -4.52626477E-01;
  COFD[275] = 1.80297457E-02;
  COFD[276] = -1.42894603E+01;
  COFD[277] = 3.67490723E+00;
  COFD[278] = -2.65114792E-01;
  COFD[279] = 1.16092671E-02;
  COFD[280] = -2.17906749E+01;
  COFD[281] = 5.43781703E+00;
  COFD[282] = -4.75415362E-01;
  COFD[283] = 1.99887429E-02;
  COFD[284] = -1.34230419E+01;
  COFD[285] = 3.48624238E+00;
  COFD[286] = -2.41554467E-01;
  COFD[287] = 1.06263545E-02;
  COFD[288] = -1.32093517E+01;
  COFD[289] = 2.90778936E+00;
  COFD[290] = -1.67388544E-01;
  COFD[291] = 7.45220609E-03;
  COFD[292] = -1.32243932E+01;
  COFD[293] = 2.90778936E+00;
  COFD[294] = -1.67388544E-01;
  COFD[295] = 7.45220609E-03;
  COFD[296] = -1.43190281E+01;
  COFD[297] = 3.17651319E+00;
  COFD[298] = -2.02028974E-01;
  COFD[299] = 8.94232502E-03;
  COFD[300] = -1.09595844E+01;
  COFD[301] = 2.30836460E+00;
  COFD[302] = -8.76339315E-02;
  COFD[303] = 3.90878445E-03;
  COFD[304] = -1.94093476E+01;
  COFD[305] = 5.16013126E+00;
  COFD[306] = -4.46824543E-01;
  COFD[307] = 1.90464887E-02;
  COFD[308] = -1.43238892E+01;
  COFD[309] = 3.17651319E+00;
  COFD[310] = -2.02028974E-01;
  COFD[311] = 8.94232502E-03;
  COFD[312] = -1.43139120E+01;
  COFD[313] = 3.17651319E+00;
  COFD[314] = -2.02028974E-01;
  COFD[315] = 8.94232502E-03;
  COFD[316] = -1.50766073E+01;
  COFD[317] = 3.47945612E+00;
  COFD[318] = -2.40703722E-01;
  COFD[319] = 1.05907441E-02;
  COFD[320] = -1.50270285E+01;
  COFD[321] = 3.46140064E+00;
  COFD[322] = -2.38440092E-01;
  COFD[323] = 1.04960087E-02;
  COFD[324] = -1.94373032E+01;
  COFD[325] = 5.02567894E+00;
  COFD[326] = -4.32045169E-01;
  COFD[327] = 1.85132214E-02;
  COFD[328] = -1.40998907E+01;
  COFD[329] = 3.08120012E+00;
  COFD[330] = -1.89629903E-01;
  COFD[331] = 8.40361952E-03;
  COFD[332] = -1.70534750E+01;
  COFD[333] = 4.14240922E+00;
  COFD[334] = -3.25239774E-01;
  COFD[335] = 1.41980687E-02;
  COFD[336] = -1.65488277E+01;
  COFD[337] = 3.95035840E+00;
  COFD[338] = -3.00959418E-01;
  COFD[339] = 1.31692593E-02;
  COFD[340] = -1.74792034E+01;
  COFD[341] = 4.29676909E+00;
  COFD[342] = -3.44085306E-01;
  COFD[343] = 1.49671135E-02;
  COFD[344] = -1.72556425E+01;
  COFD[345] = 4.17889917E+00;
  COFD[346] = -3.29752510E-01;
  COFD[347] = 1.43850275E-02;
  COFD[348] = -1.90915553E+01;
  COFD[349] = 4.84384483E+00;
  COFD[350] = -4.10265575E-01;
  COFD[351] = 1.76414287E-02;
  COFD[352] = -1.76774947E+01;
  COFD[353] = 4.24719726E+00;
  COFD[354] = -3.38206061E-01;
  COFD[355] = 1.47350654E-02;
  COFD[356] = -1.76808635E+01;
  COFD[357] = 4.24719726E+00;
  COFD[358] = -3.38206061E-01;
  COFD[359] = 1.47350654E-02;
  COFD[360] = -1.87877888E+01;
  COFD[361] = 4.61260432E+00;
  COFD[362] = -3.82854484E-01;
  COFD[363] = 1.65575163E-02;
  COFD[364] = -1.87858504E+01;
  COFD[365] = 4.61260432E+00;
  COFD[366] = -3.82854484E-01;
  COFD[367] = 1.65575163E-02;
  COFD[368] = -1.87878758E+01;
  COFD[369] = 4.61260432E+00;
  COFD[370] = -3.82854484E-01;
  COFD[371] = 1.65575163E-02;
  COFD[372] = -1.96267194E+01;
  COFD[373] = 4.88238340E+00;
  COFD[374] = -4.14880316E-01;
  COFD[375] = 1.78258928E-02;
  COFD[376] = -1.96280719E+01;
  COFD[377] = 4.88238340E+00;
  COFD[378] = -4.14880316E-01;
  COFD[379] = 1.78258928E-02;
  COFD[380] = -2.01678752E+01;
  COFD[381] = 5.04165097E+00;
  COFD[382] = -4.33913744E-01;
  COFD[383] = 1.85861246E-02;
  COFD[384] = -2.05574198E+01;
  COFD[385] = 5.14795860E+00;
  COFD[386] = -4.45935789E-01;
  COFD[387] = 1.90364341E-02;
  COFD[388] = -2.08840874E+01;
  COFD[389] = 5.23394577E+00;
  COFD[390] = -4.55294957E-01;
  COFD[391] = 1.93696950E-02;
  COFD[392] = -2.12416101E+01;
  COFD[393] = 5.33751161E+00;
  COFD[394] = -4.67531962E-01;
  COFD[395] = 1.98534391E-02;
  COFD[396] = -2.12927711E+01;
  COFD[397] = 5.34414631E+00;
  COFD[398] = -4.68238030E-01;
  COFD[399] = 1.98779007E-02;
  COFD[400] = -2.14367497E+01;
  COFD[401] = 5.37405372E+00;
  COFD[402] = -4.70540525E-01;
  COFD[403] = 1.99137160E-02;
  COFD[404] = -2.17411393E+01;
  COFD[405] = 5.41958585E+00;
  COFD[406] = -4.73477571E-01;
  COFD[407] = 1.99215358E-02;
  COFD[408] = -2.18770313E+01;
  COFD[409] = 5.46038651E+00;
  COFD[410] = -4.77939293E-01;
  COFD[411] = 2.00823652E-02;
  COFD[412] = -2.20665268E+01;
  COFD[413] = 5.51007247E+00;
  COFD[414] = -4.83411907E-01;
  COFD[415] = 2.02812924E-02;
  COFD[416] = -1.40756909E+01;
  COFD[417] = 3.07549274E+00;
  COFD[418] = -1.88889344E-01;
  COFD[419] = 8.37152866E-03;
  COFD[420] = -2.18185268E+01;
  COFD[421] = 5.43781703E+00;
  COFD[422] = -4.75415362E-01;
  COFD[423] = 1.99887429E-02;
  COFD[424] = -1.34248014E+01;
  COFD[425] = 3.48624238E+00;
  COFD[426] = -2.41554467E-01;
  COFD[427] = 1.06263545E-02;
  COFD[428] = -1.32243932E+01;
  COFD[429] = 2.90778936E+00;
  COFD[430] = -1.67388544E-01;
  COFD[431] = 7.45220609E-03;
  COFD[432] = -1.32399011E+01;
  COFD[433] = 2.90778936E+00;
  COFD[434] = -1.67388544E-01;
  COFD[435] = 7.45220609E-03;
  COFD[436] = -1.43393972E+01;
  COFD[437] = 3.17651319E+00;
  COFD[438] = -2.02028974E-01;
  COFD[439] = 8.94232502E-03;
  COFD[440] = -1.09629118E+01;
  COFD[441] = 2.30836460E+00;
  COFD[442] = -8.76339315E-02;
  COFD[443] = 3.90878445E-03;
  COFD[444] = -1.94252948E+01;
  COFD[445] = 5.16013126E+00;
  COFD[446] = -4.46824543E-01;
  COFD[447] = 1.90464887E-02;
  COFD[448] = -1.43444614E+01;
  COFD[449] = 3.17651319E+00;
  COFD[450] = -2.02028974E-01;
  COFD[451] = 8.94232502E-03;
  COFD[452] = -1.43340695E+01;
  COFD[453] = 3.17651319E+00;
  COFD[454] = -2.02028974E-01;
  COFD[455] = 8.94232502E-03;
  COFD[456] = -1.50911746E+01;
  COFD[457] = 3.47945612E+00;
  COFD[458] = -2.40703722E-01;
  COFD[459] = 1.05907441E-02;
  COFD[460] = -1.50420909E+01;
  COFD[461] = 3.46140064E+00;
  COFD[462] = -2.38440092E-01;
  COFD[463] = 1.04960087E-02;
  COFD[464] = -1.94570202E+01;
  COFD[465] = 5.02567894E+00;
  COFD[466] = -4.32045169E-01;
  COFD[467] = 1.85132214E-02;
  COFD[468] = -1.41191170E+01;
  COFD[469] = 3.08120012E+00;
  COFD[470] = -1.89629903E-01;
  COFD[471] = 8.40361952E-03;
  COFD[472] = -1.70756953E+01;
  COFD[473] = 4.14240922E+00;
  COFD[474] = -3.25239774E-01;
  COFD[475] = 1.41980687E-02;
  COFD[476] = -1.65675292E+01;
  COFD[477] = 3.95035840E+00;
  COFD[478] = -3.00959418E-01;
  COFD[479] = 1.31692593E-02;
  COFD[480] = -1.74984410E+01;
  COFD[481] = 4.29676909E+00;
  COFD[482] = -3.44085306E-01;
  COFD[483] = 1.49671135E-02;
  COFD[484] = -1.72753698E+01;
  COFD[485] = 4.17889917E+00;
  COFD[486] = -3.29752510E-01;
  COFD[487] = 1.43850275E-02;
  COFD[488] = -1.91136407E+01;
  COFD[489] = 4.84384483E+00;
  COFD[490] = -4.10265575E-01;
  COFD[491] = 1.76414287E-02;
  COFD[492] = -1.76992903E+01;
  COFD[493] = 4.24719726E+00;
  COFD[494] = -3.38206061E-01;
  COFD[495] = 1.47350654E-02;
  COFD[496] = -1.77028097E+01;
  COFD[497] = 4.24719726E+00;
  COFD[498] = -3.38206061E-01;
  COFD[499] = 1.47350654E-02;
  COFD[500] = -1.88113928E+01;
  COFD[501] = 4.61260432E+00;
  COFD[502] = -3.82854484E-01;
  COFD[503] = 1.65575163E-02;
  COFD[504] = -1.88093609E+01;
  COFD[505] = 4.61260432E+00;
  COFD[506] = -3.82854484E-01;
  COFD[507] = 1.65575163E-02;
  COFD[508] = -1.88114840E+01;
  COFD[509] = 4.61260432E+00;
  COFD[510] = -3.82854484E-01;
  COFD[511] = 1.65575163E-02;
  COFD[512] = -1.96513830E+01;
  COFD[513] = 4.88238340E+00;
  COFD[514] = -4.14880316E-01;
  COFD[515] = 1.78258928E-02;
  COFD[516] = -1.96528039E+01;
  COFD[517] = 4.88238340E+00;
  COFD[518] = -4.14880316E-01;
  COFD[519] = 1.78258928E-02;
  COFD[520] = -2.01934178E+01;
  COFD[521] = 5.04165097E+00;
  COFD[522] = -4.33913744E-01;
  COFD[523] = 1.85861246E-02;
  COFD[524] = -2.05835748E+01;
  COFD[525] = 5.14795860E+00;
  COFD[526] = -4.45935789E-01;
  COFD[527] = 1.90364341E-02;
  COFD[528] = -2.09107212E+01;
  COFD[529] = 5.23394577E+00;
  COFD[530] = -4.55294957E-01;
  COFD[531] = 1.93696950E-02;
  COFD[532] = -2.12686288E+01;
  COFD[533] = 5.33751161E+00;
  COFD[534] = -4.67531962E-01;
  COFD[535] = 1.98534391E-02;
  COFD[536] = -2.13198145E+01;
  COFD[537] = 5.34414631E+00;
  COFD[538] = -4.68238030E-01;
  COFD[539] = 1.98779007E-02;
  COFD[540] = -2.14640843E+01;
  COFD[541] = 5.37405372E+00;
  COFD[542] = -4.70540525E-01;
  COFD[543] = 1.99137160E-02;
  COFD[544] = -2.17689618E+01;
  COFD[545] = 5.41958585E+00;
  COFD[546] = -4.73477571E-01;
  COFD[547] = 1.99215358E-02;
  COFD[548] = -2.19052670E+01;
  COFD[549] = 5.46038651E+00;
  COFD[550] = -4.77939293E-01;
  COFD[551] = 2.00823652E-02;
  COFD[552] = -2.20949114E+01;
  COFD[553] = 5.51007247E+00;
  COFD[554] = -4.83411907E-01;
  COFD[555] = 2.02812924E-02;
  COFD[556] = -1.40949183E+01;
  COFD[557] = 3.07549274E+00;
  COFD[558] = -1.88889344E-01;
  COFD[559] = 8.37152866E-03;
  COFD[560] = -2.28852566E+01;
  COFD[561] = 5.60324057E+00;
  COFD[562] = -4.88278590E-01;
  COFD[563] = 2.02076422E-02;
  COFD[564] = -1.46554904E+01;
  COFD[565] = 3.83606243E+00;
  COFD[566] = -2.86076532E-01;
  COFD[567] = 1.25205829E-02;
  COFD[568] = -1.43190281E+01;
  COFD[569] = 3.17651319E+00;
  COFD[570] = -2.02028974E-01;
  COFD[571] = 8.94232502E-03;
  COFD[572] = -1.43393972E+01;
  COFD[573] = 3.17651319E+00;
  COFD[574] = -2.02028974E-01;
  COFD[575] = 8.94232502E-03;
  COFD[576] = -1.55666313E+01;
  COFD[577] = 3.48070094E+00;
  COFD[578] = -2.40859499E-01;
  COFD[579] = 1.05972514E-02;
  COFD[580] = -1.18998160E+01;
  COFD[581] = 2.57507000E+00;
  COFD[582] = -1.24033737E-01;
  COFD[583] = 5.56694959E-03;
  COFD[584] = -2.06463656E+01;
  COFD[585] = 5.41688482E+00;
  COFD[586] = -4.73387188E-01;
  COFD[587] = 1.99280175E-02;
  COFD[588] = -1.55740954E+01;
  COFD[589] = 3.48070094E+00;
  COFD[590] = -2.40859499E-01;
  COFD[591] = 1.05972514E-02;
  COFD[592] = -1.55588172E+01;
  COFD[593] = 3.48070094E+00;
  COFD[594] = -2.40859499E-01;
  COFD[595] = 1.05972514E-02;
  COFD[596] = -1.63542358E+01;
  COFD[597] = 3.82388595E+00;
  COFD[598] = -2.84480724E-01;
  COFD[599] = 1.24506311E-02;
  COFD[600] = -1.62775683E+01;
  COFD[601] = 3.79163564E+00;
  COFD[602] = -2.80257365E-01;
  COFD[603] = 1.22656902E-02;
  COFD[604] = -2.08367641E+01;
  COFD[605] = 5.35267674E+00;
  COFD[606] = -4.69010505E-01;
  COFD[607] = 1.98979152E-02;
  COFD[608] = -1.52792799E+01;
  COFD[609] = 3.36790500E+00;
  COFD[610] = -2.26321740E-01;
  COFD[611] = 9.97135055E-03;
  COFD[612] = -1.84777509E+01;
  COFD[613] = 4.49330851E+00;
  COFD[614] = -3.68208715E-01;
  COFD[615] = 1.59565402E-02;
  COFD[616] = -1.78903850E+01;
  COFD[617] = 4.29613154E+00;
  COFD[618] = -3.44012526E-01;
  COFD[619] = 1.49643715E-02;
  COFD[620] = -1.89616566E+01;
  COFD[621] = 4.68595732E+00;
  COFD[622] = -3.91842840E-01;
  COFD[623] = 1.69262542E-02;
  COFD[624] = -1.86499019E+01;
  COFD[625] = 4.53572533E+00;
  COFD[626] = -3.73386925E-01;
  COFD[627] = 1.61678881E-02;
  COFD[628] = -2.05324009E+01;
  COFD[629] = 5.18417470E+00;
  COFD[630] = -4.49491573E-01;
  COFD[631] = 1.91438508E-02;
  COFD[632] = -1.91208247E+01;
  COFD[633] = 4.61801405E+00;
  COFD[634] = -3.83535652E-01;
  COFD[635] = 1.65862513E-02;
  COFD[636] = -1.91261897E+01;
  COFD[637] = 4.61801405E+00;
  COFD[638] = -3.83535652E-01;
  COFD[639] = 1.65862513E-02;
  COFD[640] = -2.02564700E+01;
  COFD[641] = 4.97613338E+00;
  COFD[642] = -4.26175206E-01;
  COFD[643] = 1.82809270E-02;
  COFD[644] = -2.02532389E+01;
  COFD[645] = 4.97613338E+00;
  COFD[646] = -4.26175206E-01;
  COFD[647] = 1.82809270E-02;
  COFD[648] = -2.02566153E+01;
  COFD[649] = 4.97613338E+00;
  COFD[650] = -4.26175206E-01;
  COFD[651] = 1.82809270E-02;
  COFD[652] = -2.10673190E+01;
  COFD[653] = 5.22065615E+00;
  COFD[654] = -4.53751850E-01;
  COFD[655] = 1.93099506E-02;
  COFD[656] = -2.10696468E+01;
  COFD[657] = 5.22065615E+00;
  COFD[658] = -4.53751850E-01;
  COFD[659] = 1.93099506E-02;
  COFD[660] = -2.15776504E+01;
  COFD[661] = 5.35995365E+00;
  COFD[662] = -4.69587823E-01;
  COFD[663] = 1.99080702E-02;
  COFD[664] = -2.18432468E+01;
  COFD[665] = 5.40768793E+00;
  COFD[666] = -4.72942538E-01;
  COFD[667] = 1.99389038E-02;
  COFD[668] = -2.21426228E+01;
  COFD[669] = 5.47842731E+00;
  COFD[670] = -4.79952894E-01;
  COFD[671] = 2.01568406E-02;
  COFD[672] = -2.24428055E+01;
  COFD[673] = 5.55319328E+00;
  COFD[674] = -4.87759313E-01;
  COFD[675] = 2.04205124E-02;
  COFD[676] = -2.24883897E+01;
  COFD[677] = 5.55793029E+00;
  COFD[678] = -4.88170533E-01;
  COFD[679] = 2.04302911E-02;
  COFD[680] = -2.26547956E+01;
  COFD[681] = 5.59528609E+00;
  COFD[682] = -4.91473190E-01;
  COFD[683] = 2.05131236E-02;
  COFD[684] = -2.28924392E+01;
  COFD[685] = 5.61013561E+00;
  COFD[686] = -4.89933558E-01;
  COFD[687] = 2.03098561E-02;
  COFD[688] = -2.29058182E+01;
  COFD[689] = 5.59504443E+00;
  COFD[690] = -4.86415566E-01;
  COFD[691] = 2.00947399E-02;
  COFD[692] = -2.29515207E+01;
  COFD[693] = 5.58219321E+00;
  COFD[694] = -4.82941269E-01;
  COFD[695] = 1.98711890E-02;
  COFD[696] = -1.52486292E+01;
  COFD[697] = 3.35922578E+00;
  COFD[698] = -2.25181399E-01;
  COFD[699] = 9.92132878E-03;
  COFD[700] = -1.85196652E+01;
  COFD[701] = 4.68077396E+00;
  COFD[702] = -3.91229141E-01;
  COFD[703] = 1.69020200E-02;
  COFD[704] = -1.14366544E+01;
  COFD[705] = 2.78323501E+00;
  COFD[706] = -1.51214064E-01;
  COFD[707] = 6.75150012E-03;
  COFD[708] = -1.09595844E+01;
  COFD[709] = 2.30836460E+00;
  COFD[710] = -8.76339315E-02;
  COFD[711] = 3.90878445E-03;
  COFD[712] = -1.09629118E+01;
  COFD[713] = 2.30836460E+00;
  COFD[714] = -8.76339315E-02;
  COFD[715] = 3.90878445E-03;
  COFD[716] = -1.18998160E+01;
  COFD[717] = 2.57507000E+00;
  COFD[718] = -1.24033737E-01;
  COFD[719] = 5.56694959E-03;
  COFD[720] = -1.03270769E+01;
  COFD[721] = 2.19285409E+00;
  COFD[722] = -7.54492786E-02;
  COFD[723] = 3.51398213E-03;
  COFD[724] = -1.71983144E+01;
  COFD[725] = 4.63881440E+00;
  COFD[726] = -3.86139677E-01;
  COFD[727] = 1.66955099E-02;
  COFD[728] = -1.19006697E+01;
  COFD[729] = 2.57507000E+00;
  COFD[730] = -1.24033737E-01;
  COFD[731] = 5.56694959E-03;
  COFD[732] = -1.18989101E+01;
  COFD[733] = 2.57507000E+00;
  COFD[734] = -1.24033737E-01;
  COFD[735] = 5.56694959E-03;
  COFD[736] = -1.25141403E+01;
  COFD[737] = 2.77873601E+00;
  COFD[738] = -1.50637360E-01;
  COFD[739] = 6.72684281E-03;
  COFD[740] = -1.24693714E+01;
  COFD[741] = 2.76686648E+00;
  COFD[742] = -1.49120141E-01;
  COFD[743] = 6.66220432E-03;
  COFD[744] = -1.60528433E+01;
  COFD[745] = 4.11188603E+00;
  COFD[746] = -3.21540884E-01;
  COFD[747] = 1.40482564E-02;
  COFD[748] = -1.17159884E+01;
  COFD[749] = 2.48123210E+00;
  COFD[750] = -1.11322604E-01;
  COFD[751] = 4.99282389E-03;
  COFD[752] = -1.37794466E+01;
  COFD[753] = 3.23973858E+00;
  COFD[754] = -2.09989036E-01;
  COFD[755] = 9.27667906E-03;
  COFD[756] = -1.34709956E+01;
  COFD[757] = 3.09379603E+00;
  COFD[758] = -1.91268635E-01;
  COFD[759] = 8.47480224E-03;
  COFD[760] = -1.42229344E+01;
  COFD[761] = 3.38669384E+00;
  COFD[762] = -2.28784122E-01;
  COFD[763] = 1.00790953E-02;
  COFD[764] = -1.39924933E+01;
  COFD[765] = 3.26384506E+00;
  COFD[766] = -2.12947087E-01;
  COFD[767] = 9.39743888E-03;
  COFD[768] = -1.57040365E+01;
  COFD[769] = 3.93614244E+00;
  COFD[770] = -2.99111497E-01;
  COFD[771] = 1.30888229E-02;
  COFD[772] = -1.43129867E+01;
  COFD[773] = 3.31177824E+00;
  COFD[774] = -2.18945280E-01;
  COFD[775] = 9.64764419E-03;
  COFD[776] = -1.43135474E+01;
  COFD[777] = 3.31177824E+00;
  COFD[778] = -2.18945280E-01;
  COFD[779] = 9.64764419E-03;
  COFD[780] = -1.52614209E+01;
  COFD[781] = 3.64565939E+00;
  COFD[782] = -2.61726871E-01;
  COFD[783] = 1.14799244E-02;
  COFD[784] = -1.52611173E+01;
  COFD[785] = 3.64565939E+00;
  COFD[786] = -2.61726871E-01;
  COFD[787] = 1.14799244E-02;
  COFD[788] = -1.52614345E+01;
  COFD[789] = 3.64565939E+00;
  COFD[790] = -2.61726871E-01;
  COFD[791] = 1.14799244E-02;
  COFD[792] = -1.61866111E+01;
  COFD[793] = 3.97811734E+00;
  COFD[794] = -3.04543772E-01;
  COFD[795] = 1.33243270E-02;
  COFD[796] = -1.61868148E+01;
  COFD[797] = 3.97811734E+00;
  COFD[798] = -3.04543772E-01;
  COFD[799] = 1.33243270E-02;
  COFD[800] = -1.66550985E+01;
  COFD[801] = 4.12489968E+00;
  COFD[802] = -3.23119338E-01;
  COFD[803] = 1.41122711E-02;
  COFD[804] = -1.70329250E+01;
  COFD[805] = 4.23969256E+00;
  COFD[806] = -3.37288904E-01;
  COFD[807] = 1.46975974E-02;
  COFD[808] = -1.73560950E+01;
  COFD[809] = 4.33584314E+00;
  COFD[810] = -3.48938603E-01;
  COFD[811] = 1.51686902E-02;
  COFD[812] = -1.76841386E+01;
  COFD[813] = 4.43623609E+00;
  COFD[814] = -3.61391880E-01;
  COFD[815] = 1.56853368E-02;
  COFD[816] = -1.77370430E+01;
  COFD[817] = 4.44459213E+00;
  COFD[818] = -3.62399607E-01;
  COFD[819] = 1.57258496E-02;
  COFD[820] = -1.79421312E+01;
  COFD[821] = 4.50796148E+00;
  COFD[822] = -3.69986604E-01;
  COFD[823] = 1.60286525E-02;
  COFD[824] = -1.84634396E+01;
  COFD[825] = 4.65797225E+00;
  COFD[826] = -3.88483952E-01;
  COFD[827] = 1.67915384E-02;
  COFD[828] = -1.85877757E+01;
  COFD[829] = 4.69975029E+00;
  COFD[830] = -3.93412211E-01;
  COFD[831] = 1.69852534E-02;
  COFD[832] = -1.87542772E+01;
  COFD[833] = 4.74513688E+00;
  COFD[834] = -3.98725524E-01;
  COFD[835] = 1.71922391E-02;
  COFD[836] = -1.16906458E+01;
  COFD[837] = 2.47469981E+00;
  COFD[838] = -1.10436257E-01;
  COFD[839] = 4.95273813E-03;
  COFD[840] = -1.47122747E+01;
  COFD[841] = 1.67339458E+00;
  COFD[842] = 1.22536705E-01;
  COFD[843] = -1.01692680E-02;
  COFD[844] = -1.95739720E+01;
  COFD[845] = 5.61113230E+00;
  COFD[846] = -4.90190187E-01;
  COFD[847] = 2.03260675E-02;
  COFD[848] = -1.94093476E+01;
  COFD[849] = 5.16013126E+00;
  COFD[850] = -4.46824543E-01;
  COFD[851] = 1.90464887E-02;
  COFD[852] = -1.94252948E+01;
  COFD[853] = 5.16013126E+00;
  COFD[854] = -4.46824543E-01;
  COFD[855] = 1.90464887E-02;
  COFD[856] = -2.06463656E+01;
  COFD[857] = 5.41688482E+00;
  COFD[858] = -4.73387188E-01;
  COFD[859] = 1.99280175E-02;
  COFD[860] = -1.71983144E+01;
  COFD[861] = 4.63881440E+00;
  COFD[862] = -3.86139677E-01;
  COFD[863] = 1.66955099E-02;
  COFD[864] = -1.19157788E+01;
  COFD[865] = 9.28952533E-01;
  COFD[866] = 2.42107483E-01;
  COFD[867] = -1.59824150E-02;
  COFD[868] = -2.06516251E+01;
  COFD[869] = 5.41688482E+00;
  COFD[870] = -4.73387188E-01;
  COFD[871] = 1.99280175E-02;
  COFD[872] = -2.12652444E+01;
  COFD[873] = 5.59961822E+00;
  COFD[874] = -4.91624856E-01;
  COFD[875] = 2.05035546E-02;
  COFD[876] = -2.12831283E+01;
  COFD[877] = 5.61184117E+00;
  COFD[878] = -4.90532156E-01;
  COFD[879] = 2.03507922E-02;
  COFD[880] = -2.14087360E+01;
  COFD[881] = 5.57281993E+00;
  COFD[882] = -4.76690860E-01;
  COFD[883] = 1.94000702E-02;
  COFD[884] = -1.77563175E+01;
  COFD[885] = 3.57475686E+00;
  COFD[886] = -1.56396297E-01;
  COFD[887] = 3.12157721E-03;
  COFD[888] = -2.11388255E+01;
  COFD[889] = 5.55529689E+00;
  COFD[890] = -4.87942530E-01;
  COFD[891] = 2.04249057E-02;
  COFD[892] = -2.07653629E+01;
  COFD[893] = 5.01091988E+00;
  COFD[894] = -3.77985581E-01;
  COFD[895] = 1.40968617E-02;
  COFD[896] = -2.15095920E+01;
  COFD[897] = 5.46737673E+00;
  COFD[898] = -4.55696085E-01;
  COFD[899] = 1.81982625E-02;
  COFD[900] = -2.08812277E+01;
  COFD[901] = 5.08859217E+00;
  COFD[902] = -3.90525428E-01;
  COFD[903] = 1.47376395E-02;
  COFD[904] = -2.12661812E+01;
  COFD[905] = 5.24930667E+00;
  COFD[906] = -4.17435088E-01;
  COFD[907] = 1.61434424E-02;
  COFD[908] = -1.87419126E+01;
  COFD[909] = 3.96926341E+00;
  COFD[910] = -2.16412264E-01;
  COFD[911] = 6.06012078E-03;
  COFD[912] = -2.13847376E+01;
  COFD[913] = 5.17440955E+00;
  COFD[914] = -4.04678430E-01;
  COFD[915] = 1.54706350E-02;
  COFD[916] = -2.13884026E+01;
  COFD[917] = 5.17440955E+00;
  COFD[918] = -4.04678430E-01;
  COFD[919] = 1.54706350E-02;
  COFD[920] = -2.03436817E+01;
  COFD[921] = 4.57152878E+00;
  COFD[922] = -3.08371263E-01;
  COFD[923] = 1.05838559E-02;
  COFD[924] = -2.03415589E+01;
  COFD[925] = 4.57152878E+00;
  COFD[926] = -3.08371263E-01;
  COFD[927] = 1.05838559E-02;
  COFD[928] = -2.03437771E+01;
  COFD[929] = 4.57152878E+00;
  COFD[930] = -3.08371263E-01;
  COFD[931] = 1.05838559E-02;
  COFD[932] = -1.90109309E+01;
  COFD[933] = 3.88639599E+00;
  COFD[934] = -2.03781856E-01;
  COFD[935] = 5.44050761E-03;
  COFD[936] = -1.90124187E+01;
  COFD[937] = 3.88639599E+00;
  COFD[938] = -2.03781856E-01;
  COFD[939] = 5.44050761E-03;
  COFD[940] = -1.83523817E+01;
  COFD[941] = 3.52256138E+00;
  COFD[942] = -1.48611326E-01;
  COFD[943] = 2.74505262E-03;
  COFD[944] = -1.76500812E+01;
  COFD[945] = 3.15831209E+00;
  COFD[946] = -9.45393054E-02;
  COFD[947] = 1.45090308E-04;
  COFD[948] = -1.68531525E+01;
  COFD[949] = 2.76314344E+00;
  COFD[950] = -3.65464735E-02;
  COFD[951] = -2.62462500E-03;
  COFD[952] = -1.62777166E+01;
  COFD[953] = 2.46665777E+00;
  COFD[954] = 7.25684399E-03;
  COFD[955] = -4.72424494E-03;
  COFD[956] = -1.62527662E+01;
  COFD[957] = 2.44062989E+00;
  COFD[958] = 1.10981222E-02;
  COFD[959] = -4.90788998E-03;
  COFD[960] = -1.58057803E+01;
  COFD[961] = 2.22000952E+00;
  COFD[962] = 4.34143206E-02;
  COFD[963] = -6.44371681E-03;
  COFD[964] = -1.49248327E+01;
  COFD[965] = 1.76546946E+00;
  COFD[966] = 1.09258240E-01;
  COFD[967] = -9.54522038E-03;
  COFD[968] = -1.45392396E+01;
  COFD[969] = 1.58706272E+00;
  COFD[970] = 1.34937972E-01;
  COFD[971] = -1.07491300E-02;
  COFD[972] = -1.41324917E+01;
  COFD[973] = 1.38727136E+00;
  COFD[974] = 1.63642976E-01;
  COFD[975] = -1.20926895E-02;
  COFD[976] = -2.10643264E+01;
  COFD[977] = 5.53614864E+00;
  COFD[978] = -4.86046753E-01;
  COFD[979] = 2.03659193E-02;
  COFD[980] = -2.28978256E+01;
  COFD[981] = 5.60324057E+00;
  COFD[982] = -4.88278590E-01;
  COFD[983] = 2.02076422E-02;
  COFD[984] = -1.46559297E+01;
  COFD[985] = 3.83606243E+00;
  COFD[986] = -2.86076532E-01;
  COFD[987] = 1.25205829E-02;
  COFD[988] = -1.43238892E+01;
  COFD[989] = 3.17651319E+00;
  COFD[990] = -2.02028974E-01;
  COFD[991] = 8.94232502E-03;
  COFD[992] = -1.43444614E+01;
  COFD[993] = 3.17651319E+00;
  COFD[994] = -2.02028974E-01;
  COFD[995] = 8.94232502E-03;
  COFD[996] = -1.55740954E+01;
  COFD[997] = 3.48070094E+00;
  COFD[998] = -2.40859499E-01;
  COFD[999] = 1.05972514E-02;
  COFD[1000] = -1.19006697E+01;
  COFD[1001] = 2.57507000E+00;
  COFD[1002] = -1.24033737E-01;
  COFD[1003] = 5.56694959E-03;
  COFD[1004] = -2.06516251E+01;
  COFD[1005] = 5.41688482E+00;
  COFD[1006] = -4.73387188E-01;
  COFD[1007] = 1.99280175E-02;
  COFD[1008] = -1.55816727E+01;
  COFD[1009] = 3.48070094E+00;
  COFD[1010] = -2.40859499E-01;
  COFD[1011] = 1.05972514E-02;
  COFD[1012] = -1.55661647E+01;
  COFD[1013] = 3.48070094E+00;
  COFD[1014] = -2.40859499E-01;
  COFD[1015] = 1.05972514E-02;
  COFD[1016] = -1.63588948E+01;
  COFD[1017] = 3.82388595E+00;
  COFD[1018] = -2.84480724E-01;
  COFD[1019] = 1.24506311E-02;
  COFD[1020] = -1.62824385E+01;
  COFD[1021] = 3.79163564E+00;
  COFD[1022] = -2.80257365E-01;
  COFD[1023] = 1.22656902E-02;
  COFD[1024] = -2.08438728E+01;
  COFD[1025] = 5.35267674E+00;
  COFD[1026] = -4.69010505E-01;
  COFD[1027] = 1.98979152E-02;
  COFD[1028] = -1.52861287E+01;
  COFD[1029] = 3.36790500E+00;
  COFD[1030] = -2.26321740E-01;
  COFD[1031] = 9.97135055E-03;
  COFD[1032] = -1.84862906E+01;
  COFD[1033] = 4.49330851E+00;
  COFD[1034] = -3.68208715E-01;
  COFD[1035] = 1.59565402E-02;
  COFD[1036] = -1.78969625E+01;
  COFD[1037] = 4.29613154E+00;
  COFD[1038] = -3.44012526E-01;
  COFD[1039] = 1.49643715E-02;
  COFD[1040] = -1.89685112E+01;
  COFD[1041] = 4.68595732E+00;
  COFD[1042] = -3.91842840E-01;
  COFD[1043] = 1.69262542E-02;
  COFD[1044] = -1.86570161E+01;
  COFD[1045] = 4.53572533E+00;
  COFD[1046] = -3.73386925E-01;
  COFD[1047] = 1.61678881E-02;
  COFD[1048] = -2.05408587E+01;
  COFD[1049] = 5.18417470E+00;
  COFD[1050] = -4.49491573E-01;
  COFD[1051] = 1.91438508E-02;
  COFD[1052] = -1.91291085E+01;
  COFD[1053] = 4.61801405E+00;
  COFD[1054] = -3.83535652E-01;
  COFD[1055] = 1.65862513E-02;
  COFD[1056] = -1.91345636E+01;
  COFD[1057] = 4.61801405E+00;
  COFD[1058] = -3.83535652E-01;
  COFD[1059] = 1.65862513E-02;
  COFD[1060] = -2.02658847E+01;
  COFD[1061] = 4.97613338E+00;
  COFD[1062] = -4.26175206E-01;
  COFD[1063] = 1.82809270E-02;
  COFD[1064] = -2.02625924E+01;
  COFD[1065] = 4.97613338E+00;
  COFD[1066] = -4.26175206E-01;
  COFD[1067] = 1.82809270E-02;
  COFD[1068] = -2.02660328E+01;
  COFD[1069] = 4.97613338E+00;
  COFD[1070] = -4.26175206E-01;
  COFD[1071] = 1.82809270E-02;
  COFD[1072] = -2.10774499E+01;
  COFD[1073] = 5.22065615E+00;
  COFD[1074] = -4.53751850E-01;
  COFD[1075] = 1.93099506E-02;
  COFD[1076] = -2.10798254E+01;
  COFD[1077] = 5.22065615E+00;
  COFD[1078] = -4.53751850E-01;
  COFD[1079] = 1.93099506E-02;
  COFD[1080] = -2.15884087E+01;
  COFD[1081] = 5.35995365E+00;
  COFD[1082] = -4.69587823E-01;
  COFD[1083] = 1.99080702E-02;
  COFD[1084] = -2.18544613E+01;
  COFD[1085] = 5.40768793E+00;
  COFD[1086] = -4.72942538E-01;
  COFD[1087] = 1.99389038E-02;
  COFD[1088] = -2.21542057E+01;
  COFD[1089] = 5.47842731E+00;
  COFD[1090] = -4.79952894E-01;
  COFD[1091] = 2.01568406E-02;
  COFD[1092] = -2.24546921E+01;
  COFD[1093] = 5.55319328E+00;
  COFD[1094] = -4.87759313E-01;
  COFD[1095] = 2.04205124E-02;
  COFD[1096] = -2.25002960E+01;
  COFD[1097] = 5.55793029E+00;
  COFD[1098] = -4.88170533E-01;
  COFD[1099] = 2.04302911E-02;
  COFD[1100] = -2.26669368E+01;
  COFD[1101] = 5.59528609E+00;
  COFD[1102] = -4.91473190E-01;
  COFD[1103] = 2.05131236E-02;
  COFD[1104] = -2.29049835E+01;
  COFD[1105] = 5.61013561E+00;
  COFD[1106] = -4.89933558E-01;
  COFD[1107] = 2.03098561E-02;
  COFD[1108] = -2.29187135E+01;
  COFD[1109] = 5.59504443E+00;
  COFD[1110] = -4.86415566E-01;
  COFD[1111] = 2.00947399E-02;
  COFD[1112] = -2.29645447E+01;
  COFD[1113] = 5.58219321E+00;
  COFD[1114] = -4.82941269E-01;
  COFD[1115] = 1.98711890E-02;
  COFD[1116] = -1.52554785E+01;
  COFD[1117] = 3.35922578E+00;
  COFD[1118] = -2.25181399E-01;
  COFD[1119] = 9.92132878E-03;
  COFD[1120] = -2.28722333E+01;
  COFD[1121] = 5.60324057E+00;
  COFD[1122] = -4.88278590E-01;
  COFD[1123] = 2.02076422E-02;
  COFD[1124] = -1.46550238E+01;
  COFD[1125] = 3.83606243E+00;
  COFD[1126] = -2.86076532E-01;
  COFD[1127] = 1.25205829E-02;
  COFD[1128] = -1.43139120E+01;
  COFD[1129] = 3.17651319E+00;
  COFD[1130] = -2.02028974E-01;
  COFD[1131] = 8.94232502E-03;
  COFD[1132] = -1.43340695E+01;
  COFD[1133] = 3.17651319E+00;
  COFD[1134] = -2.02028974E-01;
  COFD[1135] = 8.94232502E-03;
  COFD[1136] = -1.55588172E+01;
  COFD[1137] = 3.48070094E+00;
  COFD[1138] = -2.40859499E-01;
  COFD[1139] = 1.05972514E-02;
  COFD[1140] = -1.18989101E+01;
  COFD[1141] = 2.57507000E+00;
  COFD[1142] = -1.24033737E-01;
  COFD[1143] = 5.56694959E-03;
  COFD[1144] = -2.12652444E+01;
  COFD[1145] = 5.59961822E+00;
  COFD[1146] = -4.91624856E-01;
  COFD[1147] = 2.05035546E-02;
  COFD[1148] = -1.55661647E+01;
  COFD[1149] = 3.48070094E+00;
  COFD[1150] = -2.40859499E-01;
  COFD[1151] = 1.05972514E-02;
  COFD[1152] = -1.55511233E+01;
  COFD[1153] = 3.48070094E+00;
  COFD[1154] = -2.40859499E-01;
  COFD[1155] = 1.05972514E-02;
  COFD[1156] = -1.63493305E+01;
  COFD[1157] = 3.82388595E+00;
  COFD[1158] = -2.84480724E-01;
  COFD[1159] = 1.24506311E-02;
  COFD[1160] = -1.62724429E+01;
  COFD[1161] = 3.79163564E+00;
  COFD[1162] = -2.80257365E-01;
  COFD[1163] = 1.22656902E-02;
  COFD[1164] = -2.08293167E+01;
  COFD[1165] = 5.35267674E+00;
  COFD[1166] = -4.69010505E-01;
  COFD[1167] = 1.98979152E-02;
  COFD[1168] = -1.52721010E+01;
  COFD[1169] = 3.36790500E+00;
  COFD[1170] = -2.26321740E-01;
  COFD[1171] = 9.97135055E-03;
  COFD[1172] = -1.84688303E+01;
  COFD[1173] = 4.49330851E+00;
  COFD[1174] = -3.68208715E-01;
  COFD[1175] = 1.59565402E-02;
  COFD[1176] = -1.78834868E+01;
  COFD[1177] = 4.29613154E+00;
  COFD[1178] = -3.44012526E-01;
  COFD[1179] = 1.49643715E-02;
  COFD[1180] = -1.89544717E+01;
  COFD[1181] = 4.68595732E+00;
  COFD[1182] = -3.91842840E-01;
  COFD[1183] = 1.69262542E-02;
  COFD[1184] = -1.86424488E+01;
  COFD[1185] = 4.53572533E+00;
  COFD[1186] = -3.73386925E-01;
  COFD[1187] = 1.61678881E-02;
  COFD[1188] = -2.05235643E+01;
  COFD[1189] = 5.18417470E+00;
  COFD[1190] = -4.49491573E-01;
  COFD[1191] = 1.91438508E-02;
  COFD[1192] = -1.91121670E+01;
  COFD[1193] = 4.61801405E+00;
  COFD[1194] = -3.83535652E-01;
  COFD[1195] = 1.65862513E-02;
  COFD[1196] = -1.91174394E+01;
  COFD[1197] = 4.61801405E+00;
  COFD[1198] = -3.83535652E-01;
  COFD[1199] = 1.65862513E-02;
  COFD[1200] = -2.02466527E+01;
  COFD[1201] = 4.97613338E+00;
  COFD[1202] = -4.26175206E-01;
  COFD[1203] = 1.82809270E-02;
  COFD[1204] = -2.02434842E+01;
  COFD[1205] = 4.97613338E+00;
  COFD[1206] = -4.26175206E-01;
  COFD[1207] = 1.82809270E-02;
  COFD[1208] = -2.02467952E+01;
  COFD[1209] = 4.97613338E+00;
  COFD[1210] = -4.26175206E-01;
  COFD[1211] = 1.82809270E-02;
  COFD[1212] = -2.10567703E+01;
  COFD[1213] = 5.22065615E+00;
  COFD[1214] = -4.53751850E-01;
  COFD[1215] = 1.93099506E-02;
  COFD[1216] = -2.10590493E+01;
  COFD[1217] = 5.22065615E+00;
  COFD[1218] = -4.53751850E-01;
  COFD[1219] = 1.93099506E-02;
  COFD[1220] = -2.15664626E+01;
  COFD[1221] = 5.35995365E+00;
  COFD[1222] = -4.69587823E-01;
  COFD[1223] = 1.99080702E-02;
  COFD[1224] = -2.18315953E+01;
  COFD[1225] = 5.40768793E+00;
  COFD[1226] = -4.72942538E-01;
  COFD[1227] = 1.99389038E-02;
  COFD[1228] = -2.21305975E+01;
  COFD[1229] = 5.47842731E+00;
  COFD[1230] = -4.79952894E-01;
  COFD[1231] = 2.01568406E-02;
  COFD[1232] = -2.24304725E+01;
  COFD[1233] = 5.55319328E+00;
  COFD[1234] = -4.87759313E-01;
  COFD[1235] = 2.04205124E-02;
  COFD[1236] = -2.24760366E+01;
  COFD[1237] = 5.55793029E+00;
  COFD[1238] = -4.88170533E-01;
  COFD[1239] = 2.04302911E-02;
  COFD[1240] = -2.26422048E+01;
  COFD[1241] = 5.59528609E+00;
  COFD[1242] = -4.91473190E-01;
  COFD[1243] = 2.05131236E-02;
  COFD[1244] = -2.28794409E+01;
  COFD[1245] = 5.61013561E+00;
  COFD[1246] = -4.89933558E-01;
  COFD[1247] = 2.03098561E-02;
  COFD[1248] = -2.28924656E+01;
  COFD[1249] = 5.59504443E+00;
  COFD[1250] = -4.86415566E-01;
  COFD[1251] = 2.00947399E-02;
  COFD[1252] = -2.29380382E+01;
  COFD[1253] = 5.58219321E+00;
  COFD[1254] = -4.82941269E-01;
  COFD[1255] = 1.98711890E-02;
  COFD[1256] = -1.52414498E+01;
  COFD[1257] = 3.35922578E+00;
  COFD[1258] = -2.25181399E-01;
  COFD[1259] = 9.92132878E-03;
  COFD[1260] = -2.26337129E+01;
  COFD[1261] = 5.50133264E+00;
  COFD[1262] = -4.62484498E-01;
  COFD[1263] = 1.85871217E-02;
  COFD[1264] = -1.57995045E+01;
  COFD[1265] = 4.22225052E+00;
  COFD[1266] = -3.35156428E-01;
  COFD[1267] = 1.46104855E-02;
  COFD[1268] = -1.50766073E+01;
  COFD[1269] = 3.47945612E+00;
  COFD[1270] = -2.40703722E-01;
  COFD[1271] = 1.05907441E-02;
  COFD[1272] = -1.50911746E+01;
  COFD[1273] = 3.47945612E+00;
  COFD[1274] = -2.40703722E-01;
  COFD[1275] = 1.05907441E-02;
  COFD[1276] = -1.63542358E+01;
  COFD[1277] = 3.82388595E+00;
  COFD[1278] = -2.84480724E-01;
  COFD[1279] = 1.24506311E-02;
  COFD[1280] = -1.25141403E+01;
  COFD[1281] = 2.77873601E+00;
  COFD[1282] = -1.50637360E-01;
  COFD[1283] = 6.72684281E-03;
  COFD[1284] = -2.12831283E+01;
  COFD[1285] = 5.61184117E+00;
  COFD[1286] = -4.90532156E-01;
  COFD[1287] = 2.03507922E-02;
  COFD[1288] = -1.63588948E+01;
  COFD[1289] = 3.82388595E+00;
  COFD[1290] = -2.84480724E-01;
  COFD[1291] = 1.24506311E-02;
  COFD[1292] = -1.63493305E+01;
  COFD[1293] = 3.82388595E+00;
  COFD[1294] = -2.84480724E-01;
  COFD[1295] = 1.24506311E-02;
  COFD[1296] = -1.73374523E+01;
  COFD[1297] = 4.21416723E+00;
  COFD[1298] = -3.34163932E-01;
  COFD[1299] = 1.45697432E-02;
  COFD[1300] = -1.72738845E+01;
  COFD[1301] = 4.19029808E+00;
  COFD[1302] = -3.31177076E-01;
  COFD[1303] = 1.44446234E-02;
  COFD[1304] = -2.14449532E+01;
  COFD[1305] = 5.56531152E+00;
  COFD[1306] = -4.88789821E-01;
  COFD[1307] = 2.04437116E-02;
  COFD[1308] = -1.59862997E+01;
  COFD[1309] = 3.67388294E+00;
  COFD[1310] = -2.64990709E-01;
  COFD[1311] = 1.16042706E-02;
  COFD[1312] = -1.93276406E+01;
  COFD[1313] = 4.85015581E+00;
  COFD[1314] = -4.10945109E-01;
  COFD[1315] = 1.76651398E-02;
  COFD[1316] = -1.88463801E+01;
  COFD[1317] = 4.68393046E+00;
  COFD[1318] = -3.91610863E-01;
  COFD[1319] = 1.69174645E-02;
  COFD[1320] = -1.98646724E+01;
  COFD[1321] = 5.04367502E+00;
  COFD[1322] = -4.34153325E-01;
  COFD[1323] = 1.85956055E-02;
  COFD[1324] = -1.95552136E+01;
  COFD[1325] = 4.90255048E+00;
  COFD[1326] = -4.17368501E-01;
  COFD[1327] = 1.79287358E-02;
  COFD[1328] = -2.11637883E+01;
  COFD[1329] = 5.42846112E+00;
  COFD[1330] = -4.74321870E-01;
  COFD[1331] = 1.99459749E-02;
  COFD[1332] = -1.99803480E+01;
  COFD[1333] = 4.97875278E+00;
  COFD[1334] = -4.26485475E-01;
  COFD[1335] = 1.82931933E-02;
  COFD[1336] = -1.99835677E+01;
  COFD[1337] = 4.97875278E+00;
  COFD[1338] = -4.26485475E-01;
  COFD[1339] = 1.82931933E-02;
  COFD[1340] = -2.10571697E+01;
  COFD[1341] = 5.31360223E+00;
  COFD[1342] = -4.64787000E-01;
  COFD[1343] = 1.97483720E-02;
  COFD[1344] = -2.10553233E+01;
  COFD[1345] = 5.31360223E+00;
  COFD[1346] = -4.64787000E-01;
  COFD[1347] = 1.97483720E-02;
  COFD[1348] = -2.10572526E+01;
  COFD[1349] = 5.31360223E+00;
  COFD[1350] = -4.64787000E-01;
  COFD[1351] = 1.97483720E-02;
  COFD[1352] = -2.16471880E+01;
  COFD[1353] = 5.46403569E+00;
  COFD[1354] = -4.78350420E-01;
  COFD[1355] = 2.00977393E-02;
  COFD[1356] = -2.16484734E+01;
  COFD[1357] = 5.46403569E+00;
  COFD[1358] = -4.78350420E-01;
  COFD[1359] = 2.00977393E-02;
  COFD[1360] = -2.20820509E+01;
  COFD[1361] = 5.57296554E+00;
  COFD[1362] = -4.89394407E-01;
  COFD[1363] = 2.04545698E-02;
  COFD[1364] = -2.23196288E+01;
  COFD[1365] = 5.61199715E+00;
  COFD[1366] = -4.91433824E-01;
  COFD[1367] = 2.04245969E-02;
  COFD[1368] = -2.23961398E+01;
  COFD[1369] = 5.58969231E+00;
  COFD[1370] = -4.85146102E-01;
  COFD[1371] = 2.00165025E-02;
  COFD[1372] = -2.25070771E+01;
  COFD[1373] = 5.58488808E+00;
  COFD[1374] = -4.81505670E-01;
  COFD[1375] = 1.97377350E-02;
  COFD[1376] = -2.25413162E+01;
  COFD[1377] = 5.58519141E+00;
  COFD[1378] = -4.81277367E-01;
  COFD[1379] = 1.97172346E-02;
  COFD[1380] = -2.26104723E+01;
  COFD[1381] = 5.58175450E+00;
  COFD[1382] = -4.78660487E-01;
  COFD[1383] = 1.95178220E-02;
  COFD[1384] = -2.26368459E+01;
  COFD[1385] = 5.50714270E+00;
  COFD[1386] = -4.64060018E-01;
  COFD[1387] = 1.86881341E-02;
  COFD[1388] = -2.26543431E+01;
  COFD[1389] = 5.49570925E+00;
  COFD[1390] = -4.60969345E-01;
  COFD[1391] = 1.84906305E-02;
  COFD[1392] = -2.26384257E+01;
  COFD[1393] = 5.45743664E+00;
  COFD[1394] = -4.53877300E-01;
  COFD[1395] = 1.80982969E-02;
  COFD[1396] = -1.59633426E+01;
  COFD[1397] = 3.66853818E+00;
  COFD[1398] = -2.64346221E-01;
  COFD[1399] = 1.15784613E-02;
  COFD[1400] = -2.26491370E+01;
  COFD[1401] = 5.50690143E+00;
  COFD[1402] = -4.64003349E-01;
  COFD[1403] = 1.86846584E-02;
  COFD[1404] = -1.57199190E+01;
  COFD[1405] = 4.19936335E+00;
  COFD[1406] = -3.32311009E-01;
  COFD[1407] = 1.44921003E-02;
  COFD[1408] = -1.50270285E+01;
  COFD[1409] = 3.46140064E+00;
  COFD[1410] = -2.38440092E-01;
  COFD[1411] = 1.04960087E-02;
  COFD[1412] = -1.50420909E+01;
  COFD[1413] = 3.46140064E+00;
  COFD[1414] = -2.38440092E-01;
  COFD[1415] = 1.04960087E-02;
  COFD[1416] = -1.62775683E+01;
  COFD[1417] = 3.79163564E+00;
  COFD[1418] = -2.80257365E-01;
  COFD[1419] = 1.22656902E-02;
  COFD[1420] = -1.24693714E+01;
  COFD[1421] = 2.76686648E+00;
  COFD[1422] = -1.49120141E-01;
  COFD[1423] = 6.66220432E-03;
  COFD[1424] = -2.14087360E+01;
  COFD[1425] = 5.57281993E+00;
  COFD[1426] = -4.76690860E-01;
  COFD[1427] = 1.94000702E-02;
  COFD[1428] = -1.62824385E+01;
  COFD[1429] = 3.79163564E+00;
  COFD[1430] = -2.80257365E-01;
  COFD[1431] = 1.22656902E-02;
  COFD[1432] = -1.62724429E+01;
  COFD[1433] = 3.79163564E+00;
  COFD[1434] = -2.80257365E-01;
  COFD[1435] = 1.22656902E-02;
  COFD[1436] = -1.72738845E+01;
  COFD[1437] = 4.19029808E+00;
  COFD[1438] = -3.31177076E-01;
  COFD[1439] = 1.44446234E-02;
  COFD[1440] = -1.72167712E+01;
  COFD[1441] = 4.16886779E+00;
  COFD[1442] = -3.28518156E-01;
  COFD[1443] = 1.43341626E-02;
  COFD[1444] = -2.14082433E+01;
  COFD[1445] = 5.55346617E+00;
  COFD[1446] = -4.87783156E-01;
  COFD[1447] = 2.04210886E-02;
  COFD[1448] = -1.59525075E+01;
  COFD[1449] = 3.66023858E+00;
  COFD[1450] = -2.63401043E-01;
  COFD[1451] = 1.15432000E-02;
  COFD[1452] = -1.92867532E+01;
  COFD[1453] = 4.83375900E+00;
  COFD[1454] = -4.09146560E-01;
  COFD[1455] = 1.76006599E-02;
  COFD[1456] = -1.87897289E+01;
  COFD[1457] = 4.66162351E+00;
  COFD[1458] = -3.88920477E-01;
  COFD[1459] = 1.68089648E-02;
  COFD[1460] = -1.98075051E+01;
  COFD[1461] = 5.02169524E+00;
  COFD[1462] = -4.31582804E-01;
  COFD[1463] = 1.84953568E-02;
  COFD[1464] = -1.94823661E+01;
  COFD[1465] = 4.87333294E+00;
  COFD[1466] = -4.13769241E-01;
  COFD[1467] = 1.77802244E-02;
  COFD[1468] = -2.11341641E+01;
  COFD[1469] = 5.41773516E+00;
  COFD[1470] = -4.73414338E-01;
  COFD[1471] = 1.99258685E-02;
  COFD[1472] = -1.99235836E+01;
  COFD[1473] = 4.95514826E+00;
  COFD[1474] = -4.23691395E-01;
  COFD[1475] = 1.81828318E-02;
  COFD[1476] = -1.99269591E+01;
  COFD[1477] = 4.95514826E+00;
  COFD[1478] = -4.23691395E-01;
  COFD[1479] = 1.81828318E-02;
  COFD[1480] = -2.09912117E+01;
  COFD[1481] = 5.28557747E+00;
  COFD[1482] = -4.61402384E-01;
  COFD[1483] = 1.96111546E-02;
  COFD[1484] = -2.09892692E+01;
  COFD[1485] = 5.28557747E+00;
  COFD[1486] = -4.61402384E-01;
  COFD[1487] = 1.96111546E-02;
  COFD[1488] = -2.09912989E+01;
  COFD[1489] = 5.28557747E+00;
  COFD[1490] = -4.61402384E-01;
  COFD[1491] = 1.96111546E-02;
  COFD[1492] = -2.15968629E+01;
  COFD[1493] = 5.44280136E+00;
  COFD[1494] = -4.75998855E-01;
  COFD[1495] = 2.00116091E-02;
  COFD[1496] = -2.15982184E+01;
  COFD[1497] = 5.44280136E+00;
  COFD[1498] = -4.75998855E-01;
  COFD[1499] = 2.00116091E-02;
  COFD[1500] = -2.20571987E+01;
  COFD[1501] = 5.56221277E+00;
  COFD[1502] = -4.88535386E-01;
  COFD[1503] = 2.04385478E-02;
  COFD[1504] = -2.23089124E+01;
  COFD[1505] = 5.60657745E+00;
  COFD[1506] = -4.91280842E-01;
  COFD[1507] = 2.04393241E-02;
  COFD[1508] = -2.24147233E+01;
  COFD[1509] = 5.59714923E+00;
  COFD[1510] = -4.86899964E-01;
  COFD[1511] = 2.01242645E-02;
  COFD[1512] = -2.25078396E+01;
  COFD[1513] = 5.58461787E+00;
  COFD[1514] = -4.82178861E-01;
  COFD[1515] = 1.97950972E-02;
  COFD[1516] = -2.25423020E+01;
  COFD[1517] = 5.58490857E+00;
  COFD[1518] = -4.81943660E-01;
  COFD[1519] = 1.97740434E-02;
  COFD[1520] = -2.26201690E+01;
  COFD[1521] = 5.58491601E+00;
  COFD[1522] = -4.79798668E-01;
  COFD[1523] = 1.95960400E-02;
  COFD[1524] = -2.26685949E+01;
  COFD[1525] = 5.51963910E+00;
  COFD[1526] = -4.66555705E-01;
  COFD[1527] = 1.88313890E-02;
  COFD[1528] = -2.26705837E+01;
  COFD[1529] = 5.50119356E+00;
  COFD[1530] = -4.62439469E-01;
  COFD[1531] = 1.85841071E-02;
  COFD[1532] = -2.26836499E+01;
  COFD[1533] = 5.47552771E+00;
  COFD[1534] = -4.57173951E-01;
  COFD[1535] = 1.82791721E-02;
  COFD[1536] = -1.59327344E+01;
  COFD[1537] = 3.65620899E+00;
  COFD[1538] = -2.62933804E-01;
  COFD[1539] = 1.15253223E-02;
  COFD[1540] = -1.64683697E+01;
  COFD[1541] = 2.28170571E+00;
  COFD[1542] = 3.44078407E-02;
  COFD[1543] = -6.01703889E-03;
  COFD[1544] = -1.97550243E+01;
  COFD[1545] = 5.56931926E+00;
  COFD[1546] = -4.89105511E-01;
  COFD[1547] = 2.04493129E-02;
  COFD[1548] = -1.94373032E+01;
  COFD[1549] = 5.02567894E+00;
  COFD[1550] = -4.32045169E-01;
  COFD[1551] = 1.85132214E-02;
  COFD[1552] = -1.94570202E+01;
  COFD[1553] = 5.02567894E+00;
  COFD[1554] = -4.32045169E-01;
  COFD[1555] = 1.85132214E-02;
  COFD[1556] = -2.08367641E+01;
  COFD[1557] = 5.35267674E+00;
  COFD[1558] = -4.69010505E-01;
  COFD[1559] = 1.98979152E-02;
  COFD[1560] = -1.60528433E+01;
  COFD[1561] = 4.11188603E+00;
  COFD[1562] = -3.21540884E-01;
  COFD[1563] = 1.40482564E-02;
  COFD[1564] = -1.77563175E+01;
  COFD[1565] = 3.57475686E+00;
  COFD[1566] = -1.56396297E-01;
  COFD[1567] = 3.12157721E-03;
  COFD[1568] = -2.08438728E+01;
  COFD[1569] = 5.35267674E+00;
  COFD[1570] = -4.69010505E-01;
  COFD[1571] = 1.98979152E-02;
  COFD[1572] = -2.08293167E+01;
  COFD[1573] = 5.35267674E+00;
  COFD[1574] = -4.69010505E-01;
  COFD[1575] = 1.98979152E-02;
  COFD[1576] = -2.14449532E+01;
  COFD[1577] = 5.56531152E+00;
  COFD[1578] = -4.88789821E-01;
  COFD[1579] = 2.04437116E-02;
  COFD[1580] = -2.14082433E+01;
  COFD[1581] = 5.55346617E+00;
  COFD[1582] = -4.87783156E-01;
  COFD[1583] = 2.04210886E-02;
  COFD[1584] = -1.90499374E+01;
  COFD[1585] = 3.99221757E+00;
  COFD[1586] = -2.19854880E-01;
  COFD[1587] = 6.22736279E-03;
  COFD[1588] = -2.05128629E+01;
  COFD[1589] = 5.23843909E+00;
  COFD[1590] = -4.55815614E-01;
  COFD[1591] = 1.93898040E-02;
  COFD[1592] = -2.19317665E+01;
  COFD[1593] = 5.45216133E+00;
  COFD[1594] = -4.52916925E-01;
  COFD[1595] = 1.80456400E-02;
  COFD[1596] = -2.20036321E+01;
  COFD[1597] = 5.55935694E+00;
  COFD[1598] = -4.74154740E-01;
  COFD[1599] = 1.92584304E-02;
  COFD[1600] = -2.16379525E+01;
  COFD[1601] = 5.29019717E+00;
  COFD[1602] = -4.24502606E-01;
  COFD[1603] = 1.65197343E-02;
  COFD[1604] = -2.19399756E+01;
  COFD[1605] = 5.41841631E+00;
  COFD[1606] = -4.46818971E-01;
  COFD[1607] = 1.77127652E-02;
  COFD[1608] = -2.01064300E+01;
  COFD[1609] = 4.41511629E+00;
  COFD[1610] = -2.84086963E-01;
  COFD[1611] = 9.37586971E-03;
  COFD[1612] = -2.20947854E+01;
  COFD[1613] = 5.36053938E+00;
  COFD[1614] = -4.36434519E-01;
  COFD[1615] = 1.71484255E-02;
  COFD[1616] = -2.20998692E+01;
  COFD[1617] = 5.36053938E+00;
  COFD[1618] = -4.36434519E-01;
  COFD[1619] = 1.71484255E-02;
  COFD[1620] = -2.13351219E+01;
  COFD[1621] = 4.87252053E+00;
  COFD[1622] = -3.56127804E-01;
  COFD[1623] = 1.29948788E-02;
  COFD[1624] = -2.13320802E+01;
  COFD[1625] = 4.87252053E+00;
  COFD[1626] = -3.56127804E-01;
  COFD[1627] = 1.29948788E-02;
  COFD[1628] = -2.13352587E+01;
  COFD[1629] = 4.87252053E+00;
  COFD[1630] = -3.56127804E-01;
  COFD[1631] = 1.29948788E-02;
  COFD[1632] = -2.03618430E+01;
  COFD[1633] = 4.33469236E+00;
  COFD[1634] = -2.71728538E-01;
  COFD[1635] = 8.76524142E-03;
  COFD[1636] = -2.03640239E+01;
  COFD[1637] = 4.33469236E+00;
  COFD[1638] = -2.71728538E-01;
  COFD[1639] = 8.76524142E-03;
  COFD[1640] = -1.96505480E+01;
  COFD[1641] = 3.94748284E+00;
  COFD[1642] = -2.13105313E-01;
  COFD[1643] = 5.89820150E-03;
  COFD[1644] = -1.91553451E+01;
  COFD[1645] = 3.66719242E+00;
  COFD[1646] = -1.70260825E-01;
  COFD[1647] = 3.79442136E-03;
  COFD[1648] = -1.85405054E+01;
  COFD[1649] = 3.34746301E+00;
  COFD[1650] = -1.22575165E-01;
  COFD[1651] = 1.49120224E-03;
  COFD[1652] = -1.80138627E+01;
  COFD[1653] = 3.07345302E+00;
  COFD[1654] = -8.20536856E-02;
  COFD[1655] = -4.51137426E-04;
  COFD[1656] = -1.79714284E+01;
  COFD[1657] = 3.04109524E+00;
  COFD[1658] = -7.73097243E-02;
  COFD[1659] = -6.77522484E-04;
  COFD[1660] = -1.74160262E+01;
  COFD[1661] = 2.77201495E+00;
  COFD[1662] = -3.78503295E-02;
  COFD[1663] = -2.56220054E-03;
  COFD[1664] = -1.66390101E+01;
  COFD[1665] = 2.35716270E+00;
  COFD[1666] = 2.33630190E-02;
  COFD[1667] = -5.49227499E-03;
  COFD[1668] = -1.63277465E+01;
  COFD[1669] = 2.20684400E+00;
  COFD[1670] = 4.53338465E-02;
  COFD[1671] = -6.53458896E-03;
  COFD[1672] = -1.59785605E+01;
  COFD[1673] = 2.03061309E+00;
  COFD[1674] = 7.09547643E-02;
  COFD[1675] = -7.74512315E-03;
  COFD[1676] = -2.04833743E+01;
  COFD[1677] = 5.23112374E+00;
  COFD[1678] = -4.54967682E-01;
  COFD[1679] = 1.93570423E-02;
  COFD[1680] = -2.27747741E+01;
  COFD[1681] = 5.60263382E+00;
  COFD[1682] = -4.91348327E-01;
  COFD[1683] = 2.04651120E-02;
  COFD[1684] = -1.43151328E+01;
  COFD[1685] = 3.68038508E+00;
  COFD[1686] = -2.65779346E-01;
  COFD[1687] = 1.16360771E-02;
  COFD[1688] = -1.40998907E+01;
  COFD[1689] = 3.08120012E+00;
  COFD[1690] = -1.89629903E-01;
  COFD[1691] = 8.40361952E-03;
  COFD[1692] = -1.41191170E+01;
  COFD[1693] = 3.08120012E+00;
  COFD[1694] = -1.89629903E-01;
  COFD[1695] = 8.40361952E-03;
  COFD[1696] = -1.52792799E+01;
  COFD[1697] = 3.36790500E+00;
  COFD[1698] = -2.26321740E-01;
  COFD[1699] = 9.97135055E-03;
  COFD[1700] = -1.17159884E+01;
  COFD[1701] = 2.48123210E+00;
  COFD[1702] = -1.11322604E-01;
  COFD[1703] = 4.99282389E-03;
  COFD[1704] = -2.11388255E+01;
  COFD[1705] = 5.55529689E+00;
  COFD[1706] = -4.87942530E-01;
  COFD[1707] = 2.04249057E-02;
  COFD[1708] = -1.52861287E+01;
  COFD[1709] = 3.36790500E+00;
  COFD[1710] = -2.26321740E-01;
  COFD[1711] = 9.97135055E-03;
  COFD[1712] = -1.52721010E+01;
  COFD[1713] = 3.36790500E+00;
  COFD[1714] = -2.26321740E-01;
  COFD[1715] = 9.97135055E-03;
  COFD[1716] = -1.59862997E+01;
  COFD[1717] = 3.67388294E+00;
  COFD[1718] = -2.64990709E-01;
  COFD[1719] = 1.16042706E-02;
  COFD[1720] = -1.59525075E+01;
  COFD[1721] = 3.66023858E+00;
  COFD[1722] = -2.63401043E-01;
  COFD[1723] = 1.15432000E-02;
  COFD[1724] = -2.05128629E+01;
  COFD[1725] = 5.23843909E+00;
  COFD[1726] = -4.55815614E-01;
  COFD[1727] = 1.93898040E-02;
  COFD[1728] = -1.50233391E+01;
  COFD[1729] = 3.26660767E+00;
  COFD[1730] = -2.13287177E-01;
  COFD[1731] = 9.41137857E-03;
  COFD[1732] = -1.81735675E+01;
  COFD[1733] = 4.38391495E+00;
  COFD[1734] = -3.54941287E-01;
  COFD[1735] = 1.54195107E-02;
  COFD[1736] = -1.76285583E+01;
  COFD[1737] = 4.19935698E+00;
  COFD[1738] = -3.32310212E-01;
  COFD[1739] = 1.44920670E-02;
  COFD[1740] = -1.86157710E+01;
  COFD[1741] = 4.55689508E+00;
  COFD[1742] = -3.75937921E-01;
  COFD[1743] = 1.62703488E-02;
  COFD[1744] = -1.83538331E+01;
  COFD[1745] = 4.42828044E+00;
  COFD[1746] = -3.60417833E-01;
  COFD[1747] = 1.56455103E-02;
  COFD[1748] = -2.02969667E+01;
  COFD[1749] = 5.11106992E+00;
  COFD[1750] = -4.42047129E-01;
  COFD[1751] = 1.89042990E-02;
  COFD[1752] = -1.87684982E+01;
  COFD[1753] = 4.49191492E+00;
  COFD[1754] = -3.68041771E-01;
  COFD[1755] = 1.59498676E-02;
  COFD[1756] = -1.87733780E+01;
  COFD[1757] = 4.49191492E+00;
  COFD[1758] = -3.68041771E-01;
  COFD[1759] = 1.59498676E-02;
  COFD[1760] = -1.98830863E+01;
  COFD[1761] = 4.84731557E+00;
  COFD[1762] = -4.10638352E-01;
  COFD[1763] = 1.76543886E-02;
  COFD[1764] = -1.98801803E+01;
  COFD[1765] = 4.84731557E+00;
  COFD[1766] = -4.10638352E-01;
  COFD[1767] = 1.76543886E-02;
  COFD[1768] = -1.98832169E+01;
  COFD[1769] = 4.84731557E+00;
  COFD[1770] = -4.10638352E-01;
  COFD[1771] = 1.76543886E-02;
  COFD[1772] = -2.07935801E+01;
  COFD[1773] = 5.13870075E+00;
  COFD[1774] = -4.45087556E-01;
  COFD[1775] = 1.90141513E-02;
  COFD[1776] = -2.07956566E+01;
  COFD[1777] = 5.13870075E+00;
  COFD[1778] = -4.45087556E-01;
  COFD[1779] = 1.90141513E-02;
  COFD[1780] = -2.12462427E+01;
  COFD[1781] = 5.25612649E+00;
  COFD[1782] = -4.57885944E-01;
  COFD[1783] = 1.94706895E-02;
  COFD[1784] = -2.16479635E+01;
  COFD[1785] = 5.36415648E+00;
  COFD[1786] = -4.69836047E-01;
  COFD[1787] = 1.99067039E-02;
  COFD[1788] = -2.18744947E+01;
  COFD[1789] = 5.40581593E+00;
  COFD[1790] = -4.72804333E-01;
  COFD[1791] = 1.99370903E-02;
  COFD[1792] = -2.21149546E+01;
  COFD[1793] = 5.45837402E+00;
  COFD[1794] = -4.77716491E-01;
  COFD[1795] = 2.00742141E-02;
  COFD[1796] = -2.21693686E+01;
  COFD[1797] = 5.46715955E+00;
  COFD[1798] = -4.78699053E-01;
  COFD[1799] = 2.01106334E-02;
  COFD[1800] = -2.23927590E+01;
  COFD[1801] = 5.52880430E+00;
  COFD[1802] = -4.85323223E-01;
  COFD[1803] = 2.03436366E-02;
  COFD[1804] = -2.27595631E+01;
  COFD[1805] = 5.59981860E+00;
  COFD[1806] = -4.91614072E-01;
  COFD[1807] = 2.05016331E-02;
  COFD[1808] = -2.28218040E+01;
  COFD[1809] = 5.60692017E+00;
  COFD[1810] = -4.91295058E-01;
  COFD[1811] = 2.04387644E-02;
  COFD[1812] = -2.29034442E+01;
  COFD[1813] = 5.61183042E+00;
  COFD[1814] = -4.90566396E-01;
  COFD[1815] = 2.03536798E-02;
  COFD[1816] = -1.50031706E+01;
  COFD[1817] = 3.26223357E+00;
  COFD[1818] = -2.12746642E-01;
  COFD[1819] = 9.38912883E-03;
  COFD[1820] = -2.17131539E+01;
  COFD[1821] = 4.69815223E+00;
  COFD[1822] = -3.28454103E-01;
  COFD[1823] = 1.15970636E-02;
  COFD[1824] = -1.76147183E+01;
  COFD[1825] = 4.86049500E+00;
  COFD[1826] = -4.12200578E-01;
  COFD[1827] = 1.77160971E-02;
  COFD[1828] = -1.70534750E+01;
  COFD[1829] = 4.14240922E+00;
  COFD[1830] = -3.25239774E-01;
  COFD[1831] = 1.41980687E-02;
  COFD[1832] = -1.70756953E+01;
  COFD[1833] = 4.14240922E+00;
  COFD[1834] = -3.25239774E-01;
  COFD[1835] = 1.41980687E-02;
  COFD[1836] = -1.84777509E+01;
  COFD[1837] = 4.49330851E+00;
  COFD[1838] = -3.68208715E-01;
  COFD[1839] = 1.59565402E-02;
  COFD[1840] = -1.37794466E+01;
  COFD[1841] = 3.23973858E+00;
  COFD[1842] = -2.09989036E-01;
  COFD[1843] = 9.27667906E-03;
  COFD[1844] = -2.07653629E+01;
  COFD[1845] = 5.01091988E+00;
  COFD[1846] = -3.77985581E-01;
  COFD[1847] = 1.40968617E-02;
  COFD[1848] = -1.84862906E+01;
  COFD[1849] = 4.49330851E+00;
  COFD[1850] = -3.68208715E-01;
  COFD[1851] = 1.59565402E-02;
  COFD[1852] = -1.84688303E+01;
  COFD[1853] = 4.49330851E+00;
  COFD[1854] = -3.68208715E-01;
  COFD[1855] = 1.59565402E-02;
  COFD[1856] = -1.93276406E+01;
  COFD[1857] = 4.85015581E+00;
  COFD[1858] = -4.10945109E-01;
  COFD[1859] = 1.76651398E-02;
  COFD[1860] = -1.92867532E+01;
  COFD[1861] = 4.83375900E+00;
  COFD[1862] = -4.09146560E-01;
  COFD[1863] = 1.76006599E-02;
  COFD[1864] = -2.19317665E+01;
  COFD[1865] = 5.45216133E+00;
  COFD[1866] = -4.52916925E-01;
  COFD[1867] = 1.80456400E-02;
  COFD[1868] = -1.81735675E+01;
  COFD[1869] = 4.38391495E+00;
  COFD[1870] = -3.54941287E-01;
  COFD[1871] = 1.54195107E-02;
  COFD[1872] = -2.13425604E+01;
  COFD[1873] = 5.40460130E+00;
  COFD[1874] = -4.72718910E-01;
  COFD[1875] = 1.99362717E-02;
  COFD[1876] = -2.09191230E+01;
  COFD[1877] = 5.30153901E+00;
  COFD[1878] = -4.63335119E-01;
  COFD[1879] = 1.96897053E-02;
  COFD[1880] = -2.16802565E+01;
  COFD[1881] = 5.52918296E+00;
  COFD[1882] = -4.85360709E-01;
  COFD[1883] = 2.03448006E-02;
  COFD[1884] = -2.14326420E+01;
  COFD[1885] = 5.41729961E+00;
  COFD[1886] = -4.73400281E-01;
  COFD[1887] = 1.99269567E-02;
  COFD[1888] = -2.22176875E+01;
  COFD[1889] = 5.54251230E+00;
  COFD[1890] = -4.70946314E-01;
  COFD[1891] = 1.90785869E-02;
  COFD[1892] = -2.18590684E+01;
  COFD[1893] = 5.47368915E+00;
  COFD[1894] = -4.79424291E-01;
  COFD[1895] = 2.01372920E-02;
  COFD[1896] = -2.18653022E+01;
  COFD[1897] = 5.47368915E+00;
  COFD[1898] = -4.79424291E-01;
  COFD[1899] = 2.01372920E-02;
  COFD[1900] = -2.25016971E+01;
  COFD[1901] = 5.59178974E+00;
  COFD[1902] = -4.85668031E-01;
  COFD[1903] = 2.00491907E-02;
  COFD[1904] = -2.24978649E+01;
  COFD[1905] = 5.59178974E+00;
  COFD[1906] = -4.85668031E-01;
  COFD[1907] = 2.00491907E-02;
  COFD[1908] = -2.25018696E+01;
  COFD[1909] = 5.59178974E+00;
  COFD[1910] = -4.85668031E-01;
  COFD[1911] = 2.00491907E-02;
  COFD[1912] = -2.26255602E+01;
  COFD[1913] = 5.52088531E+00;
  COFD[1914] = -4.66799303E-01;
  COFD[1915] = 1.88452220E-02;
  COFD[1916] = -2.26283634E+01;
  COFD[1917] = 5.52088531E+00;
  COFD[1918] = -4.66799303E-01;
  COFD[1919] = 1.88452220E-02;
  COFD[1920] = -2.26428111E+01;
  COFD[1921] = 5.43854589E+00;
  COFD[1922] = -4.50460433E-01;
  COFD[1923] = 1.79115741E-02;
  COFD[1924] = -2.25594139E+01;
  COFD[1925] = 5.32923056E+00;
  COFD[1926] = -4.31065031E-01;
  COFD[1927] = 1.68637777E-02;
  COFD[1928] = -2.24455334E+01;
  COFD[1929] = 5.21716989E+00;
  COFD[1930] = -4.11825254E-01;
  COFD[1931] = 1.58436458E-02;
  COFD[1932] = -2.23014058E+01;
  COFD[1933] = 5.09843164E+00;
  COFD[1934] = -3.92118361E-01;
  COFD[1935] = 1.48192579E-02;
  COFD[1936] = -2.23041648E+01;
  COFD[1937] = 5.08480808E+00;
  COFD[1938] = -3.89912767E-01;
  COFD[1939] = 1.47062570E-02;
  COFD[1940] = -2.21269336E+01;
  COFD[1941] = 4.97192306E+00;
  COFD[1942] = -3.71804005E-01;
  COFD[1943] = 1.37844212E-02;
  COFD[1944] = -2.17986999E+01;
  COFD[1945] = 4.73948321E+00;
  COFD[1946] = -3.35004943E-01;
  COFD[1947] = 1.19275825E-02;
  COFD[1948] = -2.16564571E+01;
  COFD[1949] = 4.65505428E+00;
  COFD[1950] = -3.21651467E-01;
  COFD[1951] = 1.12547138E-02;
  COFD[1952] = -2.15260200E+01;
  COFD[1953] = 4.56640766E+00;
  COFD[1954] = -3.07568513E-01;
  COFD[1955] = 1.05437086E-02;
  COFD[1956] = -1.81432499E+01;
  COFD[1957] = 4.37565431E+00;
  COFD[1958] = -3.53906025E-01;
  COFD[1959] = 1.53760786E-02;
  COFD[1960] = -2.22067717E+01;
  COFD[1961] = 5.03874797E+00;
  COFD[1962] = -3.82440213E-01;
  COFD[1963] = 1.43232015E-02;
  COFD[1964] = -1.72232379E+01;
  COFD[1965] = 4.69060745E+00;
  COFD[1966] = -3.92369888E-01;
  COFD[1967] = 1.69459661E-02;
  COFD[1968] = -1.65488277E+01;
  COFD[1969] = 3.95035840E+00;
  COFD[1970] = -3.00959418E-01;
  COFD[1971] = 1.31692593E-02;
  COFD[1972] = -1.65675292E+01;
  COFD[1973] = 3.95035840E+00;
  COFD[1974] = -3.00959418E-01;
  COFD[1975] = 1.31692593E-02;
  COFD[1976] = -1.78903850E+01;
  COFD[1977] = 4.29613154E+00;
  COFD[1978] = -3.44012526E-01;
  COFD[1979] = 1.49643715E-02;
  COFD[1980] = -1.34709956E+01;
  COFD[1981] = 3.09379603E+00;
  COFD[1982] = -1.91268635E-01;
  COFD[1983] = 8.47480224E-03;
  COFD[1984] = -2.15095920E+01;
  COFD[1985] = 5.46737673E+00;
  COFD[1986] = -4.55696085E-01;
  COFD[1987] = 1.81982625E-02;
  COFD[1988] = -1.78969625E+01;
  COFD[1989] = 4.29613154E+00;
  COFD[1990] = -3.44012526E-01;
  COFD[1991] = 1.49643715E-02;
  COFD[1992] = -1.78834868E+01;
  COFD[1993] = 4.29613154E+00;
  COFD[1994] = -3.44012526E-01;
  COFD[1995] = 1.49643715E-02;
  COFD[1996] = -1.88463801E+01;
  COFD[1997] = 4.68393046E+00;
  COFD[1998] = -3.91610863E-01;
  COFD[1999] = 1.69174645E-02;
  COFD[2000] = -1.87897289E+01;
  COFD[2001] = 4.66162351E+00;
  COFD[2002] = -3.88920477E-01;
  COFD[2003] = 1.68089648E-02;
  COFD[2004] = -2.20036321E+01;
  COFD[2005] = 5.55935694E+00;
  COFD[2006] = -4.74154740E-01;
  COFD[2007] = 1.92584304E-02;
  COFD[2008] = -1.76285583E+01;
  COFD[2009] = 4.19935698E+00;
  COFD[2010] = -3.32310212E-01;
  COFD[2011] = 1.44920670E-02;
  COFD[2012] = -2.09191230E+01;
  COFD[2013] = 5.30153901E+00;
  COFD[2014] = -4.63335119E-01;
  COFD[2015] = 1.96897053E-02;
  COFD[2016] = -2.03766918E+01;
  COFD[2017] = 5.13263469E+00;
  COFD[2018] = -4.44457285E-01;
  COFD[2019] = 1.89932102E-02;
  COFD[2020] = -2.12121345E+01;
  COFD[2021] = 5.39823225E+00;
  COFD[2022] = -4.72294645E-01;
  COFD[2023] = 1.99340225E-02;
  COFD[2024] = -2.10944068E+01;
  COFD[2025] = 5.34286099E+00;
  COFD[2026] = -4.68100992E-01;
  COFD[2027] = 1.98731399E-02;
  COFD[2028] = -2.21110249E+01;
  COFD[2029] = 5.58360799E+00;
  COFD[2030] = -4.82701436E-01;
  COFD[2031] = 1.98437922E-02;
  COFD[2032] = -2.14323161E+01;
  COFD[2033] = 5.37331605E+00;
  COFD[2034] = -4.70491203E-01;
  COFD[2035] = 1.99134666E-02;
  COFD[2036] = -2.14369847E+01;
  COFD[2037] = 5.37331605E+00;
  COFD[2038] = -4.70491203E-01;
  COFD[2039] = 1.99134666E-02;
  COFD[2040] = -2.22816073E+01;
  COFD[2041] = 5.59185582E+00;
  COFD[2042] = -4.91155812E-01;
  COFD[2043] = 2.05043018E-02;
  COFD[2044] = -2.22788407E+01;
  COFD[2045] = 5.59185582E+00;
  COFD[2046] = -4.91155812E-01;
  COFD[2047] = 2.05043018E-02;
  COFD[2048] = -2.22817317E+01;
  COFD[2049] = 5.59185582E+00;
  COFD[2050] = -4.91155812E-01;
  COFD[2051] = 2.05043018E-02;
  COFD[2052] = -2.25311979E+01;
  COFD[2053] = 5.58497731E+00;
  COFD[2054] = -4.81782064E-01;
  COFD[2055] = 1.97602508E-02;
  COFD[2056] = -2.25331679E+01;
  COFD[2057] = 5.58497731E+00;
  COFD[2058] = -4.81782064E-01;
  COFD[2059] = 1.97602508E-02;
  COFD[2060] = -2.26391595E+01;
  COFD[2061] = 5.54906697E+00;
  COFD[2062] = -4.72198999E-01;
  COFD[2063] = 1.91488843E-02;
  COFD[2064] = -2.26655242E+01;
  COFD[2065] = 5.49155307E+00;
  COFD[2066] = -4.60156593E-01;
  COFD[2067] = 1.84445999E-02;
  COFD[2068] = -2.26097243E+01;
  COFD[2069] = 5.40751776E+00;
  COFD[2070] = -4.44796499E-01;
  COFD[2071] = 1.76008889E-02;
  COFD[2072] = -2.25351154E+01;
  COFD[2073] = 5.32200412E+00;
  COFD[2074] = -4.29810296E-01;
  COFD[2075] = 1.67968656E-02;
  COFD[2076] = -2.25457395E+01;
  COFD[2077] = 5.31236460E+00;
  COFD[2078] = -4.28177190E-01;
  COFD[2079] = 1.67109235E-02;
  COFD[2080] = -2.24546794E+01;
  COFD[2081] = 5.23807779E+00;
  COFD[2082] = -4.15451615E-01;
  COFD[2083] = 1.60367849E-02;
  COFD[2084] = -2.22774154E+01;
  COFD[2085] = 5.07362417E+00;
  COFD[2086] = -3.88094414E-01;
  COFD[2087] = 1.46129219E-02;
  COFD[2088] = -2.21555521E+01;
  COFD[2089] = 5.00070625E+00;
  COFD[2090] = -3.76355283E-01;
  COFD[2091] = 1.40141622E-02;
  COFD[2092] = -2.20003434E+01;
  COFD[2093] = 4.90271383E+00;
  COFD[2094] = -3.60896715E-01;
  COFD[2095] = 1.32352181E-02;
  COFD[2096] = -1.76002073E+01;
  COFD[2097] = 4.19171952E+00;
  COFD[2098] = -3.31354810E-01;
  COFD[2099] = 1.44520623E-02;
  COFD[2100] = -2.08912810E+01;
  COFD[2101] = 4.35422933E+00;
  COFD[2102] = -2.74727512E-01;
  COFD[2103] = 8.91328380E-03;
  COFD[2104] = -1.82252070E+01;
  COFD[2105] = 5.05237312E+00;
  COFD[2106] = -4.35182396E-01;
  COFD[2107] = 1.86363074E-02;
  COFD[2108] = -1.74792034E+01;
  COFD[2109] = 4.29676909E+00;
  COFD[2110] = -3.44085306E-01;
  COFD[2111] = 1.49671135E-02;
  COFD[2112] = -1.74984410E+01;
  COFD[2113] = 4.29676909E+00;
  COFD[2114] = -3.44085306E-01;
  COFD[2115] = 1.49671135E-02;
  COFD[2116] = -1.89616566E+01;
  COFD[2117] = 4.68595732E+00;
  COFD[2118] = -3.91842840E-01;
  COFD[2119] = 1.69262542E-02;
  COFD[2120] = -1.42229344E+01;
  COFD[2121] = 3.38669384E+00;
  COFD[2122] = -2.28784122E-01;
  COFD[2123] = 1.00790953E-02;
  COFD[2124] = -2.08812277E+01;
  COFD[2125] = 5.08859217E+00;
  COFD[2126] = -3.90525428E-01;
  COFD[2127] = 1.47376395E-02;
  COFD[2128] = -1.89685112E+01;
  COFD[2129] = 4.68595732E+00;
  COFD[2130] = -3.91842840E-01;
  COFD[2131] = 1.69262542E-02;
  COFD[2132] = -1.89544717E+01;
  COFD[2133] = 4.68595732E+00;
  COFD[2134] = -3.91842840E-01;
  COFD[2135] = 1.69262542E-02;
  COFD[2136] = -1.98646724E+01;
  COFD[2137] = 5.04367502E+00;
  COFD[2138] = -4.34153325E-01;
  COFD[2139] = 1.85956055E-02;
  COFD[2140] = -1.98075051E+01;
  COFD[2141] = 5.02169524E+00;
  COFD[2142] = -4.31582804E-01;
  COFD[2143] = 1.84953568E-02;
  COFD[2144] = -2.16379525E+01;
  COFD[2145] = 5.29019717E+00;
  COFD[2146] = -4.24502606E-01;
  COFD[2147] = 1.65197343E-02;
  COFD[2148] = -1.86157710E+01;
  COFD[2149] = 4.55689508E+00;
  COFD[2150] = -3.75937921E-01;
  COFD[2151] = 1.62703488E-02;
  COFD[2152] = -2.16802565E+01;
  COFD[2153] = 5.52918296E+00;
  COFD[2154] = -4.85360709E-01;
  COFD[2155] = 2.03448006E-02;
  COFD[2156] = -2.12121345E+01;
  COFD[2157] = 5.39823225E+00;
  COFD[2158] = -4.72294645E-01;
  COFD[2159] = 1.99340225E-02;
  COFD[2160] = -2.19327379E+01;
  COFD[2161] = 5.60638188E+00;
  COFD[2162] = -4.91272522E-01;
  COFD[2163] = 2.04396264E-02;
  COFD[2164] = -2.18273535E+01;
  COFD[2165] = 5.55753905E+00;
  COFD[2166] = -4.88136714E-01;
  COFD[2167] = 2.04294957E-02;
  COFD[2168] = -2.20500773E+01;
  COFD[2169] = 5.44448440E+00;
  COFD[2170] = -4.51529024E-01;
  COFD[2171] = 1.79698119E-02;
  COFD[2172] = -2.21885121E+01;
  COFD[2173] = 5.59472344E+00;
  COFD[2174] = -4.91421518E-01;
  COFD[2175] = 2.05117088E-02;
  COFD[2176] = -2.21933965E+01;
  COFD[2177] = 5.59472344E+00;
  COFD[2178] = -4.91421518E-01;
  COFD[2179] = 2.05117088E-02;
  COFD[2180] = -2.25170445E+01;
  COFD[2181] = 5.58249828E+00;
  COFD[2182] = -4.78873376E-01;
  COFD[2183] = 1.95316774E-02;
  COFD[2184] = -2.25141356E+01;
  COFD[2185] = 5.58249828E+00;
  COFD[2186] = -4.78873376E-01;
  COFD[2187] = 1.95316774E-02;
  COFD[2188] = -2.25171753E+01;
  COFD[2189] = 5.58249828E+00;
  COFD[2190] = -4.78873376E-01;
  COFD[2191] = 1.95316774E-02;
  COFD[2192] = -2.24096903E+01;
  COFD[2193] = 5.41604244E+00;
  COFD[2194] = -4.46391067E-01;
  COFD[2195] = 1.76894436E-02;
  COFD[2196] = -2.24117691E+01;
  COFD[2197] = 5.41604244E+00;
  COFD[2198] = -4.46391067E-01;
  COFD[2199] = 1.76894436E-02;
  COFD[2200] = -2.22712203E+01;
  COFD[2201] = 5.27184216E+00;
  COFD[2202] = -4.21373345E-01;
  COFD[2203] = 1.63542609E-02;
  COFD[2204] = -2.21166766E+01;
  COFD[2205] = 5.13519978E+00;
  COFD[2206] = -3.98132825E-01;
  COFD[2207] = 1.51293092E-02;
  COFD[2208] = -2.18596576E+01;
  COFD[2209] = 4.96464859E+00;
  COFD[2210] = -3.70657753E-01;
  COFD[2211] = 1.37267014E-02;
  COFD[2212] = -2.15864547E+01;
  COFD[2213] = 4.79387853E+00;
  COFD[2214] = -3.43720861E-01;
  COFD[2215] = 1.23700578E-02;
  COFD[2216] = -2.15876129E+01;
  COFD[2217] = 4.77996453E+00;
  COFD[2218] = -3.41483820E-01;
  COFD[2219] = 1.22561537E-02;
  COFD[2220] = -2.13890556E+01;
  COFD[2221] = 4.65974918E+00;
  COFD[2222] = -3.22390767E-01;
  COFD[2223] = 1.12918650E-02;
  COFD[2224] = -2.10053277E+01;
  COFD[2225] = 4.40732366E+00;
  COFD[2226] = -2.82889322E-01;
  COFD[2227] = 9.31663975E-03;
  COFD[2228] = -2.08019949E+01;
  COFD[2229] = 4.29990973E+00;
  COFD[2230] = -2.66411377E-01;
  COFD[2231] = 8.50361424E-03;
  COFD[2232] = -2.05654423E+01;
  COFD[2233] = 4.16804380E+00;
  COFD[2234] = -2.46372859E-01;
  COFD[2235] = 7.52105030E-03;
  COFD[2236] = -1.85864196E+01;
  COFD[2237] = 4.54915847E+00;
  COFD[2238] = -3.75000738E-01;
  COFD[2239] = 1.62324821E-02;
  COFD[2240] = -2.15101026E+01;
  COFD[2241] = 4.62311744E+00;
  COFD[2242] = -3.16576672E-01;
  COFD[2243] = 1.09982058E-02;
  COFD[2244] = -1.79345106E+01;
  COFD[2245] = 4.91373893E+00;
  COFD[2246] = -4.18747629E-01;
  COFD[2247] = 1.79856610E-02;
  COFD[2248] = -1.72556425E+01;
  COFD[2249] = 4.17889917E+00;
  COFD[2250] = -3.29752510E-01;
  COFD[2251] = 1.43850275E-02;
  COFD[2252] = -1.72753698E+01;
  COFD[2253] = 4.17889917E+00;
  COFD[2254] = -3.29752510E-01;
  COFD[2255] = 1.43850275E-02;
  COFD[2256] = -1.86499019E+01;
  COFD[2257] = 4.53572533E+00;
  COFD[2258] = -3.73386925E-01;
  COFD[2259] = 1.61678881E-02;
  COFD[2260] = -1.39924933E+01;
  COFD[2261] = 3.26384506E+00;
  COFD[2262] = -2.12947087E-01;
  COFD[2263] = 9.39743888E-03;
  COFD[2264] = -2.12661812E+01;
  COFD[2265] = 5.24930667E+00;
  COFD[2266] = -4.17435088E-01;
  COFD[2267] = 1.61434424E-02;
  COFD[2268] = -1.86570161E+01;
  COFD[2269] = 4.53572533E+00;
  COFD[2270] = -3.73386925E-01;
  COFD[2271] = 1.61678881E-02;
  COFD[2272] = -1.86424488E+01;
  COFD[2273] = 4.53572533E+00;
  COFD[2274] = -3.73386925E-01;
  COFD[2275] = 1.61678881E-02;
  COFD[2276] = -1.95552136E+01;
  COFD[2277] = 4.90255048E+00;
  COFD[2278] = -4.17368501E-01;
  COFD[2279] = 1.79287358E-02;
  COFD[2280] = -1.94823661E+01;
  COFD[2281] = 4.87333294E+00;
  COFD[2282] = -4.13769241E-01;
  COFD[2283] = 1.77802244E-02;
  COFD[2284] = -2.19399756E+01;
  COFD[2285] = 5.41841631E+00;
  COFD[2286] = -4.46818971E-01;
  COFD[2287] = 1.77127652E-02;
  COFD[2288] = -1.83538331E+01;
  COFD[2289] = 4.42828044E+00;
  COFD[2290] = -3.60417833E-01;
  COFD[2291] = 1.56455103E-02;
  COFD[2292] = -2.14326420E+01;
  COFD[2293] = 5.41729961E+00;
  COFD[2294] = -4.73400281E-01;
  COFD[2295] = 1.99269567E-02;
  COFD[2296] = -2.10944068E+01;
  COFD[2297] = 5.34286099E+00;
  COFD[2298] = -4.68100992E-01;
  COFD[2299] = 1.98731399E-02;
  COFD[2300] = -2.18273535E+01;
  COFD[2301] = 5.55753905E+00;
  COFD[2302] = -4.88136714E-01;
  COFD[2303] = 2.04294957E-02;
  COFD[2304] = -2.15746130E+01;
  COFD[2305] = 5.44803850E+00;
  COFD[2306] = -4.76610560E-01;
  COFD[2307] = 2.00355294E-02;
  COFD[2308] = -2.22208668E+01;
  COFD[2309] = 5.51722375E+00;
  COFD[2310] = -4.66081431E-01;
  COFD[2311] = 1.88044011E-02;
  COFD[2312] = -2.19982906E+01;
  COFD[2313] = 5.51276597E+00;
  COFD[2314] = -4.83701824E-01;
  COFD[2315] = 2.02915297E-02;
  COFD[2316] = -2.20033786E+01;
  COFD[2317] = 5.51276597E+00;
  COFD[2318] = -4.83701824E-01;
  COFD[2319] = 2.02915297E-02;
  COFD[2320] = -2.25118138E+01;
  COFD[2321] = 5.58206320E+00;
  COFD[2322] = -4.82956809E-01;
  COFD[2323] = 1.98731634E-02;
  COFD[2324] = -2.25087692E+01;
  COFD[2325] = 5.58206320E+00;
  COFD[2326] = -4.82956809E-01;
  COFD[2327] = 1.98731634E-02;
  COFD[2328] = -2.25119507E+01;
  COFD[2329] = 5.58206320E+00;
  COFD[2330] = -4.82956809E-01;
  COFD[2331] = 1.98731634E-02;
  COFD[2332] = -2.26047176E+01;
  COFD[2333] = 5.50251732E+00;
  COFD[2334] = -4.62858785E-01;
  COFD[2335] = 1.86120573E-02;
  COFD[2336] = -2.26069007E+01;
  COFD[2337] = 5.50251732E+00;
  COFD[2338] = -4.62858785E-01;
  COFD[2339] = 1.86120573E-02;
  COFD[2340] = -2.25784310E+01;
  COFD[2341] = 5.40653540E+00;
  COFD[2342] = -4.44612351E-01;
  COFD[2343] = 1.75906515E-02;
  COFD[2344] = -2.24451961E+01;
  COFD[2345] = 5.27966625E+00;
  COFD[2346] = -4.22746172E-01;
  COFD[2347] = 1.64279811E-02;
  COFD[2348] = -2.23212614E+01;
  COFD[2349] = 5.16629594E+00;
  COFD[2350] = -4.03322392E-01;
  COFD[2351] = 1.53998221E-02;
  COFD[2352] = -2.21433222E+01;
  COFD[2353] = 5.03586935E+00;
  COFD[2354] = -3.81976071E-01;
  COFD[2355] = 1.42995069E-02;
  COFD[2356] = -2.21429975E+01;
  COFD[2357] = 5.02172689E+00;
  COFD[2358] = -3.79713172E-01;
  COFD[2359] = 1.41845745E-02;
  COFD[2360] = -2.19256559E+01;
  COFD[2361] = 4.89350049E+00;
  COFD[2362] = -3.59442064E-01;
  COFD[2363] = 1.31619214E-02;
  COFD[2364] = -2.15962977E+01;
  COFD[2365] = 4.66482266E+00;
  COFD[2366] = -3.23189752E-01;
  COFD[2367] = 1.13320181E-02;
  COFD[2368] = -2.14611157E+01;
  COFD[2369] = 4.58545934E+00;
  COFD[2370] = -3.10556391E-01;
  COFD[2371] = 1.06931834E-02;
  COFD[2372] = -2.12918063E+01;
  COFD[2373] = 4.48188359E+00;
  COFD[2374] = -2.94414571E-01;
  COFD[2375] = 9.88838906E-03;
  COFD[2376] = -1.83249359E+01;
  COFD[2377] = 4.42045763E+00;
  COFD[2378] = -3.59451578E-01;
  COFD[2379] = 1.56056164E-02;
  COFD[2380] = -1.78379202E+01;
  COFD[2381] = 2.81667592E+00;
  COFD[2382] = -4.44112417E-02;
  COFD[2383] = -2.24836515E-03;
  COFD[2384] = -1.94691588E+01;
  COFD[2385] = 5.43830787E+00;
  COFD[2386] = -4.75472880E-01;
  COFD[2387] = 1.99909996E-02;
  COFD[2388] = -1.90915553E+01;
  COFD[2389] = 4.84384483E+00;
  COFD[2390] = -4.10265575E-01;
  COFD[2391] = 1.76414287E-02;
  COFD[2392] = -1.91136407E+01;
  COFD[2393] = 4.84384483E+00;
  COFD[2394] = -4.10265575E-01;
  COFD[2395] = 1.76414287E-02;
  COFD[2396] = -2.05324009E+01;
  COFD[2397] = 5.18417470E+00;
  COFD[2398] = -4.49491573E-01;
  COFD[2399] = 1.91438508E-02;
  COFD[2400] = -1.57040365E+01;
  COFD[2401] = 3.93614244E+00;
  COFD[2402] = -2.99111497E-01;
  COFD[2403] = 1.30888229E-02;
  COFD[2404] = -1.87419126E+01;
  COFD[2405] = 3.96926341E+00;
  COFD[2406] = -2.16412264E-01;
  COFD[2407] = 6.06012078E-03;
  COFD[2408] = -2.05408587E+01;
  COFD[2409] = 5.18417470E+00;
  COFD[2410] = -4.49491573E-01;
  COFD[2411] = 1.91438508E-02;
  COFD[2412] = -2.05235643E+01;
  COFD[2413] = 5.18417470E+00;
  COFD[2414] = -4.49491573E-01;
  COFD[2415] = 1.91438508E-02;
  COFD[2416] = -2.11637883E+01;
  COFD[2417] = 5.42846112E+00;
  COFD[2418] = -4.74321870E-01;
  COFD[2419] = 1.99459749E-02;
  COFD[2420] = -2.11341641E+01;
  COFD[2421] = 5.41773516E+00;
  COFD[2422] = -4.73414338E-01;
  COFD[2423] = 1.99258685E-02;
  COFD[2424] = -2.01064300E+01;
  COFD[2425] = 4.41511629E+00;
  COFD[2426] = -2.84086963E-01;
  COFD[2427] = 9.37586971E-03;
  COFD[2428] = -2.02969667E+01;
  COFD[2429] = 5.11106992E+00;
  COFD[2430] = -4.42047129E-01;
  COFD[2431] = 1.89042990E-02;
  COFD[2432] = -2.22176875E+01;
  COFD[2433] = 5.54251230E+00;
  COFD[2434] = -4.70946314E-01;
  COFD[2435] = 1.90785869E-02;
  COFD[2436] = -2.21110249E+01;
  COFD[2437] = 5.58360799E+00;
  COFD[2438] = -4.82701436E-01;
  COFD[2439] = 1.98437922E-02;
  COFD[2440] = -2.20500773E+01;
  COFD[2441] = 5.44448440E+00;
  COFD[2442] = -4.51529024E-01;
  COFD[2443] = 1.79698119E-02;
  COFD[2444] = -2.22208668E+01;
  COFD[2445] = 5.51722375E+00;
  COFD[2446] = -4.66081431E-01;
  COFD[2447] = 1.88044011E-02;
  COFD[2448] = -2.09121160E+01;
  COFD[2449] = 4.72895031E+00;
  COFD[2450] = -3.33332771E-01;
  COFD[2451] = 1.18431478E-02;
  COFD[2452] = -2.24612680E+01;
  COFD[2453] = 5.49330641E+00;
  COFD[2454] = -4.60498247E-01;
  COFD[2455] = 1.84639199E-02;
  COFD[2456] = -2.24674347E+01;
  COFD[2457] = 5.49330641E+00;
  COFD[2458] = -4.60498247E-01;
  COFD[2459] = 1.84639199E-02;
  COFD[2460] = -2.20420791E+01;
  COFD[2461] = 5.14570932E+00;
  COFD[2462] = -3.99877142E-01;
  COFD[2463] = 1.52199557E-02;
  COFD[2464] = -2.20382941E+01;
  COFD[2465] = 5.14570932E+00;
  COFD[2466] = -3.99877142E-01;
  COFD[2467] = 1.52199557E-02;
  COFD[2468] = -2.20422494E+01;
  COFD[2469] = 5.14570932E+00;
  COFD[2470] = -3.99877142E-01;
  COFD[2471] = 1.52199557E-02;
  COFD[2472] = -2.12138975E+01;
  COFD[2473] = 4.66550450E+00;
  COFD[2474] = -3.23297137E-01;
  COFD[2475] = 1.13374150E-02;
  COFD[2476] = -2.12166627E+01;
  COFD[2477] = 4.66550450E+00;
  COFD[2478] = -3.23297137E-01;
  COFD[2479] = 1.13374150E-02;
  COFD[2480] = -2.07454253E+01;
  COFD[2481] = 4.37720767E+00;
  COFD[2482] = -2.78259024E-01;
  COFD[2483] = 9.08774918E-03;
  COFD[2484] = -2.01683835E+01;
  COFD[2485] = 4.06006798E+00;
  COFD[2486] = -2.30066357E-01;
  COFD[2487] = 6.72473245E-03;
  COFD[2488] = -1.97003035E+01;
  COFD[2489] = 3.79996103E+00;
  COFD[2490] = -1.90497694E-01;
  COFD[2491] = 4.78603172E-03;
  COFD[2492] = -1.92768391E+01;
  COFD[2493] = 3.56517881E+00;
  COFD[2494] = -1.54966016E-01;
  COFD[2495] = 3.05232702E-03;
  COFD[2496] = -1.92450104E+01;
  COFD[2497] = 3.53733698E+00;
  COFD[2498] = -1.50812570E-01;
  COFD[2499] = 2.85140727E-03;
  COFD[2500] = -1.88405662E+01;
  COFD[2501] = 3.33125761E+00;
  COFD[2502] = -1.20168824E-01;
  COFD[2503] = 1.37545815E-03;
  COFD[2504] = -1.80427104E+01;
  COFD[2505] = 2.90760528E+00;
  COFD[2506] = -5.77438179E-02;
  COFD[2507] = -1.61157463E-03;
  COFD[2508] = -1.76677009E+01;
  COFD[2509] = 2.72650149E+00;
  COFD[2510] = -3.11601195E-02;
  COFD[2511] = -2.88242823E-03;
  COFD[2512] = -1.73379092E+01;
  COFD[2513] = 2.55561949E+00;
  COFD[2514] = -5.90530207E-03;
  COFD[2515] = -4.09393782E-03;
  COFD[2516] = -2.02693704E+01;
  COFD[2517] = 5.10426133E+00;
  COFD[2518] = -4.41256919E-01;
  COFD[2519] = 1.88737290E-02;
  COFD[2520] = -2.15057005E+01;
  COFD[2521] = 4.49401210E+00;
  COFD[2522] = -2.96300228E-01;
  COFD[2523] = 9.98228772E-03;
  COFD[2524] = -1.83539845E+01;
  COFD[2525] = 4.98756925E+00;
  COFD[2526] = -4.27526072E-01;
  COFD[2527] = 1.83341755E-02;
  COFD[2528] = -1.76774947E+01;
  COFD[2529] = 4.24719726E+00;
  COFD[2530] = -3.38206061E-01;
  COFD[2531] = 1.47350654E-02;
  COFD[2532] = -1.76992903E+01;
  COFD[2533] = 4.24719726E+00;
  COFD[2534] = -3.38206061E-01;
  COFD[2535] = 1.47350654E-02;
  COFD[2536] = -1.91208247E+01;
  COFD[2537] = 4.61801405E+00;
  COFD[2538] = -3.83535652E-01;
  COFD[2539] = 1.65862513E-02;
  COFD[2540] = -1.43129867E+01;
  COFD[2541] = 3.31177824E+00;
  COFD[2542] = -2.18945280E-01;
  COFD[2543] = 9.64764419E-03;
  COFD[2544] = -2.13847376E+01;
  COFD[2545] = 5.17440955E+00;
  COFD[2546] = -4.04678430E-01;
  COFD[2547] = 1.54706350E-02;
  COFD[2548] = -1.91291085E+01;
  COFD[2549] = 4.61801405E+00;
  COFD[2550] = -3.83535652E-01;
  COFD[2551] = 1.65862513E-02;
  COFD[2552] = -1.91121670E+01;
  COFD[2553] = 4.61801405E+00;
  COFD[2554] = -3.83535652E-01;
  COFD[2555] = 1.65862513E-02;
  COFD[2556] = -1.99803480E+01;
  COFD[2557] = 4.97875278E+00;
  COFD[2558] = -4.26485475E-01;
  COFD[2559] = 1.82931933E-02;
  COFD[2560] = -1.99235836E+01;
  COFD[2561] = 4.95514826E+00;
  COFD[2562] = -4.23691395E-01;
  COFD[2563] = 1.81828318E-02;
  COFD[2564] = -2.20947854E+01;
  COFD[2565] = 5.36053938E+00;
  COFD[2566] = -4.36434519E-01;
  COFD[2567] = 1.71484255E-02;
  COFD[2568] = -1.87684982E+01;
  COFD[2569] = 4.49191492E+00;
  COFD[2570] = -3.68041771E-01;
  COFD[2571] = 1.59498676E-02;
  COFD[2572] = -2.18590684E+01;
  COFD[2573] = 5.47368915E+00;
  COFD[2574] = -4.79424291E-01;
  COFD[2575] = 2.01372920E-02;
  COFD[2576] = -2.14323161E+01;
  COFD[2577] = 5.37331605E+00;
  COFD[2578] = -4.70491203E-01;
  COFD[2579] = 1.99134666E-02;
  COFD[2580] = -2.21885121E+01;
  COFD[2581] = 5.59472344E+00;
  COFD[2582] = -4.91421518E-01;
  COFD[2583] = 2.05117088E-02;
  COFD[2584] = -2.19982906E+01;
  COFD[2585] = 5.51276597E+00;
  COFD[2586] = -4.83701824E-01;
  COFD[2587] = 2.02915297E-02;
  COFD[2588] = -2.24612680E+01;
  COFD[2589] = 5.49330641E+00;
  COFD[2590] = -4.60498247E-01;
  COFD[2591] = 1.84639199E-02;
  COFD[2592] = -2.23842793E+01;
  COFD[2593] = 5.56066804E+00;
  COFD[2594] = -4.88405706E-01;
  COFD[2595] = 2.04357330E-02;
  COFD[2596] = -2.23903039E+01;
  COFD[2597] = 5.56066804E+00;
  COFD[2598] = -4.88405706E-01;
  COFD[2599] = 2.04357330E-02;
  COFD[2600] = -2.28055286E+01;
  COFD[2601] = 5.58523510E+00;
  COFD[2602] = -4.81201481E-01;
  COFD[2603] = 1.97107111E-02;
  COFD[2604] = -2.28018434E+01;
  COFD[2605] = 5.58523510E+00;
  COFD[2606] = -4.81201481E-01;
  COFD[2607] = 1.97107111E-02;
  COFD[2608] = -2.28056945E+01;
  COFD[2609] = 5.58523510E+00;
  COFD[2610] = -4.81201481E-01;
  COFD[2611] = 1.97107111E-02;
  COFD[2612] = -2.28142710E+01;
  COFD[2613] = 5.46711245E+00;
  COFD[2614] = -4.55648352E-01;
  COFD[2615] = 1.81956544E-02;
  COFD[2616] = -2.28169566E+01;
  COFD[2617] = 5.46711245E+00;
  COFD[2618] = -4.55648352E-01;
  COFD[2619] = 1.81956544E-02;
  COFD[2620] = -2.27264067E+01;
  COFD[2621] = 5.34358207E+00;
  COFD[2622] = -4.33525531E-01;
  COFD[2623] = 1.69942087E-02;
  COFD[2624] = -2.25883284E+01;
  COFD[2625] = 5.21373152E+00;
  COFD[2626] = -4.11240905E-01;
  COFD[2627] = 1.58129026E-02;
  COFD[2628] = -2.23956511E+01;
  COFD[2629] = 5.07018801E+00;
  COFD[2630] = -3.87535402E-01;
  COFD[2631] = 1.45842225E-02;
  COFD[2632] = -2.21481001E+01;
  COFD[2633] = 4.91019065E+00;
  COFD[2634] = -3.62076012E-01;
  COFD[2635] = 1.32946182E-02;
  COFD[2636] = -2.21417169E+01;
  COFD[2637] = 4.89399517E+00;
  COFD[2638] = -3.59520327E-01;
  COFD[2639] = 1.31658681E-02;
  COFD[2640] = -2.19360355E+01;
  COFD[2641] = 4.77045497E+00;
  COFD[2642] = -3.39955491E-01;
  COFD[2643] = 1.21784372E-02;
  COFD[2644] = -2.16062590E+01;
  COFD[2645] = 4.54192945E+00;
  COFD[2646] = -3.03755204E-01;
  COFD[2647] = 1.03536977E-02;
  COFD[2648] = -2.14350667E+01;
  COFD[2649] = 4.44599921E+00;
  COFD[2650] = -2.88841525E-01;
  COFD[2651] = 9.61119142E-03;
  COFD[2652] = -2.12290046E+01;
  COFD[2653] = 4.32707381E+00;
  COFD[2654] = -2.70563830E-01;
  COFD[2655] = 8.70791456E-03;
  COFD[2656] = -1.87434421E+01;
  COFD[2657] = 4.48550694E+00;
  COFD[2658] = -3.67277454E-01;
  COFD[2659] = 1.59194755E-02;
  COFD[2660] = -2.15154449E+01;
  COFD[2661] = 4.49401210E+00;
  COFD[2662] = -2.96300228E-01;
  COFD[2663] = 9.98228772E-03;
  COFD[2664] = -1.83542714E+01;
  COFD[2665] = 4.98756925E+00;
  COFD[2666] = -4.27526072E-01;
  COFD[2667] = 1.83341755E-02;
  COFD[2668] = -1.76808635E+01;
  COFD[2669] = 4.24719726E+00;
  COFD[2670] = -3.38206061E-01;
  COFD[2671] = 1.47350654E-02;
  COFD[2672] = -1.77028097E+01;
  COFD[2673] = 4.24719726E+00;
  COFD[2674] = -3.38206061E-01;
  COFD[2675] = 1.47350654E-02;
  COFD[2676] = -1.91261897E+01;
  COFD[2677] = 4.61801405E+00;
  COFD[2678] = -3.83535652E-01;
  COFD[2679] = 1.65862513E-02;
  COFD[2680] = -1.43135474E+01;
  COFD[2681] = 3.31177824E+00;
  COFD[2682] = -2.18945280E-01;
  COFD[2683] = 9.64764419E-03;
  COFD[2684] = -2.13884026E+01;
  COFD[2685] = 5.17440955E+00;
  COFD[2686] = -4.04678430E-01;
  COFD[2687] = 1.54706350E-02;
  COFD[2688] = -1.91345636E+01;
  COFD[2689] = 4.61801405E+00;
  COFD[2690] = -3.83535652E-01;
  COFD[2691] = 1.65862513E-02;
  COFD[2692] = -1.91174394E+01;
  COFD[2693] = 4.61801405E+00;
  COFD[2694] = -3.83535652E-01;
  COFD[2695] = 1.65862513E-02;
  COFD[2696] = -1.99835677E+01;
  COFD[2697] = 4.97875278E+00;
  COFD[2698] = -4.26485475E-01;
  COFD[2699] = 1.82931933E-02;
  COFD[2700] = -1.99269591E+01;
  COFD[2701] = 4.95514826E+00;
  COFD[2702] = -4.23691395E-01;
  COFD[2703] = 1.81828318E-02;
  COFD[2704] = -2.20998692E+01;
  COFD[2705] = 5.36053938E+00;
  COFD[2706] = -4.36434519E-01;
  COFD[2707] = 1.71484255E-02;
  COFD[2708] = -1.87733780E+01;
  COFD[2709] = 4.49191492E+00;
  COFD[2710] = -3.68041771E-01;
  COFD[2711] = 1.59498676E-02;
  COFD[2712] = -2.18653022E+01;
  COFD[2713] = 5.47368915E+00;
  COFD[2714] = -4.79424291E-01;
  COFD[2715] = 2.01372920E-02;
  COFD[2716] = -2.14369847E+01;
  COFD[2717] = 5.37331605E+00;
  COFD[2718] = -4.70491203E-01;
  COFD[2719] = 1.99134666E-02;
  COFD[2720] = -2.21933965E+01;
  COFD[2721] = 5.59472344E+00;
  COFD[2722] = -4.91421518E-01;
  COFD[2723] = 2.05117088E-02;
  COFD[2724] = -2.20033786E+01;
  COFD[2725] = 5.51276597E+00;
  COFD[2726] = -4.83701824E-01;
  COFD[2727] = 2.02915297E-02;
  COFD[2728] = -2.24674347E+01;
  COFD[2729] = 5.49330641E+00;
  COFD[2730] = -4.60498247E-01;
  COFD[2731] = 1.84639199E-02;
  COFD[2732] = -2.23903039E+01;
  COFD[2733] = 5.56066804E+00;
  COFD[2734] = -4.88405706E-01;
  COFD[2735] = 2.04357330E-02;
  COFD[2736] = -2.23964020E+01;
  COFD[2737] = 5.56066804E+00;
  COFD[2738] = -4.88405706E-01;
  COFD[2739] = 2.04357330E-02;
  COFD[2740] = -2.28124895E+01;
  COFD[2741] = 5.58523510E+00;
  COFD[2742] = -4.81201481E-01;
  COFD[2743] = 1.97107111E-02;
  COFD[2744] = -2.28087528E+01;
  COFD[2745] = 5.58523510E+00;
  COFD[2746] = -4.81201481E-01;
  COFD[2747] = 1.97107111E-02;
  COFD[2748] = -2.28126577E+01;
  COFD[2749] = 5.58523510E+00;
  COFD[2750] = -4.81201481E-01;
  COFD[2751] = 1.97107111E-02;
  COFD[2752] = -2.28218410E+01;
  COFD[2753] = 5.46711245E+00;
  COFD[2754] = -4.55648352E-01;
  COFD[2755] = 1.81956544E-02;
  COFD[2756] = -2.28245676E+01;
  COFD[2757] = 5.46711245E+00;
  COFD[2758] = -4.55648352E-01;
  COFD[2759] = 1.81956544E-02;
  COFD[2760] = -2.27345210E+01;
  COFD[2761] = 5.34358207E+00;
  COFD[2762] = -4.33525531E-01;
  COFD[2763] = 1.69942087E-02;
  COFD[2764] = -2.25968450E+01;
  COFD[2765] = 5.21373152E+00;
  COFD[2766] = -4.11240905E-01;
  COFD[2767] = 1.58129026E-02;
  COFD[2768] = -2.24044966E+01;
  COFD[2769] = 5.07018801E+00;
  COFD[2770] = -3.87535402E-01;
  COFD[2771] = 1.45842225E-02;
  COFD[2772] = -2.21572195E+01;
  COFD[2773] = 4.91019065E+00;
  COFD[2774] = -3.62076012E-01;
  COFD[2775] = 1.32946182E-02;
  COFD[2776] = -2.21508543E+01;
  COFD[2777] = 4.89399517E+00;
  COFD[2778] = -3.59520327E-01;
  COFD[2779] = 1.31658681E-02;
  COFD[2780] = -2.19453866E+01;
  COFD[2781] = 4.77045497E+00;
  COFD[2782] = -3.39955491E-01;
  COFD[2783] = 1.21784372E-02;
  COFD[2784] = -2.16159805E+01;
  COFD[2785] = 4.54192945E+00;
  COFD[2786] = -3.03755204E-01;
  COFD[2787] = 1.03536977E-02;
  COFD[2788] = -2.14451145E+01;
  COFD[2789] = 4.44599921E+00;
  COFD[2790] = -2.88841525E-01;
  COFD[2791] = 9.61119142E-03;
  COFD[2792] = -2.12391730E+01;
  COFD[2793] = 4.32707381E+00;
  COFD[2794] = -2.70563830E-01;
  COFD[2795] = 8.70791456E-03;
  COFD[2796] = -1.87483223E+01;
  COFD[2797] = 4.48550694E+00;
  COFD[2798] = -3.67277454E-01;
  COFD[2799] = 1.59194755E-02;
  COFD[2800] = -1.98610330E+01;
  COFD[2801] = 3.61510430E+00;
  COFD[2802] = -1.62429647E-01;
  COFD[2803] = 3.41379096E-03;
  COFD[2804] = -1.94091246E+01;
  COFD[2805] = 5.32291505E+00;
  COFD[2806] = -4.65883522E-01;
  COFD[2807] = 1.97916109E-02;
  COFD[2808] = -1.87877888E+01;
  COFD[2809] = 4.61260432E+00;
  COFD[2810] = -3.82854484E-01;
  COFD[2811] = 1.65575163E-02;
  COFD[2812] = -1.88113928E+01;
  COFD[2813] = 4.61260432E+00;
  COFD[2814] = -3.82854484E-01;
  COFD[2815] = 1.65575163E-02;
  COFD[2816] = -2.02564700E+01;
  COFD[2817] = 4.97613338E+00;
  COFD[2818] = -4.26175206E-01;
  COFD[2819] = 1.82809270E-02;
  COFD[2820] = -1.52614209E+01;
  COFD[2821] = 3.64565939E+00;
  COFD[2822] = -2.61726871E-01;
  COFD[2823] = 1.14799244E-02;
  COFD[2824] = -2.03436817E+01;
  COFD[2825] = 4.57152878E+00;
  COFD[2826] = -3.08371263E-01;
  COFD[2827] = 1.05838559E-02;
  COFD[2828] = -2.02658847E+01;
  COFD[2829] = 4.97613338E+00;
  COFD[2830] = -4.26175206E-01;
  COFD[2831] = 1.82809270E-02;
  COFD[2832] = -2.02466527E+01;
  COFD[2833] = 4.97613338E+00;
  COFD[2834] = -4.26175206E-01;
  COFD[2835] = 1.82809270E-02;
  COFD[2836] = -2.10571697E+01;
  COFD[2837] = 5.31360223E+00;
  COFD[2838] = -4.64787000E-01;
  COFD[2839] = 1.97483720E-02;
  COFD[2840] = -2.09912117E+01;
  COFD[2841] = 5.28557747E+00;
  COFD[2842] = -4.61402384E-01;
  COFD[2843] = 1.96111546E-02;
  COFD[2844] = -2.13351219E+01;
  COFD[2845] = 4.87252053E+00;
  COFD[2846] = -3.56127804E-01;
  COFD[2847] = 1.29948788E-02;
  COFD[2848] = -1.98830863E+01;
  COFD[2849] = 4.84731557E+00;
  COFD[2850] = -4.10638352E-01;
  COFD[2851] = 1.76543886E-02;
  COFD[2852] = -2.25016971E+01;
  COFD[2853] = 5.59178974E+00;
  COFD[2854] = -4.85668031E-01;
  COFD[2855] = 2.00491907E-02;
  COFD[2856] = -2.22816073E+01;
  COFD[2857] = 5.59185582E+00;
  COFD[2858] = -4.91155812E-01;
  COFD[2859] = 2.05043018E-02;
  COFD[2860] = -2.25170445E+01;
  COFD[2861] = 5.58249828E+00;
  COFD[2862] = -4.78873376E-01;
  COFD[2863] = 1.95316774E-02;
  COFD[2864] = -2.25118138E+01;
  COFD[2865] = 5.58206320E+00;
  COFD[2866] = -4.82956809E-01;
  COFD[2867] = 1.98731634E-02;
  COFD[2868] = -2.20420791E+01;
  COFD[2869] = 5.14570932E+00;
  COFD[2870] = -3.99877142E-01;
  COFD[2871] = 1.52199557E-02;
  COFD[2872] = -2.28055286E+01;
  COFD[2873] = 5.58523510E+00;
  COFD[2874] = -4.81201481E-01;
  COFD[2875] = 1.97107111E-02;
  COFD[2876] = -2.28124895E+01;
  COFD[2877] = 5.58523510E+00;
  COFD[2878] = -4.81201481E-01;
  COFD[2879] = 1.97107111E-02;
  COFD[2880] = -2.27782105E+01;
  COFD[2881] = 5.40563818E+00;
  COFD[2882] = -4.44444322E-01;
  COFD[2883] = 1.75813146E-02;
  COFD[2884] = -2.27738556E+01;
  COFD[2885] = 5.40563818E+00;
  COFD[2886] = -4.44444322E-01;
  COFD[2887] = 1.75813146E-02;
  COFD[2888] = -2.27784066E+01;
  COFD[2889] = 5.40563818E+00;
  COFD[2890] = -4.44444322E-01;
  COFD[2891] = 1.75813146E-02;
  COFD[2892] = -2.23528150E+01;
  COFD[2893] = 5.09597242E+00;
  COFD[2894] = -3.91720233E-01;
  COFD[2895] = 1.47988554E-02;
  COFD[2896] = -2.23560436E+01;
  COFD[2897] = 5.09597242E+00;
  COFD[2898] = -3.91720233E-01;
  COFD[2899] = 1.47988554E-02;
  COFD[2900] = -2.19668378E+01;
  COFD[2901] = 4.84253971E+00;
  COFD[2902] = -3.51393460E-01;
  COFD[2903] = 1.27562727E-02;
  COFD[2904] = -2.16264924E+01;
  COFD[2905] = 4.62444880E+00;
  COFD[2906] = -3.16789032E-01;
  COFD[2907] = 1.10089656E-02;
  COFD[2908] = -2.12774421E+01;
  COFD[2909] = 4.41372939E+00;
  COFD[2910] = -2.83873783E-01;
  COFD[2911] = 9.36532569E-03;
  COFD[2912] = -2.08875172E+01;
  COFD[2913] = 4.19325533E+00;
  COFD[2914] = -2.50186251E-01;
  COFD[2915] = 7.70758812E-03;
  COFD[2916] = -2.08615626E+01;
  COFD[2917] = 4.16888533E+00;
  COFD[2918] = -2.46500133E-01;
  COFD[2919] = 7.52727544E-03;
  COFD[2920] = -2.04884449E+01;
  COFD[2921] = 3.97419032E+00;
  COFD[2922] = -2.17151244E-01;
  COFD[2923] = 6.09602105E-03;
  COFD[2924] = -2.00028585E+01;
  COFD[2925] = 3.68035914E+00;
  COFD[2926] = -1.72246313E-01;
  COFD[2927] = 3.89112485E-03;
  COFD[2928] = -1.97359634E+01;
  COFD[2929] = 3.54254584E+00;
  COFD[2930] = -1.51588685E-01;
  COFD[2931] = 2.88891088E-03;
  COFD[2932] = -1.94433367E+01;
  COFD[2933] = 3.38805125E+00;
  COFD[2934] = -1.28605694E-01;
  COFD[2935] = 1.78139928E-03;
  COFD[2936] = -1.98609159E+01;
  COFD[2937] = 4.84231878E+00;
  COFD[2938] = -4.10101001E-01;
  COFD[2939] = 1.76356687E-02;
  COFD[2940] = -1.98544943E+01;
  COFD[2941] = 3.61510430E+00;
  COFD[2942] = -1.62429647E-01;
  COFD[2943] = 3.41379096E-03;
  COFD[2944] = -1.94089702E+01;
  COFD[2945] = 5.32291505E+00;
  COFD[2946] = -4.65883522E-01;
  COFD[2947] = 1.97916109E-02;
  COFD[2948] = -1.87858504E+01;
  COFD[2949] = 4.61260432E+00;
  COFD[2950] = -3.82854484E-01;
  COFD[2951] = 1.65575163E-02;
  COFD[2952] = -1.88093609E+01;
  COFD[2953] = 4.61260432E+00;
  COFD[2954] = -3.82854484E-01;
  COFD[2955] = 1.65575163E-02;
  COFD[2956] = -2.02532389E+01;
  COFD[2957] = 4.97613338E+00;
  COFD[2958] = -4.26175206E-01;
  COFD[2959] = 1.82809270E-02;
  COFD[2960] = -1.52611173E+01;
  COFD[2961] = 3.64565939E+00;
  COFD[2962] = -2.61726871E-01;
  COFD[2963] = 1.14799244E-02;
  COFD[2964] = -2.03415589E+01;
  COFD[2965] = 4.57152878E+00;
  COFD[2966] = -3.08371263E-01;
  COFD[2967] = 1.05838559E-02;
  COFD[2968] = -2.02625924E+01;
  COFD[2969] = 4.97613338E+00;
  COFD[2970] = -4.26175206E-01;
  COFD[2971] = 1.82809270E-02;
  COFD[2972] = -2.02434842E+01;
  COFD[2973] = 4.97613338E+00;
  COFD[2974] = -4.26175206E-01;
  COFD[2975] = 1.82809270E-02;
  COFD[2976] = -2.10553233E+01;
  COFD[2977] = 5.31360223E+00;
  COFD[2978] = -4.64787000E-01;
  COFD[2979] = 1.97483720E-02;
  COFD[2980] = -2.09892692E+01;
  COFD[2981] = 5.28557747E+00;
  COFD[2982] = -4.61402384E-01;
  COFD[2983] = 1.96111546E-02;
  COFD[2984] = -2.13320802E+01;
  COFD[2985] = 4.87252053E+00;
  COFD[2986] = -3.56127804E-01;
  COFD[2987] = 1.29948788E-02;
  COFD[2988] = -1.98801803E+01;
  COFD[2989] = 4.84731557E+00;
  COFD[2990] = -4.10638352E-01;
  COFD[2991] = 1.76543886E-02;
  COFD[2992] = -2.24978649E+01;
  COFD[2993] = 5.59178974E+00;
  COFD[2994] = -4.85668031E-01;
  COFD[2995] = 2.00491907E-02;
  COFD[2996] = -2.22788407E+01;
  COFD[2997] = 5.59185582E+00;
  COFD[2998] = -4.91155812E-01;
  COFD[2999] = 2.05043018E-02;
  COFD[3000] = -2.25141356E+01;
  COFD[3001] = 5.58249828E+00;
  COFD[3002] = -4.78873376E-01;
  COFD[3003] = 1.95316774E-02;
  COFD[3004] = -2.25087692E+01;
  COFD[3005] = 5.58206320E+00;
  COFD[3006] = -4.82956809E-01;
  COFD[3007] = 1.98731634E-02;
  COFD[3008] = -2.20382941E+01;
  COFD[3009] = 5.14570932E+00;
  COFD[3010] = -3.99877142E-01;
  COFD[3011] = 1.52199557E-02;
  COFD[3012] = -2.28018434E+01;
  COFD[3013] = 5.58523510E+00;
  COFD[3014] = -4.81201481E-01;
  COFD[3015] = 1.97107111E-02;
  COFD[3016] = -2.28087528E+01;
  COFD[3017] = 5.58523510E+00;
  COFD[3018] = -4.81201481E-01;
  COFD[3019] = 1.97107111E-02;
  COFD[3020] = -2.27738556E+01;
  COFD[3021] = 5.40563818E+00;
  COFD[3022] = -4.44444322E-01;
  COFD[3023] = 1.75813146E-02;
  COFD[3024] = -2.27695384E+01;
  COFD[3025] = 5.40563818E+00;
  COFD[3026] = -4.44444322E-01;
  COFD[3027] = 1.75813146E-02;
  COFD[3028] = -2.27740500E+01;
  COFD[3029] = 5.40563818E+00;
  COFD[3030] = -4.44444322E-01;
  COFD[3031] = 1.75813146E-02;
  COFD[3032] = -2.23480079E+01;
  COFD[3033] = 5.09597242E+00;
  COFD[3034] = -3.91720233E-01;
  COFD[3035] = 1.47988554E-02;
  COFD[3036] = -2.23512055E+01;
  COFD[3037] = 5.09597242E+00;
  COFD[3038] = -3.91720233E-01;
  COFD[3039] = 1.47988554E-02;
  COFD[3040] = -2.19616149E+01;
  COFD[3041] = 4.84253971E+00;
  COFD[3042] = -3.51393460E-01;
  COFD[3043] = 1.27562727E-02;
  COFD[3044] = -2.16209549E+01;
  COFD[3045] = 4.62444880E+00;
  COFD[3046] = -3.16789032E-01;
  COFD[3047] = 1.10089656E-02;
  COFD[3048] = -2.12716426E+01;
  COFD[3049] = 4.41372939E+00;
  COFD[3050] = -2.83873783E-01;
  COFD[3051] = 9.36532569E-03;
  COFD[3052] = -2.08814960E+01;
  COFD[3053] = 4.19325533E+00;
  COFD[3054] = -2.50186251E-01;
  COFD[3055] = 7.70758812E-03;
  COFD[3056] = -2.08555268E+01;
  COFD[3057] = 4.16888533E+00;
  COFD[3058] = -2.46500133E-01;
  COFD[3059] = 7.52727544E-03;
  COFD[3060] = -2.04822338E+01;
  COFD[3061] = 3.97419032E+00;
  COFD[3062] = -2.17151244E-01;
  COFD[3063] = 6.09602105E-03;
  COFD[3064] = -1.99963391E+01;
  COFD[3065] = 3.68035914E+00;
  COFD[3066] = -1.72246313E-01;
  COFD[3067] = 3.89112485E-03;
  COFD[3068] = -1.97291674E+01;
  COFD[3069] = 3.54254584E+00;
  COFD[3070] = -1.51588685E-01;
  COFD[3071] = 2.88891088E-03;
  COFD[3072] = -1.94364373E+01;
  COFD[3073] = 3.38805125E+00;
  COFD[3074] = -1.28605694E-01;
  COFD[3075] = 1.78139928E-03;
  COFD[3076] = -1.98580097E+01;
  COFD[3077] = 4.84231878E+00;
  COFD[3078] = -4.10101001E-01;
  COFD[3079] = 1.76356687E-02;
  COFD[3080] = -1.98613280E+01;
  COFD[3081] = 3.61510430E+00;
  COFD[3082] = -1.62429647E-01;
  COFD[3083] = 3.41379096E-03;
  COFD[3084] = -1.94091316E+01;
  COFD[3085] = 5.32291505E+00;
  COFD[3086] = -4.65883522E-01;
  COFD[3087] = 1.97916109E-02;
  COFD[3088] = -1.87878758E+01;
  COFD[3089] = 4.61260432E+00;
  COFD[3090] = -3.82854484E-01;
  COFD[3091] = 1.65575163E-02;
  COFD[3092] = -1.88114840E+01;
  COFD[3093] = 4.61260432E+00;
  COFD[3094] = -3.82854484E-01;
  COFD[3095] = 1.65575163E-02;
  COFD[3096] = -2.02566153E+01;
  COFD[3097] = 4.97613338E+00;
  COFD[3098] = -4.26175206E-01;
  COFD[3099] = 1.82809270E-02;
  COFD[3100] = -1.52614345E+01;
  COFD[3101] = 3.64565939E+00;
  COFD[3102] = -2.61726871E-01;
  COFD[3103] = 1.14799244E-02;
  COFD[3104] = -2.03437771E+01;
  COFD[3105] = 4.57152878E+00;
  COFD[3106] = -3.08371263E-01;
  COFD[3107] = 1.05838559E-02;
  COFD[3108] = -2.02660328E+01;
  COFD[3109] = 4.97613338E+00;
  COFD[3110] = -4.26175206E-01;
  COFD[3111] = 1.82809270E-02;
  COFD[3112] = -2.02467952E+01;
  COFD[3113] = 4.97613338E+00;
  COFD[3114] = -4.26175206E-01;
  COFD[3115] = 1.82809270E-02;
  COFD[3116] = -2.10572526E+01;
  COFD[3117] = 5.31360223E+00;
  COFD[3118] = -4.64787000E-01;
  COFD[3119] = 1.97483720E-02;
  COFD[3120] = -2.09912989E+01;
  COFD[3121] = 5.28557747E+00;
  COFD[3122] = -4.61402384E-01;
  COFD[3123] = 1.96111546E-02;
  COFD[3124] = -2.13352587E+01;
  COFD[3125] = 4.87252053E+00;
  COFD[3126] = -3.56127804E-01;
  COFD[3127] = 1.29948788E-02;
  COFD[3128] = -1.98832169E+01;
  COFD[3129] = 4.84731557E+00;
  COFD[3130] = -4.10638352E-01;
  COFD[3131] = 1.76543886E-02;
  COFD[3132] = -2.25018696E+01;
  COFD[3133] = 5.59178974E+00;
  COFD[3134] = -4.85668031E-01;
  COFD[3135] = 2.00491907E-02;
  COFD[3136] = -2.22817317E+01;
  COFD[3137] = 5.59185582E+00;
  COFD[3138] = -4.91155812E-01;
  COFD[3139] = 2.05043018E-02;
  COFD[3140] = -2.25171753E+01;
  COFD[3141] = 5.58249828E+00;
  COFD[3142] = -4.78873376E-01;
  COFD[3143] = 1.95316774E-02;
  COFD[3144] = -2.25119507E+01;
  COFD[3145] = 5.58206320E+00;
  COFD[3146] = -4.82956809E-01;
  COFD[3147] = 1.98731634E-02;
  COFD[3148] = -2.20422494E+01;
  COFD[3149] = 5.14570932E+00;
  COFD[3150] = -3.99877142E-01;
  COFD[3151] = 1.52199557E-02;
  COFD[3152] = -2.28056945E+01;
  COFD[3153] = 5.58523510E+00;
  COFD[3154] = -4.81201481E-01;
  COFD[3155] = 1.97107111E-02;
  COFD[3156] = -2.28126577E+01;
  COFD[3157] = 5.58523510E+00;
  COFD[3158] = -4.81201481E-01;
  COFD[3159] = 1.97107111E-02;
  COFD[3160] = -2.27784066E+01;
  COFD[3161] = 5.40563818E+00;
  COFD[3162] = -4.44444322E-01;
  COFD[3163] = 1.75813146E-02;
  COFD[3164] = -2.27740500E+01;
  COFD[3165] = 5.40563818E+00;
  COFD[3166] = -4.44444322E-01;
  COFD[3167] = 1.75813146E-02;
  COFD[3168] = -2.27786027E+01;
  COFD[3169] = 5.40563818E+00;
  COFD[3170] = -4.44444322E-01;
  COFD[3171] = 1.75813146E-02;
  COFD[3172] = -2.23530316E+01;
  COFD[3173] = 5.09597242E+00;
  COFD[3174] = -3.91720233E-01;
  COFD[3175] = 1.47988554E-02;
  COFD[3176] = -2.23562615E+01;
  COFD[3177] = 5.09597242E+00;
  COFD[3178] = -3.91720233E-01;
  COFD[3179] = 1.47988554E-02;
  COFD[3180] = -2.19670732E+01;
  COFD[3181] = 4.84253971E+00;
  COFD[3182] = -3.51393460E-01;
  COFD[3183] = 1.27562727E-02;
  COFD[3184] = -2.16267421E+01;
  COFD[3185] = 4.62444880E+00;
  COFD[3186] = -3.16789032E-01;
  COFD[3187] = 1.10089656E-02;
  COFD[3188] = -2.12777037E+01;
  COFD[3189] = 4.41372939E+00;
  COFD[3190] = -2.83873783E-01;
  COFD[3191] = 9.36532569E-03;
  COFD[3192] = -2.08877888E+01;
  COFD[3193] = 4.19325533E+00;
  COFD[3194] = -2.50186251E-01;
  COFD[3195] = 7.70758812E-03;
  COFD[3196] = -2.08618348E+01;
  COFD[3197] = 4.16888533E+00;
  COFD[3198] = -2.46500133E-01;
  COFD[3199] = 7.52727544E-03;
  COFD[3200] = -2.04887251E+01;
  COFD[3201] = 3.97419032E+00;
  COFD[3202] = -2.17151244E-01;
  COFD[3203] = 6.09602105E-03;
  COFD[3204] = -2.00031527E+01;
  COFD[3205] = 3.68035914E+00;
  COFD[3206] = -1.72246313E-01;
  COFD[3207] = 3.89112485E-03;
  COFD[3208] = -1.97362702E+01;
  COFD[3209] = 3.54254584E+00;
  COFD[3210] = -1.51588685E-01;
  COFD[3211] = 2.88891088E-03;
  COFD[3212] = -1.94436482E+01;
  COFD[3213] = 3.38805125E+00;
  COFD[3214] = -1.28605694E-01;
  COFD[3215] = 1.78139928E-03;
  COFD[3216] = -1.98610465E+01;
  COFD[3217] = 4.84231878E+00;
  COFD[3218] = -4.10101001E-01;
  COFD[3219] = 1.76356687E-02;
  COFD[3220] = -1.79641953E+01;
  COFD[3221] = 2.68406243E+00;
  COFD[3222] = -2.49058117E-02;
  COFD[3223] = -3.18217796E-03;
  COFD[3224] = -1.99878889E+01;
  COFD[3225] = 5.47248098E+00;
  COFD[3226] = -4.79290468E-01;
  COFD[3227] = 2.01323903E-02;
  COFD[3228] = -1.96267194E+01;
  COFD[3229] = 4.88238340E+00;
  COFD[3230] = -4.14880316E-01;
  COFD[3231] = 1.78258928E-02;
  COFD[3232] = -1.96513830E+01;
  COFD[3233] = 4.88238340E+00;
  COFD[3234] = -4.14880316E-01;
  COFD[3235] = 1.78258928E-02;
  COFD[3236] = -2.10673190E+01;
  COFD[3237] = 5.22065615E+00;
  COFD[3238] = -4.53751850E-01;
  COFD[3239] = 1.93099506E-02;
  COFD[3240] = -1.61866111E+01;
  COFD[3241] = 3.97811734E+00;
  COFD[3242] = -3.04543772E-01;
  COFD[3243] = 1.33243270E-02;
  COFD[3244] = -1.90109309E+01;
  COFD[3245] = 3.88639599E+00;
  COFD[3246] = -2.03781856E-01;
  COFD[3247] = 5.44050761E-03;
  COFD[3248] = -2.10774499E+01;
  COFD[3249] = 5.22065615E+00;
  COFD[3250] = -4.53751850E-01;
  COFD[3251] = 1.93099506E-02;
  COFD[3252] = -2.10567703E+01;
  COFD[3253] = 5.22065615E+00;
  COFD[3254] = -4.53751850E-01;
  COFD[3255] = 1.93099506E-02;
  COFD[3256] = -2.16471880E+01;
  COFD[3257] = 5.46403569E+00;
  COFD[3258] = -4.78350420E-01;
  COFD[3259] = 2.00977393E-02;
  COFD[3260] = -2.15968629E+01;
  COFD[3261] = 5.44280136E+00;
  COFD[3262] = -4.75998855E-01;
  COFD[3263] = 2.00116091E-02;
  COFD[3264] = -2.03618430E+01;
  COFD[3265] = 4.33469236E+00;
  COFD[3266] = -2.71728538E-01;
  COFD[3267] = 8.76524142E-03;
  COFD[3268] = -2.07935801E+01;
  COFD[3269] = 5.13870075E+00;
  COFD[3270] = -4.45087556E-01;
  COFD[3271] = 1.90141513E-02;
  COFD[3272] = -2.26255602E+01;
  COFD[3273] = 5.52088531E+00;
  COFD[3274] = -4.66799303E-01;
  COFD[3275] = 1.88452220E-02;
  COFD[3276] = -2.25311979E+01;
  COFD[3277] = 5.58497731E+00;
  COFD[3278] = -4.81782064E-01;
  COFD[3279] = 1.97602508E-02;
  COFD[3280] = -2.24096903E+01;
  COFD[3281] = 5.41604244E+00;
  COFD[3282] = -4.46391067E-01;
  COFD[3283] = 1.76894436E-02;
  COFD[3284] = -2.26047176E+01;
  COFD[3285] = 5.50251732E+00;
  COFD[3286] = -4.62858785E-01;
  COFD[3287] = 1.86120573E-02;
  COFD[3288] = -2.12138975E+01;
  COFD[3289] = 4.66550450E+00;
  COFD[3290] = -3.23297137E-01;
  COFD[3291] = 1.13374150E-02;
  COFD[3292] = -2.28142710E+01;
  COFD[3293] = 5.46711245E+00;
  COFD[3294] = -4.55648352E-01;
  COFD[3295] = 1.81956544E-02;
  COFD[3296] = -2.28218410E+01;
  COFD[3297] = 5.46711245E+00;
  COFD[3298] = -4.55648352E-01;
  COFD[3299] = 1.81956544E-02;
  COFD[3300] = -2.23528150E+01;
  COFD[3301] = 5.09597242E+00;
  COFD[3302] = -3.91720233E-01;
  COFD[3303] = 1.47988554E-02;
  COFD[3304] = -2.23480079E+01;
  COFD[3305] = 5.09597242E+00;
  COFD[3306] = -3.91720233E-01;
  COFD[3307] = 1.47988554E-02;
  COFD[3308] = -2.23530316E+01;
  COFD[3309] = 5.09597242E+00;
  COFD[3310] = -3.91720233E-01;
  COFD[3311] = 1.47988554E-02;
  COFD[3312] = -2.15052198E+01;
  COFD[3313] = 4.60438096E+00;
  COFD[3314] = -3.13580143E-01;
  COFD[3315] = 1.08462412E-02;
  COFD[3316] = -2.15088259E+01;
  COFD[3317] = 4.60438096E+00;
  COFD[3318] = -3.13580143E-01;
  COFD[3319] = 1.08462412E-02;
  COFD[3320] = -2.09926096E+01;
  COFD[3321] = 4.29644275E+00;
  COFD[3322] = -2.65881077E-01;
  COFD[3323] = 8.47752275E-03;
  COFD[3324] = -2.03719013E+01;
  COFD[3325] = 3.96005658E+00;
  COFD[3326] = -2.15023838E-01;
  COFD[3327] = 5.99243668E-03;
  COFD[3328] = -1.99572085E+01;
  COFD[3329] = 3.72188482E+00;
  COFD[3330] = -1.78555760E-01;
  COFD[3331] = 4.19961806E-03;
  COFD[3332] = -1.94608337E+01;
  COFD[3333] = 3.45627503E+00;
  COFD[3334] = -1.38749652E-01;
  COFD[3335] = 2.26961182E-03;
  COFD[3336] = -1.94327462E+01;
  COFD[3337] = 3.43141909E+00;
  COFD[3338] = -1.35054012E-01;
  COFD[3339] = 2.09180741E-03;
  COFD[3340] = -1.90327818E+01;
  COFD[3341] = 3.22670299E+00;
  COFD[3342] = -1.04657166E-01;
  COFD[3343] = 6.29620572E-04;
  COFD[3344] = -1.81581189E+01;
  COFD[3345] = 2.77116239E+00;
  COFD[3346] = -3.77250246E-02;
  COFD[3347] = -2.56819995E-03;
  COFD[3348] = -1.78252903E+01;
  COFD[3349] = 2.60486558E+00;
  COFD[3350] = -1.32252668E-02;
  COFD[3351] = -3.74170980E-03;
  COFD[3352] = -1.75400768E+01;
  COFD[3353] = 2.45372496E+00;
  COFD[3354] = 9.16587873E-03;
  COFD[3355] = -4.81554146E-03;
  COFD[3356] = -2.07714631E+01;
  COFD[3357] = 5.13381106E+00;
  COFD[3358] = -4.44579059E-01;
  COFD[3359] = 1.89972323E-02;
  COFD[3360] = -1.79693333E+01;
  COFD[3361] = 2.68406243E+00;
  COFD[3362] = -2.49058117E-02;
  COFD[3363] = -3.18217796E-03;
  COFD[3364] = -1.99879922E+01;
  COFD[3365] = 5.47248098E+00;
  COFD[3366] = -4.79290468E-01;
  COFD[3367] = 2.01323903E-02;
  COFD[3368] = -1.96280719E+01;
  COFD[3369] = 4.88238340E+00;
  COFD[3370] = -4.14880316E-01;
  COFD[3371] = 1.78258928E-02;
  COFD[3372] = -1.96528039E+01;
  COFD[3373] = 4.88238340E+00;
  COFD[3374] = -4.14880316E-01;
  COFD[3375] = 1.78258928E-02;
  COFD[3376] = -2.10696468E+01;
  COFD[3377] = 5.22065615E+00;
  COFD[3378] = -4.53751850E-01;
  COFD[3379] = 1.93099506E-02;
  COFD[3380] = -1.61868148E+01;
  COFD[3381] = 3.97811734E+00;
  COFD[3382] = -3.04543772E-01;
  COFD[3383] = 1.33243270E-02;
  COFD[3384] = -1.90124187E+01;
  COFD[3385] = 3.88639599E+00;
  COFD[3386] = -2.03781856E-01;
  COFD[3387] = 5.44050761E-03;
  COFD[3388] = -2.10798254E+01;
  COFD[3389] = 5.22065615E+00;
  COFD[3390] = -4.53751850E-01;
  COFD[3391] = 1.93099506E-02;
  COFD[3392] = -2.10590493E+01;
  COFD[3393] = 5.22065615E+00;
  COFD[3394] = -4.53751850E-01;
  COFD[3395] = 1.93099506E-02;
  COFD[3396] = -2.16484734E+01;
  COFD[3397] = 5.46403569E+00;
  COFD[3398] = -4.78350420E-01;
  COFD[3399] = 2.00977393E-02;
  COFD[3400] = -2.15982184E+01;
  COFD[3401] = 5.44280136E+00;
  COFD[3402] = -4.75998855E-01;
  COFD[3403] = 2.00116091E-02;
  COFD[3404] = -2.03640239E+01;
  COFD[3405] = 4.33469236E+00;
  COFD[3406] = -2.71728538E-01;
  COFD[3407] = 8.76524142E-03;
  COFD[3408] = -2.07956566E+01;
  COFD[3409] = 5.13870075E+00;
  COFD[3410] = -4.45087556E-01;
  COFD[3411] = 1.90141513E-02;
  COFD[3412] = -2.26283634E+01;
  COFD[3413] = 5.52088531E+00;
  COFD[3414] = -4.66799303E-01;
  COFD[3415] = 1.88452220E-02;
  COFD[3416] = -2.25331679E+01;
  COFD[3417] = 5.58497731E+00;
  COFD[3418] = -4.81782064E-01;
  COFD[3419] = 1.97602508E-02;
  COFD[3420] = -2.24117691E+01;
  COFD[3421] = 5.41604244E+00;
  COFD[3422] = -4.46391067E-01;
  COFD[3423] = 1.76894436E-02;
  COFD[3424] = -2.26069007E+01;
  COFD[3425] = 5.50251732E+00;
  COFD[3426] = -4.62858785E-01;
  COFD[3427] = 1.86120573E-02;
  COFD[3428] = -2.12166627E+01;
  COFD[3429] = 4.66550450E+00;
  COFD[3430] = -3.23297137E-01;
  COFD[3431] = 1.13374150E-02;
  COFD[3432] = -2.28169566E+01;
  COFD[3433] = 5.46711245E+00;
  COFD[3434] = -4.55648352E-01;
  COFD[3435] = 1.81956544E-02;
  COFD[3436] = -2.28245676E+01;
  COFD[3437] = 5.46711245E+00;
  COFD[3438] = -4.55648352E-01;
  COFD[3439] = 1.81956544E-02;
  COFD[3440] = -2.23560436E+01;
  COFD[3441] = 5.09597242E+00;
  COFD[3442] = -3.91720233E-01;
  COFD[3443] = 1.47988554E-02;
  COFD[3444] = -2.23512055E+01;
  COFD[3445] = 5.09597242E+00;
  COFD[3446] = -3.91720233E-01;
  COFD[3447] = 1.47988554E-02;
  COFD[3448] = -2.23562615E+01;
  COFD[3449] = 5.09597242E+00;
  COFD[3450] = -3.91720233E-01;
  COFD[3451] = 1.47988554E-02;
  COFD[3452] = -2.15088259E+01;
  COFD[3453] = 4.60438096E+00;
  COFD[3454] = -3.13580143E-01;
  COFD[3455] = 1.08462412E-02;
  COFD[3456] = -2.15124581E+01;
  COFD[3457] = 4.60438096E+00;
  COFD[3458] = -3.13580143E-01;
  COFD[3459] = 1.08462412E-02;
  COFD[3460] = -2.09965707E+01;
  COFD[3461] = 4.29644275E+00;
  COFD[3462] = -2.65881077E-01;
  COFD[3463] = 8.47752275E-03;
  COFD[3464] = -2.03761364E+01;
  COFD[3465] = 3.96005658E+00;
  COFD[3466] = -2.15023838E-01;
  COFD[3467] = 5.99243668E-03;
  COFD[3468] = -1.99616752E+01;
  COFD[3469] = 3.72188482E+00;
  COFD[3470] = -1.78555760E-01;
  COFD[3471] = 4.19961806E-03;
  COFD[3472] = -1.94654989E+01;
  COFD[3473] = 3.45627503E+00;
  COFD[3474] = -1.38749652E-01;
  COFD[3475] = 2.26961182E-03;
  COFD[3476] = -1.94374245E+01;
  COFD[3477] = 3.43141909E+00;
  COFD[3478] = -1.35054012E-01;
  COFD[3479] = 2.09180741E-03;
  COFD[3480] = -1.90376189E+01;
  COFD[3481] = 3.22670299E+00;
  COFD[3482] = -1.04657166E-01;
  COFD[3483] = 6.29620572E-04;
  COFD[3484] = -1.81632392E+01;
  COFD[3485] = 2.77116239E+00;
  COFD[3486] = -3.77250246E-02;
  COFD[3487] = -2.56819995E-03;
  COFD[3488] = -1.78306685E+01;
  COFD[3489] = 2.60486558E+00;
  COFD[3490] = -1.32252668E-02;
  COFD[3491] = -3.74170980E-03;
  COFD[3492] = -1.75455525E+01;
  COFD[3493] = 2.45372496E+00;
  COFD[3494] = 9.16587873E-03;
  COFD[3495] = -4.81554146E-03;
  COFD[3496] = -2.07735397E+01;
  COFD[3497] = 5.13381106E+00;
  COFD[3498] = -4.44579059E-01;
  COFD[3499] = 1.89972323E-02;
  COFD[3500] = -1.71023549E+01;
  COFD[3501] = 2.22992608E+00;
  COFD[3502] = 4.19679647E-02;
  COFD[3503] = -6.37519657E-03;
  COFD[3504] = -2.04125771E+01;
  COFD[3505] = 5.57739710E+00;
  COFD[3506] = -4.89778630E-01;
  COFD[3507] = 2.04637924E-02;
  COFD[3508] = -2.01678752E+01;
  COFD[3509] = 5.04165097E+00;
  COFD[3510] = -4.33913744E-01;
  COFD[3511] = 1.85861246E-02;
  COFD[3512] = -2.01934178E+01;
  COFD[3513] = 5.04165097E+00;
  COFD[3514] = -4.33913744E-01;
  COFD[3515] = 1.85861246E-02;
  COFD[3516] = -2.15776504E+01;
  COFD[3517] = 5.35995365E+00;
  COFD[3518] = -4.69587823E-01;
  COFD[3519] = 1.99080702E-02;
  COFD[3520] = -1.66550985E+01;
  COFD[3521] = 4.12489968E+00;
  COFD[3522] = -3.23119338E-01;
  COFD[3523] = 1.41122711E-02;
  COFD[3524] = -1.83523817E+01;
  COFD[3525] = 3.52256138E+00;
  COFD[3526] = -1.48611326E-01;
  COFD[3527] = 2.74505262E-03;
  COFD[3528] = -2.15884087E+01;
  COFD[3529] = 5.35995365E+00;
  COFD[3530] = -4.69587823E-01;
  COFD[3531] = 1.99080702E-02;
  COFD[3532] = -2.15664626E+01;
  COFD[3533] = 5.35995365E+00;
  COFD[3534] = -4.69587823E-01;
  COFD[3535] = 1.99080702E-02;
  COFD[3536] = -2.20820509E+01;
  COFD[3537] = 5.57296554E+00;
  COFD[3538] = -4.89394407E-01;
  COFD[3539] = 2.04545698E-02;
  COFD[3540] = -2.20571987E+01;
  COFD[3541] = 5.56221277E+00;
  COFD[3542] = -4.88535386E-01;
  COFD[3543] = 2.04385478E-02;
  COFD[3544] = -1.96505480E+01;
  COFD[3545] = 3.94748284E+00;
  COFD[3546] = -2.13105313E-01;
  COFD[3547] = 5.89820150E-03;
  COFD[3548] = -2.12462427E+01;
  COFD[3549] = 5.25612649E+00;
  COFD[3550] = -4.57885944E-01;
  COFD[3551] = 1.94706895E-02;
  COFD[3552] = -2.26428111E+01;
  COFD[3553] = 5.43854589E+00;
  COFD[3554] = -4.50460433E-01;
  COFD[3555] = 1.79115741E-02;
  COFD[3556] = -2.26391595E+01;
  COFD[3557] = 5.54906697E+00;
  COFD[3558] = -4.72198999E-01;
  COFD[3559] = 1.91488843E-02;
  COFD[3560] = -2.22712203E+01;
  COFD[3561] = 5.27184216E+00;
  COFD[3562] = -4.21373345E-01;
  COFD[3563] = 1.63542609E-02;
  COFD[3564] = -2.25784310E+01;
  COFD[3565] = 5.40653540E+00;
  COFD[3566] = -4.44612351E-01;
  COFD[3567] = 1.75906515E-02;
  COFD[3568] = -2.07454253E+01;
  COFD[3569] = 4.37720767E+00;
  COFD[3570] = -2.78259024E-01;
  COFD[3571] = 9.08774918E-03;
  COFD[3572] = -2.27264067E+01;
  COFD[3573] = 5.34358207E+00;
  COFD[3574] = -4.33525531E-01;
  COFD[3575] = 1.69942087E-02;
  COFD[3576] = -2.27345210E+01;
  COFD[3577] = 5.34358207E+00;
  COFD[3578] = -4.33525531E-01;
  COFD[3579] = 1.69942087E-02;
  COFD[3580] = -2.19668378E+01;
  COFD[3581] = 4.84253971E+00;
  COFD[3582] = -3.51393460E-01;
  COFD[3583] = 1.27562727E-02;
  COFD[3584] = -2.19616149E+01;
  COFD[3585] = 4.84253971E+00;
  COFD[3586] = -3.51393460E-01;
  COFD[3587] = 1.27562727E-02;
  COFD[3588] = -2.19670732E+01;
  COFD[3589] = 4.84253971E+00;
  COFD[3590] = -3.51393460E-01;
  COFD[3591] = 1.27562727E-02;
  COFD[3592] = -2.09926096E+01;
  COFD[3593] = 4.29644275E+00;
  COFD[3594] = -2.65881077E-01;
  COFD[3595] = 8.47752275E-03;
  COFD[3596] = -2.09965707E+01;
  COFD[3597] = 4.29644275E+00;
  COFD[3598] = -2.65881077E-01;
  COFD[3599] = 8.47752275E-03;
  COFD[3600] = -2.02931537E+01;
  COFD[3601] = 3.90905923E+00;
  COFD[3602] = -2.07240428E-01;
  COFD[3603] = 5.61016042E-03;
  COFD[3604] = -1.97882319E+01;
  COFD[3605] = 3.62109503E+00;
  COFD[3606] = -1.63328103E-01;
  COFD[3607] = 3.45738977E-03;
  COFD[3608] = -1.91738684E+01;
  COFD[3609] = 3.29927367E+00;
  COFD[3610] = -1.15421965E-01;
  COFD[3611] = 1.14722453E-03;
  COFD[3612] = -1.86224107E+01;
  COFD[3613] = 3.01293116E+00;
  COFD[3614] = -7.31811485E-02;
  COFD[3615] = -8.74503577E-04;
  COFD[3616] = -1.85739749E+01;
  COFD[3617] = 2.97960589E+00;
  COFD[3618] = -6.82975765E-02;
  COFD[3619] = -1.10754786E-03;
  COFD[3620] = -1.80237996E+01;
  COFD[3621] = 2.70981781E+00;
  COFD[3622] = -2.87009191E-02;
  COFD[3623] = -3.00031484E-03;
  COFD[3624] = -1.72678897E+01;
  COFD[3625] = 2.30401734E+00;
  COFD[3626] = 3.11443222E-02;
  COFD[3627] = -5.86207495E-03;
  COFD[3628] = -1.69703233E+01;
  COFD[3629] = 2.15337734E+00;
  COFD[3630] = 5.31165264E-02;
  COFD[3631] = -6.90242414E-03;
  COFD[3632] = -1.66106763E+01;
  COFD[3633] = 1.97256518E+00;
  COFD[3634] = 7.93547823E-02;
  COFD[3635] = -8.14046199E-03;
  COFD[3636] = -2.12157081E+01;
  COFD[3637] = 5.24766160E+00;
  COFD[3638] = -4.56882620E-01;
  COFD[3639] = 1.94309393E-02;
  COFD[3640] = -1.62450421E+01;
  COFD[3641] = 1.79898308E+00;
  COFD[3642] = 1.04422970E-01;
  COFD[3643] = -9.31788260E-03;
  COFD[3644] = -2.06420448E+01;
  COFD[3645] = 5.61233640E+00;
  COFD[3646] = -4.91245632E-01;
  COFD[3647] = 2.04073252E-02;
  COFD[3648] = -2.05574198E+01;
  COFD[3649] = 5.14795860E+00;
  COFD[3650] = -4.45935789E-01;
  COFD[3651] = 1.90364341E-02;
  COFD[3652] = -2.05835748E+01;
  COFD[3653] = 5.14795860E+00;
  COFD[3654] = -4.45935789E-01;
  COFD[3655] = 1.90364341E-02;
  COFD[3656] = -2.18432468E+01;
  COFD[3657] = 5.40768793E+00;
  COFD[3658] = -4.72942538E-01;
  COFD[3659] = 1.99389038E-02;
  COFD[3660] = -1.70329250E+01;
  COFD[3661] = 4.23969256E+00;
  COFD[3662] = -3.37288904E-01;
  COFD[3663] = 1.46975974E-02;
  COFD[3664] = -1.76500812E+01;
  COFD[3665] = 3.15831209E+00;
  COFD[3666] = -9.45393054E-02;
  COFD[3667] = 1.45090308E-04;
  COFD[3668] = -2.18544613E+01;
  COFD[3669] = 5.40768793E+00;
  COFD[3670] = -4.72942538E-01;
  COFD[3671] = 1.99389038E-02;
  COFD[3672] = -2.18315953E+01;
  COFD[3673] = 5.40768793E+00;
  COFD[3674] = -4.72942538E-01;
  COFD[3675] = 1.99389038E-02;
  COFD[3676] = -2.23196288E+01;
  COFD[3677] = 5.61199715E+00;
  COFD[3678] = -4.91433824E-01;
  COFD[3679] = 2.04245969E-02;
  COFD[3680] = -2.23089124E+01;
  COFD[3681] = 5.60657745E+00;
  COFD[3682] = -4.91280842E-01;
  COFD[3683] = 2.04393241E-02;
  COFD[3684] = -1.91553451E+01;
  COFD[3685] = 3.66719242E+00;
  COFD[3686] = -1.70260825E-01;
  COFD[3687] = 3.79442136E-03;
  COFD[3688] = -2.16479635E+01;
  COFD[3689] = 5.36415648E+00;
  COFD[3690] = -4.69836047E-01;
  COFD[3691] = 1.99067039E-02;
  COFD[3692] = -2.25594139E+01;
  COFD[3693] = 5.32923056E+00;
  COFD[3694] = -4.31065031E-01;
  COFD[3695] = 1.68637777E-02;
  COFD[3696] = -2.26655242E+01;
  COFD[3697] = 5.49155307E+00;
  COFD[3698] = -4.60156593E-01;
  COFD[3699] = 1.84445999E-02;
  COFD[3700] = -2.21166766E+01;
  COFD[3701] = 5.13519978E+00;
  COFD[3702] = -3.98132825E-01;
  COFD[3703] = 1.51293092E-02;
  COFD[3704] = -2.24451961E+01;
  COFD[3705] = 5.27966625E+00;
  COFD[3706] = -4.22746172E-01;
  COFD[3707] = 1.64279811E-02;
  COFD[3708] = -2.01683835E+01;
  COFD[3709] = 4.06006798E+00;
  COFD[3710] = -2.30066357E-01;
  COFD[3711] = 6.72473245E-03;
  COFD[3712] = -2.25883284E+01;
  COFD[3713] = 5.21373152E+00;
  COFD[3714] = -4.11240905E-01;
  COFD[3715] = 1.58129026E-02;
  COFD[3716] = -2.25968450E+01;
  COFD[3717] = 5.21373152E+00;
  COFD[3718] = -4.11240905E-01;
  COFD[3719] = 1.58129026E-02;
  COFD[3720] = -2.16264924E+01;
  COFD[3721] = 4.62444880E+00;
  COFD[3722] = -3.16789032E-01;
  COFD[3723] = 1.10089656E-02;
  COFD[3724] = -2.16209549E+01;
  COFD[3725] = 4.62444880E+00;
  COFD[3726] = -3.16789032E-01;
  COFD[3727] = 1.10089656E-02;
  COFD[3728] = -2.16267421E+01;
  COFD[3729] = 4.62444880E+00;
  COFD[3730] = -3.16789032E-01;
  COFD[3731] = 1.10089656E-02;
  COFD[3732] = -2.03719013E+01;
  COFD[3733] = 3.96005658E+00;
  COFD[3734] = -2.15023838E-01;
  COFD[3735] = 5.99243668E-03;
  COFD[3736] = -2.03761364E+01;
  COFD[3737] = 3.96005658E+00;
  COFD[3738] = -2.15023838E-01;
  COFD[3739] = 5.99243668E-03;
  COFD[3740] = -1.97882319E+01;
  COFD[3741] = 3.62109503E+00;
  COFD[3742] = -1.63328103E-01;
  COFD[3743] = 3.45738977E-03;
  COFD[3744] = -1.90788962E+01;
  COFD[3745] = 3.24795923E+00;
  COFD[3746] = -1.07810281E-01;
  COFD[3747] = 7.81209780E-04;
  COFD[3748] = -1.83659502E+01;
  COFD[3749] = 2.88571035E+00;
  COFD[3750] = -5.45325785E-02;
  COFD[3751] = -1.76508613E-03;
  COFD[3752] = -1.77237799E+01;
  COFD[3753] = 2.55843008E+00;
  COFD[3754] = -6.32267950E-03;
  COFD[3755] = -4.07387397E-03;
  COFD[3756] = -1.76962230E+01;
  COFD[3757] = 2.53412632E+00;
  COFD[3758] = -2.71561927E-03;
  COFD[3759] = -4.24696836E-03;
  COFD[3760] = -1.72790079E+01;
  COFD[3761] = 2.32181806E+00;
  COFD[3762] = 2.85392164E-02;
  COFD[3763] = -5.73831066E-03;
  COFD[3764] = -1.64316331E+01;
  COFD[3765] = 1.88148066E+00;
  COFD[3766] = 9.25151744E-02;
  COFD[3767] = -8.75875844E-03;
  COFD[3768] = -1.60744402E+01;
  COFD[3769] = 1.70515393E+00;
  COFD[3770] = 1.17964458E-01;
  COFD[3771] = -9.95487344E-03;
  COFD[3772] = -1.56831472E+01;
  COFD[3773] = 1.51210139E+00;
  COFD[3774] = 1.45705555E-01;
  COFD[3775] = -1.12527582E-02;
  COFD[3776] = -2.16312330E+01;
  COFD[3777] = 5.36160575E+00;
  COFD[3778] = -4.69678973E-01;
  COFD[3779] = 1.99069834E-02;
  COFD[3780] = -1.54004377E+01;
  COFD[3781] = 1.38485345E+00;
  COFD[3782] = 1.63989484E-01;
  COFD[3783] = -1.21088577E-02;
  COFD[3784] = -2.07168035E+01;
  COFD[3785] = 5.58797624E+00;
  COFD[3786] = -4.84623564E-01;
  COFD[3787] = 1.99817352E-02;
  COFD[3788] = -2.08840874E+01;
  COFD[3789] = 5.23394577E+00;
  COFD[3790] = -4.55294957E-01;
  COFD[3791] = 1.93696950E-02;
  COFD[3792] = -2.09107212E+01;
  COFD[3793] = 5.23394577E+00;
  COFD[3794] = -4.55294957E-01;
  COFD[3795] = 1.93696950E-02;
  COFD[3796] = -2.21426228E+01;
  COFD[3797] = 5.47842731E+00;
  COFD[3798] = -4.79952894E-01;
  COFD[3799] = 2.01568406E-02;
  COFD[3800] = -1.73560950E+01;
  COFD[3801] = 4.33584314E+00;
  COFD[3802] = -3.48938603E-01;
  COFD[3803] = 1.51686902E-02;
  COFD[3804] = -1.68531525E+01;
  COFD[3805] = 2.76314344E+00;
  COFD[3806] = -3.65464735E-02;
  COFD[3807] = -2.62462500E-03;
  COFD[3808] = -2.21542057E+01;
  COFD[3809] = 5.47842731E+00;
  COFD[3810] = -4.79952894E-01;
  COFD[3811] = 2.01568406E-02;
  COFD[3812] = -2.21305975E+01;
  COFD[3813] = 5.47842731E+00;
  COFD[3814] = -4.79952894E-01;
  COFD[3815] = 2.01568406E-02;
  COFD[3816] = -2.23961398E+01;
  COFD[3817] = 5.58969231E+00;
  COFD[3818] = -4.85146102E-01;
  COFD[3819] = 2.00165025E-02;
  COFD[3820] = -2.24147233E+01;
  COFD[3821] = 5.59714923E+00;
  COFD[3822] = -4.86899964E-01;
  COFD[3823] = 2.01242645E-02;
  COFD[3824] = -1.85405054E+01;
  COFD[3825] = 3.34746301E+00;
  COFD[3826] = -1.22575165E-01;
  COFD[3827] = 1.49120224E-03;
  COFD[3828] = -2.18744947E+01;
  COFD[3829] = 5.40581593E+00;
  COFD[3830] = -4.72804333E-01;
  COFD[3831] = 1.99370903E-02;
  COFD[3832] = -2.24455334E+01;
  COFD[3833] = 5.21716989E+00;
  COFD[3834] = -4.11825254E-01;
  COFD[3835] = 1.58436458E-02;
  COFD[3836] = -2.26097243E+01;
  COFD[3837] = 5.40751776E+00;
  COFD[3838] = -4.44796499E-01;
  COFD[3839] = 1.76008889E-02;
  COFD[3840] = -2.18596576E+01;
  COFD[3841] = 4.96464859E+00;
  COFD[3842] = -3.70657753E-01;
  COFD[3843] = 1.37267014E-02;
  COFD[3844] = -2.23212614E+01;
  COFD[3845] = 5.16629594E+00;
  COFD[3846] = -4.03322392E-01;
  COFD[3847] = 1.53998221E-02;
  COFD[3848] = -1.97003035E+01;
  COFD[3849] = 3.79996103E+00;
  COFD[3850] = -1.90497694E-01;
  COFD[3851] = 4.78603172E-03;
  COFD[3852] = -2.23956511E+01;
  COFD[3853] = 5.07018801E+00;
  COFD[3854] = -3.87535402E-01;
  COFD[3855] = 1.45842225E-02;
  COFD[3856] = -2.24044966E+01;
  COFD[3857] = 5.07018801E+00;
  COFD[3858] = -3.87535402E-01;
  COFD[3859] = 1.45842225E-02;
  COFD[3860] = -2.12774421E+01;
  COFD[3861] = 4.41372939E+00;
  COFD[3862] = -2.83873783E-01;
  COFD[3863] = 9.36532569E-03;
  COFD[3864] = -2.12716426E+01;
  COFD[3865] = 4.41372939E+00;
  COFD[3866] = -2.83873783E-01;
  COFD[3867] = 9.36532569E-03;
  COFD[3868] = -2.12777037E+01;
  COFD[3869] = 4.41372939E+00;
  COFD[3870] = -2.83873783E-01;
  COFD[3871] = 9.36532569E-03;
  COFD[3872] = -1.99572085E+01;
  COFD[3873] = 3.72188482E+00;
  COFD[3874] = -1.78555760E-01;
  COFD[3875] = 4.19961806E-03;
  COFD[3876] = -1.99616752E+01;
  COFD[3877] = 3.72188482E+00;
  COFD[3878] = -1.78555760E-01;
  COFD[3879] = 4.19961806E-03;
  COFD[3880] = -1.91738684E+01;
  COFD[3881] = 3.29927367E+00;
  COFD[3882] = -1.15421965E-01;
  COFD[3883] = 1.14722453E-03;
  COFD[3884] = -1.83659502E+01;
  COFD[3885] = 2.88571035E+00;
  COFD[3886] = -5.45325785E-02;
  COFD[3887] = -1.76508613E-03;
  COFD[3888] = -1.76386321E+01;
  COFD[3889] = 2.51509845E+00;
  COFD[3890] = 1.02670796E-04;
  COFD[3891] = -4.38201691E-03;
  COFD[3892] = -1.70866988E+01;
  COFD[3893] = 2.22837243E+00;
  COFD[3894] = 4.21945850E-02;
  COFD[3895] = -6.38593308E-03;
  COFD[3896] = -1.70480275E+01;
  COFD[3897] = 2.19974886E+00;
  COFD[3898] = 4.63679485E-02;
  COFD[3899] = -6.58350992E-03;
  COFD[3900] = -1.65620353E+01;
  COFD[3901] = 1.95984412E+00;
  COFD[3902] = 8.11931925E-02;
  COFD[3903] = -8.22685123E-03;
  COFD[3904] = -1.56095653E+01;
  COFD[3905] = 1.47685497E+00;
  COFD[3906] = 1.50778364E-01;
  COFD[3907] = -1.14906180E-02;
  COFD[3908] = -1.52407610E+01;
  COFD[3909] = 1.29532808E+00;
  COFD[3910] = 1.76825909E-01;
  COFD[3911] = -1.27084392E-02;
  COFD[3912] = -1.48245663E+01;
  COFD[3913] = 1.09196780E+00;
  COFD[3914] = 2.05935790E-01;
  COFD[3915] = -1.40664564E-02;
  COFD[3916] = -2.18580027E+01;
  COFD[3917] = 5.40322773E+00;
  COFD[3918] = -4.72630192E-01;
  COFD[3919] = 1.99360102E-02;
  COFD[3920] = -1.46746702E+01;
  COFD[3921] = 1.02870676E+00;
  COFD[3922] = 2.14984638E-01;
  COFD[3923] = -1.44879090E-02;
  COFD[3924] = -2.08359032E+01;
  COFD[3925] = 5.58518783E+00;
  COFD[3926] = -4.81282144E-01;
  COFD[3927] = 1.97176495E-02;
  COFD[3928] = -2.12416101E+01;
  COFD[3929] = 5.33751161E+00;
  COFD[3930] = -4.67531962E-01;
  COFD[3931] = 1.98534391E-02;
  COFD[3932] = -2.12686288E+01;
  COFD[3933] = 5.33751161E+00;
  COFD[3934] = -4.67531962E-01;
  COFD[3935] = 1.98534391E-02;
  COFD[3936] = -2.24428055E+01;
  COFD[3937] = 5.55319328E+00;
  COFD[3938] = -4.87759313E-01;
  COFD[3939] = 2.04205124E-02;
  COFD[3940] = -1.76841386E+01;
  COFD[3941] = 4.43623609E+00;
  COFD[3942] = -3.61391880E-01;
  COFD[3943] = 1.56853368E-02;
  COFD[3944] = -1.62777166E+01;
  COFD[3945] = 2.46665777E+00;
  COFD[3946] = 7.25684399E-03;
  COFD[3947] = -4.72424494E-03;
  COFD[3948] = -2.24546921E+01;
  COFD[3949] = 5.55319328E+00;
  COFD[3950] = -4.87759313E-01;
  COFD[3951] = 2.04205124E-02;
  COFD[3952] = -2.24304725E+01;
  COFD[3953] = 5.55319328E+00;
  COFD[3954] = -4.87759313E-01;
  COFD[3955] = 2.04205124E-02;
  COFD[3956] = -2.25070771E+01;
  COFD[3957] = 5.58488808E+00;
  COFD[3958] = -4.81505670E-01;
  COFD[3959] = 1.97377350E-02;
  COFD[3960] = -2.25078396E+01;
  COFD[3961] = 5.58461787E+00;
  COFD[3962] = -4.82178861E-01;
  COFD[3963] = 1.97950972E-02;
  COFD[3964] = -1.80138627E+01;
  COFD[3965] = 3.07345302E+00;
  COFD[3966] = -8.20536856E-02;
  COFD[3967] = -4.51137426E-04;
  COFD[3968] = -2.21149546E+01;
  COFD[3969] = 5.45837402E+00;
  COFD[3970] = -4.77716491E-01;
  COFD[3971] = 2.00742141E-02;
  COFD[3972] = -2.23014058E+01;
  COFD[3973] = 5.09843164E+00;
  COFD[3974] = -3.92118361E-01;
  COFD[3975] = 1.48192579E-02;
  COFD[3976] = -2.25351154E+01;
  COFD[3977] = 5.32200412E+00;
  COFD[3978] = -4.29810296E-01;
  COFD[3979] = 1.67968656E-02;
  COFD[3980] = -2.15864547E+01;
  COFD[3981] = 4.79387853E+00;
  COFD[3982] = -3.43720861E-01;
  COFD[3983] = 1.23700578E-02;
  COFD[3984] = -2.21433222E+01;
  COFD[3985] = 5.03586935E+00;
  COFD[3986] = -3.81976071E-01;
  COFD[3987] = 1.42995069E-02;
  COFD[3988] = -1.92768391E+01;
  COFD[3989] = 3.56517881E+00;
  COFD[3990] = -1.54966016E-01;
  COFD[3991] = 3.05232702E-03;
  COFD[3992] = -2.21481001E+01;
  COFD[3993] = 4.91019065E+00;
  COFD[3994] = -3.62076012E-01;
  COFD[3995] = 1.32946182E-02;
  COFD[3996] = -2.21572195E+01;
  COFD[3997] = 4.91019065E+00;
  COFD[3998] = -3.62076012E-01;
  COFD[3999] = 1.32946182E-02;
  COFD[4000] = -2.08875172E+01;
  COFD[4001] = 4.19325533E+00;
  COFD[4002] = -2.50186251E-01;
  COFD[4003] = 7.70758812E-03;
  COFD[4004] = -2.08814960E+01;
  COFD[4005] = 4.19325533E+00;
  COFD[4006] = -2.50186251E-01;
  COFD[4007] = 7.70758812E-03;
  COFD[4008] = -2.08877888E+01;
  COFD[4009] = 4.19325533E+00;
  COFD[4010] = -2.50186251E-01;
  COFD[4011] = 7.70758812E-03;
  COFD[4012] = -1.94608337E+01;
  COFD[4013] = 3.45627503E+00;
  COFD[4014] = -1.38749652E-01;
  COFD[4015] = 2.26961182E-03;
  COFD[4016] = -1.94654989E+01;
  COFD[4017] = 3.45627503E+00;
  COFD[4018] = -1.38749652E-01;
  COFD[4019] = 2.26961182E-03;
  COFD[4020] = -1.86224107E+01;
  COFD[4021] = 3.01293116E+00;
  COFD[4022] = -7.31811485E-02;
  COFD[4023] = -8.74503577E-04;
  COFD[4024] = -1.77237799E+01;
  COFD[4025] = 2.55843008E+00;
  COFD[4026] = -6.32267950E-03;
  COFD[4027] = -4.07387397E-03;
  COFD[4028] = -1.70866988E+01;
  COFD[4029] = 2.22837243E+00;
  COFD[4030] = 4.21945850E-02;
  COFD[4031] = -6.38593308E-03;
  COFD[4032] = -1.64603499E+01;
  COFD[4033] = 1.91201651E+00;
  COFD[4034] = 8.81041778E-02;
  COFD[4035] = -8.55154551E-03;
  COFD[4036] = -1.64162642E+01;
  COFD[4037] = 1.88142640E+00;
  COFD[4038] = 9.25230102E-02;
  COFD[4039] = -8.75912646E-03;
  COFD[4040] = -1.58768288E+01;
  COFD[4041] = 1.61945878E+00;
  COFD[4042] = 1.30286421E-01;
  COFD[4043] = -1.05317289E-02;
  COFD[4044] = -1.48753967E+01;
  COFD[4045] = 1.11690017E+00;
  COFD[4046] = 2.02362955E-01;
  COFD[4047] = -1.38996262E-02;
  COFD[4048] = -1.45087618E+01;
  COFD[4049] = 9.35690838E-01;
  COFD[4050] = 2.28295914E-01;
  COFD[4051] = -1.51088791E-02;
  COFD[4052] = -1.40894144E+01;
  COFD[4053] = 7.31458802E-01;
  COFD[4054] = 2.57430647E-01;
  COFD[4055] = -1.64638268E-02;
  COFD[4056] = -2.20902743E+01;
  COFD[4057] = 5.45237285E+00;
  COFD[4058] = -4.77075672E-01;
  COFD[4059] = 2.00518642E-02;
  COFD[4060] = -1.46203241E+01;
  COFD[4061] = 9.94330848E-01;
  COFD[4062] = 2.19902430E-01;
  COFD[4063] = -1.47171735E-02;
  COFD[4064] = -2.08746358E+01;
  COFD[4065] = 5.58521622E+00;
  COFD[4066] = -4.81014671E-01;
  COFD[4067] = 1.96952964E-02;
  COFD[4068] = -2.12927711E+01;
  COFD[4069] = 5.34414631E+00;
  COFD[4070] = -4.68238030E-01;
  COFD[4071] = 1.98779007E-02;
  COFD[4072] = -2.13198145E+01;
  COFD[4073] = 5.34414631E+00;
  COFD[4074] = -4.68238030E-01;
  COFD[4075] = 1.98779007E-02;
  COFD[4076] = -2.24883897E+01;
  COFD[4077] = 5.55793029E+00;
  COFD[4078] = -4.88170533E-01;
  COFD[4079] = 2.04302911E-02;
  COFD[4080] = -1.77370430E+01;
  COFD[4081] = 4.44459213E+00;
  COFD[4082] = -3.62399607E-01;
  COFD[4083] = 1.57258496E-02;
  COFD[4084] = -1.62527662E+01;
  COFD[4085] = 2.44062989E+00;
  COFD[4086] = 1.10981222E-02;
  COFD[4087] = -4.90788998E-03;
  COFD[4088] = -2.25002960E+01;
  COFD[4089] = 5.55793029E+00;
  COFD[4090] = -4.88170533E-01;
  COFD[4091] = 2.04302911E-02;
  COFD[4092] = -2.24760366E+01;
  COFD[4093] = 5.55793029E+00;
  COFD[4094] = -4.88170533E-01;
  COFD[4095] = 2.04302911E-02;
  COFD[4096] = -2.25413162E+01;
  COFD[4097] = 5.58519141E+00;
  COFD[4098] = -4.81277367E-01;
  COFD[4099] = 1.97172346E-02;
  COFD[4100] = -2.25423020E+01;
  COFD[4101] = 5.58490857E+00;
  COFD[4102] = -4.81943660E-01;
  COFD[4103] = 1.97740434E-02;
  COFD[4104] = -1.79714284E+01;
  COFD[4105] = 3.04109524E+00;
  COFD[4106] = -7.73097243E-02;
  COFD[4107] = -6.77522484E-04;
  COFD[4108] = -2.21693686E+01;
  COFD[4109] = 5.46715955E+00;
  COFD[4110] = -4.78699053E-01;
  COFD[4111] = 2.01106334E-02;
  COFD[4112] = -2.23041648E+01;
  COFD[4113] = 5.08480808E+00;
  COFD[4114] = -3.89912767E-01;
  COFD[4115] = 1.47062570E-02;
  COFD[4116] = -2.25457395E+01;
  COFD[4117] = 5.31236460E+00;
  COFD[4118] = -4.28177190E-01;
  COFD[4119] = 1.67109235E-02;
  COFD[4120] = -2.15876129E+01;
  COFD[4121] = 4.77996453E+00;
  COFD[4122] = -3.41483820E-01;
  COFD[4123] = 1.22561537E-02;
  COFD[4124] = -2.21429975E+01;
  COFD[4125] = 5.02172689E+00;
  COFD[4126] = -3.79713172E-01;
  COFD[4127] = 1.41845745E-02;
  COFD[4128] = -1.92450104E+01;
  COFD[4129] = 3.53733698E+00;
  COFD[4130] = -1.50812570E-01;
  COFD[4131] = 2.85140727E-03;
  COFD[4132] = -2.21417169E+01;
  COFD[4133] = 4.89399517E+00;
  COFD[4134] = -3.59520327E-01;
  COFD[4135] = 1.31658681E-02;
  COFD[4136] = -2.21508543E+01;
  COFD[4137] = 4.89399517E+00;
  COFD[4138] = -3.59520327E-01;
  COFD[4139] = 1.31658681E-02;
  COFD[4140] = -2.08615626E+01;
  COFD[4141] = 4.16888533E+00;
  COFD[4142] = -2.46500133E-01;
  COFD[4143] = 7.52727544E-03;
  COFD[4144] = -2.08555268E+01;
  COFD[4145] = 4.16888533E+00;
  COFD[4146] = -2.46500133E-01;
  COFD[4147] = 7.52727544E-03;
  COFD[4148] = -2.08618348E+01;
  COFD[4149] = 4.16888533E+00;
  COFD[4150] = -2.46500133E-01;
  COFD[4151] = 7.52727544E-03;
  COFD[4152] = -1.94327462E+01;
  COFD[4153] = 3.43141909E+00;
  COFD[4154] = -1.35054012E-01;
  COFD[4155] = 2.09180741E-03;
  COFD[4156] = -1.94374245E+01;
  COFD[4157] = 3.43141909E+00;
  COFD[4158] = -1.35054012E-01;
  COFD[4159] = 2.09180741E-03;
  COFD[4160] = -1.85739749E+01;
  COFD[4161] = 2.97960589E+00;
  COFD[4162] = -6.82975765E-02;
  COFD[4163] = -1.10754786E-03;
  COFD[4164] = -1.76962230E+01;
  COFD[4165] = 2.53412632E+00;
  COFD[4166] = -2.71561927E-03;
  COFD[4167] = -4.24696836E-03;
  COFD[4168] = -1.70480275E+01;
  COFD[4169] = 2.19974886E+00;
  COFD[4170] = 4.63679485E-02;
  COFD[4171] = -6.58350992E-03;
  COFD[4172] = -1.64162642E+01;
  COFD[4173] = 1.88142640E+00;
  COFD[4174] = 9.25230102E-02;
  COFD[4175] = -8.75912646E-03;
  COFD[4176] = -1.63717733E+01;
  COFD[4177] = 1.85076855E+00;
  COFD[4178] = 9.69498546E-02;
  COFD[4179] = -8.96701578E-03;
  COFD[4180] = -1.58282415E+01;
  COFD[4181] = 1.58723024E+00;
  COFD[4182] = 1.34913922E-01;
  COFD[4183] = -1.07480061E-02;
  COFD[4184] = -1.48216698E+01;
  COFD[4185] = 1.08277276E+00;
  COFD[4186] = 2.07252450E-01;
  COFD[4187] = -1.41278714E-02;
  COFD[4188] = -1.44527111E+01;
  COFD[4189] = 9.00592968E-01;
  COFD[4190] = 2.33311114E-01;
  COFD[4191] = -1.53425385E-02;
  COFD[4192] = -1.40317416E+01;
  COFD[4193] = 6.95865823E-01;
  COFD[4194] = 2.62499652E-01;
  COFD[4195] = -1.66993047E-02;
  COFD[4196] = -2.21414190E+01;
  COFD[4197] = 5.45978982E+00;
  COFD[4198] = -4.77871946E-01;
  COFD[4199] = 2.00798414E-02;
  COFD[4200] = -1.40460915E+01;
  COFD[4201] = 7.18763378E-01;
  COFD[4202] = 2.59237872E-01;
  COFD[4203] = -1.65477278E-02;
  COFD[4204] = -2.09388450E+01;
  COFD[4205] = 5.57974996E+00;
  COFD[4206] = -4.78112864E-01;
  COFD[4207] = 1.94826410E-02;
  COFD[4208] = -2.14367497E+01;
  COFD[4209] = 5.37405372E+00;
  COFD[4210] = -4.70540525E-01;
  COFD[4211] = 1.99137160E-02;
  COFD[4212] = -2.14640843E+01;
  COFD[4213] = 5.37405372E+00;
  COFD[4214] = -4.70540525E-01;
  COFD[4215] = 1.99137160E-02;
  COFD[4216] = -2.26547956E+01;
  COFD[4217] = 5.59528609E+00;
  COFD[4218] = -4.91473190E-01;
  COFD[4219] = 2.05131236E-02;
  COFD[4220] = -1.79421312E+01;
  COFD[4221] = 4.50796148E+00;
  COFD[4222] = -3.69986604E-01;
  COFD[4223] = 1.60286525E-02;
  COFD[4224] = -1.58057803E+01;
  COFD[4225] = 2.22000952E+00;
  COFD[4226] = 4.34143206E-02;
  COFD[4227] = -6.44371681E-03;
  COFD[4228] = -2.26669368E+01;
  COFD[4229] = 5.59528609E+00;
  COFD[4230] = -4.91473190E-01;
  COFD[4231] = 2.05131236E-02;
  COFD[4232] = -2.26422048E+01;
  COFD[4233] = 5.59528609E+00;
  COFD[4234] = -4.91473190E-01;
  COFD[4235] = 2.05131236E-02;
  COFD[4236] = -2.26104723E+01;
  COFD[4237] = 5.58175450E+00;
  COFD[4238] = -4.78660487E-01;
  COFD[4239] = 1.95178220E-02;
  COFD[4240] = -2.26201690E+01;
  COFD[4241] = 5.58491601E+00;
  COFD[4242] = -4.79798668E-01;
  COFD[4243] = 1.95960400E-02;
  COFD[4244] = -1.74160262E+01;
  COFD[4245] = 2.77201495E+00;
  COFD[4246] = -3.78503295E-02;
  COFD[4247] = -2.56220054E-03;
  COFD[4248] = -2.23927590E+01;
  COFD[4249] = 5.52880430E+00;
  COFD[4250] = -4.85323223E-01;
  COFD[4251] = 2.03436366E-02;
  COFD[4252] = -2.21269336E+01;
  COFD[4253] = 4.97192306E+00;
  COFD[4254] = -3.71804005E-01;
  COFD[4255] = 1.37844212E-02;
  COFD[4256] = -2.24546794E+01;
  COFD[4257] = 5.23807779E+00;
  COFD[4258] = -4.15451615E-01;
  COFD[4259] = 1.60367849E-02;
  COFD[4260] = -2.13890556E+01;
  COFD[4261] = 4.65974918E+00;
  COFD[4262] = -3.22390767E-01;
  COFD[4263] = 1.12918650E-02;
  COFD[4264] = -2.19256559E+01;
  COFD[4265] = 4.89350049E+00;
  COFD[4266] = -3.59442064E-01;
  COFD[4267] = 1.31619214E-02;
  COFD[4268] = -1.88405662E+01;
  COFD[4269] = 3.33125761E+00;
  COFD[4270] = -1.20168824E-01;
  COFD[4271] = 1.37545815E-03;
  COFD[4272] = -2.19360355E+01;
  COFD[4273] = 4.77045497E+00;
  COFD[4274] = -3.39955491E-01;
  COFD[4275] = 1.21784372E-02;
  COFD[4276] = -2.19453866E+01;
  COFD[4277] = 4.77045497E+00;
  COFD[4278] = -3.39955491E-01;
  COFD[4279] = 1.21784372E-02;
  COFD[4280] = -2.04884449E+01;
  COFD[4281] = 3.97419032E+00;
  COFD[4282] = -2.17151244E-01;
  COFD[4283] = 6.09602105E-03;
  COFD[4284] = -2.04822338E+01;
  COFD[4285] = 3.97419032E+00;
  COFD[4286] = -2.17151244E-01;
  COFD[4287] = 6.09602105E-03;
  COFD[4288] = -2.04887251E+01;
  COFD[4289] = 3.97419032E+00;
  COFD[4290] = -2.17151244E-01;
  COFD[4291] = 6.09602105E-03;
  COFD[4292] = -1.90327818E+01;
  COFD[4293] = 3.22670299E+00;
  COFD[4294] = -1.04657166E-01;
  COFD[4295] = 6.29620572E-04;
  COFD[4296] = -1.90376189E+01;
  COFD[4297] = 3.22670299E+00;
  COFD[4298] = -1.04657166E-01;
  COFD[4299] = 6.29620572E-04;
  COFD[4300] = -1.80237996E+01;
  COFD[4301] = 2.70981781E+00;
  COFD[4302] = -2.87009191E-02;
  COFD[4303] = -3.00031484E-03;
  COFD[4304] = -1.72790079E+01;
  COFD[4305] = 2.32181806E+00;
  COFD[4306] = 2.85392164E-02;
  COFD[4307] = -5.73831066E-03;
  COFD[4308] = -1.65620353E+01;
  COFD[4309] = 1.95984412E+00;
  COFD[4310] = 8.11931925E-02;
  COFD[4311] = -8.22685123E-03;
  COFD[4312] = -1.58768288E+01;
  COFD[4313] = 1.61945878E+00;
  COFD[4314] = 1.30286421E-01;
  COFD[4315] = -1.05317289E-02;
  COFD[4316] = -1.58282415E+01;
  COFD[4317] = 1.58723024E+00;
  COFD[4318] = 1.34913922E-01;
  COFD[4319] = -1.07480061E-02;
  COFD[4320] = -1.52744229E+01;
  COFD[4321] = 1.31960863E+00;
  COFD[4322] = 1.73344299E-01;
  COFD[4323] = -1.25457703E-02;
  COFD[4324] = -1.42557605E+01;
  COFD[4325] = 8.10499162E-01;
  COFD[4326] = 2.46166208E-01;
  COFD[4327] = -1.59404478E-02;
  COFD[4328] = -1.38696867E+01;
  COFD[4329] = 6.20774670E-01;
  COFD[4330] = 2.73203413E-01;
  COFD[4331] = -1.71972787E-02;
  COFD[4332] = -1.34919805E+01;
  COFD[4333] = 4.34069354E-01;
  COFD[4334] = 2.99858223E-01;
  COFD[4335] = -1.84358359E-02;
  COFD[4336] = -2.23702158E+01;
  COFD[4337] = 5.52375635E+00;
  COFD[4338] = -4.84828265E-01;
  COFD[4339] = 2.03285256E-02;
  COFD[4340] = -1.30635373E+01;
  COFD[4341] = 2.26455242E-01;
  COFD[4342] = 3.29362482E-01;
  COFD[4343] = -1.98017964E-02;
  COFD[4344] = -2.09750990E+01;
  COFD[4345] = 5.50429364E+00;
  COFD[4346] = -4.63372495E-01;
  COFD[4347] = 1.86455814E-02;
  COFD[4348] = -2.17411393E+01;
  COFD[4349] = 5.41958585E+00;
  COFD[4350] = -4.73477571E-01;
  COFD[4351] = 1.99215358E-02;
  COFD[4352] = -2.17689618E+01;
  COFD[4353] = 5.41958585E+00;
  COFD[4354] = -4.73477571E-01;
  COFD[4355] = 1.99215358E-02;
  COFD[4356] = -2.28924392E+01;
  COFD[4357] = 5.61013561E+00;
  COFD[4358] = -4.89933558E-01;
  COFD[4359] = 2.03098561E-02;
  COFD[4360] = -1.84634396E+01;
  COFD[4361] = 4.65797225E+00;
  COFD[4362] = -3.88483952E-01;
  COFD[4363] = 1.67915384E-02;
  COFD[4364] = -1.49248327E+01;
  COFD[4365] = 1.76546946E+00;
  COFD[4366] = 1.09258240E-01;
  COFD[4367] = -9.54522038E-03;
  COFD[4368] = -2.29049835E+01;
  COFD[4369] = 5.61013561E+00;
  COFD[4370] = -4.89933558E-01;
  COFD[4371] = 2.03098561E-02;
  COFD[4372] = -2.28794409E+01;
  COFD[4373] = 5.61013561E+00;
  COFD[4374] = -4.89933558E-01;
  COFD[4375] = 2.03098561E-02;
  COFD[4376] = -2.26368459E+01;
  COFD[4377] = 5.50714270E+00;
  COFD[4378] = -4.64060018E-01;
  COFD[4379] = 1.86881341E-02;
  COFD[4380] = -2.26685949E+01;
  COFD[4381] = 5.51963910E+00;
  COFD[4382] = -4.66555705E-01;
  COFD[4383] = 1.88313890E-02;
  COFD[4384] = -1.66390101E+01;
  COFD[4385] = 2.35716270E+00;
  COFD[4386] = 2.33630190E-02;
  COFD[4387] = -5.49227499E-03;
  COFD[4388] = -2.27595631E+01;
  COFD[4389] = 5.59981860E+00;
  COFD[4390] = -4.91614072E-01;
  COFD[4391] = 2.05016331E-02;
  COFD[4392] = -2.17986999E+01;
  COFD[4393] = 4.73948321E+00;
  COFD[4394] = -3.35004943E-01;
  COFD[4395] = 1.19275825E-02;
  COFD[4396] = -2.22774154E+01;
  COFD[4397] = 5.07362417E+00;
  COFD[4398] = -3.88094414E-01;
  COFD[4399] = 1.46129219E-02;
  COFD[4400] = -2.10053277E+01;
  COFD[4401] = 4.40732366E+00;
  COFD[4402] = -2.82889322E-01;
  COFD[4403] = 9.31663975E-03;
  COFD[4404] = -2.15962977E+01;
  COFD[4405] = 4.66482266E+00;
  COFD[4406] = -3.23189752E-01;
  COFD[4407] = 1.13320181E-02;
  COFD[4408] = -1.80427104E+01;
  COFD[4409] = 2.90760528E+00;
  COFD[4410] = -5.77438179E-02;
  COFD[4411] = -1.61157463E-03;
  COFD[4412] = -2.16062590E+01;
  COFD[4413] = 4.54192945E+00;
  COFD[4414] = -3.03755204E-01;
  COFD[4415] = 1.03536977E-02;
  COFD[4416] = -2.16159805E+01;
  COFD[4417] = 4.54192945E+00;
  COFD[4418] = -3.03755204E-01;
  COFD[4419] = 1.03536977E-02;
  COFD[4420] = -2.00028585E+01;
  COFD[4421] = 3.68035914E+00;
  COFD[4422] = -1.72246313E-01;
  COFD[4423] = 3.89112485E-03;
  COFD[4424] = -1.99963391E+01;
  COFD[4425] = 3.68035914E+00;
  COFD[4426] = -1.72246313E-01;
  COFD[4427] = 3.89112485E-03;
  COFD[4428] = -2.00031527E+01;
  COFD[4429] = 3.68035914E+00;
  COFD[4430] = -1.72246313E-01;
  COFD[4431] = 3.89112485E-03;
  COFD[4432] = -1.81581189E+01;
  COFD[4433] = 2.77116239E+00;
  COFD[4434] = -3.77250246E-02;
  COFD[4435] = -2.56819995E-03;
  COFD[4436] = -1.81632392E+01;
  COFD[4437] = 2.77116239E+00;
  COFD[4438] = -3.77250246E-02;
  COFD[4439] = -2.56819995E-03;
  COFD[4440] = -1.72678897E+01;
  COFD[4441] = 2.30401734E+00;
  COFD[4442] = 3.11443222E-02;
  COFD[4443] = -5.86207495E-03;
  COFD[4444] = -1.64316331E+01;
  COFD[4445] = 1.88148066E+00;
  COFD[4446] = 9.25151744E-02;
  COFD[4447] = -8.75875844E-03;
  COFD[4448] = -1.56095653E+01;
  COFD[4449] = 1.47685497E+00;
  COFD[4450] = 1.50778364E-01;
  COFD[4451] = -1.14906180E-02;
  COFD[4452] = -1.48753967E+01;
  COFD[4453] = 1.11690017E+00;
  COFD[4454] = 2.02362955E-01;
  COFD[4455] = -1.38996262E-02;
  COFD[4456] = -1.48216698E+01;
  COFD[4457] = 1.08277276E+00;
  COFD[4458] = 2.07252450E-01;
  COFD[4459] = -1.41278714E-02;
  COFD[4460] = -1.42557605E+01;
  COFD[4461] = 8.10499162E-01;
  COFD[4462] = 2.46166208E-01;
  COFD[4463] = -1.59404478E-02;
  COFD[4464] = -1.32691270E+01;
  COFD[4465] = 3.16452414E-01;
  COFD[4466] = 3.16572048E-01;
  COFD[4467] = -1.92093720E-02;
  COFD[4468] = -1.29160144E+01;
  COFD[4469] = 1.39889301E-01;
  COFD[4470] = 3.41628534E-01;
  COFD[4471] = -2.03678767E-02;
  COFD[4472] = -1.24841063E+01;
  COFD[4473] = -6.86597662E-02;
  COFD[4474] = 3.71153707E-01;
  COFD[4475] = -2.17314375E-02;
  COFD[4476] = -2.27467840E+01;
  COFD[4477] = 5.59873321E+00;
  COFD[4478] = -4.91665779E-01;
  COFD[4479] = 2.05114831E-02;
  COFD[4480] = -1.27059833E+01;
  COFD[4481] = 4.81478906E-02;
  COFD[4482] = 3.54630676E-01;
  COFD[4483] = -2.09687597E-02;
  COFD[4484] = -2.09816459E+01;
  COFD[4485] = 5.49082104E+00;
  COFD[4486] = -4.60014303E-01;
  COFD[4487] = 1.84365627E-02;
  COFD[4488] = -2.18770313E+01;
  COFD[4489] = 5.46038651E+00;
  COFD[4490] = -4.77939293E-01;
  COFD[4491] = 2.00823652E-02;
  COFD[4492] = -2.19052670E+01;
  COFD[4493] = 5.46038651E+00;
  COFD[4494] = -4.77939293E-01;
  COFD[4495] = 2.00823652E-02;
  COFD[4496] = -2.29058182E+01;
  COFD[4497] = 5.59504443E+00;
  COFD[4498] = -4.86415566E-01;
  COFD[4499] = 2.00947399E-02;
  COFD[4500] = -1.85877757E+01;
  COFD[4501] = 4.69975029E+00;
  COFD[4502] = -3.93412211E-01;
  COFD[4503] = 1.69852534E-02;
  COFD[4504] = -1.45392396E+01;
  COFD[4505] = 1.58706272E+00;
  COFD[4506] = 1.34937972E-01;
  COFD[4507] = -1.07491300E-02;
  COFD[4508] = -2.29187135E+01;
  COFD[4509] = 5.59504443E+00;
  COFD[4510] = -4.86415566E-01;
  COFD[4511] = 2.00947399E-02;
  COFD[4512] = -2.28924656E+01;
  COFD[4513] = 5.59504443E+00;
  COFD[4514] = -4.86415566E-01;
  COFD[4515] = 2.00947399E-02;
  COFD[4516] = -2.26543431E+01;
  COFD[4517] = 5.49570925E+00;
  COFD[4518] = -4.60969345E-01;
  COFD[4519] = 1.84906305E-02;
  COFD[4520] = -2.26705837E+01;
  COFD[4521] = 5.50119356E+00;
  COFD[4522] = -4.62439469E-01;
  COFD[4523] = 1.85841071E-02;
  COFD[4524] = -1.63277465E+01;
  COFD[4525] = 2.20684400E+00;
  COFD[4526] = 4.53338465E-02;
  COFD[4527] = -6.53458896E-03;
  COFD[4528] = -2.28218040E+01;
  COFD[4529] = 5.60692017E+00;
  COFD[4530] = -4.91295058E-01;
  COFD[4531] = 2.04387644E-02;
  COFD[4532] = -2.16564571E+01;
  COFD[4533] = 4.65505428E+00;
  COFD[4534] = -3.21651467E-01;
  COFD[4535] = 1.12547138E-02;
  COFD[4536] = -2.21555521E+01;
  COFD[4537] = 5.00070625E+00;
  COFD[4538] = -3.76355283E-01;
  COFD[4539] = 1.40141622E-02;
  COFD[4540] = -2.08019949E+01;
  COFD[4541] = 4.29990973E+00;
  COFD[4542] = -2.66411377E-01;
  COFD[4543] = 8.50361424E-03;
  COFD[4544] = -2.14611157E+01;
  COFD[4545] = 4.58545934E+00;
  COFD[4546] = -3.10556391E-01;
  COFD[4547] = 1.06931834E-02;
  COFD[4548] = -1.76677009E+01;
  COFD[4549] = 2.72650149E+00;
  COFD[4550] = -3.11601195E-02;
  COFD[4551] = -2.88242823E-03;
  COFD[4552] = -2.14350667E+01;
  COFD[4553] = 4.44599921E+00;
  COFD[4554] = -2.88841525E-01;
  COFD[4555] = 9.61119142E-03;
  COFD[4556] = -2.14451145E+01;
  COFD[4557] = 4.44599921E+00;
  COFD[4558] = -2.88841525E-01;
  COFD[4559] = 9.61119142E-03;
  COFD[4560] = -1.97359634E+01;
  COFD[4561] = 3.54254584E+00;
  COFD[4562] = -1.51588685E-01;
  COFD[4563] = 2.88891088E-03;
  COFD[4564] = -1.97291674E+01;
  COFD[4565] = 3.54254584E+00;
  COFD[4566] = -1.51588685E-01;
  COFD[4567] = 2.88891088E-03;
  COFD[4568] = -1.97362702E+01;
  COFD[4569] = 3.54254584E+00;
  COFD[4570] = -1.51588685E-01;
  COFD[4571] = 2.88891088E-03;
  COFD[4572] = -1.78252903E+01;
  COFD[4573] = 2.60486558E+00;
  COFD[4574] = -1.32252668E-02;
  COFD[4575] = -3.74170980E-03;
  COFD[4576] = -1.78306685E+01;
  COFD[4577] = 2.60486558E+00;
  COFD[4578] = -1.32252668E-02;
  COFD[4579] = -3.74170980E-03;
  COFD[4580] = -1.69703233E+01;
  COFD[4581] = 2.15337734E+00;
  COFD[4582] = 5.31165264E-02;
  COFD[4583] = -6.90242414E-03;
  COFD[4584] = -1.60744402E+01;
  COFD[4585] = 1.70515393E+00;
  COFD[4586] = 1.17964458E-01;
  COFD[4587] = -9.95487344E-03;
  COFD[4588] = -1.52407610E+01;
  COFD[4589] = 1.29532808E+00;
  COFD[4590] = 1.76825909E-01;
  COFD[4591] = -1.27084392E-02;
  COFD[4592] = -1.45087618E+01;
  COFD[4593] = 9.35690838E-01;
  COFD[4594] = 2.28295914E-01;
  COFD[4595] = -1.51088791E-02;
  COFD[4596] = -1.44527111E+01;
  COFD[4597] = 9.00592968E-01;
  COFD[4598] = 2.33311114E-01;
  COFD[4599] = -1.53425385E-02;
  COFD[4600] = -1.38696867E+01;
  COFD[4601] = 6.20774670E-01;
  COFD[4602] = 2.73203413E-01;
  COFD[4603] = -1.71972787E-02;
  COFD[4604] = -1.29160144E+01;
  COFD[4605] = 1.39889301E-01;
  COFD[4606] = 3.41628534E-01;
  COFD[4607] = -2.03678767E-02;
  COFD[4608] = -1.25394850E+01;
  COFD[4609] = -4.80135853E-02;
  COFD[4610] = 3.68241930E-01;
  COFD[4611] = -2.15974735E-02;
  COFD[4612] = -1.21103757E+01;
  COFD[4613] = -2.54815099E-01;
  COFD[4614] = 3.97347047E-01;
  COFD[4615] = -2.29334921E-02;
  COFD[4616] = -2.28072905E+01;
  COFD[4617] = 5.60504512E+00;
  COFD[4618] = -4.91228535E-01;
  COFD[4619] = 2.04427740E-02;
  COFD[4620] = -1.22701310E+01;
  COFD[4621] = -1.61500371E-01;
  COFD[4622] = 3.84217824E-01;
  COFD[4623] = -2.23309656E-02;
  COFD[4624] = -2.09649992E+01;
  COFD[4625] = 5.45055984E+00;
  COFD[4626] = -4.52626477E-01;
  COFD[4627] = 1.80297457E-02;
  COFD[4628] = -2.20665268E+01;
  COFD[4629] = 5.51007247E+00;
  COFD[4630] = -4.83411907E-01;
  COFD[4631] = 2.02812924E-02;
  COFD[4632] = -2.20949114E+01;
  COFD[4633] = 5.51007247E+00;
  COFD[4634] = -4.83411907E-01;
  COFD[4635] = 2.02812924E-02;
  COFD[4636] = -2.29515207E+01;
  COFD[4637] = 5.58219321E+00;
  COFD[4638] = -4.82941269E-01;
  COFD[4639] = 1.98711890E-02;
  COFD[4640] = -1.87542772E+01;
  COFD[4641] = 4.74513688E+00;
  COFD[4642] = -3.98725524E-01;
  COFD[4643] = 1.71922391E-02;
  COFD[4644] = -1.41324917E+01;
  COFD[4645] = 1.38727136E+00;
  COFD[4646] = 1.63642976E-01;
  COFD[4647] = -1.20926895E-02;
  COFD[4648] = -2.29645447E+01;
  COFD[4649] = 5.58219321E+00;
  COFD[4650] = -4.82941269E-01;
  COFD[4651] = 1.98711890E-02;
  COFD[4652] = -2.29380382E+01;
  COFD[4653] = 5.58219321E+00;
  COFD[4654] = -4.82941269E-01;
  COFD[4655] = 1.98711890E-02;
  COFD[4656] = -2.26384257E+01;
  COFD[4657] = 5.45743664E+00;
  COFD[4658] = -4.53877300E-01;
  COFD[4659] = 1.80982969E-02;
  COFD[4660] = -2.26836499E+01;
  COFD[4661] = 5.47552771E+00;
  COFD[4662] = -4.57173951E-01;
  COFD[4663] = 1.82791721E-02;
  COFD[4664] = -1.59785605E+01;
  COFD[4665] = 2.03061309E+00;
  COFD[4666] = 7.09547643E-02;
  COFD[4667] = -7.74512315E-03;
  COFD[4668] = -2.29034442E+01;
  COFD[4669] = 5.61183042E+00;
  COFD[4670] = -4.90566396E-01;
  COFD[4671] = 2.03536798E-02;
  COFD[4672] = -2.15260200E+01;
  COFD[4673] = 4.56640766E+00;
  COFD[4674] = -3.07568513E-01;
  COFD[4675] = 1.05437086E-02;
  COFD[4676] = -2.20003434E+01;
  COFD[4677] = 4.90271383E+00;
  COFD[4678] = -3.60896715E-01;
  COFD[4679] = 1.32352181E-02;
  COFD[4680] = -2.05654423E+01;
  COFD[4681] = 4.16804380E+00;
  COFD[4682] = -2.46372859E-01;
  COFD[4683] = 7.52105030E-03;
  COFD[4684] = -2.12918063E+01;
  COFD[4685] = 4.48188359E+00;
  COFD[4686] = -2.94414571E-01;
  COFD[4687] = 9.88838906E-03;
  COFD[4688] = -1.73379092E+01;
  COFD[4689] = 2.55561949E+00;
  COFD[4690] = -5.90530207E-03;
  COFD[4691] = -4.09393782E-03;
  COFD[4692] = -2.12290046E+01;
  COFD[4693] = 4.32707381E+00;
  COFD[4694] = -2.70563830E-01;
  COFD[4695] = 8.70791456E-03;
  COFD[4696] = -2.12391730E+01;
  COFD[4697] = 4.32707381E+00;
  COFD[4698] = -2.70563830E-01;
  COFD[4699] = 8.70791456E-03;
  COFD[4700] = -1.94433367E+01;
  COFD[4701] = 3.38805125E+00;
  COFD[4702] = -1.28605694E-01;
  COFD[4703] = 1.78139928E-03;
  COFD[4704] = -1.94364373E+01;
  COFD[4705] = 3.38805125E+00;
  COFD[4706] = -1.28605694E-01;
  COFD[4707] = 1.78139928E-03;
  COFD[4708] = -1.94436482E+01;
  COFD[4709] = 3.38805125E+00;
  COFD[4710] = -1.28605694E-01;
  COFD[4711] = 1.78139928E-03;
  COFD[4712] = -1.75400768E+01;
  COFD[4713] = 2.45372496E+00;
  COFD[4714] = 9.16587873E-03;
  COFD[4715] = -4.81554146E-03;
  COFD[4716] = -1.75455525E+01;
  COFD[4717] = 2.45372496E+00;
  COFD[4718] = 9.16587873E-03;
  COFD[4719] = -4.81554146E-03;
  COFD[4720] = -1.66106763E+01;
  COFD[4721] = 1.97256518E+00;
  COFD[4722] = 7.93547823E-02;
  COFD[4723] = -8.14046199E-03;
  COFD[4724] = -1.56831472E+01;
  COFD[4725] = 1.51210139E+00;
  COFD[4726] = 1.45705555E-01;
  COFD[4727] = -1.12527582E-02;
  COFD[4728] = -1.48245663E+01;
  COFD[4729] = 1.09196780E+00;
  COFD[4730] = 2.05935790E-01;
  COFD[4731] = -1.40664564E-02;
  COFD[4732] = -1.40894144E+01;
  COFD[4733] = 7.31458802E-01;
  COFD[4734] = 2.57430647E-01;
  COFD[4735] = -1.64638268E-02;
  COFD[4736] = -1.40317416E+01;
  COFD[4737] = 6.95865823E-01;
  COFD[4738] = 2.62499652E-01;
  COFD[4739] = -1.66993047E-02;
  COFD[4740] = -1.34919805E+01;
  COFD[4741] = 4.34069354E-01;
  COFD[4742] = 2.99858223E-01;
  COFD[4743] = -1.84358359E-02;
  COFD[4744] = -1.24841063E+01;
  COFD[4745] = -6.86597662E-02;
  COFD[4746] = 3.71153707E-01;
  COFD[4747] = -2.17314375E-02;
  COFD[4748] = -1.21103757E+01;
  COFD[4749] = -2.54815099E-01;
  COFD[4750] = 3.97347047E-01;
  COFD[4751] = -2.29334921E-02;
  COFD[4752] = -1.16357512E+01;
  COFD[4753] = -4.81860216E-01;
  COFD[4754] = 4.29406287E-01;
  COFD[4755] = -2.44123168E-02;
  COFD[4756] = -2.28938469E+01;
  COFD[4757] = 5.61204588E+00;
  COFD[4758] = -4.90798632E-01;
  COFD[4759] = 2.03718133E-02;
  COFD[4760] = -2.27628265E+01;
  COFD[4761] = 5.60192583E+00;
  COFD[4762] = -4.91455403E-01;
  COFD[4763] = 2.04776556E-02;
  COFD[4764] = -1.42894603E+01;
  COFD[4765] = 3.67490723E+00;
  COFD[4766] = -2.65114792E-01;
  COFD[4767] = 1.16092671E-02;
  COFD[4768] = -1.40756909E+01;
  COFD[4769] = 3.07549274E+00;
  COFD[4770] = -1.88889344E-01;
  COFD[4771] = 8.37152866E-03;
  COFD[4772] = -1.40949183E+01;
  COFD[4773] = 3.07549274E+00;
  COFD[4774] = -1.88889344E-01;
  COFD[4775] = 8.37152866E-03;
  COFD[4776] = -1.52486292E+01;
  COFD[4777] = 3.35922578E+00;
  COFD[4778] = -2.25181399E-01;
  COFD[4779] = 9.92132878E-03;
  COFD[4780] = -1.16906458E+01;
  COFD[4781] = 2.47469981E+00;
  COFD[4782] = -1.10436257E-01;
  COFD[4783] = 4.95273813E-03;
  COFD[4784] = -2.10643264E+01;
  COFD[4785] = 5.53614864E+00;
  COFD[4786] = -4.86046753E-01;
  COFD[4787] = 2.03659193E-02;
  COFD[4788] = -1.52554785E+01;
  COFD[4789] = 3.35922578E+00;
  COFD[4790] = -2.25181399E-01;
  COFD[4791] = 9.92132878E-03;
  COFD[4792] = -1.52414498E+01;
  COFD[4793] = 3.35922578E+00;
  COFD[4794] = -2.25181399E-01;
  COFD[4795] = 9.92132878E-03;
  COFD[4796] = -1.59633426E+01;
  COFD[4797] = 3.66853818E+00;
  COFD[4798] = -2.64346221E-01;
  COFD[4799] = 1.15784613E-02;
  COFD[4800] = -1.59327344E+01;
  COFD[4801] = 3.65620899E+00;
  COFD[4802] = -2.62933804E-01;
  COFD[4803] = 1.15253223E-02;
  COFD[4804] = -2.04833743E+01;
  COFD[4805] = 5.23112374E+00;
  COFD[4806] = -4.54967682E-01;
  COFD[4807] = 1.93570423E-02;
  COFD[4808] = -1.50031706E+01;
  COFD[4809] = 3.26223357E+00;
  COFD[4810] = -2.12746642E-01;
  COFD[4811] = 9.38912883E-03;
  COFD[4812] = -1.81432499E+01;
  COFD[4813] = 4.37565431E+00;
  COFD[4814] = -3.53906025E-01;
  COFD[4815] = 1.53760786E-02;
  COFD[4816] = -1.76002073E+01;
  COFD[4817] = 4.19171952E+00;
  COFD[4818] = -3.31354810E-01;
  COFD[4819] = 1.44520623E-02;
  COFD[4820] = -1.85864196E+01;
  COFD[4821] = 4.54915847E+00;
  COFD[4822] = -3.75000738E-01;
  COFD[4823] = 1.62324821E-02;
  COFD[4824] = -1.83249359E+01;
  COFD[4825] = 4.42045763E+00;
  COFD[4826] = -3.59451578E-01;
  COFD[4827] = 1.56056164E-02;
  COFD[4828] = -2.02693704E+01;
  COFD[4829] = 5.10426133E+00;
  COFD[4830] = -4.41256919E-01;
  COFD[4831] = 1.88737290E-02;
  COFD[4832] = -1.87434421E+01;
  COFD[4833] = 4.48550694E+00;
  COFD[4834] = -3.67277454E-01;
  COFD[4835] = 1.59194755E-02;
  COFD[4836] = -1.87483223E+01;
  COFD[4837] = 4.48550694E+00;
  COFD[4838] = -3.67277454E-01;
  COFD[4839] = 1.59194755E-02;
  COFD[4840] = -1.98609159E+01;
  COFD[4841] = 4.84231878E+00;
  COFD[4842] = -4.10101001E-01;
  COFD[4843] = 1.76356687E-02;
  COFD[4844] = -1.98580097E+01;
  COFD[4845] = 4.84231878E+00;
  COFD[4846] = -4.10101001E-01;
  COFD[4847] = 1.76356687E-02;
  COFD[4848] = -1.98610465E+01;
  COFD[4849] = 4.84231878E+00;
  COFD[4850] = -4.10101001E-01;
  COFD[4851] = 1.76356687E-02;
  COFD[4852] = -2.07714631E+01;
  COFD[4853] = 5.13381106E+00;
  COFD[4854] = -4.44579059E-01;
  COFD[4855] = 1.89972323E-02;
  COFD[4856] = -2.07735397E+01;
  COFD[4857] = 5.13381106E+00;
  COFD[4858] = -4.44579059E-01;
  COFD[4859] = 1.89972323E-02;
  COFD[4860] = -2.12157081E+01;
  COFD[4861] = 5.24766160E+00;
  COFD[4862] = -4.56882620E-01;
  COFD[4863] = 1.94309393E-02;
  COFD[4864] = -2.16312330E+01;
  COFD[4865] = 5.36160575E+00;
  COFD[4866] = -4.69678973E-01;
  COFD[4867] = 1.99069834E-02;
  COFD[4868] = -2.18580027E+01;
  COFD[4869] = 5.40322773E+00;
  COFD[4870] = -4.72630192E-01;
  COFD[4871] = 1.99360102E-02;
  COFD[4872] = -2.20902743E+01;
  COFD[4873] = 5.45237285E+00;
  COFD[4874] = -4.77075672E-01;
  COFD[4875] = 2.00518642E-02;
  COFD[4876] = -2.21414190E+01;
  COFD[4877] = 5.45978982E+00;
  COFD[4878] = -4.77871946E-01;
  COFD[4879] = 2.00798414E-02;
  COFD[4880] = -2.23702158E+01;
  COFD[4881] = 5.52375635E+00;
  COFD[4882] = -4.84828265E-01;
  COFD[4883] = 2.03285256E-02;
  COFD[4884] = -2.27467840E+01;
  COFD[4885] = 5.59873321E+00;
  COFD[4886] = -4.91665779E-01;
  COFD[4887] = 2.05114831E-02;
  COFD[4888] = -2.28072905E+01;
  COFD[4889] = 5.60504512E+00;
  COFD[4890] = -4.91228535E-01;
  COFD[4891] = 2.04427740E-02;
  COFD[4892] = -2.28938469E+01;
  COFD[4893] = 5.61204588E+00;
  COFD[4894] = -4.90798632E-01;
  COFD[4895] = 2.03718133E-02;
  COFD[4896] = -1.49828551E+01;
  COFD[4897] = 3.25781069E+00;
  COFD[4898] = -2.12199367E-01;
  COFD[4899] = 9.36657283E-03;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 1;
  KTDIF[1] = 5;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = -2.32473219E-01;
  COFTD[1] = 9.16129716E-04;
  COFTD[2] = -3.79155489E-07;
  COFTD[3] = 5.37766351E-11;
  COFTD[4] = 0.00000000E+00;
  COFTD[5] = 0.00000000E+00;
  COFTD[6] = 0.00000000E+00;
  COFTD[7] = 0.00000000E+00;
  COFTD[8] = 2.35281489E-01;
  COFTD[9] = 4.65667373E-04;
  COFTD[10] = -2.60938016E-07;
  COFTD[11] = 4.49268709E-11;
  COFTD[12] = 2.37051899E-01;
  COFTD[13] = 4.69171356E-04;
  COFTD[14] = -2.62901483E-07;
  COFTD[15] = 4.52649298E-11;
  COFTD[16] = 1.80186380E-01;
  COFTD[17] = 6.02880848E-04;
  COFTD[18] = -3.27062078E-07;
  COFTD[19] = 5.50169005E-11;
  COFTD[20] = 1.44152190E-01;
  COFTD[21] = 7.99993584E-05;
  COFTD[22] = -4.89707442E-08;
  COFTD[23] = 9.14277269E-12;
  COFTD[24] = -1.74351746E-01;
  COFTD[25] = 8.62242165E-04;
  COFTD[26] = -3.79543417E-07;
  COFTD[27] = 5.60259034E-11;
  COFTD[28] = 1.80513126E-01;
  COFTD[29] = 6.03974096E-04;
  COFTD[30] = -3.27655164E-07;
  COFTD[31] = 5.51166667E-11;
  COFTD[32] = 1.79839678E-01;
  COFTD[33] = 6.01720824E-04;
  COFTD[34] = -3.26432767E-07;
  COFTD[35] = 5.49110406E-11;
  COFTD[36] = 1.00038655E-01;
  COFTD[37] = 6.50465703E-04;
  COFTD[38] = -3.41777446E-07;
  COFTD[39] = 5.62776574E-11;
  COFTD[40] = 1.05123703E-01;
  COFTD[41] = 6.50663360E-04;
  COFTD[42] = -3.42563171E-07;
  COFTD[43] = 5.64801866E-11;
  COFTD[44] = -1.61357064E-01;
  COFTD[45] = 9.05917454E-04;
  COFTD[46] = -4.07877889E-07;
  COFTD[47] = 6.10624399E-11;
  COFTD[48] = 2.00119185E-01;
  COFTD[49] = 5.64791694E-04;
  COFTD[50] = -3.09444383E-07;
  COFTD[51] = 5.24137469E-11;
  COFTD[52] = -2.00308977E-02;
  COFTD[53] = 8.50438113E-04;
  COFTD[54] = -4.21063477E-07;
  COFTD[55] = 6.67958138E-11;
  COFTD[56] = 1.63244604E-02;
  COFTD[57] = 7.90131000E-04;
  COFTD[58] = -3.98291254E-07;
  COFTD[59] = 6.38849501E-11;
  COFTD[60] = -5.08743421E-02;
  COFTD[61] = 8.54340362E-04;
  COFTD[62] = -4.15925370E-07;
  COFTD[63] = 6.53061561E-11;
  COFTD[64] = -2.72323151E-02;
  COFTD[65] = 8.39182512E-04;
  COFTD[66] = -4.13848987E-07;
  COFTD[67] = 6.54926559E-11;
  COFTD[68] = -1.41799447E-01;
  COFTD[69] = 9.22438273E-04;
  COFTD[70] = -4.23685013E-07;
  COFTD[71] = 6.42120066E-11;
  COFTD[72] = -4.05264355E-02;
  COFTD[73] = 8.65034494E-04;
  COFTD[74] = -4.23754623E-07;
  COFTD[75] = 6.67873033E-11;
  COFTD[76] = -4.05741399E-02;
  COFTD[77] = 8.66052741E-04;
  COFTD[78] = -4.24253431E-07;
  COFTD[79] = 6.68659197E-11;
  COFTD[80] = -1.04600639E-01;
  COFTD[81] = 9.18520347E-04;
  COFTD[82] = -4.33727277E-07;
  COFTD[83] = 6.68515219E-11;
  COFTD[84] = -1.04534832E-01;
  COFTD[85] = 9.17942482E-04;
  COFTD[86] = -4.33454408E-07;
  COFTD[87] = 6.68094638E-11;
  COFTD[88] = -1.04603590E-01;
  COFTD[89] = 9.18546258E-04;
  COFTD[90] = -4.33739512E-07;
  COFTD[91] = 6.68534077E-11;
  COFTD[92] = -1.49470017E-01;
  COFTD[93] = 9.39836937E-04;
  COFTD[94] = -4.29897941E-07;
  COFTD[95] = 6.49890671E-11;
  COFTD[96] = -1.49532693E-01;
  COFTD[97] = 9.40231034E-04;
  COFTD[98] = -4.30078208E-07;
  COFTD[99] = 6.50163186E-11;
  COFTD[100] = -1.70681717E-01;
  COFTD[101] = 9.45804136E-04;
  COFTD[102] = -4.24958076E-07;
  COFTD[103] = 6.35382171E-11;
  COFTD[104] = -1.87225880E-01;
  COFTD[105] = 9.46155112E-04;
  COFTD[106] = -4.18273792E-07;
  COFTD[107] = 6.19098425E-11;
  COFTD[108] = -2.00326797E-01;
  COFTD[109] = 9.43206411E-04;
  COFTD[110] = -4.10815084E-07;
  COFTD[111] = 6.02382335E-11;
  COFTD[112] = -2.10628102E-01;
  COFTD[113] = 9.38318430E-04;
  COFTD[114] = -4.03217097E-07;
  COFTD[115] = 5.86175281E-11;
  COFTD[116] = -2.11550069E-01;
  COFTD[117] = 9.37688881E-04;
  COFTD[118] = -4.02415206E-07;
  COFTD[119] = 5.84513118E-11;
  COFTD[120] = -2.18698457E-01;
  COFTD[121] = 9.32462257E-04;
  COFTD[122] = -3.95892983E-07;
  COFTD[123] = 5.71051456E-11;
  COFTD[124] = -2.30604706E-01;
  COFTD[125] = 9.19203996E-04;
  COFTD[126] = -3.81973633E-07;
  COFTD[127] = 5.43234320E-11;
  COFTD[128] = -2.34683739E-01;
  COFTD[129] = 9.14438684E-04;
  COFTD[130] = -3.76888486E-07;
  COFTD[131] = 5.33062577E-11;
  COFTD[132] = -2.38573600E-01;
  COFTD[133] = 9.07159457E-04;
  COFTD[134] = -3.70373634E-07;
  COFTD[135] = 5.20505995E-11;
  COFTD[136] = 2.01521521E-01;
  COFTD[137] = 5.62743751E-04;
  COFTD[138] = -3.08519054E-07;
  COFTD[139] = 5.22805672E-11;
  COFTD[140] = 1.95741220E-02;
  COFTD[141] = 8.31428465E-04;
  COFTD[142] = -4.19561913E-07;
  COFTD[143] = 6.73417788E-11;
  COFTD[144] = -1.44152190E-01;
  COFTD[145] = -7.99993584E-05;
  COFTD[146] = 4.89707442E-08;
  COFTD[147] = -9.14277269E-12;
  COFTD[148] = 4.06676789E-01;
  COFTD[149] = 3.84699853E-05;
  COFTD[150] = -2.54843294E-08;
  COFTD[151] = 5.86294132E-12;
  COFTD[152] = 4.12890501E-01;
  COFTD[153] = 3.90577773E-05;
  COFTD[154] = -2.58737105E-08;
  COFTD[155] = 5.95252260E-12;
  COFTD[156] = 4.28228101E-01;
  COFTD[157] = 1.20872486E-04;
  COFTD[158] = -7.70263335E-08;
  COFTD[159] = 1.52677960E-11;
  COFTD[160] = 0.00000000E+00;
  COFTD[161] = 0.00000000E+00;
  COFTD[162] = 0.00000000E+00;
  COFTD[163] = 0.00000000E+00;
  COFTD[164] = 2.27466103E-02;
  COFTD[165] = 6.73071543E-04;
  COFTD[166] = -3.40932103E-07;
  COFTD[167] = 5.48493184E-11;
  COFTD[168] = 4.29786829E-01;
  COFTD[169] = 1.21312456E-04;
  COFTD[170] = -7.73067054E-08;
  COFTD[171] = 1.53233700E-11;
  COFTD[172] = 4.26576987E-01;
  COFTD[173] = 1.20406440E-04;
  COFTD[174] = -7.67293441E-08;
  COFTD[175] = 1.52089282E-11;
  COFTD[176] = 3.31188133E-01;
  COFTD[177] = 1.81325042E-04;
  COFTD[178] = -1.11095367E-07;
  COFTD[179] = 2.07634046E-11;
  COFTD[180] = 3.39554500E-01;
  COFTD[181] = 1.79333587E-04;
  COFTD[182] = -1.10134815E-07;
  COFTD[183] = 2.06425572E-11;
  COFTD[184] = 1.22692619E-01;
  COFTD[185] = 6.21274281E-04;
  COFTD[186] = -3.29963157E-07;
  COFTD[187] = 5.47158146E-11;
  COFTD[188] = 4.30602469E-01;
  COFTD[189] = 9.35955212E-05;
  COFTD[190] = -6.03979306E-08;
  COFTD[191] = 1.23114290E-11;
  COFTD[192] = 2.93190141E-01;
  COFTD[193] = 4.01428114E-04;
  COFTD[194] = -2.30704675E-07;
  COFTD[195] = 4.05174676E-11;
  COFTD[196] = 3.05611370E-01;
  COFTD[197] = 3.24503916E-04;
  COFTD[198] = -1.89888419E-07;
  COFTD[199] = 3.38661408E-11;
  COFTD[200] = 2.49016176E-01;
  COFTD[201] = 4.29034331E-04;
  COFTD[202] = -2.42667349E-07;
  COFTD[203] = 4.20799172E-11;
  COFTD[204] = 2.74035711E-01;
  COFTD[205] = 3.96247941E-04;
  COFTD[206] = -2.26856932E-07;
  COFTD[207] = 3.97175174E-11;
  COFTD[208] = 1.59647280E-01;
  COFTD[209] = 6.04189783E-04;
  COFTD[210] = -3.25568248E-07;
  COFTD[211] = 5.45132450E-11;
  COFTD[212] = 2.71945062E-01;
  COFTD[213] = 4.30812732E-04;
  COFTD[214] = -2.45083425E-07;
  COFTD[215] = 4.26911430E-11;
  COFTD[216] = 2.72586795E-01;
  COFTD[217] = 4.31829359E-04;
  COFTD[218] = -2.45661770E-07;
  COFTD[219] = 4.27918850E-11;
  COFTD[220] = 2.11488756E-01;
  COFTD[221] = 5.48043055E-04;
  COFTD[222] = -3.01831774E-07;
  COFTD[223] = 5.13133698E-11;
  COFTD[224] = 2.11222471E-01;
  COFTD[225] = 5.47353014E-04;
  COFTD[226] = -3.01451738E-07;
  COFTD[227] = 5.12487611E-11;
  COFTD[228] = 2.11500700E-01;
  COFTD[229] = 5.48074004E-04;
  COFTD[230] = -3.01848819E-07;
  COFTD[231] = 5.13162676E-11;
  COFTD[232] = 1.58396101E-01;
  COFTD[233] = 6.35597673E-04;
  COFTD[234] = -3.41439546E-07;
  COFTD[235] = 5.70515995E-11;
  COFTD[236] = 1.58529051E-01;
  COFTD[237] = 6.36131164E-04;
  COFTD[238] = -3.41726134E-07;
  COFTD[239] = 5.70994860E-11;
  COFTD[240] = 1.30463447E-01;
  COFTD[241] = 6.81796796E-04;
  COFTD[242] = -3.61585604E-07;
  COFTD[243] = 5.99025499E-11;
  COFTD[244] = 1.05942671E-01;
  COFTD[245] = 7.18848555E-04;
  COFTD[246] = -3.77076057E-07;
  COFTD[247] = 6.20225689E-11;
  COFTD[248] = 8.44926326E-02;
  COFTD[249] = 7.49323727E-04;
  COFTD[250] = -3.89336188E-07;
  COFTD[251] = 6.36479819E-11;
  COFTD[252] = 6.60203320E-02;
  COFTD[253] = 7.74269824E-04;
  COFTD[254] = -3.99007487E-07;
  COFTD[255] = 6.48893661E-11;
  COFTD[256] = 6.42551462E-02;
  COFTD[257] = 7.76497976E-04;
  COFTD[258] = -3.99842171E-07;
  COFTD[259] = 6.49928891E-11;
  COFTD[260] = 5.02866745E-02;
  COFTD[261] = 7.94635109E-04;
  COFTD[262] = -4.06630112E-07;
  COFTD[263] = 6.58364054E-11;
  COFTD[264] = 2.42287950E-02;
  COFTD[265] = 8.26439872E-04;
  COFTD[266] = -4.17936294E-07;
  COFTD[267] = 6.71697638E-11;
  COFTD[268] = 1.49563336E-02;
  COFTD[269] = 8.39180881E-04;
  COFTD[270] = -4.22562254E-07;
  COFTD[271] = 6.77329243E-11;
  COFTD[272] = 4.65223723E-03;
  COFTD[273] = 8.50497228E-04;
  COFTD[274] = -4.26212406E-07;
  COFTD[275] = 6.81161229E-11;
  COFTD[276] = 4.31330748E-01;
  COFTD[277] = 9.20535689E-05;
  COFTD[278] = -5.94508898E-08;
  COFTD[279] = 1.21437846E-11;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[35];
  amrex::Real SIG[35];
  amrex::Real wt[35];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: NC12H26
  Tci[0] = 1.316 * EPS[0];
  ai[0] = (5.55 * avogadro * avogadro * EPS[0] * boltzmann * 1e-24 * SIG[0] *
           SIG[0] * SIG[0]) /
          (wt[0] * wt[0]);
  bi[0] = 0.855 * avogadro * 1e-24 * SIG[0] * SIG[0] * SIG[0] / (wt[0]);
  acentric_i[0] = 0.0;

  // species 1: H
  Tci[1] = 1.316 * EPS[1];
  ai[1] = (5.55 * avogadro * avogadro * EPS[1] * boltzmann * 1e-24 * SIG[1] *
           SIG[1] * SIG[1]) /
          (wt[1] * wt[1]);
  bi[1] = 0.855 * avogadro * 1e-24 * SIG[1] * SIG[1] * SIG[1] / (wt[1]);
  acentric_i[1] = 0.0;

  // species 2: O
  Tci[2] = 1.316 * EPS[2];
  ai[2] = (5.55 * avogadro * avogadro * EPS[2] * boltzmann * 1e-24 * SIG[2] *
           SIG[2] * SIG[2]) /
          (wt[2] * wt[2]);
  bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]);
  acentric_i[2] = 0.0;

  // species 3: OH
  Tci[3] = 1.316 * EPS[3];
  ai[3] = (5.55 * avogadro * avogadro * EPS[3] * boltzmann * 1e-24 * SIG[3] *
           SIG[3] * SIG[3]) /
          (wt[3] * wt[3]);
  bi[3] = 0.855 * avogadro * 1e-24 * SIG[3] * SIG[3] * SIG[3] / (wt[3]);
  acentric_i[3] = 0.0;

  // species 4: HO2
  Tci[4] = 1.316 * EPS[4];
  ai[4] = (5.55 * avogadro * avogadro * EPS[4] * boltzmann * 1e-24 * SIG[4] *
           SIG[4] * SIG[4]) /
          (wt[4] * wt[4]);
  bi[4] = 0.855 * avogadro * 1e-24 * SIG[4] * SIG[4] * SIG[4] / (wt[4]);
  acentric_i[4] = 0.0;

  // species 5: H2
  // Imported from NIST
  Tci[5] = 33.145000;
  ai[5] = 1e6 * 0.42748 * Rcst * Rcst * Tci[5] * Tci[5] /
          (2.015880 * 2.015880 * 12.964000);
  bi[5] = 0.08664 * Rcst * Tci[5] / (2.015880 * 12.964000);
  acentric_i[5] = -0.219000;

  // species 6: H2O
  // Imported from NIST
  Tci[6] = 647.096000;
  ai[6] = 1e6 * 0.42748 * Rcst * Rcst * Tci[6] * Tci[6] /
          (18.015340 * 18.015340 * 220.640000);
  bi[6] = 0.08664 * Rcst * Tci[6] / (18.015340 * 220.640000);
  acentric_i[6] = 0.344300;

  // species 7: H2O2
  Tci[7] = 1.316 * EPS[7];
  ai[7] = (5.55 * avogadro * avogadro * EPS[7] * boltzmann * 1e-24 * SIG[7] *
           SIG[7] * SIG[7]) /
          (wt[7] * wt[7]);
  bi[7] = 0.855 * avogadro * 1e-24 * SIG[7] * SIG[7] * SIG[7] / (wt[7]);
  acentric_i[7] = 0.0;

  // species 8: O2
  // Imported from NIST
  Tci[8] = 154.581000;
  ai[8] = 1e6 * 0.42748 * Rcst * Rcst * Tci[8] * Tci[8] /
          (31.998800 * 31.998800 * 50.430466);
  bi[8] = 0.08664 * Rcst * Tci[8] / (31.998800 * 50.430466);
  acentric_i[8] = 0.022200;

  // species 9: CH3
  Tci[9] = 1.316 * EPS[9];
  ai[9] = (5.55 * avogadro * avogadro * EPS[9] * boltzmann * 1e-24 * SIG[9] *
           SIG[9] * SIG[9]) /
          (wt[9] * wt[9]);
  bi[9] = 0.855 * avogadro * 1e-24 * SIG[9] * SIG[9] * SIG[9] / (wt[9]);
  acentric_i[9] = 0.0;

  // species 10: CH4
  // Imported from NIST
  Tci[10] = 190.560000;
  ai[10] = 1e6 * 0.42748 * Rcst * Rcst * Tci[10] * Tci[10] /
           (16.043030 * 16.043030 * 45.990000);
  bi[10] = 0.08664 * Rcst * Tci[10] / (16.043030 * 45.990000);
  acentric_i[10] = 0.011000;

  // species 11: CH2O
  Tci[11] = 1.316 * EPS[11];
  ai[11] = (5.55 * avogadro * avogadro * EPS[11] * boltzmann * 1e-24 * SIG[11] *
            SIG[11] * SIG[11]) /
           (wt[11] * wt[11]);
  bi[11] = 0.855 * avogadro * 1e-24 * SIG[11] * SIG[11] * SIG[11] / (wt[11]);
  acentric_i[11] = 0.0;

  // species 12: CO
  // Imported from NIST
  Tci[12] = 132.850000;
  ai[12] = 1e6 * 0.42748 * Rcst * Rcst * Tci[12] * Tci[12] /
           (28.010000 * 28.010000 * 34.940000);
  bi[12] = 0.08664 * Rcst * Tci[12] / (28.010000 * 34.940000);
  acentric_i[12] = 0.045000;

  // species 13: CO2
  // Imported from NIST
  Tci[13] = 304.120000;
  ai[13] = 1e6 * 0.42748 * Rcst * Rcst * Tci[13] * Tci[13] /
           (44.009950 * 44.009950 * 73.740000);
  bi[13] = 0.08664 * Rcst * Tci[13] / (44.009950 * 73.740000);
  acentric_i[13] = 0.225000;

  // species 14: C2H2
  // Imported from NIST
  Tci[14] = 308.300000;
  ai[14] = 1e6 * 0.42748 * Rcst * Rcst * Tci[14] * Tci[14] /
           (26.038000 * 26.038000 * 61.140000);
  bi[14] = 0.08664 * Rcst * Tci[14] / (26.038000 * 61.140000);
  acentric_i[14] = 0.189000;

  // species 15: C2H4
  // Imported from NIST
  Tci[15] = 282.340000;
  ai[15] = 1e6 * 0.42748 * Rcst * Rcst * Tci[15] * Tci[15] /
           (28.054000 * 28.054000 * 50.410000);
  bi[15] = 0.08664 * Rcst * Tci[15] / (28.054000 * 50.410000);
  acentric_i[15] = 0.087000;

  // species 16: C2H6
  // Imported from NIST
  Tci[16] = 305.320000;
  ai[16] = 1e6 * 0.42748 * Rcst * Rcst * Tci[16] * Tci[16] /
           (30.070120 * 30.070120 * 48.720000);
  bi[16] = 0.08664 * Rcst * Tci[16] / (30.070120 * 48.720000);
  acentric_i[16] = 0.099000;

  // species 17: CH2CHO
  Tci[17] = 1.316 * EPS[17];
  ai[17] = (5.55 * avogadro * avogadro * EPS[17] * boltzmann * 1e-24 * SIG[17] *
            SIG[17] * SIG[17]) /
           (wt[17] * wt[17]);
  bi[17] = 0.855 * avogadro * 1e-24 * SIG[17] * SIG[17] * SIG[17] / (wt[17]);
  acentric_i[17] = 0.0;

  // species 18: aC3H5
  Tci[18] = 1.316 * EPS[18];
  ai[18] = (5.55 * avogadro * avogadro * EPS[18] * boltzmann * 1e-24 * SIG[18] *
            SIG[18] * SIG[18]) /
           (wt[18] * wt[18]);
  bi[18] = 0.855 * avogadro * 1e-24 * SIG[18] * SIG[18] * SIG[18] / (wt[18]);
  acentric_i[18] = 0.0;

  // species 19: C3H6
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: C2H3CHO
  Tci[20] = 1.316 * EPS[20];
  ai[20] = (5.55 * avogadro * avogadro * EPS[20] * boltzmann * 1e-24 * SIG[20] *
            SIG[20] * SIG[20]) /
           (wt[20] * wt[20]);
  bi[20] = 0.855 * avogadro * 1e-24 * SIG[20] * SIG[20] * SIG[20] / (wt[20]);
  acentric_i[20] = 0.0;

  // species 21: C4H7
  Tci[21] = 1.316 * EPS[21];
  ai[21] = (5.55 * avogadro * avogadro * EPS[21] * boltzmann * 1e-24 * SIG[21] *
            SIG[21] * SIG[21]) /
           (wt[21] * wt[21]);
  bi[21] = 0.855 * avogadro * 1e-24 * SIG[21] * SIG[21] * SIG[21] / (wt[21]);
  acentric_i[21] = 0.0;

  // species 22: C4H81
  Tci[22] = 1.316 * EPS[22];
  ai[22] = (5.55 * avogadro * avogadro * EPS[22] * boltzmann * 1e-24 * SIG[22] *
            SIG[22] * SIG[22]) /
           (wt[22] * wt[22]);
  bi[22] = 0.855 * avogadro * 1e-24 * SIG[22] * SIG[22] * SIG[22] / (wt[22]);
  acentric_i[22] = 0.0;

  // species 23: C5H9
  Tci[23] = 1.316 * EPS[23];
  ai[23] = (5.55 * avogadro * avogadro * EPS[23] * boltzmann * 1e-24 * SIG[23] *
            SIG[23] * SIG[23]) /
           (wt[23] * wt[23]);
  bi[23] = 0.855 * avogadro * 1e-24 * SIG[23] * SIG[23] * SIG[23] / (wt[23]);
  acentric_i[23] = 0.0;

  // species 24: C5H10
  Tci[24] = 1.316 * EPS[24];
  ai[24] = (5.55 * avogadro * avogadro * EPS[24] * boltzmann * 1e-24 * SIG[24] *
            SIG[24] * SIG[24]) /
           (wt[24] * wt[24]);
  bi[24] = 0.855 * avogadro * 1e-24 * SIG[24] * SIG[24] * SIG[24] / (wt[24]);
  acentric_i[24] = 0.0;

  // species 25: C6H12
  Tci[25] = 1.316 * EPS[25];
  ai[25] = (5.55 * avogadro * avogadro * EPS[25] * boltzmann * 1e-24 * SIG[25] *
            SIG[25] * SIG[25]) /
           (wt[25] * wt[25]);
  bi[25] = 0.855 * avogadro * 1e-24 * SIG[25] * SIG[25] * SIG[25] / (wt[25]);
  acentric_i[25] = 0.0;

  // species 26: C7H14
  Tci[26] = 1.316 * EPS[26];
  ai[26] = (5.55 * avogadro * avogadro * EPS[26] * boltzmann * 1e-24 * SIG[26] *
            SIG[26] * SIG[26]) /
           (wt[26] * wt[26]);
  bi[26] = 0.855 * avogadro * 1e-24 * SIG[26] * SIG[26] * SIG[26] / (wt[26]);
  acentric_i[26] = 0.0;

  // species 27: C8H16
  Tci[27] = 1.316 * EPS[27];
  ai[27] = (5.55 * avogadro * avogadro * EPS[27] * boltzmann * 1e-24 * SIG[27] *
            SIG[27] * SIG[27]) /
           (wt[27] * wt[27]);
  bi[27] = 0.855 * avogadro * 1e-24 * SIG[27] * SIG[27] * SIG[27] / (wt[27]);
  acentric_i[27] = 0.0;

  // species 28: C9H18
  Tci[28] = 1.316 * EPS[28];
  ai[28] = (5.55 * avogadro * avogadro * EPS[28] * boltzmann * 1e-24 * SIG[28] *
            SIG[28] * SIG[28]) /
           (wt[28] * wt[28]);
  bi[28] = 0.855 * avogadro * 1e-24 * SIG[28] * SIG[28] * SIG[28] / (wt[28]);
  acentric_i[28] = 0.0;

  // species 29: PXC9H19
  Tci[29] = 1.316 * EPS[29];
  ai[29] = (5.55 * avogadro * avogadro * EPS[29] * boltzmann * 1e-24 * SIG[29] *
            SIG[29] * SIG[29]) /
           (wt[29] * wt[29]);
  bi[29] = 0.855 * avogadro * 1e-24 * SIG[29] * SIG[29] * SIG[29] / (wt[29]);
  acentric_i[29] = 0.0;

  // species 30: C10H20
  Tci[30] = 1.316 * EPS[30];
  ai[30] = (5.55 * avogadro * avogadro * EPS[30] * boltzmann * 1e-24 * SIG[30] *
            SIG[30] * SIG[30]) /
           (wt[30] * wt[30]);
  bi[30] = 0.855 * avogadro * 1e-24 * SIG[30] * SIG[30] * SIG[30] / (wt[30]);
  acentric_i[30] = 0.0;

  // species 31: C12H24
  Tci[31] = 1.316 * EPS[31];
  ai[31] = (5.55 * avogadro * avogadro * EPS[31] * boltzmann * 1e-24 * SIG[31] *
            SIG[31] * SIG[31]) /
           (wt[31] * wt[31]);
  bi[31] = 0.855 * avogadro * 1e-24 * SIG[31] * SIG[31] * SIG[31] / (wt[31]);
  acentric_i[31] = 0.0;

  // species 32: C12H25O2
  Tci[32] = 1.316 * EPS[32];
  ai[32] = (5.55 * avogadro * avogadro * EPS[32] * boltzmann * 1e-24 * SIG[32] *
            SIG[32] * SIG[32]) /
           (wt[32] * wt[32]);
  bi[32] = 0.855 * avogadro * 1e-24 * SIG[32] * SIG[32] * SIG[32] / (wt[32]);
  acentric_i[32] = 0.0;

  // species 33: OC12H23OOH
  Tci[33] = 1.316 * EPS[33];
  ai[33] = (5.55 * avogadro * avogadro * EPS[33] * boltzmann * 1e-24 * SIG[33] *
            SIG[33] * SIG[33]) /
           (wt[33] * wt[33]);
  bi[33] = 0.855 * avogadro * 1e-24 * SIG[33] * SIG[33] * SIG[33] / (wt[33]);
  acentric_i[33] = 0.0;

  // species 34: N2
  // Imported from NIST
  Tci[34] = 126.192000;
  ai[34] = 1e6 * 0.42748 * Rcst * Rcst * Tci[34] * Tci[34] /
           (28.013400 * 28.013400 * 33.958000);
  bi[34] = 0.08664 * Rcst * Tci[34] / (28.013400 * 33.958000);
  acentric_i[34] = 0.037200;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif
